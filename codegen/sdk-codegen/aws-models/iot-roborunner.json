{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.iotroborunner#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": " User does not have sufficient access to perform this action.\t",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.iotroborunner#CartesianCoordinates": {
      "type": "structure",
      "members": {
        "x": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "X coordinate.",
            "smithy.api#required": {}
          }
        },
        "y": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "Y coordinate.",
            "smithy.api#required": {}
          }
        },
        "z": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "Z coordinate."
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "Cartesian coordinates in 3D space relative to the RoboRunner origin."
      }
    },
    "com.amazonaws.iotroborunner#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if a resource in a create request already exists.",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.iotroborunner#CreateDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#CreateDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#CreateDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to create a destination",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/createDestination"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotroborunner#CreateDestinationRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.iotroborunner#IdempotencyToken",
          "traits": {
            "smithy.api#idempotencyToken": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#documentation": "The state of the destination. Default used if not specified."
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateDestinationResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#DestinationArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateSite": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#CreateSiteRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#CreateSiteResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to create a site",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/createSite"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotroborunner#CreateSiteRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.iotroborunner#IdempotencyToken",
          "traits": {
            "smithy.api#idempotencyToken": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "countryCode": {
          "target": "com.amazonaws.iotroborunner#SiteCountryCode",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.iotroborunner#SiteDescription"
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateSiteResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateWorker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#CreateWorkerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#CreateWorkerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to create a worker",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/createWorker"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotroborunner#CreateWorkerFleet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#CreateWorkerFleetRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#CreateWorkerFleetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to create a worker fleet",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/createWorkerFleet"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotroborunner#CreateWorkerFleetRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.iotroborunner#IdempotencyToken",
          "traits": {
            "smithy.api#idempotencyToken": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "siteId"
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateWorkerFleetResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateWorkerRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.iotroborunner#IdempotencyToken",
          "traits": {
            "smithy.api#idempotencyToken": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "fleet": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson"
        },
        "vendorProperties": {
          "target": "com.amazonaws.iotroborunner#VendorProperties"
        },
        "position": {
          "target": "com.amazonaws.iotroborunner#PositionCoordinates"
        },
        "orientation": {
          "target": "com.amazonaws.iotroborunner#Orientation"
        }
      }
    },
    "com.amazonaws.iotroborunner#CreateWorkerResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#CreatedAtTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#documentation": "Timestamp at which the resource was created."
      }
    },
    "com.amazonaws.iotroborunner#DeleteDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#DeleteDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#DeleteDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to delete a destination",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/deleteDestination"
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteDestinationRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationGenericIdentifier",
          "traits": {
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "id"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteDestinationResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.iotroborunner#DeleteSite": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#DeleteSiteRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#DeleteSiteResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to delete a site",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/deleteSite"
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteSiteRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "siteId"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteSiteResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.iotroborunner#DeleteWorker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#DeleteWorkerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#DeleteWorkerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to delete a worker",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/deleteWorker"
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteWorkerFleet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#DeleteWorkerFleetRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#DeleteWorkerFleetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ConflictException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to delete a worker fleet",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/deleteWorkerFleet"
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteWorkerFleetRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteWorkerFleetResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.iotroborunner#DeleteWorkerRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#DeleteWorkerResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.iotroborunner#Destination": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#DestinationArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties"
        }
      },
      "traits": {
        "smithy.api#documentation": "Area within a facility where work can be performed."
      }
    },
    "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON document containing additional fixed properties regarding the destination",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#DestinationArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.iotroborunner#IoTRoboRunner",
          "resource": "com.amazonaws.iotroborunner#DestinationResource"
        },
        "smithy.api#documentation": "Destination ARN.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:destination/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/destination/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#DestinationGenericIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Destination ARN.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:destination/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/destination/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#DestinationId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Filters access by the destination's identifier",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#DestinationResource": {
      "type": "resource",
      "identifiers": {
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotroborunner#CreateDestination"
      },
      "read": {
        "target": "com.amazonaws.iotroborunner#GetDestination"
      },
      "update": {
        "target": "com.amazonaws.iotroborunner#UpdateDestination"
      },
      "list": {
        "target": "com.amazonaws.iotroborunner#ListDestinations"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotroborunner#DeleteDestination"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "{id}",
          "absolute": true
        },
        "smithy.api#documentation": "Represents a Destination that defines a location within a Site"
      }
    },
    "com.amazonaws.iotroborunner#DestinationState": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "State of the destination.",
        "smithy.api#enum": [
          {
            "value": "ENABLED",
            "name": "ENABLED"
          },
          {
            "value": "DISABLED",
            "name": "DISABLED"
          },
          {
            "value": "DECOMMISSIONED",
            "name": "DECOMMISSIONED"
          }
        ]
      }
    },
    "com.amazonaws.iotroborunner#Destinations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotroborunner#Destination"
      },
      "traits": {
        "smithy.api#documentation": "List of destinations."
      }
    },
    "com.amazonaws.iotroborunner#GetDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#GetDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#GetDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to get a destination",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/getDestination"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#GetDestinationRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "id",
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "id"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#GetDestinationResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#DestinationArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#GetSite": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#GetSiteRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#GetSiteResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to get a site",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/getSite"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#GetSiteRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "id",
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "siteId"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#GetSiteResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "countryCode": {
          "target": "com.amazonaws.iotroborunner#SiteCountryCode",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.iotroborunner#SiteDescription"
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#GetWorker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#GetWorkerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#GetWorkerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to get a worker",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/getWorker"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#GetWorkerFleet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#GetWorkerFleetRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#GetWorkerFleetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to get a worker fleet",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/getWorkerFleet"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#GetWorkerFleetRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "id",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#GetWorkerFleetResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#GetWorkerRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "id",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#GetWorkerResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "fleet": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson"
        },
        "vendorProperties": {
          "target": "com.amazonaws.iotroborunner#VendorProperties"
        },
        "position": {
          "target": "com.amazonaws.iotroborunner#PositionCoordinates"
        },
        "orientation": {
          "target": "com.amazonaws.iotroborunner#Orientation"
        }
      }
    },
    "com.amazonaws.iotroborunner#IdempotencyToken": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Token used for detecting replayed requests. Replayed requests will not be performed multiple times.",
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[!-~]*$"
      }
    },
    "com.amazonaws.iotroborunner#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if something goes wrong within the service.",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.iotroborunner#IoTRoboRunner": {
      "type": "service",
      "version": "2018-05-10",
      "operations": [
        {
          "target": "com.amazonaws.iotroborunner#CreateWorker"
        },
        {
          "target": "com.amazonaws.iotroborunner#DeleteWorker"
        },
        {
          "target": "com.amazonaws.iotroborunner#DeleteWorkerFleet"
        },
        {
          "target": "com.amazonaws.iotroborunner#GetWorker"
        },
        {
          "target": "com.amazonaws.iotroborunner#GetWorkerFleet"
        },
        {
          "target": "com.amazonaws.iotroborunner#ListWorkers"
        },
        {
          "target": "com.amazonaws.iotroborunner#UpdateWorker"
        },
        {
          "target": "com.amazonaws.iotroborunner#UpdateWorkerFleet"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.iotroborunner#DestinationResource"
        },
        {
          "target": "com.amazonaws.iotroborunner#SiteResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "IoT RoboRunner",
          "arnNamespace": "iotroborunner",
          "endpointPrefix": "iotroborunner",
          "cloudTrailEventSource": "iotroborunner.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "iotroborunner"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "*",
            "authorization",
            "date",
            "x-amz-date",
            "x-amz-security-token",
            "x-amz-target",
            "content-type",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-platform-id",
            "x-amzn-trace-id",
            "amz-sdk-invocation-id",
            "amz-sdk-request"
          ],
          "additionalExposedHeaders": [
            "x-amzn-errortype",
            "x-amzn-requestid",
            "x-amzn-errormessage",
            "x-amzn-trace-id",
            "x-amz-apigw-id",
            "date"
          ]
        },
        "smithy.api#documentation": "An example service, deployed with the Octane Service creator,\nwhich will echo the string",
        "smithy.api#title": "AWS IoT RoboRunner",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://iotroborunner-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://iotroborunner-fips.{Region}.{PartitionResult#dnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://iotroborunner.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://iotroborunner.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-gov-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-gov-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-gov-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-gov-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "cn-north-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "cn-north-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "cn-north-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "cn-north-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-iso-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-iso-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-iso-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-iso-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-east-1.api.aws"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-isob-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-isob-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-isob-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://iotroborunner.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-isob-east-1",
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-east-1",
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "UseFIPS": true,
                "Region": "us-east-1",
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "UseFIPS": false,
                "Region": "us-east-1",
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.iotroborunner#ListDestinations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#ListDestinationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#ListDestinationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to list destinations",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/listDestinations"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "destinations"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#ListDestinationsRequest": {
      "type": "structure",
      "members": {
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "site",
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "com.amazonaws.iotroborunner#PageSize",
          "traits": {
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken",
          "traits": {
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#httpQuery": "state"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#ListDestinationsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken"
        },
        "destinations": {
          "target": "com.amazonaws.iotroborunner#Destinations"
        }
      }
    },
    "com.amazonaws.iotroborunner#ListSites": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#ListSitesRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#ListSitesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to list sites",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/listSites"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "sites"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#ListSitesPageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "Maximum number of results to retrieve in a single ListSites call.",
        "smithy.api#range": {
          "min": 1,
          "max": 25
        }
      }
    },
    "com.amazonaws.iotroborunner#ListSitesRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.iotroborunner#ListSitesPageSize",
          "traits": {
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken",
          "traits": {
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#ListSitesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken"
        },
        "sites": {
          "target": "com.amazonaws.iotroborunner#Sites"
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkerFleets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#ListWorkerFleetsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#ListWorkerFleetsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to list worker fleets",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/listWorkerFleets"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "workerFleets"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#ListWorkerFleetsPageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "Maximum number of results to retrieve in a single ListWorkerFleets call.",
        "smithy.api#range": {
          "min": 1,
          "max": 25
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkerFleetsRequest": {
      "type": "structure",
      "members": {
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "site",
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "siteId"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.iotroborunner#ListWorkerFleetsPageSize",
          "traits": {
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken",
          "traits": {
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkerFleetsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken"
        },
        "workerFleets": {
          "target": "com.amazonaws.iotroborunner#WorkerFleets"
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#ListWorkersRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#ListWorkersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to list workers",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/listWorkers"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "workers"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotroborunner#ListWorkersPageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "Maximum number of results to retrieve in a single ListWorkers call.",
        "smithy.api#range": {
          "min": 1,
          "max": 25
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkersRequest": {
      "type": "structure",
      "members": {
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "site",
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "com.amazonaws.iotroborunner#ListWorkersPageSize",
          "traits": {
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken",
          "traits": {
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "fleet": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier",
          "traits": {
            "smithy.api#httpQuery": "fleet"
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#ListWorkersResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.iotroborunner#PaginationToken"
        },
        "workers": {
          "target": "com.amazonaws.iotroborunner#Workers"
        }
      }
    },
    "com.amazonaws.iotroborunner#Name": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Human friendly name of the resource.",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#Orientation": {
      "type": "union",
      "members": {
        "degrees": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "Degrees, limited on [0, 360)",
            "smithy.api#range": {
              "min": 0,
              "max": 360
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "Worker orientation measured in units clockwise from north."
      }
    },
    "com.amazonaws.iotroborunner#PageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "Maximum number of results to retrieve in a single call.",
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.iotroborunner#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Pagination token returned when another page of data exists. Provide it in your next call to the API to receive\nthe next page.",
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "[a-zA-Z0-9_.-/+=]*"
      }
    },
    "com.amazonaws.iotroborunner#PositionCoordinates": {
      "type": "union",
      "members": {
        "cartesianCoordinates": {
          "target": "com.amazonaws.iotroborunner#CartesianCoordinates",
          "traits": {
            "smithy.api#documentation": "Cartesian coordinates."
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "Supported coordinates for worker position."
      }
    },
    "com.amazonaws.iotroborunner#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if a resource referenced in the request doesn't exist.",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.iotroborunner#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if the user's AWS account has reached a service limit and the operation cannot proceed.",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.iotroborunner#Site": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#documentation": "The name of the site. Mutable after creation and unique within a given account.",
            "smithy.api#required": {}
          }
        },
        "countryCode": {
          "target": "com.amazonaws.iotroborunner#SiteCountryCode",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "Facility containing destinations, workers, activities, and tasks."
      }
    },
    "com.amazonaws.iotroborunner#SiteArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.iotroborunner#IoTRoboRunner",
          "resource": "com.amazonaws.iotroborunner#SiteResource"
        },
        "smithy.api#documentation": "Site ARN.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#SiteCountryCode": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "A valid ISO 3166-1 alpha-2 code for the country in which the site resides. e.g., US.",
        "smithy.api#length": {
          "min": 2,
          "max": 2
        },
        "smithy.api#pattern": "^[a-zA-Z]{2}$"
      }
    },
    "com.amazonaws.iotroborunner#SiteDescription": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "A high-level description of the site.",
        "smithy.api#length": {
          "min": 0,
          "max": 140
        }
      }
    },
    "com.amazonaws.iotroborunner#SiteGenericIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Site ARN.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#SiteId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Filters access by the site's identifier",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#SiteResource": {
      "type": "resource",
      "identifiers": {
        "siteId": {
          "target": "com.amazonaws.iotroborunner#SiteId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotroborunner#CreateSite"
      },
      "read": {
        "target": "com.amazonaws.iotroborunner#GetSite"
      },
      "update": {
        "target": "com.amazonaws.iotroborunner#UpdateSite"
      },
      "list": {
        "target": "com.amazonaws.iotroborunner#ListSites"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotroborunner#DeleteSite"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.iotroborunner#WorkerFleetResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "site/{siteId}",
          "absolute": true
        },
        "smithy.api#documentation": "Represents a Site where work is being performed"
      }
    },
    "com.amazonaws.iotroborunner#Sites": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotroborunner#Site"
      },
      "traits": {
        "smithy.api#documentation": "List of facilities."
      }
    },
    "com.amazonaws.iotroborunner#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if the api has been called too quickly be the client.",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#UpdateDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#UpdateDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to update a destination",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/updateDestination"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateDestinationRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationGenericIdentifier",
          "traits": {
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "id"
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name"
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateDestinationResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#DestinationArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#DestinationId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.iotroborunner#DestinationState",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#DestinationAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateSite": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#UpdateSiteRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#UpdateSiteResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to update a site",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/updateSite"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateSiteRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteGenericIdentifier",
          "traits": {
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "siteId"
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name"
        },
        "countryCode": {
          "target": "com.amazonaws.iotroborunner#SiteCountryCode"
        },
        "description": {
          "target": "com.amazonaws.iotroborunner#SiteDescription"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateSiteResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#SiteId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "countryCode": {
          "target": "com.amazonaws.iotroborunner#SiteCountryCode"
        },
        "description": {
          "target": "com.amazonaws.iotroborunner#SiteDescription"
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#UpdateWorkerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#UpdateWorkerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to update a worker",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/updateWorker"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorkerFleet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotroborunner#UpdateWorkerFleetRequest"
      },
      "output": {
        "target": "com.amazonaws.iotroborunner#UpdateWorkerFleetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotroborunner#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotroborunner#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotroborunner#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Grants permission to update a worker fleet",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/updateWorkerFleet"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorkerFleetRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorkerFleetResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorkerRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerGenericIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name"
        },
        "additionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson"
        },
        "vendorProperties": {
          "target": "com.amazonaws.iotroborunner#VendorProperties"
        },
        "position": {
          "target": "com.amazonaws.iotroborunner#PositionCoordinates"
        },
        "orientation": {
          "target": "com.amazonaws.iotroborunner#Orientation"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdateWorkerResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "fleet": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson"
        },
        "orientation": {
          "target": "com.amazonaws.iotroborunner#Orientation"
        },
        "vendorProperties": {
          "target": "com.amazonaws.iotroborunner#VendorProperties"
        },
        "position": {
          "target": "com.amazonaws.iotroborunner#PositionCoordinates"
        }
      }
    },
    "com.amazonaws.iotroborunner#UpdatedAtTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#documentation": "Timestamp at which the resource was last updated."
      }
    },
    "com.amazonaws.iotroborunner#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "Exception thrown if an invalid parameter is provided to an API.",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.iotroborunner#VendorAdditionalFixedPropertiesJson": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#VendorAdditionalTransientPropertiesJson": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON blob containing unstructured vendor properties that are transient and may change during regular operation.",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#VendorProperties": {
      "type": "structure",
      "members": {
        "vendorWorkerId": {
          "target": "com.amazonaws.iotroborunner#VendorWorkerId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "vendorWorkerIpAddress": {
          "target": "com.amazonaws.iotroborunner#VendorWorkerIpAddress"
        },
        "vendorAdditionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#VendorAdditionalTransientPropertiesJson"
        },
        "vendorAdditionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#VendorAdditionalFixedPropertiesJson"
        }
      },
      "traits": {
        "smithy.api#documentation": "Properties of the worker that are provided by the vendor FMS."
      }
    },
    "com.amazonaws.iotroborunner#VendorWorkerId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "The worker ID defined by the vendor FMS.",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#VendorWorkerIpAddress": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "The worker IP address defined by the vendor FMS.",
        "smithy.api#length": {
          "min": 1,
          "max": 45
        }
      }
    },
    "com.amazonaws.iotroborunner#Worker": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "fleet": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalTransientProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson"
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson"
        },
        "vendorProperties": {
          "target": "com.amazonaws.iotroborunner#VendorProperties"
        },
        "position": {
          "target": "com.amazonaws.iotroborunner#PositionCoordinates"
        },
        "orientation": {
          "target": "com.amazonaws.iotroborunner#Orientation"
        }
      },
      "traits": {
        "smithy.api#documentation": "A unit capable of performing tasks."
      }
    },
    "com.amazonaws.iotroborunner#WorkerAdditionalFixedPropertiesJson": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON blob containing unstructured worker properties that are fixed and won't change during regular operation.",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#WorkerAdditionalTransientPropertiesJson": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON blob containing unstructured worker properties that are transient and may change during regular operation.",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#WorkerArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.iotroborunner#IoTRoboRunner",
          "resource": "com.amazonaws.iotroborunner#WorkerResource"
        },
        "smithy.api#documentation": "Full ARN of the worker.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker-fleet/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleet": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotroborunner#Name",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "site": {
          "target": "com.amazonaws.iotroborunner#SiteArn",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "com.amazonaws.iotroborunner#CreatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.iotroborunner#UpdatedAtTimestamp",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "additionalFixedProperties": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties"
        }
      },
      "traits": {
        "smithy.api#documentation": "A collection of workers organized within a facility."
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleetAdditionalFixedProperties": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "JSON blob containing additional fixed properties regarding the worker fleet",
        "smithy.api#length": {
          "min": 1,
          "max": 131072
        }
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleetArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.iotroborunner#IoTRoboRunner",
          "resource": "com.amazonaws.iotroborunner#WorkerFleetResource"
        },
        "smithy.api#documentation": "Full ARN of the worker fleet.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker-fleet/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleetGenericIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Full ARN of the worker fleet.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker-fleet/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleetId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Filters access by the worker fleet's identifier",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleetResource": {
      "type": "resource",
      "identifiers": {
        "workerFleetId": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId"
        },
        "siteId": {
          "target": "com.amazonaws.iotroborunner#SiteId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotroborunner#CreateWorkerFleet"
      },
      "list": {
        "target": "com.amazonaws.iotroborunner#ListWorkerFleets"
      },
      "resources": [
        {
          "target": "com.amazonaws.iotroborunner#WorkerResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "site/{siteId}/worker-fleet/{workerFleetId}",
          "absolute": true
        },
        "smithy.api#documentation": "Represents a WorkerFleet that operates at a Site and contains Workers"
      }
    },
    "com.amazonaws.iotroborunner#WorkerFleets": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotroborunner#WorkerFleet"
      },
      "traits": {
        "smithy.api#documentation": "List of worker fleets."
      }
    },
    "com.amazonaws.iotroborunner#WorkerGenericIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Full ARN of the worker.",
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotroborunner:[\\w-]+:\\w+:site/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker-fleet/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/worker/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.iotroborunner#WorkerId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Filters access by the workers identifier",
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.iotroborunner#WorkerResource": {
      "type": "resource",
      "identifiers": {
        "workerId": {
          "target": "com.amazonaws.iotroborunner#WorkerId"
        },
        "workerFleetId": {
          "target": "com.amazonaws.iotroborunner#WorkerFleetId"
        },
        "siteId": {
          "target": "com.amazonaws.iotroborunner#SiteId"
        }
      },
      "traits": {
        "aws.api#arn": {
          "template": "site/{siteId}/worker-fleet/{workerFleetId}/worker/{workerId}",
          "absolute": true
        },
        "smithy.api#documentation": "Represents a Worker that performs Actions"
      }
    },
    "com.amazonaws.iotroborunner#Workers": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotroborunner#Worker"
      },
      "traits": {
        "smithy.api#documentation": "List of workers."
      }
    }
  }
}
