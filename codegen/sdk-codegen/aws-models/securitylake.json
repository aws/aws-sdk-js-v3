{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.securitylake#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "errorCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A coded string to provide more information about the access denied exception. You can use the error code to check the exception type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action. Access denied errors appear when Amazon Security Lake explicitly or implicitly denies an authorization\n         request. An explicit denial occurs when a policy contains a Deny statement for the specific\n         Amazon Web Services action. An implicit denial occurs when there is no applicable Deny statement and also\n         no applicable Allow statement.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.securitylake#AccessType": {
      "type": "enum",
      "members": {
        "LAKEFORMATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAKEFORMATION"
          }
        },
        "S3": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3"
          }
        }
      }
    },
    "com.amazonaws.securitylake#AccessTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AccessType"
      }
    },
    "com.amazonaws.securitylake#AccountList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AwsAccountId"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#AmazonResourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:securitylake:[A-za-z0-9_/.\\-]{0,63}:[A-za-z0-9_/.\\-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.\\-]{0,127}$"
      }
    },
    "com.amazonaws.securitylake#AwsAccountId": {
      "type": "string",
      "traits": {
        "aws.api#data": "account",
        "smithy.api#length": {
          "min": 12,
          "max": 12
        },
        "smithy.api#pattern": "^[0-9]{12}$"
      }
    },
    "com.amazonaws.securitylake#AwsIdentity": {
      "type": "structure",
      "members": {
        "principal": {
          "target": "com.amazonaws.securitylake#AwsPrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The AWS identity principal.</p>",
            "smithy.api#required": {}
          }
        },
        "externalId": {
          "target": "com.amazonaws.securitylake#ExternalId",
          "traits": {
            "smithy.api#documentation": "<p>The external ID used to estalish trust relationship with the AWS identity.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The AWS identity.</p>"
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceConfiguration": {
      "type": "structure",
      "members": {
        "accounts": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the Amazon Web Services account information where you want to enable Security Lake.</p>"
          }
        },
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the Regions where you want to enable Security Lake.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceName": {
          "target": "com.amazonaws.securitylake#AwsLogSourceName",
          "traits": {
            "smithy.api#documentation": "<p>The name for a Amazon Web Services source. This must be a Regionally unique value.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceVersion": {
          "target": "com.amazonaws.securitylake#AwsLogSourceVersion",
          "traits": {
            "smithy.api#default": "latest",
            "smithy.api#documentation": "<p>The version for a Amazon Web Services source. This must be a Regionally unique value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Security Lake logs source configuration file describes the information needed to generate Security Lake logs. </p>"
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AwsLogSourceConfiguration"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceName": {
      "type": "enum",
      "members": {
        "ROUTE53": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROUTE53"
          }
        },
        "VPC_FLOW": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VPC_FLOW"
          }
        },
        "SH_FINDINGS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SH_FINDINGS"
          }
        },
        "CLOUD_TRAIL_MGMT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CLOUD_TRAIL_MGMT"
          }
        },
        "LAMBDA_EXECUTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAMBDA_EXECUTION"
          }
        },
        "S3_DATA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3_DATA"
          }
        }
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceResource": {
      "type": "structure",
      "members": {
        "sourceName": {
          "target": "com.amazonaws.securitylake#AwsLogSourceName",
          "traits": {
            "smithy.api#documentation": "<p>The name for a Amazon Web Services source. This must be a Regionally unique value.</p>"
          }
        },
        "sourceVersion": {
          "target": "com.amazonaws.securitylake#AwsLogSourceVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version for a Amazon Web Services source. This must be a Regionally unique value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services.</p>"
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceResourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AwsLogSourceResource"
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceVersion": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^(latest|[0-9]\\.[0-9])$"
      }
    },
    "com.amazonaws.securitylake#AwsPrincipal": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^([0-9]{12}|[a-z0-9\\.\\-]*\\.(amazonaws|amazon)\\.com)$"
      }
    },
    "com.amazonaws.securitylake#BadRequestException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request is malformed or contains an error such as an invalid parameter value or a missing required parameter.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "resourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The resource name.</p>"
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The resource type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Occurs when a conflict with a previous successful write is detected. This generally\n         occurs when the previous write did not have time to propagate to the host serving the\n         current request. A retry (with appropriate backoff logic) is the recommended response to\n         this exception.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateAwsLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateAwsLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to enable any source type in any region for accounts that are either part of a trusted organization or standalone account",
        "aws.iam#requiredActions": [
          "iam:CreateServiceLinkedRole",
          "kms:DescribeKey",
          "kms:CreateGrant",
          "glue:GetTable",
          "glue:GetDatabase",
          "glue:CreateTable",
          "glue:CreateDatabase"
        ],
        "smithy.api#documentation": "<p>Adds a natively supported Amazon Web Service as an Amazon Security Lake source. Enables\n         source types for member accounts in required Amazon Web Services Regions, based on the\n         parameters you specify. You can choose any source type in any Region for either accounts\n         that are part of a trusted organization or standalone accounts. Once you add an Amazon Web Service as a source, Security Lake starts collecting logs and events from it.</p>\n         <p>You can use this API only to enable natively supported Amazon Web Services as a\n         source. Use <code>CreateCustomLogSource</code> to enable data collection from a custom\n         source.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/logsources/aws",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSourceRequest": {
      "type": "structure",
      "members": {
        "sources": {
          "target": "com.amazonaws.securitylake#AwsLogSourceConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the natively-supported Amazon Web Services service to add as a source in Security Lake.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSourceResponse": {
      "type": "structure",
      "members": {
        "failed": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>Lists all accounts in which enabling a natively supported Amazon Web Service as\n         a Security Lake source failed. The failure occurred as these accounts are not part of an\n         organization.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateCustomLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateCustomLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to add a custom source",
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:PassRole",
          "s3:PutObject",
          "s3:ListBucket",
          "lakeformation:RegisterResource",
          "lakeformation:GrantPermissions",
          "kms:DescribeKey",
          "kms:CreateGrant",
          "kms:GenerateDataKey",
          "glue:CreateCrawler",
          "glue:StartCrawlerSchedule",
          "glue:CreateTable",
          "glue:CreateDatabase"
        ],
        "smithy.api#documentation": "<p>Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services Region\n         where you want to create a custom source. Security Lake can collect logs and events from\n         third-party custom sources. After creating the appropriate IAM role to\n         invoke Glue crawler, use this API to add a custom source name in Security Lake. This\n         operation creates a partition in the Amazon S3 bucket for Security Lake as the target\n         location for log files from the custom source. In addition, this operation also creates an\n         associated Glue table and an Glue crawler.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/logsources/custom",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSourceRequest": {
      "type": "structure",
      "members": {
        "sourceName": {
          "target": "com.amazonaws.securitylake#CustomLogSourceName",
          "traits": {
            "smithy.api#documentation": "<p>Specify the name for a third-party custom source. This must be a Regionally unique\n         value.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceVersion": {
          "target": "com.amazonaws.securitylake#CustomLogSourceVersion",
          "traits": {
            "smithy.api#documentation": "<p>Specify the source version for the third-party custom source, to limit log collection to\n         a specific version of custom data source.</p>"
          }
        },
        "eventClasses": {
          "target": "com.amazonaws.securitylake#OcsfEventClassList",
          "traits": {
            "smithy.api#documentation": "<p>The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of\n         data that the custom source will send to Security Lake. The supported event classes are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ACCESS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>FILE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>KERNEL_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>KERNEL_EXTENSION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>MEMORY_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>MODULE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>PROCESS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>REGISTRY_KEY_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>REGISTRY_VALUE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>RESOURCE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SCHEDULED_JOB_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SECURITY_FINDING</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ACCOUNT_CHANGE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>AUTHENTICATION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>AUTHORIZATION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ENTITY_MANAGEMENT_AUDIT</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>DHCP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>NETWORK_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>DNS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>FTP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>HTTP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>RDP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SMB_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SSH_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>CONFIG_STATE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>INVENTORY_INFO</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>EMAIL_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>API_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>CLOUD_API</code>\n               </p>\n            </li>\n         </ul>"
          }
        },
        "configuration": {
          "target": "com.amazonaws.securitylake#CustomLogSourceConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for the third-party custom source.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSourceResponse": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.securitylake#CustomLogSourceResource",
          "traits": {
            "smithy.api#documentation": "<p>The created third-party custom source.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDataLakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDataLakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a new security data lake",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "iam:CreateServiceLinkedRole",
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:PassRole",
          "s3:PutBucketPolicy",
          "s3:PutBucketPublicAccessBlock",
          "s3:CreateBucket",
          "s3:ListBucket",
          "s3:PutBucketVersioning",
          "s3:PutBucketVersioning",
          "organizations:DescribeOrganization",
          "organizations:ListDelegatedServicesForAccount",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:PutDataLakeSettings",
          "kms:DescribeKey",
          "kms:CreateGrant",
          "events:PutRule",
          "events:PutTargets",
          "sqs:CreateQueue",
          "sqs:GetQueueAttributes",
          "sqs:SetQueueAttributes",
          "lambda:CreateFunction",
          "lambda:CreateEventSourceMapping"
        ],
        "smithy.api#documentation": "<p>Initializes an Amazon Security Lake instance with the provided (or default) configuration. You\n         can enable Security Lake in Amazon Web Services Regions with customized settings before enabling\n         log collection in Regions. To specify particular Regions, configure these Regions using the\n            <code>configurations</code> parameter. If you have already enabled Security Lake in a Region\n         when you call this command, the command will update the Region if you provide new\n         configuration parameters. If you have not already enabled Security Lake in the Region when you\n         call this API, it will set up the data lake in the Region with the specified\n         configurations.</p>\n         <p>When you enable Security Lake, it starts ingesting security data after the\n            <code>CreateAwsLogSource</code> call. This includes ingesting security data from\n         sources, storing data, and making data accessible to subscribers. Security Lake also enables\n         all the existing settings and resources that it stores or maintains for your Amazon Web Services account in the current Region, including security log and event data. For\n         more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/what-is-security-lake.html\">Amazon Security Lake User\n            Guide</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeExceptionSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDataLakeExceptionSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDataLakeExceptionSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get instant notifications about exceptions. Subscribes to the SNS topics for exception notifications",
        "smithy.api#documentation": "<p>Creates the specified notification subscription in Amazon Security Lake for the organization\n         you specify.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeExceptionSubscriptionRequest": {
      "type": "structure",
      "members": {
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#SubscriptionProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception notifications are posted.</p>",
            "smithy.api#required": {}
          }
        },
        "notificationEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account where you want to receive exception notifications.</p>",
            "smithy.api#required": {}
          }
        },
        "exceptionTimeToLive": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The expiration period and time-to-live (TTL).</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeExceptionSubscriptionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeOrganizationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDataLakeOrganizationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDataLakeOrganizationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to automatically enable Amazon Security Lake for new member accounts in your organization. or Grants permission to automatically enable Amazon Security Lake for new organization accounts",
        "smithy.api#documentation": "<p>Automatically enables Amazon Security Lake for new member accounts in your organization.\n         Security Lake is not automatically enabled for any existing member accounts in your\n         organization.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/organization/configuration",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeOrganizationConfigurationRequest": {
      "type": "structure",
      "members": {
        "autoEnableNewAccount": {
          "target": "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Enable Security Lake with the specified configuration settings, to begin collecting security\n         data for new accounts in your organization.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeOrganizationConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeRequest": {
      "type": "structure",
      "members": {
        "configurations": {
          "target": "com.amazonaws.securitylake#DataLakeConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the Region or Regions that will contribute data to the rollup region.</p>",
            "smithy.api#required": {}
          }
        },
        "metaStoreManagerRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) used to create and update the Glue table.\n         This table contains partitions generated by the ingestion and normalization of\n          Amazon Web Services log sources and custom sources.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.securitylake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects, one for each tag to associate with the data lake configuration. For each tag, you must specify both a tag key and a tag value. A tag \n         value cannot be null, but it can be an empty string.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDataLakeResponse": {
      "type": "structure",
      "members": {
        "dataLakes": {
          "target": "com.amazonaws.securitylake#DataLakeResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The created Security Lake configuration object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a subscriber",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:CreateRole",
          "s3:PutObject",
          "lakeformation:RegisterResource",
          "lakeformation:GrantPermissions",
          "lakeformation:RevokePermissions",
          "lakeformation:ListPermissions",
          "ram:GetResourceShareAssociations",
          "ram:UpdateResourceShare",
          "ram:GetResourceShares"
        ],
        "smithy.api#documentation": "<p>Creates a subscription permission for accounts that are already enabled in\n         Amazon Security Lake. You can create a subscriber with access to data in the current Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/subscribers",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberNotification": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateSubscriberNotificationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateSubscriberNotificationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a webhook invocation to notify a client when there is new data in the data lake",
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:PassRole",
          "iam:DeleteRolePolicy",
          "s3:PutBucketNotification",
          "s3:GetBucketNotification",
          "events:CreateApiDestination",
          "events:CreateConnection",
          "events:ListApiDestinations",
          "events:ListConnections",
          "events:PutRule",
          "events:DescribeRule",
          "events:PutTargets",
          "sqs:CreateQueue",
          "sqs:DeleteQueue",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:SetQueueAttributes"
        ],
        "smithy.api#documentation": "<p>Notifies the subscriber when new data is written to the data lake for the sources that\n         the subscriber consumes in Security Lake. You can create only one subscriber notification per\n         subscriber.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/subscribers/{subscriberId}/notification",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberNotificationRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber ID for the notification subscription.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "configuration": {
          "target": "com.amazonaws.securitylake#NotificationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specify the configuration using which you want to create the subscriber\n         notification.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberNotificationResponse": {
      "type": "structure",
      "members": {
        "subscriberEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber endpoint to which exception messages are posted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberRequest": {
      "type": "structure",
      "members": {
        "subscriberIdentity": {
          "target": "com.amazonaws.securitylake#AwsIdentity",
          "traits": {
            "smithy.api#documentation": "<p>The AWS identity used to access your data.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of your Security Lake subscriber account.</p>",
            "smithy.api#length": {
              "max": 64
            },
            "smithy.api#required": {}
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The description for your subscriber account in Security Lake.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services from which logs and events are collected.\n         Security Lake supports log and event collection for natively supported Amazon Web Services.</p>",
            "smithy.api#required": {}
          }
        },
        "accessTypes": {
          "target": "com.amazonaws.securitylake#AccessTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 or Lake Formation access type.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.securitylake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag \n         value cannot be null, but it can be an empty string.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriber": {
          "target": "com.amazonaws.securitylake#SubscriberResource",
          "traits": {
            "smithy.api#documentation": "<p>Retrieve information about the subscriber created using the\n            <code>CreateSubscriber</code> API.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceAttributes": {
      "type": "structure",
      "members": {
        "crawlerArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Glue crawler.</p>"
          }
        },
        "databaseArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Glue database where results are written, such as:\n         <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</p>"
          }
        },
        "tableArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Glue table.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The attributes of a third-party custom source.</p>"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceConfiguration": {
      "type": "structure",
      "members": {
        "crawlerConfiguration": {
          "target": "com.amazonaws.securitylake#CustomLogSourceCrawlerConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for the Glue Crawler for the third-party custom source.</p>",
            "smithy.api#required": {}
          }
        },
        "providerIdentity": {
          "target": "com.amazonaws.securitylake#AwsIdentity",
          "traits": {
            "smithy.api#documentation": "<p>The identity of the log provider for the third-party custom source.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for the third-party custom source.</p>"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceCrawlerConfiguration": {
      "type": "structure",
      "members": {
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role\n         to be used by the Glue crawler. The recommended IAM policies\n         are:</p>\n         <ul>\n            <li>\n               <p>The managed policy <code>AWSGlueServiceRole</code>\n               </p>\n            </li>\n            <li>\n               <p>A custom policy granting access to your Amazon S3 Data Lake</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for the Glue Crawler for the third-party custom source.</p>"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[\\\\\\w\\-_:/.]*$"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceProvider": {
      "type": "structure",
      "members": {
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role to be used by the entity putting logs into your\n         custom source partition. Security Lake will apply the correct access policies to this role, but\n         you must first manually create the trust policy for this role. The IAM role\n         name must start with the text 'Security Lake'. The IAM role must trust the\n         <code>logProviderAccountId</code> to assume the role.</p>"
          }
        },
        "location": {
          "target": "com.amazonaws.securitylake#S3URI",
          "traits": {
            "smithy.api#documentation": "<p>The location of the partition in the Amazon S3 bucket for Security Lake.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of the log provider for a third-party custom source.</p>"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceResource": {
      "type": "structure",
      "members": {
        "sourceName": {
          "target": "com.amazonaws.securitylake#CustomLogSourceName",
          "traits": {
            "smithy.api#documentation": "<p>The name for a third-party custom source. This must be a Regionally unique value.</p>"
          }
        },
        "sourceVersion": {
          "target": "com.amazonaws.securitylake#CustomLogSourceVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version for a third-party custom source. This must be a Regionally unique value.</p>"
          }
        },
        "provider": {
          "target": "com.amazonaws.securitylake#CustomLogSourceProvider",
          "traits": {
            "smithy.api#documentation": "<p>The details of the log provider for a third-party custom source.</p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.securitylake#CustomLogSourceAttributes",
          "traits": {
            "smithy.api#documentation": "<p>The attributes of a third-party custom source.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake can collect logs and events from third-party custom sources.</p>"
      }
    },
    "com.amazonaws.securitylake#CustomLogSourceVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 32
        },
        "smithy.api#pattern": "^[A-Za-z0-9\\-\\.\\_]*$"
      }
    },
    "com.amazonaws.securitylake#DataLake": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.securitylake#CreateAwsLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#CreateCustomLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDataLake"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDataLakeOrganizationConfiguration"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteAwsLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteCustomLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDataLake"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfiguration"
        },
        {
          "target": "com.amazonaws.securitylake#GetDataLakeOrganizationConfiguration"
        },
        {
          "target": "com.amazonaws.securitylake#GetDataLakeSources"
        },
        {
          "target": "com.amazonaws.securitylake#ListDataLakes"
        },
        {
          "target": "com.amazonaws.securitylake#ListLogSources"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateDataLake"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "data-lake/default"
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "data-lake"
        },
        "smithy.api#documentation": "Represents a data lake resource that can collect logs from multiple aws or custom sources"
      }
    },
    "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfiguration": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services Regions where Security Lake is automatically enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#AwsLogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services sources that are automatically enabled in Security Lake.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Automatically enable new organization accounts as member accounts from an Amazon Security Lake\n         administrator account.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfiguration"
      }
    },
    "com.amazonaws.securitylake#DataLakeConfiguration": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services Regions where Security Lake is automatically enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "encryptionConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeEncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides encryption details of Amazon Security Lake object.</p>"
          }
        },
        "lifecycleConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeLifecycleConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides lifecycle details of Amazon Security Lake object.</p>"
          }
        },
        "replicationConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides replication details of Amazon Security Lake object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeConfiguration"
      }
    },
    "com.amazonaws.securitylake#DataLakeEncryptionConfiguration": {
      "type": "structure",
      "members": {
        "kmsKeyId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake\n         object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides encryption details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeException": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services Regions where the exception occurred.</p>"
          }
        },
        "exception": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The underlying exception of a Security Lake exception.</p>"
          }
        },
        "remediation": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List of all remediation steps for a Security Lake exception.</p>"
          }
        },
        "timestamp": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>This error can occur if you configure the wrong timestamp format, or if the subset of entries used for validation had errors or missing values.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details for an Amazon Security Lake exception.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeExceptionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeException"
      }
    },
    "com.amazonaws.securitylake#DataLakeLifecycleConfiguration": {
      "type": "structure",
      "members": {
        "expiration": {
          "target": "com.amazonaws.securitylake#DataLakeLifecycleExpiration",
          "traits": {
            "smithy.api#documentation": "<p>Provides data expiration details of Amazon Security Lake object.</p>"
          }
        },
        "transitions": {
          "target": "com.amazonaws.securitylake#DataLakeLifecycleTransitionList",
          "traits": {
            "smithy.api#documentation": "<p>Provides data storage transition details of Amazon Security Lake object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides lifecycle details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeLifecycleExpiration": {
      "type": "structure",
      "members": {
        "days": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of days before data expires in the Amazon Security Lake object.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provide expiration lifecycle details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeLifecycleTransition": {
      "type": "structure",
      "members": {
        "storageClass": {
          "target": "com.amazonaws.securitylake#DataLakeStorageClass",
          "traits": {
            "smithy.api#documentation": "<p>The range of storage classes that you can choose from based on the data access,\n         resiliency, and cost requirements of your workloads.</p>"
          }
        },
        "days": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provide transition lifecycle details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeLifecycleTransitionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeLifecycleTransition"
      }
    },
    "com.amazonaws.securitylake#DataLakeReplicationConfiguration": {
      "type": "structure",
      "members": {
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>Replication enables automatic, asynchronous copying of objects across Amazon S3\n         buckets. Amazon S3 buckets that are configured for object replication can be owned\n         by the same Amazon Web Services account or by different accounts. You can replicate objects\n         to a single destination bucket or to multiple destination buckets. The destination buckets\n         can be in different Amazon Web Services Regions or within the same Region as the source\n         bucket.</p>\n         <p>Set up one or more rollup Regions by providing the Region or Regions that should\n         contribute to the central rollup Region.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Replication settings for the Amazon S3 buckets. This parameter uses the Identity and Access Management (IAM) role you created that is managed by Security Lake, to\n         ensure the replication setting is correct.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides replication details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeResource": {
      "type": "structure",
      "members": {
        "dataLakeArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more information about ARNs and how to use them in policies, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html\">Amazon Security Lake User Guide</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services Regions where Security Lake is enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "s3BucketArn": {
          "target": "com.amazonaws.securitylake#S3BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN for the Amazon Security Lake Amazon S3 bucket.</p>"
          }
        },
        "encryptionConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeEncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides encryption details of Amazon Security Lake object.</p>"
          }
        },
        "lifecycleConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeLifecycleConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides lifecycle details of Amazon Security Lake object.</p>"
          }
        },
        "replicationConfiguration": {
          "target": "com.amazonaws.securitylake#DataLakeReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Provides replication details of Amazon Security Lake object.</p>"
          }
        },
        "createStatus": {
          "target": "com.amazonaws.securitylake#DataLakeStatus",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the status of the configuration operation for an account in Amazon Security Lake.</p>"
          }
        },
        "updateStatus": {
          "target": "com.amazonaws.securitylake#DataLakeUpdateStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the last <code>UpdateDataLake </code>or <code>DeleteDataLake</code> API\n         request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details of Amazon Security Lake object.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeResourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeResource"
      }
    },
    "com.amazonaws.securitylake#DataLakeSource": {
      "type": "structure",
      "members": {
        "account": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Security Lake account for which logs are collected.</p>"
          }
        },
        "sourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services from which logs and events are collected.\n         Amazon Security Lake supports log and event collection for natively supported Amazon Web Services.</p>"
          }
        },
        "eventClasses": {
          "target": "com.amazonaws.securitylake#OcsfEventClassList",
          "traits": {
            "smithy.api#documentation": "<p>The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of\n         data that the custom source will send to Security Lake. The supported event classes are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ACCESS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>FILE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>KERNEL_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>KERNEL_EXTENSION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>MEMORY_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>MODULE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>PROCESS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>REGISTRY_KEY_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>REGISTRY_VALUE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>RESOURCE_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SCHEDULED_JOB_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SECURITY_FINDING</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ACCOUNT_CHANGE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>AUTHENTICATION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>AUTHORIZATION</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ENTITY_MANAGEMENT_AUDIT</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>DHCP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>NETWORK_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>DNS_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>FTP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>HTTP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>RDP_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SMB_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>SSH_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>CONFIG_STATE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>INVENTORY_INFO</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>EMAIL_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>API_ACTIVITY</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>CLOUD_API</code>\n               </p>\n            </li>\n         </ul>"
          }
        },
        "sourceStatuses": {
          "target": "com.amazonaws.securitylake#DataLakeSourceStatusList",
          "traits": {
            "smithy.api#documentation": "<p>The log status for the Security Lake account.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake collects logs and events from supported Amazon Web Services and\n         custom sources. For the list of supported Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeSource"
      }
    },
    "com.amazonaws.securitylake#DataLakeSourceStatus": {
      "type": "structure",
      "members": {
        "resource": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Defines path the stored logs are available which has information on your systems,\n         applications, and services.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.securitylake#SourceCollectionStatus",
          "traits": {
            "smithy.api#documentation": "<p>The health status of services, including error codes and patterns.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the Logs status for the Amazon Security Lake account.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeSourceStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#DataLakeSourceStatus"
      }
    },
    "com.amazonaws.securitylake#DataLakeStatus": {
      "type": "enum",
      "members": {
        "INITIALIZED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INITIALIZED"
          }
        },
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.securitylake#DataLakeStorageClass": {
      "type": "string"
    },
    "com.amazonaws.securitylake#DataLakeUpdateException": {
      "type": "structure",
      "members": {
        "reason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the exception of the last <code>UpdateDataLake</code>or\n         <code>DeleteDataLake</code> API request.</p>"
          }
        },
        "code": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason code for the exception of the last <code>UpdateDataLake</code> or\n         <code>DeleteDataLake</code> API request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code>\n         API request which failed.</p>"
      }
    },
    "com.amazonaws.securitylake#DataLakeUpdateStatus": {
      "type": "structure",
      "members": {
        "requestId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID for the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API\n         request.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.securitylake#DataLakeStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API\n         request that was requested.</p>"
          }
        },
        "exception": {
          "target": "com.amazonaws.securitylake#DataLakeUpdateException",
          "traits": {
            "smithy.api#documentation": "<p>The details of the last <code>UpdateDataLake</code>or <code>DeleteDataLake</code> API\n         request which failed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The status of the last <code>UpdateDataLake</code> or <code>DeleteDataLake</code> API\n         request. This is set to Completed after the configuration is updated, or removed if\n         deletion of the data lake is successful.</p>"
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteAwsLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteAwsLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to disable any source type in any region for accounts that are part of a trusted organization or standalone accounts",
        "smithy.api#documentation": "<p>Removes a natively supported Amazon Web Service as an Amazon Security Lake source. You\n         can remove a source for one or more Regions. When you remove the source, Security Lake stops\n         collecting data from that source in the specified Regions and accounts, and subscribers can\n         no longer consume new data from the source. However, subscribers can still consume data\n         that Security Lake collected from the source before removal.</p>\n         <p>You can choose any source type in any Amazon Web Services Region for either accounts that\n         are part of a trusted organization or standalone accounts. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/logsources/aws/delete",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSourceRequest": {
      "type": "structure",
      "members": {
        "sources": {
          "target": "com.amazonaws.securitylake#AwsLogSourceConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the natively-supported Amazon Web Services service to remove as a source in\n         Security Lake.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSourceResponse": {
      "type": "structure",
      "members": {
        "failed": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>Deletion of the Amazon Web Services sources failed as the account is not a part of the organization.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteCustomLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteCustomLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to remove a custom source",
        "aws.iam#requiredActions": ["glue:StopCrawlerSchedule"],
        "smithy.api#documentation": "<p>Removes a custom log source from Amazon Security Lake, to stop sending data from the custom\n         source to Security Lake.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake/logsources/custom/{sourceName}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSourceRequest": {
      "type": "structure",
      "members": {
        "sourceName": {
          "target": "com.amazonaws.securitylake#CustomLogSourceName",
          "traits": {
            "smithy.api#documentation": "<p>The source name of custom log source that you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "sourceVersion": {
          "target": "com.amazonaws.securitylake#CustomLogSourceVersion",
          "traits": {
            "smithy.api#documentation": "<p>The source version for the third-party custom source. You can limit the custom source\n         removal to the specified source version.</p>",
            "smithy.api#httpQuery": "sourceVersion"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete security data lake",
        "aws.iam#requiredActions": [
          "organizations:DescribeOrganization",
          "organizations:ListDelegatedServicesForAccount",
          "organizations:ListDelegatedAdministrators"
        ],
        "smithy.api#documentation": "<p>When you disable Amazon Security Lake from your account, Security Lake is disabled in all Amazon Web Services Regions and it stops collecting data from your sources. Also, this API\n         automatically takes steps to remove the account from Security Lake. However, Security Lake retains\n         all of your existing settings and the resources that it created in your Amazon Web Services\n         account in the current Amazon Web Services Region.</p>\n         <p>The <code>DeleteDataLake</code> operation does not delete the data that is stored in\n         your Amazon S3 bucket, which is owned by your Amazon Web Services account. For more\n         information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/disable-security-lake.html\">Amazon Security Lake User\n            Guide</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/delete",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to unsubscribe from SNS topics for exception notifications. Removes exception notifications for the SNS topic",
        "smithy.api#documentation": "<p>Deletes the specified notification subscription in Amazon Security Lake for the organization\n         you specify.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscriptionRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscriptionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to remove the automatic enablement of Amazon Security Lake access for new organization accounts",
        "smithy.api#documentation": "<p>Turns off automatic enablement of Amazon Security Lake for member accounts that are added to an organization in Organizations. Only the delegated \n         Security Lake administrator for an organization can perform this operation. If the delegated Security Lake administrator performs this operation, new member\n         accounts won't automatically contribute data to the data lake.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/organization/configuration/delete",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfigurationRequest": {
      "type": "structure",
      "members": {
        "autoEnableNewAccount": {
          "target": "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Turns off automatic enablement of Security Lake for member accounts that are added to an organization.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeOrganizationConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeRequest": {
      "type": "structure",
      "members": {
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>The list of Regions where Security Lake is enabled.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDataLakeResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete the specified subscriber",
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:ListRolePolicies",
          "iam:DeleteRole",
          "iam:DeleteRolePolicy",
          "lakeformation:RevokePermissions",
          "lakeformation:ListPermissions",
          "events:DeleteApiDestination",
          "events:DeleteConnection",
          "events:DeleteRule",
          "events:ListApiDestinations",
          "events:ListTargetsByRule",
          "events:DescribeRule",
          "events:RemoveTargets",
          "sqs:DeleteQueue",
          "sqs:GetQueueUrl"
        ],
        "smithy.api#documentation": "<p>Deletes the subscription permission and all notification settings for accounts that are\n         already enabled in Amazon Security Lake. When you run <code>DeleteSubscriber</code>, the\n         subscriber will no longer consume data from Security Lake and the subscriber is removed. This\n         operation deletes the subscriber and removes access to data in the current Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/subscribers/{subscriberId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberNotification": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberNotificationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberNotificationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to remove a webhook invocation to notify a client when there is new data in the data lake",
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:ListRolePolicies",
          "iam:DeleteRole",
          "iam:DeleteRolePolicy",
          "lakeformation:RevokePermissions",
          "events:DeleteApiDestination",
          "events:DeleteConnection",
          "events:DeleteRule",
          "events:ListApiDestinations",
          "events:ListTargetsByRule",
          "events:DescribeRule",
          "events:RemoveTargets",
          "sqs:DeleteQueue",
          "sqs:GetQueueUrl"
        ],
        "smithy.api#documentation": "<p>Deletes the specified notification subscription in Amazon Security Lake for the organization\n         you specify.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/subscribers/{subscriberId}/notification",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberNotificationRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Security Lake subscriber account.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberNotificationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Security Lake that uniquely identifies your <code>DeleteSubscriber</code> API request.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministrator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministratorRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministratorResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to remove the Delegated Administrator account and disable Amazon Security Lake as a service for this organization",
        "aws.iam#requiredActions": [
          "organizations:DescribeOrganization",
          "organizations:DeregisterDelegatedAdministrator",
          "organizations:ListDelegatedServicesForAccount"
        ],
        "smithy.api#documentation": "<p>Deletes the Amazon Security Lake delegated administrator account for the organization. This API\n         can only be called by the organization management account. The organization management\n         account cannot be the delegated administrator account.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake/delegate",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministratorRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministratorResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DescriptionString": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\\\\\w\\s\\-_:/,.@=+]*$"
      }
    },
    "com.amazonaws.securitylake#ExternalId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 1224
        },
        "smithy.api#pattern": "^[\\w+=,.@:\\/-]*$"
      }
    },
    "com.amazonaws.securitylake#GetDataLakeExceptionSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDataLakeExceptionSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDataLakeExceptionSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to query the protocol and endpoint that were provided when subscribing to SNS topics for exception notifications",
        "smithy.api#documentation": "<p>Retrieves the details of exception notifications for the account in Amazon Security Lake.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeExceptionSubscriptionRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeExceptionSubscriptionResponse": {
      "type": "structure",
      "members": {
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#SubscriptionProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception notifications are posted.</p>"
          }
        },
        "notificationEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account where you receive exception notifications.</p>"
          }
        },
        "exceptionTimeToLive": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The expiration period and time-to-live (TTL).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeOrganizationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDataLakeOrganizationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDataLakeOrganizationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get an organization’s configuration setting for automatically enabling Amazon Security Lake access for new organization accounts",
        "aws.iam#requiredActions": ["organizations:DescribeOrganization"],
        "smithy.api#documentation": "<p>Retrieves the configuration that will be automatically set up for accounts added to the\n         organization after the organization has onboarded to Amazon Security Lake. This API does not take\n         input parameters.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake/organization/configuration",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeOrganizationConfigurationRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeOrganizationConfigurationResponse": {
      "type": "structure",
      "members": {
        "autoEnableNewAccount": {
          "target": "com.amazonaws.securitylake#DataLakeAutoEnableNewAccountConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for new accounts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeSources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDataLakeSourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDataLakeSourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a static snapshot of the security data lake in the current region. The snapshot includes enabled accounts and log sources",
        "smithy.api#documentation": "<p>Retrieves a snapshot of the current Region, including whether Amazon Security Lake is enabled\n         for those accounts and which sources Security Lake is collecting data from.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/sources",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "dataLakeSources"
        }
      }
    },
    "com.amazonaws.securitylake#GetDataLakeSourcesRequest": {
      "type": "structure",
      "members": {
        "accounts": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for which a static snapshot of the current Amazon Web Services Region, including enabled accounts and log sources, is retrieved.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.securitylake#MaxResults",
          "traits": {
            "smithy.api#default": 50,
            "smithy.api#documentation": "<p>The maximum limit of accounts for which the static snapshot of the current Region,\n         including enabled accounts and log sources, is retrieved.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Lists if there are more results available. The value of nextToken is a unique pagination\n         token for each page. Repeat the call using the returned token to retrieve the next page.\n         Keep all other arguments unchanged.</p>\n         <p>Each pagination token expires after 24 hours. Using an expired pagination token will\n         return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDataLakeSourcesResponse": {
      "type": "structure",
      "members": {
        "dataLakeArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) created by you to provide to the subscriber. For more information about ARNs and how to use them in policies, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html\">Amazon Security Lake User Guide</a>.</p>"
          }
        },
        "dataLakeSources": {
          "target": "com.amazonaws.securitylake#DataLakeSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The list of enabled accounts and enabled sources.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Lists if there are more results available. The value of nextToken is a unique pagination\n         token for each page. Repeat the call using the returned token to retrieve the next page.\n         Keep all other arguments unchanged.</p>\n         <p>Each pagination token expires after 24 hours. Using an expired pagination token will\n         return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get information about subscriber that is already created",
        "smithy.api#documentation": "<p>Retrieves the subscription information for the specified subscription ID. You can get\n         information about a specific subscriber.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/subscribers/{subscriberId}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetSubscriberRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Amazon Security Lake that uniquely identifies your\n            <code>GetSubscriber</code> API request.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriber": {
          "target": "com.amazonaws.securitylake#SubscriberResource",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber information for the specified subscriber ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#HttpMethod": {
      "type": "enum",
      "members": {
        "POST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "POST"
          }
        },
        "PUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PUT"
          }
        }
      }
    },
    "com.amazonaws.securitylake#HttpsNotificationConfiguration": {
      "type": "structure",
      "members": {
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The subscription endpoint in Security Lake. If you prefer notification with an HTTPs\n         endpoint, populate this field.</p>",
            "smithy.api#pattern": "^https?://.+$",
            "smithy.api#required": {}
          }
        },
        "authorizationApiKeyName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key name for the notification subscription.</p>"
          }
        },
        "authorizationApiKeyValue": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key value for the notification subscription.</p>"
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.securitylake#HttpMethod",
          "traits": {
            "smithy.api#documentation": "<p>The HTTPS method used for the notification subscription.</p>"
          }
        },
        "targetRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you\n         created. For more information about ARNs and how to use them in policies, see <a href=\"https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html\">Managing data access</a> and <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html\">Amazon Web Services\n            Managed Policies</a> in the <i>Amazon Security Lake User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configurations for HTTPS subscriber notification.</p>"
      }
    },
    "com.amazonaws.securitylake#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Internal service exceptions are sometimes caused by transient issues. Before you start\n         troubleshooting, perform the operation again.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakeExceptions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListDataLakeExceptionsRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListDataLakeExceptionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get the list of all non-retryable failures",
        "smithy.api#documentation": "<p>Lists the Amazon Security Lake exceptions that you can use to find the source of problems and\n         fix them.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/exceptions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "exceptions"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakeExceptionsRequest": {
      "type": "structure",
      "members": {
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>List the Amazon Web Services Regions from which exceptions are retrieved.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.securitylake#MaxResults",
          "traits": {
            "smithy.api#default": 50,
            "smithy.api#documentation": "<p>List the maximum number of failures in Security Lake.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>List if there are more results available. The value of nextToken is a unique pagination\n         token for each page. Repeat the call using the returned token to retrieve the next page.\n         Keep all other arguments unchanged.</p>\n         <p>Each pagination token expires after 24 hours. Using an expired pagination token will\n         return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakeExceptionsResponse": {
      "type": "structure",
      "members": {
        "exceptions": {
          "target": "com.amazonaws.securitylake#DataLakeExceptionList",
          "traits": {
            "smithy.api#documentation": "<p>Lists the failures that cannot be retried in the current Region.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>List if there are more results available. The value of nextToken is a unique pagination\n         token for each page. Repeat the call using the returned token to retrieve the next page.\n         Keep all other arguments unchanged.</p>\n         <p>Each pagination token expires after 24 hours. Using an expired pagination token will\n         return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListDataLakesRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListDataLakesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get information about the security data lake",
        "smithy.api#documentation": "<p>Retrieves the Amazon Security Lake configuration object for the specified Amazon Web Services Regions. You can use this operation to determine whether\n         Security Lake is enabled for a Region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalakes",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakesRequest": {
      "type": "structure",
      "members": {
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>The list of regions where Security Lake is enabled.</p>",
            "smithy.api#httpQuery": "regions"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListDataLakesResponse": {
      "type": "structure",
      "members": {
        "dataLakes": {
          "target": "com.amazonaws.securitylake#DataLakeResourceList",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the Security Lake configuration object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ListLogSources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListLogSourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListLogSourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to view the enabled accounts. You can view the enabled sources in the enabled regions",
        "smithy.api#documentation": "<p>Retrieves the log sources in the current Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/logsources/list",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "sources"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListLogSourcesRequest": {
      "type": "structure",
      "members": {
        "accounts": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>The list of Amazon Web Services accounts for which log sources are displayed.</p>"
          }
        },
        "regions": {
          "target": "com.amazonaws.securitylake#RegionList",
          "traits": {
            "smithy.api#documentation": "<p>The list of regions for which log sources are displayed.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The list of sources for which log sources are displayed.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.securitylake#MaxResults",
          "traits": {
            "smithy.api#default": 50,
            "smithy.api#documentation": "<p>The maximum number of accounts for which the log sources are displayed.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can repeat the call\n         using the returned token to retrieve the next page.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListLogSourcesResponse": {
      "type": "structure",
      "members": {
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The list of log sources in your organization that send data to the data lake.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can repeat the call\n      using the returned token to retrieve the next page.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ListSubscribers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListSubscribersRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListSubscribersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list all subscribers",
        "smithy.api#documentation": "<p>List all subscribers for the specific Amazon Security Lake account ID. You can retrieve a list\n         of subscriptions associated with a specific organization or Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/subscribers",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "subscribers"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListSubscribersRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can repeat the call\n         using the returned token to retrieve the next page.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.securitylake#MaxResults",
          "traits": {
            "smithy.api#default": 50,
            "smithy.api#documentation": "<p>The maximum number of accounts for which the configuration is displayed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListSubscribersResponse": {
      "type": "structure",
      "members": {
        "subscribers": {
          "target": "com.amazonaws.securitylake#SubscriberResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The subscribers available for the specified Security Lake account ID.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can repeat the call\n         using the returned token to retrieve the next page.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the tags (keys and values) that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for \n         your Amazon Web Services account in a particular Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Security Lake resource to retrieve the tags for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.securitylake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects, one for each tag (key and value) that’s associated with the Amazon Security Lake resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#LogSource": {
      "type": "structure",
      "members": {
        "account": {
          "target": "com.amazonaws.securitylake#AwsAccountId",
          "traits": {
            "smithy.api#documentation": "<p>Specify the account from which you want to collect logs.</p>"
          }
        },
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>Specify the Regions from which you want to collect logs.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the sources from which you want to collect logs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake can collect logs and events from natively-supported Amazon Web Services services and custom sources. </p>"
      }
    },
    "com.amazonaws.securitylake#LogSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#LogSource"
      }
    },
    "com.amazonaws.securitylake#LogSourceResource": {
      "type": "union",
      "members": {
        "awsLogSource": {
          "target": "com.amazonaws.securitylake#AwsLogSourceResource",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports log and event collection for natively supported Amazon Web Services. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>.</p>"
          }
        },
        "customLogSource": {
          "target": "com.amazonaws.securitylake#CustomLogSourceResource",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports custom source types. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/custom-sources.html\">Amazon Security Lake User Guide</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The supported source types from which logs and events are collected in Amazon Security Lake.\n         For a list of supported Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>.</p>"
      }
    },
    "com.amazonaws.securitylake#LogSourceResourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#LogSourceResource"
      }
    },
    "com.amazonaws.securitylake#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.securitylake#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 2048
        }
      }
    },
    "com.amazonaws.securitylake#NotificationConfiguration": {
      "type": "union",
      "members": {
        "sqsNotificationConfiguration": {
          "target": "com.amazonaws.securitylake#SqsNotificationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configurations for SQS subscriber notification.</p>"
          }
        },
        "httpsNotificationConfiguration": {
          "target": "com.amazonaws.securitylake#HttpsNotificationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configurations for HTTPS subscriber notification.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specify the configurations you want to use for subscriber notification to notify the\n         subscriber when new data is written to the data lake for sources that the subscriber\n         consumes in Security Lake. </p>"
      }
    },
    "com.amazonaws.securitylake#OcsfEventClass": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[A-Z\\_0-9]*$"
      }
    },
    "com.amazonaws.securitylake#OcsfEventClassList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#OcsfEventClass"
      }
    },
    "com.amazonaws.securitylake#Region": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\\d+$"
      }
    },
    "com.amazonaws.securitylake#RegionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#Region"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministrator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministratorRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministratorResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to designate an account as the Amazon Security Lake administrator account for the organization",
        "aws.iam#requiredActions": [
          "iam:CreateServiceLinkedRole",
          "organizations:DescribeOrganization",
          "organizations:ListDelegatedAdministrators",
          "organizations:RegisterDelegatedAdministrator",
          "organizations:EnableAWSServiceAccess",
          "organizations:ListDelegatedServicesForAccount"
        ],
        "smithy.api#documentation": "<p>Designates the Amazon Security Lake delegated administrator account for the organization. This\n         API can only be called by the organization management account. The organization management\n         account cannot be the delegated administrator account.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/delegate",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministratorRequest": {
      "type": "structure",
      "members": {
        "accountId": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Security Lake delegated administrator.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministratorResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "resourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the resource that could not be found.</p>"
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource that could not be found.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource could not be found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.securitylake#ResourceShareArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::RAM::ResourceShare"
        }
      }
    },
    "com.amazonaws.securitylake#ResourceShareName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^LakeFormation(?:-V[0-9]+)-([a-zA-Z0-9]+)-([\\\\\\w\\-_:/.@=+]*)$"
      }
    },
    "com.amazonaws.securitylake#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:.*$"
      }
    },
    "com.amazonaws.securitylake#S3BucketArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::S3::Bucket"
        }
      }
    },
    "com.amazonaws.securitylake#S3URI": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "A complete S3 URI pointing to a valid S3 object.",
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^s3[an]?://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/[^/].*)+$"
      }
    },
    "com.amazonaws.securitylake#SafeString": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\\\\\w\\-_:/.@=+]*$"
      }
    },
    "com.amazonaws.securitylake#SecurityLake": {
      "type": "service",
      "version": "2018-05-10",
      "operations": [
        {
          "target": "com.amazonaws.securitylake#CreateDataLakeExceptionSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDataLakeExceptionSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#DeregisterDataLakeDelegatedAdministrator"
        },
        {
          "target": "com.amazonaws.securitylake#GetDataLakeExceptionSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#ListDataLakeExceptions"
        },
        {
          "target": "com.amazonaws.securitylake#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.securitylake#RegisterDataLakeDelegatedAdministrator"
        },
        {
          "target": "com.amazonaws.securitylake#TagResource"
        },
        {
          "target": "com.amazonaws.securitylake#UntagResource"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscription"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.securitylake#DataLake"
        },
        {
          "target": "com.amazonaws.securitylake#Subscriber"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "SecurityLake",
          "arnNamespace": "securitylake",
          "cloudTrailEventSource": "securitylake.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "securitylake"
        },
        "aws.iam#defineConditionKeys": {
          "aws:ResourceTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by the tags associated with the resource",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag"
          },
          "aws:RequestTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by tags that are passed in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag"
          },
          "aws:TagKeys": {
            "type": "ArrayOfString",
            "documentation": "Filters access by tag keys that are passed in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys"
          }
        },
        "aws.iam#supportedPrincipalTypes": ["Root", "IAMUser", "IAMRole", "FederatedUser"],
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "*",
            "content-type",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-platform-id",
            "x-amzn-trace-id"
          ],
          "additionalExposedHeaders": ["x-amzn-errortype", "x-amzn-requestid", "x-amzn-trace-id"],
          "maxAge": 86400
        },
        "smithy.api#documentation": "<p>Amazon Security Lake is a fully managed security data lake service. You can use Security Lake to\n         automatically centralize security data from cloud, on-premises, and custom sources into a\n         data lake that's stored in your Amazon Web Services account. Amazon Web Services Organizations\n         is an account management service that lets you consolidate multiple Amazon Web Services\n         accounts into an organization that you create and centrally manage. With Organizations, you\n         can create member accounts and invite existing accounts to join your organization.\n         Security Lake helps you analyze security data for a more complete understanding of your\n         security posture across the entire organization. It can also help you improve the\n         protection of your workloads, applications, and data.</p>\n         <p>The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and you\n         retain ownership over your data.</p>\n         <p>Amazon Security Lake integrates with CloudTrail, a service that provides a record of\n         actions taken by a user, role, or an Amazon Web Services service. In Security Lake, CloudTrail captures API calls for Security Lake as events. The calls captured include calls\n         from the Security Lake console and code calls to the Security Lake API operations. If you create a\n         trail, you can enable continuous delivery of CloudTrail events to an Amazon S3 bucket, including events for Security Lake. If you don't configure a trail, you can still\n         view the most recent events in the CloudTrail console in Event history. Using the\n         information collected by CloudTrail you can determine the request that was made to\n         Security Lake, the IP address from which the request was made, who made the request, when it\n         was made, and additional details. To learn more about Security Lake information in CloudTrail, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/securitylake-cloudtrail.html\">Amazon Security Lake User Guide</a>.</p>\n         <p>Security Lake automates the collection of security-related log and event data from\n         integrated Amazon Web Services and third-party services. It also helps you manage\n         the lifecycle of data with customizable retention and replication settings. Security Lake\n         converts ingested data into Apache Parquet format and a standard open-source schema called\n         the Open Cybersecurity Schema Framework (OCSF).</p>\n         <p>Other Amazon Web Services and third-party services can subscribe to the data that's stored in Security Lake for \n         incident response and security data analytics.</p>",
        "smithy.api#title": "Amazon Security Lake",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": {
                          "ref": "Endpoint"
                        },
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://securitylake-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    },
                                    true
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://securitylake-fips.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS is enabled but this partition does not support FIPS",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://securitylake.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "DualStack is enabled but this partition does not support DualStack",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://securitylake.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ],
              "type": "tree"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.securitylake#SourceCollectionStatus": {
      "type": "enum",
      "members": {
        "COLLECTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COLLECTING"
          }
        },
        "MISCONFIGURED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MISCONFIGURED"
          }
        },
        "NOT_COLLECTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NOT_COLLECTING"
          }
        }
      }
    },
    "com.amazonaws.securitylake#SqsNotificationConfiguration": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>The configurations for SQS subscriber notification.</p>"
      }
    },
    "com.amazonaws.securitylake#Subscriber": {
      "type": "resource",
      "identifiers": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID"
        }
      },
      "create": {
        "target": "com.amazonaws.securitylake#CreateSubscriber"
      },
      "read": {
        "target": "com.amazonaws.securitylake#GetSubscriber"
      },
      "update": {
        "target": "com.amazonaws.securitylake#UpdateSubscriber"
      },
      "delete": {
        "target": "com.amazonaws.securitylake#DeleteSubscriber"
      },
      "list": {
        "target": "com.amazonaws.securitylake#ListSubscribers"
      },
      "operations": [
        {
          "target": "com.amazonaws.securitylake#CreateSubscriberNotification"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteSubscriberNotification"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateSubscriberNotification"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "subscriber/{subscriberId}"
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "subscriber"
        },
        "smithy.api#documentation": "Represents a subscriber resource that allows access to sources"
      }
    },
    "com.amazonaws.securitylake#SubscriberResource": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber ID of the Amazon Security Lake subscriber account.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber ARN of the Amazon Security Lake subscriber account.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberIdentity": {
          "target": "com.amazonaws.securitylake#AwsIdentity",
          "traits": {
            "smithy.api#documentation": "<p>The AWS identity used to access your data.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberName": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The name of your Amazon Security Lake subscriber account.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber descriptions for a subscriber account. The description for a subscriber\n         includes <code>subscriberName</code>, <code>accountID</code>, <code>externalID</code>, and\n         <code>subscriberId</code>.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports log and event collection for natively supported Amazon Web Services. For more information, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/source-management.html\">Amazon Security Lake User Guide</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "accessTypes": {
          "target": "com.amazonaws.securitylake#AccessTypeList",
          "traits": {
            "smithy.api#documentation": "<p>You can choose to notify subscribers of new objects with an Amazon Simple Queue Service\n            (Amazon SQS) queue or through messaging to an HTTPS endpoint provided by the\n         subscriber.</p>\n         <p> Subscribers can consume data by directly querying Lake Formation tables in your\n            Amazon S3 bucket through services like Amazon Athena. This subscription\n         type is defined as <code>LAKEFORMATION</code>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) specifying the role of the subscriber.</p>"
          }
        },
        "s3BucketArn": {
          "target": "com.amazonaws.securitylake#S3BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN for the Amazon S3 bucket.</p>"
          }
        },
        "subscriberEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber endpoint to which exception messages are posted.</p>"
          }
        },
        "subscriberStatus": {
          "target": "com.amazonaws.securitylake#SubscriberStatus",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber status of the Amazon Security Lake subscriber account.</p>"
          }
        },
        "resourceShareArn": {
          "target": "com.amazonaws.securitylake#ResourceShareArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) which uniquely defines the AWS RAM resource share. Before\n         accepting the RAM resource share invitation, you can view details related to the RAM\n         resource share.</p>\n         <p>This field is available only for Lake Formation subscribers created after March 8, 2023.</p>"
          }
        },
        "resourceShareName": {
          "target": "com.amazonaws.securitylake#ResourceShareName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the resource share.</p>"
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the subscriber was created.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "updatedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the subscriber was last updated.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details about the Amazon Security Lake account subscription. Subscribers are notified\n         of new objects for a source as the data is written to your Amazon S3 bucket for\n         Security Lake.</p>"
      }
    },
    "com.amazonaws.securitylake#SubscriberResourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#SubscriberResource"
      }
    },
    "com.amazonaws.securitylake#SubscriberStatus": {
      "type": "enum",
      "members": {
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "DEACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEACTIVATED"
          }
        },
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        }
      }
    },
    "com.amazonaws.securitylake#SubscriptionProtocol": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-z\\-]*$"
      }
    },
    "com.amazonaws.securitylake#Tag": {
      "type": "structure",
      "members": {
        "key": {
          "target": "com.amazonaws.securitylake#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>The  name of the tag. This is a general label that acts as a category for a more specific tag value (<code>value</code>).</p>",
            "smithy.api#required": {}
          }
        },
        "value": {
          "target": "com.amazonaws.securitylake#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>The value that’s associated with the specified tag key (<code>key</code>). This value acts as a descriptor for the tag key. A tag value cannot be \n         null, but it can be an empty string.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A <i>tag</i> is a label that you can define and associate with Amazon Web Services resources, including certain types of Amazon Security Lake resources. \n         Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other criteria. You can associate tags with \n         the following types of Security Lake resources: subscribers, and the data lake configuration for your Amazon Web Services account in individual Amazon Web Services Regions.</p>\n         <p>A resource can have up to 50 tags. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A \n         <i>tag key</i> is a general label that acts as a category for a more specific tag value. Each tag key must be unique and it can have only one tag \n         value. A <i>tag value</i> acts as a descriptor for a tag key. Tag keys and values are case sensitive. They can contain letters, numbers, spaces, \n         or the following symbols: _ . : / = + @ -</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\">Tagging Amazon Security Lake resources</a> in \n         the <i>Amazon Security Lake User Guide</i>.</p>"
      }
    },
    "com.amazonaws.securitylake#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.securitylake#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.securitylake#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#Tag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.securitylake#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "smithy.api#documentation": "<p>Adds or updates one or more tags that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for your \n         Amazon Web Services account in a particular Amazon Web Services Region. A <i>tag</i> is a label that you can define and associate with \n         Amazon Web Services resources. Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>. A \n         <i>tag key</i> is a general label that acts as a category for a more specific tag value. A <i>tag value</i> acts as a \n         descriptor for a tag key. Tags can help you identify, categorize, and manage resources in different ways, such as by owner, environment, or other \n         criteria. For more information, see \n         <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/tagging-resources.html\">Tagging Amazon Security Lake resources</a> in the \n         <i>Amazon Security Lake User Guide</i>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Security Lake resource to add or update the tags for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.securitylake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects, one for each tag (key and value) to associate with the Amazon Security Lake resource. For each tag, you must \n         specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.securitylake#DataLake"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.securitylake#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "serviceCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The code for the service in Service Quotas.</p>"
          }
        },
        "quotaCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>That the rate of requests to Security Lake is exceeding the request quotas for your Amazon Web Services account.</p>"
          }
        },
        "retryAfterSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Retry the request after the specified time.</p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The limit on the number of requests per second was exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.securitylake#UUID": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      }
    },
    "com.amazonaws.securitylake#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#conditionKeys": ["aws:TagKeys"],
        "smithy.api#documentation": "<p>Removes one or more tags (keys and values) from an Amazon Security Lake resource: a subscriber, or the data lake configuration for your \n         Amazon Web Services account in a particular Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.securitylake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Security Lake resource to remove one or more tags from.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.securitylake#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>A list of one or more tag keys. For each value in the list, specify the tag key for a tag to remove from the Amazon Security Lake resource.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.securitylake#DataLake"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateDataLakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateDataLakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a security data lake",
        "aws.iam#requiredActions": [
          "iam:CreateServiceLinkedRole",
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy",
          "s3:PutBucketPolicy",
          "s3:PutBucketPublicAccessBlock",
          "s3:CreateBucket",
          "s3:ListBucket",
          "s3:PutBucketVersioning",
          "s3:PutBucketVersioning",
          "organizations:DescribeOrganization",
          "organizations:ListDelegatedServicesForAccount",
          "lakeformation:GetDataLakeSettings",
          "lakeformation:PutDataLakeSettings",
          "kms:DescribeKey",
          "kms:CreateGrant",
          "events:PutRule",
          "events:PutTargets",
          "sqs:CreateQueue",
          "sqs:GetQueueAttributes",
          "sqs:SetQueueAttributes",
          "lambda:CreateFunction",
          "lambda:CreateEventSourceMapping"
        ],
        "smithy.api#documentation": "<p>Specifies where to store your security data and for how long. You can add a rollup\n         Region to consolidate data from multiple Amazon Web Services Regions.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/datalake",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update subscriptions to the SNS topics for exception notifications",
        "smithy.api#documentation": "<p>Updates the specified notification subscription in Amazon Security Lake for the organization\n         you specify.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscriptionRequest": {
      "type": "structure",
      "members": {
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#SubscriptionProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception messages are posted.</p>",
            "smithy.api#required": {}
          }
        },
        "notificationEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The account that is subscribed to receive exception notifications.</p>",
            "smithy.api#required": {}
          }
        },
        "exceptionTimeToLive": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The time-to-live (TTL) for the exception message to remain.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLakeExceptionSubscriptionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLakeRequest": {
      "type": "structure",
      "members": {
        "configurations": {
          "target": "com.amazonaws.securitylake#DataLakeConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Specify the Region or Regions that will contribute data to the rollup region.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDataLakeResponse": {
      "type": "structure",
      "members": {
        "dataLakes": {
          "target": "com.amazonaws.securitylake#DataLakeResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The created Security Lake configuration object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update subscriber",
        "aws.iam#requiredActions": [
          "iam:GetRole",
          "iam:PutRolePolicy",
          "iam:DeleteRolePolicy",
          "events:CreateApiDestination",
          "events:CreateConnection",
          "events:ListApiDestinations",
          "events:ListConnections",
          "events:PutRule",
          "events:DescribeRule",
          "events:PutTargets"
        ],
        "smithy.api#documentation": "<p>Updates an existing subscription for the given Amazon Security Lake account ID. You can update\n         a subscriber by changing the sources that the subscriber consumes data from.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/subscribers/{subscriberId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberNotification": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberNotificationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberNotificationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#BadRequestException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a webhook invocation to notify a client when there is new data in the data lake",
        "aws.iam#requiredActions": [
          "iam:CreateServiceLinkedRole",
          "iam:GetRole",
          "iam:DeleteRolePolicy",
          "iam:PutRolePolicy",
          "iam:PassRole",
          "s3:PutLifecycleConfiguration",
          "s3:PutBucketNotification",
          "s3:GetBucketNotification",
          "s3:PutBucketPolicy",
          "s3:PutBucketPublicAccessBlock",
          "s3:CreateBucket",
          "s3:ListBucket",
          "s3:PutBucketVersioning",
          "events:CreateApiDestination",
          "events:CreateConnection",
          "events:ListApiDestinations",
          "events:ListConnections",
          "events:PutRule",
          "events:DescribeRule",
          "events:PutTargets",
          "sqs:CreateQueue",
          "sqs:DeleteQueue",
          "sqs:GetQueueAttributes",
          "sqs:GetQueueUrl",
          "sqs:SetQueueAttributes"
        ],
        "smithy.api#documentation": "<p>Updates an existing notification method for the subscription (SQS or HTTPs endpoint) or\n         switches the notification subscription endpoint for a subscriber.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/subscribers/{subscriberId}/notification",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberNotificationRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscription ID for which the subscription notification is specified.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "configuration": {
          "target": "com.amazonaws.securitylake#NotificationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for subscriber notification.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberNotificationResponse": {
      "type": "structure",
      "members": {
        "subscriberEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber endpoint to which exception messages are posted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberRequest": {
      "type": "structure",
      "members": {
        "subscriberId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Security Lake that uniquely identifies your subscription.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "subscriberIdentity": {
          "target": "com.amazonaws.securitylake#AwsIdentity",
          "traits": {
            "smithy.api#documentation": "<p>The AWS identity used to access your data.</p>"
          }
        },
        "subscriberName": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Security Lake account subscriber.</p>",
            "smithy.api#length": {
              "max": 64
            }
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The description of the Security Lake account subscriber.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#LogSourceResourceList",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services from which logs and events are collected. For\n         the list of supported Amazon Web Services, see the <a href=\"https://docs.aws.amazon.com/security-lake/latest/userguide/internal-sources.html\">Amazon Security Lake User Guide</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriber": {
          "target": "com.amazonaws.securitylake#SubscriberResource",
          "traits": {
            "smithy.api#documentation": "<p>The updated subscriber information.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    }
  }
}
