{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.securitylake#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action. Access denied errors appear when Amazon Security Lake explicitly or implicitly denies an authorization\n         request. An explicit denial occurs when a policy contains a Deny statement for the specific\n         Amazon Web Services action. An implicit denial occurs when there is no applicable Deny statement and also\n         no applicable Allow statement.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.securitylake#AccessType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LAKEFORMATION",
            "name": "LAKEFORMATION"
          },
          {
            "value": "S3",
            "name": "S3"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#AccessTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AccessType"
      }
    },
    "com.amazonaws.securitylake#AccountList": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#AccountNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake can't find an Amazon Web Services account with the accountID that you specified, or the account whose credentials you used to make this request isn't a member of an organization.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.securitylake#AccountSources": {
      "type": "structure",
      "members": {
        "account": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Account ID of the Security Lake account for which logs are collected.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services services from which logs and events are collected. Amazon Security Lake supports logs and events collection for natively-supported Amazon Web Services services. For more information, see the Amazon Security Lake User Guide. </p>",
            "smithy.api#required": {}
          }
        },
        "logsStatus": {
          "target": "com.amazonaws.securitylake#LogsStatusList",
          "traits": {
            "smithy.api#documentation": "<p>Log status for the Security Lake account.</p>"
          }
        },
        "eventClass": {
          "target": "com.amazonaws.securitylake#OcsfEventClass",
          "traits": {
            "smithy.api#documentation": "<p>Initializes a new instance of the Event class.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Security Lake can collect logs and events from supported Amazon Web Services services and custom sources. </p>"
      }
    },
    "com.amazonaws.securitylake#AccountSourcesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AccountSources"
      }
    },
    "com.amazonaws.securitylake#AllDimensionsMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "com.amazonaws.securitylake#TwoDimensionsMap"
      }
    },
    "com.amazonaws.securitylake#AutoEnableNewRegionConfiguration": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.securitylake#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Regions where Security Lake is auto enabled</p>",
            "smithy.api#required": {}
          }
        },
        "sources": {
          "target": "com.amazonaws.securitylake#AwsSourceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services sources which are auto enabled in Security Lake.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Automatically enable new organization accounts as member accounts from a Security Lake administrator\n         account.</p>"
      }
    },
    "com.amazonaws.securitylake#AutoEnableNewRegionConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AutoEnableNewRegionConfiguration"
      }
    },
    "com.amazonaws.securitylake#AwsAccountId": {
      "type": "string",
      "traits": {
        "aws.api#data": "account",
        "smithy.api#length": {
          "min": 12,
          "max": 12
        },
        "smithy.api#pattern": "^\\d+$"
      }
    },
    "com.amazonaws.securitylake#AwsLogSourceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ROUTE53",
            "name": "ROUTE53"
          },
          {
            "value": "VPC_FLOW",
            "name": "VPC_FLOW"
          },
          {
            "value": "CLOUD_TRAIL",
            "name": "CLOUD_TRAIL"
          },
          {
            "value": "SH_FINDINGS",
            "name": "SH_FINDINGS"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#AwsSourceTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AwsLogSourceType"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#BucketNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake  generally returns 404 errors if the requested object is missing from the\n         bucket.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.securitylake#ConcurrentModificationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>More than one process tried to modify a resource at the same time. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.securitylake#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A conflict occurred when prompting for the Resource ID.</p>",
            "smithy.api#required": {}
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The resource type. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Occurs when a conflict with a previous successful write is detected. This generally\n         occurs when the previous write did not have time to propagate to the host serving the\n         current request. A retry (with appropriate backoff logic) is the recommended response to\n         this exception.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.securitylake#ConflictSourceNamesException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>There was a conflict when you attempted to modify a Security Lake source name. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#ConflictSubscriptionException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A conflicting subscription exception operation is in progress. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateAwsLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateAwsLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#S3Exception"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a natively-supported Amazon Web Services service as a Security Lake source. Enables\n         source types for member accounts in required Regions, based on specified parameters. You\n         can choose any source type in any Region for accounts that are either part of a trusted\n         organization or standalone accounts. At least one of the three dimensions is a mandatory\n         input to this API. However, any combination of the three dimensions can be supplied to this\n         API. </p>\n         <p>By default, dimension refers to the entire set. When you don't provide a dimension,\n         Security Lake assumes that the missing dimension refers to the entire set. This is overridden\n         when you supply any one of the inputs. For instance, when members is not specified, the API\n         disables all Security Lake member accounts for sources. Similarly, when Regions are not\n         specified, Security Lake is disabled for all the Regions where Security Lake is available as a\n         service.</p>\n         <p>You can use this API only to enable a natively-supported Amazon Web Services services as\n         a source. Use <code>CreateCustomLogSource</code> to enable data collection from a custom\n         source. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/logsources/aws",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSourceRequest": {
      "type": "structure",
      "members": {
        "inputOrder": {
          "target": "com.amazonaws.securitylake#DimensionSet",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the input order to enable dimensions in Security Lake, namely region, source\n         type, and member account.</p>",
            "smithy.api#required": {}
          }
        },
        "enableAllDimensions": {
          "target": "com.amazonaws.securitylake#AllDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>Enables specific sources in all Regions and source types.</p>"
          }
        },
        "enableTwoDimensions": {
          "target": "com.amazonaws.securitylake#TwoDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>Enables specific service sources in specific accounts or Regions.</p>"
          }
        },
        "enableSingleDimension": {
          "target": "com.amazonaws.securitylake#InputSet",
          "traits": {
            "smithy.api#documentation": "<p>Enables all sources in specific accounts or Regions.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CreateAwsLogSourceResponse": {
      "type": "structure",
      "members": {
        "processing": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>List of all accounts which are in the process of enabling a natively-supported Amazon Web Services service as a Security Lake.</p>"
          }
        },
        "failed": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>List of all accounts in which enabling a natively-supported Amazon Web Services service as a Security Lake failed. The failure occurred as these accounts are not part of an organization.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateCustomLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateCustomLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#BucketNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictSourceNamesException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a third-party custom source in Amazon Security Lake, from the Region where you want to\n         create a custom source. Security Lake can collect logs and events from third-party custom\n         sources. After creating the appropriate API roles, use this API to add a custom source name\n         in Security Lake. This operation creates a partition in the Security Lake S3 bucket as the target\n         location for log files from the custom source, an associated Glue table, and\n         an Glue crawler.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/logsources/custom",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSourceRequest": {
      "type": "structure",
      "members": {
        "customSourceName": {
          "target": "com.amazonaws.securitylake#CustomSourceType",
          "traits": {
            "smithy.api#documentation": "<p>The custom source name for a third-party custom source. </p>",
            "smithy.api#required": {}
          }
        },
        "eventClass": {
          "target": "com.amazonaws.securitylake#OcsfEventClass",
          "traits": {
            "smithy.api#documentation": "<p>The Open Cybersecurity Schema Framework (OCSF) event class.</p>",
            "smithy.api#required": {}
          }
        },
        "glueInvocationRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM Role ARN to be used by the Glue Crawler. The recommended IAM policies are:</p>\n         <ul>\n            <li>\n               <p>The managed policy <code>AWSGlueServiceRole</code>\n               </p>\n            </li>\n            <li>\n               <p>A custom policy granting access to your S3 Data Lake</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "logProviderAccountId": {
          "target": "com.amazonaws.securitylake#AwsAccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Account ID that will assume the above Role to put logs into the Data Lake.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateCustomLogSourceResponse": {
      "type": "structure",
      "members": {
        "customDataLocation": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The location of the partition in the Security Lake S3 bucket.</p>",
            "smithy.api#required": {}
          }
        },
        "glueCrawlerName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Glue crawler.</p>",
            "smithy.api#required": {}
          }
        },
        "glueTableName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The table name of the Glue crawler.</p>",
            "smithy.api#required": {}
          }
        },
        "glueDatabaseName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Glue database where results are written, such as:\n            <code>arn:aws:daylight:us-east-1::database/sometable/*</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "logProviderAccessRoleArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> IAM Role ARN to be used by the entity putting logs into your Custom Source partition.\n         Security Lake will apply the correct access policies to this Role, but this Role must have the\n         trust policy created manually. This Role's name must start with the text 'Security Lake'. It\n         must trust the <code>logProviderAccountId</code> to assume it.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDatalakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDatalakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Initializes an Amazon Security Lake instance with the provided (or default) configuration. You can enable Security Lake in Regions with customized settings in advance before enabling log collection in Regions. You can either use the <code>enableAll</code> parameter to\n         specify all Regions or you can specify the Regions you want to enable Security Lake using the\n         <code>Regions</code> parameter and configure these Regions using the\n         <code>configurations</code> parameter. When the <code>CreateDataLake</code> API is called\n         multiple times, if that Region is already enabled, it will update the Region if\n         configuration for that Region is provided. If that Region is a new Region, it will be set\n         up with the customized configurations if it is specified. </p>\n         <p>When you enable Security Lake, it starts ingesting security data after the\n         <code>CreateAwsLogSource</code> call. This includes ingesting security\n         data from sources, storing data, and making data accessible to subscribers. Security Lake also\n         enables all the existing settings and resources that it stores or maintains for your\n         account in the current Region, including security log and event data. For more information,\n         see the Amazon Security Lake User Guide.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeAutoEnable": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDatalakeAutoEnableRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDatalakeAutoEnableResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Automatically enable Security Lake in the specified Regions to begin ingesting security\n         data. When you choose to enable organization accounts automatically, then Security Lake begins to enable new accounts as member accounts as they are added to the organization. Security Lake does not enable existing organization accounts that are not yet enabled.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/autoenable",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeAutoEnableRequest": {
      "type": "structure",
      "members": {
        "configurationForNewAccounts": {
          "target": "com.amazonaws.securitylake#AutoEnableNewRegionConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Enable Amazon Security Lake with the specified configurations settings to begin ingesting security\n         data for new accounts in Security Lake. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeAutoEnableResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeDelegatedAdmin": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDatalakeDelegatedAdminRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDatalakeDelegatedAdminResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Designates the Security Lake administrator account for the organization. This API can only\n         be called by the organization management account. The organization management account\n         cannot be the delegated administrator account.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/delegate",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeDelegatedAdminRequest": {
      "type": "structure",
      "members": {
        "account": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Account ID of the Security Lake delegated administrator.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeDelegatedAdminResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates the specified notification subscription in Security Lake. Creates the specified\n         subscription notifications in the specified organization. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscriptionRequest": {
      "type": "structure",
      "members": {
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#SubscriptionProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception messages are posted. </p>",
            "smithy.api#required": {}
          }
        },
        "notificationEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The account in which the exception notifications subscription is created.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscriptionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeRequest": {
      "type": "structure",
      "members": {
        "regions": {
          "target": "com.amazonaws.securitylake#RegionSet",
          "traits": {
            "smithy.api#documentation": "<p>Enable Security Lake in the specified Regions to begin ingesting security data. To enable Security Lake in specific Amazon Web Services Regions, such as us-east-1 or ap-northeast-3, provide the Region codes. For a list of Region codes, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\">Region codes</a> in the Amazon Web Services General Reference.</p>"
          }
        },
        "configurations": {
          "target": "com.amazonaws.securitylake#LakeConfigurationRequestMap",
          "traits": {
            "smithy.api#documentation": "<p>Enable Security Lake with the specified configurations settings to begin ingesting security\n         data. </p>"
          }
        },
        "enableAll": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Enable Security Lake in all Regions to begin ingesting security data.</p>"
          }
        },
        "metaStoreManagerRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Role ARN used to create and update the Glue table with partitions generated by ingestion and normalization of Amazon Web Services log sources and custom sources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#CreateDatalakeResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#CreateSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#BucketNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictSubscriptionException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a subscription permission for accounts that are already enabled in Security Lake.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/subscribers",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberRequest": {
      "type": "structure",
      "members": {
        "sourceTypes": {
          "target": "com.amazonaws.securitylake#SourceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services services from which logs and events are collected. Amazon Security Lake\n         supports logs and events collection for natively-supported Amazon Web Services\n         services.</p>",
            "smithy.api#required": {}
          }
        },
        "accountId": {
          "target": "com.amazonaws.securitylake#AwsAccountId",
          "traits": {
            "smithy.api#documentation": "<p>The third party Amazon Web Services account ID used to access your data.</p>",
            "smithy.api#required": {}
          }
        },
        "externalId": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The external ID of the subscriber. External ID allows the user that is assuming the role\n         to assert the circumstances in which they are operating. It also provides a way for the\n         account owner to permit the role to be assumed only under specific circumstances.</p>",
            "smithy.api#required": {}
          }
        },
        "accessTypes": {
          "target": "com.amazonaws.securitylake#AccessTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 or Lake Formation access type.</p>"
          }
        },
        "subscriberName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of your Amazon Security Lake subscriber account.</p>",
            "smithy.api#length": {
              "max": 64
            },
            "smithy.api#required": {}
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber descriptions for the subscriber account in Amazon Security Lake. </p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriptionId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The <code>subscriptionId</code> that was created by the <code>CreateSubscriber</code> API call.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) created by the user to provide to the subscriber. For\n         more information about ARNs and how to use them in policies, see IAM identifiers in the IAM\n         User Guide.</p>"
          }
        },
        "snsArn": {
          "target": "com.amazonaws.securitylake#SnsTopicArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Amazon Simple Notification Service.</p>"
          }
        },
        "s3BucketArn": {
          "target": "com.amazonaws.securitylake#S3BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Amazon S3 bucket. </p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriptionNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#CreateSubscriptionNotificationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#CreateSubscriptionNotificationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates the specified notification subscription in Security Lake. Creates the specified\n         subscription notifications from the specified organization. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/subscription-notifications/{subscriptionId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriptionNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "subscriptionId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscription ID for which the subscription notification is specified. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "subscriptionEndpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The subscription endpoint in Security Lake.</p>",
            "smithy.api#pattern": "^(arn:aws:.+$|https?://.+$)"
          }
        },
        "httpsApiKeyName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key name for the subscription notification.</p>"
          }
        },
        "httpsApiKeyValue": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key value for the subscription notification.</p>"
          }
        },
        "httpsMethod": {
          "target": "com.amazonaws.securitylake#HttpsMethod",
          "traits": {
            "smithy.api#documentation": "<p>The HTTPS method used for the subscription notification. </p>"
          }
        },
        "createSqs": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Create a new subscription notification for the specified subscription ID in Security Lake.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) specifying the role of the subscriber.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CreateSubscriptionNotificationConfigurationResponse": {
      "type": "structure",
      "members": {
        "queueArn": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Returns the Amazon resource name (ARN) of the queue.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#CustomSourceType": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\\\\\w\\-_:/.]*$"
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteAwsLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteAwsLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes a natively-supported Amazon Web Services service as a Amazon Security Lake source. When you remove the\n         source, Security Lake stops collecting data from that source, and subscribers can no\n         longer consume new data from the source. Subscribers can still consume data that Amazon\n         Security Lake collected from the source before disablement.</p>\n         <p>You can choose any source type in any Region for accounts that are either part of a\n         trusted organization or standalone accounts. At least one of the three dimensions is a\n         mandatory input to this API. However, any combination of the three dimensions can be\n         supplied to this API. </p>\n         <p>By default, dimension refers to the entire set. This is overridden when you supply any\n         one of the inputs. For instance, when members is not specified, the API disables all\n         Security Lake member accounts for sources. Similarly, when Regions are not specified, Security Lake\n         is disabled for all the Regions where Security Lake is available as a service.</p>\n         <p>You can use this API to remove a natively-supported Amazon Web Services service as a source. Use\n            <code>DeregisterCustomData</code> to remove a custom source.</p>\n         <p>When you don't provide a dimension, Security Lake  assumes that the missing dimension refers\n         to the entire set. For example, if you don't provide specific accounts, the API applies to\n         the entire set of accounts in your organization.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/logsources/aws/delete",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSourceRequest": {
      "type": "structure",
      "members": {
        "inputOrder": {
          "target": "com.amazonaws.securitylake#DimensionSet",
          "traits": {
            "smithy.api#documentation": "<p>This is a mandatory input. Specifies the input order to disable dimensions in Security Lake,\n         namely Region, source type, and member. </p>",
            "smithy.api#required": {}
          }
        },
        "disableAllDimensions": {
          "target": "com.amazonaws.securitylake#AllDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>Removes the specific Amazon Web Services sources from all Regions and source types.</p>"
          }
        },
        "disableTwoDimensions": {
          "target": "com.amazonaws.securitylake#TwoDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>Remove a specific Amazon Web Services source from specific accounts or Regions.</p>"
          }
        },
        "disableSingleDimension": {
          "target": "com.amazonaws.securitylake#InputSet",
          "traits": {
            "smithy.api#documentation": "<p>Removes all Amazon Web Services sources from specific accounts or Regions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteAwsLogSourceResponse": {
      "type": "structure",
      "members": {
        "processing": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>Deletion of the Amazon Web Services sources is in-progress.</p>"
          }
        },
        "failed": {
          "target": "com.amazonaws.securitylake#AccountList",
          "traits": {
            "smithy.api#documentation": "<p>Deletion of the Amazon Web Services sources failed as the account is not a part of the organization.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteCustomLogSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteCustomLogSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#BucketNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictSourceNamesException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes a custom log source from Security Lake.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/logsources/custom",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSourceRequest": {
      "type": "structure",
      "members": {
        "customSourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The custom source name for the custome log source.</p>",
            "smithy.api#httpQuery": "customSourceName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteCustomLogSourceResponse": {
      "type": "structure",
      "members": {
        "customDataLocation": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The location of the partition in the Security Lake S3 bucket.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>When you delete Amazon Security Lake from your account, Security Lake is disabled in all Regions.\n         Also, this API automatically performs the off-boarding steps to off-board the account from\n         Security Lake . This includes ingesting security data from sources, storing data, and making\n         data accessible to subscribers. Security Lake also deletes all the existing settings and\n         resources that it stores or maintains for your account in the current Region, including\n         security log and event data. <code>DeleteDatalake</code> does not delete the S3 bucket\n         which is owned by the Amazon Web Services account. For more information, see the Amazon Security Lake User Guide.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeAutoEnable": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeAutoEnableRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeAutoEnableResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Automatically delete Security Lake in the specified Regions to stop ingesting security data. When you delete Amazon Security Lake from your account, Security Lake is disabled in all Regions. Also, this API\n         automatically performs the off-boarding steps to off-board the account from Security Lake .\n         This includes ingesting security data from sources, storing data, and making data\n         accessible to subscribers. Security Lake also deletes all the existing settings and resources that\n         it stores or maintains for your account in the current Region, including security log and\n         event data. For more information, see the Amazon Security Lake User Guide. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/autoenable/delete",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeAutoEnableRequest": {
      "type": "structure",
      "members": {
        "removeFromConfigurationForNewAccounts": {
          "target": "com.amazonaws.securitylake#AutoEnableNewRegionConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Delete Amazon Security Lake with the specified configurations settings to stop ingesting security data for new accounts in Security Lake. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeAutoEnableResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdmin": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdminRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdminResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the Security Lake administrator account for the organization. This API can only be called by the organization management account. The organization management account cannot be the delegated administrator account.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake/delegate/{account}",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdminRequest": {
      "type": "structure",
      "members": {
        "account": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Account ID the Security Lake delegated administrator.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdminResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified notification subscription in Security Lake. Deletes the specified subscription notifications in the specified organization.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscriptionRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscriptionResponse": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the status of the delete Security Lake operation for an account. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteDatalakeResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#BucketNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified subscription permissions to Security Lake. Deletes the specified subscription permissions from the specified organization. </p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/subscribers",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Security Lake that uniquely identifies your <code>DeleteSubscriber</code> API request. </p>",
            "smithy.api#httpQuery": "id",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriberResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified notification subscription in Security Lake. Deletes the specified\n         subscription notifications from the specified organization. </p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/subscription-notifications/{subscriptionId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "subscriptionId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscription ID of the Amazon Security Lake subscriber account.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#Dimension": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "REGION",
            "name": "REGION"
          },
          {
            "value": "SOURCE_TYPE",
            "name": "SOURCE_TYPE"
          },
          {
            "value": "MEMBER",
            "name": "MEMBER"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#DimensionSet": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#Dimension"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#EndpointProtocol": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HTTPS",
            "name": "HTTPS"
          },
          {
            "value": "SQS",
            "name": "SQS"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#EventBridgeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an error interacting with the Amazon EventBridge service.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#Failures": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List of all exception messages.</p>",
            "smithy.api#required": {}
          }
        },
        "remediation": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List of all remediation steps for failures.</p>",
            "smithy.api#required": {}
          }
        },
        "timestamp": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>This error can occur if you configure the wrong timestamp format, or if the subset of entries used for validation had errors or missing values.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>List of all failures.</p>"
      }
    },
    "com.amazonaws.securitylake#FailuresResponse": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List of Regions where the failure occurred. </p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.securitylake#Failureslist",
          "traits": {
            "smithy.api#documentation": "<p>List of all failures. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Response element for actions which make changes namely create, update, or delete actions. </p>"
      }
    },
    "com.amazonaws.securitylake#FailuresResponseList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#FailuresResponse"
      }
    },
    "com.amazonaws.securitylake#Failureslist": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#Failures"
      }
    },
    "com.amazonaws.securitylake#GetDatalake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDatalakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDatalakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieve the Security Lake configuration object for the specified account ID. This API does not take input parameters. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeAutoEnable": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDatalakeAutoEnableRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDatalakeAutoEnableResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the configuration that will be automatically set up for accounts added to the organization after the organization has on boarded to Amazon Security Lake. This API does not take input parameters.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake/autoenable",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeAutoEnableRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeAutoEnableResponse": {
      "type": "structure",
      "members": {
        "autoEnableNewAccounts": {
          "target": "com.amazonaws.securitylake#AutoEnableNewRegionConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for new accounts.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsExpiry": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDatalakeExceptionsExpiryRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDatalakeExceptionsExpiryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the expiration period and time-to-live (TTL) for which the exception message will remain. Exceptions are stored by default, for a 2 week period of time from when a record was\n         created in Security Lake. This API does not take input parameters. This API does not take input parameters.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake/exceptions/expiry",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsExpiryRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsExpiryResponse": {
      "type": "structure",
      "members": {
        "exceptionMessageExpiry": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The expiration period and time-to-live (TTL).</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDatalakeExceptionsSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDatalakeExceptionsSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the details of exception notifications for the account in Amazon Security Lake.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsSubscriptionRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeExceptionsSubscriptionResponse": {
      "type": "structure",
      "members": {
        "protocolAndNotificationEndpoint": {
          "target": "com.amazonaws.securitylake#ProtocolAndNotificationEndpoint",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the exception notification subscription information.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeResponse": {
      "type": "structure",
      "members": {
        "configurations": {
          "target": "com.amazonaws.securitylake#LakeConfigurationResponseMap",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the Security Lake configuration object. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetDatalakeStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetDatalakeStatusResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieve the Security Lake configuration object for the specified account ID. This API does not take input parameters. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/status",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxAccountResults",
          "items": "accountSourcesList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeStatusRequest": {
      "type": "structure",
      "members": {
        "accountSet": {
          "target": "com.amazonaws.securitylake#InputSet",
          "traits": {
            "smithy.api#documentation": "<p>The account IDs for which a static snapshot of the current Region, including enabled\n         accounts and log sources is retrieved.</p>"
          }
        },
        "maxAccountResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum limit of accounts for which the static snapshot of the current Region including enabled accounts and log sources is retrieved.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#GetDatalakeStatusResponse": {
      "type": "structure",
      "members": {
        "accountSourcesList": {
          "target": "com.amazonaws.securitylake#AccountSourcesList",
          "traits": {
            "smithy.api#documentation": "<p>The list of enabled accounts and enabled sources.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#GetSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#GetSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#GetSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves subscription information for the specified subscription ID.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/subscribers/{id}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#GetSubscriberRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Security Lake that uniquely identifies your <code>GetSubscriber</code> API request.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.securitylake#GetSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriber": {
          "target": "com.amazonaws.securitylake#SubscriberResource",
          "traits": {
            "smithy.api#documentation": "<p>Subscription information for the specified subscription ID</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#HttpsMethod": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "POST",
            "name": "POST"
          },
          {
            "value": "PUT",
            "name": "PUT"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#InputSet": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#SafeString"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "retryAfterSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Retry the request after the specified time. </p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Internal service exceptions are sometimes caused by transient issues. Before you start\n         troubleshooting, perform the operation again. </p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.securitylake#InvalidInputException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was rejected because an invalid or out-of-range value was supplied for an\n         input parameter. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#LakeConfigurationRequest": {
      "type": "structure",
      "members": {
        "encryptionKey": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption key used by Security Lake to encrypt the lake configuration\n         object.</p>"
          }
        },
        "retentionSettings": {
          "target": "com.amazonaws.securitylake#RetentionSettingList",
          "traits": {
            "smithy.api#documentation": "<p>Retention settings for the destination Amazon S3 buckets. </p>"
          }
        },
        "tagsMap": {
          "target": "com.amazonaws.securitylake#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an\n         optional value, both of which you define.</p>"
          }
        },
        "replicationDestinationRegions": {
          "target": "com.amazonaws.securitylake#RegionSet",
          "traits": {
            "smithy.api#documentation": "<p>Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets.\n         Amazon S3 buckets that are configured for object replication can be owned by the same Amazon Web Services account or\n         by different accounts. You can replicate objects to a single destination bucket or to\n         multiple destination buckets. The destination buckets can be in different Amazon Web Services Regions or\n         within the same Region as the source bucket.</p>\n         <p>Set up one or more rollup Regions by providing the Region or Regions that should\n         contribute to the central rollup Region. </p>"
          }
        },
        "replicationRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Replication settings for the Amazon S3 buckets. This parameter uses the IAM role\n         created by you that is managed by Security Lake, to ensure the replication setting is correct. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details of lake configuration object in Amazon Security Lake.</p>"
      }
    },
    "com.amazonaws.securitylake#LakeConfigurationRequestMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.securitylake#Region"
      },
      "value": {
        "target": "com.amazonaws.securitylake#LakeConfigurationRequest"
      }
    },
    "com.amazonaws.securitylake#LakeConfigurationResponse": {
      "type": "structure",
      "members": {
        "encryptionKey": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption key used by Security Lake to encrypt the lake configuration</p>"
          }
        },
        "retentionSettings": {
          "target": "com.amazonaws.securitylake#RetentionSettingList",
          "traits": {
            "smithy.api#documentation": "<p>Retention settings for the destination Amazon S3 buckets. </p>"
          }
        },
        "tagsMap": {
          "target": "com.amazonaws.securitylake#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an\n         optional value, both of which you define.</p>"
          }
        },
        "replicationDestinationRegions": {
          "target": "com.amazonaws.securitylake#RegionSet",
          "traits": {
            "smithy.api#documentation": "<p>Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets.\n         Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or\n         by different accounts. You can replicate objects to a single destination bucket or to\n         multiple destination buckets. The destination buckets can be in different Amazon Web Services Regions or\n         within the same Region as the source bucket.</p>\n         <p>Set up one or more rollup Regions by providing the Region or Regions that should\n         contribute to the central rollup Region. </p>"
          }
        },
        "replicationRoleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Replication settings for the Amazon S3 buckets. This parameter uses the IAM role\n         created by you that is managed by Security Lake, to ensure the replication setting is correct. </p>"
          }
        },
        "s3BucketArn": {
          "target": "com.amazonaws.securitylake#S3BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Resource Names (ARNs) uniquely identify Amazon Web Services resources. Security Lake requires an ARN\n         when you need to specify a resource unambiguously across all of Amazon Web Services, such as in IAM\n         policies, Amazon Relational Database Service (Amazon RDS) tags, and API calls. </p>"
          }
        },
        "status": {
          "target": "com.amazonaws.securitylake#settingsStatus",
          "traits": {
            "smithy.api#documentation": "<p>Retrieves the status of the configuration operation for an account in Amazon Security Lake. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details of lake configuration object in Amazon Security Lake.</p>"
      }
    },
    "com.amazonaws.securitylake#LakeConfigurationResponseMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.securitylake#Region"
      },
      "value": {
        "target": "com.amazonaws.securitylake#LakeConfigurationResponse"
      }
    },
    "com.amazonaws.securitylake#ListDatalakeExceptions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListDatalakeExceptionsRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListDatalakeExceptionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List the Amazon Security Lake exceptions that you can use to find the source of problems and fix them.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/datalake/exceptions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxFailures",
          "items": "nonRetryableFailures"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListDatalakeExceptionsRequest": {
      "type": "structure",
      "members": {
        "regionSet": {
          "target": "com.amazonaws.securitylake#RegionSet",
          "traits": {
            "smithy.api#documentation": "<p>List the regions from which exceptions are retrieved.</p>"
          }
        },
        "maxFailures": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>List the maximum number of failures in Security Lake.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List if there are more results available. if nextToken is returned, You can make the call again\n         using the returned token to retrieve the next page</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#ListDatalakeExceptionsResponse": {
      "type": "structure",
      "members": {
        "nonRetryableFailures": {
          "target": "com.amazonaws.securitylake#FailuresResponseList",
          "traits": {
            "smithy.api#documentation": "<p>Lists the non-retryable failures in the current region.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>List if there are more results available. if nextToken is returned, You can make the call again\n         using the returned token to retrieve the next page</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#ListLogSources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListLogSourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListLogSourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the log sources in the current region.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/logsources/list",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "regionSourceTypesAccountsList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListLogSourcesRequest": {
      "type": "structure",
      "members": {
        "inputOrder": {
          "target": "com.amazonaws.securitylake#DimensionSet",
          "traits": {
            "smithy.api#documentation": "<p>Lists the log sources in input order, namely Region, source\n         type, and member account.</p>"
          }
        },
        "listAllDimensions": {
          "target": "com.amazonaws.securitylake#AllDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>List the view of log sources for enabled Security Lake accounts in all Regions and source types.</p>"
          }
        },
        "listTwoDimensions": {
          "target": "com.amazonaws.securitylake#TwoDimensionsMap",
          "traits": {
            "smithy.api#documentation": "<p>Lists the log sources for the specified source types in enabled Security Lake\n         accounts for the entire Region, for selected member accounts.</p>"
          }
        },
        "listSingleDimension": {
          "target": "com.amazonaws.securitylake#InputSet",
          "traits": {
            "smithy.api#documentation": "<p>List the view of log sources for enabled Security Lake accounts for the entire region.</p>"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of accounts for which the configuration is displayed.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can make the call again\n         using the returned token to retrieve the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#ListLogSourcesResponse": {
      "type": "structure",
      "members": {
        "regionSourceTypesAccountsList": {
          "target": "com.amazonaws.securitylake#RegionSourceTypesAccountsList",
          "traits": {
            "smithy.api#documentation": "<p>Lists the log sources in the Regions for enabled Security Lake accounts.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can make the call again\n         using the returned token to retrieve the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#ListSubscribers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#ListSubscribersRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#ListSubscribersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List all subscribers for the specific Security Lake account ID.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/subscribers",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "subscribers"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.securitylake#ListSubscribersRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can make the call again\n         using the returned token to retrieve the next page.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of accounts for which the configuration is displayed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      }
    },
    "com.amazonaws.securitylake#ListSubscribersResponse": {
      "type": "structure",
      "members": {
        "subscribers": {
          "target": "com.amazonaws.securitylake#SubscriberList",
          "traits": {
            "smithy.api#documentation": "<p>The subscribers available in the specified Security Lake account ID.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>If nextToken is returned, there are more results available. You can make the call again\n         using the returned token to retrieve the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#LogsStatus": {
      "type": "structure",
      "members": {
        "pathToLogs": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Defines path the stored logs are available which has information on your systems,\n         applications, and services. </p>",
            "smithy.api#required": {}
          }
        },
        "healthStatus": {
          "target": "com.amazonaws.securitylake#SourceStatus",
          "traits": {
            "smithy.api#documentation": "<p>Health status of services including error codes and patterns.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Log status for the Security Lake account.</p>"
      }
    },
    "com.amazonaws.securitylake#LogsStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#LogsStatus"
      }
    },
    "com.amazonaws.securitylake#OcsfEventClass": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ACCESS_ACTIVITY",
            "name": "ACCESS_ACTIVITY"
          },
          {
            "value": "FILE_ACTIVITY",
            "name": "FILE_ACTIVITY"
          },
          {
            "value": "KERNEL_ACTIVITY",
            "name": "KERNEL_ACTIVITY"
          },
          {
            "value": "KERNEL_EXTENSION",
            "name": "KERNEL_EXTENSION"
          },
          {
            "value": "MEMORY_ACTIVITY",
            "name": "MEMORY_ACTIVITY"
          },
          {
            "value": "MODULE_ACTIVITY",
            "name": "MODULE_ACTIVITY"
          },
          {
            "value": "PROCESS_ACTIVITY",
            "name": "PROCESS_ACTIVITY"
          },
          {
            "value": "REGISTRY_KEY_ACTIVITY",
            "name": "REGISTRY_KEY_ACTIVITY"
          },
          {
            "value": "REGISTRY_VALUE_ACTIVITY",
            "name": "REGISTRY_VALUE_ACTIVITY"
          },
          {
            "value": "RESOURCE_ACTIVITY",
            "name": "RESOURCE_ACTIVITY"
          },
          {
            "value": "SCHEDULED_JOB_ACTIVITY",
            "name": "SCHEDULED_JOB_ACTIVITY"
          },
          {
            "value": "SECURITY_FINDING",
            "name": "SECURITY_FINDING"
          },
          {
            "value": "ACCOUNT_CHANGE",
            "name": "ACCOUNT_CHANGE"
          },
          {
            "value": "AUTHENTICATION",
            "name": "AUTHENTICATION"
          },
          {
            "value": "AUTHORIZATION",
            "name": "AUTHORIZATION"
          },
          {
            "value": "ENTITY_MANAGEMENT_AUDIT",
            "name": "ENTITY_MANAGEMENT_AUDIT"
          },
          {
            "value": "DHCP_ACTIVITY",
            "name": "DHCP_ACTIVITY"
          },
          {
            "value": "NETWORK_ACTIVITY",
            "name": "NETWORK_ACTIVITY"
          },
          {
            "value": "DNS_ACTIVITY",
            "name": "DNS_ACTIVITY"
          },
          {
            "value": "FTP_ACTIVITY",
            "name": "FTP_ACTIVITY"
          },
          {
            "value": "HTTP_ACTIVITY",
            "name": "HTTP_ACTIVITY"
          },
          {
            "value": "RDP_ACTIVITY",
            "name": "RDP_ACTIVITY"
          },
          {
            "value": "SMB_ACTIVITY",
            "name": "SMB_ACTIVITY"
          },
          {
            "value": "SSH_ACTIVITY",
            "name": "SSH_ACTIVITY"
          },
          {
            "value": "CLOUD_API",
            "name": "CLOUD_API"
          },
          {
            "value": "CONTAINER_LIFECYCLE",
            "name": "CONTAINER_LIFECYCLE"
          },
          {
            "value": "DATABASE_LIFECYCLE",
            "name": "DATABASE_LIFECYCLE"
          },
          {
            "value": "CONFIG_STATE",
            "name": "CONFIG_STATE"
          },
          {
            "value": "CLOUD_STORAGE",
            "name": "CLOUD_STORAGE"
          },
          {
            "value": "INVENTORY_INFO",
            "name": "INVENTORY_INFO"
          },
          {
            "value": "RFB_ACTIVITY",
            "name": "RFB_ACTIVITY"
          },
          {
            "value": "SMTP_ACTIVITY",
            "name": "SMTP_ACTIVITY"
          },
          {
            "value": "VIRTUAL_MACHINE_ACTIVITY",
            "name": "VIRTUAL_MACHINE_ACTIVITY"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#ProtocolAndNotificationEndpoint": {
      "type": "structure",
      "members": {
        "protocol": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The protocol to which notification messages are posted. </p>"
          }
        },
        "endpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The account which is subscribed to receive exception notifications. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notifications in Security Lake which dictates how notifications are posted at the endpoint. </p>"
      }
    },
    "com.amazonaws.securitylake#Region": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "us-east-1",
            "name": "US_EAST_1"
          },
          {
            "value": "us-west-2",
            "name": "US_WEST_2"
          },
          {
            "value": "eu-central-1",
            "name": "EU_CENTRAL_1"
          },
          {
            "value": "us-east-2",
            "name": "US_EAST_2"
          },
          {
            "value": "eu-west-1",
            "name": "EU_WEST_1"
          },
          {
            "value": "ap-northeast-1",
            "name": "AP_NORTHEAST_1"
          },
          {
            "value": "ap-southeast-2",
            "name": "AP_SOUTHEAST_2"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#RegionSet": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#Region"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#RegionSourceTypesAccountsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#AllDimensionsMap"
      }
    },
    "com.amazonaws.securitylake#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the resource for which the type of resource could not be found.</p>",
            "smithy.api#required": {}
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource that could not be found.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource could not be found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.securitylake#RetentionSetting": {
      "type": "structure",
      "members": {
        "storageClass": {
          "target": "com.amazonaws.securitylake#StorageClass",
          "traits": {
            "smithy.api#documentation": "<p>The range of storage classes that you can choose from based on the data access,\n         resiliency, and cost requirements of your workloads.</p>"
          }
        },
        "retentionPeriod": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The retention period specifies a fixed period of time during which the Security Lake object\n         remains locked. You can specify the retention period for one or more source in days. </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Retention settings for the destination Amazon S3 buckets in Security Lake. </p>"
      }
    },
    "com.amazonaws.securitylake#RetentionSettingList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#RetentionSetting"
      }
    },
    "com.amazonaws.securitylake#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:.*"
      }
    },
    "com.amazonaws.securitylake#S3BucketArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::S3::Bucket"
        }
      }
    },
    "com.amazonaws.securitylake#S3Exception": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides an extension of the AmazonServiceException for errors reported by Amazon S3\n         while processing a request. In particular, this class provides access to Amazon S3's\n         extended request ID. This ID is required debugging information in the case the user needs\n         to contact Amazon about an issue where Amazon S3 is incorrectly handling a request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#SafeString": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\\\\\w\\-_:/.@=+]*$"
      }
    },
    "com.amazonaws.securitylake#SecurityLake": {
      "type": "service",
      "version": "2018-05-10",
      "operations": [
        {
          "target": "com.amazonaws.securitylake#CreateAwsLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#CreateCustomLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDatalake"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDatalakeAutoEnable"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDatalakeDelegatedAdmin"
        },
        {
          "target": "com.amazonaws.securitylake#CreateDatalakeExceptionsSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#CreateSubscriber"
        },
        {
          "target": "com.amazonaws.securitylake#CreateSubscriptionNotificationConfiguration"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteAwsLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteCustomLogSource"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDatalake"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDatalakeAutoEnable"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDatalakeDelegatedAdmin"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteDatalakeExceptionsSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteSubscriber"
        },
        {
          "target": "com.amazonaws.securitylake#DeleteSubscriptionNotificationConfiguration"
        },
        {
          "target": "com.amazonaws.securitylake#GetDatalake"
        },
        {
          "target": "com.amazonaws.securitylake#GetDatalakeAutoEnable"
        },
        {
          "target": "com.amazonaws.securitylake#GetDatalakeExceptionsExpiry"
        },
        {
          "target": "com.amazonaws.securitylake#GetDatalakeExceptionsSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#GetDatalakeStatus"
        },
        {
          "target": "com.amazonaws.securitylake#GetSubscriber"
        },
        {
          "target": "com.amazonaws.securitylake#ListDatalakeExceptions"
        },
        {
          "target": "com.amazonaws.securitylake#ListLogSources"
        },
        {
          "target": "com.amazonaws.securitylake#ListSubscribers"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateDatalake"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiry"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscription"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateSubscriber"
        },
        {
          "target": "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfiguration"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "SecurityLake",
          "arnNamespace": "securitylake",
          "cloudTrailEventSource": "securitylake.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "securitylake"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "*",
            "content-type",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-platform-id",
            "x-amzn-trace-id"
          ],
          "additionalExposedHeaders": ["x-amzn-errortype", "x-amzn-requestid", "x-amzn-trace-id"],
          "maxAge": 86400
        },
        "smithy.api#documentation": "<note>\n            <p>Amazon Security Lake is in preview release. Your use of the Amazon Security Lake\n            preview is subject to Section 2 of the <a href=\"http://aws.amazon.com/service-terms/\">Amazon Web Services Service Terms</a>(\"Betas and Previews\").</p>\n         </note>\n         <p>Amazon Security Lake is a fully-managed security data lake service. You can use Security Lake to automatically centralize \n         security data from cloud, on-premises, and custom sources into a data lake that's stored in your account. Security Lake \n         helps you analyze security data, so you can get a more complete understanding of your security posture across the entire organization and improve the protection of your workloads, applications, and data.</p>\n         <p>The data lake is backed by Amazon Simple Storage Service (Amazon S3) buckets, and \n         you retain ownership over your data.</p>\n         <p>Security Lake automates the collection of security-related log and event data from integrated\n         Amazon Web Services. and third-party services and manages the lifecycle of data with customizable\n         retention and replication settings. Security Lake also converts ingested data into Apache Parquet format and a\n         standard open-source schema called the Open Cybersecurity Schema Framework (OCSF).</p>\n         <p>Other Amazon Web Services and third-party services can subscribe to the data that's stored in Security Lake for \n         incident response and security data analytics.</p>",
        "smithy.api#title": "Amazon Security Lake",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": true,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://securitylake-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://securitylake-fips.{Region}.{PartitionResult#dnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://securitylake.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://securitylake.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://securitylake.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.securitylake#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the resource that exceeds the service quota.</p>",
            "smithy.api#required": {}
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource that exceeds the service quota.</p>",
            "smithy.api#required": {}
          }
        },
        "serviceCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The code for the service in Service Quotas.</p>",
            "smithy.api#required": {}
          }
        },
        "quotaCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>That the rate of requests to Security Lake is exceeding the request quotas for your Amazon Web Services account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You have exceeded your service quota. To perform the requested action, remove some of\n         the relevant resources, or use Service Quotas to request a service quota increase. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.securitylake#SnsTopicArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::SNS::Topic"
        }
      }
    },
    "com.amazonaws.securitylake#SourceStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "DEACTIVATED",
            "name": "DEACTIVATED"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#SourceType": {
      "type": "union",
      "members": {
        "awsSourceType": {
          "target": "com.amazonaws.securitylake#AwsLogSourceType",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports logs and events collection for natively-supported Amazon Web Services services. For more information, see the Amazon Security Lake User Guide.</p>"
          }
        },
        "customSourceType": {
          "target": "com.amazonaws.securitylake#CustomSourceType",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports custom source types. For the detailed list, see the Amazon Security Lake User Guide.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The supported source types from which logs and events are collected in Amazon Security Lake. </p>"
      }
    },
    "com.amazonaws.securitylake#SourceTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#SourceType"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#StorageClass": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "STANDARD_IA",
            "name": "STANDARD_IA"
          },
          {
            "value": "ONEZONE_IA",
            "name": "ONEZONE_IA"
          },
          {
            "value": "INTELLIGENT_TIERING",
            "name": "INTELLIGENT_TIERING"
          },
          {
            "value": "GLACIER_IR",
            "name": "GLACIER_IR"
          },
          {
            "value": "GLACIER",
            "name": "GLACIER"
          },
          {
            "value": "DEEP_ARCHIVE",
            "name": "DEEP_ARCHIVE"
          },
          {
            "value": "EXPIRE",
            "name": "EXPIRE"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#SubscriberList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#SubscriberResource"
      }
    },
    "com.amazonaws.securitylake#SubscriberResource": {
      "type": "structure",
      "members": {
        "subscriptionId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscription ID of the Amazon Security Lake subscriber account.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceTypes": {
          "target": "com.amazonaws.securitylake#SourceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Amazon Security Lake supports logs and events collection for the natively-supported Amazon Web Services services. For more information, see the Amazon Security Lake  User Guide.</p>",
            "smithy.api#required": {}
          }
        },
        "accountId": {
          "target": "com.amazonaws.securitylake#AwsAccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the account that you are using to create your Amazon Security Lake\n         account.</p>",
            "smithy.api#required": {}
          }
        },
        "subscriberName": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The name of your Amazon Security Lake subscriber account.</p>"
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The subscriber descriptions for a subscriber account. The description for a subscriber\n         includes <code>subscriberName</code>, <code>accountID</code>, <code>externalID</code>, and\n         <code>subscriptionId</code>.</p>"
          }
        },
        "subscriptionStatus": {
          "target": "com.amazonaws.securitylake#SubscriptionStatus",
          "traits": {
            "smithy.api#documentation": "<p>Subscription status of the Amazon Security Lake subscriber account.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) specifying the role of the subscriber.</p>"
          }
        },
        "snsArn": {
          "target": "com.amazonaws.securitylake#SnsTopicArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Amazon Simple Notification Service.</p>"
          }
        },
        "s3BucketArn": {
          "target": "com.amazonaws.securitylake#S3BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Amazon S3 bucket. </p>"
          }
        },
        "accessTypes": {
          "target": "com.amazonaws.securitylake#AccessTypeList",
          "traits": {
            "smithy.api#documentation": "<p>You can choose to notify subscribers of new objects with an Amazon Simple Queue Service (Amazon SQS) queue or through messaging to an HTTPS endpoint provided by the subscriber. </p>\n         <p> Subscribers can consume data by directly querying Lake Formation tables in your\n         S3 bucket via services like Amazon Athena. This subscription type is defined as\n         <code>LAKEFORMATION</code>. </p>"
          }
        },
        "subscriptionEndpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The subscription endpoint to which exception messages are posted. </p>"
          }
        },
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#EndpointProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception messages are posted. </p>"
          }
        },
        "externalId": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The external ID of the subscriber. External ID allows the user that is assuming the role\n         to assert the circumstances in which they are operating. It also provides a way for the\n         account owner to permit the role to be assumed only under specific circumstances.</p>"
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the subscription was created. </p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "updatedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the subscription was created. </p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details of the Amazon Security Lake account subscription. Subscribers are notified\n         of new objects for a source as the data is written to your Amazon Security Lake S3 bucket. </p>"
      }
    },
    "com.amazonaws.securitylake#SubscriptionProtocolType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HTTP",
            "name": "HTTP"
          },
          {
            "value": "HTTPS",
            "name": "HTTPS"
          },
          {
            "value": "EMAIL",
            "name": "EMAIL"
          },
          {
            "value": "EMAIL_JSON",
            "name": "EMAIL_JSON"
          },
          {
            "value": "SMS",
            "name": "SMS"
          },
          {
            "value": "SQS",
            "name": "SQS"
          },
          {
            "value": "LAMBDA",
            "name": "LAMBDA"
          },
          {
            "value": "APP",
            "name": "APP"
          },
          {
            "value": "FIREHOSE",
            "name": "FIREHOSE"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#SubscriptionStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "DEACTIVATED",
            "name": "DEACTIVATED"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "READY",
            "name": "READY"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#TagsMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.securitylake#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "serviceCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The code for the service in Service Quotas.</p>"
          }
        },
        "quotaCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>That the rate of requests to Security Lake is exceeding the request quotas for your Amazon Web Services account.</p>"
          }
        },
        "retryAfterSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Retry the request after the specified time. </p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The limit on the number of requests per second was exceeded. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.securitylake#TwoDimensionsMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "com.amazonaws.securitylake#ValueSet"
      }
    },
    "com.amazonaws.securitylake#UUID": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"
      }
    },
    "com.amazonaws.securitylake#UpdateDatalake": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#EventBridgeException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Amazon Security Lake allows you to specify where to store your security data and for how long.\n         You can specify a rollup Region to consolidate data from multiple regions. </p>\n         <p>You can update the properties of a Region or source. Input can either be directly\n         specified to the API. </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/datalake",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiry": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiryRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update the expiration period for the exception message to your preferred time, and control\n         the time-to-live (TTL) for the exception message to remain.\n         Exceptions are stored by default, for a 2 week period of time from when a record was\n         created in Security Lake. </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/datalake/exceptions/expiry",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiryRequest": {
      "type": "structure",
      "members": {
        "exceptionMessageExpiry": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The time-to-live (TTL) for the exception message to remain.</p>",
            "smithy.api#range": {
              "min": 1
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsExpiryResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscription": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscriptionRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscriptionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update the subscription notification for exception notification.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/datalake/exceptions/subscription",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscriptionRequest": {
      "type": "structure",
      "members": {
        "subscriptionProtocol": {
          "target": "com.amazonaws.securitylake#SubscriptionProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The subscription protocol to which exception messages are posted. </p>",
            "smithy.api#required": {}
          }
        },
        "notificationEndpoint": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>The account which is subscribed to receive exception notifications.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeExceptionsSubscriptionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeRequest": {
      "type": "structure",
      "members": {
        "configurations": {
          "target": "com.amazonaws.securitylake#LakeConfigurationRequestMap",
          "traits": {
            "smithy.api#documentation": "<p>The configuration object</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.securitylake#UpdateDatalakeResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriber": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateSubscriberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.securitylake#ConflictSubscriptionException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update the subscription permission for the given Security Lake account ID.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/subscribers/{id}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A value created by Security Lake that uniquely identifies your <code>UpdateSubscriber</code> API request. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "sourceTypes": {
          "target": "com.amazonaws.securitylake#SourceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The supported Amazon Web Services services from which logs and events are collected. Amazon Security Lake\n         supports logs and events collection for the following natively-supported Amazon Web Services\n         services. For more information, see the Amazon Security Lake User Guide.</p>"
          }
        },
        "externalId": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>External ID of the Security Lake account.</p>"
          }
        },
        "subscriberName": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the Security Lake account subscriber. </p>",
            "smithy.api#length": {
              "max": 64
            }
          }
        },
        "subscriberDescription": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Description of the Security Lake account subscriber.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriberResponse": {
      "type": "structure",
      "members": {
        "subscriber": {
          "target": "com.amazonaws.securitylake#SubscriberResource",
          "traits": {
            "smithy.api#documentation": "<p>The account subscriber in Amazon Security Lake.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.securitylake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.securitylake#AccountNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.securitylake#InternalServerException"
        },
        {
          "target": "com.amazonaws.securitylake#InvalidInputException"
        },
        {
          "target": "com.amazonaws.securitylake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.securitylake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create a new subscription notification or add the existing subscription notification\n         setting for the specified subscription ID.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/subscription-notifications/{subscriptionId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "subscriptionId": {
          "target": "com.amazonaws.securitylake#UUID",
          "traits": {
            "smithy.api#documentation": "<p>The subscription ID for which the subscription notification is specified. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "subscriptionEndpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The subscription endpoint in Security Lake.</p>",
            "smithy.api#pattern": "^(arn:aws:.+$|https?://.+$)"
          }
        },
        "httpsApiKeyName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key name for the subscription notification.</p>"
          }
        },
        "httpsApiKeyValue": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key value for the subscription notification.</p>"
          }
        },
        "httpsMethod": {
          "target": "com.amazonaws.securitylake#HttpsMethod",
          "traits": {
            "smithy.api#documentation": "<p>The HTTPS method used for the subscription notification. </p>"
          }
        },
        "createSqs": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Create a new subscription notification for the specified subscription ID in Security Lake.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.securitylake#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) specifying the role of the subscriber. </p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#UpdateSubscriptionNotificationConfigurationResponse": {
      "type": "structure",
      "members": {
        "queueArn": {
          "target": "com.amazonaws.securitylake#SafeString",
          "traits": {
            "smithy.api#documentation": "<p>Returns the Amazon resource name (ARN) of the queue.</p>"
          }
        }
      }
    },
    "com.amazonaws.securitylake#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.securitylake#ValidationExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the validation exception. </p>",
            "smithy.api#required": {}
          }
        },
        "fieldList": {
          "target": "com.amazonaws.securitylake#ValidationExceptionFieldList",
          "traits": {
            "smithy.api#documentation": "<p>The list of parameters that failed to validate. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Your signing certificate could not be validated. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.securitylake#ValidationExceptionField": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of the validation exception.</p>",
            "smithy.api#required": {}
          }
        },
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Describes the error encountered.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to meet the constraints specified in Amazon Security Lake </p>"
      }
    },
    "com.amazonaws.securitylake#ValidationExceptionFieldList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.securitylake#ValidationExceptionField"
      }
    },
    "com.amazonaws.securitylake#ValidationExceptionReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "unknownOperation",
            "name": "UNKNOWN_OPERATION"
          },
          {
            "value": "cannotParse",
            "name": "CANNOT_PARSE"
          },
          {
            "value": "fieldValidationFailed",
            "name": "FIELD_VALIDATION_FAILED"
          },
          {
            "value": "other",
            "name": "OTHER"
          }
        ]
      }
    },
    "com.amazonaws.securitylake#ValueSet": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.securitylake#settingsStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "INITIALIZED",
            "name": "INITIALIZED"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    }
  }
}
