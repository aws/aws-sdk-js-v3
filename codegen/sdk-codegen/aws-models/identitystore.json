{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.identitystore#AWSIdentityStore": {
      "type": "service",
      "version": "2020-06-15",
      "operations": [
        {
          "target": "com.amazonaws.identitystore#GetGroupId"
        },
        {
          "target": "com.amazonaws.identitystore#GetGroupMembershipId"
        },
        {
          "target": "com.amazonaws.identitystore#GetUserId"
        },
        {
          "target": "com.amazonaws.identitystore#IsMemberInGroups"
        },
        {
          "target": "com.amazonaws.identitystore#ListGroupMembershipsForMember"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.identitystore#GroupMembershipResource"
        },
        {
          "target": "com.amazonaws.identitystore#GroupResource"
        },
        {
          "target": "com.amazonaws.identitystore#UserResource"
        }
      ],
      "errors": [
        {
          "target": "com.amazonaws.identitystore#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.identitystore#InternalServerException"
        },
        {
          "target": "com.amazonaws.identitystore#ThrottlingException"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "identitystore",
          "arnNamespace": "identitystore",
          "cloudFormationName": "IdentityStore",
          "cloudTrailEventSource": "identitystore.amazonaws.com",
          "endpointPrefix": "identitystore"
        },
        "aws.auth#sigv4": {
          "name": "identitystore"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<p>The Identity Store service used by AWS IAM Identity Center (successor to AWS Single Sign-On) provides a single place to retrieve all of\n         your identities (users and groups). For more information, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">IAM Identity Center User\n            Guide</a>.</p>\n      \n         <note>\n            <p>Although AWS Single Sign-On was renamed, the <code>sso</code> and\n            <code>identitystore</code> API namespaces will continue to retain their original name for\n            backward compatibility purposes. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed\">IAM Identity Center rename</a>.</p>\n         </note>\n      \n         <p>This reference guide describes the identity store operations that you can call\n         programatically and includes detailed information on data types and errors.</p>",
        "smithy.api#title": "AWS SSO Identity Store",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://identitystore-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws-us-gov",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://identitystore.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://identitystore-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://identitystore.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://identitystore.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region ap-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-south-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-south-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ca-central-1.api.aws"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ca-central-1.api.aws"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-central-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-central-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-north-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-north-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-west-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-west-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-northeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-northeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-east-2.api.aws"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-east-2.api.aws"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://identitystore.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.identitystore#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by\n         the identity store service for each sent request, and is then returned inside the exception\n         if the request fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.identitystore#Address": {
      "type": "structure",
      "members": {
        "StreetAddress": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The\n         street\n         of the address.</p>"
          }
        },
        "Locality": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string of the address locality.</p>"
          }
        },
        "Region": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The\n         region\n         of the address.</p>"
          }
        },
        "PostalCode": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The postal code of the address.</p>"
          }
        },
        "Country": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The country of the address.</p>"
          }
        },
        "Formatted": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a formatted version of the address for display.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string representing the type of address. For example, \"Home.\"</p>"
          }
        },
        "Primary": {
          "target": "com.amazonaws.identitystore#SensitiveBooleanType",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A\n         Boolean\n         value\n         representing whether this is the primary address for the associated\n         resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The address associated with the specified user.</p>"
      }
    },
    "com.amazonaws.identitystore#Addresses": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#Address"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.identitystore#AlternateIdentifier": {
      "type": "union",
      "members": {
        "ExternalId": {
          "target": "com.amazonaws.identitystore#ExternalId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier issued to this resource by an external identity provider.</p>"
          }
        },
        "UniqueAttribute": {
          "target": "com.amazonaws.identitystore#UniqueAttribute",
          "traits": {
            "smithy.api#documentation": "<p>An entity attribute that's unique to a specific entity.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A unique identifier for a user or group that is not the primary identifier. This value can be\n         an identifier from an external identity provider (IdP) that is associated with the user, the group, or a unique attribute. For example, a\n         unique <code>GroupDisplayName</code>.</p>"
      }
    },
    "com.amazonaws.identitystore#AttributeOperation": {
      "type": "structure",
      "members": {
        "AttributePath": {
          "target": "com.amazonaws.identitystore#AttributePath",
          "traits": {
            "smithy.api#documentation": "<p>A string representation of the path to a given attribute or sub-attribute. Supports\n         JMESPath.</p>",
            "smithy.api#required": {}
          }
        },
        "AttributeValue": {
          "target": "com.amazonaws.identitystore#AttributeValue",
          "traits": {
            "smithy.api#documentation": "<p>The value of the attribute. This is a <code>Document</code> type.\n         This type is not supported by Java V1, Go V1, and older versions of the AWS CLI.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An operation that applies to the requested group. This operation might add, replace, or remove an attribute.</p>"
      }
    },
    "com.amazonaws.identitystore#AttributeOperations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#AttributeOperation"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.identitystore#AttributePath": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^\\p{L}+(?:\\.\\p{L}+){0,2}$"
      }
    },
    "com.amazonaws.identitystore#AttributeValue": {
      "type": "document",
      "traits": {
        "smithy.api#documentation": "<p>The value of the attribute. This is a <code>Document</code> type.\n         This type is not supported by Java V1, Go V1, and older versions of the AWS CLI.</p>"
      }
    },
    "com.amazonaws.identitystore#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by the identity store service for each sent request, and is then returned inside the exception if the request fails.</p>"
          }
        },
        "Reason": {
          "target": "com.amazonaws.identitystore#ConflictExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>This request cannot be completed for one of the following reasons:</p>\n         <ul>\n            <li>\n               <p>Performing the requested operation would violate an existing uniqueness claim in the identity store. Resolve the conflict before retrying this request.</p>\n            </li>\n            <li>\n               <p>The requested resource was being concurrently modified by another request.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This request cannot be completed for one of the following reasons:</p>\n         <ul>\n            <li>\n               <p>Performing the requested operation would violate an existing uniqueness claim in the identity store. Resolve the conflict before retrying this request.</p>\n            </li>\n            <li>\n               <p>The requested resource was being concurrently modified by another request.</p>\n            </li>\n         </ul>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.identitystore#ConflictExceptionReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "UNIQUENESS_CONSTRAINT_VIOLATION",
            "name": "UNIQUENESS_CONSTRAINT_VIOLATION"
          },
          {
            "value": "CONCURRENT_MODIFICATION",
            "name": "CONCURRENT_MODIFICATION"
          }
        ]
      }
    },
    "com.amazonaws.identitystore#CreateGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#CreateGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#CreateGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a group within the specified identity store.</p>"
      }
    },
    "com.amazonaws.identitystore#CreateGroupMembership": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#CreateGroupMembershipRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#CreateGroupMembershipResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a relationship between a member and a group. The following identifiers must be specified: <code>GroupId</code>, <code>IdentityStoreId</code>, and <code>MemberId</code>.</p>"
      }
    },
    "com.amazonaws.identitystore#CreateGroupMembershipRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the identifier of a group member. Setting the <code>UserID</code> field to the specific identifier for a user indicates that the user is a member of the group.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#CreateGroupMembershipResponse": {
      "type": "structure",
      "members": {
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a newly created <code>GroupMembership</code> in an identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#CreateGroupRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#GroupDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the name of the group. This value is commonly displayed when the group is referenced.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the description of the group.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#CreateGroupResponse": {
      "type": "structure",
      "members": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The\n         identifier\n         of the newly created group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#CreateUser": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#CreateUserRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#CreateUserResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new user within the specified identity store.</p>"
      }
    },
    "com.amazonaws.identitystore#CreateUserRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "UserName": {
          "target": "com.amazonaws.identitystore#UserName",
          "traits": {
            "smithy.api#documentation": "<p>A unique string used to identify the user. The length limit is 128 characters. \n         This value can consist of letters, accented characters, symbols, numbers, and punctuation. \n         This value is specified at the time the user is created and stored as an attribute of the user object in the identity store.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.identitystore#Name",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the user's name.</p>"
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's name. This value is typically formatted for display when\n         the user is referenced. For example, \"John Doe.\"</p>"
          }
        },
        "NickName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing an alternate name for the user.</p>"
          }
        },
        "ProfileUrl": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a URL that may be associated with the user.</p>"
          }
        },
        "Emails": {
          "target": "com.amazonaws.identitystore#Emails",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>Email</code> objects containing email addresses associated with the user.</p>"
          }
        },
        "Addresses": {
          "target": "com.amazonaws.identitystore#Addresses",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>Address</code> objects containing addresses associated with the user.</p>"
          }
        },
        "PhoneNumbers": {
          "target": "com.amazonaws.identitystore#PhoneNumbers",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>PhoneNumber</code> objects containing phone numbers associated with the user.</p>"
          }
        },
        "UserType": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string indicating the user's type. Possible values depend on each customer's specific needs, so they are left unspecified.</p>"
          }
        },
        "Title": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's title. Possible values are left unspecified given that they depend on each customer's specific needs.</p>"
          }
        },
        "PreferredLanguage": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the preferred language of the user. For example, \"American English\"\n         or \"en-us.\"</p>"
          }
        },
        "Locale": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's geographical region or location.</p>"
          }
        },
        "Timezone": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's time zone.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#CreateUserResponse": {
      "type": "structure",
      "members": {
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the newly created user in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DeleteGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DeleteGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DeleteGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a group within an identity store given <code>GroupId</code>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.identitystore#DeleteGroupMembership": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DeleteGroupMembershipRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DeleteGroupMembershipResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a membership within a group given <code>MembershipId</code>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.identitystore#DeleteGroupMembershipRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a <code>GroupMembership</code> in an identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DeleteGroupMembershipResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.identitystore#DeleteGroupRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DeleteGroupResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.identitystore#DeleteUser": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DeleteUserRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DeleteUserResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a user within an identity store given <code>UserId</code>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.identitystore#DeleteUserRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DeleteUserResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.identitystore#DescribeGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DescribeGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DescribeGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the group metadata and attributes from <code>GroupId</code> in an identity\n         store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#DescribeGroupMembership": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DescribeGroupMembershipRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DescribeGroupMembershipResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves membership metadata and attributes from <code>MembershipId</code> in an identity store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#DescribeGroupMembershipRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a <code>GroupMembership</code> in an identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DescribeGroupMembershipResponse": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a <code>GroupMembership</code> in an identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DescribeGroupRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store, such as\n         <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and\n            <code>1234567890</code> is a randomly generated string that contains numbers and lower\n         case letters. This value is generated at the time that a new identity store is\n         created.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DescribeGroupResponse": {
      "type": "structure",
      "members": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#GroupDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The group’s display name value. The length limit is 1,024 characters. This\n         value can consist of letters, accented characters, symbols, numbers, punctuation, tab, new\n         line, carriage return, space, and nonbreaking space in this attribute. This value is specified at the time that the\n         group is created and stored as an attribute of the group object in the identity\n         store.</p>"
          }
        },
        "ExternalIds": {
          "target": "com.amazonaws.identitystore#ExternalIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>ExternalId</code> objects that contains the identifiers issued to this\n         resource by an external identity provider.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a description of the group.</p>"
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DescribeUser": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#DescribeUserRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#DescribeUserResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the user metadata and attributes from the <code>UserId</code> in an identity store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#DescribeUserRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store, such as\n         <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and\n            <code>1234567890</code> is a randomly generated string that contains numbers and lower\n         case letters. This value is generated at the time that a new identity store is\n         created.</p>",
            "smithy.api#required": {}
          }
        },
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#DescribeUserResponse": {
      "type": "structure",
      "members": {
        "UserName": {
          "target": "com.amazonaws.identitystore#UserName",
          "traits": {
            "smithy.api#documentation": "<p>A unique string used to identify the user. The length limit is 128 characters. This value can consist of\n         letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is\n         created and stored as an attribute of the user object in the identity store.</p>"
          }
        },
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "ExternalIds": {
          "target": "com.amazonaws.identitystore#ExternalIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>ExternalId</code> objects that contains the identifiers issued to this\n         resource by an external identity provider.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.identitystore#Name",
          "traits": {
            "smithy.api#documentation": "<p>The name of the user.</p>"
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The user's name value for display.</p>"
          }
        },
        "NickName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>An alternative descriptive name for the user.</p>"
          }
        },
        "ProfileUrl": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A URL link for the user's profile.</p>"
          }
        },
        "Emails": {
          "target": "com.amazonaws.identitystore#Emails",
          "traits": {
            "smithy.api#documentation": "<p>The user's email value.</p>"
          }
        },
        "Addresses": {
          "target": "com.amazonaws.identitystore#Addresses",
          "traits": {
            "smithy.api#documentation": "<p>The user's physical address.</p>"
          }
        },
        "PhoneNumbers": {
          "target": "com.amazonaws.identitystore#PhoneNumbers",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>PhoneNumber</code> objects associated with a user.</p>"
          }
        },
        "UserType": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string indicating the user's type.</p>"
          }
        },
        "Title": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's title.</p>"
          }
        },
        "PreferredLanguage": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The preferred language of the user.</p>"
          }
        },
        "Locale": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's geographical region or location.</p>"
          }
        },
        "Timezone": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The time zone for a user.</p>"
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#Email": {
      "type": "structure",
      "members": {
        "Value": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing an email address. For example, \"johndoe@amazon.com.\"</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string representing the type of address. For example, \"Work.\"</p>"
          }
        },
        "Primary": {
          "target": "com.amazonaws.identitystore#SensitiveBooleanType",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A\n         Boolean\n         value\n         representing whether this is the primary email\n         address\n         for the associated resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The email address associated with the user.</p>"
      }
    },
    "com.amazonaws.identitystore#Emails": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#Email"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.identitystore#ExceptionMessage": {
      "type": "string"
    },
    "com.amazonaws.identitystore#ExternalId": {
      "type": "structure",
      "members": {
        "Issuer": {
          "target": "com.amazonaws.identitystore#ExternalIdIssuer",
          "traits": {
            "smithy.api#documentation": "<p>The issuer for an external identifier.</p>",
            "smithy.api#required": {}
          }
        },
        "Id": {
          "target": "com.amazonaws.identitystore#ExternalIdIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The identifier issued to this resource by an external identity provider.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The identifier issued to this resource by an external identity provider.</p>"
      }
    },
    "com.amazonaws.identitystore#ExternalIdIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#ExternalIdIssuer": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "^(?!(?i)(arn|aws):)[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#ExternalIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#ExternalId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.identitystore#Filter": {
      "type": "structure",
      "members": {
        "AttributePath": {
          "target": "com.amazonaws.identitystore#AttributePath",
          "traits": {
            "smithy.api#documentation": "<p>The attribute path that is used to specify which attribute name to search. Length limit\n         is 255 characters. For example, <code>UserName</code> is a valid attribute path for the\n            <code>ListUsers</code> API, and <code>DisplayName</code> is a valid attribute path for\n         the <code>ListGroups</code> API.</p>",
            "smithy.api#required": {}
          }
        },
        "AttributeValue": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>Represents the data for an attribute. Each attribute value is described as a name-value\n         pair. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A query filter used by <code>ListUsers</code> and <code>ListGroups</code>. This filter\n         object provides the attribute name and attribute value to search users or groups.</p>"
      }
    },
    "com.amazonaws.identitystore#Filters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#Filter"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.identitystore#GetGroupId": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#GetGroupIdRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#GetGroupIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves <code>GroupId</code> in an identity store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#GetGroupIdRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "AlternateIdentifier": {
          "target": "com.amazonaws.identitystore#AlternateIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for a user or group that is not the primary identifier. This value can be\n         an identifier from an external identity provider (IdP) that is associated with the user, the group, or a unique attribute. For example, a\n         unique <code>GroupDisplayName</code>.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#GetGroupIdResponse": {
      "type": "structure",
      "members": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#GetGroupMembershipId": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#GetGroupMembershipIdRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#GetGroupMembershipIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the <code>MembershipId</code> in an identity store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#GetGroupMembershipIdRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the identifier of a group member. Setting the <code>UserID</code> field to the specific identifier for a user indicates that the user is a member of the group.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#GetGroupMembershipIdResponse": {
      "type": "structure",
      "members": {
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a <code>GroupMembership</code> in an identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#GetUserId": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#GetUserIdRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#GetUserIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the <code>UserId</code> in an identity store.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#GetUserIdRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "AlternateIdentifier": {
          "target": "com.amazonaws.identitystore#AlternateIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for a user or group that is not the primary identifier. This value can be\n         an identifier from an external identity provider (IdP) that is associated with the user, the group, or a unique attribute. For example, a\n         unique <code>UserDisplayName</code>.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#GetUserIdResponse": {
      "type": "structure",
      "members": {
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#Group": {
      "type": "structure",
      "members": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#GroupDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The group’s display name value. The length limit is 1,024 characters. This\n         value can consist of letters, accented characters, symbols, numbers, punctuation, tab, new\n         line, carriage return, space, and nonbreaking space in this attribute. This value is specified at the time the group is\n         created and stored as an attribute of the group object in the identity store.</p>"
          }
        },
        "ExternalIds": {
          "target": "com.amazonaws.identitystore#ExternalIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>ExternalId</code> objects that contains the identifiers issued to this\n         resource by an external identity provider.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a description of the specified group.</p>"
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A group object that contains a specified group’s metadata and attributes.</p>"
      }
    },
    "com.amazonaws.identitystore#GroupDisplayName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\t\\n\\r  ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#GroupIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#ResourceId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.identitystore#GroupMembership": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a <code>GroupMembership</code> object in an identity store.</p>"
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>"
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the identifier of a group member. Setting the <code>UserID</code> field to the specific identifier for a user indicates that the user is a member of the group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the identifiers for a group, a group member, and a <code>GroupMembership</code>\n         object in the identity store.</p>"
      }
    },
    "com.amazonaws.identitystore#GroupMembershipExistenceResult": {
      "type": "structure",
      "members": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>"
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the identifier of a group member. Setting the <code>UserID</code> field to the specific identifier for a user indicates that the user is a member of the group.</p>"
          }
        },
        "MembershipExists": {
          "target": "com.amazonaws.identitystore#SensitiveBooleanType",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Indicates whether a membership relation exists or not.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates whether a resource is a member of a group in the identity store.</p>"
      }
    },
    "com.amazonaws.identitystore#GroupMembershipExistenceResults": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#GroupMembershipExistenceResult"
      }
    },
    "com.amazonaws.identitystore#GroupMembershipResource": {
      "type": "resource",
      "identifiers": {
        "MembershipId": {
          "target": "com.amazonaws.identitystore#ResourceId"
        }
      },
      "create": {
        "target": "com.amazonaws.identitystore#CreateGroupMembership"
      },
      "read": {
        "target": "com.amazonaws.identitystore#DescribeGroupMembership"
      },
      "delete": {
        "target": "com.amazonaws.identitystore#DeleteGroupMembership"
      },
      "list": {
        "target": "com.amazonaws.identitystore#ListGroupMemberships"
      },
      "traits": {
        "aws.cloudformation#cfnResource": {
          "name": "GroupMembership"
        },
        "smithy.api#documentation": "Resource Type definition for AWS:IdentityStore::GroupMembership"
      }
    },
    "com.amazonaws.identitystore#GroupMemberships": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#GroupMembership"
      }
    },
    "com.amazonaws.identitystore#GroupResource": {
      "type": "resource",
      "identifiers": {
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId"
        }
      },
      "create": {
        "target": "com.amazonaws.identitystore#CreateGroup"
      },
      "read": {
        "target": "com.amazonaws.identitystore#DescribeGroup"
      },
      "update": {
        "target": "com.amazonaws.identitystore#UpdateGroup"
      },
      "delete": {
        "target": "com.amazonaws.identitystore#DeleteGroup"
      },
      "list": {
        "target": "com.amazonaws.identitystore#ListGroups"
      },
      "traits": {
        "aws.cloudformation#cfnResource": {
          "name": "Group"
        },
        "smithy.api#documentation": "Resource Type definition for AWS::IdentityStore::Group"
      }
    },
    "com.amazonaws.identitystore#Groups": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#Group"
      }
    },
    "com.amazonaws.identitystore#IdentityStoreId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 36
        },
        "smithy.api#pattern": "^d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      }
    },
    "com.amazonaws.identitystore#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by\n         the identity store service for each sent request, and is then returned inside the exception\n         if the request fails.</p>"
          }
        },
        "RetryAfterSeconds": {
          "target": "com.amazonaws.identitystore#RetryAfterSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The number of seconds that you would like to wait before retrying the next request.</p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request processing has failed because of an unknown error, exception or failure with an internal server.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.identitystore#IsMemberInGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#IsMemberInGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#IsMemberInGroupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Checks the user's membership in all requested groups and returns if the member exists in all queried groups.</p>",
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#IsMemberInGroupsRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the identifier of a group member.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupIds": {
          "target": "com.amazonaws.identitystore#GroupIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of identifiers for groups in the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#IsMemberInGroupsResponse": {
      "type": "structure",
      "members": {
        "Results": {
          "target": "com.amazonaws.identitystore#GroupMembershipExistenceResults",
          "traits": {
            "smithy.api#documentation": "<p>A list containing the results of membership existence checks.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroupMemberships": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#ListGroupMembershipsRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#ListGroupMembershipsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For the specified group in the specified identity store, returns the list of all <code>GroupMembership</code> objects and returns results in paginated form.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "items": "GroupMemberships",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#ListGroupMembershipsForMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#ListGroupMembershipsForMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#ListGroupMembershipsForMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For the specified member in the specified identity store, returns the list of all <code>GroupMembership</code> objects and returns results in paginated form.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "items": "GroupMemberships",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#ListGroupMembershipsForMemberRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MemberId": {
          "target": "com.amazonaws.identitystore#MemberId",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the identifier of a group member. Setting the <code>UserID</code> field to the specific identifier for a user indicates that the user is a member of the group.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.identitystore#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be returned per request. This parameter is used in the <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many results to return in one page. The length limit is 50 characters.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroupMembershipsForMemberResponse": {
      "type": "structure",
      "members": {
        "GroupMemberships": {
          "target": "com.amazonaws.identitystore#GroupMemberships",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>GroupMembership</code> objects in the group for a specified member.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.\n         </p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroupMembershipsRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.identitystore#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be returned per request. This parameter is used in all\n            <code>List</code> requests to specify how many results to return in one page.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code> and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroupMembershipsResponse": {
      "type": "structure",
      "members": {
        "GroupMemberships": {
          "target": "com.amazonaws.identitystore#GroupMemberships",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>GroupMembership</code> objects in the group.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code>, <code>ListGroups</code>, and <code>ListGroupMemberships</code> API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#ListGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#ListGroupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all groups in the identity store. Returns a paginated list of complete <code>Group</code> objects. \n         Filtering for a <code>Group</code> by the <code>DisplayName</code> attribute is deprecated. Instead, use the <code>GetGroupId</code> API action.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "items": "Groups",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#ListGroupsRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store, such as\n         <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and\n            <code>1234567890</code> is a randomly generated string that contains numbers and lower\n         case letters. This value is generated at the time that a new identity store is\n         created.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.identitystore#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be returned per request. This parameter is used in the\n            <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many results\n         to return in one page. The length limit is 50 characters.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API\n         operations. This value is generated by the identity store service. It is returned in the\n         API response if the total results are more than the size of one page. This token is also\n         returned when it is used in the API request to search for the next page.</p>"
          }
        },
        "Filters": {
          "target": "com.amazonaws.identitystore#Filters",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Using filters with ListGroups API is deprecated, please use GetGroupId API instead."
            },
            "smithy.api#documentation": "<p>A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code> and\n            <code>ListGroups</code> requests.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListGroupsResponse": {
      "type": "structure",
      "members": {
        "Groups": {
          "target": "com.amazonaws.identitystore#Groups",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>Group</code> objects in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API\n         operations. This value is generated by the identity store service. It is returned in the\n         API response if the total results are more than the size of one page. This token is also\n         returned when it1 is used in the API request to search for the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListUsers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#ListUsersRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#ListUsersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all users in the identity store. Returns a paginated list of complete <code>User</code> objects. \n         Filtering for a <code>User</code> by the <code>UserName</code> attribute is deprecated. Instead, use the <code>GetUserId</code> API action.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "items": "Users",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.identitystore#ListUsersRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store, such as\n         <code>d-1234567890</code>. In this example, <code>d-</code> is a fixed prefix, and\n            <code>1234567890</code> is a randomly generated string that contains numbers and lower\n         case letters. This value is generated at the time that a new identity store is\n         created.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.identitystore#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be returned per request. This parameter is used in the\n            <code>ListUsers</code> and <code>ListGroups</code> requests to specify how many results\n         to return in one page. The length limit is 50 characters.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API\n         operations. This value is generated by the identity store service. It is returned in the\n         API response if the total results are more than the size of one page. This token is also\n         returned when it is used in the API request to search for the next page.</p>"
          }
        },
        "Filters": {
          "target": "com.amazonaws.identitystore#Filters",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Using filters with ListUsers API is deprecated, please use GetGroupId API instead."
            },
            "smithy.api#documentation": "<p>A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code> and\n            <code>ListGroups</code> requests. </p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#ListUsersResponse": {
      "type": "structure",
      "members": {
        "Users": {
          "target": "com.amazonaws.identitystore#Users",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>User</code> objects in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.identitystore#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> API\n         operations. This value is generated by the identity store service. It is returned in the\n         API response if the total results are more than the size of one page. This token is also\n         returned when it is used in the API request to search for the next page.</p>"
          }
        }
      }
    },
    "com.amazonaws.identitystore#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.identitystore#MemberId": {
      "type": "union",
      "members": {
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the identifiers of resources that can be members.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object containing the identifier of a group member.</p>"
      }
    },
    "com.amazonaws.identitystore#Name": {
      "type": "structure",
      "members": {
        "Formatted": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a formatted version of the name for display.</p>"
          }
        },
        "FamilyName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The family name of the user.</p>"
          }
        },
        "GivenName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The given name of the user.</p>"
          }
        },
        "MiddleName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The middle name of the user.</p>"
          }
        },
        "HonorificPrefix": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The honorific prefix of the user. For example, \"Dr.\"</p>"
          }
        },
        "HonorificSuffix": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>The honorific suffix of the user. For example, \"M.D.\"</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The\n         full name\n         of the user.</p>"
      }
    },
    "com.amazonaws.identitystore#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 65535
        },
        "smithy.api#pattern": "^[-a-zA-Z0-9+=/:]*$"
      }
    },
    "com.amazonaws.identitystore#PhoneNumber": {
      "type": "structure",
      "members": {
        "Value": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a phone number. For example,\n         \"8675309\"\n         or \"+1 (800) 123-4567\".</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string representing the type of a phone number. For example, \"Mobile.\"</p>"
          }
        },
        "Primary": {
          "target": "com.amazonaws.identitystore#SensitiveBooleanType",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A\n         Boolean\n         value\n         representing whether this is the primary phone number for the associated\n         resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The phone number associated with the user.</p>"
      }
    },
    "com.amazonaws.identitystore#PhoneNumbers": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#PhoneNumber"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.identitystore#RequestId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 36
        },
        "smithy.api#pattern": "^[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
      }
    },
    "com.amazonaws.identitystore#ResourceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 47
        },
        "smithy.api#pattern": "^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
      }
    },
    "com.amazonaws.identitystore#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "ResourceType": {
          "target": "com.amazonaws.identitystore#ResourceType",
          "traits": {
            "smithy.api#documentation": "<p>An enum object indicating the type of resource in the identity store service. Valid values include USER, GROUP, and IDENTITY_STORE.</p>"
          }
        },
        "ResourceId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a resource in the identity store that can be used as <code>UserId</code> or <code>GroupId</code>. The format for <code>ResourceId</code> is either <code>UUID</code> or <code>1234567890-UUID</code>, where <code>UUID</code> is a randomly generated value for each resource when it is created and <code>1234567890</code> represents the <code>IdentityStoreId</code> string value. In the case that the identity store is migrated from a legacy SSO identity store, the <code>ResourceId</code> for that identity store will be in the format of <code>UUID</code>. Otherwise, it will be in the <code>1234567890-UUID</code> format.</p>"
          }
        },
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by\n         the identity store service for each sent request, and is then returned inside the exception\n         if the request fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates that a requested resource is not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.identitystore#ResourceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "GROUP",
            "name": "GROUP"
          },
          {
            "value": "USER",
            "name": "USER"
          },
          {
            "value": "IDENTITY_STORE",
            "name": "IDENTITY_STORE"
          },
          {
            "value": "GROUP_MEMBERSHIP",
            "name": "GROUP_MEMBERSHIP"
          }
        ]
      }
    },
    "com.amazonaws.identitystore#RetryAfterSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.identitystore#SensitiveBooleanType": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false,
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#SensitiveStringType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\t\\n\\r  　]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by the identity store service for each sent request, and is then returned inside the exception if the request fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request would cause the number of users or groups in the identity store to exceed the maximum allowed.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.identitystore#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by\n         the identity store service for each sent request, and is then returned inside the exception\n         if the request fails.</p>"
          }
        },
        "RetryAfterSeconds": {
          "target": "com.amazonaws.identitystore#RetryAfterSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The number of seconds that you would like to wait before retrying the next\n         request.</p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates that the principal has crossed the throttling limits of the API operations.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.identitystore#UniqueAttribute": {
      "type": "structure",
      "members": {
        "AttributePath": {
          "target": "com.amazonaws.identitystore#AttributePath",
          "traits": {
            "smithy.api#documentation": "<p>A string representation of the path to a given attribute or sub-attribute. Supports\n         JMESPath.</p>",
            "smithy.api#required": {}
          }
        },
        "AttributeValue": {
          "target": "com.amazonaws.identitystore#AttributeValue",
          "traits": {
            "smithy.api#documentation": "<p>The value of the attribute. This is a <code>Document</code> type.\n         This type is not supported by Java V1, Go V1, and older versions of the AWS CLI.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An entity attribute that's unique to a specific entity.</p>"
      }
    },
    "com.amazonaws.identitystore#UpdateGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#UpdateGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#UpdateGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For the specified group in the specified identity store, updates the group metadata and attributes.</p>"
      }
    },
    "com.amazonaws.identitystore#UpdateGroupRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "GroupId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a group in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "Operations": {
          "target": "com.amazonaws.identitystore#AttributeOperations",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>AttributeOperation</code> objects to apply to the requested group. These\n         operations might add, replace, or remove an attribute.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#UpdateGroupResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.identitystore#UpdateUser": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.identitystore#UpdateUserRequest"
      },
      "output": {
        "target": "com.amazonaws.identitystore#UpdateUserResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.identitystore#ConflictException"
        },
        {
          "target": "com.amazonaws.identitystore#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.identitystore#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.identitystore#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For the specified user in the specified identity store, updates the user metadata and attributes.</p>"
      }
    },
    "com.amazonaws.identitystore#UpdateUserRequest": {
      "type": "structure",
      "members": {
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "Operations": {
          "target": "com.amazonaws.identitystore#AttributeOperations",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>AttributeOperation</code> objects to apply to the requested user. These\n         operations might add, replace, or remove an attribute.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.identitystore#UpdateUserResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.identitystore#User": {
      "type": "structure",
      "members": {
        "UserName": {
          "target": "com.amazonaws.identitystore#UserName",
          "traits": {
            "smithy.api#documentation": "<p>A unique string used to identify the user. The length limit is 128 characters. This value can\n         consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is\n         created and stored as an attribute of the user object in the identity store.</p>"
          }
        },
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for a user in the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "ExternalIds": {
          "target": "com.amazonaws.identitystore#ExternalIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>ExternalId</code> objects that contains the identifiers issued to this\n         resource by an external identity provider.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.identitystore#Name",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the user's name.</p>"
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's name that's formatted for display when the user is\n         referenced. For example, \"John Doe.\"</p>"
          }
        },
        "NickName": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing an alternate name for the user.</p>"
          }
        },
        "ProfileUrl": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing a URL that may be associated with the user.</p>"
          }
        },
        "Emails": {
          "target": "com.amazonaws.identitystore#Emails",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>Email</code> objects containing email addresses associated with the user.</p>"
          }
        },
        "Addresses": {
          "target": "com.amazonaws.identitystore#Addresses",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>Address</code> objects containing addresses associated with the user.</p>"
          }
        },
        "PhoneNumbers": {
          "target": "com.amazonaws.identitystore#PhoneNumbers",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>PhoneNumber</code> objects containing phone numbers associated with the user.</p>"
          }
        },
        "UserType": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string indicating the user's type. Possible values depend on each customer's specific needs, so they are left unspecified.</p>"
          }
        },
        "Title": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's title. Possible values depend on each customer's specific\n         needs, so they are left\n         unspecified.</p>"
          }
        },
        "PreferredLanguage": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the preferred language of the user. For example, \"American English\"\n         or \"en-us.\"</p>"
          }
        },
        "Locale": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the user's geographical region or location.</p>"
          }
        },
        "Timezone": {
          "target": "com.amazonaws.identitystore#SensitiveStringType",
          "traits": {
            "smithy.api#documentation": "<p>A string containing the\n         user's\n         time zone.</p>"
          }
        },
        "IdentityStoreId": {
          "target": "com.amazonaws.identitystore#IdentityStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The globally unique identifier for the identity store.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A user object that contains a specified user’s metadata and attributes.</p>"
      }
    },
    "com.amazonaws.identitystore#UserName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.identitystore#UserResource": {
      "type": "resource",
      "identifiers": {
        "UserId": {
          "target": "com.amazonaws.identitystore#ResourceId"
        }
      },
      "create": {
        "target": "com.amazonaws.identitystore#CreateUser"
      },
      "read": {
        "target": "com.amazonaws.identitystore#DescribeUser"
      },
      "update": {
        "target": "com.amazonaws.identitystore#UpdateUser"
      },
      "delete": {
        "target": "com.amazonaws.identitystore#DeleteUser"
      },
      "list": {
        "target": "com.amazonaws.identitystore#ListUsers"
      },
      "traits": {
        "aws.cloudformation#cfnResource": {
          "name": "User"
        },
        "smithy.api#documentation": "Resource Type definition for AWS:IdentityStore::User"
      }
    },
    "com.amazonaws.identitystore#Users": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.identitystore#User"
      }
    },
    "com.amazonaws.identitystore#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.identitystore#ExceptionMessage"
        },
        "RequestId": {
          "target": "com.amazonaws.identitystore#RequestId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for each request. This value is a globally unique ID that is generated by\n         the identity store service for each sent request, and is then returned inside the exception\n         if the request fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request failed because it contains a syntax error.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    }
  }
}