{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.neptunegraph#AmazonNeptuneGraph": {
      "type": "service",
      "version": "2023-11-29",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#TagResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.neptunegraph#GraphResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#SnapshotResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#TaskResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Neptune Graph",
          "arnNamespace": "neptune-graph",
          "cloudTrailEventSource": "neptune-graph.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "neptune-graph"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>Neptune Analytics is a serverless in-memory graph database service for analytics\n        that delivers high-performance analytics and real-time queries for any graph type. It\n        complements the Amazon Neptune Database, an industry-leading managed graph database.</p>",
        "smithy.api#title": "Amazon Neptune Graph",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            },
            "ApiType": {
              "required": true,
              "documentation": "Parameter to determine whether current API is a control plane or dataplane API",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "error": "Invalid Configuration: fips endpoint is not supported for this API",
                              "type": "error"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "error": "Invalid Configuration: fips endpoint is not supported for this API",
                              "type": "error"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph.{Region}.on.aws",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "stringEquals",
                          "argv": [
                            {
                              "ref": "ApiType"
                            },
                            "ControlPlane"
                          ]
                        }
                      ],
                      "endpoint": {
                        "url": "https://neptune-graph.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "stringEquals",
                          "argv": [
                            {
                              "ref": "ApiType"
                            },
                            "DataPlane"
                          ]
                        }
                      ],
                      "endpoint": {
                        "url": "https://{Region}.neptune-graph.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    },
                    {
                      "conditions": [],
                      "error": "Invalid Configuration: Unknown ApiType",
                      "type": "error"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "Region and CP ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Region and DP ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "DataPlane",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Region and invalid ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "someInvalidApiType",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Only invalid ApiType is provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "someInvalidApiType"
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-east-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-east-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-west-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-west-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-west-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-central-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-central-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://ap-southeast-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://ap-northeast-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate When no region is provided",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              },
              "params": {
                "ApiType": "DataPlane"
              }
            },
            {
              "documentation": "Validate When invalid/unknown ApiType provided",
              "expect": {
                "error": "Invalid Configuration: Unknown ApiType"
              },
              "params": {
                "Region": "us-east-1",
                "ApiType": "someUnknownValue"
              }
            },
            {
              "documentation": "Both Fips and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.neptunegraph#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CancelImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CancelImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specified import task</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/importtasks/{taskIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>Current status of the task. Status is CANCELLING when the import task is cancelled.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.neptunegraph#ConflictExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the conflict exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Raised when a conflict is encountered.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.neptunegraph#ConflictExceptionReason": {
      "type": "enum",
      "members": {
        "CONCURRENT_MODIFICATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONCURRENT_MODIFICATION"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a new Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/graphs"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphInput": {
      "type": "structure",
      "members": {
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. </p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated.\n       (<code>true</code> to enable, or <code>false</code> to disable.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a KMS key to use to encrypt data in the new graph.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings that will be loaded into the graph.\n      The value is specified as <code>dimension=</code>value. Max = 65,535</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs. Min =0, Max = 2, Default =1</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether or not to enable deletion protection on the graph. The graph can’t be deleted when deletion protection is enabled.\n      (<code>true</code> or <code>false</code>).</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 128</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The graph name. For example: <code>my-graph-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. </p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason the status was given.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 128</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The vector-search configuration for the graph, which specifies the vector dimension\n      to use in the vector index, if any.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the KMS key used to encrypt data in the new graph.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the source graph.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph software.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a snapshot of the specific graph.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/snapshots"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#required": {}
          }
        },
        "snapshotName": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The Id of the Neptune Analytics graph from which the snapshot is created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot creation time</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a new Neptune Analytics graph and imports data into it, either from Amazon Simple Storage Service (S3) or from a Neptune database\n    or a Neptune database snapshot.</p>\n         <p>The data can be loaded from files in S3 that in either the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin CSV\n      format</a> or the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/importtasks"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskInput": {
      "type": "structure",
      "members": {
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. </p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph. These tags can also be used with cost allocation\n     reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated.\n       (<code>true</code> to enable, or <code>false</code> to disable.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a KMS key to use to encrypt data imported into the new graph.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings that will be loaded into the graph.\n    The value is specified as <code>dimension=</code>value. Max = 65,535 </p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs to provision on the new graph after import. Default = 0, Min = 0, Max = 2.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether or not to enable deletion protection on the graph. The graph can’t be deleted when deletion protection is enabled.\n      (<code>true</code> or <code>false</code>).</p>"
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        },
        "maxProvisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The maximum provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Default: 1024,\n       or the approved upper limit for your account.</p>\n         <p> If both the minimum and maximum values are specified, the max of the\n    <code>min-provisioned-memory</code> and <code>max-provisioned memory</code> is\n      used to create the graph. If neither value is specified 128 m-NCUs are used.</p>"
          }
        },
        "minProvisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The minimum provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Default: 128</p>"
          }
        },
        "failOnError": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to <code>true</code>, the task halts when an import error is encountered. If set to <code>false</code>,\n      the task skips the data that caused the error and continues if possible.</p>"
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Create a private graph endpoint to allow private access from to the graph from within\n    a VPC. You can attach security groups to the private graph endpoint. VPC endpoint charges apply.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/graphs/{graphIdentifier}/endpoints/"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p> The VPC in which the private graph endpoint needs to be created.</p>"
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>Subnets in which private graph endpoint ENIs are created.</p>"
          }
        },
        "vpcSecurityGroupIds": {
          "target": "com.amazonaws.neptunegraph#SecurityGroupIds",
          "traits": {
            "smithy.api#documentation": "<p>Security groups to be attached to the private graph endpoint..</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>VPC in which the private graph endpoint is created.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>Subnets in which the private graph endpoint ENIs are created. </p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>Endpoint ID of the prviate grpah endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specified graph. Graphs cannot be deleted if delete-protection is enabled.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "skipSnapshot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Determines whether a final graph snapshot is created before the graph is deleted.\n      If <code>true</code> is specified, no graph snapshot is created. If <code>false</code>\n      is specified, a graph snapshot is created before the graph is deleted.</p>",
            "smithy.api#httpQuery": "skipSnapshot",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the status of the graph.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if the graph was recovered from a snapshot.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection was enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number associated with the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specifed graph snapshot.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/snapshots/{snapshotIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>ID of the graph snapshot to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph from which the snapshot was created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes a private graph endpoint.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/graphs/{graphIdentifier}/endpoints/{vpcId}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint was deleted.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs involved.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the delete operation.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC endpoint that was deleted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#Format": {
      "type": "enum",
      "members": {
        "CSV": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CSV"
          }
        },
        "OPEN_CYPHER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OPEN_CYPHER"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Gets information about a specified graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "GraphAvailable": {
            "documentation": "Wait until Graph is Available",
            "minDelay": 60,
            "maxDelay": 28800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "GraphDeleted": {
            "documentation": "Wait until Graph is Deleted",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if it was created from a snapshot.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a specified graph snapshot.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/snapshots/{snapshotIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "GraphSnapshotAvailable": {
            "documentation": "Wait until GraphSnapshot is Available",
            "minDelay": 60,
            "maxDelay": 7200,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "GraphSnapshotDeleted": {
            "documentation": "Wait until GraphSnapshot is Deleted",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph for which a snapshot is to be created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a specified import task.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/importtasks/{taskIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "ImportTaskSuccessful": {
            "documentation": "Wait until Import Task is Successful",
            "minDelay": 60,
            "maxDelay": 28800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "ROLLING_BACK",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUCCEEDED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "ImportTaskCancelled": {
            "documentation": "Wait until Import Task is Cancelled",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'CANCELLING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetImportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the import task:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>INITIALIZING</b>   –  \n        The necessary resources needed to create the graph are being prepared.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ANALYZING_DATA</b>   –  \n        The data is being analyzed to determine the optimal infrastructure configuration\n        for the new graph.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RE_PROVISIONING</b>   –  \n        The data did not fit into the provisioned graph, so it is being re-provisioned\n        with more capacity.</p>\n            </li>\n            <li>\n               <p>\n                  <b>IMPORTING</b>   –  \n        The data is being loaded.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ERROR_ENCOUNTERED</b>   –  \n        An error has been encountered while trying to create the graph and import the data.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ERROR_ENCOUNTERED_ROLLING_BACK</b>   –  \n        Because of the error that was encountered, the graph is being rolled back and all\n        its resources released.</p>\n            </li>\n            <li>\n               <p>\n                  <b>SUCCEEDED</b>   –  \n        Graph creation and data loading succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <b>FAILED</b>   –  \n        Graph creation or data loading failed. When the status is <code>FAILED</code>,\n        you can use <code>get-graphs</code> to get more information about the state of\n        the graph.</p>\n            </li>\n            <li>\n               <p>\n                  <b>CANCELLING</b>   –  \n        Because you cancelled the import task, cancellation is in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <b>CANCELLED</b>   –  \n        You have successfully cancelled the import task.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        },
        "importTaskDetails": {
          "target": "com.amazonaws.neptunegraph#ImportTaskDetails",
          "traits": {
            "smithy.api#documentation": "<p>Contains details about the specified import task.</p>"
          }
        },
        "attemptNumber": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of the current attempt to execute the import task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the import task has this status value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves information about a specified private endpoint.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}/endpoints/{vpcId}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "PrivateGraphEndpointAvailable": {
            "documentation": "Wait until PrivateGraphEndpoint is Available",
            "minDelay": 10,
            "maxDelay": 1800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "PrivateGraphEndpointDeleted": {
            "documentation": "Wait until PrivateGraphEndpoint is Deleted",
            "minDelay": 10,
            "maxDelay": 1800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs involved.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the private endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the private endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GraphId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^g-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#GraphIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^g-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#GraphName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 63
        },
        "smithy.api#pattern": "^(?!g-)[a-z][a-z0-9]*(-[a-z0-9]+)*$"
      }
    },
    "com.amazonaws.neptunegraph#GraphResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreateGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeleteGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListGraphs"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResetGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#UpdateGraph"
        }
      ]
    },
    "com.amazonaws.neptunegraph#GraphSnapshotSummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph for which a snapshot is to be created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a graph snapshot.</p>"
      }
    },
    "com.amazonaws.neptunegraph#GraphSnapshotSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#GraphSnapshotSummary"
      }
    },
    "com.amazonaws.neptunegraph#GraphStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "RESETTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RESETTING"
          }
        },
        "UPDATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATING"
          }
        },
        "SNAPSHOTTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SNAPSHOTTING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GraphSummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary details about a graph.</p>"
      }
    },
    "com.amazonaws.neptunegraph#GraphSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#GraphSummary"
      }
    },
    "com.amazonaws.neptunegraph#ImportOptions": {
      "type": "union",
      "members": {
        "neptune": {
          "target": "com.amazonaws.neptunegraph#NeptuneImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options for importing data from a Neptune database.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options for how to perform an import.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskDetails": {
      "type": "structure",
      "members": {
        "status": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Status of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Time at which the import task started.</p>",
            "smithy.api#required": {}
          }
        },
        "timeElapsedSeconds": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>Seconds elapsed since the import task started.</p>",
            "smithy.api#required": {}
          }
        },
        "progressPercentage": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The percentage progress so far.</p>",
            "smithy.api#required": {}
          }
        },
        "errorCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of errors encountered so far.</p>",
            "smithy.api#required": {}
          }
        },
        "errorDetails": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Details about the errors that have been encountered.</p>"
          }
        },
        "statementCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of statements in the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "dictionaryEntryCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of dictionary entries in the import task.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an import task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskStatus": {
      "type": "enum",
      "members": {
        "INITIALIZING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INITIALIZING"
          }
        },
        "EXPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EXPORTING"
          }
        },
        "ANALYZING_DATA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ANALYZING_DATA"
          }
        },
        "IMPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IMPORTING"
          }
        },
        "REPROVISIONING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REPROVISIONING"
          }
        },
        "ROLLING_BACK": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROLLING_BACK"
          }
        },
        "SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCEEDED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "CANCELLING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLING"
          }
        },
        "CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskSummary": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of the import task.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an import task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#ImportTaskSummary"
      }
    },
    "com.amazonaws.neptunegraph#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A failure occurred on the server.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.neptunegraph#KmsKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshots": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListGraphSnapshotsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListGraphSnapshotsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists available snapshots of a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/snapshots"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "graphSnapshots"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshotsInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpQuery": "graphIdentifier"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshotsOutput": {
      "type": "structure",
      "members": {
        "graphSnapshots": {
          "target": "com.amazonaws.neptunegraph#GraphSnapshotSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The requested list of snapshots.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListGraphsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListGraphsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists available Neptune Analytics graphs.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "graphs"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListGraphsInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphsOutput": {
      "type": "structure",
      "members": {
        "graphs": {
          "target": "com.amazonaws.neptunegraph#GraphSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the graphs.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListImportTasksInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListImportTasksOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists import tasks.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/importtasks"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "tasks"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasksInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasksOutput": {
      "type": "structure",
      "members": {
        "tasks": {
          "target": "com.amazonaws.neptunegraph#ImportTaskSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The requested list of import tasks.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists private endpoints for a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}/endpoints/"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "privateGraphEndpoints"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsOutput": {
      "type": "structure",
      "members": {
        "privateGraphEndpoints": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of private endpoints for the specified Neptune Analytics graph.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListTagsForResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListTagsForResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists tags associated with a specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResourceOutput": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The list of metadata tags associated with the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.neptunegraph#NeptuneImportOptions": {
      "type": "structure",
      "members": {
        "s3ExportPath": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The path to an S3 bucket from which to import data.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "s3ExportKmsKeyId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key to use to encrypt data in the S3 bucket where the graph data is exported</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "preserveDefaultVertexLabels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Neptune Analytics supports label-less vertices and no labels are assigned unless one is explicitly\n           provided. Neptune assigns default labels when none is explicitly provided. When importing the data into\n           Neptune Analytics, the default vertex labels can be omitted by setting\n           <i>preserveDefaultVertexLabels</i> to false. Note that if the vertex only has default labels,\n           and has no other properties or edges, then the vertex will effectively not get\n           imported into Neptune Analytics when preserveDefaultVertexLabels is set to false.</p>"
          }
        },
        "preserveEdgeIds": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Neptune Analytics currently does not support user defined edge ids. The edge ids are not imported by\n          default. They are imported if <i>preserveEdgeIds</i> is set to true, and ids are stored as\n          properties on the relationships with the property name neptuneEdgeId.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options for how to import Neptune data.</p>"
      }
    },
    "com.amazonaws.neptunegraph#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 8192
        }
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpoints"
        }
      ]
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointSummary": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC in which the private graph endpoint is located.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs associated with the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a private graph endpoint.</p>"
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointSummary"
      }
    },
    "com.amazonaws.neptunegraph#ProvisionedMemory": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 128,
          "max": 24576
        }
      }
    },
    "com.amazonaws.neptunegraph#ReplicaCount": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 2
        }
      }
    },
    "com.amazonaws.neptunegraph#ResetGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ResetGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ResetGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Empties the data from a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "PUT",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ResetGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>ID of the graph to reset.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "skipSnapshot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Determines whether a final graph snapshot is created before the graph data is deleted.\n      If set to <code>true</code>, no graph snapshot is created. If set to <code>false</code>,\n      a graph snapshot is created before the data is deleted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ResetGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A specified resource could not be located.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Restores a graph from a snapshot.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/snapshots/{snapshotIdentifier}/restore"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot in question.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created from the snapshot.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. </p>",
            "smithy.api#required": {}
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 128</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the snapshot.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs. Min =0, Max = 2, Default =1</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated.\n      (<code>true</code> to enable, or <code>false</code> to disable).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
      }
    },
    "com.amazonaws.neptunegraph#SecurityGroupId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^sg-[a-z0-9]+$"
      }
    },
    "com.amazonaws.neptunegraph#SecurityGroupIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#SecurityGroupId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.neptunegraph#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource that exceeded quota.</p>"
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource that exceeded quota. Ex: Graph, Snapshot</p>"
          }
        },
        "serviceCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The service code that exceeded quota.</p>"
          }
        },
        "quotaCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Service quota code of the resource for which quota was exceeded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A service quota was exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.neptunegraph#SnapshotId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^gs-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^gs-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 63
        },
        "smithy.api#pattern": "^(?!gs-)[a-z][a-z0-9]*(-[a-z0-9]+)*$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreateGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListGraphSnapshots"
        }
      ]
    },
    "com.amazonaws.neptunegraph#SnapshotStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#SubnetId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^subnet-[a-z0-9]+$"
      }
    },
    "com.amazonaws.neptunegraph#SubnetIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#SubnetId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 6
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.neptunegraph#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$"
      }
    },
    "com.amazonaws.neptunegraph#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.neptunegraph#TagMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.neptunegraph#TagKey"
      },
      "value": {
        "target": "com.amazonaws.neptunegraph#TagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.neptunegraph#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#TagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#TagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Adds tags to the specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "POST"
        },
        "smithy.api#idempotent": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#TagResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the resource for which tags need to be added.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags to be assigned to the Neptune Analytics resource.</p>\n         <p>The tags are metadata that are specified as a list of key-value pairs:</p>\n         <p>\n            <b>Key</b> (string)   –  \n       A key is the required name of the tag. The string value can be\n       from 1 to 128 Unicode characters in length. It can't be\n       prefixed with <code>aws:</code> and can only contain the\n       set of Unicode characters specified by this Java regular expression:\n     <code>\"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$\")</code>.</p>\n         <p>\n            <b>Value</b> (string)   –  \n       A value is the optional value of the tag. The string value can\n       be from 1 to 256 Unicode characters in length. It can't be\n       prefixed with <code>aws:</code> and can only contain the\n       set of Unicode characters specified by this Java regular expression:\n     <code>\"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$\")</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#TagResourceOutput": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.neptunegraph#TaskId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^t-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#TaskResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CancelImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListImportTasks"
        }
      ]
    },
    "com.amazonaws.neptunegraph#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The exception was interrupted by throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.neptunegraph#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#UntagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#UntagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Removes the specified tags from the specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "DELETE"
        },
        "smithy.api#idempotent": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#UntagResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the resource whose tag needs to be removed.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.neptunegraph#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>Tag keys for the tags to be removed.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#UntagResourceOutput": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#UpdateGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#UpdateGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Updates the configuration of a specified Neptune Analytics graph</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "PATCH",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs IAM authenticated.\n      (<code>true</code> to enable, or <code>false</code> to disable.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 128</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.neptunegraph#ValidationExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the resource could not be validated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource could not be validated</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.neptunegraph#ValidationExceptionReason": {
      "type": "enum",
      "members": {
        "CONSTRAINT_VIOLATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONSTRAINT_VIOLATION"
          }
        },
        "ILLEGAL_ARGUMENT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ILLEGAL_ARGUMENT"
          }
        },
        "MALFORMED_QUERY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MALFORMED_QUERY"
          }
        },
        "QUERY_CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUERY_CANCELLED"
          }
        },
        "QUERY_TOO_LARGE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUERY_TOO_LARGE"
          }
        },
        "UNSUPPORTED_OPERATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNSUPPORTED_OPERATION"
          }
        },
        "BAD_REQUEST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BAD_REQUEST"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#VectorSearchConfiguration": {
      "type": "structure",
      "members": {
        "dimension": {
          "target": "com.amazonaws.neptunegraph#VectorSearchDimension",
          "traits": {
            "smithy.api#documentation": "<p>The number of dimensions.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings loaded into the graph. Max = 65535</p>"
      }
    },
    "com.amazonaws.neptunegraph#VectorSearchDimension": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 65536
        }
      }
    },
    "com.amazonaws.neptunegraph#VpcEndpointId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^vpce-[0-9a-f]{17}$"
      }
    },
    "com.amazonaws.neptunegraph#VpcId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^vpc-[a-z0-9]+$"
      }
    }
  }
}
