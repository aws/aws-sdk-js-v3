{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.neptunegraph#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Raised in case of an authentication or authorization failure.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.neptunegraph#AmazonNeptuneGraph": {
      "type": "service",
      "version": "2023-11-29",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CancelQuery"
        },
        {
          "target": "com.amazonaws.neptunegraph#ExecuteQuery"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetGraphSummary"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetQuery"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListQueries"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#TagResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.neptunegraph#GraphResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#SnapshotResource"
        },
        {
          "target": "com.amazonaws.neptunegraph#TaskResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Neptune Graph",
          "arnNamespace": "neptune-graph",
          "cloudTrailEventSource": "neptune-graph.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "neptune-graph"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "maxAge": 86400,
          "additionalAllowedHeaders": [
            "*",
            "Authorization",
            "Date",
            "X-Amz-Date",
            "X-Amz-Security-Token",
            "X-Amz-Target",
            "content-type",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-platform-id",
            "x-amzn-trace-id"
          ],
          "additionalExposedHeaders": [
            "x-amzn-errortype",
            "x-amzn-requestid",
            "x-amzn-errormessage",
            "x-amzn-trace-id",
            "x-amz-apigw-id",
            "date"
          ]
        },
        "smithy.api#documentation": "<p>Neptune Analytics is a new analytics database engine for Amazon Neptune that helps customers get to \n    insights faster by quickly processing large amounts of graph data, invoking popular graph analytic \n    algorithms in low-latency queries, and getting analytics results in seconds.</p>",
        "smithy.api#title": "Amazon Neptune Graph",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            },
            "ApiType": {
              "required": true,
              "documentation": "Parameter to determine whether current API is a control plane or dataplane API",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "error": "Invalid Configuration: fips endpoint is not supported for this API",
                              "type": "error"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "error": "Invalid Configuration: fips endpoint is not supported for this API",
                              "type": "error"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "ControlPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "ApiType"
                                    },
                                    "DataPlane"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://neptune-graph.{Region}.on.aws",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid Configuration: Unknown ApiType",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "stringEquals",
                          "argv": [
                            {
                              "ref": "ApiType"
                            },
                            "ControlPlane"
                          ]
                        }
                      ],
                      "endpoint": {
                        "url": "https://neptune-graph.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "stringEquals",
                          "argv": [
                            {
                              "ref": "ApiType"
                            },
                            "DataPlane"
                          ]
                        }
                      ],
                      "endpoint": {
                        "url": "https://{Region}.neptune-graph.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    },
                    {
                      "conditions": [],
                      "error": "Invalid Configuration: Unknown ApiType",
                      "type": "error"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "Region and CP ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Region and DP ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "DataPlane",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Region and invalid ApiType are provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "someInvalidApiType",
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "Only invalid ApiType is provided",
              "expect": {
                "endpoint": {
                  "url": "https://mycustomDomain.com"
                }
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "someInvalidApiType"
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-east-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-east-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-east-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: us-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://us-west-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-west-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-west-2, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-west-2.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-central-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: eu-central-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://eu-central-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-southeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://ap-southeast-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: true",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph-fips.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: true, useDualStackEndpoint: false",
              "expect": {
                "error": "Invalid Configuration: fips endpoint is not supported for this API"
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: true",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.on.aws"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Validate CP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://neptune-graph.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "ControlPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate DP endpoint in region: ap-northeast-1, useFipsEndpoint: false, useDualStackEndpoint: false",
              "expect": {
                "endpoint": {
                  "url": "https://ap-northeast-1.neptune-graph.amazonaws.com"
                }
              },
              "params": {
                "ApiType": "DataPlane",
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Validate When no region is provided",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              },
              "params": {
                "ApiType": "DataPlane"
              }
            },
            {
              "documentation": "Validate When invalid/unknown ApiType provided",
              "expect": {
                "error": "Invalid Configuration: Unknown ApiType"
              },
              "params": {
                "Region": "us-east-1",
                "ApiType": "someUnknownValue"
              }
            },
            {
              "documentation": "Both Fips and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "Fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://mycustomDomain.com",
                "ApiType": "ControlPlane",
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.neptunegraph#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.neptunegraph#BlankNodeHandling": {
      "type": "enum",
      "members": {
        "CONVERT_TO_IRI": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "convertToIri"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CancelExportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CancelExportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CancelExportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Cancel the specified export task.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/exporttasks/{taskIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CancelExportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CancelExportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The source graph identifier of the cancelled export task.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow the exporting of data to the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ExportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the export task. The status is <code>CANCELLING</code> when the \n      export task is cancelled.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#ExportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the cancelled export task.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 URI of the cancelled export task where data will be exported to.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key identifier of the cancelled export task.</p>",
            "smithy.api#required": {}
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the cancelled export task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the export task has this status value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CancelImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CancelImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specified import task.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/importtasks/{taskIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CancelImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the cancelled import task.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>Current status of the task. Status is CANCELLING when the import task is cancelled.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CancelQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CancelQueryInput"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Cancels a specified query.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{graphIdentifier}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/queries/{queryId}",
          "code": 200
        },
        "smithy.api#idempotent": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "DataPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CancelQueryInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "graphIdentifier",
            "smithy.api#required": {}
          }
        },
        "queryId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the query to cancel.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.neptunegraph#ConflictExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the conflict exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Raised when a conflict is encountered.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.neptunegraph#ConflictExceptionReason": {
      "type": "enum",
      "members": {
        "CONCURRENT_MODIFICATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONCURRENT_MODIFICATION"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a new Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/graphs"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphInput": {
      "type": "structure",
      "members": {
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated.\n       (<code>true</code> to enable, or <code>false</code> to disable.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a KMS key to use to encrypt data in the new graph.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings that will be loaded into the graph.\n      The value is specified as <code>dimension=</code>value. Max = 65,535</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs. Min =0, Max = 2, Default = 1.</p>\n         <important>\n            <p>\n        Additional charges equivalent to the m-NCUs selected for the graph apply for each replica.\n      </p>\n         </important>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether or not to enable deletion protection on the graph. The graph can’t be deleted when deletion protection is enabled.\n      (<code>true</code> or <code>false</code>).</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Min = 16</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The graph name. For example: <code>my-graph-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason the status was given.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.</p>\n         <p>Min = 16</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated.</p>\n         <note>\n            <p>If enabling public connectivity for the first time, there will be a delay while it is enabled.</p>\n         </note>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The vector-search configuration for the graph, which specifies the vector dimension\n      to use in the vector index, if any.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs.</p>\n         <p>Default: If not specified, the default value is 1.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the KMS key used to encrypt data in the new graph.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the source graph.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph software.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a snapshot of the specific graph.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/snapshots"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#required": {}
          }
        },
        "snapshotName": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the snapshot created.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The Id of the Neptune Analytics graph from which the snapshot is created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot creation time</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Creates a new Neptune Analytics graph and imports data into it, either from Amazon Simple Storage Service (S3) or from a Neptune database\n    or a Neptune database snapshot.</p>\n         <p>The data can be loaded from files in S3 that in either the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin CSV\n      format</a> or the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/importtasks"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskInput": {
      "type": "structure",
      "members": {
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the new graph. These tags can also be used with cost allocation\n     reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated.\n       (<code>true</code> to enable, or <code>false</code> to disable).</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a KMS key to use to encrypt data imported into the new graph.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings that will be loaded into the graph.\n    The value is specified as <code>dimension=</code>value. Max = 65,535 </p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs to provision on the new graph after import. Default = 0, Min = 0, Max = 2.</p>\n         <important>\n            <p>\n        Additional charges equivalent to the m-NCUs selected for the graph apply for each replica.\n      </p>\n         </important>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether or not to enable deletion protection on the graph. The graph can’t be deleted when deletion protection is enabled.\n      (<code>true</code> or <code>false</code>).</p>"
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        },
        "maxProvisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The maximum provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Default: 1024,\n       or the approved upper limit for your account.</p>\n         <p> If both the minimum and maximum values are specified, the final\n    <code>provisioned-memory</code> will be chosen per the actual size of your imported data. If neither value is specified, \n     128 m-NCUs are used.</p>"
          }
        },
        "minProvisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The minimum provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph. Default: 16</p>"
          }
        },
        "failOnError": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to <code>true</code>, the task halts when an import error is encountered. If set to <code>false</code>,\n      the task skips the data that caused the error and continues if possible.</p>"
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n        CSV format</a>, <code>OPEN_CYPHER</code>, which identifies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n          load format</a>, or <code>ntriples</code>, which identifies the\n      <a href=\"https://docs.aws.amazon.com/neptune-analytics/latest/userguide/using-rdf-data.html\">RDF n-triples</a> format.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "blankNodeHandling": {
          "target": "com.amazonaws.neptunegraph#BlankNodeHandling",
          "traits": {
            "smithy.api#documentation": "<p>The method to handle blank nodes in the dataset. Currently, only <code>convertToIri</code> is supported, \n      meaning blank nodes are converted to unique IRIs at load time. Must be provided when format is <code>ntriples</code>. \n      For more information, see <a href=\"https://docs.aws.amazon.com/neptune-analytics/latest/userguide/using-rdf-data.html#rdf-handling\">Handling RDF values</a>.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreateGraphUsingImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a>, <code>OPENCYPHER</code>, which identifies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>, or <code>ntriples</code>, which identifies the\n     <a href=\"https://docs.aws.amazon.com/neptune-analytics/latest/userguide/using-rdf-data.html\">RDF n-triples</a> format.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Create a private graph endpoint to allow private access from to the graph from within\n    a VPC. You can attach security groups to the private graph endpoint.</p>\n         <note>\n            <p>VPC endpoint charges apply.</p>\n         </note>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/graphs/{graphIdentifier}/endpoints/"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p> The VPC in which the private graph endpoint needs to be created.</p>"
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>Subnets in which private graph endpoint ENIs are created.</p>"
          }
        },
        "vpcSecurityGroupIds": {
          "target": "com.amazonaws.neptunegraph#SecurityGroupIds",
          "traits": {
            "smithy.api#documentation": "<p>Security groups to be attached to the private graph endpoint..</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#CreatePrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>VPC in which the private graph endpoint is created.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>Subnets in which the private graph endpoint ENIs are created. </p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>Endpoint ID of the prviate grpah endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specified graph. Graphs cannot be deleted if delete-protection is enabled.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "skipSnapshot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Determines whether a final graph snapshot is created before the graph is deleted.\n      If <code>true</code> is specified, no graph snapshot is created. If <code>false</code>\n      is specified, a graph snapshot is created before the graph is deleted.</p>",
            "smithy.api#httpQuery": "skipSnapshot",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the status of the graph.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if the graph was recovered from a snapshot.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection was enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number associated with the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes the specifed graph snapshot.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/snapshots/{snapshotIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>ID of the graph snapshot to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeleteGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph from which the snapshot was created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Deletes a private graph endpoint.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "DELETE",
          "uri": "/graphs/{graphIdentifier}/endpoints/{vpcId}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#DeletePrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint was deleted.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs involved.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the delete operation.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC endpoint that was deleted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#DocumentValuedMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#Document"
      }
    },
    "com.amazonaws.neptunegraph#EdgeLabels": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.neptunegraph#EdgeProperties": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.neptunegraph#EdgeStructure": {
      "type": "structure",
      "members": {
        "count": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances of the edge in the graph.</p>"
          }
        },
        "edgeProperties": {
          "target": "com.amazonaws.neptunegraph#EdgeProperties",
          "traits": {
            "smithy.api#documentation": "<p>A list of the properties associated with the edge.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains information about an edge in a Neptune Analytics graph.</p>"
      }
    },
    "com.amazonaws.neptunegraph#EdgeStructures": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#EdgeStructure"
      }
    },
    "com.amazonaws.neptunegraph#ExecuteQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ExecuteQueryInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ExecuteQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#UnprocessableException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Execute an openCypher query.</p>\n         <p>\n      When invoking this operation in a Neptune Analytics cluster, the IAM user or role making the request must have a policy attached \n      that allows one of the following IAM actions in that cluster, depending on the query:\n    </p>\n         <ul>\n            <li>\n               <p>neptune-graph:ReadDataViaQuery</p>\n            </li>\n            <li>\n               <p>neptune-graph:WriteDataViaQuery</p>\n            </li>\n            <li>\n               <p>neptune-graph:DeleteDataViaQuery</p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{graphIdentifier}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/queries",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "DataPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ExecuteQueryInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "graphIdentifier",
            "smithy.api#required": {}
          }
        },
        "queryString": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The query string to be executed.</p>",
            "smithy.api#jsonName": "query",
            "smithy.api#required": {}
          }
        },
        "language": {
          "target": "com.amazonaws.neptunegraph#QueryLanguage",
          "traits": {
            "smithy.api#documentation": "<p>The query language the query is written in. Currently only openCypher is supported.</p>",
            "smithy.api#required": {}
          }
        },
        "parameters": {
          "target": "com.amazonaws.neptunegraph#DocumentValuedMap",
          "traits": {
            "smithy.api#documentation": "<p>The data parameters the query can use in JSON format. For example: {\"name\": \"john\", \"age\": 20}. (optional) </p>"
          }
        },
        "planCache": {
          "target": "com.amazonaws.neptunegraph#PlanCacheType",
          "traits": {
            "smithy.api#documentation": "<p>Query plan cache is a feature that saves the query plan and reuses it on successive executions of the same query. \n      This reduces query latency, and works for both <code>READ</code> and <code>UPDATE</code> queries. The plan cache is an \n      LRU cache with a 5 minute TTL and a capacity of 1000.</p>"
          }
        },
        "explainMode": {
          "target": "com.amazonaws.neptunegraph#ExplainMode",
          "traits": {
            "smithy.api#documentation": "<p>The explain mode parameter returns a query explain instead of the actual query results. A query explain can \n      be used to gather insights about the query execution such as planning decisions, time spent on each operator, solutions \n      flowing etc.</p>",
            "smithy.api#jsonName": "explain"
          }
        },
        "queryTimeoutMilliseconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the query timeout duration, in milliseconds. (optional)</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ExecuteQueryOutput": {
      "type": "structure",
      "members": {
        "payload": {
          "target": "com.amazonaws.neptunegraph#QueryResponseBlob",
          "traits": {
            "smithy.api#documentation": "<p>The query results.</p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ExplainMode": {
      "type": "enum",
      "members": {
        "STATIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STATIC"
          }
        },
        "DETAILS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DETAILS"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ExportFilter": {
      "type": "structure",
      "members": {
        "vertexFilter": {
          "target": "com.amazonaws.neptunegraph#ExportFilterPerLabelMap",
          "traits": {
            "smithy.api#documentation": "<p>Used to specify filters on a per-label basis for vertices. This allows you to control which vertex labels \n      and properties are included in the export.</p>"
          }
        },
        "edgeFilter": {
          "target": "com.amazonaws.neptunegraph#ExportFilterPerLabelMap",
          "traits": {
            "smithy.api#documentation": "<p>Used to specify filters on a per-label basis for edges. This allows you to control which edge labels \n      and properties are included in the export.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This is the top-level field for specifying vertex or edge filters. If the ExportFilter is not provided, \n      then all properties for all labels will be exported. If the ExportFilter is provided but is an empty object, \n      then no data will be exported.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterElement": {
      "type": "structure",
      "members": {
        "properties": {
          "target": "com.amazonaws.neptunegraph#ExportFilterPropertyMap",
          "traits": {
            "smithy.api#documentation": "<p>Each property is defined by a key-value pair, where the key is the desired output property name (e.g. \"name\"), \n      and the value is an object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies whihc properties of that label should be included in the export.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterLabel": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterOutputDataType": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^(Any|Byte|Short|Int|Long|Float|Double|String|Bool|Boolean|Float\\[\\]|Double\\[\\])$"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterOutputPropertyName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterPerLabelMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.neptunegraph#ExportFilterLabel"
      },
      "value": {
        "target": "com.amazonaws.neptunegraph#ExportFilterElement"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterPropertyAttributes": {
      "type": "structure",
      "members": {
        "outputType": {
          "target": "com.amazonaws.neptunegraph#ExportFilterOutputDataType",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the data type to use for the property in the exported data (e.g. \"String\", \"Int\", \"Float\"). \n       If a type is not provided, the export process will determine the type. If a given property is present as multiple \n       types (e.g. one vertex has \"height\" stored as a double, and another edge has it stored as a string), the type \n       will be of Any type, otherwise, it will be the type of the property as present in vertices.</p>"
          }
        },
        "sourcePropertyName": {
          "target": "com.amazonaws.neptunegraph#ExportFilterSourcePropertyName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the property as it exists in the original graph data. If not provided, it is assumed that the key \n       matches the desired sourcePropertyName.</p>"
          }
        },
        "multiValueHandling": {
          "target": "com.amazonaws.neptunegraph#MultiValueHandlingType",
          "traits": {
            "smithy.api#default": "PICK_FIRST",
            "smithy.api#documentation": "<p>Specifies how to handle properties that have multiple values. Can be either <code>TO_LIST</code> to export all \n      values as a list, or <code>PICK_FIRST</code> to export the first value encountered. If not specified, the default \n      value is <code>PICK_FIRST</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure representing a property's attributes. It is a map object of outputType, sourcePropertyName \n       and multiValueHandling.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterPropertyMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.neptunegraph#ExportFilterOutputPropertyName"
      },
      "value": {
        "target": "com.amazonaws.neptunegraph#ExportFilterPropertyAttributes"
      }
    },
    "com.amazonaws.neptunegraph#ExportFilterSourcePropertyName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.neptunegraph#ExportFormat": {
      "type": "enum",
      "members": {
        "PARQUET": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PARQUET"
          }
        },
        "CSV": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CSV"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ExportTaskDetails": {
      "type": "structure",
      "members": {
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start time of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "timeElapsedSeconds": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The time elapsed, in seconds, since the start time of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "progressPercentage": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of progress percentage of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "numVerticesWritten": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of exported vertices.</p>"
          }
        },
        "numEdgesWritten": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of exported edges.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about the specified export task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ExportTaskId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^t-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#ExportTaskStatus": {
      "type": "enum",
      "members": {
        "INITIALIZING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INITIALIZING"
          }
        },
        "EXPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EXPORTING"
          }
        },
        "SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCEEDED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "CANCELLING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLING"
          }
        },
        "CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLED"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ExportTaskSummary": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The source graph identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow the data to be exported to the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ExportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#ExportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 URI of the export task where data will be exported to.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the export task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the export task has this status value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details about an export task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ExportTaskSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#ExportTaskSummary"
      }
    },
    "com.amazonaws.neptunegraph#Format": {
      "type": "enum",
      "members": {
        "CSV": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CSV"
          }
        },
        "OPEN_CYPHER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OPEN_CYPHER"
          }
        },
        "PARQUET": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PARQUET"
          }
        },
        "NTRIPLES": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NTRIPLES"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetExportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetExportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetExportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a specified export task.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/exporttasks/{taskIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "ExportTaskSuccessful": {
            "documentation": "Wait until Export Task is Successful",
            "minDelay": 60,
            "maxDelay": 28800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUCCEEDED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "ExportTaskCancelled": {
            "documentation": "Wait until Export Task is Cancelled",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'CANCELLING' && status != 'CANCELLED'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetExportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetExportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The source graph identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow data to be exported to the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ExportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#ExportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 URI of the export task where data will be exported.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the export task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the export task has this status value.</p>"
          }
        },
        "exportTaskDetails": {
          "target": "com.amazonaws.neptunegraph#ExportTaskDetails",
          "traits": {
            "smithy.api#documentation": "<p>The details of the export task.</p>"
          }
        },
        "exportFilter": {
          "target": "com.amazonaws.neptunegraph#ExportFilter",
          "traits": {
            "smithy.api#documentation": "<p>The export filter of the export task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Gets information about a specified graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "GraphAvailable": {
            "documentation": "Wait until Graph is Available",
            "minDelay": 60,
            "maxDelay": 28800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "GraphDeleted": {
            "documentation": "Wait until Graph is Deleted",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if it was created from a snapshot.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetGraphSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetGraphSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a specified graph snapshot.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/snapshots/{snapshotIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "GraphSnapshotAvailable": {
            "documentation": "Wait until GraphSnapshot is Available",
            "minDelay": 60,
            "maxDelay": 7200,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "GraphSnapshotDeleted": {
            "documentation": "Wait until GraphSnapshot is Deleted",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph for which a snapshot is to be created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSummary": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetGraphSummaryInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetGraphSummaryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Gets a graph summary for a property graph.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{graphIdentifier}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/summary",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "DataPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSummaryInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "graphIdentifier",
            "smithy.api#required": {}
          }
        },
        "mode": {
          "target": "com.amazonaws.neptunegraph#GraphSummaryMode",
          "traits": {
            "smithy.api#documentation": "<p>The summary mode can take one of two values: <code>basic</code> (the default), and\n   <code>detailed</code>.</p>",
            "smithy.api#httpQuery": "mode"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetGraphSummaryOutput": {
      "type": "structure",
      "members": {
        "version": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Display the version of this tool.</p>"
          }
        },
        "lastStatisticsComputationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp, in ISO 8601 format, of the time at which Neptune Analytics last computed statistics.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "graphSummary": {
          "target": "com.amazonaws.neptunegraph#GraphDataSummary",
          "traits": {
            "smithy.api#documentation": "<p>The graph summary.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a specified import task.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/importtasks/{taskIdentifier}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "ImportTaskSuccessful": {
            "documentation": "Wait until Import Task is Successful",
            "minDelay": 60,
            "maxDelay": 28800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "ROLLING_BACK",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUCCEEDED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "ImportTaskCancelled": {
            "documentation": "Wait until Import Task is Cancelled",
            "minDelay": 60,
            "maxDelay": 3600,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'CANCELLING' && status != 'CANCELLED'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetImportTaskInput": {
      "type": "structure",
      "members": {
        "taskIdentifier": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the import task:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>INITIALIZING</b>   –  \n        The necessary resources needed to create the graph are being prepared.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ANALYZING_DATA</b>   –  \n        The data is being analyzed to determine the optimal infrastructure configuration\n        for the new graph.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RE_PROVISIONING</b>   –  \n        The data did not fit into the provisioned graph, so it is being re-provisioned\n        with more capacity.</p>\n            </li>\n            <li>\n               <p>\n                  <b>IMPORTING</b>   –  \n        The data is being loaded.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ERROR_ENCOUNTERED</b>   –  \n        An error has been encountered while trying to create the graph and import the data.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ERROR_ENCOUNTERED_ROLLING_BACK</b>   –  \n        Because of the error that was encountered, the graph is being rolled back and all\n        its resources released.</p>\n            </li>\n            <li>\n               <p>\n                  <b>SUCCEEDED</b>   –  \n        Graph creation and data loading succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <b>FAILED</b>   –  \n        Graph creation or data loading failed. When the status is <code>FAILED</code>,\n        you can use <code>get-graphs</code> to get more information about the state of\n        the graph.</p>\n            </li>\n            <li>\n               <p>\n                  <b>CANCELLING</b>   –  \n        Because you cancelled the import task, cancellation is in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <b>CANCELLED</b>   –  \n        You have successfully cancelled the import task.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Contains options for controlling the import process. For example, if the <code>failOnError</code> key\n      is set to <code>false</code>, the import skips problem data and attempts to continue (whereas if set to\n    <code>true</code>, the default, or if omitted, the import operation halts immediately when an error is\n      encountered.</p>"
          }
        },
        "importTaskDetails": {
          "target": "com.amazonaws.neptunegraph#ImportTaskDetails",
          "traits": {
            "smithy.api#documentation": "<p>Contains details about the specified import task.</p>"
          }
        },
        "attemptNumber": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of the current attempts to execute the import task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the import task has this status value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpointInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpointOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves information about a specified private endpoint.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}/endpoints/{vpcId}"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        },
        "smithy.waiters#waitable": {
          "PrivateGraphEndpointAvailable": {
            "documentation": "Wait until PrivateGraphEndpoint is Available",
            "minDelay": 10,
            "maxDelay": 1800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "AVAILABLE",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "PrivateGraphEndpointDeleted": {
            "documentation": "Wait until PrivateGraphEndpoint is Deleted",
            "minDelay": 10,
            "maxDelay": 1800,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status != 'DELETING'",
                    "expected": "true",
                    "comparator": "booleanEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpointInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetPrivateGraphEndpointOutput": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC where the private endpoint is located.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs involved.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the private endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the private endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GetQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#GetQueryInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#GetQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Retrieves the status of a specified query.</p>\n         <note>\n            <p>\n        When invoking this operation in a Neptune Analytics cluster, the IAM user or role making the request must have the \n        <code>neptune-graph:GetQueryStatus</code> IAM action attached.\n      </p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{graphIdentifier}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/queries/{queryId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "DataPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GetQueryInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "graphIdentifier",
            "smithy.api#required": {}
          }
        },
        "queryId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the query in question.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#GetQueryOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the query in question.</p>"
          }
        },
        "queryString": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The query in question.</p>"
          }
        },
        "waited": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Indicates how long the query waited, in milliseconds.</p>"
          }
        },
        "elapsed": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds the query has been running.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.neptunegraph#QueryState",
          "traits": {
            "smithy.api#documentation": "<p>State of the query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#GraphDataSummary": {
      "type": "structure",
      "members": {
        "numNodes": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of nodes in the graph.</p>"
          }
        },
        "numEdges": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of edges in the graph.</p>"
          }
        },
        "numNodeLabels": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of distinct node labels in the graph.</p>"
          }
        },
        "numEdgeLabels": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of unique edge labels in the graph.</p>"
          }
        },
        "nodeLabels": {
          "target": "com.amazonaws.neptunegraph#NodeLabels",
          "traits": {
            "smithy.api#documentation": "<p>A list of distinct node labels in the graph.</p>"
          }
        },
        "edgeLabels": {
          "target": "com.amazonaws.neptunegraph#EdgeLabels",
          "traits": {
            "smithy.api#documentation": "<p>A list of the edge labels in the graph.</p>"
          }
        },
        "numNodeProperties": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of distinct node properties in the graph.</p>"
          }
        },
        "numEdgeProperties": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of edge properties in the graph.</p>"
          }
        },
        "nodeProperties": {
          "target": "com.amazonaws.neptunegraph#LongValuedMapList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the distinct node properties in the graph, along with the count of nodes where each property is used.</p>"
          }
        },
        "edgeProperties": {
          "target": "com.amazonaws.neptunegraph#LongValuedMapList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the distinct edge properties in the graph, along with the count of edges\n      where each property is used.</p>"
          }
        },
        "totalNodePropertyValues": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The total number of usages of all node properties.</p>"
          }
        },
        "totalEdgePropertyValues": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The total number of usages of all edge properties.</p>"
          }
        },
        "nodeStructures": {
          "target": "com.amazonaws.neptunegraph#NodeStructures",
          "traits": {
            "smithy.api#documentation": "<p>This field is only present when the requested mode is DETAILED. It contains a list of node structures.</p>"
          }
        },
        "edgeStructures": {
          "target": "com.amazonaws.neptunegraph#EdgeStructures",
          "traits": {
            "smithy.api#documentation": "<p>This field is only present when the requested mode is DETAILED. It contains a list of edge structures.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about the graph.</p>"
      }
    },
    "com.amazonaws.neptunegraph#GraphId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^g-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#GraphIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^g-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#GraphName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 63
        },
        "smithy.api#pattern": "^(?!g-)[a-z][a-z0-9]*(-[a-z0-9]+)*$"
      }
    },
    "com.amazonaws.neptunegraph#GraphResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreateGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeleteGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListGraphs"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResetGraph"
        },
        {
          "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#UpdateGraph"
        }
      ]
    },
    "com.amazonaws.neptunegraph#GraphSnapshotSummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#SnapshotName",
          "traits": {
            "smithy.api#documentation": "<p>The snapshot name. For example: <code>my-snapshot-1</code>.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the graph snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceGraphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The graph identifier for the graph for which a snapshot is to be created.</p>"
          }
        },
        "snapshotCreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the snapshot was created.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#SnapshotStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph snapshot.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt the snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a graph snapshot.</p>"
      }
    },
    "com.amazonaws.neptunegraph#GraphSnapshotSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#GraphSnapshotSummary"
      }
    },
    "com.amazonaws.neptunegraph#GraphStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "RESETTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RESETTING"
          }
        },
        "UPDATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATING"
          }
        },
        "SNAPSHOTTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SNAPSHOTTING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "IMPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IMPORTING"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#GraphSummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary details about a graph.</p>"
      }
    },
    "com.amazonaws.neptunegraph#GraphSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#GraphSummary"
      }
    },
    "com.amazonaws.neptunegraph#GraphSummaryMode": {
      "type": "enum",
      "members": {
        "BASIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BASIC"
          }
        },
        "DETAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DETAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ImportOptions": {
      "type": "union",
      "members": {
        "neptune": {
          "target": "com.amazonaws.neptunegraph#NeptuneImportOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options for importing data from a Neptune database.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options for how to perform an import.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskDetails": {
      "type": "structure",
      "members": {
        "status": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Status of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Time at which the import task started.</p>",
            "smithy.api#required": {}
          }
        },
        "timeElapsedSeconds": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>Seconds elapsed since the import task started.</p>",
            "smithy.api#required": {}
          }
        },
        "progressPercentage": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The percentage progress so far.</p>",
            "smithy.api#required": {}
          }
        },
        "errorCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of errors encountered so far.</p>",
            "smithy.api#required": {}
          }
        },
        "errorDetails": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Details about the errors that have been encountered.</p>"
          }
        },
        "statementCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of statements in the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "dictionaryEntryCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of dictionary entries in the import task.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an import task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskStatus": {
      "type": "enum",
      "members": {
        "INITIALIZING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INITIALIZING"
          }
        },
        "EXPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EXPORTING"
          }
        },
        "ANALYZING_DATA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ANALYZING_DATA"
          }
        },
        "IMPORTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IMPORTING"
          }
        },
        "REPROVISIONING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REPROVISIONING"
          }
        },
        "ROLLING_BACK": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROLLING_BACK"
          }
        },
        "SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCEEDED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "CANCELLING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLING"
          }
        },
        "CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLED"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskSummary": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying to the location of the data to be imported. This can be an Amazon S3 path,\n      or can point to a Neptune database endpoint or snapshot</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of S3 data to be imported. Valid values are <code>CSV</code>, which identifies\n      the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html\">Gremlin\n      CSV format</a> or <code>OPENCYPHER</code>, which identies the <a href=\"https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html\">openCypher\n      load format</a>.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of the import task.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an import task.</p>"
      }
    },
    "com.amazonaws.neptunegraph#ImportTaskSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#ImportTaskSummary"
      }
    },
    "com.amazonaws.neptunegraph#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A failure occurred on the server.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.neptunegraph#KmsKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"
      }
    },
    "com.amazonaws.neptunegraph#ListExportTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListExportTasksInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListExportTasksOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Retrieves a list of export tasks.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/exporttasks"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "tasks"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListExportTasksInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpQuery": "graphIdentifier"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate input.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of export tasks to return.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListExportTasksOutput": {
      "type": "structure",
      "members": {
        "tasks": {
          "target": "com.amazonaws.neptunegraph#ExportTaskSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The requested list of export tasks.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshots": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListGraphSnapshotsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListGraphSnapshotsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists available snapshots of a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/snapshots"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "graphSnapshots"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshotsInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpQuery": "graphIdentifier"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphSnapshotsOutput": {
      "type": "structure",
      "members": {
        "graphSnapshots": {
          "target": "com.amazonaws.neptunegraph#GraphSnapshotSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The requested list of snapshots.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListGraphsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListGraphsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists available Neptune Analytics graphs.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "graphs"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListGraphsInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListGraphsOutput": {
      "type": "structure",
      "members": {
        "graphs": {
          "target": "com.amazonaws.neptunegraph#GraphSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the graphs.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListImportTasksInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListImportTasksOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists import tasks.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/importtasks"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "tasks"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasksInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListImportTasksOutput": {
      "type": "structure",
      "members": {
        "tasks": {
          "target": "com.amazonaws.neptunegraph#ImportTaskSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The requested list of import tasks.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists private endpoints for a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "GET",
          "uri": "/graphs/{graphIdentifier}/endpoints/"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "privateGraphEndpoints"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.neptunegraph#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The total number of records to return in the command's output.</p>\n         <p>If the total number of records available is more than the value specified,\n      <code>nextToken</code> is provided in the command's output. To resume pagination,\n      provide the <code>nextToken</code> output value in the <code>nextToken</code> argument\n      of a subsequent command. Do not use the <code>nextToken</code> response element directly\n      outside of the Amazon CLI.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListPrivateGraphEndpointsOutput": {
      "type": "structure",
      "members": {
        "privateGraphEndpoints": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of private endpoints for the specified Neptune Analytics graph.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.neptunegraph#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token used to paginate output.</p>\n         <p>When this value is provided as input, the service returns results from where\n      the previous response left off. When this value is present in output, it indicates\n      that there are more results to retrieve.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListQueries": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListQueriesInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListQueriesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Lists active openCypher queries.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{graphIdentifier}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/queries",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "DataPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListQueriesInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "graphIdentifier",
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be fetched by the API.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.neptunegraph#QueryStateInput",
          "traits": {
            "smithy.api#documentation": "<p>Filtered list of queries based on state.</p>",
            "smithy.api#httpQuery": "state"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListQueriesOutput": {
      "type": "structure",
      "members": {
        "queries": {
          "target": "com.amazonaws.neptunegraph#QuerySummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of current openCypher queries.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ListTagsForResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ListTagsForResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Lists tags associated with a specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ListTagsForResourceOutput": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The list of metadata tags associated with the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#LongValuedMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#Long"
      }
    },
    "com.amazonaws.neptunegraph#LongValuedMapList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#LongValuedMap"
      }
    },
    "com.amazonaws.neptunegraph#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.neptunegraph#MultiValueHandlingType": {
      "type": "enum",
      "members": {
        "TO_LIST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TO_LIST"
          }
        },
        "PICK_FIRST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PICK_FIRST"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#NeptuneImportOptions": {
      "type": "structure",
      "members": {
        "s3ExportPath": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The path to an S3 bucket from which to import data.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "s3ExportKmsKeyId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key to use to encrypt data in the S3 bucket where the graph data is exported</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "preserveDefaultVertexLabels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Neptune Analytics supports label-less vertices and no labels are assigned unless one is explicitly\n           provided. Neptune assigns default labels when none is explicitly provided. When importing the data into\n           Neptune Analytics, the default vertex labels can be omitted by setting\n           <i>preserveDefaultVertexLabels</i> to false. Note that if the vertex only has default labels,\n           and has no other properties or edges, then the vertex will effectively not get\n           imported into Neptune Analytics when preserveDefaultVertexLabels is set to false.</p>"
          }
        },
        "preserveEdgeIds": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Neptune Analytics currently does not support user defined edge ids. The edge ids are not imported by\n          default. They are imported if <i>preserveEdgeIds</i> is set to true, and ids are stored as\n          properties on the relationships with the property name <i>neptuneEdgeId</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options for how to import Neptune data.</p>"
      }
    },
    "com.amazonaws.neptunegraph#NodeLabels": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.neptunegraph#NodeProperties": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.neptunegraph#NodeStructure": {
      "type": "structure",
      "members": {
        "count": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances of this node.</p>"
          }
        },
        "nodeProperties": {
          "target": "com.amazonaws.neptunegraph#NodeProperties",
          "traits": {
            "smithy.api#documentation": "<p>Properties associated with this node.</p>"
          }
        },
        "distinctOutgoingEdgeLabels": {
          "target": "com.amazonaws.neptunegraph#OutgoingEdgeLabels",
          "traits": {
            "smithy.api#documentation": "<p>The outgoing edge labels associated with this node.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a node.</p>"
      }
    },
    "com.amazonaws.neptunegraph#NodeStructures": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#NodeStructure"
      }
    },
    "com.amazonaws.neptunegraph#OutgoingEdgeLabels": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.neptunegraph#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 8192
        }
      }
    },
    "com.amazonaws.neptunegraph#ParquetType": {
      "type": "enum",
      "members": {
        "COLUMNAR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COLUMNAR"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#PlanCacheType": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        },
        "AUTO": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AUTO"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreatePrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeletePrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetPrivateGraphEndpoint"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListPrivateGraphEndpoints"
        }
      ]
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointSummary": {
      "type": "structure",
      "members": {
        "vpcId": {
          "target": "com.amazonaws.neptunegraph#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC in which the private graph endpoint is located.</p>",
            "smithy.api#required": {}
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.neptunegraph#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs associated with the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the private graph endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "vpcEndpointId": {
          "target": "com.amazonaws.neptunegraph#VpcEndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a private graph endpoint.</p>"
      }
    },
    "com.amazonaws.neptunegraph#PrivateGraphEndpointSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#PrivateGraphEndpointSummary"
      }
    },
    "com.amazonaws.neptunegraph#ProvisionedMemory": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 16,
          "max": 24576
        }
      }
    },
    "com.amazonaws.neptunegraph#QueryLanguage": {
      "type": "enum",
      "members": {
        "OPEN_CYPHER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OPEN_CYPHER"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#QueryResponseBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#streaming": {}
      }
    },
    "com.amazonaws.neptunegraph#QueryState": {
      "type": "enum",
      "members": {
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        },
        "WAITING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WAITING"
          }
        },
        "CANCELLING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLING"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#QueryStateInput": {
      "type": "enum",
      "members": {
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        },
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        },
        "WAITING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WAITING"
          }
        },
        "CANCELLING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLING"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#QuerySummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A string representation of the id of the query.</p>"
          }
        },
        "queryString": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The actual query text. The <code>queryString</code> may be truncated if the actual query string is too long.</p>"
          }
        },
        "waited": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The amount of time, in milliseconds, the query has waited in the queue before being picked up by a worker thread.</p>"
          }
        },
        "elapsed": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The running time of the query, in milliseconds.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.neptunegraph#QueryState",
          "traits": {
            "smithy.api#documentation": "<p>State of the query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details of the query listed.</p>"
      }
    },
    "com.amazonaws.neptunegraph#QuerySummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#QuerySummary"
      }
    },
    "com.amazonaws.neptunegraph#ReplicaCount": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 2
        }
      }
    },
    "com.amazonaws.neptunegraph#ResetGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#ResetGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#ResetGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Empties the data from a specified Neptune Analytics graph.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "PUT",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#ResetGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>ID of the graph to reset.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "skipSnapshot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Determines whether a final graph snapshot is created before the graph data is deleted.\n      If set to <code>true</code>, no graph snapshot is created. If set to <code>false</code>,\n      a graph snapshot is created before the data is deleted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#ResetGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A specified resource could not be located.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshot": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Restores a graph from a snapshot.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/snapshots/{snapshotIdentifier}/restore"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotInput": {
      "type": "structure",
      "members": {
        "snapshotIdentifier": {
          "target": "com.amazonaws.neptunegraph#SnapshotIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot in question.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "graphName": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the new Neptune Analytics graph to be created from the snapshot.</p>\n         <p>The name must contain from 1 to 63 letters, numbers, or hyphens, and its\n      first character must be a letter. It cannot end with a hyphen or contain two\n      consecutive hyphens. Only lowercase letters are allowed.</p>",
            "smithy.api#required": {}
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.</p>\n         <p>Min = 16</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Adds metadata tags to the snapshot.\n        These tags can also be used with cost allocation reporting, or used in a Condition statement in an IAM policy.</p>"
          }
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas in other AZs. Min =0, Max = 2, Default =1</p>\n         <important>\n            <p>\n        Additional charges equivalent to the m-NCUs selected for the graph apply for each replica.\n      </p>\n         </important>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated.\n      (<code>true</code> to enable, or <code>false</code> to disable).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#RestoreGraphFromSnapshotOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)(/[\\w+=,.@-]+)+$"
      }
    },
    "com.amazonaws.neptunegraph#SecurityGroupId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^sg-[a-z0-9]+$"
      }
    },
    "com.amazonaws.neptunegraph#SecurityGroupIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#SecurityGroupId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.neptunegraph#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource that exceeded quota.</p>"
          }
        },
        "resourceType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource that exceeded quota. Ex: Graph, Snapshot</p>"
          }
        },
        "serviceCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The service code that exceeded quota.</p>"
          }
        },
        "quotaCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Service quota code of the resource for which quota was exceeded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A service quota was exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.neptunegraph#SnapshotId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^gs-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^gs-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 63
        },
        "smithy.api#pattern": "^(?!gs-)[a-z][a-z0-9]*(-[a-z0-9]+)*$"
      }
    },
    "com.amazonaws.neptunegraph#SnapshotResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CreateGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#DeleteGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetGraphSnapshot"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListGraphSnapshots"
        }
      ]
    },
    "com.amazonaws.neptunegraph#SnapshotStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#StartExportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#StartExportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#StartExportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Export data from an existing Neptune Analytics graph to Amazon S3. The graph state should be <code>AVAILABLE</code>.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/exporttasks"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#StartExportTaskInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The source graph identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow data to be exported to the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#ExportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 URI where data will be exported to.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the export task.</p>"
          }
        },
        "exportFilter": {
          "target": "com.amazonaws.neptunegraph#ExportFilter",
          "traits": {
            "smithy.api#documentation": "<p>The export filter of the export task.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags to be applied to the export task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#StartExportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The source graph identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow data to be exported to the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ExportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#ExportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 URI of the export task where data will be exported to.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key identifier of the export task.</p>",
            "smithy.api#required": {}
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the export task.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the export task has this status value.</p>"
          }
        },
        "exportFilter": {
          "target": "com.amazonaws.neptunegraph#ExportFilter",
          "traits": {
            "smithy.api#documentation": "<p>The export filter of the export task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#StartImportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#StartImportTaskInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#StartImportTaskOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Import data into existing Neptune Analytics graph from Amazon Simple Storage Service (S3). The graph needs to be empty and in the AVAILABLE state.</p>",
        "smithy.api#http": {
          "code": 201,
          "method": "POST",
          "uri": "/graphs/{graphIdentifier}/importtasks"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#StartImportTaskInput": {
      "type": "structure",
      "members": {
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions"
        },
        "failOnError": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to true, the task halts when an import error is encountered. If set to false, the task skips the data that \n      caused the error and continues if possible.</p>"
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying the location of the data to be imported. This can be an Amazon S3 path, or can point to a \n      Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of Amazon S3 data to be imported. Valid values are CSV, which identifies the Gremlin CSV format or \n      OPENCYPHER, which identies the openCypher load format.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "blankNodeHandling": {
          "target": "com.amazonaws.neptunegraph#BlankNodeHandling",
          "traits": {
            "smithy.api#documentation": "<p>The method to handle blank nodes in the dataset. Currently, only <code>convertToIri</code> is supported, \n      meaning blank nodes are converted to unique IRIs at load time. Must be provided when format is <code>ntriples</code>. \n      For more information, see <a href=\"https://docs.aws.amazon.com/neptune-analytics/latest/userguide/using-rdf-data.html#rdf-handling\">Handling RDF values</a>.</p>"
          }
        },
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#StartImportTaskOutput": {
      "type": "structure",
      "members": {
        "graphId": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>"
          }
        },
        "taskId": {
          "target": "com.amazonaws.neptunegraph#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "source": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A URL identifying the location of the data to be imported. This can be an Amazon S3 path, or can point to a \n      Neptune database endpoint or snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "format": {
          "target": "com.amazonaws.neptunegraph#Format",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of Amazon S3 data to be imported. Valid values are CSV, which identifies the Gremlin CSV format or \n      OPENCYPHER, which identies the openCypher load format.</p>"
          }
        },
        "parquetType": {
          "target": "com.amazonaws.neptunegraph#ParquetType",
          "traits": {
            "smithy.api#documentation": "<p>The parquet type of the import task.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.neptunegraph#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM role that will allow access to the data that is to be imported.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#ImportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the import task.</p>",
            "smithy.api#required": {}
          }
        },
        "importOptions": {
          "target": "com.amazonaws.neptunegraph#ImportOptions"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#SubnetId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^subnet-[a-z0-9]+$"
      }
    },
    "com.amazonaws.neptunegraph#SubnetIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#SubnetId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 6
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.neptunegraph#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$"
      }
    },
    "com.amazonaws.neptunegraph#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.neptunegraph#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.neptunegraph#TagMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.neptunegraph#TagKey"
      },
      "value": {
        "target": "com.amazonaws.neptunegraph#TagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.neptunegraph#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#TagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#TagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Adds tags to the specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "POST"
        },
        "smithy.api#idempotent": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#TagResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the resource for which tags need to be added.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.neptunegraph#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags to be assigned to the Neptune Analytics resource.</p>\n         <p>The tags are metadata that are specified as a list of key-value pairs:</p>\n         <p>\n            <b>Key</b> (string)   –  \n       A key is the required name of the tag. The string value can be\n       from 1 to 128 Unicode characters in length. It can't be\n       prefixed with <code>aws:</code> and can only contain the\n       set of Unicode characters specified by this Java regular expression:\n     <code>\"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$\")</code>.</p>\n         <p>\n            <b>Value</b> (string)   –  \n       A value is the optional value of the tag. The string value can\n       be from 1 to 256 Unicode characters in length. It can't be\n       prefixed with <code>aws:</code> and can only contain the\n       set of Unicode characters specified by this Java regular expression:\n     <code>\"^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$\")</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#TagResourceOutput": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.neptunegraph#TaskId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^t-[a-z0-9]{10}$"
      }
    },
    "com.amazonaws.neptunegraph#TaskResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.neptunegraph#CancelExportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#CancelImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#CreateGraphUsingImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetExportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#GetImportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListExportTasks"
        },
        {
          "target": "com.amazonaws.neptunegraph#ListImportTasks"
        },
        {
          "target": "com.amazonaws.neptunegraph#StartExportTask"
        },
        {
          "target": "com.amazonaws.neptunegraph#StartImportTask"
        }
      ]
    },
    "com.amazonaws.neptunegraph#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The exception was interrupted by throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.neptunegraph#UnprocessableException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.neptunegraph#UnprocessableExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the unprocessable exception.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request cannot be processed due to known reasons. Eg. partition full.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 422
      }
    },
    "com.amazonaws.neptunegraph#UnprocessableExceptionReason": {
      "type": "enum",
      "members": {
        "QUERY_TIMEOUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUERY_TIMEOUT"
          }
        },
        "INTERNAL_LIMIT_EXCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_LIMIT_EXCEEDED"
          }
        },
        "MEMORY_LIMIT_EXCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MEMORY_LIMIT_EXCEEDED"
          }
        },
        "STORAGE_LIMIT_EXCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STORAGE_LIMIT_EXCEEDED"
          }
        },
        "PARTITION_FULL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PARTITION_FULL"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#UntagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#UntagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Removes the specified tags from the specified resource.</p>",
        "smithy.api#http": {
          "uri": "/tags/{resourceArn}",
          "method": "DELETE"
        },
        "smithy.api#idempotent": {},
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#UntagResourceInput": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.neptunegraph#Arn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the resource whose tag needs to be removed.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.neptunegraph#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>Tag keys for the tags to be removed.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#UntagResourceOutput": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraph": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.neptunegraph#UpdateGraphInput"
      },
      "output": {
        "target": "com.amazonaws.neptunegraph#UpdateGraphOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.neptunegraph#ConflictException"
        },
        {
          "target": "com.amazonaws.neptunegraph#InternalServerException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ThrottlingException"
        },
        {
          "target": "com.amazonaws.neptunegraph#ValidationException"
        }
      ],
      "traits": {
        "aws.api#controlPlane": {},
        "smithy.api#documentation": "<p>Updates the configuration of a specified Neptune Analytics graph</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "PATCH",
          "uri": "/graphs/{graphIdentifier}"
        },
        "smithy.rules#staticContextParams": {
          "ApiType": {
            "value": "ControlPlane"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraphInput": {
      "type": "structure",
      "members": {
        "graphIdentifier": {
          "target": "com.amazonaws.neptunegraph#GraphIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the Neptune Analytics graph.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not the graph can be reachable over the internet. All access to graphs is IAM authenticated.\n      (<code>true</code> to enable, or <code>false</code> to disable.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The provisioned memory-optimized Neptune Capacity Units (m-NCUs) to use for the graph.</p>\n         <p>Min = 16</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A value that indicates whether the graph has deletion protection enabled.\n      The graph can't be deleted when deletion protection is enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.neptunegraph#UpdateGraphOutput": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.neptunegraph#GraphId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.neptunegraph#GraphName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN associated with the graph.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.neptunegraph#GraphStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the graph.</p>"
          }
        },
        "statusReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the graph has this status.</p>"
          }
        },
        "createTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the graph was created.</p>"
          }
        },
        "provisionedMemory": {
          "target": "com.amazonaws.neptunegraph#ProvisionedMemory",
          "traits": {
            "smithy.api#documentation": "<p>The number of memory-optimized Neptune Capacity Units (m-NCUs) allocated to the graph.</p>"
          }
        },
        "endpoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The graph endpoint.</p>"
          }
        },
        "publicConnectivity": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, the graph has a public endpoint, otherwise not.</p>"
          }
        },
        "vectorSearchConfiguration": {
          "target": "com.amazonaws.neptunegraph#VectorSearchConfiguration"
        },
        "replicaCount": {
          "target": "com.amazonaws.neptunegraph#ReplicaCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of replicas for the graph.</p>"
          }
        },
        "kmsKeyIdentifier": {
          "target": "com.amazonaws.neptunegraph#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the KMS key used to encrypt and decrypt graph data.</p>"
          }
        },
        "sourceSnapshotId": {
          "target": "com.amazonaws.neptunegraph#SnapshotId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the snapshot from which the graph was created, if any.</p>"
          }
        },
        "deletionProtection": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If <code>true</code>, deletion protection is enabled for the graph.</p>"
          }
        },
        "buildNumber": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The build number of the graph.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.neptunegraph#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>",
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.neptunegraph#ValidationExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the resource could not be validated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource could not be validated.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.neptunegraph#ValidationExceptionReason": {
      "type": "enum",
      "members": {
        "CONSTRAINT_VIOLATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONSTRAINT_VIOLATION"
          }
        },
        "ILLEGAL_ARGUMENT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ILLEGAL_ARGUMENT"
          }
        },
        "MALFORMED_QUERY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MALFORMED_QUERY"
          }
        },
        "QUERY_CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUERY_CANCELLED"
          }
        },
        "QUERY_TOO_LARGE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUERY_TOO_LARGE"
          }
        },
        "UNSUPPORTED_OPERATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNSUPPORTED_OPERATION"
          }
        },
        "BAD_REQUEST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BAD_REQUEST"
          }
        }
      }
    },
    "com.amazonaws.neptunegraph#VectorSearchConfiguration": {
      "type": "structure",
      "members": {
        "dimension": {
          "target": "com.amazonaws.neptunegraph#VectorSearchDimension",
          "traits": {
            "smithy.api#documentation": "<p>The number of dimensions.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the number of dimensions for vector embeddings loaded into the graph. Max = 65535</p>"
      }
    },
    "com.amazonaws.neptunegraph#VectorSearchDimension": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 65536
        }
      }
    },
    "com.amazonaws.neptunegraph#VpcEndpointId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^vpce-[0-9a-f]{17}$"
      }
    },
    "com.amazonaws.neptunegraph#VpcId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^vpc-[a-z0-9]+$"
      }
    }
  }
}
