{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.lambda#AWSGirApiService": {
      "type": "service",
      "version": "2015-03-31",
      "operations": [
        {
          "target": "com.amazonaws.lambda#AddLayerVersionPermission"
        },
        {
          "target": "com.amazonaws.lambda#AddPermission"
        },
        {
          "target": "com.amazonaws.lambda#CreateAlias"
        },
        {
          "target": "com.amazonaws.lambda#CreateEventSourceMapping"
        },
        {
          "target": "com.amazonaws.lambda#CreateFunction"
        },
        {
          "target": "com.amazonaws.lambda#DeleteAlias"
        },
        {
          "target": "com.amazonaws.lambda#DeleteEventSourceMapping"
        },
        {
          "target": "com.amazonaws.lambda#DeleteFunction"
        },
        {
          "target": "com.amazonaws.lambda#DeleteFunctionConcurrency"
        },
        {
          "target": "com.amazonaws.lambda#DeleteFunctionEventInvokeConfig"
        },
        {
          "target": "com.amazonaws.lambda#DeleteLayerVersion"
        },
        {
          "target": "com.amazonaws.lambda#DeleteProvisionedConcurrencyConfig"
        },
        {
          "target": "com.amazonaws.lambda#GetAccountSettings"
        },
        {
          "target": "com.amazonaws.lambda#GetAlias"
        },
        {
          "target": "com.amazonaws.lambda#GetEventSourceMapping"
        },
        {
          "target": "com.amazonaws.lambda#GetFunction"
        },
        {
          "target": "com.amazonaws.lambda#GetFunctionConcurrency"
        },
        {
          "target": "com.amazonaws.lambda#GetFunctionConfiguration"
        },
        {
          "target": "com.amazonaws.lambda#GetFunctionEventInvokeConfig"
        },
        {
          "target": "com.amazonaws.lambda#GetLayerVersion"
        },
        {
          "target": "com.amazonaws.lambda#GetLayerVersionByArn"
        },
        {
          "target": "com.amazonaws.lambda#GetLayerVersionPolicy"
        },
        {
          "target": "com.amazonaws.lambda#GetPolicy"
        },
        {
          "target": "com.amazonaws.lambda#GetProvisionedConcurrencyConfig"
        },
        {
          "target": "com.amazonaws.lambda#Invoke"
        },
        {
          "target": "com.amazonaws.lambda#InvokeAsync"
        },
        {
          "target": "com.amazonaws.lambda#ListAliases"
        },
        {
          "target": "com.amazonaws.lambda#ListEventSourceMappings"
        },
        {
          "target": "com.amazonaws.lambda#ListFunctionEventInvokeConfigs"
        },
        {
          "target": "com.amazonaws.lambda#ListFunctions"
        },
        {
          "target": "com.amazonaws.lambda#ListLayers"
        },
        {
          "target": "com.amazonaws.lambda#ListLayerVersions"
        },
        {
          "target": "com.amazonaws.lambda#ListProvisionedConcurrencyConfigs"
        },
        {
          "target": "com.amazonaws.lambda#ListTags"
        },
        {
          "target": "com.amazonaws.lambda#ListVersionsByFunction"
        },
        {
          "target": "com.amazonaws.lambda#PublishLayerVersion"
        },
        {
          "target": "com.amazonaws.lambda#PublishVersion"
        },
        {
          "target": "com.amazonaws.lambda#PutFunctionConcurrency"
        },
        {
          "target": "com.amazonaws.lambda#PutFunctionEventInvokeConfig"
        },
        {
          "target": "com.amazonaws.lambda#PutProvisionedConcurrencyConfig"
        },
        {
          "target": "com.amazonaws.lambda#RemoveLayerVersionPermission"
        },
        {
          "target": "com.amazonaws.lambda#RemovePermission"
        },
        {
          "target": "com.amazonaws.lambda#TagResource"
        },
        {
          "target": "com.amazonaws.lambda#UntagResource"
        },
        {
          "target": "com.amazonaws.lambda#UpdateAlias"
        },
        {
          "target": "com.amazonaws.lambda#UpdateEventSourceMapping"
        },
        {
          "target": "com.amazonaws.lambda#UpdateFunctionCode"
        },
        {
          "target": "com.amazonaws.lambda#UpdateFunctionConfiguration"
        },
        {
          "target": "com.amazonaws.lambda#UpdateFunctionEventInvokeConfig"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Lambda",
          "arnNamespace": "lambda",
          "cloudFormationName": "Lambda",
          "cloudTrailEventSource": "awsgirapi.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "lambda"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<fullname>AWS Lambda</fullname>\n         <p>\n            <b>Overview</b>\n         </p>\n         <p>This is the <i>AWS Lambda API Reference</i>. The AWS Lambda Developer Guide provides additional\n      information. For the service overview, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">What is\n        AWS Lambda</a>, and for information about how the service works, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\">AWS Lambda: How it Works</a> in the <b>AWS Lambda Developer Guide</b>.</p>",
        "smithy.api#title": "AWS Lambda"
      }
    },
    "com.amazonaws.lambda#AccountLimit": {
      "type": "structure",
      "members": {
        "ConcurrentExecutions": {
          "target": "com.amazonaws.lambda#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of simultaneous function executions.</p>"
          }
        },
        "TotalCodeSize": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The amount of storage space that you can use for all deployment packages and layer archives.</p>"
          }
        },
        "CodeSizeZipped": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The maximum size of a deployment package when it's uploaded directly to AWS Lambda. Use Amazon S3 for larger\n      files.</p>"
          }
        },
        "UnreservedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#UnreservedConcurrentExecutions",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of simultaneous function executions, minus the capacity that's reserved for individual\n      functions with <a>PutFunctionConcurrency</a>.</p>"
          }
        },
        "CodeSizeUnzipped": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The maximum size of a function's deployment package and layers when they're extracted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Limits that are related to concurrency and storage. All file and storage sizes are in bytes.</p>"
      }
    },
    "com.amazonaws.lambda#AccountUsage": {
      "type": "structure",
      "members": {
        "FunctionCount": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of Lambda functions.</p>"
          }
        },
        "TotalCodeSize": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The amount of storage space, in bytes, that's being used by deployment packages and layer archives.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The number of functions and amount of storage in use.</p>"
      }
    },
    "com.amazonaws.lambda#Action": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "(lambda:[*]|lambda:[a-zA-Z]+|[*])"
      }
    },
    "com.amazonaws.lambda#AddLayerVersionPermission": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#AddLayerVersionPermissionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#AddLayerVersionPermissionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PolicyLengthExceededException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. Use this action to grant layer\n      usage permission to other accounts. You can grant permission to a single account, all AWS accounts, or all\n      accounts in an organization.</p>\n         <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you\n      specified when you added it.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#AddLayerVersionPermissionRequest": {
      "type": "structure",
      "members": {
        "Action": {
          "target": "com.amazonaws.lambda#LayerPermissionAllowedAction",
          "traits": {
            "smithy.api#documentation": "<p>The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "StatementId": {
          "target": "com.amazonaws.lambda#StatementId",
          "traits": {
            "smithy.api#documentation": "<p>An identifier that distinguishes the policy from others on the same layer version.</p>",
            "smithy.api#required": {}
          }
        },
        "Principal": {
          "target": "com.amazonaws.lambda#LayerPermissionAllowedPrincipal",
          "traits": {
            "smithy.api#documentation": "<p>An account ID, or <code>*</code> to grant permission to all AWS accounts.</p>",
            "smithy.api#required": {}
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a\n      policy that has changed since you last read it.</p>",
            "smithy.api#httpQuery": "RevisionId"
          }
        },
        "VersionNumber": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "OrganizationId": {
          "target": "com.amazonaws.lambda#OrganizationId",
          "traits": {
            "smithy.api#documentation": "<p>With the principal set to <code>*</code>, grant permission to all accounts in the specified\n      organization.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#AddLayerVersionPermissionResponse": {
      "type": "structure",
      "members": {
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for the current revision of the policy.</p>"
          }
        },
        "Statement": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The permission statement.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#AddPermission": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#AddPermissionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#AddPermissionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PolicyLengthExceededException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Grants an AWS service or another account permission to use a function. You can apply the policy at the\n      function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier,\n      the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p>\n      \n         <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For AWS\n      services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or\n        <code>sns.amazonaws.com</code>. For AWS services, you can also specify the ARN of the associated resource as the\n        <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other\n      accounts could potentially configure resources in their account to invoke your Lambda function.</p>\n      \n         <p>This action adds a statement to a resource-based permissions policy for the function. For more information\n      about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/functions/{FunctionName}/policy",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#AddPermissionRequest": {
      "type": "structure",
      "members": {
        "Action": {
          "target": "com.amazonaws.lambda#Action",
          "traits": {
            "smithy.api#documentation": "<p>The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or\n        <code>lambda:GetFunction</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "SourceArn": {
          "target": "com.amazonaws.lambda#Arn",
          "traits": {
            "smithy.api#documentation": "<p>For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or\n      Amazon SNS topic.</p>"
          }
        },
        "SourceAccount": {
          "target": "com.amazonaws.lambda#SourceOwner",
          "traits": {
            "smithy.api#documentation": "<p>For Amazon S3, the ID of the account that owns the resource. Use this together with <code>SourceArn</code> to\n      ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted\n      by its owner and recreated by another account.</p>"
          }
        },
        "StatementId": {
          "target": "com.amazonaws.lambda#StatementId",
          "traits": {
            "smithy.api#documentation": "<p>A statement identifier that differentiates the statement from others in the same policy.</p>",
            "smithy.api#required": {}
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "EventSourceToken": {
          "target": "com.amazonaws.lambda#EventSourceToken",
          "traits": {
            "smithy.api#documentation": "<p>For Alexa Smart Home functions, a token that must be supplied by the invoker.</p>"
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to add permissions to a published version of the function.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "Principal": {
          "target": "com.amazonaws.lambda#Principal",
          "traits": {
            "smithy.api#documentation": "<p>The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or\n        <code>SourceAccount</code> to limit who can invoke the function through that service.</p>",
            "smithy.api#required": {}
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a\n      policy that has changed since you last read it.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#AddPermissionResponse": {
      "type": "structure",
      "members": {
        "Statement": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The permission statement that's added to the function policy.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#AdditionalVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "[0-9]+"
      }
    },
    "com.amazonaws.lambda#AdditionalVersionWeights": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lambda#AdditionalVersion"
      },
      "value": {
        "target": "com.amazonaws.lambda#Weight"
      }
    },
    "com.amazonaws.lambda#Alias": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_]+)"
      }
    },
    "com.amazonaws.lambda#AliasConfiguration": {
      "type": "structure",
      "members": {
        "RoutingConfig": {
          "target": "com.amazonaws.lambda#AliasRoutingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html\">routing\n        configuration</a> of the alias.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.lambda#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alias.</p>"
          }
        },
        "AliasArn": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the alias.</p>"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier that changes when you update the alias.</p>"
          }
        },
        "FunctionVersion": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>The function version that the alias invokes.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description of the alias.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides configuration information about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>"
      }
    },
    "com.amazonaws.lambda#AliasList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#AliasConfiguration"
      }
    },
    "com.amazonaws.lambda#AliasRoutingConfiguration": {
      "type": "structure",
      "members": {
        "AdditionalVersionWeights": {
          "target": "com.amazonaws.lambda#AdditionalVersionWeights",
          "traits": {
            "smithy.api#documentation": "<p>The second version, and the percentage of traffic that's routed to it.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html\">traffic-shifting</a> configuration of a Lambda function alias.</p>"
      }
    },
    "com.amazonaws.lambda#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)"
      }
    },
    "com.amazonaws.lambda#BatchSize": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 10000
        }
      }
    },
    "com.amazonaws.lambda#BisectBatchOnFunctionError": {
      "type": "boolean",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.lambda#Blob": {
      "type": "blob",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lambda#BlobStream": {
      "type": "blob",
      "traits": {
        "smithy.api#streaming": {}
      }
    },
    "com.amazonaws.lambda#Boolean": {
      "type": "boolean"
    },
    "com.amazonaws.lambda#CodeStorageExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You have exceeded your maximum total code size per account. <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Learn more</a>\n         </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lambda#CompatibleRuntimes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#Runtime"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 5
        }
      }
    },
    "com.amazonaws.lambda#Concurrency": {
      "type": "structure",
      "members": {
        "ReservedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#ReservedConcurrentExecutions",
          "traits": {
            "smithy.api#documentation": "<p>The number of concurrent executions that are reserved for this function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#CreateAlias": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#CreateAliasRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#AliasConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a\n      Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a\n      different version.</p>\n         <p>You can also map an alias to split invocation requests between two versions. Use the\n        <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that\n      it receives.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/functions/{FunctionName}/aliases",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#CreateAliasRequest": {
      "type": "structure",
      "members": {
        "RoutingConfig": {
          "target": "com.amazonaws.lambda#AliasRoutingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html#configuring-alias-routing\">routing\n        configuration</a> of the alias.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description of the alias.</p>"
          }
        },
        "FunctionVersion": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>The function version that the alias invokes.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lambda#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alias.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#CreateEventSourceMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#CreateEventSourceMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#EventSourceMappingConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a mapping between an event source and an AWS Lambda function. Lambda reads items from the event source\n      and triggers the function.</p>\n         <p>For details about each event source type, see the following topics.</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html\">Using AWS Lambda with Amazon\n            DynamoDB</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html\">Using AWS Lambda with Amazon\n            Kinesis</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html\">Using AWS Lambda with Amazon\n          SQS</a>\n               </p>\n            </li>\n         </ul>\n         <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p>\n            </li>\n            <li>\n               <p>\n                  <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age.</p>\n            </li>\n            <li>\n               <p>\n                  <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p>\n            </li>\n         </ul>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/event-source-mappings",
          "code": 202
        }
      }
    },
    "com.amazonaws.lambda#CreateEventSourceMappingRequest": {
      "type": "structure",
      "members": {
        "Enabled": {
          "target": "com.amazonaws.lambda#Enabled",
          "traits": {
            "smithy.api#documentation": "<p>Disables the event source mapping to pause polling and invocation.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>"
          }
        },
        "BisectBatchOnFunctionError": {
          "target": "com.amazonaws.lambda#BisectBatchOnFunctionError",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) If the function returns an error, split the batch in two and retry.</p>"
          }
        },
        "StartingPositionTimestamp": {
          "target": "com.amazonaws.lambda#Date",
          "traits": {
            "smithy.api#documentation": "<p>With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start\n      reading.</p>"
          }
        },
        "ParallelizationFactor": {
          "target": "com.amazonaws.lambda#ParallelizationFactor",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The number of batches to process from each shard concurrently.</p>"
          }
        },
        "BatchSize": {
          "target": "com.amazonaws.lambda#BatchSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items to retrieve in a single batch.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p>\n            </li>\n         </ul>"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttemptsEventSourceMapping",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64\n      characters in length.</p>",
            "smithy.api#required": {}
          }
        },
        "MaximumRecordAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumRecordAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum age of a record that Lambda sends to a function for processing.</p>"
          }
        },
        "StartingPosition": {
          "target": "com.amazonaws.lambda#EventSourcePosition",
          "traits": {
            "smithy.api#documentation": "<p>The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams\n      sources. <code>AT_TIMESTAMP</code> is only supported for Amazon Kinesis streams.</p>"
          }
        },
        "MaximumBatchingWindowInSeconds": {
          "target": "com.amazonaws.lambda#MaximumBatchingWindowInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum amount of time to gather records before invoking the function, in seconds.</p>"
          }
        },
        "EventSourceArn": {
          "target": "com.amazonaws.lambda#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#CreateFunction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#CreateFunctionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#CodeStorageExceededException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The\n      deployment package contains your function code. The execution role grants the function permission to use AWS\n      services, such as Amazon CloudWatch Logs for log streaming and AWS X-Ray for request tracing.</p>\n      \n         <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If\n      your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or\n      modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in\n      the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For\n      more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function\n        States</a>.</p>\n      \n         <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version\n      changes when you update your function's code and configuration. A published version is a snapshot of your function\n      code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be\n      changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of\n      your function from its initial configuration.</p>\n      \n         <p>The other parameters let you configure version-specific and function-level settings. You can modify\n      version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply\n      to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>)\n      and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p>\n      \n         <p>If another account or an AWS service invokes your function, use <a>AddPermission</a> to grant\n      permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version,\n      or on an alias.</p>\n      \n         <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events\n      in other AWS services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a\n      function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/functions",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#CreateFunctionRequest": {
      "type": "structure",
      "members": {
        "VpcConfig": {
          "target": "com.amazonaws.lambda#VpcConfig",
          "traits": {
            "smithy.api#documentation": "<p>For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.\n      When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more\n      information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description of the function.</p>"
          }
        },
        "MemorySize": {
          "target": "com.amazonaws.lambda#MemorySize",
          "traits": {
            "smithy.api#documentation": "<p>The amount of memory that your function has access to. Increasing the function's memory also increases its CPU\n      allocation. The default value is 128 MB. The value must be a multiple of 64 MB.</p>"
          }
        },
        "KMSKeyArn": {
          "target": "com.amazonaws.lambda#KMSKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment\n      variables. If it's not provided, AWS Lambda uses a default service key.</p>"
          }
        },
        "Layers": {
          "target": "com.amazonaws.lambda#LayerList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a>\n      to add to the function's execution environment. Specify each layer by its ARN, including the version.</p>"
          }
        },
        "Publish": {
          "target": "com.amazonaws.lambda#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Set to true to publish the first version of the function during creation.</p>"
          }
        },
        "TracingConfig": {
          "target": "com.amazonaws.lambda#TracingConfig",
          "traits": {
            "smithy.api#documentation": "<p>Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS\n      X-Ray.</p>"
          }
        },
        "Handler": {
          "target": "com.amazonaws.lambda#Handler",
          "traits": {
            "smithy.api#documentation": "<p>The name of the method within your code that Lambda calls to execute your function. The format includes the\n      file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information,\n      see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html\">Programming Model</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "Timeout": {
          "target": "com.amazonaws.lambda#Timeout",
          "traits": {
            "smithy.api#documentation": "<p>The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The\n      maximum allowed value is 900 seconds.</p>"
          }
        },
        "Code": {
          "target": "com.amazonaws.lambda#FunctionCode",
          "traits": {
            "smithy.api#documentation": "<p>The code for the function.</p>",
            "smithy.api#required": {}
          }
        },
        "Runtime": {
          "target": "com.amazonaws.lambda#Runtime",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "FileSystemConfigs": {
          "target": "com.amazonaws.lambda#FileSystemConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Connection settings for an Amazon EFS file system.</p>"
          }
        },
        "Role": {
          "target": "com.amazonaws.lambda#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the function's execution role.</p>",
            "smithy.api#required": {}
          }
        },
        "Environment": {
          "target": "com.amazonaws.lambda#Environment",
          "traits": {
            "smithy.api#documentation": "<p>Environment variables that are accessible from function code during execution.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.lambda#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to apply to the\n      function.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#required": {}
          }
        },
        "DeadLetterConfig": {
          "target": "com.amazonaws.lambda#DeadLetterConfig",
          "traits": {
            "smithy.api#documentation": "<p>A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events\n      when they fail processing. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">Dead Letter Queues</a>.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#Date": {
      "type": "timestamp"
    },
    "com.amazonaws.lambda#DeadLetterConfig": {
      "type": "structure",
      "members": {
        "TargetArn": {
          "target": "com.amazonaws.lambda#ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a> for\n      failed asynchronous invocations.</p>"
      }
    },
    "com.amazonaws.lambda#DeleteAlias": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteAliasRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteAliasRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.lambda#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alias.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteEventSourceMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteEventSourceMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#EventSourceMappingConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceInUseException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source\n        mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p>\n         <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely\n      deleted for several seconds.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2015-03-31/event-source-mappings/{UUID}",
          "code": 202
        }
      }
    },
    "com.amazonaws.lambda#DeleteEventSourceMappingRequest": {
      "type": "structure",
      "members": {
        "UUID": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event source mapping.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteFunctionRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter.\n      Otherwise, all versions and aliases are deleted.</p>\n      \n         <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>.\n      For AWS services and resources that invoke your function directly, delete the trigger in the service where you\n      originally configured it.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2015-03-31/functions/{FunctionName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunctionConcurrency": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteFunctionConcurrencyRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes a concurrent execution limit from a function.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2017-10-31/functions/{FunctionName}/concurrency",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunctionConcurrencyRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunctionEventInvokeConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteFunctionEventInvokeConfigRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> \n         <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunctionEventInvokeConfigRequest": {
      "type": "structure",
      "members": {
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>A version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteFunctionRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function or version.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:1</code> (with version).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version to delete. You can't delete a version that's referenced by an alias.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteLayerVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteLayerVersionRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid\n      breaking functions, a copy of the version remains in Lambda until no functions refer to it.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteLayerVersionRequest": {
      "type": "structure",
      "members": {
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "VersionNumber": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#DeleteProvisionedConcurrencyConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#DeleteProvisionedConcurrencyConfigRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the provisioned concurrency configuration for a function.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#DeleteProvisionedConcurrencyConfigRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>The version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#Description": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.lambda#DestinationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 350
        },
        "smithy.api#pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)"
      }
    },
    "com.amazonaws.lambda#DestinationConfig": {
      "type": "structure",
      "members": {
        "OnSuccess": {
          "target": "com.amazonaws.lambda#OnSuccess",
          "traits": {
            "smithy.api#documentation": "<p>The destination configuration for successful invocations.</p>"
          }
        },
        "OnFailure": {
          "target": "com.amazonaws.lambda#OnFailure",
          "traits": {
            "smithy.api#documentation": "<p>The destination configuration for failed invocations.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration object that specifies the destination of an event after Lambda processes it.</p>"
      }
    },
    "com.amazonaws.lambda#EC2AccessDeniedException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Need additional permissions to configure VPC settings.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#EC2ThrottledException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Lambda was throttled by Amazon EC2 during Lambda function initialization using the execution role provided\n      for the Lambda function.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#EC2UnexpectedException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "EC2ErrorCode": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Lambda received an unexpected EC2 client exception while setting up for the Lambda function.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#EFSIOException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An error occured when reading from or writing to a connected file system.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 410
      }
    },
    "com.amazonaws.lambda#EFSMountConnectivityException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function couldn't make a network connection to the configured file system.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 408
      }
    },
    "com.amazonaws.lambda#EFSMountFailureException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function couldn't mount the configured file system due to a permission or configuration issue.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.lambda#EFSMountTimeoutException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function was able to make a network connection to the configured file system, but the mount operation\n      timed out.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 408
      }
    },
    "com.amazonaws.lambda#ENILimitReachedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Lambda was not able to create an elastic network interface in the VPC, specified as part of Lambda\n      function configuration, because the limit for network interfaces has been reached.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#Enabled": {
      "type": "boolean",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.lambda#Environment": {
      "type": "structure",
      "members": {
        "Variables": {
          "target": "com.amazonaws.lambda#EnvironmentVariables",
          "traits": {
            "smithy.api#documentation": "<p>Environment variable key-value pairs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A function's environment variable settings.</p>"
      }
    },
    "com.amazonaws.lambda#EnvironmentError": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The error message.</p>"
          }
        },
        "ErrorCode": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The error code.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Error messages for environment variables that couldn't be applied.</p>"
      }
    },
    "com.amazonaws.lambda#EnvironmentResponse": {
      "type": "structure",
      "members": {
        "Variables": {
          "target": "com.amazonaws.lambda#EnvironmentVariables",
          "traits": {
            "smithy.api#documentation": "<p>Environment variable key-value pairs.</p>"
          }
        },
        "Error": {
          "target": "com.amazonaws.lambda#EnvironmentError",
          "traits": {
            "smithy.api#documentation": "<p>Error messages for environment variables that couldn't be applied.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The results of an operation to update or read environment variables. If the operation is successful, the\n      response contains the environment variables. If it failed, the response contains details about the error.</p>"
      }
    },
    "com.amazonaws.lambda#EnvironmentVariableName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "[a-zA-Z]([a-zA-Z0-9_])+",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lambda#EnvironmentVariableValue": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lambda#EnvironmentVariables": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lambda#EnvironmentVariableName"
      },
      "value": {
        "target": "com.amazonaws.lambda#EnvironmentVariableValue"
      },
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lambda#EventSourceMappingConfiguration": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The state of the event source mapping. It can be one of the following: <code>Creating</code>,\n        <code>Enabling</code>, <code>Enabled</code>, <code>Disabling</code>, <code>Disabled</code>,\n        <code>Updating</code>, or <code>Deleting</code>.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>"
          }
        },
        "MaximumBatchingWindowInSeconds": {
          "target": "com.amazonaws.lambda#MaximumBatchingWindowInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum amount of time to gather records before invoking the function, in seconds.</p>"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttemptsEventSourceMapping",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "BatchSize": {
          "target": "com.amazonaws.lambda#BatchSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items to retrieve in a single batch.</p>"
          }
        },
        "LastProcessingResult": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The result of the last AWS Lambda invocation of your Lambda function.</p>"
          }
        },
        "ParallelizationFactor": {
          "target": "com.amazonaws.lambda#ParallelizationFactor",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The number of batches to process from each shard concurrently.</p>"
          }
        },
        "BisectBatchOnFunctionError": {
          "target": "com.amazonaws.lambda#BisectBatchOnFunctionError",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) If the function returns an error, split the batch in two and retry.</p>"
          }
        },
        "StateTransitionReason": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the last change to the event source mapping was made by a user, or by the Lambda\n      service.</p>"
          }
        },
        "MaximumRecordAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumRecordAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum age of a record that Lambda sends to a function for processing.</p>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lambda#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date that the event source mapping was last updated, or its state changed.</p>"
          }
        },
        "FunctionArn": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Lambda function.</p>"
          }
        },
        "EventSourceArn": {
          "target": "com.amazonaws.lambda#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p>"
          }
        },
        "UUID": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event source mapping.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A mapping between an AWS resource and an AWS Lambda function. See <a>CreateEventSourceMapping</a>\n      for details.</p>"
      }
    },
    "com.amazonaws.lambda#EventSourceMappingsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#EventSourceMappingConfiguration"
      }
    },
    "com.amazonaws.lambda#EventSourcePosition": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TRIM_HORIZON",
            "name": "TRIM_HORIZON"
          },
          {
            "value": "LATEST",
            "name": "LATEST"
          },
          {
            "value": "AT_TIMESTAMP",
            "name": "AT_TIMESTAMP"
          }
        ]
      }
    },
    "com.amazonaws.lambda#EventSourceToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "[a-zA-Z0-9._\\-]+"
      }
    },
    "com.amazonaws.lambda#FileSystemArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        },
        "smithy.api#pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}"
      }
    },
    "com.amazonaws.lambda#FileSystemConfig": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.lambda#FileSystemArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>",
            "smithy.api#required": {}
          }
        },
        "LocalMountPath": {
          "target": "com.amazonaws.lambda#LocalMountPath",
          "traits": {
            "smithy.api#documentation": "<p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the connection between a Lambda function and an Amazon EFS file system.</p>"
      }
    },
    "com.amazonaws.lambda#FileSystemConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#FileSystemConfig"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.lambda#FunctionArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
      }
    },
    "com.amazonaws.lambda#FunctionCode": {
      "type": "structure",
      "members": {
        "S3ObjectVersion": {
          "target": "com.amazonaws.lambda#S3ObjectVersion",
          "traits": {
            "smithy.api#documentation": "<p>For versioned objects, the version of the deployment package object to use.</p>"
          }
        },
        "S3Bucket": {
          "target": "com.amazonaws.lambda#S3Bucket",
          "traits": {
            "smithy.api#documentation": "<p>An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.</p>"
          }
        },
        "S3Key": {
          "target": "com.amazonaws.lambda#S3Key",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 key of the deployment package.</p>"
          }
        },
        "ZipFile": {
          "target": "com.amazonaws.lambda#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for\n  you.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment\n      package directly.</p>"
      }
    },
    "com.amazonaws.lambda#FunctionCodeLocation": {
      "type": "structure",
      "members": {
        "Location": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A presigned URL that you can use to download the deployment package.</p>"
          }
        },
        "RepositoryType": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The service that's hosting the file.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a function's deployment package.</p>"
      }
    },
    "com.amazonaws.lambda#FunctionConfiguration": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the function.</p>"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The latest updated revision of the function or alias.</p>"
          }
        },
        "MasterArn": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>For Lambda@Edge functions, the ARN of the master function.</p>"
          }
        },
        "LastUpdateStatus": {
          "target": "com.amazonaws.lambda#LastUpdateStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the last update that was performed on the function. This is first set to <code>Successful</code>\n      after function creation completes.</p>"
          }
        },
        "Layers": {
          "target": "com.amazonaws.lambda#LayersReferenceList",
          "traits": {
            "smithy.api#documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">\n      layers</a>.</p>"
          }
        },
        "FileSystemConfigs": {
          "target": "com.amazonaws.lambda#FileSystemConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Connection settings for an Amazon EFS file system.</p>"
          }
        },
        "VpcConfig": {
          "target": "com.amazonaws.lambda#VpcConfigResponse",
          "traits": {
            "smithy.api#documentation": "<p>The function's networking configuration.</p>"
          }
        },
        "Runtime": {
          "target": "com.amazonaws.lambda#Runtime",
          "traits": {
            "smithy.api#documentation": "<p>The runtime environment for the Lambda function.</p>"
          }
        },
        "CodeSha256": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The SHA256 hash of the function's deployment package.</p>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the function was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>"
          }
        },
        "MemorySize": {
          "target": "com.amazonaws.lambda#MemorySize",
          "traits": {
            "smithy.api#documentation": "<p>The memory that's allocated to the function.</p>"
          }
        },
        "Version": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>The version of the Lambda function.</p>"
          }
        },
        "Timeout": {
          "target": "com.amazonaws.lambda#Timeout",
          "traits": {
            "smithy.api#documentation": "<p>The amount of time in seconds that Lambda allows a function to run before stopping it.</p>"
          }
        },
        "CodeSize": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The size of the function's deployment package, in bytes.</p>"
          }
        },
        "FunctionArn": {
          "target": "com.amazonaws.lambda#NameSpacedFunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The function's Amazon Resource Name (ARN).</p>"
          }
        },
        "Environment": {
          "target": "com.amazonaws.lambda#EnvironmentResponse",
          "traits": {
            "smithy.api#documentation": "<p>The function's environment variables.</p>"
          }
        },
        "LastUpdateStatusReason": {
          "target": "com.amazonaws.lambda#LastUpdateStatusReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the last update that was performed on the function.</p>"
          }
        },
        "Handler": {
          "target": "com.amazonaws.lambda#Handler",
          "traits": {
            "smithy.api#documentation": "<p>The function that Lambda calls to begin executing your function.</p>"
          }
        },
        "TracingConfig": {
          "target": "com.amazonaws.lambda#TracingConfigResponse",
          "traits": {
            "smithy.api#documentation": "<p>The function's AWS X-Ray tracing configuration.</p>"
          }
        },
        "StateReasonCode": {
          "target": "com.amazonaws.lambda#StateReasonCode",
          "traits": {
            "smithy.api#documentation": "<p>The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or\n      modify the function.</p>"
          }
        },
        "LastUpdateStatusReasonCode": {
          "target": "com.amazonaws.lambda#LastUpdateStatusReasonCode",
          "traits": {
            "smithy.api#documentation": "<p>The reason code for the last update that was performed on the function.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>The function's description.</p>"
          }
        },
        "Role": {
          "target": "com.amazonaws.lambda#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The function's execution role.</p>"
          }
        },
        "KMSKeyArn": {
          "target": "com.amazonaws.lambda#KMSKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've\n      configured a customer managed CMK.</p>"
          }
        },
        "DeadLetterConfig": {
          "target": "com.amazonaws.lambda#DeadLetterConfig",
          "traits": {
            "smithy.api#documentation": "<p>The function's dead letter queue.</p>"
          }
        },
        "StateReason": {
          "target": "com.amazonaws.lambda#StateReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the function's current state.</p>"
          }
        },
        "State": {
          "target": "com.amazonaws.lambda#State",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by\n      invoking it.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a function's configuration.</p>"
      }
    },
    "com.amazonaws.lambda#FunctionEventInvokeConfig": {
      "type": "structure",
      "members": {
        "MaximumEventAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumEventAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>A destination for events after they have been sent to a function for processing.</p>\n         <p class=\"title\">\n            <b>Destinations</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Queue</b> - The ARN of an SQS queue.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Topic</b> - The ARN of an SNS topic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p>\n            </li>\n         </ul>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lambda#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the configuration was last updated.</p>"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttempts",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "FunctionArn": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the function.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#FunctionEventInvokeConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#FunctionEventInvokeConfig"
      }
    },
    "com.amazonaws.lambda#FunctionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      }
    },
    "com.amazonaws.lambda#FunctionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 140
        },
        "smithy.api#pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
      }
    },
    "com.amazonaws.lambda#FunctionVersion": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ALL",
            "name": "ALL"
          }
        ]
      }
    },
    "com.amazonaws.lambda#GetAccountSettings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetAccountSettingsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetAccountSettingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an AWS Region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2016-08-19/account-settings",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetAccountSettingsRequest": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.lambda#GetAccountSettingsResponse": {
      "type": "structure",
      "members": {
        "AccountLimit": {
          "target": "com.amazonaws.lambda#AccountLimit",
          "traits": {
            "smithy.api#documentation": "<p>Limits that are related to concurrency and code storage.</p>"
          }
        },
        "AccountUsage": {
          "target": "com.amazonaws.lambda#AccountUsage",
          "traits": {
            "smithy.api#documentation": "<p>The number of functions and amount of storage in use.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetAlias": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetAliasRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#AliasConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetAliasRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lambda#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alias.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetEventSourceMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetEventSourceMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#EventSourceMappingConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns details about an event source mapping. You can get the identifier of a mapping from the output of\n        <a>ListEventSourceMappings</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/event-source-mappings/{UUID}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetEventSourceMappingRequest": {
      "type": "structure",
      "members": {
        "UUID": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event source mapping.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetFunctionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetFunctionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about the function or function version, with a link to download the deployment package\n      that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are\n      returned.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionConcurrency": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetFunctionConcurrencyRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetFunctionConcurrencyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a\n      function, use <a>PutFunctionConcurrency</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2019-09-30/functions/{FunctionName}/concurrency",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionConcurrencyRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionConcurrencyResponse": {
      "type": "structure",
      "members": {
        "ReservedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#ReservedConcurrentExecutions",
          "traits": {
            "smithy.api#documentation": "<p>The number of simultaneous executions that are reserved for the function.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetFunctionConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that\n      can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p>\n         <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}/configuration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionConfigurationRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to get details about a published version of the function.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionEventInvokeConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetFunctionEventInvokeConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionEventInvokeConfig"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> \n         <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionEventInvokeConfigRequest": {
      "type": "structure",
      "members": {
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>A version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionRequest": {
      "type": "structure",
      "members": {
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to get details about a published version of the function.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetFunctionResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.lambda#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>.</p>"
          }
        },
        "Code": {
          "target": "com.amazonaws.lambda#FunctionCodeLocation",
          "traits": {
            "smithy.api#documentation": "<p>The deployment package of the function or version.</p>"
          }
        },
        "Concurrency": {
          "target": "com.amazonaws.lambda#Concurrency",
          "traits": {
            "smithy.api#documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">reserved\n        concurrency</a>.</p>"
          }
        },
        "Configuration": {
          "target": "com.amazonaws.lambda#FunctionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the function or version.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetLayerVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetLayerVersionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>, with a link to download the layer archive\n        that's valid for 10 minutes.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionByArn": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetLayerVersionByArnRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetLayerVersionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>, with a link to download the layer archive\n        that's valid for 10 minutes.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2018-10-31/layers?find=LayerVersion",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionByArnRequest": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.lambda#LayerVersionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer version.</p>",
            "smithy.api#httpQuery": "Arn",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetLayerVersionPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetLayerVersionPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. For more information, see <a>AddLayerVersionPermission</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionPolicyRequest": {
      "type": "structure",
      "members": {
        "VersionNumber": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionPolicyResponse": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The policy document.</p>"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for the current revision of the policy.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionRequest": {
      "type": "structure",
      "members": {
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "VersionNumber": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetLayerVersionResponse": {
      "type": "structure",
      "members": {
        "LicenseInfo": {
          "target": "com.amazonaws.lambda#LicenseInfo",
          "traits": {
            "smithy.api#documentation": "<p>The layer's software license.</p>"
          }
        },
        "CompatibleRuntimes": {
          "target": "com.amazonaws.lambda#CompatibleRuntimes",
          "traits": {
            "smithy.api#documentation": "<p>The layer's compatible runtimes.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>The description of the version.</p>"
          }
        },
        "LayerVersionArn": {
          "target": "com.amazonaws.lambda#LayerVersionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer version.</p>"
          }
        },
        "Version": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>"
          }
        },
        "Content": {
          "target": "com.amazonaws.lambda#LayerVersionContentOutput",
          "traits": {
            "smithy.api#documentation": "<p>Details about the layer version.</p>"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date that the layer version was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>"
          }
        },
        "LayerArn": {
          "target": "com.amazonaws.lambda#LayerArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}/policy",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetPolicyRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to get the policy for that resource.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetPolicyResponse": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The resource-based policy.</p>"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for the current revision of the policy.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#GetProvisionedConcurrencyConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#GetProvisionedConcurrencyConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#GetProvisionedConcurrencyConfigResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ProvisionedConcurrencyConfigNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the provisioned concurrency configuration for a function's alias or version.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#GetProvisionedConcurrencyConfigRequest": {
      "type": "structure",
      "members": {
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>The version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier",
            "smithy.api#required": {}
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#GetProvisionedConcurrencyConfigResponse": {
      "type": "structure",
      "members": {
        "RequestedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#PositiveInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency requested.</p>"
          }
        },
        "AvailableProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency available.</p>"
          }
        },
        "StatusReason": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.lambda#ProvisionedConcurrencyStatusEnum",
          "traits": {
            "smithy.api#documentation": "<p>The status of the allocation process.</p>"
          }
        },
        "AllocatedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency allocated.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#Handler": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "[^\\s]+"
      }
    },
    "com.amazonaws.lambda#Integer": {
      "type": "integer"
    },
    "com.amazonaws.lambda#InvalidParameterValueException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception message.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>One of the parameters in the request is invalid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lambda#InvalidRequestContentException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception message.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request body could not be parsed as JSON.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lambda#InvalidRuntimeException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The runtime or runtime version specified is not supported.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#InvalidSecurityGroupIDException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Security Group ID provided in the Lambda function VPC configuration is invalid.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#InvalidSubnetIDException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Subnet ID provided in the Lambda function VPC configuration is invalid.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#InvalidZipFileException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Lambda could not unzip the deployment package.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#InvocationRequest": {
      "type": "structure",
      "members": {
        "InvocationType": {
          "target": "com.amazonaws.lambda#InvocationType",
          "traits": {
            "smithy.api#documentation": "<p>Choose from the following options.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>RequestResponse</code> (default) - Invoke the function synchronously. Keep the connection open until\n          the function returns a response or times out. The API response includes the function response and additional\n          data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Event</code> - Invoke the function asynchronously. Send events that fail multiple times to the\n          function's dead-letter queue (if it's configured). The API response only includes a status code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DryRun</code> - Validate parameter values and verify that the user or role has permission to invoke\n          the function.</p>\n            </li>\n         </ul>",
            "smithy.api#httpHeader": "X-Amz-Invocation-Type"
          }
        },
        "LogType": {
          "target": "com.amazonaws.lambda#LogType",
          "traits": {
            "smithy.api#documentation": "<p>Set to <code>Tail</code> to include the execution log in the response.</p>",
            "smithy.api#httpHeader": "X-Amz-Log-Type"
          }
        },
        "Payload": {
          "target": "com.amazonaws.lambda#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The JSON that you want to provide to your Lambda function as input.</p>",
            "smithy.api#httpPayload": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to invoke a published version of the function.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "ClientContext": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context\n      object.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Context"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#InvocationResponse": {
      "type": "structure",
      "members": {
        "LogResult": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The last 4 KB of the execution log, which is base64 encoded.</p>",
            "smithy.api#httpHeader": "X-Amz-Log-Result"
          }
        },
        "Payload": {
          "target": "com.amazonaws.lambda#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The response from the function, or an error object.</p>",
            "smithy.api#httpPayload": {}
          }
        },
        "ExecutedVersion": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>The version of the function that executed. When you invoke a function with an alias, this indicates which\n      version the alias resolved to.</p>",
            "smithy.api#httpHeader": "X-Amz-Executed-Version"
          }
        },
        "FunctionError": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>If present, indicates that an error occurred during function execution. Details about the error are included\n      in the response payload.</p>",
            "smithy.api#httpHeader": "X-Amz-Function-Error"
          }
        }
      }
    },
    "com.amazonaws.lambda#InvocationType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Event",
            "name": "Event"
          },
          {
            "value": "RequestResponse",
            "name": "RequestResponse"
          },
          {
            "value": "DryRun",
            "name": "DryRun"
          }
        ]
      }
    },
    "com.amazonaws.lambda#Invoke": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#InvocationRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#InvocationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#EC2AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lambda#EC2ThrottledException"
        },
        {
          "target": "com.amazonaws.lambda#EC2UnexpectedException"
        },
        {
          "target": "com.amazonaws.lambda#EFSIOException"
        },
        {
          "target": "com.amazonaws.lambda#EFSMountConnectivityException"
        },
        {
          "target": "com.amazonaws.lambda#EFSMountFailureException"
        },
        {
          "target": "com.amazonaws.lambda#EFSMountTimeoutException"
        },
        {
          "target": "com.amazonaws.lambda#ENILimitReachedException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidRequestContentException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidRuntimeException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidSecurityGroupIDException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidSubnetIDException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidZipFileException"
        },
        {
          "target": "com.amazonaws.lambda#KMSAccessDeniedException"
        },
        {
          "target": "com.amazonaws.lambda#KMSDisabledException"
        },
        {
          "target": "com.amazonaws.lambda#KMSInvalidStateException"
        },
        {
          "target": "com.amazonaws.lambda#KMSNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#RequestTooLargeException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotReadyException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#SubnetIPAddressLimitReachedException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.lambda#UnsupportedMediaTypeException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or\n      asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p>\n      \n         <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>,\n      details about the function response, including errors, are included in the response body and headers. For either\n      invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p>\n      \n         <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type,\n      client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an\n      error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p>\n      \n         <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>,\n      Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity\n      to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple\n      times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p>\n      \n         <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that\n      prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration.\n      For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to\n      exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or\n      function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p>\n      \n         <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it\n      waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long\n      connections with timeout or keep-alive settings.</p>\n      \n         <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/functions/{FunctionName}/invocations",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#InvokeAsync": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#InvokeAsyncRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#InvokeAsyncResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidRequestContentException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidRuntimeException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {},
        "smithy.api#documentation": "<important>\n            <p>For asynchronous function invocation, use <a>Invoke</a>.</p>\n         </important>\n         <p>Invokes a function asynchronously.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2014-11-13/functions/{FunctionName}/invoke-async",
          "code": 202
        }
      }
    },
    "com.amazonaws.lambda#InvokeAsyncRequest": {
      "type": "structure",
      "members": {
        "InvokeArgs": {
          "target": "com.amazonaws.lambda#BlobStream",
          "traits": {
            "smithy.api#documentation": "<p>The JSON that you want to provide to your Lambda function as input.</p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {}
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {}
      }
    },
    "com.amazonaws.lambda#InvokeAsyncResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#deprecated": {},
        "smithy.api#documentation": "<p>A success response (<code>202 Accepted</code>) indicates that the request is queued for invocation. </p>"
      }
    },
    "com.amazonaws.lambda#KMSAccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Lambda was unable to decrypt the environment variables because KMS access was denied. Check the Lambda\n      function's KMS permissions.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#KMSDisabledException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key used is disabled. Check the Lambda\n      function's KMS key settings.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#KMSInvalidStateException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key used is in an invalid state for\n      Decrypt. Check the function's KMS key settings.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#KMSKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
      }
    },
    "com.amazonaws.lambda#KMSNotFoundException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key was not found. Check the function's\n      KMS key settings. </p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#LastUpdateStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Successful",
            "name": "Successful"
          },
          {
            "value": "Failed",
            "name": "Failed"
          },
          {
            "value": "InProgress",
            "name": "InProgress"
          }
        ]
      }
    },
    "com.amazonaws.lambda#LastUpdateStatusReason": {
      "type": "string"
    },
    "com.amazonaws.lambda#LastUpdateStatusReasonCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "EniLimitExceeded",
            "name": "EniLimitExceeded"
          },
          {
            "value": "InsufficientRolePermissions",
            "name": "InsufficientRolePermissions"
          },
          {
            "value": "InvalidConfiguration",
            "name": "InvalidConfiguration"
          },
          {
            "value": "InternalError",
            "name": "InternalError"
          },
          {
            "value": "SubnetOutOfIPAddresses",
            "name": "SubnetOutOfIPAddresses"
          },
          {
            "value": "InvalidSubnet",
            "name": "InvalidSubnet"
          },
          {
            "value": "InvalidSecurityGroup",
            "name": "InvalidSecurityGroup"
          }
        ]
      }
    },
    "com.amazonaws.lambda#Layer": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.lambda#LayerVersionArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the function layer.</p>"
          }
        },
        "CodeSize": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The size of the layer archive in bytes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>.</p>"
      }
    },
    "com.amazonaws.lambda#LayerArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 140
        },
        "smithy.api#pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+"
      }
    },
    "com.amazonaws.lambda#LayerList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#LayerVersionArn"
      }
    },
    "com.amazonaws.lambda#LayerName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 140
        },
        "smithy.api#pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+"
      }
    },
    "com.amazonaws.lambda#LayerPermissionAllowedAction": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "lambda:GetLayerVersion"
      }
    },
    "com.amazonaws.lambda#LayerPermissionAllowedPrincipal": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "\\d{12}|\\*|arn:(aws[a-zA-Z-]*):iam::\\d{12}:root"
      }
    },
    "com.amazonaws.lambda#LayerVersionArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 140
        },
        "smithy.api#pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+"
      }
    },
    "com.amazonaws.lambda#LayerVersionContentInput": {
      "type": "structure",
      "members": {
        "S3Bucket": {
          "target": "com.amazonaws.lambda#S3Bucket",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 bucket of the layer archive.</p>"
          }
        },
        "S3ObjectVersion": {
          "target": "com.amazonaws.lambda#S3ObjectVersion",
          "traits": {
            "smithy.api#documentation": "<p>For versioned objects, the version of the layer archive object to use.</p>"
          }
        },
        "S3Key": {
          "target": "com.amazonaws.lambda#S3Key",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 key of the layer archive.</p>"
          }
        },
        "ZipFile": {
          "target": "com.amazonaws.lambda#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded contents of the layer archive. AWS SDK and AWS CLI clients handle the encoding for\n      you.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A ZIP archive that contains the contents of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. You can specify either an Amazon S3 location,\n      or upload a layer archive directly.</p>"
      }
    },
    "com.amazonaws.lambda#LayerVersionContentOutput": {
      "type": "structure",
      "members": {
        "CodeSha256": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The SHA-256 hash of the layer archive.</p>"
          }
        },
        "CodeSize": {
          "target": "com.amazonaws.lambda#Long",
          "traits": {
            "smithy.api#documentation": "<p>The size of the layer archive in bytes.</p>"
          }
        },
        "Location": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A link to the layer archive in Amazon S3 that is valid for 10 minutes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>.</p>"
      }
    },
    "com.amazonaws.lambda#LayerVersionNumber": {
      "type": "long"
    },
    "com.amazonaws.lambda#LayerVersionsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#LayerVersionsListItem"
      }
    },
    "com.amazonaws.lambda#LayerVersionsListItem": {
      "type": "structure",
      "members": {
        "CreatedDate": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date that the version was created, in ISO 8601 format. For example, <code>2018-11-27T15:10:45.123+0000</code>.</p>"
          }
        },
        "Version": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>"
          }
        },
        "LicenseInfo": {
          "target": "com.amazonaws.lambda#LicenseInfo",
          "traits": {
            "smithy.api#documentation": "<p>The layer's open-source license.</p>"
          }
        },
        "CompatibleRuntimes": {
          "target": "com.amazonaws.lambda#CompatibleRuntimes",
          "traits": {
            "smithy.api#documentation": "<p>The layer's compatible runtimes.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>The description of the version.</p>"
          }
        },
        "LayerVersionArn": {
          "target": "com.amazonaws.lambda#LayerVersionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer version.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>.</p>"
      }
    },
    "com.amazonaws.lambda#LayersList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#LayersListItem"
      }
    },
    "com.amazonaws.lambda#LayersListItem": {
      "type": "structure",
      "members": {
        "LayerArn": {
          "target": "com.amazonaws.lambda#LayerArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the function layer.</p>"
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the layer.</p>"
          }
        },
        "LatestMatchingVersion": {
          "target": "com.amazonaws.lambda#LayerVersionsListItem",
          "traits": {
            "smithy.api#documentation": "<p>The newest version of the layer.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>.</p>"
      }
    },
    "com.amazonaws.lambda#LayersReferenceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#Layer"
      }
    },
    "com.amazonaws.lambda#LicenseInfo": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 512
        }
      }
    },
    "com.amazonaws.lambda#ListAliases": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListAliasesRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListAliasesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a>\n      for a Lambda function.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}/aliases",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "Aliases",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListAliasesRequest": {
      "type": "structure",
      "members": {
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxListItems",
          "traits": {
            "smithy.api#documentation": "<p>Limit the number of aliases returned.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "FunctionVersion": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>Specify a function version to only list aliases that invoke that version.</p>",
            "smithy.api#httpQuery": "FunctionVersion"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListAliasesResponse": {
      "type": "structure",
      "members": {
        "Aliases": {
          "target": "com.amazonaws.lambda#AliasList",
          "traits": {
            "smithy.api#documentation": "<p>A list of aliases.</p>"
          }
        },
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's included if more results are available.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListEventSourceMappings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListEventSourceMappingsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListEventSourceMappingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a\n      single event source.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/event-source-mappings",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "EventSourceMappings",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListEventSourceMappingsRequest": {
      "type": "structure",
      "members": {
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token returned by a previous call.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of event source mappings to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64\n      characters in length.</p>",
            "smithy.api#httpQuery": "FunctionName"
          }
        },
        "EventSourceArn": {
          "target": "com.amazonaws.lambda#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "EventSourceArn"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListEventSourceMappingsResponse": {
      "type": "structure",
      "members": {
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's returned when the response doesn't contain all event source mappings.</p>"
          }
        },
        "EventSourceMappings": {
          "target": "com.amazonaws.lambda#EventSourceMappingsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of event source mappings.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListFunctionEventInvokeConfigs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListFunctionEventInvokeConfigsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListFunctionEventInvokeConfigsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of configurations for asynchronous invocation for a function.</p> \n         <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2019-09-25/functions/{FunctionName}/event-invoke-config/list",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "FunctionEventInvokeConfigs",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListFunctionEventInvokeConfigsRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxFunctionEventInvokeConfigListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of configurations to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListFunctionEventInvokeConfigsResponse": {
      "type": "structure",
      "members": {
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's included if more results are available.</p>"
          }
        },
        "FunctionEventInvokeConfigs": {
          "target": "com.amazonaws.lambda#FunctionEventInvokeConfigList",
          "traits": {
            "smithy.api#documentation": "<p>A list of configurations.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListFunctions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListFunctionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListFunctionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50\n      functions per call.</p>\n         <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in\n      addition to the unpublished version. To get more information about a function or version, use <a>GetFunction</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "Functions",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListFunctionsRequest": {
      "type": "structure",
      "members": {
        "FunctionVersion": {
          "target": "com.amazonaws.lambda#FunctionVersion",
          "traits": {
            "smithy.api#documentation": "<p>Set to <code>ALL</code> to include entries for all published versions of each function.</p>",
            "smithy.api#httpQuery": "FunctionVersion"
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of functions to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "MasterRegion": {
          "target": "com.amazonaws.lambda#MasterRegion",
          "traits": {
            "smithy.api#documentation": "<p>For Lambda@Edge functions, the AWS Region of the master function. For example, <code>us-east-1</code> filters\n      the list of functions to only include Lambda@Edge functions replicated from a master function in US East (N.\n      Virginia). If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.</p>",
            "smithy.api#httpQuery": "MasterRegion"
          }
        },
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListFunctionsResponse": {
      "type": "structure",
      "members": {
        "Functions": {
          "target": "com.amazonaws.lambda#FunctionList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Lambda functions.</p>"
          }
        },
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of Lambda functions.</p>"
      }
    },
    "com.amazonaws.lambda#ListLayerVersions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListLayerVersionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListLayerVersionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only\n      versions that indicate that they're compatible with that runtime.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2018-10-31/layers/{LayerName}/versions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "LayerVersions",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListLayerVersionsRequest": {
      "type": "structure",
      "members": {
        "CompatibleRuntime": {
          "target": "com.amazonaws.lambda#Runtime",
          "traits": {
            "smithy.api#documentation": "<p>A runtime identifier. For example, <code>go1.x</code>.</p>",
            "smithy.api#httpQuery": "CompatibleRuntime"
          }
        },
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token returned by a previous call.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxLayerListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of versions to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListLayerVersionsResponse": {
      "type": "structure",
      "members": {
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token returned when the response doesn't contain all versions.</p>"
          }
        },
        "LayerVersions": {
          "target": "com.amazonaws.lambda#LayerVersionsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of versions.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListLayers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListLayersRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListLayersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers\n      that indicate that they're compatible with that runtime.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2018-10-31/layers",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "Layers",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListLayersRequest": {
      "type": "structure",
      "members": {
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxLayerListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of layers to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "CompatibleRuntime": {
          "target": "com.amazonaws.lambda#Runtime",
          "traits": {
            "smithy.api#documentation": "<p>A runtime identifier. For example, <code>go1.x</code>.</p>",
            "smithy.api#httpQuery": "CompatibleRuntime"
          }
        },
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token returned by a previous call.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListLayersResponse": {
      "type": "structure",
      "members": {
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token returned when the response doesn't contain all layers.</p>"
          }
        },
        "Layers": {
          "target": "com.amazonaws.lambda#LayersList",
          "traits": {
            "smithy.api#documentation": "<p>A list of function layers.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListProvisionedConcurrencyConfigs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListProvisionedConcurrencyConfigsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListProvisionedConcurrencyConfigsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of provisioned concurrency configurations for a function.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency?List=ALL",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "ProvisionedConcurrencyConfigs",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListProvisionedConcurrencyConfigsRequest": {
      "type": "structure",
      "members": {
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxProvisionedConcurrencyConfigListItems",
          "traits": {
            "smithy.api#documentation": "<p>Specify a number to limit the number of configurations returned.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#ListProvisionedConcurrencyConfigsResponse": {
      "type": "structure",
      "members": {
        "ProvisionedConcurrencyConfigs": {
          "target": "com.amazonaws.lambda#ProvisionedConcurrencyConfigList",
          "traits": {
            "smithy.api#documentation": "<p>A list of provisioned concurrency configurations.</p>"
          }
        },
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's included if more results are available.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can\n      also view tags with <a>GetFunction</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2017-03-31/tags/{Resource}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#ListTagsRequest": {
      "type": "structure",
      "members": {
        "Resource": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#ListTagsResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.lambda#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The function's tags.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListVersionsByFunction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#ListVersionsByFunctionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#ListVersionsByFunctionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>,\n      with the version-specific configuration of each. Lambda returns up to 50 versions per call.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2015-03-31/functions/{FunctionName}/versions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "Marker",
          "outputToken": "NextMarker",
          "items": "Versions",
          "pageSize": "MaxItems"
        }
      }
    },
    "com.amazonaws.lambda#ListVersionsByFunctionRequest": {
      "type": "structure",
      "members": {
        "Marker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "Marker"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#NamespacedFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxItems": {
          "target": "com.amazonaws.lambda#MaxListItems",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of versions to return.</p>",
            "smithy.api#httpQuery": "MaxItems"
          }
        }
      }
    },
    "com.amazonaws.lambda#ListVersionsByFunctionResponse": {
      "type": "structure",
      "members": {
        "Versions": {
          "target": "com.amazonaws.lambda#FunctionList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Lambda function versions.</p>"
          }
        },
        "NextMarker": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's included if more results are available.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#LocalMountPath": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 160
        },
        "smithy.api#pattern": "^/mnt/[a-zA-Z0-9-_.]+$"
      }
    },
    "com.amazonaws.lambda#LogType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "None",
            "name": "None"
          },
          {
            "value": "Tail",
            "name": "Tail"
          }
        ]
      }
    },
    "com.amazonaws.lambda#Long": {
      "type": "long"
    },
    "com.amazonaws.lambda#MasterRegion": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "ALL|[a-z]{2}(-gov)?-[a-z]+-\\d{1}"
      }
    },
    "com.amazonaws.lambda#MaxFunctionEventInvokeConfigListItems": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.lambda#MaxLayerListItems": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.lambda#MaxListItems": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 10000
        }
      }
    },
    "com.amazonaws.lambda#MaxProvisionedConcurrencyConfigListItems": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.lambda#MaximumBatchingWindowInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0,
          "max": 300
        }
      }
    },
    "com.amazonaws.lambda#MaximumEventAgeInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 60,
          "max": 21600
        }
      }
    },
    "com.amazonaws.lambda#MaximumRecordAgeInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 60,
          "max": 604800
        }
      }
    },
    "com.amazonaws.lambda#MaximumRetryAttempts": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0,
          "max": 2
        }
      }
    },
    "com.amazonaws.lambda#MaximumRetryAttemptsEventSourceMapping": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0,
          "max": 10000
        }
      }
    },
    "com.amazonaws.lambda#MemorySize": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 128,
          "max": 3008
        }
      }
    },
    "com.amazonaws.lambda#NameSpacedFunctionArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_\\.]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
      }
    },
    "com.amazonaws.lambda#NamespacedFunctionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 170
        },
        "smithy.api#pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_\\.]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
      }
    },
    "com.amazonaws.lambda#NamespacedStatementId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "([a-zA-Z0-9-_.]+)"
      }
    },
    "com.amazonaws.lambda#NonNegativeInteger": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.lambda#OnFailure": {
      "type": "structure",
      "members": {
        "Destination": {
          "target": "com.amazonaws.lambda#DestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the destination resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A destination for events that failed processing.</p>"
      }
    },
    "com.amazonaws.lambda#OnSuccess": {
      "type": "structure",
      "members": {
        "Destination": {
          "target": "com.amazonaws.lambda#DestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the destination resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A destination for events that were processed successfully.</p>"
      }
    },
    "com.amazonaws.lambda#OrganizationId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "o-[a-z0-9]{10,32}"
      }
    },
    "com.amazonaws.lambda#ParallelizationFactor": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.lambda#PolicyLengthExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The permissions policy for the resource is too large. <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Learn more</a>\n         </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lambda#PositiveInteger": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.lambda#PreconditionFailedException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception message.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The RevisionId provided does not match the latest RevisionId for the Lambda function or alias. Call the\n        <code>GetFunction</code> or the <code>GetAlias</code> API to retrieve the latest RevisionId for your\n      resource.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 412
      }
    },
    "com.amazonaws.lambda#Principal": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": ".*"
      }
    },
    "com.amazonaws.lambda#ProvisionedConcurrencyConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#ProvisionedConcurrencyConfigListItem"
      }
    },
    "com.amazonaws.lambda#ProvisionedConcurrencyConfigListItem": {
      "type": "structure",
      "members": {
        "LastModified": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>"
          }
        },
        "AllocatedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency allocated.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.lambda#ProvisionedConcurrencyStatusEnum",
          "traits": {
            "smithy.api#documentation": "<p>The status of the allocation process.</p>"
          }
        },
        "AvailableProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency available.</p>"
          }
        },
        "StatusReason": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>"
          }
        },
        "RequestedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#PositiveInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency requested.</p>"
          }
        },
        "FunctionArn": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the alias or version.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the provisioned concurrency configuration for a function alias or version.</p>"
      }
    },
    "com.amazonaws.lambda#ProvisionedConcurrencyConfigNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified configuration does not exist.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.lambda#ProvisionedConcurrencyStatusEnum": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "READY",
            "name": "READY"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.lambda#PublishLayerVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#PublishLayerVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#PublishLayerVersionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#CodeStorageExceededException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same\n      layer name, a new version is created.</p>\n         <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2018-10-31/layers/{LayerName}/versions",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#PublishLayerVersionRequest": {
      "type": "structure",
      "members": {
        "Content": {
          "target": "com.amazonaws.lambda#LayerVersionContentInput",
          "traits": {
            "smithy.api#documentation": "<p>The function layer archive.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>The description of the version.</p>"
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "CompatibleRuntimes": {
          "target": "com.amazonaws.lambda#CompatibleRuntimes",
          "traits": {
            "smithy.api#documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">function\n        runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</p>"
          }
        },
        "LicenseInfo": {
          "target": "com.amazonaws.lambda#LicenseInfo",
          "traits": {
            "smithy.api#documentation": "<p>The layer's software license. It can be any of the following:</p>\n         <ul>\n            <li>\n               <p>An <a href=\"https://spdx.org/licenses/\">SPDX license identifier</a>. For example,\n          <code>MIT</code>.</p>\n            </li>\n            <li>\n               <p>The URL of a license hosted on the internet. For example,\n          <code>https://opensource.org/licenses/MIT</code>.</p>\n            </li>\n            <li>\n               <p>The full text of the license.</p>\n            </li>\n         </ul>"
          }
        }
      }
    },
    "com.amazonaws.lambda#PublishLayerVersionResponse": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>The description of the version.</p>"
          }
        },
        "LayerVersionArn": {
          "target": "com.amazonaws.lambda#LayerVersionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer version.</p>"
          }
        },
        "Version": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date that the layer version was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>"
          }
        },
        "LayerArn": {
          "target": "com.amazonaws.lambda#LayerArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the layer.</p>"
          }
        },
        "Content": {
          "target": "com.amazonaws.lambda#LayerVersionContentOutput",
          "traits": {
            "smithy.api#documentation": "<p>Details about the layer version.</p>"
          }
        },
        "CompatibleRuntimes": {
          "target": "com.amazonaws.lambda#CompatibleRuntimes",
          "traits": {
            "smithy.api#documentation": "<p>The layer's compatible runtimes.</p>"
          }
        },
        "LicenseInfo": {
          "target": "com.amazonaws.lambda#LicenseInfo",
          "traits": {
            "smithy.api#documentation": "<p>The layer's software license.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#PublishVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#PublishVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#CodeStorageExceededException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the\n      current code and configuration of a function. Use versions to create a snapshot of your function code and\n      configuration that doesn't change.</p>\n      \n         <p>AWS Lambda doesn't publish a version if the function's configuration and code haven't changed since the last\n      version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the\n      function before publishing a version.</p>\n      \n         <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2015-03-31/functions/{FunctionName}/versions",
          "code": 201
        }
      }
    },
    "com.amazonaws.lambda#PublishVersionRequest": {
      "type": "structure",
      "members": {
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid\n      publishing a version if the function configuration has changed since you last updated it.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description for the version to override the description in the function configuration.</p>"
          }
        },
        "CodeSha256": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only publish a version if the hash value matches the value that's specified. Use this option to avoid\n      publishing a version if the function code has changed since you last updated it. You can get the hash for the\n      version that you uploaded from the output of <a>UpdateFunctionCode</a>.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#PutFunctionConcurrency": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#PutFunctionConcurrencyRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#Concurrency"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency\n      level.</p>\n         <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished\n      version. Reserving concurrency both ensures that your function has capacity to process the specified number of\n      events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see\n      the current setting for a function.</p>\n         <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency\n      for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for\n      functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2017-10-31/functions/{FunctionName}/concurrency",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#PutFunctionConcurrencyRequest": {
      "type": "structure",
      "members": {
        "ReservedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#ReservedConcurrentExecutions",
          "traits": {
            "smithy.api#documentation": "<p>The number of simultaneous executions to reserve for the function.</p>",
            "smithy.api#required": {}
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#PutFunctionEventInvokeConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#PutFunctionEventInvokeConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionEventInvokeConfig"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous\n        invocation</a> on a function, version, or alias. If a configuration already exists for a function, version,\n      or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without\n      affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p>\n         <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains\n      events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous\n      invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with\n        <a>UpdateFunctionConfiguration</a>.</p>\n         <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events\n      that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a\n      dead-letter queue.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#PutFunctionEventInvokeConfigRequest": {
      "type": "structure",
      "members": {
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>A version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttempts",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>A destination for events after they have been sent to a function for processing.</p>\n         <p class=\"title\">\n            <b>Destinations</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Queue</b> - The ARN of an SQS queue.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Topic</b> - The ARN of an SNS topic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p>\n            </li>\n         </ul>"
          }
        },
        "MaximumEventAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumEventAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#PutProvisionedConcurrencyConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#PutProvisionedConcurrencyConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#PutProvisionedConcurrencyConfigResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a provisioned concurrency configuration to a function's alias or version.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
          "code": 202
        }
      }
    },
    "com.amazonaws.lambda#PutProvisionedConcurrencyConfigRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#PositiveInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency to allocate for the version or alias.</p>",
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>The version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#PutProvisionedConcurrencyConfigResponse": {
      "type": "structure",
      "members": {
        "AvailableProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency available.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.lambda#ProvisionedConcurrencyStatusEnum",
          "traits": {
            "smithy.api#documentation": "<p>The status of the allocation process.</p>"
          }
        },
        "StatusReason": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>"
          }
        },
        "RequestedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#PositiveInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency requested.</p>"
          }
        },
        "AllocatedProvisionedConcurrentExecutions": {
          "target": "com.amazonaws.lambda#NonNegativeInteger",
          "traits": {
            "smithy.api#documentation": "<p>The amount of provisioned concurrency allocated.</p>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lambda#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#Qualifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "(|[a-zA-Z0-9$_-]+)"
      }
    },
    "com.amazonaws.lambda#RemoveLayerVersionPermission": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#RemoveLayerVersionPermissionRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">AWS Lambda\n        layer</a>. For more information, see\n        <a>AddLayerVersionPermission</a>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#RemoveLayerVersionPermissionRequest": {
      "type": "structure",
      "members": {
        "VersionNumber": {
          "target": "com.amazonaws.lambda#LayerVersionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The version number.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "LayerName": {
          "target": "com.amazonaws.lambda#LayerName",
          "traits": {
            "smithy.api#documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StatementId": {
          "target": "com.amazonaws.lambda#StatementId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier that was specified when the statement was added.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a\n      policy that has changed since you last read it.</p>",
            "smithy.api#httpQuery": "RevisionId"
          }
        }
      }
    },
    "com.amazonaws.lambda#RemovePermission": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#RemovePermissionRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Revokes function-use permission from an AWS service or another account. You can get the ID of the statement\n      from the output of <a>GetPolicy</a>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2015-03-31/functions/{FunctionName}/policy/{StatementId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#RemovePermissionRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StatementId": {
          "target": "com.amazonaws.lambda#NamespacedStatementId",
          "traits": {
            "smithy.api#documentation": "<p>Statement ID of the permission to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify a version or alias to remove permissions from a published version of the function.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a\n      policy that has changed since you last read it.</p>",
            "smithy.api#httpQuery": "RevisionId"
          }
        }
      }
    },
    "com.amazonaws.lambda#RequestTooLargeException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request payload exceeded the <code>Invoke</code> request body JSON input limit. For more information, see\n        <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Limits</a>. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 413
      }
    },
    "com.amazonaws.lambda#ReservedConcurrentExecutions": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.lambda#ResourceArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()"
      }
    },
    "com.amazonaws.lambda#ResourceConflictException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception message.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource already exists, or another operation is in progress.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.lambda#ResourceInUseException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation conflicts with the resource's availability. For example, you attempted to update an EventSource\n      Mapping in CREATING, or tried to delete a EventSource mapping currently in the UPDATING state.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lambda#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource specified in the request does not exist.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.lambda#ResourceNotReadyException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception message.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The exception type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function is inactive and its VPC connection is no longer available. Wait for the VPC connection to\n      reestablish and try again.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
      }
    },
    "com.amazonaws.lambda#Runtime": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "nodejs",
            "name": "nodejs"
          },
          {
            "value": "nodejs4.3",
            "name": "nodejs43"
          },
          {
            "value": "nodejs6.10",
            "name": "nodejs610"
          },
          {
            "value": "nodejs8.10",
            "name": "nodejs810"
          },
          {
            "value": "nodejs10.x",
            "name": "nodejs10x"
          },
          {
            "value": "nodejs12.x",
            "name": "nodejs12x"
          },
          {
            "value": "java8",
            "name": "java8"
          },
          {
            "value": "java11",
            "name": "java11"
          },
          {
            "value": "python2.7",
            "name": "python27"
          },
          {
            "value": "python3.6",
            "name": "python36"
          },
          {
            "value": "python3.7",
            "name": "python37"
          },
          {
            "value": "python3.8",
            "name": "python38"
          },
          {
            "value": "dotnetcore1.0",
            "name": "dotnetcore10"
          },
          {
            "value": "dotnetcore2.0",
            "name": "dotnetcore20"
          },
          {
            "value": "dotnetcore2.1",
            "name": "dotnetcore21"
          },
          {
            "value": "dotnetcore3.1",
            "name": "dotnetcore31"
          },
          {
            "value": "nodejs4.3-edge",
            "name": "nodejs43edge"
          },
          {
            "value": "go1.x",
            "name": "go1x"
          },
          {
            "value": "ruby2.5",
            "name": "ruby25"
          },
          {
            "value": "ruby2.7",
            "name": "ruby27"
          },
          {
            "value": "provided",
            "name": "provided"
          }
        ]
      }
    },
    "com.amazonaws.lambda#S3Bucket": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 63
        },
        "smithy.api#pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$"
      }
    },
    "com.amazonaws.lambda#S3Key": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.lambda#S3ObjectVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.lambda#SecurityGroupId": {
      "type": "string"
    },
    "com.amazonaws.lambda#SecurityGroupIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#SecurityGroupId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 5
        }
      }
    },
    "com.amazonaws.lambda#SensitiveString": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lambda#ServiceException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The AWS Lambda service encountered an internal error.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.lambda#SourceOwner": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "\\d{12}"
      }
    },
    "com.amazonaws.lambda#State": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Pending",
            "name": "Pending"
          },
          {
            "value": "Active",
            "name": "Active"
          },
          {
            "value": "Inactive",
            "name": "Inactive"
          },
          {
            "value": "Failed",
            "name": "Failed"
          }
        ]
      }
    },
    "com.amazonaws.lambda#StateReason": {
      "type": "string"
    },
    "com.amazonaws.lambda#StateReasonCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Idle",
            "name": "Idle"
          },
          {
            "value": "Creating",
            "name": "Creating"
          },
          {
            "value": "Restoring",
            "name": "Restoring"
          },
          {
            "value": "EniLimitExceeded",
            "name": "EniLimitExceeded"
          },
          {
            "value": "InsufficientRolePermissions",
            "name": "InsufficientRolePermissions"
          },
          {
            "value": "InvalidConfiguration",
            "name": "InvalidConfiguration"
          },
          {
            "value": "InternalError",
            "name": "InternalError"
          },
          {
            "value": "SubnetOutOfIPAddresses",
            "name": "SubnetOutOfIPAddresses"
          },
          {
            "value": "InvalidSubnet",
            "name": "InvalidSubnet"
          },
          {
            "value": "InvalidSecurityGroup",
            "name": "InvalidSecurityGroup"
          }
        ]
      }
    },
    "com.amazonaws.lambda#StatementId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "([a-zA-Z0-9-_]+)"
      }
    },
    "com.amazonaws.lambda#String": {
      "type": "string"
    },
    "com.amazonaws.lambda#SubnetIPAddressLimitReachedException": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Message": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Lambda was not able to set up VPC access for the Lambda function because one or more configured subnets\n      has no available IP addresses.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 502
      }
    },
    "com.amazonaws.lambda#SubnetId": {
      "type": "string"
    },
    "com.amazonaws.lambda#SubnetIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#SubnetId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 16
        }
      }
    },
    "com.amazonaws.lambda#TagKey": {
      "type": "string"
    },
    "com.amazonaws.lambda#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lambda#TagKey"
      }
    },
    "com.amazonaws.lambda#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#TagResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2017-03-31/tags/{Resource}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#TagResourceRequest": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.lambda#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A list of tags to apply to the function.</p>",
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#TagValue": {
      "type": "string"
    },
    "com.amazonaws.lambda#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lambda#TagKey"
      },
      "value": {
        "target": "com.amazonaws.lambda#TagValue"
      }
    },
    "com.amazonaws.lambda#ThrottleReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ConcurrentInvocationLimitExceeded",
            "name": "ConcurrentInvocationLimitExceeded"
          },
          {
            "value": "FunctionInvocationRateLimitExceeded",
            "name": "FunctionInvocationRateLimitExceeded"
          },
          {
            "value": "ReservedFunctionConcurrentInvocationLimitExceeded",
            "name": "ReservedFunctionConcurrentInvocationLimitExceeded"
          },
          {
            "value": "ReservedFunctionInvocationRateLimitExceeded",
            "name": "ReservedFunctionInvocationRateLimitExceeded"
          },
          {
            "value": "CallerRateLimitExceeded",
            "name": "CallerRateLimitExceeded"
          }
        ]
      }
    },
    "com.amazonaws.lambda#Timeout": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.lambda#Timestamp": {
      "type": "string"
    },
    "com.amazonaws.lambda#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String"
        },
        "retryAfterSeconds": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The number of seconds the caller should wait before retrying.</p>",
            "smithy.api#httpHeader": "Retry-After"
          }
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        },
        "Reason": {
          "target": "com.amazonaws.lambda#ThrottleReason"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request throughput limit was exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.lambda#TracingConfig": {
      "type": "structure",
      "members": {
        "Mode": {
          "target": "com.amazonaws.lambda#TracingMode",
          "traits": {
            "smithy.api#documentation": "<p>The tracing mode.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function's AWS X-Ray tracing configuration. To sample and record incoming requests, set <code>Mode</code>\n      to <code>Active</code>.</p>"
      }
    },
    "com.amazonaws.lambda#TracingConfigResponse": {
      "type": "structure",
      "members": {
        "Mode": {
          "target": "com.amazonaws.lambda#TracingMode",
          "traits": {
            "smithy.api#documentation": "<p>The tracing mode.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The function's AWS X-Ray tracing configuration.</p>"
      }
    },
    "com.amazonaws.lambda#TracingMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Active",
            "name": "Active"
          },
          {
            "value": "PassThrough",
            "name": "PassThrough"
          }
        ]
      }
    },
    "com.amazonaws.lambda#UnreservedConcurrentExecutions": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.lambda#UnsupportedMediaTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.lambda#String"
        },
        "Type": {
          "target": "com.amazonaws.lambda#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The content type of the <code>Invoke</code> request body is not JSON.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 415
      }
    },
    "com.amazonaws.lambda#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UntagResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2017-03-31/tags/{Resource}",
          "code": 204
        }
      }
    },
    "com.amazonaws.lambda#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "TagKeys": {
          "target": "com.amazonaws.lambda#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>A list of tag keys to remove from the function.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lambda#FunctionArn",
          "traits": {
            "smithy.api#documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#UpdateAlias": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UpdateAliasRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#AliasConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#UpdateAliasRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.lambda#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alias.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "FunctionVersion": {
          "target": "com.amazonaws.lambda#Version",
          "traits": {
            "smithy.api#documentation": "<p>The function version that the alias invokes.</p>"
          }
        },
        "RoutingConfig": {
          "target": "com.amazonaws.lambda#AliasRoutingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html#configuring-alias-routing\">routing\n        configuration</a> of the alias.</p>"
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying\n      an alias that has changed since you last read it.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description of the alias.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.lambda#UpdateEventSourceMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UpdateEventSourceMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#EventSourceMappingConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceInUseException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an event source mapping. You can change the function that AWS Lambda invokes, or pause invocation and\n      resume later from the same location.</p>\n         <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p>\n            </li>\n            <li>\n               <p>\n                  <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age.</p>\n            </li>\n            <li>\n               <p>\n                  <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p>\n            </li>\n         </ul>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2015-03-31/event-source-mappings/{UUID}",
          "code": 202
        }
      }
    },
    "com.amazonaws.lambda#UpdateEventSourceMappingRequest": {
      "type": "structure",
      "members": {
        "Enabled": {
          "target": "com.amazonaws.lambda#Enabled",
          "traits": {
            "smithy.api#documentation": "<p>Disables the event source mapping to pause polling and invocation.</p>"
          }
        },
        "MaximumBatchingWindowInSeconds": {
          "target": "com.amazonaws.lambda#MaximumBatchingWindowInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum amount of time to gather records before invoking the function, in seconds.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>"
          }
        },
        "UUID": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event source mapping.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "BatchSize": {
          "target": "com.amazonaws.lambda#BatchSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items to retrieve in a single batch.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon DynamoDB Streams</b> - Default 100. Max 1,000.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Amazon Simple Queue Service</b> - Default 10. Max 10.</p>\n            </li>\n         </ul>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64\n      characters in length.</p>"
          }
        },
        "MaximumRecordAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumRecordAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum age of a record that Lambda sends to a function for processing.</p>"
          }
        },
        "ParallelizationFactor": {
          "target": "com.amazonaws.lambda#ParallelizationFactor",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The number of batches to process from each shard concurrently.</p>"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttemptsEventSourceMapping",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "BisectBatchOnFunctionError": {
          "target": "com.amazonaws.lambda#BisectBatchOnFunctionError",
          "traits": {
            "smithy.api#documentation": "<p>(Streams) If the function returns an error, split the batch in two and retry.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionCode": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UpdateFunctionCodeRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#CodeStorageExceededException"
        },
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a Lambda function's code.</p>\n      \n         <p>The function's code is locked when you publish a version. You can't modify the code of a published version,\n      only the unpublished version.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2015-03-31/functions/{FunctionName}/code",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionCodeRequest": {
      "type": "structure",
      "members": {
        "S3Bucket": {
          "target": "com.amazonaws.lambda#S3Bucket",
          "traits": {
            "smithy.api#documentation": "<p>An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.</p>"
          }
        },
        "S3Key": {
          "target": "com.amazonaws.lambda#S3Key",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 key of the deployment package.</p>"
          }
        },
        "S3ObjectVersion": {
          "target": "com.amazonaws.lambda#S3ObjectVersion",
          "traits": {
            "smithy.api#documentation": "<p>For versioned objects, the version of the deployment package object to use.</p>"
          }
        },
        "ZipFile": {
          "target": "com.amazonaws.lambda#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded contents of the deployment package. AWS SDK and AWS CLI clients handle the encoding for\n      you.</p>"
          }
        },
        "DryRun": {
          "target": "com.amazonaws.lambda#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Set to true to validate the request parameters and access permissions without modifying the function\n      code.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a\n      function that has changed since you last read it.</p>"
          }
        },
        "Publish": {
          "target": "com.amazonaws.lambda#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Set to true to publish a new version of the function after updating the code. This has the same effect as\n      calling <a>PublishVersion</a> separately.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UpdateFunctionConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionConfiguration"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#PreconditionFailedException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceConflictException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Modify the version-specific settings of a Lambda function.</p>\n      \n         <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If\n      your function connects to a VPC, this process can take a minute. During this time, you can't modify the function,\n      but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and\n        <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a>\n      indicate when the update is complete and the function is processing events with the new configuration. For more\n      information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function\n      States</a>.</p>\n      \n         <p>These settings can vary between versions of a function and are locked when you publish a version. You can't\n      modify the configuration of a published version, only the unpublished version.</p>\n      \n         <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions\n      to an account or AWS service, use <a>AddPermission</a>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2015-03-31/functions/{FunctionName}/configuration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionConfigurationRequest": {
      "type": "structure",
      "members": {
        "RevisionId": {
          "target": "com.amazonaws.lambda#String",
          "traits": {
            "smithy.api#documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a\n      function that has changed since you last read it.</p>"
          }
        },
        "KMSKeyArn": {
          "target": "com.amazonaws.lambda#KMSKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment\n      variables. If it's not provided, AWS Lambda uses a default service key.</p>"
          }
        },
        "MemorySize": {
          "target": "com.amazonaws.lambda#MemorySize",
          "traits": {
            "smithy.api#documentation": "<p>The amount of memory that your function has access to. Increasing the function's memory also increases its CPU\n      allocation. The default value is 128 MB. The value must be a multiple of 64 MB.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.lambda#Description",
          "traits": {
            "smithy.api#documentation": "<p>A description of the function.</p>"
          }
        },
        "Layers": {
          "target": "com.amazonaws.lambda#LayerList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a>\n      to add to the function's execution environment. Specify each layer by its ARN, including the version.</p>"
          }
        },
        "Handler": {
          "target": "com.amazonaws.lambda#Handler",
          "traits": {
            "smithy.api#documentation": "<p>The name of the method within your code that Lambda calls to execute your function. The format includes the\n      file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information,\n      see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html\">Programming Model</a>.</p>"
          }
        },
        "TracingConfig": {
          "target": "com.amazonaws.lambda#TracingConfig",
          "traits": {
            "smithy.api#documentation": "<p>Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with AWS\n      X-Ray.</p>"
          }
        },
        "Timeout": {
          "target": "com.amazonaws.lambda#Timeout",
          "traits": {
            "smithy.api#documentation": "<p>The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The\n      maximum allowed value is 900 seconds.</p>"
          }
        },
        "FileSystemConfigs": {
          "target": "com.amazonaws.lambda#FileSystemConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Connection settings for an Amazon EFS file system.</p>"
          }
        },
        "Role": {
          "target": "com.amazonaws.lambda#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the function's execution role.</p>"
          }
        },
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64\n      characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Runtime": {
          "target": "com.amazonaws.lambda#Runtime",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>.</p>"
          }
        },
        "Environment": {
          "target": "com.amazonaws.lambda#Environment",
          "traits": {
            "smithy.api#documentation": "<p>Environment variables that are accessible from function code during execution.</p>"
          }
        },
        "DeadLetterConfig": {
          "target": "com.amazonaws.lambda#DeadLetterConfig",
          "traits": {
            "smithy.api#documentation": "<p>A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events\n      when they fail processing. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">Dead Letter Queues</a>.</p>"
          }
        },
        "VpcConfig": {
          "target": "com.amazonaws.lambda#VpcConfig",
          "traits": {
            "smithy.api#documentation": "<p>For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.\n      When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more\n      information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>"
          }
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionEventInvokeConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lambda#UpdateFunctionEventInvokeConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.lambda#FunctionEventInvokeConfig"
      },
      "errors": [
        {
          "target": "com.amazonaws.lambda#InvalidParameterValueException"
        },
        {
          "target": "com.amazonaws.lambda#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.lambda#ServiceException"
        },
        {
          "target": "com.amazonaws.lambda#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> \n         <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
          "code": 200
        }
      }
    },
    "com.amazonaws.lambda#UpdateFunctionEventInvokeConfigRequest": {
      "type": "structure",
      "members": {
        "FunctionName": {
          "target": "com.amazonaws.lambda#FunctionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Lambda function, version, or alias.</p>\n         <p class=\"title\">\n            <b>Name formats</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>\n            </li>\n            <li>\n               <p>\n                  <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>\n            </li>\n         </ul>\n         <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.\n      If you specify only the function name, it is limited to 64 characters in length.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaximumEventAgeInSeconds": {
          "target": "com.amazonaws.lambda#MaximumEventAgeInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>"
          }
        },
        "Qualifier": {
          "target": "com.amazonaws.lambda#Qualifier",
          "traits": {
            "smithy.api#documentation": "<p>A version number or alias name.</p>",
            "smithy.api#httpQuery": "Qualifier"
          }
        },
        "MaximumRetryAttempts": {
          "target": "com.amazonaws.lambda#MaximumRetryAttempts",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of times to retry when the function returns an error.</p>"
          }
        },
        "DestinationConfig": {
          "target": "com.amazonaws.lambda#DestinationConfig",
          "traits": {
            "smithy.api#documentation": "<p>A destination for events after they have been sent to a function for processing.</p>\n         <p class=\"title\">\n            <b>Destinations</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Queue</b> - The ARN of an SQS queue.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Topic</b> - The ARN of an SNS topic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p>\n            </li>\n         </ul>"
          }
        }
      }
    },
    "com.amazonaws.lambda#Version": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "(\\$LATEST|[0-9]+)"
      }
    },
    "com.amazonaws.lambda#VpcConfig": {
      "type": "structure",
      "members": {
        "SubnetIds": {
          "target": "com.amazonaws.lambda#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of VPC subnet IDs.</p>"
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.lambda#SecurityGroupIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of VPC security groups IDs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>"
      }
    },
    "com.amazonaws.lambda#VpcConfigResponse": {
      "type": "structure",
      "members": {
        "SubnetIds": {
          "target": "com.amazonaws.lambda#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of VPC subnet IDs.</p>"
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.lambda#SecurityGroupIds",
          "traits": {
            "smithy.api#documentation": "<p>A list of VPC security groups IDs.</p>"
          }
        },
        "VpcId": {
          "target": "com.amazonaws.lambda#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The VPC security groups and subnets that are attached to a Lambda function.</p>"
      }
    },
    "com.amazonaws.lambda#VpcId": {
      "type": "string"
    },
    "com.amazonaws.lambda#Weight": {
      "type": "double",
      "traits": {
        "smithy.api#range": {
          "min": 0.0,
          "max": 1.0
        }
      }
    }
  }
}
