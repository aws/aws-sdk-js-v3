{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.braket#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.braket#AlgorithmSpecification": {
      "type": "structure",
      "members": {
        "scriptModeConfig": {
          "target": "com.amazonaws.braket#ScriptModeConfig",
          "traits": {
            "smithy.api#documentation": "<p>Configures the paths to the Python scripts used for entry and training.</p>"
          }
        },
        "containerImage": {
          "target": "com.amazonaws.braket#ContainerImage",
          "traits": {
            "smithy.api#documentation": "<p>The container image used to create an Amazon Braket job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Defines the Amazon Braket job to be created. Specifies the container image the job uses\n         and the paths to the Python scripts used for entry and training.</p>"
      }
    },
    "com.amazonaws.braket#Braket": {
      "type": "service",
      "version": "2019-09-01",
      "operations": [
        {
          "target": "com.amazonaws.braket#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.braket#TagResource"
        },
        {
          "target": "com.amazonaws.braket#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.braket#DeviceResource"
        },
        {
          "target": "com.amazonaws.braket#JobResource"
        },
        {
          "target": "com.amazonaws.braket#QuantumTaskResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Braket",
          "cloudTrailEventSource": "braket.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "braket"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "*",
            "content-type",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-platform-id",
            "x-amzn-trace-id"
          ],
          "additionalExposedHeaders": [
            "x-amzn-errortype",
            "x-amzn-requestid",
            "x-amzn-trace-id",
            "x-amzn-errormessage",
            "x-amzn-trace-id",
            "x-amz-apigw-id",
            "date"
          ]
        },
        "smithy.api#documentation": "<p>The Amazon Braket API Reference provides information about the operations and structures\n         supported in Amazon Braket.</p>\n         <p>Additional Resources:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#title": "Braket",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://braket-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://braket-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://braket.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://braket.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://braket.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.braket#CancelJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#CancelJobRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#CancelJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#ConflictException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels an Amazon Braket job.</p>",
        "smithy.api#http": {
          "uri": "/job/{jobArn}/cancel",
          "method": "PUT"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.braket#CancelJobRequest": {
      "type": "structure",
      "members": {
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job to cancel.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#CancelJobResponse": {
      "type": "structure",
      "members": {
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "cancellationStatus": {
          "target": "com.amazonaws.braket#CancellationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the job cancellation request.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#CancelQuantumTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#CancelQuantumTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#CancelQuantumTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#ConflictException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels the specified task.</p>",
        "smithy.api#http": {
          "uri": "/quantum-task/{quantumTaskArn}/cancel",
          "method": "PUT"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.braket#CancelQuantumTaskRequest": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the task to cancel.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>The client token associated with the request.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#CancelQuantumTaskResponse": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the task.</p>",
            "smithy.api#required": {}
          }
        },
        "cancellationStatus": {
          "target": "com.amazonaws.braket#CancellationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the cancellation request.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#CancellationStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          }
        ]
      }
    },
    "com.amazonaws.braket#CompressionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NONE",
            "name": "NONE"
          },
          {
            "value": "GZIP",
            "name": "GZIP"
          }
        ]
      }
    },
    "com.amazonaws.braket#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An error occurred due to a conflict.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.braket#ContainerImage": {
      "type": "structure",
      "members": {
        "uri": {
          "target": "com.amazonaws.braket#Uri",
          "traits": {
            "smithy.api#documentation": "<p>The URI locating the container image.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container image used to create an Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#CreateJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#CreateJobRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#CreateJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#ConflictException"
        },
        {
          "target": "com.amazonaws.braket#DeviceRetiredException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an Amazon Braket job.</p>",
        "smithy.api#http": {
          "uri": "/job",
          "method": "POST",
          "code": 201
        }
      }
    },
    "com.amazonaws.braket#CreateJobRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>A unique token that guarantees that the call to this API is idempotent.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "algorithmSpecification": {
          "target": "com.amazonaws.braket#AlgorithmSpecification",
          "traits": {
            "smithy.api#documentation": "<p>Definition of the Amazon Braket job to be created. Specifies the container image the job\n         uses and information about the Python scripts used for entry and training.</p>",
            "smithy.api#required": {}
          }
        },
        "inputDataConfig": {
          "target": "com.amazonaws.braket#InputConfigList",
          "traits": {
            "smithy.api#documentation": "<p>A list of parameters that specify the name and type of input data and where it is\n         located.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 20
            }
          }
        },
        "outputDataConfig": {
          "target": "com.amazonaws.braket#JobOutputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The path to the S3 location where you want to store job artifacts and the encryption key\n         used to store them.</p>",
            "smithy.api#required": {}
          }
        },
        "checkpointConfig": {
          "target": "com.amazonaws.braket#JobCheckpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the output locations for job checkpoint data.</p>"
          }
        },
        "jobName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon Braket job.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 50
            },
            "smithy.api#pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.braket#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform\n         tasks on behalf of a user. It can access user resources, run an Amazon Braket job container\n         on behalf of user, and output resources to the users' s3 buckets.</p>",
            "smithy.api#required": {}
          }
        },
        "stoppingCondition": {
          "target": "com.amazonaws.braket#JobStoppingCondition",
          "traits": {
            "smithy.api#documentation": "<p> The user-defined criteria that specifies when a job stops running.</p>"
          }
        },
        "instanceConfig": {
          "target": "com.amazonaws.braket#InstanceConfig",
          "traits": {
            "smithy.api#documentation": "<p>Configuration of the resource instances to use while running the hybrid job on Amazon\n         Braket.</p>",
            "smithy.api#required": {}
          }
        },
        "hyperParameters": {
          "target": "com.amazonaws.braket#HyperParameters",
          "traits": {
            "smithy.api#documentation": "<p>Algorithm-specific parameters used by an Amazon Braket job that influence the quality of\n         the training job. The values are set with a string of JSON key:value pairs, where the key\n         is the name of the hyperparameter and the value is the value of th hyperparameter.</p>"
          }
        },
        "deviceConfig": {
          "target": "com.amazonaws.braket#DeviceConfig",
          "traits": {
            "smithy.api#documentation": "<p>The quantum processing unit (QPU) or simulator used to create an Amazon Braket\n         job.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A tag object that consists of a key and an optional value, used to manage metadata for\n         Amazon Braket resources.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#CreateJobResponse": {
      "type": "structure",
      "members": {
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job created.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#CreateQuantumTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#CreateQuantumTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#CreateQuantumTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#DeviceOfflineException"
        },
        {
          "target": "com.amazonaws.braket#DeviceRetiredException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a quantum task.</p>",
        "smithy.api#http": {
          "uri": "/quantum-task",
          "method": "POST",
          "code": 201
        }
      }
    },
    "com.amazonaws.braket#CreateQuantumTaskRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>The client token associated with the request.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device to run the task on.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceParameters": {
          "target": "com.amazonaws.braket#JsonValue",
          "traits": {
            "smithy.api#documentation": "<p>The parameters for the device to run the task on.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 48000
            }
          }
        },
        "shots": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of shots to use for the task.</p>",
            "smithy.api#range": {
              "min": 0
            },
            "smithy.api#required": {}
          }
        },
        "outputS3Bucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The S3 bucket to store task result files in.</p>",
            "smithy.api#length": {
              "min": 3,
              "max": 63
            },
            "smithy.api#required": {}
          }
        },
        "outputS3KeyPrefix": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The key prefix for the location in the S3 bucket to store task results in.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1024
            },
            "smithy.api#required": {}
          }
        },
        "action": {
          "target": "com.amazonaws.braket#JsonValue",
          "traits": {
            "smithy.api#documentation": "<p>The action associated with the task.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags to be added to the quantum task you're creating.</p>"
          }
        },
        "jobToken": {
          "target": "com.amazonaws.braket#JobToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for an Amazon Braket job that associates it with the quantum task.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#CreateQuantumTaskResponse": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the task created by the request.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#DataSource": {
      "type": "structure",
      "members": {
        "s3DataSource": {
          "target": "com.amazonaws.braket#S3DataSource",
          "traits": {
            "smithy.api#documentation": "<p>Information about the data stored in Amazon S3 used by the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the source of the data used by the Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#DeviceArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.braket#Braket",
          "resource": "com.amazonaws.braket#DeviceResource"
        },
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.braket#DeviceConfig": {
      "type": "structure",
      "members": {
        "device": {
          "target": "com.amazonaws.braket#String256",
          "traits": {
            "smithy.api#documentation": "<p>The primary quantum processing unit (QPU) or simulator used to create and run an Amazon\n         Braket job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configures the quantum processing units (QPUs) or simulator used to create and run an\n         Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#DeviceOfflineException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified device is currently offline.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 424
      }
    },
    "com.amazonaws.braket#DeviceResource": {
      "type": "resource",
      "identifiers": {
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn"
        }
      },
      "read": {
        "target": "com.amazonaws.braket#GetDevice"
      },
      "list": {
        "target": "com.amazonaws.braket#SearchDevices"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{deviceArn}",
          "absolute": true
        }
      }
    },
    "com.amazonaws.braket#DeviceRetiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified device has been retired.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 410
      }
    },
    "com.amazonaws.braket#DeviceStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ONLINE",
            "name": "ONLINE"
          },
          {
            "value": "OFFLINE",
            "name": "OFFLINE"
          },
          {
            "value": "RETIRED",
            "name": "RETIRED"
          }
        ]
      }
    },
    "com.amazonaws.braket#DeviceSummary": {
      "type": "structure",
      "members": {
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "providerName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The provider of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceType": {
          "target": "com.amazonaws.braket#DeviceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceStatus": {
          "target": "com.amazonaws.braket#DeviceStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the device.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Includes information about the device.</p>"
      }
    },
    "com.amazonaws.braket#DeviceSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#DeviceSummary"
      }
    },
    "com.amazonaws.braket#DeviceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "QPU",
            "name": "QPU"
          },
          {
            "value": "SIMULATOR",
            "name": "SIMULATOR"
          }
        ]
      }
    },
    "com.amazonaws.braket#GetDevice": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#GetDeviceRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#GetDeviceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the devices available in Amazon Braket.</p>\n         <note>\n            <p>For backwards compatibility with older versions of BraketSchemas, OpenQASM\n            information is omitted from GetDevice API calls. To get this information the user-agent\n            needs to present a recent version of the BraketSchemas (1.8.0 or later). The Braket SDK\n            automatically reports this for you. If you do not see OpenQASM results in the GetDevice\n            response when using a Braket SDK, you may need to set AWS_EXECUTION_ENV environment\n            variable to configure user-agent. See the code examples provided below for how to do\n            this for the AWS CLI, Boto3, and the Go, Java, and JavaScript/TypeScript SDKs.</p>\n         </note>",
        "smithy.api#http": {
          "uri": "/device/{deviceArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#GetDeviceRequest": {
      "type": "structure",
      "members": {
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#GetDeviceResponse": {
      "type": "structure",
      "members": {
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "providerName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the partner company for the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceType": {
          "target": "com.amazonaws.braket#DeviceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceStatus": {
          "target": "com.amazonaws.braket#DeviceStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the device.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceCapabilities": {
          "target": "com.amazonaws.braket#JsonValue",
          "traits": {
            "smithy.api#documentation": "<p>Details about the capabilities of the device.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#GetJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#GetJobRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#GetJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the specified Amazon Braket job.</p>",
        "smithy.api#http": {
          "uri": "/job/{jobArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#GetJobRequest": {
      "type": "structure",
      "members": {
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the job to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#GetJobResponse": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.braket#JobPrimaryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.braket#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform\n         tasks on behalf of a user. It can access user resources, run an Amazon Braket job container\n         on behalf of user, and output resources to the s3 buckets of a user.</p>",
            "smithy.api#required": {}
          }
        },
        "failureReason": {
          "target": "com.amazonaws.braket#String1024",
          "traits": {
            "smithy.api#documentation": "<p>A description of the reason why an Amazon Braket job failed, if it failed.</p>"
          }
        },
        "jobName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon Braket job.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 50
            },
            "smithy.api#pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$",
            "smithy.api#required": {}
          }
        },
        "hyperParameters": {
          "target": "com.amazonaws.braket#HyperParameters",
          "traits": {
            "smithy.api#documentation": "<p>Algorithm-specific parameters used by an Amazon Braket job that influence the quality of\n         the traiing job. The values are set with a string of JSON key:value pairs, where the key is\n         the name of the hyperparameter and the value is the value of th hyperparameter.</p>"
          }
        },
        "inputDataConfig": {
          "target": "com.amazonaws.braket#InputConfigList",
          "traits": {
            "smithy.api#documentation": "<p>A list of parameters that specify the name and type of input data and where it is\n         located.</p>"
          }
        },
        "outputDataConfig": {
          "target": "com.amazonaws.braket#JobOutputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The path to the S3 location where job artifacts are stored and the encryption key used\n         to store them there.</p>",
            "smithy.api#required": {}
          }
        },
        "stoppingCondition": {
          "target": "com.amazonaws.braket#JobStoppingCondition",
          "traits": {
            "smithy.api#documentation": "<p>The user-defined criteria that specifies when to stop a job running.</p>"
          }
        },
        "checkpointConfig": {
          "target": "com.amazonaws.braket#JobCheckpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the output locations for job checkpoint data.</p>"
          }
        },
        "algorithmSpecification": {
          "target": "com.amazonaws.braket#AlgorithmSpecification",
          "traits": {
            "smithy.api#documentation": "<p>Definition of the Amazon Braket job created. Specifies the container image the job uses,\n         information about the Python scripts used for entry and training, and the user-defined\n         metrics used to evaluation the job.</p>",
            "smithy.api#required": {}
          }
        },
        "instanceConfig": {
          "target": "com.amazonaws.braket#InstanceConfig",
          "traits": {
            "smithy.api#documentation": "<p>The resource instances to use while running the hybrid job on Amazon Braket.</p>",
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "startedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job was started.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "endedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job ended.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "billableDuration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The billable time the Amazon Braket job used to complete.</p>"
          }
        },
        "deviceConfig": {
          "target": "com.amazonaws.braket#DeviceConfig",
          "traits": {
            "smithy.api#documentation": "<p>The quantum processing unit (QPU) or simulator used to run the Amazon Braket job.</p>"
          }
        },
        "events": {
          "target": "com.amazonaws.braket#JobEvents",
          "traits": {
            "smithy.api#documentation": "<p>Details about the type and time events occurred related to the Amazon Braket job.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A tag object that consists of a key and an optional value, used to manage metadata for\n         Amazon Braket resources.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#GetQuantumTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#GetQuantumTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#GetQuantumTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the specified quantum task.</p>",
        "smithy.api#http": {
          "uri": "/quantum-task/{quantumTaskArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#GetQuantumTaskRequest": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>the ARN of the task to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#GetQuantumTaskResponse": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.braket#QuantumTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the task.</p>",
            "smithy.api#required": {}
          }
        },
        "failureReason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The reason that a task failed.</p>"
          }
        },
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device the task was run on.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceParameters": {
          "target": "com.amazonaws.braket#JsonValue",
          "traits": {
            "smithy.api#documentation": "<p>The parameters for the device on which the task ran.</p>",
            "smithy.api#required": {}
          }
        },
        "shots": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of shots used in the task.</p>",
            "smithy.api#required": {}
          }
        },
        "outputS3Bucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The S3 bucket where task results are stored.</p>",
            "smithy.api#required": {}
          }
        },
        "outputS3Directory": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The folder in the S3 bucket where task results are stored.</p>",
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the task was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "endedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the task ended.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags that belong to this task.</p>"
          }
        },
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job associated with the quantum task.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#HyperParameters": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.braket#String256"
      },
      "value": {
        "target": "smithy.api#String",
        "traits": {
          "smithy.api#length": {
            "min": 1,
            "max": 2500
          }
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.braket#InputConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#InputFileConfig"
      }
    },
    "com.amazonaws.braket#InputFileConfig": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>A named input source that an Amazon Braket job can consume.</p>",
            "smithy.api#pattern": "^[A-Za-z0-9\\.\\-_]+$",
            "smithy.api#required": {}
          }
        },
        "contentType": {
          "target": "com.amazonaws.braket#String256",
          "traits": {
            "smithy.api#documentation": "<p>The MIME type of the data.</p>"
          }
        },
        "dataSource": {
          "target": "com.amazonaws.braket#DataSource",
          "traits": {
            "smithy.api#documentation": "<p>The location of the channel data.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of parameters that specify the input channels, type of input data, and where it\n         is located.</p>"
      }
    },
    "com.amazonaws.braket#InstanceConfig": {
      "type": "structure",
      "members": {
        "instanceType": {
          "target": "com.amazonaws.braket#InstanceType",
          "traits": {
            "smithy.api#documentation": "<p>Configures the type resource instances to use while running an Amazon Braket hybrid\n         job.</p>",
            "smithy.api#required": {}
          }
        },
        "volumeSizeInGb": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The size of the storage volume, in GB, that user wants to provision.</p>",
            "smithy.api#range": {
              "min": 1
            },
            "smithy.api#required": {}
          }
        },
        "instanceCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Configures the number of resource instances to use while running an Amazon Braket job on\n         Amazon Braket. The default value is 1.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configures the resource instances to use while running the Amazon Braket hybrid job on\n         Amazon Braket.</p>"
      }
    },
    "com.amazonaws.braket#InstanceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ml.m4.xlarge",
            "name": "ML_M4_XLARGE"
          },
          {
            "value": "ml.m4.2xlarge",
            "name": "ML_M4_2XLARGE"
          },
          {
            "value": "ml.m4.4xlarge",
            "name": "ML_M4_4XLARGE"
          },
          {
            "value": "ml.m4.10xlarge",
            "name": "ML_M4_10XLARGE"
          },
          {
            "value": "ml.m4.16xlarge",
            "name": "ML_M4_16XLARGE"
          },
          {
            "value": "ml.g4dn.xlarge",
            "name": "ML_G4DN_XLARGE"
          },
          {
            "value": "ml.g4dn.2xlarge",
            "name": "ML_G4DN_2XLARGE"
          },
          {
            "value": "ml.g4dn.4xlarge",
            "name": "ML_G4DN_4XLARGE"
          },
          {
            "value": "ml.g4dn.8xlarge",
            "name": "ML_G4DN_8XLARGE"
          },
          {
            "value": "ml.g4dn.12xlarge",
            "name": "ML_G4DN_12XLARGE"
          },
          {
            "value": "ml.g4dn.16xlarge",
            "name": "ML_G4DN_16XLARGE"
          },
          {
            "value": "ml.m5.large",
            "name": "ML_M5_LARGE"
          },
          {
            "value": "ml.m5.xlarge",
            "name": "ML_M5_XLARGE"
          },
          {
            "value": "ml.m5.2xlarge",
            "name": "ML_M5_2XLARGE"
          },
          {
            "value": "ml.m5.4xlarge",
            "name": "ML_M5_4XLARGE"
          },
          {
            "value": "ml.m5.12xlarge",
            "name": "ML_M5_12XLARGE"
          },
          {
            "value": "ml.m5.24xlarge",
            "name": "ML_M5_24XLARGE"
          },
          {
            "value": "ml.c4.xlarge",
            "name": "ML_C4_XLARGE"
          },
          {
            "value": "ml.c4.2xlarge",
            "name": "ML_C4_2XLARGE"
          },
          {
            "value": "ml.c4.4xlarge",
            "name": "ML_C4_4XLARGE"
          },
          {
            "value": "ml.c4.8xlarge",
            "name": "ML_C4_8XLARGE"
          },
          {
            "value": "ml.p2.xlarge",
            "name": "ML_P2_XLARGE"
          },
          {
            "value": "ml.p2.8xlarge",
            "name": "ML_P2_8XLARGE"
          },
          {
            "value": "ml.p2.16xlarge",
            "name": "ML_P2_16XLARGE"
          },
          {
            "value": "ml.p3.2xlarge",
            "name": "ML_P3_2XLARGE"
          },
          {
            "value": "ml.p3.8xlarge",
            "name": "ML_P3_8XLARGE"
          },
          {
            "value": "ml.p3.16xlarge",
            "name": "ML_P3_16XLARGE"
          },
          {
            "value": "ml.p3dn.24xlarge",
            "name": "ML_P3DN_24XLARGE"
          },
          {
            "value": "ml.p4d.24xlarge",
            "name": "ML_P4D_24XLARGE"
          },
          {
            "value": "ml.c5.xlarge",
            "name": "ML_C5_XLARGE"
          },
          {
            "value": "ml.c5.2xlarge",
            "name": "ML_C5_2XLARGE"
          },
          {
            "value": "ml.c5.4xlarge",
            "name": "ML_C5_4XLARGE"
          },
          {
            "value": "ml.c5.9xlarge",
            "name": "ML_C5_9XLARGE"
          },
          {
            "value": "ml.c5.18xlarge",
            "name": "ML_C5_18XLARGE"
          },
          {
            "value": "ml.c5n.xlarge",
            "name": "ML_C5N_XLARGE"
          },
          {
            "value": "ml.c5n.2xlarge",
            "name": "ML_C5N_2XLARGE"
          },
          {
            "value": "ml.c5n.4xlarge",
            "name": "ML_C5N_4XLARGE"
          },
          {
            "value": "ml.c5n.9xlarge",
            "name": "ML_C5N_9XLARGE"
          },
          {
            "value": "ml.c5n.18xlarge",
            "name": "ML_C5N_18XLARGE"
          }
        ]
      }
    },
    "com.amazonaws.braket#InternalServiceException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request processing has failed because of an unknown error, exception, or\n         failure.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.braket#JobArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.braket#Braket",
          "resource": "com.amazonaws.braket#JobResource"
        },
        "smithy.api#pattern": "^arn:aws[a-z\\-]*:braket:[a-z0-9\\-]*:[0-9]{12}:job/.*$"
      }
    },
    "com.amazonaws.braket#JobCheckpointConfig": {
      "type": "structure",
      "members": {
        "localPath": {
          "target": "com.amazonaws.braket#String4096",
          "traits": {
            "smithy.api#documentation": "<p>(Optional) The local directory where checkpoints are written. The default directory is\n            <code>/opt/braket/checkpoints/</code>.</p>"
          }
        },
        "s3Uri": {
          "target": "com.amazonaws.braket#S3Path",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the S3 path where you want Amazon Braket to store checkpoints. For example,\n            <code>s3://bucket-name/key-name-prefix</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains information about the output locations for job checkpoint data.</p>"
      }
    },
    "com.amazonaws.braket#JobEventDetails": {
      "type": "structure",
      "members": {
        "eventType": {
          "target": "com.amazonaws.braket#JobEventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event that occurred related to the Amazon Braket job.</p>"
          }
        },
        "timeOfEvent": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>TThe type of event that occurred related to the Amazon Braket job.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the event that occurred related to the Amazon Braket job.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 2500
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the type and time events occurred related to the Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#JobEventType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "WAITING_FOR_PRIORITY",
            "name": "WAITING_FOR_PRIORITY"
          },
          {
            "value": "QUEUED_FOR_EXECUTION",
            "name": "QUEUED_FOR_EXECUTION"
          },
          {
            "value": "STARTING_INSTANCE",
            "name": "STARTING_INSTANCE"
          },
          {
            "value": "DOWNLOADING_DATA",
            "name": "DOWNLOADING_DATA"
          },
          {
            "value": "RUNNING",
            "name": "RUNNING"
          },
          {
            "value": "DEPRIORITIZED_DUE_TO_INACTIVITY",
            "name": "DEPRIORITIZED_DUE_TO_INACTIVITY"
          },
          {
            "value": "UPLOADING_RESULTS",
            "name": "UPLOADING_RESULTS"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "MAX_RUNTIME_EXCEEDED",
            "name": "MAX_RUNTIME_EXCEEDED"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          }
        ]
      }
    },
    "com.amazonaws.braket#JobEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#JobEventDetails"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.braket#JobOutputDataConfig": {
      "type": "structure",
      "members": {
        "kmsKeyId": {
          "target": "com.amazonaws.braket#String2048",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Key Management Service (AWS KMS) key that Amazon Braket uses to encrypt the job\n         training artifacts at rest using Amazon S3 server-side encryption.</p>"
          }
        },
        "s3Path": {
          "target": "com.amazonaws.braket#S3Path",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the S3 path where you want Amazon Braket to store the job training artifacts.\n         For example, <code>s3://bucket-name/key-name-prefix</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the path to the S3 location where you want to store job artifacts and the\n         encryption key used to store them.</p>"
      }
    },
    "com.amazonaws.braket#JobPrimaryStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "QUEUED",
            "name": "QUEUED"
          },
          {
            "value": "RUNNING",
            "name": "RUNNING"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          }
        ]
      }
    },
    "com.amazonaws.braket#JobResource": {
      "type": "resource",
      "identifiers": {
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn"
        }
      },
      "create": {
        "target": "com.amazonaws.braket#CreateJob"
      },
      "read": {
        "target": "com.amazonaws.braket#GetJob"
      },
      "update": {
        "target": "com.amazonaws.braket#CancelJob"
      },
      "collectionOperations": [
        {
          "target": "com.amazonaws.braket#SearchJobs"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "{jobArn}",
          "absolute": true
        }
      }
    },
    "com.amazonaws.braket#JobStoppingCondition": {
      "type": "structure",
      "members": {
        "maxRuntimeInSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum length of time, in seconds, that an Amazon Braket job can run.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 432000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies limits for how long an Amazon Braket job can run. </p>"
      }
    },
    "com.amazonaws.braket#JobSummary": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.braket#JobPrimaryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "jobArn": {
          "target": "com.amazonaws.braket#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "jobName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "device": {
          "target": "com.amazonaws.braket#String256",
          "traits": {
            "smithy.api#documentation": "<p>Provides summary information about the primary device used by an Amazon Braket\n         job.</p>",
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "startedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job was started.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "endedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the Amazon Braket job ended.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A tag object that consists of a key and an optional value, used to manage metadata for\n         Amazon Braket resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides summary information about an Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#JobSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#JobSummary"
      }
    },
    "com.amazonaws.braket#JobToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.braket#JsonValue": {
      "type": "string",
      "traits": {
        "smithy.api#mediaType": "application/json"
      }
    },
    "com.amazonaws.braket#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Shows the tags associated with this resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the <code>resourceArn</code> for the resource whose tags to display.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Displays the key, value pairs of tags associated with this resource.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#QuantumTaskArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazonaws.braket#Braket",
          "resource": "com.amazonaws.braket#QuantumTaskResource"
        },
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.braket#QuantumTaskResource": {
      "type": "resource",
      "identifiers": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn"
        }
      },
      "create": {
        "target": "com.amazonaws.braket#CreateQuantumTask"
      },
      "read": {
        "target": "com.amazonaws.braket#GetQuantumTask"
      },
      "update": {
        "target": "com.amazonaws.braket#CancelQuantumTask"
      },
      "list": {
        "target": "com.amazonaws.braket#SearchQuantumTasks"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{quantumTaskArn}",
          "absolute": true
        }
      }
    },
    "com.amazonaws.braket#QuantumTaskStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CREATED",
            "name": "CREATED"
          },
          {
            "value": "QUEUED",
            "name": "QUEUED"
          },
          {
            "value": "RUNNING",
            "name": "RUNNING"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          }
        ]
      }
    },
    "com.amazonaws.braket#QuantumTaskSummary": {
      "type": "structure",
      "members": {
        "quantumTaskArn": {
          "target": "com.amazonaws.braket#QuantumTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the task.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.braket#QuantumTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the task.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceArn": {
          "target": "com.amazonaws.braket#DeviceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the device the task ran on.</p>",
            "smithy.api#required": {}
          }
        },
        "shots": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The shots used for the task.</p>",
            "smithy.api#required": {}
          }
        },
        "outputS3Bucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The S3 bucket where the task result file is stored..</p>",
            "smithy.api#required": {}
          }
        },
        "outputS3Directory": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The folder in the S3 bucket where the task result file is stored.</p>",
            "smithy.api#required": {}
          }
        },
        "createdAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the task was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "endedAt": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the task finished.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Displays the key, value pairs of tags associated with this quantum task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Includes information about a quantum task.</p>"
      }
    },
    "com.amazonaws.braket#QuantumTaskSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#QuantumTaskSummary"
      }
    },
    "com.amazonaws.braket#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.braket#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
      }
    },
    "com.amazonaws.braket#S3DataSource": {
      "type": "structure",
      "members": {
        "s3Uri": {
          "target": "com.amazonaws.braket#S3Path",
          "traits": {
            "smithy.api#documentation": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a\n         key name prefix or a manifest that locates the S3 data source.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the data stored in Amazon S3 used by the Amazon Braket job.</p>"
      }
    },
    "com.amazonaws.braket#S3Path": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 1024
        },
        "smithy.api#pattern": "^(https|s3)://([^/]+)/?(.*)$"
      }
    },
    "com.amazonaws.braket#ScriptModeConfig": {
      "type": "structure",
      "members": {
        "entryPoint": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The path to the Python script that serves as the entry point for an Amazon Braket\n         job.</p>",
            "smithy.api#required": {}
          }
        },
        "s3Uri": {
          "target": "com.amazonaws.braket#S3Path",
          "traits": {
            "smithy.api#documentation": "<p>The URI that specifies the S3 path to the Python script module that contains the\n         training script used by an Amazon Braket job.</p>",
            "smithy.api#required": {}
          }
        },
        "compressionType": {
          "target": "com.amazonaws.braket#CompressionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of compression used by the Python scripts for an Amazon Braket job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains information about the Python scripts used for entry and by an Amazon Braket\n         job.</p>"
      }
    },
    "com.amazonaws.braket#SearchDevices": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#SearchDevicesRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#SearchDevicesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Searches for devices using the specified filters.</p>",
        "smithy.api#http": {
          "uri": "/devices",
          "method": "POST"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "devices"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#SearchDevicesFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name to use to filter results.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 64
            },
            "smithy.api#required": {}
          }
        },
        "values": {
          "target": "com.amazonaws.braket#String256List",
          "traits": {
            "smithy.api#documentation": "<p>The values to use to filter results.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 10
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filter to use for searching devices.</p>"
      }
    },
    "com.amazonaws.braket#SearchDevicesFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#SearchDevicesFilter"
      }
    },
    "com.amazonaws.braket#SearchDevicesRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results returned in the response. Use the token returned\n         from the previous request continue results where the previous request ended.</p>"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return in the response.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "filters": {
          "target": "com.amazonaws.braket#SearchDevicesFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The filter values to use to search for a device.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 10
            },
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#SearchDevicesResponse": {
      "type": "structure",
      "members": {
        "devices": {
          "target": "com.amazonaws.braket#DeviceSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>An array of <code>DeviceSummary</code> objects for devices that match the specified\n         filter values.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results, or null if there are no additional results. Use\n         the token value in a subsequent request to continue results where the previous request\n         ended.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#SearchJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#SearchJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#SearchJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Searches for Amazon Braket jobs that match the specified filter values.</p>",
        "smithy.api#http": {
          "uri": "/jobs",
          "method": "POST"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "jobs"
        }
      }
    },
    "com.amazonaws.braket#SearchJobsFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>The name to use for the jobs filter.</p>",
            "smithy.api#required": {}
          }
        },
        "values": {
          "target": "com.amazonaws.braket#String256List",
          "traits": {
            "smithy.api#documentation": "<p>The values to use for the jobs filter.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 10
            },
            "smithy.api#required": {}
          }
        },
        "operator": {
          "target": "com.amazonaws.braket#SearchJobsFilterOperator",
          "traits": {
            "smithy.api#documentation": "<p>An operator to use for the jobs filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter used to search for Amazon Braket jobs.</p>"
      }
    },
    "com.amazonaws.braket#SearchJobsFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#SearchJobsFilter"
      }
    },
    "com.amazonaws.braket#SearchJobsFilterOperator": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LT",
            "name": "LT"
          },
          {
            "value": "LTE",
            "name": "LTE"
          },
          {
            "value": "EQUAL",
            "name": "EQUAL"
          },
          {
            "value": "GT",
            "name": "GT"
          },
          {
            "value": "GTE",
            "name": "GTE"
          },
          {
            "value": "BETWEEN",
            "name": "BETWEEN"
          },
          {
            "value": "CONTAINS",
            "name": "CONTAINS"
          }
        ]
      }
    },
    "com.amazonaws.braket#SearchJobsRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results returned in the response. Use the token returned\n         from the previous request to continue results where the previous request ended.</p>"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return in the response.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "filters": {
          "target": "com.amazonaws.braket#SearchJobsFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The filter values to use when searching for a job.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 10
            },
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#SearchJobsResponse": {
      "type": "structure",
      "members": {
        "jobs": {
          "target": "com.amazonaws.braket#JobSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>An array of <code>JobSummary</code> objects for devices that match the specified filter\n         values.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results, or <code>null</code> if there are no additional\n         results. Use the token value in a subsequent request to continue results where the previous\n         request ended.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#SearchQuantumTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#SearchQuantumTasksRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#SearchQuantumTasksResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ThrottlingException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Searches for tasks that match the specified filter values.</p>",
        "smithy.api#http": {
          "uri": "/quantum-tasks",
          "method": "POST"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "quantumTasks"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.braket#SearchQuantumTasksFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.braket#String64",
          "traits": {
            "smithy.api#documentation": "<p>The name of the device used for the task.</p>",
            "smithy.api#required": {}
          }
        },
        "values": {
          "target": "com.amazonaws.braket#String256List",
          "traits": {
            "smithy.api#documentation": "<p>The values to use for the filter.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 10
            },
            "smithy.api#required": {}
          }
        },
        "operator": {
          "target": "com.amazonaws.braket#SearchQuantumTasksFilterOperator",
          "traits": {
            "smithy.api#documentation": "<p>An operator to use in the filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter to use to search for tasks.</p>"
      }
    },
    "com.amazonaws.braket#SearchQuantumTasksFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#SearchQuantumTasksFilter"
      }
    },
    "com.amazonaws.braket#SearchQuantumTasksFilterOperator": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LT",
            "name": "LT"
          },
          {
            "value": "LTE",
            "name": "LTE"
          },
          {
            "value": "EQUAL",
            "name": "EQUAL"
          },
          {
            "value": "GT",
            "name": "GT"
          },
          {
            "value": "GTE",
            "name": "GTE"
          },
          {
            "value": "BETWEEN",
            "name": "BETWEEN"
          }
        ]
      }
    },
    "com.amazonaws.braket#SearchQuantumTasksRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results returned in the response. Use the token returned\n         from the previous request continue results where the previous request ended.</p>"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return in the response.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "filters": {
          "target": "com.amazonaws.braket#SearchQuantumTasksFilterList",
          "traits": {
            "smithy.api#documentation": "<p>Array of <code>SearchQuantumTasksFilter</code> objects.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 10
            },
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#SearchQuantumTasksResponse": {
      "type": "structure",
      "members": {
        "quantumTasks": {
          "target": "com.amazonaws.braket#QuantumTaskSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>An array of <code>QuantumTaskSummary</code> objects for tasks that match the specified\n         filters.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results, or null if there are no additional results. Use\n         the token value in a subsequent request to continue results where the previous request\n         ended.</p>"
          }
        }
      }
    },
    "com.amazonaws.braket#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request failed because a service quota is exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.braket#String1024": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.braket#String2048": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.braket#String256": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.braket#String256List": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.braket#String256"
      }
    },
    "com.amazonaws.braket#String4096": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 4096
        }
      }
    },
    "com.amazonaws.braket#String64": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.braket#TagKeys": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.braket#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Add a tag to the specified resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}"
        }
      }
    },
    "com.amazonaws.braket#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the <code>resourceArn</code> of the resource to which a tag will be\n         added.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.braket#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Specify the tags to add to the resource.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.braket#TagsMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.braket#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The throttling rate limit is met.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.braket#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.braket#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.braket#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.braket#InternalServiceException"
        },
        {
          "target": "com.amazonaws.braket#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.braket#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Remove tags from a resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.braket#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the <code>resourceArn</code> for the resource from which to remove the\n         tags.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.braket#TagKeys",
          "traits": {
            "smithy.api#documentation": "<p>Specify the keys for the tags to remove from the resource.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.braket#UntagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.braket#Uri": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "\\d{10,14}\\.dkr\\.ecr.[a-z0-9-]+\\.amazonaws\\.com\\/.+(@sha256)?:.+"
      }
    },
    "com.amazonaws.braket#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    }
  }
}