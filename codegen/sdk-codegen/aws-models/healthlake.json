{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.healthlake#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Access is denied. Your account is not authorized to perform this operation.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.healthlake#AmazonResourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\\d{12}:datastore\\/fhir\\/.{32}$"
      }
    },
    "com.amazonaws.healthlake#AuthorizationStrategy": {
      "type": "enum",
      "members": {
        "SMARTV1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SMART_ON_FHIR_V1"
          }
        },
        "AWS_AUTH": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_AUTH"
          }
        }
      }
    },
    "com.amazonaws.healthlake#Boolean": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.healthlake#BoundedLengthString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5000
        },
        "smithy.api#pattern": "^[\\P{M}\\p{M}]{1,5000}$"
      }
    },
    "com.amazonaws.healthlake#ClientTokenString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.healthlake#CmkType": {
      "type": "enum",
      "members": {
        "CM_CMK": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOMER_MANAGED_KMS_KEY"
          }
        },
        "AO_CMK": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_OWNED_KMS_KEY"
          }
        }
      }
    },
    "com.amazonaws.healthlake#ConfigurationMetadata": {
      "type": "string"
    },
    "com.amazonaws.healthlake#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The data store is in a transition state and the user requested action can not be performed.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.healthlake#CreateFHIRDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#CreateFHIRDatastoreRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#CreateFHIRDatastoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a data store that can ingest and export FHIR formatted data.</p>"
      }
    },
    "com.amazonaws.healthlake#CreateFHIRDatastoreRequest": {
      "type": "structure",
      "members": {
        "DatastoreName": {
          "target": "com.amazonaws.healthlake#DatastoreName",
          "traits": {
            "smithy.api#documentation": "<p>The user generated name for the data store.</p>"
          }
        },
        "DatastoreTypeVersion": {
          "target": "com.amazonaws.healthlake#FHIRVersion",
          "traits": {
            "smithy.api#documentation": "<p>The FHIR version of the data store. The only supported version is R4.</p>",
            "smithy.api#required": {}
          }
        },
        "SseConfiguration": {
          "target": "com.amazonaws.healthlake#SseConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>\n            The server-side encryption key configuration for a customer provided encryption key specified for creating a data store.\n         </p>"
          }
        },
        "PreloadDataConfig": {
          "target": "com.amazonaws.healthlake#PreloadDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>Optional parameter to preload data upon creation of the data store. Currently, the only\n         supported preloaded data is synthetic data generated from Synthea.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.healthlake#ClientTokenString",
          "traits": {
            "smithy.api#documentation": "<p>Optional user provided token used for ensuring idempotency.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.healthlake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            Resource tags that are applied to a data store when it is created.\n         </p>"
          }
        },
        "IdentityProviderConfiguration": {
          "target": "com.amazonaws.healthlake#IdentityProviderConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the identity provider that you want to use for your data store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#CreateFHIRDatastoreResponse": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated data store id. This id is in the output from the initial data store\n         creation call.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreArn": {
          "target": "com.amazonaws.healthlake#DatastoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The data store ARN is generated during the creation of the data store and can be found in\n         the output from the initial data store creation call.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreStatus": {
          "target": "com.amazonaws.healthlake#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the FHIR data store.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreEndpoint": {
          "target": "com.amazonaws.healthlake#BoundedLengthString",
          "traits": {
            "smithy.api#documentation": "<p>The AWS endpoint for the created data store.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#DatastoreArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?$"
      }
    },
    "com.amazonaws.healthlake#DatastoreFilter": {
      "type": "structure",
      "members": {
        "DatastoreName": {
          "target": "com.amazonaws.healthlake#DatastoreName",
          "traits": {
            "smithy.api#documentation": "<p>Allows the user to filter data store results by name.</p>"
          }
        },
        "DatastoreStatus": {
          "target": "com.amazonaws.healthlake#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>Allows the user to filter data store results by status.</p>"
          }
        },
        "CreatedBefore": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A filter that allows the user to set cutoff dates for records. All data stores created\n         before the specified date will be included in the results. </p>"
          }
        },
        "CreatedAfter": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A filter that allows the user to set cutoff dates for records. All data stores created\n         after the specified date will be included in the results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filters applied to data store query.</p>"
      }
    },
    "com.amazonaws.healthlake#DatastoreId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 32
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      }
    },
    "com.amazonaws.healthlake#DatastoreName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      }
    },
    "com.amazonaws.healthlake#DatastoreProperties": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated ID number for the data store.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreArn": {
          "target": "com.amazonaws.healthlake#DatastoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name used in the creation of the data store.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreName": {
          "target": "com.amazonaws.healthlake#DatastoreName",
          "traits": {
            "smithy.api#documentation": "<p>The user-generated name for the data store.</p>"
          }
        },
        "DatastoreStatus": {
          "target": "com.amazonaws.healthlake#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the data store.</p>",
            "smithy.api#required": {}
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time that a data store was created. </p>"
          }
        },
        "DatastoreTypeVersion": {
          "target": "com.amazonaws.healthlake#FHIRVersion",
          "traits": {
            "smithy.api#documentation": "<p>The FHIR version. Only R4 version data is supported.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreEndpoint": {
          "target": "com.amazonaws.healthlake#String",
          "traits": {
            "smithy.api#documentation": "<p>The AWS endpoint for the data store. Each data store will have it's own endpoint with data store ID in the endpoint URL.</p>",
            "smithy.api#required": {}
          }
        },
        "SseConfiguration": {
          "target": "com.amazonaws.healthlake#SseConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>\n         The server-side encryption key configuration for a customer provided encryption key (CMK).\n      </p>"
          }
        },
        "PreloadDataConfig": {
          "target": "com.amazonaws.healthlake#PreloadDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The preloaded data configuration for the data store. Only data preloaded from Synthea is supported.</p>"
          }
        },
        "IdentityProviderConfiguration": {
          "target": "com.amazonaws.healthlake#IdentityProviderConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The identity provider that you selected when you created the data store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Displays the properties of the data store, including the ID, ARN, name, and the status of the data store.</p>"
      }
    },
    "com.amazonaws.healthlake#DatastorePropertiesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.healthlake#DatastoreProperties"
      }
    },
    "com.amazonaws.healthlake#DatastoreStatus": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.healthlake#DeleteFHIRDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#DeleteFHIRDatastoreRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#DeleteFHIRDatastoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#ConflictException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a data store. </p>"
      }
    },
    "com.amazonaws.healthlake#DeleteFHIRDatastoreRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p> The AWS-generated ID for the data store to be deleted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#DeleteFHIRDatastoreResponse": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated ID for the data store to be deleted.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreArn": {
          "target": "com.amazonaws.healthlake#DatastoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that gives AWS HealthLake access permission.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreStatus": {
          "target": "com.amazonaws.healthlake#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the data store that the user has requested to be deleted.\n      </p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreEndpoint": {
          "target": "com.amazonaws.healthlake#BoundedLengthString",
          "traits": {
            "smithy.api#documentation": "<p>The AWS endpoint for the data store the user has requested to be deleted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#DescribeFHIRDatastoreRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#DescribeFHIRDatastoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the properties associated with the FHIR data store, including the data store ID,\n         data store ARN, data store name, data store status, when the data store was created, data store type version, and the data store's endpoint.</p>"
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRDatastoreRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated data store ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRDatastoreResponse": {
      "type": "structure",
      "members": {
        "DatastoreProperties": {
          "target": "com.amazonaws.healthlake#DatastoreProperties",
          "traits": {
            "smithy.api#documentation": "<p>All properties associated with a data store, including the data store ID, data store ARN,\n         data store name, data store status, when the data store was created, data store type version, and the data store's endpoint.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRExportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#DescribeFHIRExportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#DescribeFHIRExportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>"
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRExportJobRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for the data store from which files are being exported from for an export job.</p>",
            "smithy.api#required": {}
          }
        },
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for an export job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRExportJobResponse": {
      "type": "structure",
      "members": {
        "ExportJobProperties": {
          "target": "com.amazonaws.healthlake#ExportJobProperties",
          "traits": {
            "smithy.api#documentation": "<p>Displays the properties of the export job, including the ID, Arn, Name, and the status of the job. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#DescribeFHIRImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#DescribeFHIRImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. </p>"
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRImportJobRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated ID of the data store.</p>",
            "smithy.api#required": {}
          }
        },
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated job ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#DescribeFHIRImportJobResponse": {
      "type": "structure",
      "members": {
        "ImportJobProperties": {
          "target": "com.amazonaws.healthlake#ImportJobProperties",
          "traits": {
            "smithy.api#documentation": "<p>The properties of the Import job request, including the ID, ARN, name, and the status of the job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#EncryptionKeyID": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 400
        },
        "smithy.api#pattern": "^(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))$"
      }
    },
    "com.amazonaws.healthlake#ExportJobProperties": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for an export job.</p>",
            "smithy.api#required": {}
          }
        },
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>The user generated name for an export job.</p>"
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>",
            "smithy.api#required": {}
          }
        },
        "SubmitTime": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time an export job was initiated.</p>",
            "smithy.api#required": {}
          }
        },
        "EndTime": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time an export job completed.</p>"
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for the data store from which files are being exported for an export job.</p>",
            "smithy.api#required": {}
          }
        },
        "OutputDataConfig": {
          "target": "com.amazonaws.healthlake#OutputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The output data configuration that was supplied when the export job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "DataAccessRoleArn": {
          "target": "com.amazonaws.healthlake#IamRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name used during the initiation of the job.</p>"
          }
        },
        "Message": {
          "target": "com.amazonaws.healthlake#Message",
          "traits": {
            "smithy.api#documentation": "<p>An explanation of any errors that may have occurred during the export job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>"
      }
    },
    "com.amazonaws.healthlake#ExportJobPropertiesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.healthlake#ExportJobProperties"
      }
    },
    "com.amazonaws.healthlake#FHIRVersion": {
      "type": "enum",
      "members": {
        "R4": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "R4"
          }
        }
      }
    },
    "com.amazonaws.healthlake#HealthLake": {
      "type": "service",
      "version": "2017-07-01",
      "operations": [
        {
          "target": "com.amazonaws.healthlake#CreateFHIRDatastore"
        },
        {
          "target": "com.amazonaws.healthlake#DeleteFHIRDatastore"
        },
        {
          "target": "com.amazonaws.healthlake#DescribeFHIRDatastore"
        },
        {
          "target": "com.amazonaws.healthlake#DescribeFHIRExportJob"
        },
        {
          "target": "com.amazonaws.healthlake#DescribeFHIRImportJob"
        },
        {
          "target": "com.amazonaws.healthlake#ListFHIRDatastores"
        },
        {
          "target": "com.amazonaws.healthlake#ListFHIRExportJobs"
        },
        {
          "target": "com.amazonaws.healthlake#ListFHIRImportJobs"
        },
        {
          "target": "com.amazonaws.healthlake#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.healthlake#StartFHIRExportJob"
        },
        {
          "target": "com.amazonaws.healthlake#StartFHIRImportJob"
        },
        {
          "target": "com.amazonaws.healthlake#TagResource"
        },
        {
          "target": "com.amazonaws.healthlake#UntagResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "HealthLake",
          "arnNamespace": "healthlake",
          "cloudFormationName": "HealthLake",
          "cloudTrailEventSource": "healthlake.amazonaws.com",
          "endpointPrefix": "healthlake"
        },
        "aws.auth#sigv4": {
          "name": "healthlake"
        },
        "aws.protocols#awsJson1_0": {},
        "smithy.api#documentation": "<p>AWS HealthLake is a HIPAA eligibile service that allows customers to store,\n         transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.</p>",
        "smithy.api#title": "Amazon HealthLake",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://healthlake-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://healthlake-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://healthlake.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://healthlake.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://healthlake.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.healthlake#IamRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+$"
      }
    },
    "com.amazonaws.healthlake#IdentityProviderConfiguration": {
      "type": "structure",
      "members": {
        "AuthorizationStrategy": {
          "target": "com.amazonaws.healthlake#AuthorizationStrategy",
          "traits": {
            "smithy.api#documentation": "<p>The authorization strategy that you selected when you created the data store.</p>",
            "smithy.api#required": {}
          }
        },
        "FineGrainedAuthorizationEnabled": {
          "target": "com.amazonaws.healthlake#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>If you enabled fine-grained authorization when you created the data store.</p>"
          }
        },
        "Metadata": {
          "target": "com.amazonaws.healthlake#ConfigurationMetadata",
          "traits": {
            "smithy.api#documentation": "<p>The JSON metadata elements that you want to use in your identity provider configuration. Required elements are listed based on the launch specification of the SMART application. For more information on all possible elements, see <a href=\"https://build.fhir.org/ig/HL7/smart-app-launch/conformance.html#metadata\">Metadata</a> in SMART's App Launch specification.</p>\n         <p>\n            <code>authorization_endpoint</code>: The URL to the OAuth2 authorization endpoint.</p>\n         <p>\n            <code>grant_types_supported</code>:  An array of grant types that are supported at the token endpoint. You must provide at least one grant type option. Valid options are <code>authorization_code</code> and <code>client_credentials</code>.</p>\n         <p>\n            <code>token_endpoint</code>: The URL to the OAuth2 token endpoint.</p>\n         <p>\n            <code>capabilities</code>: An array of strings of the SMART capabilities that the authorization server supports.</p>\n         <p>\n            <code>code_challenge_methods_supported</code>: An array of strings of supported PKCE code challenge methods. You must include the <code>S256</code> method in the array of PKCE code challenge methods.</p>"
          }
        },
        "IdpLambdaArn": {
          "target": "com.amazonaws.healthlake#LambdaArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lambda function that you want to use to decode the access token created by the authorization server.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The identity provider configuration that you gave when the data store was created.</p>"
      }
    },
    "com.amazonaws.healthlake#ImportJobProperties": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated id number for the Import job.</p>",
            "smithy.api#required": {}
          }
        },
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>The user-generated name for an Import job.</p>"
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED_WITH_ERRORS, COMPLETED, FAILED.</p>",
            "smithy.api#required": {}
          }
        },
        "SubmitTime": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time that the Import job was submitted for processing.</p>",
            "smithy.api#required": {}
          }
        },
        "EndTime": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time that the Import job was completed.</p>"
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The datastore id used when the Import job was created. </p>",
            "smithy.api#required": {}
          }
        },
        "InputDataConfig": {
          "target": "com.amazonaws.healthlake#InputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The input data configuration that was supplied when the Import job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "JobOutputDataConfig": {
          "target": "com.amazonaws.healthlake#OutputDataConfig"
        },
        "DataAccessRoleArn": {
          "target": "com.amazonaws.healthlake#IamRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that gives AWS HealthLake access to your input data.</p>"
          }
        },
        "Message": {
          "target": "com.amazonaws.healthlake#Message",
          "traits": {
            "smithy.api#documentation": "<p>An explanation of any errors that may have occurred during the FHIR import job. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Displays the properties of the import job, including the ID, Arn, Name, and the status of the data store.</p>"
      }
    },
    "com.amazonaws.healthlake#ImportJobPropertiesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.healthlake#ImportJobProperties"
      }
    },
    "com.amazonaws.healthlake#InputDataConfig": {
      "type": "union",
      "members": {
        "S3Uri": {
          "target": "com.amazonaws.healthlake#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The S3Uri is the user specified S3 location of the FHIR data to be imported into AWS HealthLake. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The input properties for an import job.</p>"
      }
    },
    "com.amazonaws.healthlake#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Unknown error occurs in the service.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.healthlake#JobId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 32
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      }
    },
    "com.amazonaws.healthlake#JobName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      }
    },
    "com.amazonaws.healthlake#JobStatus": {
      "type": "enum",
      "members": {
        "SUBMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUBMITTED"
          }
        },
        "IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IN_PROGRESS"
          }
        },
        "COMPLETED_WITH_ERRORS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED_WITH_ERRORS"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "CANCEL_SUBMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL_SUBMITTED"
          }
        },
        "CANCEL_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL_IN_PROGRESS"
          }
        },
        "CANCEL_COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL_COMPLETED"
          }
        },
        "CANCEL_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL_FAILED"
          }
        }
      }
    },
    "com.amazonaws.healthlake#KmsEncryptionConfig": {
      "type": "structure",
      "members": {
        "CmkType": {
          "target": "com.amazonaws.healthlake#CmkType",
          "traits": {
            "smithy.api#documentation": "<p>\n            The type of customer-managed-key(CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "KmsKeyId": {
          "target": "com.amazonaws.healthlake#EncryptionKeyID",
          "traits": {
            "smithy.api#documentation": "<p>\n            The KMS encryption key id/alias used to encrypt the data store contents at rest.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The customer-managed-key(CMK) used when creating a data store. If a customer owned key is not specified, an AWS owned key will be used for encryption.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#LambdaArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 49,
          "max": 256
        },
        "smithy.api#pattern": "^arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9\\-_\\.]+(:(\\$LATEST|[a-zA-Z0-9\\-_]+))?$"
      }
    },
    "com.amazonaws.healthlake#ListFHIRDatastores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#ListFHIRDatastoresRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#ListFHIRDatastoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all FHIR data stores that are in the user’s account, regardless of data store status.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.healthlake#ListFHIRDatastoresRequest": {
      "type": "structure",
      "members": {
        "Filter": {
          "target": "com.amazonaws.healthlake#DatastoreFilter",
          "traits": {
            "smithy.api#documentation": "<p>Lists all filters associated with a FHIR data store request.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Fetches the next page of data stores when results are paginated.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.healthlake#MaxResultsInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of data stores returned in a single page of a ListFHIRDatastoresRequest call.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#ListFHIRDatastoresResponse": {
      "type": "structure",
      "members": {
        "DatastorePropertiesList": {
          "target": "com.amazonaws.healthlake#DatastorePropertiesList",
          "traits": {
            "smithy.api#documentation": "<p>All properties associated with the listed data stores.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token that can be used to retrieve the next page of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#ListFHIRExportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#ListFHIRExportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#ListFHIRExportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Lists all FHIR export jobs associated with an account and their statuses.\n         </p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.healthlake#ListFHIRExportJobsRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the export job with the specified data store ID.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n            A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. \n         </p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.healthlake#MaxResultsInteger",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. \n         </p>"
          }
        },
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the export job with the specified job name.\n         </p>"
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the export jobs with the specified job status. \n         </p>"
          }
        },
        "SubmittedBefore": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to FHIR export jobs submitted before a user specified date. \n         </p>"
          }
        },
        "SubmittedAfter": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to FHIR export jobs submitted after a user specified date. \n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#ListFHIRExportJobsResponse": {
      "type": "structure",
      "members": {
        "ExportJobPropertiesList": {
          "target": "com.amazonaws.healthlake#ExportJobPropertiesList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n            A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#ListFHIRImportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#ListFHIRImportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#ListFHIRImportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Lists all FHIR import jobs associated with an account and their statuses.\n         </p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.healthlake#ListFHIRImportJobsRequest": {
      "type": "structure",
      "members": {
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the import job with the specified data store ID.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n            A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.\n         </p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.healthlake#MaxResultsInteger",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user.\n         </p>"
          }
        },
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the import job with the specified job name.\n         </p>"
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to the import job with the specified job status.\n         </p>"
          }
        },
        "SubmittedBefore": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to FHIR import jobs submitted before a user specified date.\n         </p>"
          }
        },
        "SubmittedAfter": {
          "target": "com.amazonaws.healthlake#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>\n            This parameter limits the response to FHIR import jobs submitted after a user specified date.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#ListFHIRImportJobsResponse": {
      "type": "structure",
      "members": {
        "ImportJobPropertiesList": {
          "target": "com.amazonaws.healthlake#ImportJobPropertiesList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.healthlake#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n            A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Returns a list of all existing tags associated with a data store.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.healthlake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>\n            The Amazon Resource Name(ARN) of the data store for which tags are being added.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.healthlake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            Returns a list of tags associated with a data store.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#MaxResultsInteger": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 500
        }
      }
    },
    "com.amazonaws.healthlake#Message": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$"
      }
    },
    "com.amazonaws.healthlake#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 8192
        },
        "smithy.api#pattern": "^\\p{ASCII}{0,8192}$"
      }
    },
    "com.amazonaws.healthlake#OutputDataConfig": {
      "type": "union",
      "members": {
        "S3Configuration": {
          "target": "com.amazonaws.healthlake#S3Configuration",
          "traits": {
            "smithy.api#documentation": "<p>\n            The output data configuration that was supplied when the export job was created.\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The output data configuration that was supplied when the export job was created.</p>"
      }
    },
    "com.amazonaws.healthlake#PreloadDataConfig": {
      "type": "structure",
      "members": {
        "PreloadDataType": {
          "target": "com.amazonaws.healthlake#PreloadDataType",
          "traits": {
            "smithy.api#documentation": "<p>The type of preloaded data. Only Synthea preloaded data is supported.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The input properties for the preloaded data store. Only data preloaded from Synthea is supported.</p>"
      }
    },
    "com.amazonaws.healthlake#PreloadDataType": {
      "type": "enum",
      "members": {
        "SYNTHEA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SYNTHEA"
          }
        }
      }
    },
    "com.amazonaws.healthlake#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The requested data store was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.healthlake#S3Configuration": {
      "type": "structure",
      "members": {
        "S3Uri": {
          "target": "com.amazonaws.healthlake#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>\n            The S3Uri is the user specified S3 location of the FHIR data to be imported into AWS HealthLake.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "KmsKeyId": {
          "target": "com.amazonaws.healthlake#EncryptionKeyID",
          "traits": {
            "smithy.api#documentation": "<p>\n            The KMS key ID used to access the S3 bucket.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The configuration of the S3 bucket for either an import or export job. This includes assigning permissions for access.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#S3Uri": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?$"
      }
    },
    "com.amazonaws.healthlake#SseConfiguration": {
      "type": "structure",
      "members": {
        "KmsEncryptionConfig": {
          "target": "com.amazonaws.healthlake#KmsEncryptionConfig",
          "traits": {
            "smithy.api#documentation": "<p>\n            The KMS encryption configuration used to provide details for data encryption.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The server-side encryption key configuration for a customer provided encryption key.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#StartFHIRExportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#StartFHIRExportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#StartFHIRExportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Begins a FHIR export job.</p>"
      }
    },
    "com.amazonaws.healthlake#StartFHIRExportJobRequest": {
      "type": "structure",
      "members": {
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>The user generated name for an export job.</p>"
          }
        },
        "OutputDataConfig": {
          "target": "com.amazonaws.healthlake#OutputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The output data configuration that was supplied when the export job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for the data store from which files are being exported for an export job.</p>",
            "smithy.api#required": {}
          }
        },
        "DataAccessRoleArn": {
          "target": "com.amazonaws.healthlake#IamRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name used during the initiation of the job.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.healthlake#ClientTokenString",
          "traits": {
            "smithy.api#documentation": "<p>An optional user provided token used for ensuring idempotency.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#StartFHIRExportJobResponse": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for an export job.</p>",
            "smithy.api#required": {}
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS generated ID for the data store from which files are being exported for an export job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#StartFHIRImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#StartFHIRImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#StartFHIRImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.healthlake#InternalServerException"
        },
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ThrottlingException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Begins a FHIR Import job.</p>"
      }
    },
    "com.amazonaws.healthlake#StartFHIRImportJobRequest": {
      "type": "structure",
      "members": {
        "JobName": {
          "target": "com.amazonaws.healthlake#JobName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the FHIR Import job in the StartFHIRImport job request.</p>"
          }
        },
        "InputDataConfig": {
          "target": "com.amazonaws.healthlake#InputDataConfig",
          "traits": {
            "smithy.api#documentation": "<p>The input properties of the FHIR Import job in the StartFHIRImport job request.</p>",
            "smithy.api#required": {}
          }
        },
        "JobOutputDataConfig": {
          "target": "com.amazonaws.healthlake#OutputDataConfig",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated data store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "DataAccessRoleArn": {
          "target": "com.amazonaws.healthlake#IamRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that gives AWS HealthLake access permission.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.healthlake#ClientTokenString",
          "traits": {
            "smithy.api#documentation": "<p>Optional user provided token used for ensuring idempotency.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#StartFHIRImportJobResponse": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.healthlake#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated job ID.</p>",
            "smithy.api#required": {}
          }
        },
        "JobStatus": {
          "target": "com.amazonaws.healthlake#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of an import job.</p>",
            "smithy.api#required": {}
          }
        },
        "DatastoreId": {
          "target": "com.amazonaws.healthlake#DatastoreId",
          "traits": {
            "smithy.api#documentation": "<p>The AWS-generated data store ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10000
        },
        "smithy.api#pattern": "^[\\P{M}\\p{M}]{0,10000}$"
      }
    },
    "com.amazonaws.healthlake#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.healthlake#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>\n            The key portion of a tag. Tag keys are case sensitive.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.healthlake#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>\n            The value portion of a tag. Tag values are case sensitive.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            A tag is a label consisting of a user-defined key and value. The form for tags is {\"Key\", \"Value\"}\n         </p>"
      }
    },
    "com.amazonaws.healthlake#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      }
    },
    "com.amazonaws.healthlake#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.healthlake#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.healthlake#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.healthlake#Tag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.healthlake#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Adds a user specified key and value tag to a data store.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.healthlake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>\n            The Amazon Resource Name(ARN)that gives AWS HealthLake access to the data store which tags are being added to.\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.healthlake#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The user specified key and value pair tags being added to a data store.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      }
    },
    "com.amazonaws.healthlake#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The user has exceeded their maximum number of allowed calls to the given API. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.healthlake#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.healthlake#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.healthlake#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.healthlake#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.healthlake#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.healthlake#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Removes tags from a data store.\n         </p>"
      }
    },
    "com.amazonaws.healthlake#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.healthlake#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name(ARN) of the data store for which tags are being removed.</p>",
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.healthlake#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The keys for the tags to be removed from the HealthLake data store.\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.healthlake#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.healthlake#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.healthlake#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The user input parameter was invalid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    }
  }
}
