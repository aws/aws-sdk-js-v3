{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.iotmanagedintegrations#AbortConfigCriteria": {
      "type": "structure",
      "members": {
        "Action": {
          "target": "com.amazonaws.iotmanagedintegrations#AbortCriteriaAction",
          "traits": {
            "smithy.api#documentation": "<p>The action taken by the abort configuration.</p>"
          }
        },
        "FailureType": {
          "target": "com.amazonaws.iotmanagedintegrations#AbortCriteriaFailureType",
          "traits": {
            "smithy.api#documentation": "<p>Over-the-air (OTA) task abort criteria failure type.</p>"
          }
        },
        "MinNumberOfExecutedThings": {
          "target": "com.amazonaws.iotmanagedintegrations#MinNumberOfExecutedThings",
          "traits": {
            "smithy.api#documentation": "<p>The minimum number of things that must receive task execution notifications before the task can be aborted.</p>"
          }
        },
        "ThresholdPercentage": {
          "target": "com.amazonaws.iotmanagedintegrations#ThresholdPercentage",
          "traits": {
            "smithy.api#documentation": "<p>The minimum percentage of over-the-air (OTA) task execution failures that must occur to initiate the last abort.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one abort config criteria.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AbortConfigCriteriaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#AbortConfigCriteria"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AbortCriteriaAction": {
      "type": "enum",
      "members": {
        "CANCEL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#AbortCriteriaFailureType": {
      "type": "enum",
      "members": {
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "REJECTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REJECTED"
          }
        },
        "TIMED_OUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TIMED_OUT"
          }
        },
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>User is not authorized.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 67,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:account-association/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 4096
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationErrorMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 4096
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationItem": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the account association.</p>",
            "smithy.api#required": {}
          }
        },
        "AssociationState": {
          "target": "com.amazonaws.iotmanagedintegrations#AssociationState",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The current state of the account association, indicating its status in the association lifecycle.</p>",
            "smithy.api#required": {}
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationErrorMessage",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The error message explaining any issues with the account association, if applicable.</p>"
          }
        },
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the connector destination associated with this account association.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationName",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The name of the account association.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>A description of the account association.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure containing information about an account association, including its identifier, state, and related metadata.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationItem"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AccountAssociationResource": {
      "type": "resource",
      "identifiers": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateAccountAssociation"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetAccountAssociation"
      },
      "update": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateAccountAssociation"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteAccountAssociation"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListAccountAssociations"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefresh"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "account-association/{AccountAssociationId}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "AccountAssociation"
        },
        "aws.iam#iamResource": {
          "name": "account-association"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ActionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[/a-zA-Z0-9\\._ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ActionReference": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-zA-Z.]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ActionTraceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 16,
          "max": 20
        },
        "smithy.api#pattern": "^[a-zA-Z0-9]+=(?:_[0-9]+)?$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AdvertisedProductId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 5,
          "max": 5
        },
        "smithy.api#pattern": "^([A-Za-z0-9!#$%&()*\\+\\-;<=>?@^_`{|}~])+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AssociationState": {
      "type": "enum",
      "members": {
        "ASSOCIATION_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ASSOCIATION_IN_PROGRESS"
          }
        },
        "ASSOCIATION_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ASSOCIATION_FAILED"
          }
        },
        "ASSOCIATION_SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ASSOCIATION_SUCCEEDED"
          }
        },
        "ASSOCIATION_DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ASSOCIATION_DELETING"
          }
        },
        "REFRESH_TOKEN_EXPIRED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REFRESH_TOKEN_EXPIRED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#AttributeName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 128
        },
        "smithy.api#pattern": "[a-zA-Z0-9_.,@/:#-]+"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AttributeValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 800
        },
        "smithy.api#pattern": "[a-zA-Z0-9_.,@/:#-]*"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthConfig": {
      "type": "structure",
      "members": {
        "oAuth": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthConfig",
          "traits": {
            "smithy.api#documentation": "<p>The OAuth configuration settings used for authentication with the third-party service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The authentication configuration details for a connector destination, including OAuth settings and other authentication parameters.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthConfigUpdate": {
      "type": "structure",
      "members": {
        "oAuthUpdate": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthUpdate",
          "traits": {
            "smithy.api#documentation": "<p>The updated OAuth configuration settings for the authentication configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The updated authentication configuration details for a connector destination.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthMaterialString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[0-9A-Za-z!#$%&()*\\+\\-;<=>?@^_`{|}~\\/: {},\\\\\"]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthMaterialType": {
      "type": "enum",
      "members": {
        "CUSTOM_PROTOCOL_QR_BAR_CODE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOM_PROTOCOL_QR_BAR_CODE"
          }
        },
        "WIFI_SETUP_QR_BAR_CODE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WIFI_SETUP_QR_BAR_CODE"
          }
        },
        "ZWAVE_QR_BAR_CODE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZWAVE_QR_BAR_CODE"
          }
        },
        "ZIGBEE_QR_BAR_CODE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZIGBEE_QR_BAR_CODE"
          }
        },
        "DISCOVERED_DEVICE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISCOVERED_DEVICE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthType": {
      "type": "enum",
      "members": {
        "OAUTH": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OAUTH"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#AuthUrl": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#BaseRatePerMinute": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#Brand": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CaCertificate": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^-----BEGIN CERTIFICATE-----.*(.|\\n)*-----END CERTIFICATE-----\\n?$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#Capabilities": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 65535
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\s'\\x{0022},.:\\\\\\/{$}\\[\\]=_\\-\\+]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityAction": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityActionName",
          "traits": {
            "smithy.api#documentation": "<p>Describe a capability action with a name.</p>",
            "smithy.api#required": {}
          }
        },
        "ref": {
          "target": "com.amazonaws.iotmanagedintegrations#ActionReference",
          "traits": {
            "smithy.api#documentation": "<p>Describe a capability action with an reference.</p>"
          }
        },
        "actionTraceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ActionTraceId",
          "traits": {
            "smithy.api#documentation": "<p>Describe a capability action with an <code>actionTraceId</code> for a response command.</p>"
          }
        },
        "parameters": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityProperties",
          "traits": {
            "smithy.api#documentation": "<p>Describe a capability action with a capability property.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Action for an Amazon Web Services capability, containing the action parameters for control.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityActionName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[/a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityActions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CapabilityAction"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9./]+(@\\d+\\.\\d+)?$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[/a-zA-Z0-9\\._ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityProperties": {
      "type": "document",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReport": {
      "type": "structure",
      "members": {
        "version": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "nodeId": {
          "target": "com.amazonaws.iotmanagedintegrations#NodeId",
          "traits": {
            "smithy.api#documentation": "<p>The numeric identifier of the node.</p>"
          }
        },
        "endpoints": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportEndpoints",
          "traits": {
            "smithy.api#documentation": "<p>The endpoints used in the capability report.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Report of all capabilities supported by the device.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportActions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ActionName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportCapabilities": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportCapability"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 40
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportCapability": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the schema version.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the capability.</p>",
            "smithy.api#required": {}
          }
        },
        "version": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the capability.</p>",
            "smithy.api#required": {}
          }
        },
        "properties": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportProperties",
          "traits": {
            "smithy.api#documentation": "<p>The capability properties used in the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "actions": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportActions",
          "traits": {
            "smithy.api#documentation": "<p>The capability actions used in the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "events": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportEvents",
          "traits": {
            "smithy.api#documentation": "<p>The capability events used in the capability report.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The capability used in capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportEndpoint": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the endpoint used in the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceTypes": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceTypes",
          "traits": {
            "smithy.api#documentation": "<p>The type of device.</p>",
            "smithy.api#required": {}
          }
        },
        "capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>The capabilities used in the capability report.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The endpoint used in the capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportEndpoints": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportEndpoint"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 40
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#EventName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportProperties": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#PropertyName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityReportVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        },
        "smithy.api#pattern": "^1\\.0\\.0$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilitySchemaItem": {
      "type": "structure",
      "members": {
        "Format": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the capability schema, which defines how the schema is structured and interpreted.</p>",
            "smithy.api#required": {}
          }
        },
        "CapabilityId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the capability defined in the schema.</p>",
            "smithy.api#required": {}
          }
        },
        "ExtrinsicId": {
          "target": "com.amazonaws.iotmanagedintegrations#ExtrinsicSchemaId",
          "traits": {
            "smithy.api#documentation": "<p>The external identifier for the capability, used when referencing the capability outside of the AWS ecosystem.</p>",
            "smithy.api#required": {}
          }
        },
        "ExtrinsicVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportClusterRevisionId",
          "traits": {
            "smithy.api#documentation": "<p>The version of the external capability definition, used to track compatibility with external systems.</p>",
            "smithy.api#required": {}
          }
        },
        "Schema": {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationSchema",
          "traits": {
            "smithy.api#documentation": "<p>The actual schema definition that describes the capability's properties, actions, and events.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing a capability schema item that defines the functionality and features supported by a managed thing.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilitySchemas": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CapabilitySchemaItem"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 40
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CapabilityVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^(0|[1-9][0-9]*)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ClaimCertificate": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ClaimCertificatePrivateKey": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#Classification": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CloudConnectorDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[0-9A-Za-z_\\- ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CloudConnectorId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CloudConnectorResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCloudConnector"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCloudConnector"
      },
      "update": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateCloudConnector"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteCloudConnector"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCloudConnectors"
      },
      "traits": {
        "aws.api#arn": {
          "template": "cloud-connector/{Identifier}"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CloudConnectorType": {
      "type": "enum",
      "members": {
        "LISTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LISTED"
          }
        },
        "UNLISTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNLISTED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ClusterId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 24
        },
        "smithy.api#pattern": "^0[xX][0-9a-fA-F]+$|^[0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CommandCapabilities": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CommandCapability"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CommandCapability": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>Describe the capability with an id.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityName",
          "traits": {
            "smithy.api#documentation": "<p>Describe the capability with an name.</p>",
            "smithy.api#required": {}
          }
        },
        "version": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityVersion",
          "traits": {
            "smithy.api#documentation": "<p>Describe the capability with a version.</p>",
            "smithy.api#required": {}
          }
        },
        "actions": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityActions",
          "traits": {
            "smithy.api#documentation": "<p>Describe the command capability with the actions it supports.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The command capabilities added for the managed thing</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CommandEndpoint": {
      "type": "structure",
      "members": {
        "endpointId": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the endpoint for a managed thing.</p>",
            "smithy.api#required": {}
          }
        },
        "capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#CommandCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>Describe the endpoint with an id, a name, and the relevant capabilities for sending commands.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The endpoint for a managed thing when sending a command.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CommandEndpoints": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CommandEndpoint"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConfigurationError": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>The error code returned when the default encryption configuration update fails.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message returned when the default encryption configuration update fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides the default encryption configuration error update details.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConfigurationErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConfigurationErrorMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 65535
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-._,]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConfigurationState": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_IN_PROGRESS"
          }
        },
        "UPDATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_FAILED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConfigurationStatus": {
      "type": "structure",
      "members": {
        "error": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationError",
          "traits": {
            "smithy.api#documentation": "<p>The error details describing a failed default encryption configuration update.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationState",
          "traits": {
            "smithy.api#documentation": "<p>The status state describing the default encryption configuration update.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>There is a conflict with the request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectivityStatus": {
      "type": "boolean"
    },
    "com.amazonaws.iotmanagedintegrations#ConnectivityTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorAssociationId": {
      "type": "string",
      "traits": {
        "smithy.api#deprecated": {
          "message": "ConnectorAssociationId is deprecated",
          "since": "2025-06-25"
        },
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[0-9A-Za-z_\\- ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateConnectorDestination"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetConnectorDestination"
      },
      "update": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateConnectorDestination"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteConnectorDestination"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListConnectorDestinations"
      },
      "traits": {
        "aws.api#arn": {
          "template": "connector-destination/{Identifier}"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDestinationSummary": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the connector destination.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the connector destination.</p>"
          }
        },
        "CloudConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the cloud connector associated with this connector destination.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the connector destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure containing summary information about a connector destination, which defines how a cloud-to-cloud connector connects to a customer's AWS account.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_.,@-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorDeviceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}\\p{N} ._-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorEventMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\sa-zA-Z0-9_.,@-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorEventOperation": {
      "type": "enum",
      "members": {
        "DEVICE_COMMAND_RESPONSE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_COMMAND_RESPONSE"
          }
        },
        "DEVICE_DISCOVERY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_DISCOVERY"
          }
        },
        "DEVICE_EVENT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_EVENT"
          }
        },
        "DEVICE_COMMAND_REQUEST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_COMMAND_REQUEST"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorEventOperationVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 6
        },
        "smithy.api#pattern": "^[0-9.]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorEventStatusCode": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 100,
          "max": 550
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorItem": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the C2C connector.</p>",
            "smithy.api#required": {}
          }
        },
        "EndpointConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>The configuration details for the cloud connector endpoint, including connection parameters and authentication requirements.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the C2C connector.</p>"
          }
        },
        "EndpointType": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The type of endpoint used for the C2C connector.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorType",
          "traits": {
            "smithy.api#documentation": "<p>The type of cloud connector created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing a connector.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ConnectorItem"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ConnectorPolicyId": {
      "type": "string",
      "traits": {
        "smithy.api#deprecated": {
          "message": "ConnectorPolicyId is deprecated",
          "since": "2025-06-25"
        },
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateAccountAssociationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateAccountAssociationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new account association via the destination id.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/account-associations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The identifier of the connector destination.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the destination for the new account association.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A description of the account association request.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateAccountAssociationResponse": {
      "type": "structure",
      "members": {
        "OAuthAuthorizationUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthAuthorizationUrl",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>Third-party IoT platform OAuth authorization server URL backed with all the required parameters to perform end-user authentication.</p>",
            "smithy.api#required": {}
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier for the account association request.</p>",
            "smithy.api#required": {}
          }
        },
        "AssociationState": {
          "target": "com.amazonaws.iotmanagedintegrations#AssociationState",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The current state of the account association request.</p>",
            "smithy.api#required": {}
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCloudConnector": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCloudConnectorRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCloudConnectorResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a C2C (cloud-to-cloud) connector.</p>",
        "smithy.api#examples": [
          {
            "title": "CreateCloudConnector happy path for TP Link",
            "input": {
              "Name": "Connector for TP Link Cloud",
              "EndpointType": "LAMBDA",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              },
              "ClientToken": "1234567890"
            },
            "output": {
              "Id": "TPLinkConnector1211"
            }
          },
          {
            "title": "CreateCloudConnector happy path for Ring",
            "input": {
              "Name": "Connector for Ring Cloud",
              "EndpointType": "LAMBDA",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              },
              "ClientToken": "12312321"
            },
            "output": {
              "Id": "RingConnector1212"
            }
          },
          {
            "title": "CreateCloudConnector error path for Ring connector which already exists",
            "input": {
              "Name": "Connector for Ring Cloud",
              "EndpointType": "LAMBDA",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion2"
                }
              },
              "ClientToken": "1213123123"
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#ConflictException",
              "content": {
                "Message": "Connector Resource already exists"
              }
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "POST",
          "uri": "/cloud-connectors",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCloudConnectorRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the C2C connector.</p>",
            "smithy.api#required": {}
          }
        },
        "EndpointConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>The configuration details for the cloud connector endpoint, including connection parameters and authentication requirements.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the C2C connector.</p>"
          }
        },
        "EndpointType": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The type of endpoint used for the cloud connector, which defines how the connector communicates with external services.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCloudConnectorResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier assigned to the newly created cloud connector.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateConnectorDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateConnectorDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateConnectorDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create a connector destination for connecting a cloud-to-cloud (C2C) connector to the customer's Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/connector-destinations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateConnectorDestinationRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the connector destination.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the connector destination.</p>"
          }
        },
        "CloudConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector.</p>",
            "smithy.api#required": {}
          }
        },
        "AuthType": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthType",
          "traits": {
            "smithy.api#documentation": "<p>The authentication type used for the connector destination, which determines how credentials and access are managed.</p>",
            "smithy.api#required": {}
          }
        },
        "AuthConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthConfig",
          "traits": {
            "smithy.api#documentation": "<p>The authentication configuration details for the connector destination, including OAuth settings and other authentication parameters.</p>",
            "smithy.api#required": {}
          }
        },
        "SecretsManager": {
          "target": "com.amazonaws.iotmanagedintegrations#SecretsManager",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Secrets Manager configuration used to securely store and manage sensitive information for the connector destination.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateConnectorDestinationResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector destination creation request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCredentialLocker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCredentialLockerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCredentialLockerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create a product credential locker. This operation will trigger the creation of all the manufacturing resources including the Wi-Fi setup key pair and device certificate.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/credential-lockers",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCredentialLockerRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the credential locker.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the credential locker.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateCredentialLockerResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the credential locker creation request.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the credential locker.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerCreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestamp value of when the credential locker request occurred.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Create a destination. IoT managed integrations uses the destination to determine where to deliver notifications for a device. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/destinations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateDestinationRequest": {
      "type": "structure",
      "members": {
        "DeliveryDestinationArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>",
            "smithy.api#required": {}
          }
        },
        "DeliveryDestinationType": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationType",
          "traits": {
            "smithy.api#documentation": "<p>The destination type for the customer-managed destination.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>",
            "smithy.api#required": {}
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the customer-managed destination.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags have been deprecated from this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateDestinationResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateEventLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateEventLogConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateEventLogConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Set the event log configuration for the account, resource type, or specific resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/event-log-configurations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateEventLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "ResourceType": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of resource for the event log configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "ResourceId": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource for the event log configuration.</p>"
          }
        },
        "EventLogLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The logging level for the event log configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateEventLogConfigurationResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event log configuration request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateManagedThing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateManagedThingRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateManagedThingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a managed thing. A managed thing contains the device identifier, protocol supported, and capabilities of the device in a protocol-specific format.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/managed-things",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateManagedThingRequest": {
      "type": "structure",
      "members": {
        "Role": {
          "target": "com.amazonaws.iotmanagedintegrations#Role",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The type of device used. This will be the hub controller, cloud device, or AWS IoT device.</p>",
            "smithy.api#required": {}
          }
        },
        "Owner": {
          "target": "com.amazonaws.iotmanagedintegrations#Owner",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>"
          }
        },
        "CredentialLockerId": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The identifier of the credential for the managed thing.</p>"
          }
        },
        "AuthenticationMaterial": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthMaterialString",
          "traits": {
            "aws.cloudformation#cfnMutability": "create",
            "smithy.api#documentation": "<p>The authentication material defining the device connectivity setup requests. The authentication materials used are the device bar code.</p>",
            "smithy.api#required": {}
          }
        },
        "AuthenticationMaterialType": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthMaterialType",
          "traits": {
            "aws.cloudformation#cfnMutability": "create",
            "smithy.api#documentation": "<p>The type of authentication material used for device connectivity setup requests.</p>",
            "smithy.api#required": {}
          }
        },
        "SerialNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#SerialNumber",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The serial number of the device.</p>"
          }
        },
        "Brand": {
          "target": "com.amazonaws.iotmanagedintegrations#Brand",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The brand of the device.</p>"
          }
        },
        "Model": {
          "target": "com.amazonaws.iotmanagedintegrations#Model",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The model of the device.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#Name",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the managed thing representing the physical device.</p>"
          }
        },
        "CapabilityReport": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReport",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A report of the capabilities for the managed thing.</p>"
          }
        },
        "CapabilitySchemas": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilitySchemas",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The capability schemas that define the functionality and features supported by the managed thing, including device capabilities and their associated properties.</p>"
          }
        },
        "Capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#Capabilities",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The capabilities of the device such as light bulb.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Classification": {
          "target": "com.amazonaws.iotmanagedintegrations#Classification",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The classification of the managed thing such as light bulb or thermostat.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the managed thing.</p>"
          }
        },
        "MetaData": {
          "target": "com.amazonaws.iotmanagedintegrations#MetaData",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The metadata for the managed thing.</p> <note> <p>The <code>managedThing</code> <code>metadata</code> parameter is used for associating attributes with a <code>managedThing</code> that can be used for grouping over-the-air (OTA) tasks. Name value pairs in <code>metadata</code> can be used in the <code>OtaTargetQueryString</code> parameter for the <code>CreateOtaTask</code> API operation.</p> </note>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateManagedThingResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the managed thing.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the managed thing.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestamp value of when the device creation request occurred.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateNotificationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateNotificationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a notification configuration. A configuration is a connection between an event type and a destination that you have already created. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/notification-configurations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>",
            "smithy.api#required": {}
          }
        },
        "DestinationName": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination for the notification configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags has been deprecated from this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the notification configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateNotificationConfigurationResponse": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create an over-the-air (OTA) task to update a device.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ota-tasks",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create a configuraiton for the over-the-air (OTA) task.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ota-task-configurations",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfigurationRequest": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the over-the-air (OTA) task configuration.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the over-the-air (OTA) task.</p>"
          }
        },
        "PushConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#PushConfig",
          "traits": {
            "smithy.api#documentation": "<p>Describes the type of configuration used for the over-the-air (OTA) task.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfigurationResponse": {
      "type": "structure",
      "members": {
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the over-the-air (OTA) task configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTaskRequest": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the over-the-air (OTA) task.</p>"
          }
        },
        "S3Url": {
          "target": "com.amazonaws.iotmanagedintegrations#S3Url",
          "traits": {
            "smithy.api#documentation": "<p>The URL to the Amazon S3 bucket where the over-the-air (OTA) task is stored.</p>",
            "smithy.api#required": {}
          }
        },
        "Protocol": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The connection protocol the over-the-air (OTA) task uses to update the device.</p>"
          }
        },
        "Target": {
          "target": "com.amazonaws.iotmanagedintegrations#Target",
          "traits": {
            "smithy.api#documentation": "<p>The device targeted for the over-the-air (OTA) task.</p>"
          }
        },
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the over-the-air (OTA) task configuration.</p>"
          }
        },
        "OtaMechanism": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaMechanism",
          "traits": {
            "smithy.api#documentation": "<p>The deployment mechanism for the over-the-air (OTA) task.</p>"
          }
        },
        "OtaType": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaType",
          "traits": {
            "smithy.api#documentation": "<p>The frequency type for the over-the-air (OTA) task.</p>",
            "smithy.api#required": {}
          }
        },
        "OtaTargetQueryString": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTargetQueryString",
          "traits": {
            "smithy.api#documentation": "<p>The query string to add things to the thing group.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "OtaSchedulingConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskSchedulingConfig"
        },
        "OtaTaskExecutionRetryConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionRetryConfig"
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateOtaTaskResponse": {
      "type": "structure",
      "members": {
        "TaskId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the over-the-air (OTA) task.</p>"
          }
        },
        "TaskArn": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create a provisioning profile for a device to execute the provisioning flows using a provisioning template. The provisioning template is a document that defines the set of resources and policies applied to a device during the provisioning process.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/provisioning-profiles",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfileRequest": {
      "type": "structure",
      "members": {
        "ProvisioningType": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningType",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>",
            "smithy.api#required": {}
          }
        },
        "CaCertificate": {
          "target": "com.amazonaws.iotmanagedintegrations#CaCertificate",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The id of the certificate authority (CA) certificate.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileName",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The name of the provisioning template.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the provisioning profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfileResponse": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the provisioning template.</p>"
          }
        },
        "ProvisioningType": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningType",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the provisioning profile.</p>"
          }
        },
        "ClaimCertificate": {
          "target": "com.amazonaws.iotmanagedintegrations#ClaimCertificate",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the claim certificate.</p>"
          }
        },
        "ClaimCertificatePrivateKey": {
          "target": "com.amazonaws.iotmanagedintegrations#ClaimCertificatePrivateKey",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The private key of the claim certificate. This is stored securely on the device for validating the connection endpoint with IoT managed integrations using the public key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CreatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazon.services.iotsmarthomeservice#IotSmartHomeService",
          "resource": "com.amazonaws.iotmanagedintegrations#CredentialLockerResource"
        },
        "smithy.api#length": {
          "min": 32,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:credential-locker/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerCreatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9]*$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateCredentialLocker"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCredentialLocker"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteCredentialLocker"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCredentialLockers"
      },
      "traits": {
        "aws.api#arn": {
          "template": "credential-locker/{Identifier}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "CredentialLocker"
        },
        "aws.iam#iamResource": {
          "name": "credential-locker"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CredentialLockerSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the credential locker.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the credential locker.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the credential locker.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerCreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestampe value of when the credential locker was created at.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing one Credential Locker.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CustomProtocolDetail": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iotmanagedintegrations#CustomProtocolDetailKey"
      },
      "value": {
        "target": "com.amazonaws.iotmanagedintegrations#CustomProtocolDetailValue"
      },
      "traits": {
        "smithy.api#length": {
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#CustomProtocolDetailKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[a-zA-Z0-9 _.-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#CustomProtocolDetailValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[a-zA-Z0-9 _.{}:\"-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteAccountAssociationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Remove a third party account and related devices from an end user.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/account-associations/{AccountAssociationId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the account association to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteCloudConnector": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteCloudConnectorRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a cloud connector.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/cloud-connectors/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteCloudConnectorRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the cloud connector.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteConnectorDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteConnectorDestinationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a connector destination for connecting a cloud-to-cloud (C2C) connector to the customer's Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/connector-destinations/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteConnectorDestinationRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the connector destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteCredentialLocker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteCredentialLockerRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a credential locker. </p> <note> <p>This operation can't be undone and any existing device won't be able to use IoT managed integrations.</p> </note>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/credential-lockers/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteCredentialLockerRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the credential locker.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteDestinationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a customer-managed destination specified by id. </p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/destinations/{Name}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteDestinationRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The id of the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteEventLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteEventLogConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete an event log configuration.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/event-log-configurations/{Id}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteEventLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event log configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteLocalStoreAfterUpload": {
      "type": "boolean"
    },
    "com.amazonaws.iotmanagedintegrations#DeleteManagedThing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteManagedThingRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a managed thing. If a controller is deleted, all of the devices connected to it will have their status changed to <code>PENDING</code>. It is not possible to remove a cloud device.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/managed-things/{Identifier}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteManagedThingRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Force": {
          "target": "smithy.api#Boolean",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>When set to <code>TRUE</code>, a forceful deteletion of the managed thing will occur. When set to <code>FALSE</code>, a non-forceful deletion of the managed thing will occur.</p>",
            "smithy.api#httpQuery": "Force"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteNotificationConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a notification configuration. </p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/notification-configurations/{EventType}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteOtaTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete the over-the-air (OTA) task.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/ota-tasks/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete the over-the-air (OTA) task configuration.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/ota-task-configurations/{Identifier}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskConfigurationRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the over-the-air (OTA) task configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the over-the-air (OTA) task.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteProvisioningProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteProvisioningProfileRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Delete a provisioning profile.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/provisioning-profiles/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeleteProvisioningProfileRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The name of the provisioning template.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeliveryDestinationArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:aws:[0-9a-zA-Z]+:[0-9a-zA-Z-]+:[0-9]+:[0-9a-zA-Z]+/[0-9a-zA-Z._-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeliveryDestinationRoleArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::IAM::Role"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeliveryDestinationType": {
      "type": "enum",
      "members": {
        "KINESIS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "KINESIS"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeregisterAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#DeregisterAccountAssociationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deregisters an account association, removing the connection between a managed thing and a third-party account.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/managed-thing-associations/deregister",
          "code": 200
        },
        "smithy.api#idempotent": {},
        "smithy.test#smokeTests": [
          {
            "id": "DeregisterAccountAssociationSuccess",
            "params": {
              "ManagedThingId": "mt-12345abcdef",
              "AccountAssociationId": "aa167890wxyz"
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "DeregisterAccountAssociationInvalidAssociationId",
            "params": {
              "ManagedThingId": "mt-12345abcdef",
              "AccountAssociationId": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeregisterAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing to be deregistered from the account association.</p>",
            "smithy.api#required": {}
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the account association to be deregistered.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "Request for deregister a managed thing from account association",
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationCreatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#DestinationDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[0-9A-Za-z_\\- ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#DestinationSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}\\p{N} ._-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#CreateDestination"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeleteDestination"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetDestination"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListDestinations"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UpdateDestination"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "destinations"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationSummary": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the customer-managed destination.</p>"
          }
        },
        "DeliveryDestinationArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>"
          }
        },
        "DeliveryDestinationType": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationType",
          "traits": {
            "smithy.api#documentation": "<p>The destination type for the customer-managed destination.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the delivery destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing a destination for IoT managed integrations to deliver notifications for a device.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DestinationUpdatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#Device": {
      "type": "structure",
      "members": {
        "ConnectorDeviceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "smithy.api#documentation": "<p>The device id as defined by the connector.</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>",
            "smithy.api#required": {}
          }
        },
        "ConnectorDeviceName": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the device as defined by the connector.</p>"
          }
        },
        "CapabilityReport": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReport",
          "traits": {
            "smithy.api#documentation": "<p>The capability report for the device.</p>",
            "smithy.api#required": {}
          }
        },
        "CapabilitySchemas": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilitySchemas",
          "traits": {
            "smithy.api#documentation": "<p>Report of all capabilities supported by the device.</p>"
          }
        },
        "DeviceMetadata": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceMetadata",
          "traits": {
            "smithy.api#documentation": "<p>The metadata attributes for a device.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describe the device using the relevant metadata and supported clusters for device discovery.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:device-discovery/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^[A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoverySummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#StartDeviceDiscovery"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDeviceDiscovery"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveries"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevices"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryStatus": {
      "type": "enum",
      "members": {
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        },
        "SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCEEDED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "TIMED_OUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TIMED_OUT"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceDiscoverySummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the device discovery job.</p>"
          }
        },
        "DiscoveryType": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryType",
          "traits": {
            "smithy.api#documentation": "<p>The type of discovery process used to find devices.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the device discovery job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure containing summary information about a device discovery job, including its identifier, type, and status.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceMetadata": {
      "type": "document"
    },
    "com.amazonaws.iotmanagedintegrations#DeviceSpecificKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_.,@\\+\\-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 256
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_. ,@\\+\\-/]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#DeviceType"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DeviceTypes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#DeviceType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#Devices": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#Device"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DisconnectReasonValue": {
      "type": "enum",
      "members": {
        "AUTH_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AUTH_ERROR"
          }
        },
        "CLIENT_INITIATED_DISCONNECT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CLIENT_INITIATED_DISCONNECT"
          }
        },
        "CLIENT_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CLIENT_ERROR"
          }
        },
        "CONNECTION_LOST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONNECTION_LOST"
          }
        },
        "DUPLICATE_CLIENTID": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DUPLICATE_CLIENTID"
          }
        },
        "FORBIDDEN_ACCESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FORBIDDEN_ACCESS"
          }
        },
        "MQTT_KEEP_ALIVE_TIMEOUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MQTT_KEEP_ALIVE_TIMEOUT"
          }
        },
        "SERVER_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SERVER_ERROR"
          }
        },
        "SERVER_INITIATED_DISCONNECT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SERVER_INITIATED_DISCONNECT"
          }
        },
        "THROTTLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "THROTTLED"
          }
        },
        "WEBSOCKET_TTL_EXPIRATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WEBSOCKET_TTL_EXPIRATION"
          }
        },
        "CUSTOMAUTH_TTL_EXPIRATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOMAUTH_TTL_EXPIRATION"
          }
        },
        "UNKNOWN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNKNOWN"
          }
        },
        "NONE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NONE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveredAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveredDeviceListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#DiscoveredDeviceSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveredDeviceSummary": {
      "type": "structure",
      "members": {
        "ConnectorDeviceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "smithy.api#documentation": "<p>The third-party device identifier as defined by the connector. This identifier must not contain personal identifiable information (PII).</p>"
          }
        },
        "ConnectorDeviceName": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the device as defined by the connector or third-party system.</p>"
          }
        },
        "DeviceTypes": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The list of device types or categories that the discovered device belongs to.</p>"
          }
        },
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing created for this discovered device, if one exists.</p>"
          }
        },
        "Modification": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryModification",
          "traits": {
            "smithy.api#documentation": "<p>The status of the discovered device, indicating whether it has been added, removed, or modified since the last discovery.</p>"
          }
        },
        "DiscoveredAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveredAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp indicating when the device was discovered.</p>"
          }
        },
        "Brand": {
          "target": "com.amazonaws.iotmanagedintegrations#Brand",
          "traits": {
            "smithy.api#documentation": "<p>The brand of the discovered device.</p>"
          }
        },
        "Model": {
          "target": "com.amazonaws.iotmanagedintegrations#Model",
          "traits": {
            "smithy.api#documentation": "<p>The model of the discovered device.</p>"
          }
        },
        "AuthenticationMaterial": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthMaterialString",
          "traits": {
            "smithy.api#documentation": "<p>The authentication material required for connecting to the discovered device, such as credentials or tokens.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure containing summary information about a device discovered during a device discovery job.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryAuthMaterialString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9A-Za-z_\\-\\+=\\/:; ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryAuthMaterialType": {
      "type": "enum",
      "members": {
        "ZWAVE_INSTALL_CODE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZWAVE_INSTALL_CODE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryFinishedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryModification": {
      "type": "enum",
      "members": {
        "DISCOVERED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISCOVERED"
          }
        },
        "UPDATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATED"
          }
        },
        "NO_CHANGE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NO_CHANGE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryStartedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#DiscoveryType": {
      "type": "enum",
      "members": {
        "ZWAVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZWAVE"
          }
        },
        "ZIGBEE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZIGBEE"
          }
        },
        "CLOUD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CLOUD"
          }
        },
        "CUSTOM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOM"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#DisplayName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#DurationInMinutes": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1430
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#EncryptionType": {
      "type": "enum",
      "members": {
        "MANAGED_INTEGRATIONS_DEFAULT_ENCRYPTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MANAGED_INTEGRATIONS_DEFAULT_ENCRYPTION"
          }
        },
        "CUSTOMER_KEY_ENCRYPTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOMER_KEY_ENCRYPTION"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#EndTime": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#EndpointAddress": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[A-Za-z0-9._@-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EndpointConfig": {
      "type": "structure",
      "members": {
        "lambda": {
          "target": "com.amazonaws.iotmanagedintegrations#LambdaConfig",
          "traits": {
            "smithy.api#documentation": "<p>The Lambda function configuration for the endpoint, used when the endpoint communicates through an AWS Lambda function.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration details for an endpoint, which defines how to connect to and communicate with external services.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EndpointId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EndpointSemanticTag": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[0-9a-zA-Z._-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EndpointType": {
      "type": "enum",
      "members": {
        "LAMBDA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAMBDA"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#ErrorResourceId": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#ErrorResourceType": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#EventLogConfigurationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#EventLogConfigurationSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EventLogConfigurationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#CreateEventLogConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeleteEventLogConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetEventLogConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurations"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UpdateEventLogConfiguration"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#EventLogConfigurationSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event log configuration.</p>"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of resource for the event log configuration.</p>"
          }
        },
        "ResourceId": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource for the event log configuration.</p>"
          }
        },
        "EventLogLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The logging level for the event log configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>List of event log configurations.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EventName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[/a-zA-Z0-9\\._ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#EventType": {
      "type": "enum",
      "members": {
        "DEVICE_COMMAND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_COMMAND"
          }
        },
        "DEVICE_COMMAND_REQUEST": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_COMMAND_REQUEST"
          }
        },
        "DEVICE_DISCOVERY_STATUS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_DISCOVERY_STATUS"
          }
        },
        "DEVICE_EVENT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_EVENT"
          }
        },
        "DEVICE_LIFE_CYCLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_LIFE_CYCLE"
          }
        },
        "DEVICE_STATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_STATE"
          }
        },
        "DEVICE_OTA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE_OTA"
          }
        },
        "CONNECTOR_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#deprecated": {
              "message": "CONNECTOR_ASSOCIATION is deprecated",
              "since": "2025-06-25"
            },
            "smithy.api#enumValue": "CONNECTOR_ASSOCIATION"
          }
        },
        "ACCOUNT_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACCOUNT_ASSOCIATION"
          }
        },
        "CONNECTOR_ERROR_REPORT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONNECTOR_ERROR_REPORT"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ExecutionNumber": {
      "type": "long"
    },
    "com.amazonaws.iotmanagedintegrations#ExponentialRolloutRate": {
      "type": "structure",
      "members": {
        "BaseRatePerMinute": {
          "target": "com.amazonaws.iotmanagedintegrations#BaseRatePerMinute",
          "traits": {
            "smithy.api#documentation": "<p>The base rate per minute for the rollout of an over-the-air (OTA) task.</p>"
          }
        },
        "IncrementFactor": {
          "target": "com.amazonaws.iotmanagedintegrations#IncrementFactor",
          "traits": {
            "smithy.api#documentation": "<p>The incremental factor for increasing the rollout rate of an over-the-air (OTA) task.</p>"
          }
        },
        "RateIncreaseCriteria": {
          "target": "com.amazonaws.iotmanagedintegrations#RolloutRateIncreaseCriteria",
          "traits": {
            "smithy.api#documentation": "<p>The criteria for increasing the rollout rate of an over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing exponential rate of rollout for an over-the-air (OTA) task.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ExtrinsicSchemaId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        },
        "smithy.api#pattern": "^0[xX][0-9a-fA-F]+$|^[0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetAccountAssociationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetAccountAssociationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get an account association for an Amazon Web Services account linked to a customer-managed destination.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/account-associations/{AccountAssociationId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetAccountAssociationNotFound",
            "params": {
              "AccountAssociationId": "abc123def456"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the account association to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetAccountAssociationResponse": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the retrieved account association.</p>",
            "smithy.api#required": {}
          }
        },
        "AssociationState": {
          "target": "com.amazonaws.iotmanagedintegrations#AssociationState",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The current status state for the account association.</p>",
            "smithy.api#required": {}
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationErrorMessage",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The error message explaining the current account association error.</p>"
          }
        },
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the connector destination associated with this account association.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationName",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The name of the account association.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The description of the account association.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the account association.</p>"
          }
        },
        "OAuthAuthorizationUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthAuthorizationUrl",
          "traits": {
            "smithy.api#documentation": "<p>Third party IoT platform OAuth authorization server URL backed with all the required parameters to perform end-user authentication.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCloudConnector": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCloudConnectorRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCloudConnectorResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets all the information about a connector for a connector developer.</p>",
        "smithy.api#examples": [
          {
            "title": "GetCloudConnector happy path for TP Link to get connector resource",
            "input": {
              "Identifier": "123456789012"
            },
            "output": {
              "Name": "Connector for TP Link Cloud V2",
              "Id": "123456789012",
              "EndpointType": "LAMBDA",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              }
            }
          },
          {
            "title": "GetCloudConnector happy path for Ring to pending status",
            "input": {
              "Identifier": "123456789012"
            },
            "output": {
              "Name": "Connector for Ring Cloud",
              "EndpointConfig": {
                "lambda": {
                  "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                }
              }
            }
          },
          {
            "title": "GetCloudConnector error Id for Ring connector which does not exist",
            "input": {
              "Identifier": "123456789012"
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException",
              "content": {
                "Message": "Connector Resource does not exists",
                "ResourceId": "123456789012",
                "ResourceType": "CloudConnector"
              }
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "GET",
          "uri": "/cloud-connectors/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetCloudConnectorNotFound",
            "params": {
              "Identifier": "123456789012"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCloudConnectorRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCloudConnectorResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the C2C connector.</p>",
            "smithy.api#required": {}
          }
        },
        "EndpointConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>The configuration details for the cloud connector endpoint, including connection parameters and authentication requirements.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the C2C connector.</p>"
          }
        },
        "EndpointType": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The type of endpoint used for the cloud connector, which defines how the connector communicates with external services.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the cloud connector.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorType",
          "traits": {
            "smithy.api#documentation": "<p>The type of cloud connector created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetConnectorDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetConnectorDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetConnectorDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get a connector destination of a cloud-to-cloud (C2C) connector connecting to a customer's Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/connector-destinations/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetConnectorDestinationNotFound",
            "params": {
              "Identifier": "nonExistentDestination"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetConnectorDestinationRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetConnectorDestinationResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the connector destination.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the connector destination.</p>"
          }
        },
        "CloudConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the C2C connector.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the connector destination.</p>"
          }
        },
        "AuthType": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthType",
          "traits": {
            "smithy.api#documentation": "<p>The authentication type used for the connector destination, which determines how credentials and access are managed.</p>"
          }
        },
        "AuthConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthConfig",
          "traits": {
            "smithy.api#documentation": "<p>The authentication configuration details for the connector destination, including OAuth settings and other authentication parameters.</p>"
          }
        },
        "SecretsManager": {
          "target": "com.amazonaws.iotmanagedintegrations#SecretsManager",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Secrets Manager configuration used to securely store and manage sensitive information for the connector destination.</p>"
          }
        },
        "OAuthCompleteRedirectUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthCompleteRedirectUrl",
          "traits": {
            "smithy.api#documentation": "<p>The URL where users are redirected after completing the OAuth authorization process for the connector destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCredentialLocker": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCredentialLockerRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCredentialLockerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get information on an existing credential locker</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/credential-lockers/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetCredentialLockerNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCredentialLockerRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the credential locker.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCredentialLockerResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the credential locker.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the credential locker.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the credential locker.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerCreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestamp value of when the credential locker requset occurred.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the credential locker.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCustomEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCustomEndpointRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetCustomEndpointResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the IoT managed integrations custom endpoint.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/custom-endpoint",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetCustomEndpointSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCustomEndpointRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetCustomEndpointResponse": {
      "type": "structure",
      "members": {
        "EndpointAddress": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointAddress",
          "traits": {
            "smithy.api#documentation": "<p>The IoT managed integrations dedicated, custom endpoint for the device to route traffic through.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified region. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\">Key management</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/configuration/account/encryption",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetDefaultEncryptionConfigurationSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "GetDefaultEncryptionConfigurationNotFound",
            "params": {},
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfigurationRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfigurationResponse": {
      "type": "structure",
      "members": {
        "configurationStatus": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationStatus",
          "traits": {
            "smithy.api#documentation": "<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>",
            "smithy.api#required": {}
          }
        },
        "encryptionType": {
          "target": "com.amazonaws.iotmanagedintegrations#EncryptionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption used for the encryption configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.iotmanagedintegrations#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a destination by ID. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/destinations/{Name}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetDestinationNotFound",
            "params": {
              "Name": "nonExistentDestination"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDestinationRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDestinationResponse": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the customer-managed destination.</p>"
          }
        },
        "DeliveryDestinationArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>"
          }
        },
        "DeliveryDestinationType": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationType",
          "traits": {
            "smithy.api#documentation": "<p>The destination type for the customer-managed destination.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationCreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the destination creation requset occurred.</p>"
          }
        },
        "UpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the destination update requset occurred.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags has been deprecated from this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the customer-managed destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDeviceDiscovery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDeviceDiscoveryRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetDeviceDiscoveryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Get the current state of a device discovery.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/device-discoveries/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetDeviceDiscoveryNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDeviceDiscoveryRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the device discovery job request.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetDeviceDiscoveryResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the device discovery job request.</p>",
            "smithy.api#required": {}
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the device discovery job request.</p>",
            "smithy.api#required": {}
          }
        },
        "DiscoveryType": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryType",
          "traits": {
            "smithy.api#documentation": "<p>The discovery type supporting the type of device to be discovered in the device discovery job request.</p>",
            "smithy.api#required": {}
          }
        },
        "Status": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the device discovery job request.</p>",
            "smithy.api#required": {}
          }
        },
        "StartedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryStartedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value for the start time of the device discovery.</p>",
            "smithy.api#required": {}
          }
        },
        "ControllerId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the end-user's IoT hub.</p>"
          }
        },
        "ConnectorAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorAssociationId",
          "traits": {
            "smithy.api#deprecated": {
              "message": "ConnectorAssociationId has been deprecated",
              "since": "2025-06-25"
            },
            "smithy.api#documentation": "<p>The ID tracking the current discovery process for one connector association.</p>"
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association used for the device discovery.</p>"
          }
        },
        "FinishedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryFinishedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value for the completion time of the device discovery.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags have been deprecated from this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the device discovery request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetEventLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetEventLogConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetEventLogConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get an event log configuration.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/event-log-configurations/{Id}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetEventLogConfigurationNotFound",
            "params": {
              "Id": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetEventLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event log configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetEventLogConfigurationResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the event log configuration.</p>"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of resource for the event log configuration.</p>"
          }
        },
        "ResourceId": {
          "target": "com.amazonaws.iotmanagedintegrations#SmartHomeResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource for the event log configuration.</p>"
          }
        },
        "EventLogLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The logging level for the event log configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetHubConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetHubConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetHubConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get a hub configuration.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/hub-configuration",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetHubConfigurationSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetHubConfigurationRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetHubConfigurationResponse": {
      "type": "structure",
      "members": {
        "HubTokenTimerExpirySettingInSeconds": {
          "target": "com.amazonaws.iotmanagedintegrations#HubTokenTimerExpirySettingInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>"
          }
        },
        "UpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#HubConfigurationUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the hub configuration was updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Get the attributes and capabilities associated with a managed thing.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-things/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetManagedThingNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilities": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilitiesRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilitiesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the capabilities for a managed thing using the device ID.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-things-capabilities/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetManagedThingCapabilitiesNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilitiesRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the device.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilitiesResponse": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the device.</p>"
          }
        },
        "Capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#Capabilities",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The capabilities of the device such as light bulb.</p>"
          }
        },
        "CapabilityReport": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReport",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A report of the capabilities for the managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityDataRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the connectivity status of a managed thing.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/managed-things-connectivity-data/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetManagedThingConnectivityDataNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityDataRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of a managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityDataResponse": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of a managed thing.</p>"
          }
        },
        "Connected": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectivityStatus",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The connectivity status for a managed thing.</p>"
          }
        },
        "Timestamp": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectivityTimestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The timestamp value of when the connectivity status for a managed thing was last taken.</p>"
          }
        },
        "DisconnectReason": {
          "target": "com.amazonaws.iotmanagedintegrations#DisconnectReasonValue",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The reason for the connectivity disconnect with the managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaDataRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the metadata information for a managed thing.</p> <note> <p>The <code>managedThing</code> <code>metadata</code> parameter is used for associating attributes with a <code>managedThing</code> that can be used for grouping over-the-air (OTA) tasks. Name value pairs in <code>metadata</code> can be used in the <code>OtaTargetQueryString</code> parameter for the <code>CreateOtaTask</code> API operation.</p> </note>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-things-metadata/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetManagedThingMetaDataNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaDataRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The managed thing id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaDataResponse": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The managed thing id.</p>"
          }
        },
        "MetaData": {
          "target": "com.amazonaws.iotmanagedintegrations#MetaData",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The metadata for the managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the managed thing.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the managed thing.</p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.iotmanagedintegrations#Owner",
          "traits": {
            "smithy.api#documentation": "<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>"
          }
        },
        "CredentialLockerId": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the credential locker for the managed thing.</p>"
          }
        },
        "AdvertisedProductId": {
          "target": "com.amazonaws.iotmanagedintegrations#AdvertisedProductId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the advertised product.</p>"
          }
        },
        "Role": {
          "target": "com.amazonaws.iotmanagedintegrations#Role",
          "traits": {
            "smithy.api#documentation": "<p>The type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>"
          }
        },
        "ProvisioningStatus": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningStatus",
          "traits": {
            "smithy.api#documentation": "<p>The provisioning status of the device in the provisioning workflow for onboarding to IoT managed integrations.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#Name",
          "traits": {
            "smithy.api#documentation": "<p>The name of the managed thing representing the physical device.</p>"
          }
        },
        "Model": {
          "target": "com.amazonaws.iotmanagedintegrations#Model",
          "traits": {
            "smithy.api#documentation": "<p>The model of the device.</p>"
          }
        },
        "Brand": {
          "target": "com.amazonaws.iotmanagedintegrations#Brand",
          "traits": {
            "smithy.api#documentation": "<p>The brand of the device.</p>"
          }
        },
        "SerialNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#SerialNumber",
          "traits": {
            "smithy.api#documentation": "<p>The serial number of the device.</p>"
          }
        },
        "UniversalProductCode": {
          "target": "com.amazonaws.iotmanagedintegrations#UniversalProductCode",
          "traits": {
            "smithy.api#documentation": "<p>The universal product code (UPC) of the device model. The UPC is typically used in the United States of America and Canada.</p>"
          }
        },
        "InternationalArticleNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#InternationalArticleNumber",
          "traits": {
            "smithy.api#documentation": "<p>The unique 13 digit number that identifies the managed thing.</p>"
          }
        },
        "ConnectorPolicyId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorPolicyId",
          "traits": {
            "smithy.api#deprecated": {
              "message": "ConnectorPolicyId is deprecated",
              "since": "2025-06-25"
            },
            "smithy.api#documentation": "<p>The id of the connector policy.</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>"
          }
        },
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the connector destination associated with this managed thing.</p>"
          }
        },
        "ConnectorDeviceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "smithy.api#documentation": "<p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>"
          }
        },
        "DeviceSpecificKey": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceSpecificKey",
          "traits": {
            "smithy.api#documentation": "<p>A Zwave device-specific key used during device activation.</p> <note> <p>This parameter is used for Zwave devices only.</p> </note>"
          }
        },
        "MacAddress": {
          "target": "com.amazonaws.iotmanagedintegrations#MacAddress",
          "traits": {
            "smithy.api#documentation": "<p>The media access control (MAC) address for the device represented by the managed thing.</p> <note> <p>This parameter is used for Zigbee devices only.</p> </note>"
          }
        },
        "ParentControllerId": {
          "target": "com.amazonaws.iotmanagedintegrations#ParentControllerId",
          "traits": {
            "smithy.api#documentation": "<p>Id of the controller device used for the discovery job.</p>"
          }
        },
        "Classification": {
          "target": "com.amazonaws.iotmanagedintegrations#Classification",
          "traits": {
            "smithy.api#documentation": "<p>The classification of the managed thing such as light bulb or thermostat.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the device creation request occurred.</p>"
          }
        },
        "UpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#UpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the managed thing was last updated at.</p>"
          }
        },
        "ActivatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#SetupAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestampe value of when the device was activated.</p>"
          }
        },
        "HubNetworkMode": {
          "target": "com.amazonaws.iotmanagedintegrations#HubNetworkMode",
          "traits": {
            "smithy.api#documentation": "<p>The network mode for the hub-connected device.</p>"
          }
        },
        "MetaData": {
          "target": "com.amazonaws.iotmanagedintegrations#MetaData",
          "traits": {
            "smithy.api#documentation": "<p>The metadata for the managed thing.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingState": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingStateRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingStateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns the managed thing state for the given device Id.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-thing-states/{ManagedThingId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetManagedThingStateNotFound",
            "params": {
              "ManagedThingId": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingStateRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the device.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetManagedThingStateResponse": {
      "type": "structure",
      "members": {
        "Endpoints": {
          "target": "com.amazonaws.iotmanagedintegrations#StateEndpoints",
          "traits": {
            "smithy.api#documentation": "<p>The device endpoint.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetNotificationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetNotificationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Get a notification configuration.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/notification-configurations/{EventType}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetNotificationConfigurationNotFound",
            "params": {
              "EventType": "DEVICE_EVENT"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetNotificationConfigurationResponse": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>"
          }
        },
        "DestinationName": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination for the notification configuration.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#NotificationConfigurationCreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the notification configuration was created.</p>"
          }
        },
        "UpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#NotificationConfigurationUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the notification configuration was last updated.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags has been deprecated for this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the notification configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetOtaTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetOtaTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the over-the-air (OTA) task.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ota-tasks/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetOtaTaskNotFound",
            "params": {
              "Identifier": "nonExistentTaskId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get a configuraiton for the over-the-air (OTA) task.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ota-task-configurations/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetOtaTaskConfigurationNotFound",
            "params": {
              "Identifier": "nonExistentConfigId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfigurationRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The over-the-air (OTA) task configuration id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfigurationResponse": {
      "type": "structure",
      "members": {
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The over-the-air (OTA) task configuration id.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the over-the-air (OTA) task configuration.</p>"
          }
        },
        "PushConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#PushConfig",
          "traits": {
            "smithy.api#documentation": "<p>Describes the type of configuration used for the over-the-air (OTA) task.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the over-the-air (OTA) task configuration.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTaskRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The over-the-air (OTA) task id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetOtaTaskResponse": {
      "type": "structure",
      "members": {
        "TaskId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the over-the-air (OTA) task.</p>"
          }
        },
        "TaskArn": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the over-the-air (OTA) task.</p>"
          }
        },
        "S3Url": {
          "target": "com.amazonaws.iotmanagedintegrations#S3Url",
          "traits": {
            "smithy.api#documentation": "<p>The URL to the Amazon S3 bucket where the over-the-air (OTA) task is stored.</p>"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaProtocol",
          "traits": {
            "smithy.api#documentation": "<p>The connection protocol the over-the-air (OTA) task uses to update the device.</p>"
          }
        },
        "OtaType": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaType",
          "traits": {
            "smithy.api#documentation": "<p>The frequency type for the over-the-air (OTA) task.</p>"
          }
        },
        "OtaTargetQueryString": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTargetQueryString",
          "traits": {
            "smithy.api#documentation": "<p>The query string to add things to the thing group.</p>"
          }
        },
        "OtaMechanism": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaMechanism",
          "traits": {
            "smithy.api#documentation": "<p>The deployment mechanism for the over-the-air (OTA) task.</p>"
          }
        },
        "Target": {
          "target": "com.amazonaws.iotmanagedintegrations#Target",
          "traits": {
            "smithy.api#documentation": "<p>The device targeted for the over-the-air (OTA) task.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task was created.</p>"
          }
        },
        "LastUpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#LastUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>"
          }
        },
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the over-the-air (OTA) task configuration.</p>"
          }
        },
        "TaskProcessingDetails": {
          "target": "com.amazonaws.iotmanagedintegrations#TaskProcessingDetails",
          "traits": {
            "smithy.api#documentation": "<p>The processing details of all over-the-air (OTA) tasks.</p>"
          }
        },
        "OtaSchedulingConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskSchedulingConfig"
        },
        "OtaTaskExecutionRetryConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionRetryConfig"
        },
        "Status": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the over-the-air (OTA) task.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetProvisioningProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetProvisioningProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetProvisioningProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get a provisioning profile by template name.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/provisioning-profiles/{Identifier}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetProvisioningProfileNotFound",
            "params": {
              "Identifier": "nonExistentProfileId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetProvisioningProfileRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The provisioning template the device uses for the provisioning process.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetProvisioningProfileResponse": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the provisioning template.</p>"
          }
        },
        "ProvisioningType": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningType",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The provisioning profile id..</p>"
          }
        },
        "ClaimCertificate": {
          "target": "com.amazonaws.iotmanagedintegrations#ClaimCertificate",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the claim certificate.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the provisioning profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the runtime log configuration for a specific managed thing or for all managed things as a group.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/runtime-log-configurations/{ManagedThingId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetRuntimeLogConfigurationNotFound",
            "params": {
              "ManagedThingId": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id for a managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfigurationResponse": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id for a managed thing.</p>"
          }
        },
        "RuntimeLogConfigurations": {
          "target": "com.amazonaws.iotmanagedintegrations#RuntimeLogConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The runtime log configuration for a managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetSchemaVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#GetSchemaVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#GetSchemaVersionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a schema version with the provided information.</p>",
        "smithy.api#examples": [
          {
            "title": "GetSchemaVersion happy path for an example schema version.",
            "input": {
              "SchemaVersionedId": "matter.ColorControl@1.4",
              "Type": "capability"
            },
            "output": {
              "SchemaId": "matter.ColorControl",
              "Type": "capability",
              "Description": "The Color Control cluster defined as Harmony Capability.",
              "Namespace": "matter",
              "SemanticVersion": "1.4",
              "Schema": {
                "$id": "/schema-versions/capability/matter.ColorControl@1.4",
                "$ref": "/schema-versions/definition/aws.capability@1.0",
                "name": "Color Control",
                "extrinsicId": "0x0300",
                "extrinsicVersion": "14",
                "title": "Color Control Cluster",
                "description": "The Color Control cluster defined as Harmony Capability.",
                "properties": {
                  "CurrentHue": {
                    "value": {
                      "$ref": "aws.integer@1.0"
                    },
                    "mutable": false
                  }
                },
                "actions": [
                  {
                    "name": "MoveToHue",
                    "extrinsicId": "0x00",
                    "request": {
                      "parameters": {
                        "Hue": {
                          "extrinsicId": "0",
                          "value": {
                            "$ref": "aws.integer@1.0"
                          }
                        }
                      }
                    }
                  }
                ],
                "events": [],
                "$defs": {}
              }
            }
          },
          {
            "title": "GetSchemaVersion happy path for an example schema version.",
            "input": {
              "SchemaVersionedId": "matter.ColorControl@1.4",
              "Type": "capability",
              "Format": "ZCL"
            },
            "output": {
              "SchemaId": "matter.ColorControl",
              "Type": "capability",
              "Description": "The Color Control cluster defined as Harmony Capability.",
              "Namespace": "matter",
              "SemanticVersion": "1.4",
              "Schema": {}
            }
          },
          {
            "title": "GetSchemaVersion error path for an example schema version that does not exist.",
            "input": {
              "SchemaVersionedId": "matter.ColorControl@$latest",
              "Type": "capability"
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException",
              "content": {
                "Message": "No schema version found"
              }
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "GET",
          "uri": "/schema-versions/{Type}/{SchemaVersionedId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "GetSchemaVersionNotFound",
            "params": {
              "Type": "capability",
              "SchemaVersionedId": "non.existent.schema@1.0"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetSchemaVersionRequest": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of schema version.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "SchemaVersionedId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>Schema id with a version specified. If the version is missing, it defaults to latest version.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Format": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the schema version.</p>",
            "smithy.api#httpQuery": "Format"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#GetSchemaVersionResponse": {
      "type": "structure",
      "members": {
        "SchemaId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the schema version.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of schema version.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the schema version.</p>"
          }
        },
        "Namespace": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionNamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the schema version.</p>"
          }
        },
        "SemanticVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVersion",
          "traits": {
            "smithy.api#documentation": "<p>The schema version. If this is left blank, it defaults to the latest version.</p>"
          }
        },
        "Visibility": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVisibility",
          "traits": {
            "smithy.api#documentation": "<p>The visibility of the schema version.</p>"
          }
        },
        "Schema": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionSchema",
          "traits": {
            "smithy.api#documentation": "<p>The schema of the schema version.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#HubConfigurationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetHubConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#PutHubConfiguration"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#HubConfigurationUpdatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#HubNetworkMode": {
      "type": "enum",
      "members": {
        "STANDARD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD"
          }
        },
        "NETWORK_WIDE_EXCLUSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NETWORK_WIDE_EXCLUSION"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#HubTokenTimerExpirySettingInSeconds": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#InProgressTimeoutInMinutes": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 10080
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#IncrementFactor": {
      "type": "double",
      "traits": {
        "smithy.api#range": {
          "min": 1.1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#InternalFailureException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An unexpected error has occurred.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.iotmanagedintegrations#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Internal error from the service that indicates an unexpected error or that the service is unavailable.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.iotmanagedintegrations#InternationalArticleNumber": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 8,
          "max": 13
        },
        "smithy.api#pattern": "^[0-9]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#InvalidRequestException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request is not valid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.iotmanagedintegrations#IoTManagedIntegrationsResourceARN": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:(managed-thing|provisioning-profile|ota-task|credential-locker|account-association)/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#IotManagedIntegrations": {
      "type": "service",
      "version": "2025-03-03",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetCustomEndpoint"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpoint"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#SendConnectorEvent"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#TagResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#EventLogConfigurationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#HubConfigurationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#KmsKeyAssociationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingAssociationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingCommandResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingStateResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#NotificationConfigurationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#RuntimeLogConfigurationResource"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "IoT Managed Integrations",
          "arnNamespace": "iotmanagedintegrations",
          "endpointPrefix": "api.iotmanagedintegrations"
        },
        "aws.auth#sigv4": {
          "name": "iotmanagedintegrations"
        },
        "aws.endpoints#dualStackOnlyEndpoints": {},
        "aws.endpoints#standardRegionalEndpoints": {},
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "Managed integrations is a feature of AWS IoT Device Management that enables developers to quickly build innovative IoT solutions. Customers can use managed integrations to automate device setup workflows and support interoperability across many devices, regardless of device vendor or connectivity protocol. This allows developers to use a single user-interface to control, manage, and operate a range of devices.",
        "smithy.api#title": "Managed integrations for AWS IoT Device Management",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            },
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://api.iotmanagedintegrations-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://api.iotmanagedintegrations.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ],
              "type": "tree"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For custom endpoint with region not set and fips disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Endpoint": "https://example.com",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://example.com",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.eu-isoe-west-1.cloud.adc-e.uk"
                }
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.eu-isoe-west-1.cloud.adc-e.uk"
                }
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations-fips.us-isof-south-1.csp.hci.ic.gov"
                }
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.iotmanagedintegrations.us-isof-south-1.csp.hci.ic.gov"
                }
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#KmsKeyArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^arn:aws:kms:[0-9a-zA-Z-]+:[0-9]+:key/[0-9a-zA-Z-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#KmsKeyAssociationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetDefaultEncryptionConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfiguration"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#LambdaArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^(arn:aws:lambda:[0-9a-zA-Z-]+:[0-9]+:function:)?([a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#LambdaConfig": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotmanagedintegrations#LambdaArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lambda function used as an endpoint.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration details for an AWS Lambda function used as an endpoint for a cloud connector.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#LastUpdatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#LimitExceededException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request exceeds a service limit or quota. Adjust your request parameters and try again.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 410
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListAccountAssociations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListAccountAssociationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListAccountAssociationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all account associations, with optional filtering by connector destination ID.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/account-associations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "pageSize": "MaxResults",
          "outputToken": "NextToken",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListAccountAssociationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListAccountAssociationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListAccountAssociationsRequest": {
      "type": "structure",
      "members": {
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The identifier of the connector destination to filter account associations by.</p>",
            "smithy.api#httpQuery": "ConnectorDestinationId"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The maximum number of account associations to return in a single response.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token used for pagination of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListAccountAssociationsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationListDefinition",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The list of account associations that match the specified criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token used for pagination of results when there are more account associations than can be returned in a single response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCloudConnectors": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCloudConnectorsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCloudConnectorsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of connectors based on permissions. </p>",
        "smithy.api#examples": [
          {
            "title": "ListCloudConnectors happy path to get a list of connector resources",
            "input": {
              "MaxResults": 5
            },
            "output": {
              "Items": [
                {
                  "EndpointConfig": {
                    "lambda": {
                      "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                    }
                  },
                  "EndpointType": "LAMBDA",
                  "Name": "Connector for TP Link Cloud V2",
                  "Description": "Description for TP Link Cloud V2"
                },
                {
                  "EndpointConfig": {
                    "lambda": {
                      "arn": "arn:aws:lambda:us-east-1:111122223333:function:my-function:myVersion"
                    }
                  },
                  "Name": "Connector for Ring Cloud",
                  "Description": "Description for Ring Cloud",
                  "EndpointType": "LAMBDA"
                }
              ]
            }
          },
          {
            "title": "ListCloudConnectors error path for unauthorized user",
            "input": {
              "MaxResults": 5
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#AccessDeniedException",
              "content": {
                "Message": "User is not authorized"
              }
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "GET",
          "uri": "/cloud-connectors",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListCloudConnectorsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListCloudConnectorsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCloudConnectorsRequest": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorType",
          "traits": {
            "smithy.api#documentation": "<p>The type of cloud connectors to filter by when listing available connectors.</p>",
            "smithy.api#httpQuery": "Type"
          }
        },
        "LambdaArn": {
          "target": "com.amazonaws.iotmanagedintegrations#LambdaArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lambda function to filter cloud connectors by.</p>",
            "smithy.api#httpQuery": "LambdaArn"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCloudConnectorsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorList",
          "traits": {
            "smithy.api#documentation": "<p>The list of connectors.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListConnectorDestinations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListConnectorDestinationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListConnectorDestinationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all connector destinations, with optional filtering by cloud connector ID.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/connector-destinations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "ConnectorDestinationList"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListConnectorDestinationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListConnectorDestinationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListConnectorDestinationsRequest": {
      "type": "structure",
      "members": {
        "CloudConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the cloud connector to filter connector destinations by.</p>",
            "smithy.api#httpQuery": "CloudConnectorId"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of connector destinations to return in a single response.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListConnectorDestinationsResponse": {
      "type": "structure",
      "members": {
        "ConnectorDestinationList": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of connector destinations that match the specified criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results when there are more connector destinations than can be returned in a single response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCredentialLockers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCredentialLockersRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListCredentialLockersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List information on an existing credential locker.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/credential-lockers",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListCredentialLockersSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListCredentialLockersWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCredentialLockersRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListCredentialLockersResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of credential lockers.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDestinations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDestinationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDestinationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> List all destination names under one Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/destinations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "DestinationList"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListDestinationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListDestinationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDestinationsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDestinationsResponse": {
      "type": "structure",
      "members": {
        "DestinationList": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of destinations.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveries": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveriesRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveriesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all device discovery tasks, with optional filtering by type and status.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/device-discoveries",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveriesRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of device discovery jobs to return in a single response.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "TypeFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryType",
          "traits": {
            "smithy.api#documentation": "<p>The discovery type to filter device discovery jobs by.</p>",
            "smithy.api#httpQuery": "TypeFilter"
          }
        },
        "StatusFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status to filter device discovery jobs by.</p>",
            "smithy.api#httpQuery": "StatusFilter"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDeviceDiscoveriesResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of device discovery jobs that match the specified criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results when there are more device discovery jobs than can be returned in a single response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevices": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevicesRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevicesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all devices discovered during a specific device discovery task.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/device-discoveries/{Identifier}/devices",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListDiscoveredDevicesNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListDiscoveredDevicesWithPagination",
            "params": {
              "Identifier": "testDiscoveryId",
              "MaxResults": 5
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevicesRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the device discovery job to list discovered devices for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of discovered devices to return in a single response.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListDiscoveredDevicesResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveredDeviceListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of discovered devices that match the specified criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results when there are more discovered devices than can be returned in a single response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List all event log configurations for an account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/event-log-configurations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "EventLogConfigurationList"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListEventLogConfigurationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListEventLogConfigurationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurationsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListEventLogConfigurationsResponse": {
      "type": "structure",
      "members": {
        "EventLogConfigurationList": {
          "target": "com.amazonaws.iotmanagedintegrations#EventLogConfigurationListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>A list of each event log configuration and pertinent information.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all account associations for a specific managed thing.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-thing-associations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListManagedThingAccountAssociationsSuccess",
            "params": {
              "ManagedThingId": "sample-thing-id"
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListManagedAccountAssociationsWithPagination",
            "params": {
              "ManagedThingId": "sample-thing-id",
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociationsRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing to list account associations for.</p>",
            "smithy.api#httpQuery": "ManagedThingId"
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association to filter results by. When specified, only associations with this account association ID will be returned.</p>",
            "smithy.api#httpQuery": "AccountAssociationId"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of account associations to return in a single response.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociationsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingAssociationList",
          "traits": {
            "smithy.api#documentation": "<p>The list of managed thing associations that match the specified criteria, including the managed thing ID and account association ID for each association.</p>"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A token used for pagination of results when there are more account associations than can be returned in a single response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemas": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemasRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemasResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List schemas associated with a managed thing.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-thing-schemas/{Identifier}",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListManagedThingSchemasNotFound",
            "params": {
              "Identifier": "nonExistentId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListManagedThingSchemasWithPagination",
            "params": {
              "Identifier": "testId",
              "MaxResults": 5
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemasRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The managed thing id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "EndpointIdFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>Filter on an endpoint id.</p>",
            "smithy.api#httpQuery": "EndpointIdFilter"
          }
        },
        "CapabilityIdFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityId",
          "traits": {
            "smithy.api#documentation": "<p>Filter on a capability id.</p>",
            "smithy.api#httpQuery": "CapabilityIdFilter"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemasResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingSchemaListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of managed thing schemas.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Listing all managed things with provision for filters.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/managed-things",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListManagedThingsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListManagedThingsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingsRequest": {
      "type": "structure",
      "members": {
        "OwnerFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#Owner",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on device owners when listing managed things.</p>",
            "smithy.api#httpQuery": "OwnerFilter"
          }
        },
        "CredentialLockerFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on a credential locker for a managed thing.</p>",
            "smithy.api#httpQuery": "CredentialLockerFilter"
          }
        },
        "RoleFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#Role",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on the type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>",
            "smithy.api#httpQuery": "RoleFilter"
          }
        },
        "ParentControllerIdentifierFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#ParentControllerId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on a parent controller id for a managed thing.</p>",
            "smithy.api#httpQuery": "ParentControllerIdentifierFilter"
          }
        },
        "ConnectorPolicyIdFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorPolicyId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#deprecated": {
              "message": "ConnectorPolicyIdFilter is deprecated",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>Filter on a connector policy id for a managed thing.</p>",
            "smithy.api#httpQuery": "ConnectorPolicyIdFilter"
          }
        },
        "ConnectorDestinationIdFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter managed things by the connector destination ID they are associated with.</p>",
            "smithy.api#httpQuery": "ConnectorDestinationIdFilter"
          }
        },
        "ConnectorDeviceIdFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter managed things by the connector device ID they are associated with. When specified, only managed things with this connector device ID will be returned.</p>",
            "smithy.api#httpQuery": "ConnectorDeviceIdFilter"
          }
        },
        "SerialNumberFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#SerialNumber",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on the serial number of the device.</p>",
            "smithy.api#httpQuery": "SerialNumberFilter"
          }
        },
        "ProvisioningStatusFilter": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningStatus",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Filter on the status of the device.</p>",
            "smithy.api#httpQuery": "ProvisioningStatusFilter"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListManagedThingsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingListDefinition",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The list of managed things.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> List all notification configurations.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/notification-configurations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "NotificationConfigurationList"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListNotificationConfigurationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListNotificationConfigurationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurationsResponse": {
      "type": "structure",
      "members": {
        "NotificationConfigurationList": {
          "target": "com.amazonaws.iotmanagedintegrations#NotificationConfigurationListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of notification configurations.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List all of the over-the-air (OTA) task configurations.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ota-task-configurations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListOtaTaskConfigurationsSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListOtaTaskConfigurationsWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurationsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurationsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of the over-the-air (OTA) task configurations.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutionsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List all of the over-the-air (OTA) task executions.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ota-tasks/{Identifier}/devices",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "ExecutionSummaries"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListOtaTaskExecutionsNotFound",
            "params": {
              "Identifier": "nonExistentTaskId"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutionsRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The over-the-air (OTA) task id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaNextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutionsResponse": {
      "type": "structure",
      "members": {
        "ExecutionSummaries": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummariesListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>A list of all of the over-the-air (OTA) task executions.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaNextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTasksRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTasksResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List all of the over-the-air (OTA) tasks.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ota-tasks",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Tasks"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListOtaTasksSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListOtaTasksWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTasksRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaNextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListOtaTasksResponse": {
      "type": "structure",
      "members": {
        "Tasks": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>A list of all of the over-the-air (OTA) tasks.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaNextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListProvisioningProfiles": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListProvisioningProfilesRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListProvisioningProfilesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List the provisioning profiles within the Amazon Web Services account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/provisioning-profiles",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListProvisioningProfilesSuccess",
            "params": {},
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListProvisioningProfilesWithPagination",
            "params": {
              "MaxResults": 5
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListProvisioningProfilesRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListProvisioningProfilesResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileListDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The list of provisioning profiles.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListSchemaVersions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListSchemaVersionsRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListSchemaVersionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists schema versions with the provided information.</p>",
        "smithy.api#examples": [
          {
            "title": "ListSchemaVersions happy path for an example schema version.",
            "input": {
              "SchemaId": "example.ColorControl",
              "Type": "capability"
            },
            "output": {
              "Items": [
                {
                  "SchemaId": "example.ColorControl",
                  "Type": "capability",
                  "Description": "The Color Control cluster defined as Harmony Capability.",
                  "Namespace": "matter",
                  "SemanticVersion": "1.4"
                }
              ]
            }
          },
          {
            "title": "ListSchemaVersions by version.",
            "input": {
              "Type": "capability",
              "SemanticVersion": "34.56"
            },
            "output": {
              "Items": [
                {
                  "SchemaId": "example.ColorControl",
                  "Type": "capability",
                  "Description": "The Color Control cluster defined as Harmony Capability.",
                  "Namespace": "matter",
                  "SemanticVersion": "1.4"
                }
              ]
            }
          },
          {
            "title": "ListSchemaVersions error  for invalid input.",
            "input": {
              "SchemaId": "example.ColorControl",
              "Type": "capability",
              "Namespace": "matter"
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#ValidationException"
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "GET",
          "uri": "/schema-versions/{Type}",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Items"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListSchemaVersionsSuccess",
            "params": {
              "Type": "capability"
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListSchemaVersionsRequest": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionType",
          "traits": {
            "smithy.api#documentation": "<p>Filter on the type of schema version.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.iotmanagedintegrations#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return at one time.</p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "SchemaId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaId",
          "traits": {
            "smithy.api#documentation": "<p>Filter on the id of the schema version.</p>",
            "smithy.api#httpQuery": "SchemaIdFilter"
          }
        },
        "Namespace": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionNamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>Filter on the name of the schema version.</p>",
            "smithy.api#httpQuery": "NamespaceFilter"
          }
        },
        "Visibility": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVisibility",
          "traits": {
            "smithy.api#documentation": "<p>The visibility of the schema version.</p>",
            "smithy.api#httpQuery": "VisibilityFilter"
          }
        },
        "SemanticVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVersion",
          "traits": {
            "smithy.api#documentation": "<p>The schema version. If this is left blank, it defaults to the latest version.</p>",
            "smithy.api#httpQuery": "SemanticVersionFilter"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListSchemaVersionsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionList",
          "traits": {
            "smithy.api#documentation": "<p>The list of schema versions.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.iotmanagedintegrations#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A token that can be used to retrieve the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "List tags for the specified resource.",
        "smithy.api#http": {
          "uri": "/tags/{ResourceArn}",
          "method": "GET"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "ListTagsForResourceNotFound",
            "params": {
              "ResourceArn": "arn:aws:iotmanagedintegrations:us-east-1:123456789012:managed-thing/nonexistent"
            },
            "expect": {
              "failure": {
                "errorId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
              }
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          },
          {
            "id": "ListTagsForResourceSuccess",
            "params": {
              "ResourceArn": "arn:aws:iotmanagedintegrations:us-east-1:123456789012:managed-thing/test123"
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-east-1"
            }
          }
        ]
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.iotmanagedintegrations#IoTManagedIntegrationsResourceARN",
          "traits": {
            "smithy.api#documentation": "The ARN of the resource for which to list tags.",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#documentation": "A set of key/value pairs that are used to manage the resource."
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#LocalStoreFileRotationMaxBytes": {
      "type": "integer"
    },
    "com.amazonaws.iotmanagedintegrations#LocalStoreFileRotationMaxFiles": {
      "type": "integer"
    },
    "com.amazonaws.iotmanagedintegrations#LocalStoreLocation": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#LogConfigurationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^[A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#LogLevel": {
      "type": "enum",
      "members": {
        "DEBUG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEBUG"
          }
        },
        "ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ERROR"
          }
        },
        "INFO": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INFO"
          }
        },
        "WARN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WARN"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MacAddress": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 32,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:managed-thing/([0-9a-zA-Z:_-])+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingAssociation": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing in the association.</p>"
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association in the association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing an association between a managed thing and an account association, which connects a device to a third-party account.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingAssociationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ManagedThingAssociation"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingAssociationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeregisterAccountAssociation"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingAccountAssociations"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociation"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "managed-thing-associations"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingCommandResource": {
      "type": "resource",
      "identifiers": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId"
        }
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#SendManagedThingCommand"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "managed-thing/{ManagedThingId}"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9:_-]*$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ManagedThingSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateManagedThing"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetManagedThing"
      },
      "update": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateManagedThing"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteManagedThing"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListManagedThings"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingCapabilities"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingConnectivityData"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingMetaData"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListManagedThingSchemas"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "managed-thing/{Identifier}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "ManagedThing"
        },
        "aws.iam#iamResource": {
          "name": "managed-thing"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingSchemaListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ManagedThingSchemaListItem"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingSchemaListItem": {
      "type": "structure",
      "members": {
        "EndpointId": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the endpoint for a managed thing.</p>"
          }
        },
        "CapabilityId": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the capability for a managed thing.</p>"
          }
        },
        "Schema": {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationSchema",
          "traits": {
            "smithy.api#documentation": "<p>The validation schema for one schema item associated with a managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one schema item associated with a managed thing.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingStateResource": {
      "type": "resource",
      "identifiers": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId"
        }
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetManagedThingState"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "managed-thing/{ManagedThingId}"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ManagedThingSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the device.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the managed thing.</p>"
          }
        },
        "AdvertisedProductId": {
          "target": "com.amazonaws.iotmanagedintegrations#AdvertisedProductId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the advertised product.</p>"
          }
        },
        "Brand": {
          "target": "com.amazonaws.iotmanagedintegrations#Brand",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The brand of the device.</p>"
          }
        },
        "Classification": {
          "target": "com.amazonaws.iotmanagedintegrations#Classification",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The classification of the managed thing such as light bulb or thermostat.</p>"
          }
        },
        "ConnectorDeviceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>"
          }
        },
        "ConnectorPolicyId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorPolicyId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#deprecated": {
              "message": "ConnectorPolicyId has been deprecated",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>The id of the connector policy.</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>"
          }
        },
        "ConnectorDestinationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the connector destination associated with this managed thing, if applicable.</p>"
          }
        },
        "Model": {
          "target": "com.amazonaws.iotmanagedintegrations#Model",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The model of the device.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#Name",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the managed thing representing the physical device.</p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.iotmanagedintegrations#Owner",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>"
          }
        },
        "CredentialLockerId": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The identifier of the credential locker for the managed thing.</p>"
          }
        },
        "ParentControllerId": {
          "target": "com.amazonaws.iotmanagedintegrations#ParentControllerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>Id of the controller device used for the discovery job.</p>"
          }
        },
        "ProvisioningStatus": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningStatus",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The provisioning status of the device in the provisioning workflow for onboarding to IoT managed integrations.</p>"
          }
        },
        "Role": {
          "target": "com.amazonaws.iotmanagedintegrations#Role",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The type of device used. This will be the Amazon Web Services hub controller, cloud device, or IoT device.</p>"
          }
        },
        "SerialNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#SerialNumber",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The serial number of the device.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestamp value of when the device creation request occurred.</p>"
          }
        },
        "UpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The timestamp value of when the managed thing was last updated at.</p>"
          }
        },
        "ActivatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#SetupAt",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The timestampe value of when the managed thing was activated at.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one managed thing.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterAttributeId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 24
        },
        "smithy.api#pattern": "^0[xX][0-9a-fA-F]+$|^[0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterAttributes": {
      "type": "document",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReport": {
      "type": "structure",
      "members": {
        "version": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReportVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "nodeId": {
          "target": "com.amazonaws.iotmanagedintegrations#NodeId",
          "traits": {
            "smithy.api#documentation": "<p>The numeric identifier of the node.</p>"
          }
        },
        "endpoints": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpoints",
          "traits": {
            "smithy.api#documentation": "<p>The endpoints used in the capability report.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Matter based capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttribute": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterAttributeId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the Matter attribute.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#ActionName",
          "traits": {
            "smithy.api#documentation": "<p>Name for the Amazon Web Services Matter capability report attribute.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttributeValue",
          "traits": {
            "smithy.api#documentation": "<p>Value for the Amazon Web Services Matter capability report attribute.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Matter attribute used in capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttributeValue": {
      "type": "document"
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttributes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportCluster": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#ClusterId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the Amazon Web Services Matter capability report cluster.</p>",
            "smithy.api#required": {}
          }
        },
        "revision": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportClusterRevisionId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the revision for the Amazon Web Services Matter capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "publicId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the schema version.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityName",
          "traits": {
            "smithy.api#documentation": "<p>The capability name used in the Amazon Web Services Matter capability report.</p>"
          }
        },
        "specVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#SpecVersion",
          "traits": {
            "smithy.api#documentation": "<p>The spec version used in the Amazon Web Services Matter capability report.</p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportAttributes",
          "traits": {
            "smithy.api#documentation": "<p>The attributes of the Amazon Web Services Matter capability report.</p>"
          }
        },
        "commands": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportCommands",
          "traits": {
            "smithy.api#documentation": "<p>The commands used with the Amazon Web Services Matter capability report.</p>"
          }
        },
        "events": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEvents",
          "traits": {
            "smithy.api#documentation": "<p>The events used with the Amazon Web Services Matter capability report.</p>"
          }
        },
        "featureMap": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportFeatureMap",
          "traits": {
            "smithy.api#documentation": "<p>32 bit-map used to indicate which features a cluster supports.</p>"
          }
        },
        "generatedCommands": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportGeneratedCommands",
          "traits": {
            "smithy.api#documentation": "<p>Matter clusters used in capability report.</p>"
          }
        },
        "fabricIndex": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportFabricIndex",
          "traits": {
            "smithy.api#documentation": "<p>The fabric index for the Amazon Web Services Matter capability report.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Capability used in Matter capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportClusterRevisionId": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportClusters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportCluster"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportCommands": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCommandId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpoint": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the Amazon Web Services Matter capability report endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "deviceTypes": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceTypes",
          "traits": {
            "smithy.api#documentation": "<p>The type of device.</p>",
            "smithy.api#required": {}
          }
        },
        "clusters": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportClusters",
          "traits": {
            "smithy.api#documentation": "<p>Matter clusters used in capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "parts": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointParts",
          "traits": {
            "smithy.api#documentation": "<p>Heirachy of child endpoints contained in the given endpoint.</p>"
          }
        },
        "semanticTags": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointSemanticTags",
          "traits": {
            "smithy.api#documentation": "<p>Semantic information related to endpoint.</p>"
          }
        },
        "clientClusters": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointClientClusters",
          "traits": {
            "smithy.api#documentation": "<p>Semantic information related to endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Matter endpoint used in capability report.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointClientClusters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ClusterId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 32
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointParts": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#EndpointId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 32
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpointSemanticTags": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#EndpointSemanticTag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 32
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpoints": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEndpoint"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterEventId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportFabricIndex": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 4096
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportFeatureMap": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 4294967295
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCapabilityReportGeneratedCommands": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCommandId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCluster": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#ClusterId",
          "traits": {
            "smithy.api#documentation": "<p>The cluster id.</p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterAttributes",
          "traits": {
            "smithy.api#documentation": "<p>The Matter attributes.</p>"
          }
        },
        "commands": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterCommands",
          "traits": {
            "smithy.api#documentation": "<p>Describe the Matter commands with the Matter command identifier mapped to the command fields.</p>"
          }
        },
        "events": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterEvents",
          "traits": {
            "smithy.api#documentation": "<p>Describe the Matter events with the Matter event identifier mapped to the event fields.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describe a Matter cluster with an id, and the relevant attributes, commands, and events.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterClusters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCluster"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCommandId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 24
        },
        "smithy.api#pattern": "^0[xX][0-9a-fA-F]+$|^[0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterCommands": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterCommandId"
      },
      "value": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterFields"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterEndpoint": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>The Matter endpoint id.</p>"
          }
        },
        "clusters": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterClusters",
          "traits": {
            "smithy.api#documentation": "<p>A list of Matter clusters for a managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing a managed thing.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterEventId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 24
        },
        "smithy.api#pattern": "^0[xX][0-9a-fA-F]+$|^[0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterEvents": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterEventId"
      },
      "value": {
        "target": "com.amazonaws.iotmanagedintegrations#MatterFields"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MatterFields": {
      "type": "document",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MaximumPerMinute": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MetaData": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iotmanagedintegrations#AttributeName"
      },
      "value": {
        "target": "com.amazonaws.iotmanagedintegrations#AttributeValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MinNumberOfExecutedThings": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#MinNumberOfRetries": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#Model": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#Name": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}\\p{N} ._-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 65535
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#NodeId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_.,@\\+\\-/]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#NotificationConfigurationCreatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#NotificationConfigurationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#NotificationConfigurationSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#NotificationConfigurationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#CreateNotificationConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeleteNotificationConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetNotificationConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListNotificationConfigurations"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UpdateNotificationConfiguration"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#NotificationConfigurationSummary": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>"
          }
        },
        "DestinationName": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination for the notification configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing a notification configuration.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#NotificationConfigurationUpdatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#NumberOfNotifiedThings": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#NumberOfSucceededThings": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OAuthAuthorizationUrl": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^(https)://.*$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#OAuthCompleteRedirectUrl": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^(http|https)://.*$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OAuthConfig": {
      "type": "structure",
      "members": {
        "authUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthUrl",
          "traits": {
            "smithy.api#documentation": "<p>The authorization URL for the OAuth service, where users are directed to authenticate and authorize access.</p>",
            "smithy.api#required": {}
          }
        },
        "tokenUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#TokenUrl",
          "traits": {
            "smithy.api#documentation": "<p>The token URL for the OAuth service, where authorization codes are exchanged for access tokens.</p>",
            "smithy.api#required": {}
          }
        },
        "scope": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The OAuth scopes requested during authorization, which define the permissions granted to the application.</p>"
          }
        },
        "tokenEndpointAuthenticationScheme": {
          "target": "com.amazonaws.iotmanagedintegrations#TokenEndpointAuthenticationScheme",
          "traits": {
            "smithy.api#documentation": "<p>The authentication scheme used when requesting tokens from the token endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "oAuthCompleteRedirectUrl": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The URL where users are redirected after completing the OAuth authorization process.</p>"
          }
        },
        "proactiveRefreshTokenRenewal": {
          "target": "com.amazonaws.iotmanagedintegrations#ProactiveRefreshTokenRenewal",
          "traits": {
            "smithy.api#documentation": "<p>Configuration for proactively refreshing OAuth tokens before they expire.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration details for OAuth authentication with a third-party service.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OAuthUpdate": {
      "type": "structure",
      "members": {
        "oAuthCompleteRedirectUrl": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The updated URL where users are redirected after completing the OAuth authorization process.</p>"
          }
        },
        "proactiveRefreshTokenRenewal": {
          "target": "com.amazonaws.iotmanagedintegrations#ProactiveRefreshTokenRenewal",
          "traits": {
            "smithy.api#documentation": "<p>Updated configuration for proactively refreshing OAuth tokens before they expire.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure containing updated OAuth configuration settings.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[0-9A-Za-z_\\- ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaMechanism": {
      "type": "enum",
      "members": {
        "PUSH": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PUSH"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaNextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 65535
        },
        "smithy.api#pattern": "^[a-zA-Z0-9=_+/-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaProtocol": {
      "type": "enum",
      "members": {
        "HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaStatus": {
      "type": "enum",
      "members": {
        "IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IN_PROGRESS"
          }
        },
        "CANCELED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELED"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "DELETION_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETION_IN_PROGRESS"
          }
        },
        "SCHEDULED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SCHEDULED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTargetQueryString": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskAbortConfig": {
      "type": "structure",
      "members": {
        "AbortConfigCriteriaList": {
          "target": "com.amazonaws.iotmanagedintegrations#AbortConfigCriteriaList",
          "traits": {
            "smithy.api#documentation": "<p>The list of criteria for the abort config.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Over-the-air (OTA) task abort config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 32,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:ota-task/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9]*$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTaskConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#DeleteOtaTaskConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetOtaTaskConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskConfigurations"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationSummary": {
      "type": "structure",
      "members": {
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the over-the-air (OTA) task configuration</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the over-the-air (OTA) task configuration.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task configuration was created at.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one over-the-air (OTA) task configuration.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionRetryConfig": {
      "type": "structure",
      "members": {
        "RetryConfigCriteria": {
          "target": "com.amazonaws.iotmanagedintegrations#RetryConfigCriteriaList",
          "traits": {
            "smithy.api#documentation": "<p>The list of retry config criteria.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Over-the-air (OTA) task retry config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionRolloutConfig": {
      "type": "structure",
      "members": {
        "ExponentialRolloutRate": {
          "target": "com.amazonaws.iotmanagedintegrations#ExponentialRolloutRate",
          "traits": {
            "smithy.api#documentation": "<p>Structure representing exponential rate of rollout for an over-the-air (OTA) task.</p>"
          }
        },
        "MaximumPerMinute": {
          "target": "com.amazonaws.iotmanagedintegrations#MaximumPerMinute",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of things that will be notified of a pending task, per minute.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Over-the-air (OTA) task rollout config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionStatus": {
      "type": "enum",
      "members": {
        "QUEUED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "QUEUED"
          }
        },
        "IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IN_PROGRESS"
          }
        },
        "SUCCEEDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCEEDED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "TIMED_OUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TIMED_OUT"
          }
        },
        "REJECTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REJECTED"
          }
        },
        "REMOVED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REMOVED"
          }
        },
        "CANCELED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummaries": {
      "type": "structure",
      "members": {
        "TaskExecutionSummary": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummary",
          "traits": {
            "smithy.api#documentation": "<p>Structure representing one over-the-air (OTA) task execution summary</p>"
          }
        },
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of a managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one execution summary.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummariesListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummaries"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionSummary": {
      "type": "structure",
      "members": {
        "ExecutionNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#ExecutionNumber",
          "traits": {
            "smithy.api#documentation": "<p>The execution number of the over-the-air (OTA) task execution summary.</p>"
          }
        },
        "LastUpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#LastUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task execution summary was last updated.</p>"
          }
        },
        "QueuedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#QueuedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task execution summary is targeted to start.</p>"
          }
        },
        "RetryAttempt": {
          "target": "com.amazonaws.iotmanagedintegrations#RetryAttempt",
          "traits": {
            "smithy.api#documentation": "<p>The number of retry attempts for starting the over-the-air (OTA) task execution summary after a failed attempt.</p>"
          }
        },
        "StartedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#StartedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task execution summary started.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the over-the-air (OTA) task execution summary.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one over-the-air (OTA) task execution summary.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^[A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#OtaTaskSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateOtaTask"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetOtaTask"
      },
      "update": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateOtaTask"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteOtaTask"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListOtaTasks"
      },
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#ListOtaTaskExecutions"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "ota-task/{Identifier}"
        },
        "aws.iam#iamResource": {
          "name": "ota-task"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskSchedulingConfig": {
      "type": "structure",
      "members": {
        "EndBehavior": {
          "target": "com.amazonaws.iotmanagedintegrations#SchedulingConfigEndBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the end behavior for all task executions after a task reaches the selected <code>endTime</code>. If <code>endTime</code> is not selected when creating the task, then <code>endBehavior</code> does not apply.</p>"
          }
        },
        "EndTime": {
          "target": "com.amazonaws.iotmanagedintegrations#EndTime",
          "traits": {
            "smithy.api#documentation": "<p>The time an over-the-air (OTA) task will stop.</p>"
          }
        },
        "MaintenanceWindows": {
          "target": "com.amazonaws.iotmanagedintegrations#ScheduleMaintenanceWindowList",
          "traits": {
            "smithy.api#documentation": "<p>Maintenance window list for over-the-air (OTA) task scheduling config.</p>"
          }
        },
        "StartTime": {
          "target": "com.amazonaws.iotmanagedintegrations#ScheduleStartTime",
          "traits": {
            "smithy.api#documentation": "<p>The time an over-the-air (OTA) task will start.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Over-the-air (OTA) task scheduling config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskSummary": {
      "type": "structure",
      "members": {
        "TaskId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the over-the-air (OTA) task.</p>"
          }
        },
        "TaskArn": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the over-the-air (OTA) task.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#CreatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task was created at.</p>"
          }
        },
        "LastUpdatedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#LastUpdatedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value of when the over-the-air (OTA) task was last updated at.</p>"
          }
        },
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the over-the-air (OTA) task configuration.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the over-the-air (OTA) task summary.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one over-the-air (OTA) task.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaTaskTimeoutConfig": {
      "type": "structure",
      "members": {
        "InProgressTimeoutInMinutes": {
          "target": "com.amazonaws.iotmanagedintegrations#InProgressTimeoutInMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the amount of time the device has to finish execution of this task. The timeout interval can be anywhere between 1 minute and 7 days.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Over-the-air (OTA) task timeout config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#OtaType": {
      "type": "enum",
      "members": {
        "ONE_TIME": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ONE_TIME"
          }
        },
        "CONTINUOUS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONTINUOUS"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#Owner": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_.,@-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ParentControllerId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProactiveRefreshTokenRenewal": {
      "type": "structure",
      "members": {
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether proactive refresh token renewal is enabled.</p>"
          }
        },
        "DaysBeforeRenewal": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The days before token expiration when the system should attempt to renew the token, specified in days.</p>",
            "smithy.api#range": {
              "min": 30
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration settings for proactively refreshing OAuth tokens before they expire.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#PropertyName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[/a-zA-Z0-9\\._ ]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "service": "com.amazon.services.iotsmarthomeservice#IotSmartHomeService",
          "resource": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileResource"
        },
        "smithy.api#length": {
          "min": 32,
          "max": 64
        },
        "smithy.api#pattern": "^arn:aws:iotmanagedintegrations:[0-9a-zA-Z-]+:[0-9]+:provisioning-profile/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileListDefinition": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileSummary"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9A-Za-z_-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileResource": {
      "type": "resource",
      "identifiers": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId"
        }
      },
      "create": {
        "target": "com.amazonaws.iotmanagedintegrations#CreateProvisioningProfile"
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetProvisioningProfile"
      },
      "delete": {
        "target": "com.amazonaws.iotmanagedintegrations#DeleteProvisioningProfile"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListProvisioningProfiles"
      },
      "traits": {
        "aws.api#arn": {
          "template": "provisioning-profile/{Identifier}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "ProvisioningProfile"
        },
        "aws.iam#iamResource": {
          "name": "provisioning-profile"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningProfileSummary": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileName",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The name of the provisioning template.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The identifier of the provisioning profile.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningProfileArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the provisioning template used in the provisioning profile.</p>"
          }
        },
        "ProvisioningType": {
          "target": "com.amazonaws.iotmanagedintegrations#ProvisioningType",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The type of provisioning workflow the device uses for onboarding to IoT managed integrations.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure describing a provisioning profile. </p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningStatus": {
      "type": "enum",
      "members": {
        "UNASSOCIATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNASSOCIATED"
          }
        },
        "PRE_ASSOCIATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PRE_ASSOCIATED"
          }
        },
        "DISCOVERED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISCOVERED"
          }
        },
        "ACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVATED"
          }
        },
        "DELETION_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETION_FAILED"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "ISOLATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ISOLATED"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ProvisioningType": {
      "type": "enum",
      "members": {
        "FLEET_PROVISIONING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FLEET_PROVISIONING"
          }
        },
        "JITR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "JITR"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#PushConfig": {
      "type": "structure",
      "members": {
        "AbortConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskAbortConfig",
          "traits": {
            "smithy.api#documentation": "<p>Structure representing one abort config.</p>"
          }
        },
        "RolloutConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskExecutionRolloutConfig",
          "traits": {
            "smithy.api#documentation": "<p>Structure representing one rollout config.</p>"
          }
        },
        "TimeoutConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskTimeoutConfig",
          "traits": {
            "smithy.api#documentation": "<p>Structure representing one timeout config.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing a push config.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets the default encryption configuration for the Amazon Web Services account. For more information, see <a href=\"https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html\">Key management</a> in the AWS IoT SiteWise User Guide.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/configuration/account/encryption",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfigurationRequest": {
      "type": "structure",
      "members": {
        "encryptionType": {
          "target": "com.amazonaws.iotmanagedintegrations#EncryptionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption used for the encryption configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.iotmanagedintegrations#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutDefaultEncryptionConfigurationResponse": {
      "type": "structure",
      "members": {
        "configurationStatus": {
          "target": "com.amazonaws.iotmanagedintegrations#ConfigurationStatus",
          "traits": {
            "smithy.api#documentation": "<p>Provides the status of the default encryption configuration for an Amazon Web Services account.</p>",
            "smithy.api#required": {}
          }
        },
        "encryptionType": {
          "target": "com.amazonaws.iotmanagedintegrations#EncryptionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption used for the encryption configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.iotmanagedintegrations#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The Key Amazon Resource Name (ARN) of the AWS KMS key used for KMS encryption if you use <code>KMS_BASED_ENCRYPTION</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutHubConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#PutHubConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#PutHubConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update a hub configuration.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/hub-configuration",
          "code": 201
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutHubConfigurationRequest": {
      "type": "structure",
      "members": {
        "HubTokenTimerExpirySettingInSeconds": {
          "target": "com.amazonaws.iotmanagedintegrations#HubTokenTimerExpirySettingInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutHubConfigurationResponse": {
      "type": "structure",
      "members": {
        "HubTokenTimerExpirySettingInSeconds": {
          "target": "com.amazonaws.iotmanagedintegrations#HubTokenTimerExpirySettingInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>A user-defined integer value that represents the hub token timer expiry setting in seconds.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutRuntimeLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#PutRuntimeLogConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Set the runtime log configuration for a specific managed thing or for all managed things as a group.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/runtime-log-configurations/{ManagedThingId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#PutRuntimeLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id for a managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RuntimeLogConfigurations": {
          "target": "com.amazonaws.iotmanagedintegrations#RuntimeLogConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The runtime log configuration for a managed thing.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#QueuedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociationRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Registers an account association with a managed thing, establishing a connection between a device and a third-party account.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/managed-thing-associations/register",
          "code": 201
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing to register with the account association.</p>",
            "smithy.api#required": {}
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association to register with the managed thing.</p>",
            "smithy.api#required": {}
          }
        },
        "DeviceDiscoveryId": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the device discovery job associated with this registration.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#RegisterAccountAssociationResponse": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association that was registered.</p>"
          }
        },
        "DeviceDiscoveryId": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the device discovery job associated with this registration.</p>"
          }
        },
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the managed thing that was registered with the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpointRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpointResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Customers can request IoT managed integrations to manage the server trust for them or bring their own external server trusts for the custom domain. Returns an IoT managed integrations endpoint.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/custom-endpoint",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpointRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#RegisterCustomEndpointResponse": {
      "type": "structure",
      "members": {
        "EndpointAddress": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointAddress",
          "traits": {
            "smithy.api#documentation": "<p>The IoT managed integrations dedicated, custom endpoint for the device to route traffic through.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ResetRuntimeLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#ResetRuntimeLogConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Reset a runtime log configuration for a specific managed thing or for all managed things as a group.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/runtime-log-configurations/{ManagedThingId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ResetRuntimeLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of a managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        },
        "ResourceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorResourceId",
          "traits": {
            "smithy.api#documentation": "Id of the affected resource"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorResourceType",
          "traits": {
            "smithy.api#documentation": "Type of the affected resource"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource does not exist.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.iotmanagedintegrations#RetryAttempt": {
      "type": "integer"
    },
    "com.amazonaws.iotmanagedintegrations#RetryConfigCriteria": {
      "type": "structure",
      "members": {
        "FailureType": {
          "target": "com.amazonaws.iotmanagedintegrations#RetryCriteriaFailureType",
          "traits": {
            "smithy.api#documentation": "<p>Over-the-air (OTA) retry criteria failure type.</p>"
          }
        },
        "MinNumberOfRetries": {
          "target": "com.amazonaws.iotmanagedintegrations#MinNumberOfRetries",
          "traits": {
            "smithy.api#documentation": "<p>The number of retries allowed for a failure type for the over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing one retry config criteria.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#RetryConfigCriteriaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#RetryConfigCriteria"
      }
    },
    "com.amazonaws.iotmanagedintegrations#RetryCriteriaFailureType": {
      "type": "enum",
      "members": {
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "TIMED_OUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TIMED_OUT"
          }
        },
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#Role": {
      "type": "enum",
      "members": {
        "CONTROLLER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONTROLLER"
          }
        },
        "DEVICE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEVICE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#RolloutRateIncreaseCriteria": {
      "type": "structure",
      "members": {
        "numberOfNotifiedThings": {
          "target": "com.amazonaws.iotmanagedintegrations#NumberOfNotifiedThings",
          "traits": {
            "smithy.api#documentation": "<p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>"
          }
        },
        "numberOfSucceededThings": {
          "target": "com.amazonaws.iotmanagedintegrations#NumberOfSucceededThings",
          "traits": {
            "smithy.api#documentation": "<p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing rollout config criteria.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#RuntimeLogConfigurationResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#GetRuntimeLogConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#PutRuntimeLogConfiguration"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResetRuntimeLogConfiguration"
        }
      ]
    },
    "com.amazonaws.iotmanagedintegrations#RuntimeLogConfigurations": {
      "type": "structure",
      "members": {
        "LogLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The different log levels available for configuration.</p>"
          }
        },
        "LogFlushLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The different log levels available for configuration.</p>"
          }
        },
        "LocalStoreLocation": {
          "target": "com.amazonaws.iotmanagedintegrations#LocalStoreLocation",
          "traits": {
            "smithy.api#documentation": "<p>Configuration of where to store runtime logs in the device.</p>"
          }
        },
        "LocalStoreFileRotationMaxFiles": {
          "target": "com.amazonaws.iotmanagedintegrations#LocalStoreFileRotationMaxFiles",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to set the maximum number of runtime log files that can be stored on the device before the oldest files are deleted or overwritten.</p>"
          }
        },
        "LocalStoreFileRotationMaxBytes": {
          "target": "com.amazonaws.iotmanagedintegrations#LocalStoreFileRotationMaxBytes",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to set the maximum bytes of runtime logs that can be stored on the device before the oldest logs are deleted or overwritten.</p>"
          }
        },
        "UploadLog": {
          "target": "com.amazonaws.iotmanagedintegrations#UploadLog",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to enable or disable uploading of runtime logs to the cloud.</p>"
          }
        },
        "UploadPeriodMinutes": {
          "target": "com.amazonaws.iotmanagedintegrations#UploadPeriodMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to set the time interval in minutes between each batch of runtime logs that the device uploads to the cloud.</p>"
          }
        },
        "DeleteLocalStoreAfterUpload": {
          "target": "com.amazonaws.iotmanagedintegrations#DeleteLocalStoreAfterUpload",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to enable or disable deleting of runtime logs in the device once uploaded to the cloud.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The different configurations for runtime logs.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#S3Url": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ScheduleMaintenanceWindow": {
      "type": "structure",
      "members": {
        "DurationInMinutes": {
          "target": "com.amazonaws.iotmanagedintegrations#DurationInMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Displays the duration of the next maintenance window.</p>"
          }
        },
        "StartTime": {
          "target": "com.amazonaws.iotmanagedintegrations#StartTime",
          "traits": {
            "smithy.api#documentation": "<p>Displays the start time of the next maintenance window.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Structure representing scheduling maintenance window.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ScheduleMaintenanceWindowList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#ScheduleMaintenanceWindow"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ScheduleStartTime": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#SchedulingConfigEndBehavior": {
      "type": "enum",
      "members": {
        "STOP_ROLLOUT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOP_ROLLOUT"
          }
        },
        "CANCEL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL"
          }
        },
        "FORCE_CANCEL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FORCE_CANCEL"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9.]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 2048
        },
        "smithy.api#pattern": "^[a-zA-Z0-9.,/ -]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionFormat": {
      "type": "enum",
      "members": {
        "AWS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS"
          }
        },
        "ZCL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ZCL"
          }
        },
        "CONNECTOR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONNECTOR"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionListItem"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionListItem": {
      "type": "structure",
      "members": {
        "SchemaId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the schema version.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of schema version.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description of the schema version.</p>"
          }
        },
        "Namespace": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionNamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the schema version.</p>"
          }
        },
        "SemanticVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVersion",
          "traits": {
            "smithy.api#documentation": "<p>The schema version. If this is left blank, it defaults to the latest version.</p>"
          }
        },
        "Visibility": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionVisibility",
          "traits": {
            "smithy.api#documentation": "<p>The visibility of the schema version.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>List item describing a schema version.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionNamespaceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 12
        },
        "smithy.api#pattern": "^[a-z0-9]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionResource": {
      "type": "resource",
      "identifiers": {
        "Type": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionType"
        },
        "SchemaVersionedId": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId"
        }
      },
      "read": {
        "target": "com.amazonaws.iotmanagedintegrations#GetSchemaVersion"
      },
      "list": {
        "target": "com.amazonaws.iotmanagedintegrations#ListSchemaVersions"
      },
      "traits": {
        "aws.api#arn": {
          "template": "schema-versions/{Type}/{SchemaVersionedId}"
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionSchema": {
      "type": "document"
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionType": {
      "type": "enum",
      "members": {
        "CAPABILITY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "capability"
          }
        },
        "DEFINITION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "definition"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 12
        },
        "smithy.api#pattern": "^(\\d+\\.\\d+(\\.\\d+)?|\\$latest)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionVisibility": {
      "type": "enum",
      "members": {
        "PUBLIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PUBLIC"
          }
        },
        "PRIVATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PRIVATE"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SchemaVersionedId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 7,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9.]+@(\\d+\\.\\d+(\\.\\d+)?|\\$latest)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SecretsManager": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iotmanagedintegrations#SecretsManagerArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret.</p>",
            "smithy.api#required": {}
          }
        },
        "versionId": {
          "target": "com.amazonaws.iotmanagedintegrations#SecretsManagerVersionId",
          "traits": {
            "smithy.api#documentation": "<p>The version ID of the AWS Secrets Manager secret.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration for AWS Secrets Manager, used to securely store and manage sensitive information for connector destinations.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SecretsManagerArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {},
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:aws:secretsmanager:[0-9a-zA-Z-]{1,32}:\\d{12}:secret:[A-Za-z0-9/_+=.@-]{8,520}$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SecretsManagerVersionId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 32,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendConnectorEvent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#SendConnectorEventRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#SendConnectorEventResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Relays third-party device events for a connector such as a new device or a device state change event.</p>",
        "smithy.api#examples": [
          {
            "title": "SendConnectorEvent happy path for device discovery",
            "input": {
              "ConnectorId": "MockConnectorId",
              "UserId": "MockThirdPartyUserId",
              "Operation": "DEVICE_DISCOVERY",
              "OperationVersion": "1.0",
              "StatusCode": 200,
              "Message": "Sample ConnectorEventMessage",
              "DeviceDiscoveryId": "358275hbk3qr",
              "Devices": [
                {
                  "ConnectorDeviceId": "Mock-Connector-DeviceId-1",
                  "ConnectorDeviceName": "Sample-User-device-1",
                  "CapabilityReport": {
                    "version": "1.0.0",
                    "nodeId": "1",
                    "endpoints": [
                      {
                        "id": "EP1",
                        "deviceTypes": ["Refrigerator"],
                        "clusters": [
                          {
                            "id": "0x0201",
                            "revision": 1,
                            "attributes": [
                              {
                                "id": "0x0000",
                                "value": "exampleString"
                              },
                              {
                                "id": "0x0001"
                              },
                              {
                                "id": "0x0002"
                              }
                            ],
                            "commands": ["0x00", "0x01"],
                            "events": []
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "output": {
              "ConnectorId": "MockConnectorId"
            }
          },
          {
            "title": "SendConnectorEvent happy path for device command response",
            "input": {
              "ConnectorId": "MockConnectorId",
              "UserId": "MockThirdPartyUserId",
              "Operation": "DEVICE_COMMAND_RESPONSE",
              "OperationVersion": "1.0",
              "StatusCode": 200,
              "Message": "Sample ConnectorEventMessage",
              "TraceId": "9b75f3839b6140f=_1",
              "MatterEndpoint": {
                "id": "1",
                "clusters": [
                  {
                    "id": "0x1003",
                    "attributes": {
                      "0x0000": [73],
                      "0x15570003": "exampleString"
                    },
                    "commands": {
                      "0x03": {}
                    }
                  }
                ]
              }
            },
            "output": {
              "ConnectorId": "MockConnectorId"
            }
          },
          {
            "title": "SendConnectorEvent happy path for device event",
            "input": {
              "ConnectorId": "MockConnectorId",
              "UserId": "MockThirdPartyUserId",
              "Operation": "DEVICE_EVENT",
              "OperationVersion": "1.0",
              "StatusCode": 200,
              "Message": "Sample ConnectorEventMessage",
              "TraceId": "TraceId-Sample",
              "MatterEndpoint": {
                "id": "1",
                "clusters": [
                  {
                    "id": "0x1003",
                    "attributes": {
                      "0x0000": 73
                    }
                  }
                ]
              }
            },
            "output": {
              "ConnectorId": "MockConnectorId"
            }
          }
        ],
        "smithy.api#http": {
          "method": "POST",
          "uri": "/connector-event/{ConnectorId}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendConnectorEventRequest": {
      "type": "structure",
      "members": {
        "ConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the connector between the third-party cloud provider and IoT managed integrations.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "UserId": {
          "target": "com.amazonaws.iotmanagedintegrations#ThirdPartyUserId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the third-party cloud provider.</p>"
          }
        },
        "Operation": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorEventOperation",
          "traits": {
            "smithy.api#documentation": "<p>The Open Connectivity Foundation (OCF) operation requested to be performed on the managed thing.</p> <note> <p>The field op can have a value of \"I\" or \"U\". The field \"cn\" will contain the capability types.</p> </note>",
            "smithy.api#required": {}
          }
        },
        "OperationVersion": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorEventOperationVersion",
          "traits": {
            "smithy.api#documentation": "<p>The Open Connectivity Foundation (OCF) security specification version for the operation being requested on the managed thing. For more information, see <a href=\"https://openconnectivity.org/specs/OCF_Security_Specification_v1.0.0.pdf\">OCF Security Specification</a>.</p>"
          }
        },
        "StatusCode": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorEventStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code of the Open Connectivity Foundation (OCF) operation being performed on the managed thing.</p>"
          }
        },
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorEventMessage",
          "traits": {
            "smithy.api#documentation": "<p>The device state change event payload.</p> <p>This parameter will include the following three fields:</p> <ul> <li> <p> <code>uri</code>: <code>schema auc://&lt;PARTNER-DEVICE-ID&gt;/ResourcePath</code> (The <code>Resourcepath</code> corresponds to an OCF resource.)</p> </li> <li> <p> <code>op</code>: For device state changes, this field must populate as <code>n+d</code>.</p> </li> <li> <p> <code>cn</code>: The content depends on the OCF resource referenced in <code>ResourcePath</code>.</p> </li> </ul>"
          }
        },
        "DeviceDiscoveryId": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The id for the device discovery job.</p>"
          }
        },
        "ConnectorDeviceId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDeviceId",
          "traits": {
            "smithy.api#documentation": "<p>The third-party device id as defined by the connector. This device id must not contain personal identifiable information (PII).</p> <note> <p>This parameter is used for cloud-to-cloud devices only.</p> </note>"
          }
        },
        "TraceId": {
          "target": "com.amazonaws.iotmanagedintegrations#TraceId",
          "traits": {
            "smithy.api#documentation": "<p>The trace request identifier used to correlate a command request and response. This is specified by the device owner, but will be generated by IoT managed integrations if not provided by the device owner.</p>"
          }
        },
        "Devices": {
          "target": "com.amazonaws.iotmanagedintegrations#Devices",
          "traits": {
            "smithy.api#documentation": "<p>The list of devices.</p>"
          }
        },
        "MatterEndpoint": {
          "target": "com.amazonaws.iotmanagedintegrations#MatterEndpoint",
          "traits": {
            "smithy.api#documentation": "<p>The device endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendConnectorEventResponse": {
      "type": "structure",
      "members": {
        "ConnectorId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the connector between the third-party cloud provider and IoT managed integrations.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendManagedThingCommand": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#SendManagedThingCommandRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#SendManagedThingCommandResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Send the command to the device represented by the managed thing. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/managed-things-command/{ManagedThingId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendManagedThingCommandRequest": {
      "type": "structure",
      "members": {
        "ManagedThingId": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the device.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Endpoints": {
          "target": "com.amazonaws.iotmanagedintegrations#CommandEndpoints",
          "traits": {
            "smithy.api#documentation": "<p>The device endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "ConnectorAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorAssociationId",
          "traits": {
            "smithy.api#deprecated": {
              "message": "ConnectorAssociationId has been deprecated",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>The ID tracking the current discovery process for one connector association.</p>"
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the account association to use when sending a command to a managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#SendManagedThingCommandResponse": {
      "type": "structure",
      "members": {
        "TraceId": {
          "target": "com.amazonaws.iotmanagedintegrations#TraceId",
          "traits": {
            "smithy.api#documentation": "<p>The trace request identifier. This is specified by the device owner, but will be generated by IoT managed integrations if not provided by the device owner.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#SerialNumber": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[A-Za-z0-9-_ ]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service quota has been exceeded for this request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service is temporarily unavailable.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 503
      }
    },
    "com.amazonaws.iotmanagedintegrations#SetupAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#SmartHomeResourceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 200
        },
        "smithy.api#pattern": "^[a-zA-Z0-9+*]*$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SmartHomeResourceType": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[*]$|^(managed-thing|credential-locker|provisioning-profile|ota-task|account-association)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#SpecVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^\\d+\\.\\d+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefresh": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefreshRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefreshResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Initiates a refresh of an existing account association to update its authorization and connection status.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/account-associations/{AccountAssociationId}/refresh",
          "code": 200
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefreshRequest": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the account association to refresh.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartAccountAssociationRefreshResponse": {
      "type": "structure",
      "members": {
        "OAuthAuthorizationUrl": {
          "target": "com.amazonaws.iotmanagedintegrations#OAuthAuthorizationUrl",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Third-party IoT platform OAuth authorization server URL with all required parameters to perform end-user authentication during the refresh process.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartDeviceDiscovery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#StartDeviceDiscoveryRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#StartDeviceDiscoveryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> This API is used to start device discovery for hub-connected and third-party-connected devices. The authentication material (install code) is passed as a message to the controller telling it to start the discovery.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/device-discoveries",
          "code": 201
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartDeviceDiscoveryRequest": {
      "type": "structure",
      "members": {
        "DiscoveryType": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryType",
          "traits": {
            "smithy.api#documentation": "<p>The discovery type supporting the type of device to be discovered in the device discovery task request.</p>",
            "smithy.api#required": {}
          }
        },
        "CustomProtocolDetail": {
          "target": "com.amazonaws.iotmanagedintegrations#CustomProtocolDetail",
          "traits": {
            "smithy.api#documentation": "<p>Additional protocol-specific details required for device discovery, which vary based on the discovery type.</p> <note> <p>For a <code>DiscoveryType</code> of <code>CUSTOM</code>, the string-to-string map must have a key value of <code>Name</code> set to a non-empty-string.</p> </note>"
          }
        },
        "ControllerIdentifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the end-user's IoT hub.</p>"
          }
        },
        "ConnectorAssociationIdentifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorAssociationId",
          "traits": {
            "smithy.api#deprecated": {
              "message": "ConnectorAssociationIdentifier is deprecated",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>The id of the connector association.</p>"
          }
        },
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the cloud-to-cloud account association to use for discovery of third-party devices.</p>"
          }
        },
        "AuthenticationMaterial": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryAuthMaterialString",
          "traits": {
            "smithy.api#documentation": "<p>The authentication material required to start the local device discovery job request.</p>"
          }
        },
        "AuthenticationMaterialType": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryAuthMaterialType",
          "traits": {
            "smithy.api#documentation": "<p>The type of authentication material used for device discovery jobs.</p>"
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.iotmanagedintegrations#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token. If you retry a request that completed successfully initially using the same client token and parameters, then the retry attempt will succeed without performing any further actions.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Tags have been deprecated from this api",
              "since": "06-25-2025"
            },
            "smithy.api#documentation": "<p>A set of key/value pairs that are used to manage the device discovery request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartDeviceDiscoveryResponse": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#DeviceDiscoveryId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the device discovery job request.</p>"
          }
        },
        "StartedAt": {
          "target": "com.amazonaws.iotmanagedintegrations#DiscoveryStartedAt",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp value for the start time of the device discovery.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#StartTime": {
      "type": "string"
    },
    "com.amazonaws.iotmanagedintegrations#StartedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#StateCapabilities": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#StateCapability"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#StateCapability": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.iotmanagedintegrations#SchemaVersionedId",
          "traits": {
            "smithy.api#documentation": "<p>The id of the managed thing in the capability report.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityName",
          "traits": {
            "smithy.api#documentation": "<p>Name for the Amazon Web Services capability.</p>",
            "smithy.api#required": {}
          }
        },
        "version": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityVersion",
          "traits": {
            "smithy.api#documentation": "<p>Version for the Amazon Web Services capability.</p>",
            "smithy.api#required": {}
          }
        },
        "properties": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityProperties",
          "traits": {
            "smithy.api#documentation": "<p>Describe the command capability with the properties it supports.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>State capabilities added for the managed thing.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#StateEndpoint": {
      "type": "structure",
      "members": {
        "endpointId": {
          "target": "com.amazonaws.iotmanagedintegrations#EndpointId",
          "traits": {
            "smithy.api#documentation": "<p>Numeric identifier of the endpoint</p>",
            "smithy.api#required": {}
          }
        },
        "capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#StateCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>Describe the endpoint with an id, a name, and the relevant capabilities for the reporting state.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describe the endpoint with an Id, a name, and the relevant capabilities for reporting state</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#StateEndpoints": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#StateEndpoint"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 5
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotmanagedintegrations#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Add tags for the specified resource.",
        "smithy.api#http": {
          "uri": "/tags/{ResourceArn}",
          "method": "POST"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.iotmanagedintegrations#IoTManagedIntegrationsResourceARN",
          "traits": {
            "smithy.api#documentation": "The ARN of the resource to which to add tags.",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.iotmanagedintegrations#TagsMap",
          "traits": {
            "smithy.api#documentation": "A set of key/value pairs that are used to manage the resource",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#TagsMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iotmanagedintegrations#TagKey"
      },
      "value": {
        "target": "com.amazonaws.iotmanagedintegrations#TagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#Target": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.iotmanagedintegrations#TaskProcessingDetails": {
      "type": "structure",
      "members": {
        "NumberOfCanceledThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of canceled things in an over-the-air (OTA) task.</p>"
          }
        },
        "NumberOfFailedThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of failed things in an over-the-air (OTA) task.</p>"
          }
        },
        "NumberOfInProgressThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of in progress things in an over-the-air (OTA) task.</p>"
          }
        },
        "numberOfQueuedThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of queued things in an over-the-air (OTA) task.</p>"
          }
        },
        "numberOfRejectedThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of rejected things in an over-the-air (OTA) task.</p>"
          }
        },
        "numberOfRemovedThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of removed things in an over-the-air (OTA) task.</p>"
          }
        },
        "numberOfSucceededThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of succeeded things in an over-the-air (OTA) task.</p>"
          }
        },
        "numberOfTimedOutThings": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of timed out things in an over-the-air (OTA) task.</p>"
          }
        },
        "processingTargets": {
          "target": "com.amazonaws.iotmanagedintegrations#Target",
          "traits": {
            "smithy.api#documentation": "<p>The targets of the over-the-air (OTA) task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the over-the-air (OTA) task process.</p>"
      }
    },
    "com.amazonaws.iotmanagedintegrations#ThirdPartyUserId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_.,@-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#ThresholdPercentage": {
      "type": "double",
      "traits": {
        "smithy.api#range": {
          "max": 100
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The rate exceeds the limit.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.iotmanagedintegrations#TokenEndpointAuthenticationScheme": {
      "type": "enum",
      "members": {
        "HTTP_BASIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP_BASIC"
          }
        },
        "REQUEST_BODY_CREDENTIALS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REQUEST_BODY_CREDENTIALS"
          }
        }
      }
    },
    "com.amazonaws.iotmanagedintegrations#TokenUrl": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#TraceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9:=_-]+$"
      }
    },
    "com.amazonaws.iotmanagedintegrations#UnauthorizedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You are not authorized to perform this operation.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 401
      }
    },
    "com.amazonaws.iotmanagedintegrations#UniversalProductCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 12,
          "max": 12
        },
        "smithy.api#pattern": "^[0-9]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iotmanagedintegrations#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "Remove tags for the specified resource.",
        "smithy.api#http": {
          "uri": "/tags/{ResourceArn}",
          "method": "DELETE"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.iotmanagedintegrations#IoTManagedIntegrationsResourceARN",
          "traits": {
            "smithy.api#documentation": "The ARN of the resource to which to add tags.",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.iotmanagedintegrations#TagKeyList",
          "traits": {
            "smithy.api#documentation": "A list of tag keys to remove from the resource.",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateAccountAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateAccountAssociationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the properties of an existing account association.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/account-associations/{AccountAssociationId}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateAccountAssociationRequest": {
      "type": "structure",
      "members": {
        "AccountAssociationId": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The unique identifier of the account association to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The new name to assign to the account association.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#AccountAssociationDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The new description to assign to the account association.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateCloudConnector": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateCloudConnectorRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update an existing cloud connector.</p>",
        "smithy.api#examples": [
          {
            "title": "UpdateCloudConnector happy path for TP Link to update display name",
            "input": {
              "Identifier": "123456789012",
              "Name": "Connector for TP Link Cloud V2"
            }
          },
          {
            "title": "UpdateCloudConnector error Id for Ring connector which does not exist",
            "input": {
              "Identifier": "123456789012",
              "Name": "Connector for Ring Cloud"
            },
            "error": {
              "shapeId": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException",
              "content": {
                "Message": "Connector Resource does not exists",
                "ResourceId": "123456789012",
                "ResourceType": "CloudConnector"
              }
            },
            "allowConstraintErrors": true
          }
        ],
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/cloud-connectors/{Identifier}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateCloudConnectorRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the cloud connector to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The new display name to assign to the cloud connector.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#CloudConnectorDescription",
          "traits": {
            "smithy.api#documentation": "<p>The new description to assign to the cloud connector.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateConnectorDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateConnectorDestinationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the properties of an existing connector destination.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/connector-destinations/{Identifier}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateConnectorDestinationRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the connector destination to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>The new description to assign to the connector destination.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#ConnectorDestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The new display name to assign to the connector destination.</p>"
          }
        },
        "AuthType": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthType",
          "traits": {
            "smithy.api#documentation": "<p>The new authentication type to use for the connector destination.</p>"
          }
        },
        "AuthConfig": {
          "target": "com.amazonaws.iotmanagedintegrations#AuthConfigUpdate",
          "traits": {
            "smithy.api#documentation": "<p>The updated authentication configuration details for the connector destination.</p>"
          }
        },
        "SecretsManager": {
          "target": "com.amazonaws.iotmanagedintegrations#SecretsManager",
          "traits": {
            "smithy.api#documentation": "<p>The updated AWS Secrets Manager configuration for the connector destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateDestinationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Update a destination specified by id. </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/destinations/{Name}",
          "code": 201
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateDestinationRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DeliveryDestinationArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the customer-managed destination.</p>"
          }
        },
        "DeliveryDestinationType": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationType",
          "traits": {
            "smithy.api#documentation": "<p>The destination type for the customer-managed destination.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.iotmanagedintegrations#DeliveryDestinationRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the delivery destination role.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the customer-managed destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateEventLogConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateEventLogConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update an event log configuration by log configuration ID.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/event-log-configurations/{Id}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateEventLogConfigurationRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.iotmanagedintegrations#LogConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The log configuration id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "EventLogLevel": {
          "target": "com.amazonaws.iotmanagedintegrations#LogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The log level for the event in terms of severity.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateManagedThing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateManagedThingRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ConflictException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#UnauthorizedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update the attributes and capabilities associated with a managed thing.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/managed-things/{Identifier}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateManagedThingRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#ManagedThingId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The id of the managed thing.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Owner": {
          "target": "com.amazonaws.iotmanagedintegrations#Owner",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Owner of the device, usually an indication of whom the device belongs to. This value should not contain personal identifiable information.</p>"
          }
        },
        "CredentialLockerId": {
          "target": "com.amazonaws.iotmanagedintegrations#CredentialLockerId",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The identifier of the credential for the managed thing.</p>"
          }
        },
        "SerialNumber": {
          "target": "com.amazonaws.iotmanagedintegrations#SerialNumber",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The serial number of the device.</p>"
          }
        },
        "Brand": {
          "target": "com.amazonaws.iotmanagedintegrations#Brand",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The brand of the device.</p>"
          }
        },
        "Model": {
          "target": "com.amazonaws.iotmanagedintegrations#Model",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The model of the device.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.iotmanagedintegrations#Name",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The name of the managed thing representing the physical device.</p>"
          }
        },
        "CapabilityReport": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilityReport",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A report of the capabilities for the managed thing.</p>"
          }
        },
        "CapabilitySchemas": {
          "target": "com.amazonaws.iotmanagedintegrations#CapabilitySchemas",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The updated capability schemas that define the functionality and features supported by the managed thing.</p>"
          }
        },
        "Capabilities": {
          "target": "com.amazonaws.iotmanagedintegrations#Capabilities",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The capabilities of the device such as light bulb.</p>"
          }
        },
        "Classification": {
          "target": "com.amazonaws.iotmanagedintegrations#Classification",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The classification of the managed thing such as light bulb or thermostat.</p>"
          }
        },
        "HubNetworkMode": {
          "target": "com.amazonaws.iotmanagedintegrations#HubNetworkMode",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The network mode for the hub-connected device.</p>"
          }
        },
        "MetaData": {
          "target": "com.amazonaws.iotmanagedintegrations#MetaData",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The metadata for the managed thing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateNotificationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateNotificationConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Update a notification configuration.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/notification-configurations/{EventType}",
          "code": 201
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateNotificationConfigurationRequest": {
      "type": "structure",
      "members": {
        "EventType": {
          "target": "com.amazonaws.iotmanagedintegrations#EventType",
          "traits": {
            "smithy.api#documentation": "<p>The type of event triggering a device notification to the customer-managed destination.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DestinationName": {
          "target": "com.amazonaws.iotmanagedintegrations#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination for the notification configuration.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateOtaTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iotmanagedintegrations#UpdateOtaTaskRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.iotmanagedintegrations#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#InternalServerException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ThrottlingException"
        },
        {
          "target": "com.amazonaws.iotmanagedintegrations#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Update an over-the-air (OTA) task.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/ota-tasks/{Identifier}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdateOtaTaskRequest": {
      "type": "structure",
      "members": {
        "Identifier": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The over-the-air (OTA) task id.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the over-the-air (OTA) task.</p>"
          }
        },
        "TaskConfigurationId": {
          "target": "com.amazonaws.iotmanagedintegrations#OtaTaskConfigurationId",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the over-the-air (OTA) task configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.iotmanagedintegrations#UpdatedAt": {
      "type": "timestamp"
    },
    "com.amazonaws.iotmanagedintegrations#UploadLog": {
      "type": "boolean"
    },
    "com.amazonaws.iotmanagedintegrations#UploadPeriodMinutes": {
      "type": "integer"
    },
    "com.amazonaws.iotmanagedintegrations#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.iotmanagedintegrations#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A validation error occurred when performing the API request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.iotmanagedintegrations#ValidationSchema": {
      "type": "document"
    }
  }
}
