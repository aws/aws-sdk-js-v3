{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.apigateway#AccessLogSettings": {
      "type": "structure",
      "members": {
        "format": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A single line format of the access logs of data, as specified by selected <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#context-variable-reference\">$context variables</a>. The format must include at least <code>$context.requestId</code>.</p>"
          }
        },
        "destinationArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with <code>amazon-apigateway-</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Access log settings, including the access log format and access log destination ARN.</p>"
      }
    },
    "com.amazonaws.apigateway#Account": {
      "type": "structure",
      "members": {
        "features": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of features supported for the account. When usage plans are enabled, the features list will include an entry of <code>\"UsagePlans\"</code>.</p>"
          }
        },
        "apiKeyVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The version of the API keys used for the account.</p>"
          }
        },
        "throttleSettings": {
          "target": "com.amazonaws.apigateway#ThrottleSettings",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the API request limits configured for the current <a>Account</a>.</p>"
          }
        },
        "cloudwatchRoleArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of an Amazon CloudWatch role for the current <a>Account</a>. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an AWS account that is associated with API Gateway.</p>\n        <div class=\"remarks\">\n          <p>To view the account info, call <code>GET</code> on this resource.</p>\n          <h4>Error Codes</h4>\n          <p>The following exception may be thrown when the request fails.</p>\n          <ul>\n            <li>UnauthorizedException</li>\n            <li>NotFoundException</li>\n            <li>TooManyRequestsException</li>\n          </ul>\n          <p>For detailed error code information, including the corresponding HTTP Status Codes, see <a href=\"https://docs.aws.amazon.com/apigateway/api-reference/handling-errors/#api-error-codes\">API Gateway Error Codes</a></p>\n            <h4>Example: Get the information about an account.</h4>\n            <h5>Request</h5>\n            <pre><code>GET /account HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nX-Amz-Date: 20160531T184618Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}\n            </code></pre>\n            <h5>Response</h5>\n            <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p>\n            <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html\",\n      \"name\": \"account\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/account\"\n    },\n    \"account:update\": {\n      \"href\": \"/account\"\n    }\n  },\n  \"cloudwatchRoleArn\": \"arn:aws:iam::123456789012:role/apigAwsProxyRole\",\n  \"throttleSettings\": {\n    \"rateLimit\": 500,\n    \"burstLimit\": 1000\n  }\n}\n            </code></pre>\n            <p>In addition to making the REST API call directly, you can use the AWS CLI and an AWS SDK to access this resource.</p>\n        </div>\n        <div class=\"seeAlso\">\n          <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-limits.html\">API Gateway Limits</a>\n            <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html\">Developer Guide</a>,\n            <a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-account.html\">AWS CLI</a>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#ApiKey": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API Key.</p>"
          }
        },
        "stageKeys": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p>"
          }
        },
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API Key was created.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the API Key.</p>"
          }
        },
        "customerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.</p>"
          }
        },
        "lastUpdatedDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API Key was last updated.</p>"
          }
        },
        "enabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the API Key can be used by callers.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API Key.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The value of the API Key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource that can be distributed to callers for executing <a>Method</a> resources that require an API key. API keys can be mapped to any <a>Stage</a> on any <a>RestApi</a>, which indicates that the callers with the API key can make requests to that stage.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html\">Use API Keys</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#ApiKeyIds": {
      "type": "structure",
      "members": {
        "ids": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of all the <a>ApiKey</a> identifiers.</p>"
          }
        },
        "warnings": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of warning messages.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The identifier of an <a>ApiKey</a> used in a <a>UsagePlan</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#ApiKeySourceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HEADER",
            "name": "HEADER"
          },
          {
            "value": "AUTHORIZER",
            "name": "AUTHORIZER"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#ApiKeys": {
      "type": "structure",
      "members": {
        "warnings": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of warning messages logged during the import of API keys when the <code>failOnWarnings</code> option is set to true.</p>"
          }
        },
        "items": {
          "target": "com.amazonaws.apigateway#ListOfApiKey",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of API keys as represented by an <a>ApiKeys</a> resource.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html\">Use API Keys</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#ApiKeysFormat": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "csv",
            "name": "csv"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#ApiStage": {
      "type": "structure",
      "members": {
        "stage": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>API stage name of the associated API stage in a usage plan.</p>"
          }
        },
        "throttle": {
          "target": "com.amazonaws.apigateway#MapOfApiStageThrottleSettings",
          "traits": {
            "smithy.api#documentation": "<p>Map containing method level throttling information for API stage in a usage plan.</p>"
          }
        },
        "apiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>API Id of the associated API stage in a usage plan.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>API stage name of the associated API stage in a usage plan.</p>"
      }
    },
    "com.amazonaws.apigateway#Authorizer": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the authorizer.</p>"
          }
        },
        "authorizerCredentials": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.</p>"
          }
        },
        "identitySource": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> or <code>COGNITO_USER_POOLS</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is  <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>.  These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li></ul></p>"
          }
        },
        "type": {
          "target": "com.amazonaws.apigateway#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.</p>"
          }
        },
        "authorizerUri": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the authorizer's Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form  <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.</p>"
          }
        },
        "providerARNs": {
          "target": "com.amazonaws.apigateway#ListOfARNs",
          "traits": {
            "smithy.api#documentation": "<p>A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined. </p>"
          }
        },
        "authType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Optional customer-defined field, used in OpenAPI imports and exports without functional impact.</p>"
          }
        },
        "identityValidationExpression": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. For <code>COGNITO_USER_POOLS</code> authorizers, API Gateway will match the <code>aud</code> field of the incoming token from the client against the specified regular expression. It will invoke the authorizer's Lambda function when there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.</p>"
          }
        },
        "authorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the authorizer resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html\">Use Lambda Function as Authorizer</a>\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html\">Use Cognito User Pool as Authorizer</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#AuthorizerType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.</p>",
        "smithy.api#enum": [
          {
            "value": "TOKEN",
            "name": "TOKEN"
          },
          {
            "value": "REQUEST",
            "name": "REQUEST"
          },
          {
            "value": "COGNITO_USER_POOLS",
            "name": "COGNITO_USER_POOLS"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#Authorizers": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfAuthorizer",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>Authorizer</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html\">Use Lambda Function as Authorizer</a>\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html\">Use Cognito User Pool as Authorizer</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#BackplaneControlService": {
      "type": "service",
      "version": "2015-07-09",
      "operations": [
        {
          "target": "com.amazonaws.apigateway#CreateApiKey"
        },
        {
          "target": "com.amazonaws.apigateway#CreateAuthorizer"
        },
        {
          "target": "com.amazonaws.apigateway#CreateBasePathMapping"
        },
        {
          "target": "com.amazonaws.apigateway#CreateDeployment"
        },
        {
          "target": "com.amazonaws.apigateway#CreateDocumentationPart"
        },
        {
          "target": "com.amazonaws.apigateway#CreateDocumentationVersion"
        },
        {
          "target": "com.amazonaws.apigateway#CreateDomainName"
        },
        {
          "target": "com.amazonaws.apigateway#CreateModel"
        },
        {
          "target": "com.amazonaws.apigateway#CreateRequestValidator"
        },
        {
          "target": "com.amazonaws.apigateway#CreateResource"
        },
        {
          "target": "com.amazonaws.apigateway#CreateRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#CreateStage"
        },
        {
          "target": "com.amazonaws.apigateway#CreateUsagePlan"
        },
        {
          "target": "com.amazonaws.apigateway#CreateUsagePlanKey"
        },
        {
          "target": "com.amazonaws.apigateway#CreateVpcLink"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteApiKey"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteAuthorizer"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteBasePathMapping"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteClientCertificate"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteDeployment"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteDocumentationPart"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteDocumentationVersion"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteDomainName"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteGatewayResponse"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteIntegration"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteMethod"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteMethodResponse"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteModel"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteRequestValidator"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteResource"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteStage"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteUsagePlan"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteUsagePlanKey"
        },
        {
          "target": "com.amazonaws.apigateway#DeleteVpcLink"
        },
        {
          "target": "com.amazonaws.apigateway#FlushStageAuthorizersCache"
        },
        {
          "target": "com.amazonaws.apigateway#FlushStageCache"
        },
        {
          "target": "com.amazonaws.apigateway#GenerateClientCertificate"
        },
        {
          "target": "com.amazonaws.apigateway#GetAccount"
        },
        {
          "target": "com.amazonaws.apigateway#GetApiKey"
        },
        {
          "target": "com.amazonaws.apigateway#GetApiKeys"
        },
        {
          "target": "com.amazonaws.apigateway#GetAuthorizer"
        },
        {
          "target": "com.amazonaws.apigateway#GetAuthorizers"
        },
        {
          "target": "com.amazonaws.apigateway#GetBasePathMapping"
        },
        {
          "target": "com.amazonaws.apigateway#GetBasePathMappings"
        },
        {
          "target": "com.amazonaws.apigateway#GetClientCertificate"
        },
        {
          "target": "com.amazonaws.apigateway#GetClientCertificates"
        },
        {
          "target": "com.amazonaws.apigateway#GetDeployment"
        },
        {
          "target": "com.amazonaws.apigateway#GetDeployments"
        },
        {
          "target": "com.amazonaws.apigateway#GetDocumentationPart"
        },
        {
          "target": "com.amazonaws.apigateway#GetDocumentationParts"
        },
        {
          "target": "com.amazonaws.apigateway#GetDocumentationVersion"
        },
        {
          "target": "com.amazonaws.apigateway#GetDocumentationVersions"
        },
        {
          "target": "com.amazonaws.apigateway#GetDomainName"
        },
        {
          "target": "com.amazonaws.apigateway#GetDomainNames"
        },
        {
          "target": "com.amazonaws.apigateway#GetExport"
        },
        {
          "target": "com.amazonaws.apigateway#GetGatewayResponse"
        },
        {
          "target": "com.amazonaws.apigateway#GetGatewayResponses"
        },
        {
          "target": "com.amazonaws.apigateway#GetIntegration"
        },
        {
          "target": "com.amazonaws.apigateway#GetIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigateway#GetMethod"
        },
        {
          "target": "com.amazonaws.apigateway#GetMethodResponse"
        },
        {
          "target": "com.amazonaws.apigateway#GetModel"
        },
        {
          "target": "com.amazonaws.apigateway#GetModels"
        },
        {
          "target": "com.amazonaws.apigateway#GetModelTemplate"
        },
        {
          "target": "com.amazonaws.apigateway#GetRequestValidator"
        },
        {
          "target": "com.amazonaws.apigateway#GetRequestValidators"
        },
        {
          "target": "com.amazonaws.apigateway#GetResource"
        },
        {
          "target": "com.amazonaws.apigateway#GetResources"
        },
        {
          "target": "com.amazonaws.apigateway#GetRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#GetRestApis"
        },
        {
          "target": "com.amazonaws.apigateway#GetSdk"
        },
        {
          "target": "com.amazonaws.apigateway#GetSdkType"
        },
        {
          "target": "com.amazonaws.apigateway#GetSdkTypes"
        },
        {
          "target": "com.amazonaws.apigateway#GetStage"
        },
        {
          "target": "com.amazonaws.apigateway#GetStages"
        },
        {
          "target": "com.amazonaws.apigateway#GetTags"
        },
        {
          "target": "com.amazonaws.apigateway#GetUsage"
        },
        {
          "target": "com.amazonaws.apigateway#GetUsagePlan"
        },
        {
          "target": "com.amazonaws.apigateway#GetUsagePlanKey"
        },
        {
          "target": "com.amazonaws.apigateway#GetUsagePlanKeys"
        },
        {
          "target": "com.amazonaws.apigateway#GetUsagePlans"
        },
        {
          "target": "com.amazonaws.apigateway#GetVpcLink"
        },
        {
          "target": "com.amazonaws.apigateway#GetVpcLinks"
        },
        {
          "target": "com.amazonaws.apigateway#ImportApiKeys"
        },
        {
          "target": "com.amazonaws.apigateway#ImportDocumentationParts"
        },
        {
          "target": "com.amazonaws.apigateway#ImportRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#PutGatewayResponse"
        },
        {
          "target": "com.amazonaws.apigateway#PutIntegration"
        },
        {
          "target": "com.amazonaws.apigateway#PutIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigateway#PutMethod"
        },
        {
          "target": "com.amazonaws.apigateway#PutMethodResponse"
        },
        {
          "target": "com.amazonaws.apigateway#PutRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#TagResource"
        },
        {
          "target": "com.amazonaws.apigateway#TestInvokeAuthorizer"
        },
        {
          "target": "com.amazonaws.apigateway#TestInvokeMethod"
        },
        {
          "target": "com.amazonaws.apigateway#UntagResource"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateAccount"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateApiKey"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateAuthorizer"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateBasePathMapping"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateClientCertificate"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateDeployment"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateDocumentationPart"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateDocumentationVersion"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateDomainName"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateGatewayResponse"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateIntegration"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateMethod"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateMethodResponse"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateModel"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateRequestValidator"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateResource"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateRestApi"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateStage"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateUsage"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateUsagePlan"
        },
        {
          "target": "com.amazonaws.apigateway#UpdateVpcLink"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "API Gateway",
          "arnNamespace": "apigateway",
          "cloudFormationName": "ApiGateway",
          "cloudTrailEventSource": "controlplane.backplane.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "apigateway"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<fullname>Amazon API Gateway</fullname>\n        <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>",
        "smithy.api#title": "Amazon API Gateway"
      }
    },
    "com.amazonaws.apigateway#BadRequestException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The submitted request is not valid, for example, the input is incomplete or incorrect. See the accompanying error message for details.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.apigateway#BasePathMapping": {
      "type": "structure",
      "members": {
        "stage": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the associated stage.</p>"
          }
        },
        "basePath": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The base path name that callers of the API must provide as part of the URL after the domain name.</p>"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The string identifier of the associated <a>RestApi</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the base path that callers of the API must provide as part of the URL after the domain name.</p>\n        <div class=\"remarks\">A custom domain name plus a <code>BasePathMapping</code> specification identifies a deployed <a>RestApi</a> in a given stage of the owner <a>Account</a>.</div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Use Custom Domain Names</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#BasePathMappings": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfBasePathMapping",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>BasePathMapping</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Use Custom Domain Names</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#Blob": {
      "type": "blob"
    },
    "com.amazonaws.apigateway#Boolean": {
      "type": "boolean"
    },
    "com.amazonaws.apigateway#CacheClusterSize": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Returns the size of the <b>CacheCluster</b>.</p>",
        "smithy.api#enum": [
          {
            "value": "0.5",
            "name": "SIZE_0_POINT_5_GB"
          },
          {
            "value": "1.6",
            "name": "SIZE_1_POINT_6_GB"
          },
          {
            "value": "6.1",
            "name": "SIZE_6_POINT_1_GB"
          },
          {
            "value": "13.5",
            "name": "SIZE_13_POINT_5_GB"
          },
          {
            "value": "28.4",
            "name": "SIZE_28_POINT_4_GB"
          },
          {
            "value": "58.2",
            "name": "SIZE_58_POINT_2_GB"
          },
          {
            "value": "118",
            "name": "SIZE_118_GB"
          },
          {
            "value": "237",
            "name": "SIZE_237_GB"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#CacheClusterStatus": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Returns the status of the <b>CacheCluster</b>.</p>",
        "smithy.api#enum": [
          {
            "value": "CREATE_IN_PROGRESS",
            "name": "CREATE_IN_PROGRESS"
          },
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "DELETE_IN_PROGRESS",
            "name": "DELETE_IN_PROGRESS"
          },
          {
            "value": "NOT_AVAILABLE",
            "name": "NOT_AVAILABLE"
          },
          {
            "value": "FLUSH_IN_PROGRESS",
            "name": "FLUSH_IN_PROGRESS"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#CanarySettings": {
      "type": "structure",
      "members": {
        "stageVariableOverrides": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Stage variables overridden for a canary release deployment, including new stage variables introduced in the canary. These stage variables are represented as a string-to-string map between stage variable names and their values.</p>"
          }
        },
        "useStageCache": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether the canary deployment uses the stage cache or not.</p>"
          }
        },
        "percentTraffic": {
          "target": "com.amazonaws.apigateway#Double",
          "traits": {
            "smithy.api#documentation": "<p>The percent (0-100) of traffic diverted to a canary deployment.</p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the canary deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration settings of a canary deployment.</p>"
      }
    },
    "com.amazonaws.apigateway#ClientCertificate": {
      "type": "structure",
      "members": {
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the client certificate was created.</p>"
          }
        },
        "pemEncodedCertificate": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The PEM-encoded public key of the client certificate, which can be used to configure certificate authentication in the integration endpoint .</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "expirationDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the client certificate will expire.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the client certificate.</p>"
          }
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the client certificate.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.</p>\n        <div class=\"remarks\">Client certificates are used to authenticate an API by the backend server. To authenticate an API client (or user), use IAM roles and policies, a custom <a>Authorizer</a> or an Amazon Cognito user pool.</div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html\">Use Client-Side Certificate</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#ClientCertificates": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfClientCertificate",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>ClientCertificate</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html\">Use Client-Side Certificate</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request configuration has conflicts. For details, see the accompanying error message.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.apigateway#ConnectionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "INTERNET",
            "name": "INTERNET"
          },
          {
            "value": "VPC_LINK",
            "name": "VPC_LINK"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#ContentHandlingStrategy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CONVERT_TO_BINARY",
            "name": "CONVERT_TO_BINARY"
          },
          {
            "value": "CONVERT_TO_TEXT",
            "name": "CONVERT_TO_TEXT"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#CreateApiKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateApiKeyRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ApiKey"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create an <a>ApiKey</a> resource. </p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/create-api-key.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/apikeys",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateApiKeyRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the <a>ApiKey</a>.</p>"
          }
        },
        "stageKeys": {
          "target": "com.amazonaws.apigateway#ListOfStageKeys",
          "traits": {
            "smithy.api#documentation": "<p>DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the <a>ApiKey</a>.</p>"
          }
        },
        "customerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>An AWS Marketplace customer identifier , when integrating with the AWS SaaS Marketplace.</p>"
          }
        },
        "generateDistinctId": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether (<code>true</code>) or not (<code>false</code>) the key identifier is distinct from the created API key value. This parameter is deprecated and should not be used.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a value of the API key.</p> <!-- Why is this declared as the input to create an API key? As a form of copying an existing key value into a new API key? -->"
          }
        },
        "enabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the <a>ApiKey</a> can be used by callers.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to create an <a>ApiKey</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Authorizer"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a new <a>Authorizer</a> resource to an existing <a>RestApi</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/create-authorizer.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/authorizers",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateAuthorizerRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the authorizer.</p>",
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "type": {
          "target": "com.amazonaws.apigateway#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The authorizer type. Valid values are <code>TOKEN</code> for a Lambda function using a single authorization token submitted in a custom header, <code>REQUEST</code> for a Lambda function using incoming request parameters, and <code>COGNITO_USER_POOLS</code> for using an Amazon Cognito user pool.</p>",
            "smithy.api#required": {}
          }
        },
        "authType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Optional customer-defined field, used in OpenAPI imports and exports without functional impact.</p>"
          }
        },
        "authorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The TTL in seconds of cached authorizer results. If it equals 0, authorization caching is disabled. If it is greater than 0, API Gateway will cache authorizer responses. If this field is not set, the default value is 300. The maximum value is 3600, or 1 hour.</p>"
          }
        },
        "identityValidationExpression": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A validation expression for the incoming identity token. For <code>TOKEN</code> authorizers, this value is a regular expression. For <code>COGNITO_USER_POOLS</code> authorizers, API Gateway will match the <code>aud</code> field of the incoming token from the client against the specified regular expression. It will invoke the authorizer's Lambda function when there is a match. Otherwise, it will return a 401 Unauthorized response without calling the Lambda function. The validation expression does not apply to the <code>REQUEST</code> authorizer.</p>"
          }
        },
        "identitySource": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested. <ul><li>For a <code>TOKEN</code> or <code>COGNITO_USER_POOLS</code> authorizer, this is required and specifies the request header mapping expression for the custom header holding the authorization token submitted by the client. For example, if the token header name is <code>Auth</code>, the header mapping expression is  <code>method.request.header.Auth</code>.</li><li>For the <code>REQUEST</code> authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an <code>Auth</code> header, a <code>Name</code> query string parameter are defined as identity sources, this value is <code>method.request.header.Auth, method.request.querystring.Name</code>.  These parameters will be used to derive the authorization caching key and to perform runtime validation of the <code>REQUEST</code> authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</li></ul></p>"
          }
        },
        "authorizerUri": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the authorizer's Uniform Resource Identifier (URI). For <code>TOKEN</code> or <code>REQUEST</code> authorizers, this must be a well-formed Lambda function URI, for example, <code>arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations</code>. In general, the URI has this form  <code>arn:aws:apigateway:{region}:lambda:path/{service_api}</code>, where <code>{region}</code> is the same as the region hosting the Lambda function, <code>path</code> indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial <code>/</code>. For Lambda functions, this is usually of the form <code>/2015-03-31/functions/[FunctionARN]/invocations</code>.</p>"
          }
        },
        "authorizerCredentials": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.</p>"
          }
        },
        "providerARNs": {
          "target": "com.amazonaws.apigateway#ListOfARNs",
          "traits": {
            "smithy.api#documentation": "<p>A list of the Amazon Cognito user pool ARNs for the <code>COGNITO_USER_POOLS</code> authorizer. Each element is of this format: <code>arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}</code>. For a <code>TOKEN</code> or <code>REQUEST</code> authorizer, this is not defined. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to add a new <a>Authorizer</a> to an existing <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateBasePathMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateBasePathMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#BasePathMapping"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new <a>BasePathMapping</a> resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/domainnames/{domainName}/basepathmappings",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateBasePathMappingRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The domain name of the <a>BasePathMapping</a> resource to create.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "stage": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API's stage that you want to use for this mapping. Specify '(none)' if you want callers to explicitly specify the stage name after any base path name.</p>"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "basePath": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Specify '(none)' if you do not want callers to specify a base path name after the domain name.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to create a new <a>BasePathMapping</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Deployment"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <a>Deployment</a> resource, which makes a specified <a>RestApi</a> callable over the internet.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/deployments",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateDeploymentRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tracingEnabled": {
          "target": "com.amazonaws.apigateway#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether active tracing with X-ray is enabled for the <a>Stage</a>.</p>"
          }
        },
        "canarySettings": {
          "target": "com.amazonaws.apigateway#DeploymentCanarySettings",
          "traits": {
            "smithy.api#documentation": "<p>The input configuration for the canary deployment when the deployment is a canary release deployment. </p>"
          }
        },
        "variables": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for the <a>Stage</a> resource that is associated\n          with the new deployment. Variable names can have alphanumeric and underscore characters, and the values\n          must match <code>[A-Za-z0-9-._~:/?#&=,]+</code>.</p>"
          }
        },
        "cacheClusterSize": {
          "target": "com.amazonaws.apigateway#CacheClusterSize",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the cache cluster size for the <a>Stage</a> resource specified in the input, if a cache cluster is enabled.</p>"
          }
        },
        "stageDescription": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.</p>"
          }
        },
        "cacheClusterEnabled": {
          "target": "com.amazonaws.apigateway#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Enables a cache cluster for the <a>Stage</a> resource specified in the input.</p>"
          }
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the <a>Stage</a> resource for the <a>Deployment</a> resource to create.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description for the <a>Deployment</a> resource to create.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to create a <a>Deployment</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateDocumentationPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateDocumentationPartRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationPart"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/documentation/parts",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateDocumentationPartRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "properties": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The new documentation content map of the targeted API entity. Enclosed key-value pairs are API-specific, but only OpenAPI-compliant key-value pairs can be exported and, hence, published.</p>",
            "smithy.api#required": {}
          }
        },
        "location": {
          "target": "com.amazonaws.apigateway#DocumentationPartLocation",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The location of the targeted API entity of the to-be-created documentation part.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new documentation part of a given API.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateDocumentationVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateDocumentationVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationVersion"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/documentation/versions",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateDocumentationVersionRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The stage name to be associated with the new documentation snapshot.</p>"
          }
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The version identifier of the new snapshot.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A description about the new documentation snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new documentation version of a given API.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DomainName"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new domain name.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/domainnames",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateDomainNameRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "certificatePrivateKey": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Deprecated] Your edge-optimized endpoint's domain name certificate's private key.</p>"
          }
        },
        "certificateChain": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Deprecated] The intermediate certificates and optionally the root certificate, one after the other without any blank lines, used by an edge-optimized endpoint for this domain name. If you include the root certificate, your certificate chain must start with intermediate certificates and end with the root certificate. Use the intermediate certificates that were provided by your certificate authority. Do not include any intermediaries that are not in the chain of trust path.</p>"
          }
        },
        "regionalCertificateName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The user-friendly name of the certificate that will be used by regional endpoint for this domain name.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        },
        "certificateBody": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Deprecated] The body of the server certificate that will be used by edge-optimized endpoint for this domain name provided by your certificate authority.</p>"
          }
        },
        "certificateName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The user-friendly name of the certificate that will be used by edge-optimized endpoint for this domain name.</p>"
          }
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>DomainName</a> resource.</p>",
            "smithy.api#required": {}
          }
        },
        "endpointConfiguration": {
          "target": "com.amazonaws.apigateway#EndpointConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint configuration of this <a>DomainName</a> showing the endpoint types of the domain name. </p>"
          }
        },
        "securityPolicy": {
          "target": "com.amazonaws.apigateway#SecurityPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The Transport Layer Security (TLS) version + cipher suite for this <a>DomainName</a>. The valid values are <code>TLS_1_0</code> and <code>TLS_1_2</code>.</p>"
          }
        },
        "certificateArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The reference to an AWS-managed certificate that will be used by edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>"
          }
        },
        "regionalCertificateArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The reference to an AWS-managed certificate that will be used by regional endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to create a new domain name.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Model"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a new <a>Model</a> resource to an existing <a>RestApi</a> resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/models",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateModelRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>RestApi</a> identifier under which the <a>Model</a> will be created.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the model. Must be alphanumeric.</p>",
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "contentType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The content-type for the model.</p>",
            "smithy.api#required": {}
          }
        },
        "schema": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For <code>application/json</code> models, this should be <a target=\"_blank\" href=\"https://tools.ietf.org/html/draft-zyp-json-schema-04\">JSON schema draft 4</a> model.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to add a new <a>Model</a> to an existing <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateRequestValidator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateRequestValidatorRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RequestValidator"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <a>ReqeustValidator</a> of a given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/requestvalidators",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateRequestValidatorRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the to-be-created <a>RequestValidator</a>.</p>"
          }
        },
        "validateRequestBody": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether to validate request body according to the configured model schema for the method (<code>true</code>) or not (<code>false</code>).</p>"
          }
        },
        "validateRequestParameters": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether to validate request parameters, <code>true</code>, or not <code>false</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Resource"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <a>Resource</a> resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/resources/{parentId}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateResourceRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "parentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The parent resource's identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "pathPart": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The last path segment for this resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to create a <a>Resource</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateRestApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApi"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new <a>RestApi</a> resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateRestApiRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>RestApi</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "version": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>"
          }
        },
        "binaryMediaTypes": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.</p>"
          }
        },
        "apiKeySource": {
          "target": "com.amazonaws.apigateway#ApiKeySourceType",
          "traits": {
            "smithy.api#documentation": "<p>The source of the API key for metering requests according to a usage plan. Valid values are: <ul><li><code>HEADER</code> to read the API key from the <code>X-API-Key</code> header of a request. </li><li><code>AUTHORIZER</code> to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.</li></ul> </p>"
          }
        },
        "cloneFrom": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the <a>RestApi</a> that you want to clone from.</p>"
          }
        },
        "endpointConfiguration": {
          "target": "com.amazonaws.apigateway#EndpointConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint configuration of this <a>RestApi</a> showing the endpoint types of the API. </p>"
          }
        },
        "minimumCompressionSize": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the <a>RestApi</a>.</p>"
          }
        },
        "policy": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "A stringified JSON policy document that applies to this RestApi regardless of the caller and <a>Method</a> configuration."
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The POST Request to add a new <a>RestApi</a> resource to your collection.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Stage"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new <a>Stage</a> resource that references a pre-existing <a>Deployment</a> for the API. </p>\n        <!--   <p>Creates a <a>Stage</a> resource.</p>  -->",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/stages",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateStageRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tracingEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether active tracing with X-ray is enabled for the <a>Stage</a>.</p>"
          }
        },
        "cacheClusterSize": {
          "target": "com.amazonaws.apigateway#CacheClusterSize",
          "traits": {
            "smithy.api#documentation": "<p>The stage's cache cluster size.</p>"
          }
        },
        "canarySettings": {
          "target": "com.amazonaws.apigateway#CanarySettings",
          "traits": {
            "smithy.api#documentation": "<p>The canary deployment settings of this stage.</p>"
          }
        },
        "cacheClusterEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether cache clustering is enabled for the stage.</p>"
          }
        },
        "variables": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for the new <a>Stage</a> resource. Variable names\n          can have alphanumeric and underscore characters, and the values must match\n          <code>[A-Za-z0-9-._~:/?#&=,]+</code>.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the <a>Stage</a> resource.</p>"
          }
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name for the <a>Stage</a> resource. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#required": {}
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Deployment</a> resource for the <a>Stage</a> resource.</p>",
            "smithy.api#required": {}
          }
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The version of the associated API documentation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to create a <a>Stage</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateUsagePlan": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateUsagePlanRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlan"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a usage plan with the throttle and quota limits, as well as the associated API stages, specified in the payload. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/usageplans",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateUsagePlanKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateUsagePlanKeyRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlanKey"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a usage plan key for adding an existing API key to a usage plan.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/usageplans/{usagePlanId}/keys",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#CreateUsagePlanKeyRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-created <a>UsagePlanKey</a> resource representing a plan customer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "keyType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The type of a <a>UsagePlanKey</a> resource for a plan customer.</p>",
            "smithy.api#required": {}
          }
        },
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of a <a>UsagePlanKey</a> resource for a plan customer.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The POST request to create a usage plan key for adding an existing API key to a usage plan.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateUsagePlanRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the usage plan.</p>",
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "throttle": {
          "target": "com.amazonaws.apigateway#ThrottleSettings",
          "traits": {
            "smithy.api#documentation": "<p>The throttling limits of the usage plan.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        },
        "apiStages": {
          "target": "com.amazonaws.apigateway#ListOfApiStage",
          "traits": {
            "smithy.api#documentation": "<p>The associated API stages of the usage plan.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the usage plan.</p>"
          }
        },
        "quota": {
          "target": "com.amazonaws.apigateway#QuotaSettings",
          "traits": {
            "smithy.api#documentation": "<p>The quota of the usage plan.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The POST request to create a usage plan with the name, description, throttle limits and quota limits, as well as the associated API stages, specified in the payload.</p>"
      }
    },
    "com.amazonaws.apigateway#CreateVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#CreateVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#VpcLink"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a VPC link, under the caller's account in a selected region, in an asynchronous operation that typically takes 2-4 minutes to complete and become operational. The caller must have permissions to create and update VPC Endpoint services.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/vpclinks",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#CreateVpcLinkRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name used to label and identify the VPC link.</p>",
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "targetArns": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the VPC link.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a VPC link, under the caller's account in a selected region, in an asynchronous operation that typically takes 2-4 minutes to complete and become operational. The caller must have permissions to create and update VPC Endpoint services.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteApiKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteApiKeyRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the <a>ApiKey</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/apikeys/{apiKey}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteApiKeyRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "apiKey": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ApiKey</a> resource to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to delete the <a>ApiKey</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteAuthorizerRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing <a>Authorizer</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/delete-authorizer.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/authorizers/{authorizerId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteAuthorizerRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Authorizer</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to delete an existing <a>Authorizer</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteBasePathMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteBasePathMappingRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the <a>BasePathMapping</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/domainnames/{domainName}/basepathmappings/{basePath}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteBasePathMappingRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The domain name of the <a>BasePathMapping</a> resource to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "basePath": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The base path name of the <a>BasePathMapping</a> resource to delete.</p>\n        <p>To specify an empty base path, set this parameter to <code>'(none)'</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to delete the <a>BasePathMapping</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteClientCertificate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteClientCertificateRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the <a>ClientCertificate</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/clientcertificates/{clientCertificateId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteClientCertificateRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ClientCertificate</a> resource to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to delete the <a>ClientCertificate</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteDeploymentRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a <a>Deployment</a> resource. Deleting a deployment will only succeed if there are no <a>Stage</a> resources associated with it.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/deployments/{deploymentId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteDeploymentRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Deployment</a> resource to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to delete a <a>Deployment</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteDocumentationPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteDocumentationPartRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/documentation/parts/{documentationPartId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteDocumentationPartRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "documentationPartId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the to-be-deleted documentation part.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing documentation part of an API.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteDocumentationVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteDocumentationVersionRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/documentation/versions/{documentationVersion}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteDocumentationVersionRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The version identifier of a to-be-deleted documentation snapshot.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing documentation version of an API.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteDomainNameRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the <a>DomainName</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/domainnames/{domainName}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteDomainNameRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>DomainName</a> resource to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to delete the <a>DomainName</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteGatewayResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteGatewayResponseRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Clears any customization of a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a> and resets it with the default settings.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/gatewayresponses/{responseType}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteGatewayResponseRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "responseType": {
          "target": "com.amazonaws.apigateway#GatewayResponseType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] <p>The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPE</li></ul> </p></p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Clears any customization of a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a> and resets it with the default settings.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteIntegrationRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a delete integration.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#DeleteIntegrationRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a delete integration request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a delete integration request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a delete integration request.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteIntegrationResponseRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a delete integration response.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#DeleteIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a delete integration response request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a delete integration response request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a delete integration response request's status code.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a delete integration response request.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteMethod": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteMethodRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing <a>Method</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#DeleteMethodRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to delete an existing <a>Method</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteMethodResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteMethodResponseRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing <a>MethodResponse</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#DeleteMethodResponseRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The status code identifier for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to delete an existing <a>MethodResponse</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteModelRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a model.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/models/{modelName}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteModelRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "modelName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the model to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to delete an existing model in an existing <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteRequestValidator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteRequestValidatorRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteRequestValidatorRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "requestValidatorId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>RequestValidator</a> to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes a specified <a>RequestValidator</a> of a given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a <a>Resource</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/resources/{resourceId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteResourceRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Resource</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to delete a <a>Resource</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteRestApiRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified API.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteRestApiRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to delete the specified API from your collection.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteStageRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a <a>Stage</a> resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/stages/{stageName}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteStageRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>Stage</a> resource to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to delete a <a>Stage</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteUsagePlan": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteUsagePlanRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a usage plan of a given plan Id.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/usageplans/{usagePlanId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteUsagePlanKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteUsagePlanKeyRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a usage plan key  and remove the underlying API key from the associated usage plan.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/usageplans/{usagePlanId}/keys/{keyId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteUsagePlanKeyRequest": {
      "type": "structure",
      "members": {
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the <a>UsagePlanKey</a> resource to be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-deleted <a>UsagePlanKey</a> resource representing a plan customer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The DELETE request to delete a usage plan key and remove the underlying API key from the associated usage plan.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteUsagePlanRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the to-be-deleted usage plan.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The DELETE request to delete a usage plan of a given plan Id.</p>"
      }
    },
    "com.amazonaws.apigateway#DeleteVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#DeleteVpcLinkRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing <a>VpcLink</a> of a specified identifier.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/vpclinks/{vpcLinkId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#DeleteVpcLinkRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "vpcLinkId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the  <a>VpcLink</a>. It is used in an <a>Integration</a> to reference this <a>VpcLink</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes an existing <a>VpcLink</a> of a specified identifier.</p>"
      }
    },
    "com.amazonaws.apigateway#Deployment": {
      "type": "structure",
      "members": {
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the deployment resource was created.</p>"
          }
        },
        "apiSummary": {
          "target": "com.amazonaws.apigateway#PathToMapOfMethodSnapshot",
          "traits": {
            "smithy.api#documentation": "<p>A summary of the <a>RestApi</a> at the date and time that the deployment resource was created.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the deployment resource.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An immutable representation of a <a>RestApi</a> resource that can be called by users using <a>Stages</a>. A deployment must be associated with a <a>Stage</a> for it to be callable over the Internet.</p>\n        <div class=\"remarks\">To create a deployment, call <code>POST</code> on the <a>Deployments</a> resource of a <a>RestApi</a>.\n            To view, update, or delete a deployment, call <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> on the specified deployment resource (<code>/restapis/{restapi_id}/deployments/{deployment_id}</code>).</div>\n        <div class=\"seeAlso\"><a>RestApi</a>, <a>Deployments</a>, <a>Stage</a>,\n            <a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html\">AWS CLI</a>,\n            <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#DeploymentCanarySettings": {
      "type": "structure",
      "members": {
        "stageVariableOverrides": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A stage variable overrides used for the canary release deployment. They can override existing stage variables or add new stage variables for the canary release deployment. These stage variables are represented as a string-to-string map between stage variable names and their values.</p>"
          }
        },
        "useStageCache": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether the canary release deployment uses the stage cache or not.</p>"
          }
        },
        "percentTraffic": {
          "target": "com.amazonaws.apigateway#Double",
          "traits": {
            "smithy.api#documentation": "<p>The percentage (0.0-100.0) of traffic routed to the canary deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input configuration for a canary deployment.</p>"
      }
    },
    "com.amazonaws.apigateway#Deployments": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfDeployment",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection resource that contains zero or more references to your existing deployments, and links that guide you on how to interact with your collection. The collection offers a paginated view of the contained deployments.</p>\n        <div class=\"remarks\">To create a new deployment of a <a>RestApi</a>, make a <code>POST</code> request against this resource. To view, update, or delete an existing\n        deployment, make a <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> request, respectively, on a specified <a>Deployment</a> resource.</div>\n        <div class=\"seeAlso\">\n            <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html\">Deploying an API</a>,\n            <a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html\">AWS CLI</a>,\n            <a href=\"https://aws.amazon.com/tools/\">AWS SDKs</a>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#DocumentationPart": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The <a>DocumentationPart</a> identifier, generated by API Gateway when the <code>DocumentationPart</code> is created.</p>"
          }
        },
        "location": {
          "target": "com.amazonaws.apigateway#DocumentationPartLocation",
          "traits": {
            "smithy.api#documentation": "<p>The location of the API entity to which the documentation applies. Valid fields depend on the targeted API entity type. All the valid location fields are not required. If not explicitly specified, a valid location field is treated as a wildcard and associated documentation content may be inherited by matching entities, unless overridden.</p>"
          }
        },
        "properties": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., <code>\"{ \\\"description\\\": \\\"The API does ...\\\" }\"</code>.  Only OpenAPI-compliant documentation-related fields from the <literal>properties</literal> map are exported and, hence, published as part of the API entity definitions, while the original documentation parts are exported in a OpenAPI extension of <code>x-amazon-apigateway-documentation</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A documentation part for a targeted API entity.</p>\n    <div class=\"remarks\">\n      <p>A documentation part consists of a content map (<code>properties</code>) and a target (<code>location</code>). The target specifies an API entity to which the documentation content applies. The supported API entity types are <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Valid <code>location</code> fields depend on the API entity type. All valid fields are not required.</p>\n      <p>The content map is a JSON string of API-specific key-value pairs. Although an API can use any shape for the content map, only the OpenAPI-compliant documentation fields will be injected into the associated API entity definition in the exported OpenAPI definition file.</p></div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html\">Documenting an API</a>, <a>DocumentationParts</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#DocumentationPartIds": {
      "type": "structure",
      "members": {
        "ids": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of the returned documentation part identifiers.</p>"
          }
        },
        "warnings": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of warning messages reported during import of documentation parts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A collection of the imported  <a>DocumentationPart</a> identifiers.</p>\n    <div class=\"remarks\">This is used to return the result when documentation parts in an external (e.g., OpenAPI) file are imported into API Gateway</div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html\">Documenting an API</a>, <a href=\"https://docs.aws.amazon.com/apigateway/api-reference/link-relation/documentationpart-import/\">documentationpart:import</a>, <a>DocumentationPart</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#DocumentationPartLocation": {
      "type": "structure",
      "members": {
        "path": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The URL path of the target. It is a valid field for the API entity types of <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>/</code> for the root resource. When an applicable child entity inherits the content of another entity of the same type with more general specifications of the other <code>location</code> attributes,  the child entity's <code>path</code> attribute must match that of the parent entity as a prefix.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.apigateway#DocumentationPartType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The type of API entity to which the documentation content applies. Valid values are <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>,  <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Content inheritance does not apply to any entity of the <code>API</code>, <code>AUTHORIZER</code>, <code>METHOD</code>,  <code>MODEL</code>, <code>REQUEST_BODY</code>, or <code>RESOURCE</code> type.</p>",
            "smithy.api#required": {}
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#DocumentationPartLocationStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The HTTP status code of a response. It is a valid field for the API entity types of <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any status code. When an applicable child  entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes, the child entity's <code>statusCode</code> attribute must match that of the parent entity exactly.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the targeted API entity. It is a valid and required field for the API entity types of <code>AUTHORIZER</code>, <code>MODEL</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code> and <code>RESPONSE_HEADER</code>. It is an invalid field for any other entity type.</p>"
          }
        },
        "method": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The HTTP verb of a method. It is a valid field for the API entity types of  <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>,  <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. The default value is <code>*</code> for any method.  When an applicable child entity inherits the content of an entity of the same type with more general specifications of the other <code>location</code> attributes,  the child entity's <code>method</code> attribute must match that of the parent entity exactly.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the target API entity to which the documentation applies.</p>"
      }
    },
    "com.amazonaws.apigateway#DocumentationPartLocationStatusCode": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^([1-5]\\d\\d|\\*|\\s*)$"
      }
    },
    "com.amazonaws.apigateway#DocumentationPartType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "API",
            "name": "API"
          },
          {
            "value": "AUTHORIZER",
            "name": "AUTHORIZER"
          },
          {
            "value": "MODEL",
            "name": "MODEL"
          },
          {
            "value": "RESOURCE",
            "name": "RESOURCE"
          },
          {
            "value": "METHOD",
            "name": "METHOD"
          },
          {
            "value": "PATH_PARAMETER",
            "name": "PATH_PARAMETER"
          },
          {
            "value": "QUERY_PARAMETER",
            "name": "QUERY_PARAMETER"
          },
          {
            "value": "REQUEST_HEADER",
            "name": "REQUEST_HEADER"
          },
          {
            "value": "REQUEST_BODY",
            "name": "REQUEST_BODY"
          },
          {
            "value": "RESPONSE",
            "name": "RESPONSE"
          },
          {
            "value": "RESPONSE_HEADER",
            "name": "RESPONSE_HEADER"
          },
          {
            "value": "RESPONSE_BODY",
            "name": "RESPONSE_BODY"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#DocumentationParts": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfDocumentationPart",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of documentation parts of an API.</p>\n    <div class=\"remarks\"></div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html\">Documenting an API</a>, <a>DocumentationPart</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#DocumentationVersion": {
      "type": "structure",
      "members": {
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API documentation snapshot.</p>"
          }
        },
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date when the API documentation snapshot is created.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The version identifier of the API documentation snapshot.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A snapshot of the documentation of an API.</p>\n    <div class=\"remarks\"><p>Publishing API documentation involves creating a documentation version associated with an API stage and exporting the versioned documentation to an external (e.g., OpenAPI) file.</p></div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html\">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersions</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#DocumentationVersions": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfDocumentationVersion",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of documentation snapshots of an API. </p>\n    <div class=\"remarks\"><p>Use the <a>DocumentationVersions</a> to manage documentation snapshots associated with various API stages.</p></div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html\">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersion</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#DomainName": {
      "type": "structure",
      "members": {
        "regionalDomainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The domain name associated with the regional endpoint for this custom domain name. You set up this association by adding a DNS record that points the custom domain name to this regional domain name. The regional domain name is returned by API Gateway when you create a regional endpoint.</p>"
          }
        },
        "certificateName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the certificate that will be used by edge-optimized endpoint for this domain name.</p>"
          }
        },
        "distributionHostedZoneId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized endpoint. The valid value is <code>Z2FDTNDATAQYW2</code> for all the regions. For more information, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html\">Set up a Regional Custom Domain Name</a> and <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region\">AWS Regions and Endpoints for API Gateway</a>. </p>"
          }
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The custom domain name as an API host name, for example, <code>my-api.example.com</code>.</p>"
          }
        },
        "securityPolicy": {
          "target": "com.amazonaws.apigateway#SecurityPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The Transport Layer Security (TLS) version + cipher suite for this <a>DomainName</a>. The valid values are <code>TLS_1_0</code> and <code>TLS_1_2</code>.</p>"
          }
        },
        "domainNameStatusMessage": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>An optional text message containing detailed information about status of the <a>DomainName</a> migration.</p>"
          }
        },
        "regionalCertificateArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The reference to an AWS-managed certificate that will be used for validating the regional domain name. AWS Certificate Manager is the only supported source.</p>"
          }
        },
        "certificateArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The reference to an AWS-managed certificate that will be used by edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>"
          }
        },
        "certificateUploadDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded.</p>"
          }
        },
        "regionalCertificateName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the certificate that will be used for validating the regional domain name.</p>"
          }
        },
        "endpointConfiguration": {
          "target": "com.amazonaws.apigateway#EndpointConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint configuration of this <a>DomainName</a> showing the endpoint types of the domain name. </p>"
          }
        },
        "regionalHostedZoneId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-regional-api-custom-domain-create.html\">Set up a Regional Custom Domain Name</a> and  <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#apigateway_region\">AWS Regions and Endpoints for API Gateway</a>. </p>"
          }
        },
        "distributionDomainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The domain name of the Amazon CloudFront distribution associated with this custom domain name for an edge-optimized endpoint. You set up this association when adding a DNS record pointing the custom domain name to this distribution name. For more information about CloudFront distributions, see the <a target=\"_blank\" href=\"https://aws.amazon.com/documentation/cloudfront/\">Amazon CloudFront documentation</a>.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "domainNameStatus": {
          "target": "com.amazonaws.apigateway#DomainNameStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the <a>DomainName</a> migration. The valid values are <code>AVAILABLE</code> and <code>UPDATING</code>. If the status is <code>UPDATING</code>, the domain cannot be modified further until the existing operation is complete. If it is <code>AVAILABLE</code>, the domain can be updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a custom domain name as a user-friendly host name of an API (<a>RestApi</a>).</p>\n        <div class=\"Remarks\">\n            <p>When you deploy an API, API Gateway creates a default host name for the API. This default API host name is of the <code>{restapi-id}.execute-api.{region}.amazonaws.com</code> format. With the default host name, you can access the API's root resource with the URL of <code>https://{restapi-id}.execute-api.{region}.amazonaws.com/{stage}/</code>. When you set up a custom domain name of <code>apis.example.com</code> for this API, you can then access the same resource using the URL of the <code>https://apis.examples.com/myApi</code>, where <code>myApi</code> is the base path mapping (<a>BasePathMapping</a>) of your API under the custom domain name.\n            </p>\n        </div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Set a Custom Host Name for an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#DomainNameStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "UPDATING",
            "name": "UPDATING"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#DomainNames": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfDomainName",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>DomainName</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html\">Use Client-Side Certificate</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#Double": {
      "type": "double"
    },
    "com.amazonaws.apigateway#EndpointConfiguration": {
      "type": "structure",
      "members": {
        "types": {
          "target": "com.amazonaws.apigateway#ListOfEndpointType",
          "traits": {
            "smithy.api#documentation": "<p>A list of endpoint types of an API (<a>RestApi</a>) or its custom domain name (<a>DomainName</a>). For an edge-optimized API and its custom domain name, the endpoint type is <code>\"EDGE\"</code>. For a regional API and its custom domain name, the endpoint type is <code>REGIONAL</code>. For a private API, the endpoint type is <code>PRIVATE</code>.</p>"
          }
        },
        "vpcEndpointIds": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of VpcEndpointIds of an API (<a>RestApi</a>) against which to create Route53 ALIASes. It is only supported for <code>PRIVATE</code> endpoint type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The endpoint configuration to indicate the types of endpoints an API (<a>RestApi</a>) or its custom domain name (<a>DomainName</a>) has. </p>"
      }
    },
    "com.amazonaws.apigateway#EndpointType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The endpoint type. The valid values are <code>EDGE</code> for edge-optimized API setup, most suitable for mobile applications; <code>REGIONAL</code> for regional API endpoint setup, most suitable for calling from AWS Region; and <code>PRIVATE</code> for private APIs.</p>",
        "smithy.api#enum": [
          {
            "value": "REGIONAL"
          },
          {
            "value": "EDGE"
          },
          {
            "value": "PRIVATE"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#ExportResponse": {
      "type": "structure",
      "members": {
        "body": {
          "target": "com.amazonaws.apigateway#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The binary blob response to <a>GetExport</a>, which contains the export.</p>",
            "smithy.api#httpPayload": {}
          }
        },
        "contentType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-type header value in the HTTP response. This will correspond to a valid 'accept' type in the request.</p>",
            "smithy.api#httpHeader": "Content-Type"
          }
        },
        "contentDisposition": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-disposition header value in the HTTP response.</p>",
            "smithy.api#httpHeader": "Content-Disposition"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The binary blob response to <a>GetExport</a>, which contains the generated SDK.</p>"
      }
    },
    "com.amazonaws.apigateway#FlushStageAuthorizersCache": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#FlushStageAuthorizersCacheRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Flushes all authorizer cache entries on a stage.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/stages/{stageName}/cache/authorizers",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#FlushStageAuthorizersCacheRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage to flush.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to flush authorizer cache entries on a specified stage.</p>"
      }
    },
    "com.amazonaws.apigateway#FlushStageCache": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#FlushStageCacheRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Flushes a stage's cache.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/restapis/{restApiId}/stages/{stageName}/cache/data",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigateway#FlushStageCacheRequest": {
      "type": "structure",
      "members": {
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the stage to flush its cache.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to flush a stage's cache.</p>"
      }
    },
    "com.amazonaws.apigateway#GatewayResponse": {
      "type": "structure",
      "members": {
        "responseType": {
          "target": "com.amazonaws.apigateway#GatewayResponseType",
          "traits": {
            "smithy.api#documentation": "<p>The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPE</li></ul> </p>"
          }
        },
        "defaultResponse": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether this <a>GatewayResponse</a> is the default gateway response (<code>true</code>) or not (<code>false</code>). A default gateway response is one generated by API Gateway without any customization by an API developer. </p>"
          }
        },
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value  pairs.</p>"
          }
        },
        "responseTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The HTTP status code for this <a>GatewayResponse</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A gateway response of a given response type and status code, with optional response parameters and mapping templates.</p>\n        <div class=\"remarks\">\n            For more information about valid gateway response types, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html\">Gateway Response Types Supported by API Gateway</a>\n            \n  <div class=\"example\">\n    <h4>Example: Get a Gateway Response of a given response type</h4>\n    <h5>Request</h5>\n    <p>This example shows how to get a gateway response of the <code>MISSING_AUTHENTICATION_TOKEN</code> type.</p>\n    <pre><code>GET /restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN HTTP/1.1\nHost: beta-apigateway.us-east-1.amazonaws.com\nContent-Type: application/json\nX-Amz-Date: 20170503T202516Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=1b52460e3159c1a26cff29093855d50ea141c1c5b937528fecaf60f51129697a\nCache-Control: no-cache\nPostman-Token: 3b2a1ce9-c848-2e26-2e2f-9c2caefbed45\n</code></pre>\n    <p>The response type is specified as a URL path.</p>\n    <h5>Response</h5>\n    <p>The successful operation returns the <code>200 OK</code> status code and a payload similar to the following:</p>\n    <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html\",\n      \"name\": \"gatewayresponse\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n    },\n    \"gatewayresponse:delete\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n    },\n    \"gatewayresponse:put\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n      \"templated\": true\n    },\n    \"gatewayresponse:update\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n    }\n  },\n  \"defaultResponse\": false,\n  \"responseParameters\": {\n    \"gatewayresponse.header.x-request-path\": \"method.request.path.petId\",\n    \"gatewayresponse.header.Access-Control-Allow-Origin\": \"'a.b.c'\",\n    \"gatewayresponse.header.x-request-query\": \"method.request.querystring.q\",\n    \"gatewayresponse.header.x-request-header\": \"method.request.header.Accept\"\n  },\n  \"responseTemplates\": {\n    \"application/json\": \"{\\n     \\\"message\\\": $context.error.messageString,\\n     \\\"type\\\":  \\\"$context.error.responseType\\\",\\n     \\\"stage\\\":  \\\"$context.stage\\\",\\n     \\\"resourcePath\\\":  \\\"$context.resourcePath\\\",\\n     \\\"stageVariables.a\\\":  \\\"$stageVariables.a\\\",\\n     \\\"statusCode\\\": \\\"'404'\\\"\\n}\"\n  },\n  \"responseType\": \"MISSING_AUTHENTICATION_TOKEN\",\n  \"statusCode\": \"404\"\n}</code></pre>\n    <p></p>\n  </div>\n\n        </div>\n        <div class=\"seeAlso\">\n          <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/customize-gateway-responses.html\">Customize Gateway Responses</a>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#GatewayResponseType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DEFAULT_4XX",
            "name": "DEFAULT_4XX"
          },
          {
            "value": "DEFAULT_5XX",
            "name": "DEFAULT_5XX"
          },
          {
            "value": "RESOURCE_NOT_FOUND",
            "name": "RESOURCE_NOT_FOUND"
          },
          {
            "value": "UNAUTHORIZED",
            "name": "UNAUTHORIZED"
          },
          {
            "value": "INVALID_API_KEY",
            "name": "INVALID_API_KEY"
          },
          {
            "value": "ACCESS_DENIED",
            "name": "ACCESS_DENIED"
          },
          {
            "value": "AUTHORIZER_FAILURE",
            "name": "AUTHORIZER_FAILURE"
          },
          {
            "value": "AUTHORIZER_CONFIGURATION_ERROR",
            "name": "AUTHORIZER_CONFIGURATION_ERROR"
          },
          {
            "value": "INVALID_SIGNATURE",
            "name": "INVALID_SIGNATURE"
          },
          {
            "value": "EXPIRED_TOKEN",
            "name": "EXPIRED_TOKEN"
          },
          {
            "value": "MISSING_AUTHENTICATION_TOKEN",
            "name": "MISSING_AUTHENTICATION_TOKEN"
          },
          {
            "value": "INTEGRATION_FAILURE",
            "name": "INTEGRATION_FAILURE"
          },
          {
            "value": "INTEGRATION_TIMEOUT",
            "name": "INTEGRATION_TIMEOUT"
          },
          {
            "value": "API_CONFIGURATION_ERROR",
            "name": "API_CONFIGURATION_ERROR"
          },
          {
            "value": "UNSUPPORTED_MEDIA_TYPE",
            "name": "UNSUPPORTED_MEDIA_TYPE"
          },
          {
            "value": "BAD_REQUEST_PARAMETERS",
            "name": "BAD_REQUEST_PARAMETERS"
          },
          {
            "value": "BAD_REQUEST_BODY",
            "name": "BAD_REQUEST_BODY"
          },
          {
            "value": "REQUEST_TOO_LARGE",
            "name": "REQUEST_TOO_LARGE"
          },
          {
            "value": "THROTTLED",
            "name": "THROTTLED"
          },
          {
            "value": "QUOTA_EXCEEDED",
            "name": "QUOTA_EXCEEDED"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#GatewayResponses": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfGatewayResponse",
          "traits": {
            "smithy.api#documentation": "<p>Returns the entire collection, because of no pagination support.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set. The <a>GatewayResponse</a> collection does not support pagination and the position does not apply here.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of the <a>GatewayResponse</a> instances of a <a>RestApi</a> as a <code>responseType</code>-to-<a>GatewayResponse</a> object map of key-value pairs. As such, pagination is not supported for querying this collection.</p>\n        <div class=\"remarks\">\n            For more information about valid gateway response types, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/supported-gateway-response-types.html\">Gateway Response Types Supported by API Gateway</a>\n            \n  <div class=\"example\">\n    <h4>Example: Get the collection of gateway responses of an API</h4>\n    <h5>Request</h5>\n    <p>This example request shows how to retrieve the <a>GatewayResponses</a> collection from an API.</p>\n    <pre><code>GET /restapis/o81lxisefl/gatewayresponses HTTP/1.1\nHost: beta-apigateway.us-east-1.amazonaws.com\nContent-Type: application/json\nX-Amz-Date: 20170503T220604Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access-key-id}/20170503/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature=59b42fe54a76a5de8adf2c67baa6d39206f8e9ad49a1d77ccc6a5da3103a398a\nCache-Control: no-cache\nPostman-Token: 5637af27-dc29-fc5c-9dfe-0645d52cb515\n</code></pre>\n    <p></p>\n    <h5>Response</h5>\n    <p>The successful operation returns the <code>200 OK</code> status code and a payload similar to the following:</p>\n    <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-gatewayresponse-{rel}.html\",\n      \"name\": \"gatewayresponse\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses\"\n    },\n    \"first\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses\"\n    },\n    \"gatewayresponse:by-type\": {\n      \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n      \"templated\": true\n    },\n    \"item\": [\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/THROTTLED\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE\"\n      },\n      {\n        \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE\"\n      }\n    ]\n  },\n  \"_embedded\": {\n    \"item\": [\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_FAILURE\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"INTEGRATION_FAILURE\",\n        \"statusCode\": \"504\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/RESOURCE_NOT_FOUND\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"RESOURCE_NOT_FOUND\",\n        \"statusCode\": \"404\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/REQUEST_TOO_LARGE\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"REQUEST_TOO_LARGE\",\n        \"statusCode\": \"413\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/THROTTLED\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/THROTTLED\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"THROTTLED\",\n        \"statusCode\": \"429\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNSUPPORTED_MEDIA_TYPE\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"UNSUPPORTED_MEDIA_TYPE\",\n        \"statusCode\": \"415\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_CONFIGURATION_ERROR\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"AUTHORIZER_CONFIGURATION_ERROR\",\n        \"statusCode\": \"500\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_5XX\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"DEFAULT_5XX\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/DEFAULT_4XX\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"DEFAULT_4XX\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_PARAMETERS\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"BAD_REQUEST_PARAMETERS\",\n        \"statusCode\": \"400\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/BAD_REQUEST_BODY\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"BAD_REQUEST_BODY\",\n        \"statusCode\": \"400\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/EXPIRED_TOKEN\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"EXPIRED_TOKEN\",\n        \"statusCode\": \"403\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/ACCESS_DENIED\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"ACCESS_DENIED\",\n        \"statusCode\": \"403\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_API_KEY\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"INVALID_API_KEY\",\n        \"statusCode\": \"403\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/UNAUTHORIZED\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"UNAUTHORIZED\",\n        \"statusCode\": \"401\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/API_CONFIGURATION_ERROR\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"API_CONFIGURATION_ERROR\",\n        \"statusCode\": \"500\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/QUOTA_EXCEEDED\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"QUOTA_EXCEEDED\",\n        \"statusCode\": \"429\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INTEGRATION_TIMEOUT\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"INTEGRATION_TIMEOUT\",\n        \"statusCode\": \"504\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/MISSING_AUTHENTICATION_TOKEN\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"MISSING_AUTHENTICATION_TOKEN\",\n        \"statusCode\": \"403\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/INVALID_SIGNATURE\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"INVALID_SIGNATURE\",\n        \"statusCode\": \"403\"\n      },\n      {\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE\"\n          },\n          \"gatewayresponse:put\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/{response_type}\",\n            \"templated\": true\n          },\n          \"gatewayresponse:update\": {\n            \"href\": \"/restapis/o81lxisefl/gatewayresponses/AUTHORIZER_FAILURE\"\n          }\n        },\n        \"defaultResponse\": true,\n        \"responseParameters\": {},\n        \"responseTemplates\": {\n          \"application/json\": \"{\\\"message\\\":$context.error.messageString}\"\n        },\n        \"responseType\": \"AUTHORIZER_FAILURE\",\n        \"statusCode\": \"500\"\n      }\n    ]\n  }\n}</code></pre>\n    <p></p>\n  </div>\n\n        </div>\n        <div class=\"seeAlso\">\n          <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/customize-gateway-responses.html\">Customize Gateway Responses</a>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#GenerateClientCertificate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GenerateClientCertificateRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ClientCertificate"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Generates a <a>ClientCertificate</a> resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/clientcertificates",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#GenerateClientCertificateRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the <a>ClientCertificate</a>.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to generate a <a>ClientCertificate</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetAccount": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetAccountRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Account"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the current <a>Account</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/account",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetAccountRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to get information about the current <a>Account</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetApiKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetApiKeyRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ApiKey"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the current <a>ApiKey</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/apikeys/{apiKey}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetApiKeyRequest": {
      "type": "structure",
      "members": {
        "apiKey": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ApiKey</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "includeValue": {
          "target": "com.amazonaws.apigateway#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A boolean flag to specify whether (<code>true</code>) or not (<code>false</code>) the result contains the key value.</p>",
            "smithy.api#httpQuery": "includeValue"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to get information about the current <a>ApiKey</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetApiKeys": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetApiKeysRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ApiKeys"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the current <a>ApiKeys</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/apikeys",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetApiKeysRequest": {
      "type": "structure",
      "members": {
        "nameQuery": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of queried API keys.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "customerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a customer in AWS Marketplace or an external system, such as a developer portal.</p>",
            "smithy.api#httpQuery": "customerId"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "includeValues": {
          "target": "com.amazonaws.apigateway#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A boolean flag to specify whether (<code>true</code>) or not (<code>false</code>) the result contains key values.</p>",
            "smithy.api#httpQuery": "includeValues"
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to get information about the current <a>ApiKeys</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Authorizer"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describe an existing <a>Authorizer</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizer.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/authorizers/{authorizerId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetAuthorizerRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Authorizer</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe an existing <a>Authorizer</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetAuthorizers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetAuthorizersRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Authorizers"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describe an existing <a>Authorizers</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizers.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/authorizers",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetAuthorizersRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe an existing <a>Authorizers</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetBasePathMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetBasePathMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#BasePathMapping"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describe a <a>BasePathMapping</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/domainnames/{domainName}/basepathmappings/{basePath}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetBasePathMappingRequest": {
      "type": "structure",
      "members": {
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The domain name of the <a>BasePathMapping</a> resource to be described.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "basePath": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The base path name that callers of the API must provide as part of the URL after the domain name. This value must be unique for all of the mappings across a single API. Specify '(none)' if you do not want callers to specify any base path name after the domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe a <a>BasePathMapping</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetBasePathMappings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetBasePathMappingsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#BasePathMappings"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>BasePathMapping</a> resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/domainnames/{domainName}/basepathmappings",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetBasePathMappingsRequest": {
      "type": "structure",
      "members": {
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The domain name of a <a>BasePathMapping</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to get information about a collection of <a>BasePathMapping</a> resources.</p>"
      }
    },
    "com.amazonaws.apigateway#GetClientCertificate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetClientCertificateRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ClientCertificate"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the current <a>ClientCertificate</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/clientcertificates/{clientCertificateId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetClientCertificateRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ClientCertificate</a> resource to be described.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to get information about the current <a>ClientCertificate</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetClientCertificates": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetClientCertificatesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ClientCertificates"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a collection of <a>ClientCertificate</a> resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/clientcertificates",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetClientCertificatesRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to get information about a collection of <a>ClientCertificate</a> resources.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Deployment"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a <a>Deployment</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/deployments/{deploymentId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDeploymentRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "embed": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to retrieve the specified embedded resources of the returned <a>Deployment</a> resource in the response. In a REST API call, this <code>embed</code> parameter value is a list of comma-separated strings, as in  <code>GET /restapis/{restapi_id}/deployments/{deployment_id}?embed=var1,var2</code>. The SDK and other platform-dependent libraries might use a different format for the list. Currently, this request supports only retrieval of the embedded API summary this way. Hence, the parameter value must be a single-valued list containing only the <code>\"apisummary\"</code> string.  For example, <code>GET /restapis/{restapi_id}/deployments/{deployment_id}?embed=apisummary</code>.</p>",
            "smithy.api#httpQuery": "embed"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Deployment</a> resource to get information about.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to get information about a <a>Deployment</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDeployments": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDeploymentsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Deployments"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a <a>Deployments</a> collection.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/deployments",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDeploymentsRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to get information about a <a>Deployments</a> collection.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDocumentationPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDocumentationPartRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationPart"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/documentation/parts/{documentationPartId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDocumentationPartRequest": {
      "type": "structure",
      "members": {
        "documentationPartId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets a specified documentation part of a given API.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDocumentationParts": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDocumentationPartsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationParts"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/documentation/parts",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDocumentationPartsRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "type": {
          "target": "com.amazonaws.apigateway#DocumentationPartType",
          "traits": {
            "smithy.api#documentation": "<p>The type of API entities of the to-be-retrieved documentation parts. </p>",
            "smithy.api#httpQuery": "type"
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "nameQuery": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of API entities of the to-be-retrieved documentation parts.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "locationStatus": {
          "target": "com.amazonaws.apigateway#LocationStatusType",
          "traits": {
            "smithy.api#documentation": "<p>The status of the API documentation parts to retrieve. Valid values are <code>DOCUMENTED</code> for retrieving <a>DocumentationPart</a> resources with content and <code>UNDOCUMENTED</code> for <a>DocumentationPart</a> resources without content.</p>",
            "smithy.api#httpQuery": "locationStatus"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "path": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The path of API entities of the to-be-retrieved documentation parts.</p>",
            "smithy.api#httpQuery": "path"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the documentation parts of an API. The result may be filtered by the type, name, or path of API entities (targets).</p>"
      }
    },
    "com.amazonaws.apigateway#GetDocumentationVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDocumentationVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationVersion"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/documentation/versions/{documentationVersion}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDocumentationVersionRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The version identifier of the to-be-retrieved documentation snapshot.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets a documentation snapshot of an API.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDocumentationVersions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDocumentationVersionsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationVersions"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/documentation/versions",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDocumentationVersionsRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the documentation versions of an API.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DomainName"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a domain name that is contained in a simpler, more intuitive URL that can be called.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/domainnames/{domainName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDomainNameRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>DomainName</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to get the name of a <a>DomainName</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetDomainNames": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetDomainNamesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DomainNames"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>DomainName</a> resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/domainnames",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetDomainNamesRequest": {
      "type": "structure",
      "members": {
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe a collection of <a>DomainName</a> resources.</p>"
      }
    },
    "com.amazonaws.apigateway#GetExport": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetExportRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ExportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Exports a deployed version of a <a>RestApi</a> in a specified format.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/stages/{stageName}/exports/{exportType}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetExportRequest": {
      "type": "structure",
      "members": {
        "parameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map of query string parameters that specify properties of the export, depending on the requested <code>exportType</code>. For <code>exportType</code> <code>oas30</code> and <code>swagger</code>, any combination of the following parameters are supported: <code>extensions='integrations'</code> or <code>extensions='apigateway'</code> will export the API with x-amazon-apigateway-integration extensions. <code>extensions='authorizers'</code> will export the API with  x-amazon-apigateway-authorizer extensions. <code>postman</code> will export the API with Postman extensions, allowing for import to the Postman tool</p>"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "accepts": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-type of the export, for example <code>application/json</code>. Currently <code>application/json</code> and <code>application/yaml</code> are supported for <code>exportType</code> of<code>oas30</code> and <code>swagger</code>. This should be specified in the <code>Accept</code> header for direct API requests.</p>",
            "smithy.api#httpHeader": "Accept"
          }
        },
        "exportType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The type of export. Acceptable values are 'oas30' for OpenAPI 3.0.x and 'swagger' for Swagger/OpenAPI 2.0.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>Stage</a> that will be exported.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request a new export of a <a>RestApi</a> for a particular <a>Stage</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#GetGatewayResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetGatewayResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#GatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/gatewayresponses/{responseType}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetGatewayResponseRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "responseType": {
          "target": "com.amazonaws.apigateway#GatewayResponseType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] <p>The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPE</li></ul> </p></p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#GetGatewayResponses": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetGatewayResponsesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#GatewayResponses"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/gatewayresponses",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetGatewayResponsesRequest": {
      "type": "structure",
      "members": {
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500. The <a>GatewayResponses</a> collection does not support pagination and the limit does not apply here.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set. The <a>GatewayResponse</a> collection does not support pagination and the position does not apply here.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>GatewayResponses</a> collection on the given <a>RestApi</a>. If an API developer has not added any definitions for gateway responses, the result will be the API Gateway-generated default <a>GatewayResponses</a> collection for the supported response types.</p>"
      }
    },
    "com.amazonaws.apigateway#GetIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Integration"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get the integration settings.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetIntegrationRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a get integration request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a get integration request's resource identifier</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a request to get the integration configuration.</p>"
      }
    },
    "com.amazonaws.apigateway#GetIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#IntegrationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a get integration response.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a get integration response request's status code.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a get integration response request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a get integration response request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a get integration response request.</p>"
      }
    },
    "com.amazonaws.apigateway#GetMethod": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetMethodRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Method"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describe an existing <a>Method</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetMethodRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies the method request's HTTP method type.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe an existing <a>Method</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetMethodResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetMethodResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#MethodResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes a <a>MethodResponse</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetMethodResponseRequest": {
      "type": "structure",
      "members": {
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The status code for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to describe a <a>MethodResponse</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Model"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes an existing model defined for a <a>RestApi</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/models/{modelName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetModelRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>RestApi</a> identifier under which the <a>Model</a> exists.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "flatten": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter of a Boolean value to resolve (<code>true</code>) all external model references and returns a flattened model schema or not (<code>false</code>) The default is <code>false</code>.</p>",
            "smithy.api#httpQuery": "flatten"
          }
        },
        "modelName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the model as an identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to list information about a model in an existing <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetModelTemplate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetModelTemplateRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Template"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Generates a sample mapping template that can be used to transform a payload into the structure of a model.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/models/{modelName}/default_template",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetModelTemplateRequest": {
      "type": "structure",
      "members": {
        "modelName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the model for which to generate a template.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to generate a sample mapping template used to transform the payload.</p>"
      }
    },
    "com.amazonaws.apigateway#GetModels": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetModelsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Models"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes existing <a>Models</a> defined for a <a>RestApi</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/models",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetModelsRequest": {
      "type": "structure",
      "members": {
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to list existing <a>Models</a> defined for a <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetRequestValidator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetRequestValidatorRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RequestValidator"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetRequestValidatorRequest": {
      "type": "structure",
      "members": {
        "requestValidatorId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>RequestValidator</a> to be retrieved.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#GetRequestValidators": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetRequestValidatorsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RequestValidators"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/requestvalidators",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetRequestValidatorsRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#GetResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Resource"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists information about a resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources/{resourceId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetResourceRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "embed": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to retrieve the specified resources embedded in the returned <a>Resource</a> representation in the response. This <code>embed</code> parameter value is a list of comma-separated strings. Currently, the request supports only retrieval of the embedded <a>Method</a> resources this way. The query parameter value must be a single-valued list and contain the <code>\"methods\"</code> string. For example, <code>GET /restapis/{restapi_id}/resources/{resource_id}?embed=methods</code>.</p>",
            "smithy.api#httpQuery": "embed"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier for the <a>Resource</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to list information about a resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetResources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetResourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Resources"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists information about a collection of <a>Resource</a> resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/resources",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetResourcesRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "embed": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter used to retrieve the specified resources embedded in the returned <a>Resources</a> resource in the response.  This <code>embed</code> parameter value is a list of comma-separated strings. Currently, the request supports only retrieval of the embedded <a>Method</a> resources this way. The query parameter value must be a single-valued list and contain the <code>\"methods\"</code> string. For example, <code>GET /restapis/{restapi_id}/resources?embed=methods</code>.</p>",
            "smithy.api#httpQuery": "embed"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to list information about a collection of resources.</p>"
      }
    },
    "com.amazonaws.apigateway#GetRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetRestApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApi"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the <a>RestApi</a> resource in the collection.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetRestApiRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to list an existing <a>RestApi</a> defined for your collection. </p>"
      }
    },
    "com.amazonaws.apigateway#GetRestApis": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetRestApisRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApis"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the <a>RestApis</a> resources for your collection.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetRestApisRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to list existing <a>RestApis</a> defined for your collection.</p>"
      }
    },
    "com.amazonaws.apigateway#GetSdk": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetSdkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#SdkResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Generates a client SDK for a <a>RestApi</a> and <a>Stage</a>.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/stages/{stageName}/sdks/{sdkType}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetSdkRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "parameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A string-to-string key-value map of query parameters <code>sdkType</code>-dependent properties of the SDK. For <code>sdkType</code> of <code>objectivec</code> or <code>swift</code>,  a parameter named <code>classPrefix</code> is required. For <code>sdkType</code> of <code>android</code>, parameters named <code>groupId</code>, <code>artifactId</code>, <code>artifactVersion</code>, and <code>invokerPackage</code> are required. For <code>sdkType</code> of <code>java</code>, parameters named <code>serviceName</code> and <code>javaPackageName</code> are required. </p>"
          }
        },
        "sdkType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The language for the generated SDK. Currently <code>java</code>, <code>javascript</code>, <code>android</code>, <code>objectivec</code> (for iOS), <code>swift</code> (for iOS), and <code>ruby</code>  are supported.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>Stage</a> that the SDK will use.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request a new generated client SDK for a <a>RestApi</a> and <a>Stage</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#GetSdkType": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetSdkTypeRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#SdkType"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sdktypes/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetSdkTypeRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the queried <a>SdkType</a> instance.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Get an <a>SdkType</a> instance.</p>"
      }
    },
    "com.amazonaws.apigateway#GetSdkTypes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetSdkTypesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#SdkTypes"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sdktypes",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetSdkTypesRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Get the <a>SdkTypes</a> collection.</p>"
      }
    },
    "com.amazonaws.apigateway#GetStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Stage"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a <a>Stage</a> resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/stages/{stageName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetStageRequest": {
      "type": "structure",
      "members": {
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>Stage</a> resource to get information about.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to get information about a <a>Stage</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetStages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetStagesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Stages"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more <a>Stage</a> resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/restapis/{restApiId}/stages",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetStagesRequest": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The stages' deployment identifiers.</p>",
            "smithy.api#httpQuery": "deploymentId"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to get information about one or more <a>Stage</a> resources.</p>"
      }
    },
    "com.amazonaws.apigateway#GetTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Tags"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>Tags</a> collection for a given resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetTagsRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>(Not currently supported) The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "resourceArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The ARN of a resource that can be tagged.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>(Not currently supported) The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>Tags</a> collection for a given resource.</p>"
      }
    },
    "com.amazonaws.apigateway#GetUsage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetUsageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Usage"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the usage data of a usage plan in a specified time interval.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/usageplans/{usagePlanId}/usage",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetUsagePlan": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetUsagePlanRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlan"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a usage plan of a given plan identifier.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/usageplans/{usagePlanId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetUsagePlanKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetUsagePlanKeyRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlanKey"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a usage plan key of a given key identifier.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/usageplans/{usagePlanId}/keys/{keyId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetUsagePlanKeyRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The key Id of the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to get a usage plan key of a given key identifier.</p>"
      }
    },
    "com.amazonaws.apigateway#GetUsagePlanKeys": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetUsagePlanKeysRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlanKeys"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets all the usage plan keys representing the API keys added to a specified usage plan.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/usageplans/{usagePlanId}/keys",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetUsagePlanKeysRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "nameQuery": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter specifying the name of the to-be-returned usage plan keys.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the <a>UsagePlan</a> resource representing the usage plan containing the to-be-retrieved <a>UsagePlanKey</a> resource representing a plan customer.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to get all the usage plan keys representing the API keys added to a specified usage plan.</p>"
      }
    },
    "com.amazonaws.apigateway#GetUsagePlanRequest": {
      "type": "structure",
      "members": {
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>UsagePlan</a> resource to be retrieved.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to get a usage plan of a given plan identifier.</p>"
      }
    },
    "com.amazonaws.apigateway#GetUsagePlans": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetUsagePlansRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlans"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets all the usage plans of the caller's account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/usageplans",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetUsagePlansRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the API key associated with the usage plans.</p>",
            "smithy.api#httpQuery": "keyId"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to get all the usage plans of the caller's account.</p>"
      }
    },
    "com.amazonaws.apigateway#GetUsageRequest": {
      "type": "structure",
      "members": {
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "endDate": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The ending date (e.g., 2016-12-31) of the usage data.</p>",
            "smithy.api#httpQuery": "endDate",
            "smithy.api#required": {}
          }
        },
        "startDate": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The starting date (e.g., 2016-01-01) of the usage data.</p>",
            "smithy.api#httpQuery": "startDate",
            "smithy.api#required": {}
          }
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the usage plan associated with the usage data.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The Id of the API key associated with the resultant usage data.</p>",
            "smithy.api#httpQuery": "keyId"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GET request to get the usage data of a usage plan in a specified time interval.</p>"
      }
    },
    "com.amazonaws.apigateway#GetVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#VpcLink"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a specified VPC link under the caller's account in a region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/vpclinks/{vpcLinkId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetVpcLinkRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "vpcLinkId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the  <a>VpcLink</a>. It is used in an <a>Integration</a> to reference this <a>VpcLink</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets a specified VPC link under the caller's account in a region.</p>"
      }
    },
    "com.amazonaws.apigateway#GetVpcLinks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#GetVpcLinksRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#VpcLinks"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>VpcLinks</a> collection under the caller's account in a selected region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/vpclinks",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#GetVpcLinksRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "limit": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of returned results per page. The default value is 25 and the maximum value is 500.</p>",
            "smithy.api#httpQuery": "limit"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Gets the <a>VpcLinks</a> collection under the caller's account in a selected region.</p>"
      }
    },
    "com.amazonaws.apigateway#ImportApiKeys": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#ImportApiKeysRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ApiKeyIds"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Import API keys from an external source, such as a CSV-formatted file.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/apikeys?mode=import",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#ImportApiKeysRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "format": {
          "target": "com.amazonaws.apigateway#ApiKeysFormat",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to specify the input format to imported API keys. Currently, only the <code>csv</code> format is supported.</p>",
            "smithy.api#httpQuery": "format",
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "failOnWarnings": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to indicate whether to rollback <a>ApiKey</a> importation (<code>true</code>) or not (<code>false</code>) when error is encountered.</p>",
            "smithy.api#httpQuery": "failonwarnings"
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The POST request to import API keys from an external source, such as a CSV-formatted file.</p>"
      }
    },
    "com.amazonaws.apigateway#ImportDocumentationParts": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#ImportDocumentationPartsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationPartIds"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/documentation/parts",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#ImportDocumentationPartsRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "failOnWarnings": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to specify whether to rollback the documentation importation (<code>true</code>) or not (<code>false</code>) when a warning is encountered. The default value is <code>false</code>.</p>",
            "smithy.api#httpQuery": "failonwarnings"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "mode": {
          "target": "com.amazonaws.apigateway#PutMode",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to indicate whether to overwrite (<code>OVERWRITE</code>) any existing <a>DocumentationParts</a> definition or to merge (<code>MERGE</code>) the new definition into the existing one. The default value is <code>MERGE</code>.</p>",
            "smithy.api#httpQuery": "mode"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Import documentation parts from an external (e.g., OpenAPI) definition file. </p>"
      }
    },
    "com.amazonaws.apigateway#ImportRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#ImportRestApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApi"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>A feature of the API Gateway control service for creating a new API from an external API definition file.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis?mode=import",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#ImportRestApiRequest": {
      "type": "structure",
      "members": {
        "failOnWarnings": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to indicate whether to rollback the API creation (<code>true</code>) or not (<code>false</code>)\n            when a warning is encountered. The default value is <code>false</code>.</p>",
            "smithy.api#httpQuery": "failonwarnings"
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "parameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map of context-specific query string parameters specifying the behavior of different API importing operations. The following shows operation-specific parameters and their supported values.</p>\n        <p> To exclude <a>DocumentationParts</a> from the import, set <code>parameters</code> as <code>ignore=documentation</code>.</p>\n      <p> To configure the endpoint type, set <code>parameters</code> as <code>endpointConfigurationTypes=EDGE</code>, <code>endpointConfigurationTypes=REGIONAL</code>, or <code>endpointConfigurationTypes=PRIVATE</code>. The default endpoint type is <code>EDGE</code>.</p>\n        <p> To handle imported <code>basepath</code>, set <code>parameters</code> as <code>basepath=ignore</code>, <code>basepath=prepend</code> or <code>basepath=split</code>.</p>\n        <p>For example, the AWS CLI command to exclude documentation from the imported API is:</p> \n        <pre><code>aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'</code></pre>\n        <p>The AWS CLI command to set the regional endpoint on the imported API is:</p>\n        <pre><code>aws apigateway import-rest-api --parameters endpointConfigurationTypes=REGIONAL --body 'file:///path/to/imported-api-body.json'</code></pre>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A POST request to import an API to API Gateway using an input of an API definition file.</p>"
      }
    },
    "com.amazonaws.apigateway#Integer": {
      "type": "integer"
    },
    "com.amazonaws.apigateway#Integration": {
      "type": "structure",
      "members": {
        "cacheNamespace": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a group of related cached parameters. By default, API Gateway uses the resource ID as the <code>cacheNamespace</code>. You can specify the same <code>cacheNamespace</code> across resources to return the same cached data for requests to different resources.</p>"
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.apigateway#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>Specifies an API method integration type. The valid value is one of the following:</p>\n        <ul>\n            <li><code>AWS</code>: for integrating the API method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration.</li>\n            <li><code>AWS_PROXY</code>: for integrating the API method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as the Lambda proxy integration.</li>\n            <li><code>HTTP</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP endpoint within a VPC. This integration is also referred to as the HTTP custom integration.</li>\n            <li><code>HTTP_PROXY</code>: for integrating the API method request with an HTTP endpoint, including a private HTTP endpoint within a VPC, with the client request passed through as-is. This is also referred to as the HTTP proxy integration.</li>\n            <li><code>MOCK</code>: for integrating the API method request with API Gateway as a \"loop-back\" endpoint without invoking any backend.</li>\n        </ul>\n        <p>For the HTTP and HTTP proxy integrations, each integration can specify a protocol (<code>http/https</code>), port and path. Standard 80 and 443 ports are supported as well as custom ports above 1024. An HTTP or HTTP proxy integration with a <code>connectionType</code> of <code>VPC_LINK</code> is referred to as a private integration and uses a <a>VpcLink</a> to connect API Gateway to a network load balancer of a VPC.</p>"
          }
        },
        "timeoutInMillis": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds or 29 seconds.</p>"
          }
        },
        "uri": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>\n<ul>\n<li><p> For <code>HTTP</code> or <code>HTTP_PROXY</code> integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier\">RFC-3986 specification</a>, for either standard integration, where <code>connectionType</code> is not <code>VPC_LINK</code>, or private integration, where <code>connectionType</code> is <code>VPC_LINK</code>. For a private HTTP integration, the URI is not used for routing. </p>\n</li>\n<li><p> For <code>AWS</code> or <code>AWS_PROXY</code> integrations, the URI is of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</code>. Here, <code>{Region}</code> is the API Gateway region (e.g., <code>us-east-1</code>); <code>{service}</code> is the name of the integrated AWS service (e.g., <code>s3</code>); and <code>{subdomain}</code> is a designated subdomain supported by certain AWS service for fast host-name lookup. <code>action</code> can be used for an AWS service action-based API, using an <code>Action={name}&{p1}={v1}&p2={v2}...</code> query string. The ensuing <code>{service_api}</code> refers to a supported action <code>{name}</code> plus any required input parameters. Alternatively, <code>path</code> can be used for an AWS service path-based API. The ensuing  <code>service_api</code> refers to the path to an AWS service resource, including the region of the integrated AWS service, if applicable. For example, for integration with the S3 API of <code><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html\">GetObject</a></code>, the <code>uri</code> can be either <code>arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key}</code> or  <code>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</code></p>\n</li></ul>"
          }
        },
        "connectionType": {
          "target": "com.amazonaws.apigateway#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code> for connections through the public routable internet or <code>VPC_LINK</code> for private connections between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</p>"
          }
        },
        "requestParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of  <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.</p>"
          }
        },
        "requestTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.</p>"
          }
        },
        "cacheKeyParameters": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of request parameters whose values API Gateway caches. To be valid values for <code>cacheKeyParameters</code>, these parameters must also be specified for <a>Method</a> <code>requestParameters</code>.</p>"
          }
        },
        "connectionId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The (<a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/vpc-link/#id\"><code>id</code></a>) of the <a>VpcLink</a> used for the integration when <code>connectionType=VPC_LINK</code> and undefined, otherwise.</p>"
          }
        },
        "passthroughBehavior": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<div>\n        <p>\n            Specifies how the method request body of an unmapped content type will be passed through the integration request\n            to the back end without transformation. A content type is unmapped if no mapping template is defined in the integration\n            or the content type does not match any of the mapped content types, as specified in <code>requestTemplates</code>.\n            The valid value is one of the following:\n        </p>\n        <ul>\n          <li>\n            <code>WHEN_NO_MATCH</code>: passes the method request body through the integration request to the back end without transformation\n            when the method request content type does not match any content type associated with the mapping templates defined in the integration request.\n          </li>\n          <li>\n            <code>WHEN_NO_TEMPLATES</code>: passes the method request body through the integration request to the back end without transformation\n            when no mapping template is defined in the integration request. If a template is defined when this option is selected, the method request\n            of an unmapped content-type will be rejected with an HTTP <code>415 Unsupported Media Type</code> response.\n          </li>\n          <li>\n            <code>NEVER</code>: rejects the method request with an HTTP <code>415 Unsupported Media Type</code> response when either the method\n            request content type does not match any content type associated with the mapping templates defined in the integration request or\n            no mapping template is defined in the integration request.\n          </li>\n        </ul>\n      </div>"
          }
        },
        "tlsConfig": {
          "target": "com.amazonaws.apigateway#TlsConfig",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the TLS configuration for an integration.</p>"
          }
        },
        "credentials": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string <code>arn:aws:iam::\\*:user/\\*</code>. To use resource-based permissions on supported AWS services, specify null.</p>"
          }
        },
        "contentHandling": {
          "target": "com.amazonaws.apigateway#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p>\n      <ul>\n        <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li>\n        <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li>\n      </ul>\n      <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehavior</code> is configured to support payload pass-through.</p>"
          }
        },
        "integrationResponses": {
          "target": "com.amazonaws.apigateway#MapOfIntegrationResponse",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's responses.</p>\n        <div class=\"remarks\">\n    <p></p>\n    <h4>Example: Get integration responses of a method</h4>\n    <h5>Request</h5>\n    <p></p>\n    <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200 HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nX-Amz-Date: 20160607T191449Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160607/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}\n</code></pre>\n    <h5>Response</h5>\n    <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p>\n    <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html\",\n      \"name\": \"integrationresponse\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\",\n      \"title\": \"200\"\n    },\n    \"integrationresponse:delete\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n    },\n    \"integrationresponse:update\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n    }\n  },\n  \"responseParameters\": {\n    \"method.response.header.Content-Type\": \"'application/xml'\"\n  },\n  \"responseTemplates\": {\n    \"application/json\": \"$util.urlDecode(\\\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\\\")\\n\"\n  },\n  \"statusCode\": \"200\"\n}</code></pre>\n    <p></p>\n        </div>\n        <div class=\"seeAlso\">\n          <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Creating an API</a>\n        </div>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.</p>\n        <div class=\"remarks\">In the API Gateway console, the built-in Lambda integration is an AWS integration.</div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Creating an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#IntegrationResponse": {
      "type": "structure",
      "members": {
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the back end.\n            The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> is a valid and unique response header name and <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.</p>"
          }
        },
        "responseTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the templates used to transform the integration response body. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.</p>"
          }
        },
        "selectionPattern": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the regular expression (regex) pattern used to choose an integration response based on the response from the back end. For example, if the success response returns nothing and the error response returns some string, you could use the <code>.+</code> regex to match error response. However, make sure that the error response does not contain any newline (<code>\\n</code>) character in such cases. If the back end is an AWS Lambda function, the AWS Lambda function error header is matched. For all other HTTP and AWS back ends, the HTTP status code is matched.</p>"
          }
        },
        "contentHandling": {
          "target": "com.amazonaws.apigateway#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p>\n    <ul>\n      <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li>\n      <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li>\n    </ul>\n    <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an integration response. The status code must map to an existing <a>MethodResponse</a>, and parameters and templates can be used to transform the back-end response.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Creating an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#IntegrationType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The integration type. The valid value is <code>HTTP</code> for integrating an API method with an HTTP backend; <code>AWS</code> with any AWS service endpoints; <code>MOCK</code> for testing without actually invoking the backend; <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration; <code>AWS_PROXY</code> for integrating with the Lambda proxy integration. </p>",
        "smithy.api#enum": [
          {
            "value": "HTTP",
            "name": "HTTP"
          },
          {
            "value": "AWS",
            "name": "AWS"
          },
          {
            "value": "MOCK",
            "name": "MOCK"
          },
          {
            "value": "HTTP_PROXY",
            "name": "HTTP_PROXY"
          },
          {
            "value": "AWS_PROXY",
            "name": "AWS_PROXY"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#LimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        },
        "retryAfterSeconds": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request exceeded the rate limit. Retry after the specified time period.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.apigateway#ListOfARNs": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#ProviderARN"
      }
    },
    "com.amazonaws.apigateway#ListOfApiKey": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#ApiKey"
      }
    },
    "com.amazonaws.apigateway#ListOfApiStage": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#ApiStage"
      }
    },
    "com.amazonaws.apigateway#ListOfAuthorizer": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Authorizer"
      }
    },
    "com.amazonaws.apigateway#ListOfBasePathMapping": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#BasePathMapping"
      }
    },
    "com.amazonaws.apigateway#ListOfClientCertificate": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#ClientCertificate"
      }
    },
    "com.amazonaws.apigateway#ListOfDeployment": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Deployment"
      }
    },
    "com.amazonaws.apigateway#ListOfDocumentationPart": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#DocumentationPart"
      }
    },
    "com.amazonaws.apigateway#ListOfDocumentationVersion": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#DocumentationVersion"
      }
    },
    "com.amazonaws.apigateway#ListOfDomainName": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#DomainName"
      }
    },
    "com.amazonaws.apigateway#ListOfEndpointType": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#EndpointType"
      }
    },
    "com.amazonaws.apigateway#ListOfGatewayResponse": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#GatewayResponse"
      }
    },
    "com.amazonaws.apigateway#ListOfLong": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Long"
      }
    },
    "com.amazonaws.apigateway#ListOfModel": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Model"
      }
    },
    "com.amazonaws.apigateway#ListOfPatchOperation": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#PatchOperation"
      },
      "traits": {
        "smithy.api#documentation": "A list of operations describing the updates to apply to the specified resource.  The patches are applied\n        in the order specified in the list."
      }
    },
    "com.amazonaws.apigateway#ListOfRequestValidator": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#RequestValidator"
      }
    },
    "com.amazonaws.apigateway#ListOfResource": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Resource"
      }
    },
    "com.amazonaws.apigateway#ListOfRestApi": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#RestApi"
      }
    },
    "com.amazonaws.apigateway#ListOfSdkConfigurationProperty": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#SdkConfigurationProperty"
      }
    },
    "com.amazonaws.apigateway#ListOfSdkType": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#SdkType"
      }
    },
    "com.amazonaws.apigateway#ListOfStage": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#Stage"
      }
    },
    "com.amazonaws.apigateway#ListOfStageKeys": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#StageKey"
      }
    },
    "com.amazonaws.apigateway#ListOfString": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#String"
      }
    },
    "com.amazonaws.apigateway#ListOfUsage": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#ListOfLong"
      }
    },
    "com.amazonaws.apigateway#ListOfUsagePlan": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#UsagePlan"
      }
    },
    "com.amazonaws.apigateway#ListOfUsagePlanKey": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#UsagePlanKey"
      }
    },
    "com.amazonaws.apigateway#ListOfVpcLink": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigateway#VpcLink"
      }
    },
    "com.amazonaws.apigateway#LocationStatusType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DOCUMENTED",
            "name": "DOCUMENTED"
          },
          {
            "value": "UNDOCUMENTED",
            "name": "UNDOCUMENTED"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#Long": {
      "type": "long"
    },
    "com.amazonaws.apigateway#MapOfApiStageThrottleSettings": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#ThrottleSettings"
      }
    },
    "com.amazonaws.apigateway#MapOfIntegrationResponse": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#IntegrationResponse"
      }
    },
    "com.amazonaws.apigateway#MapOfKeyUsages": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#ListOfUsage"
      }
    },
    "com.amazonaws.apigateway#MapOfMethod": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#Method"
      }
    },
    "com.amazonaws.apigateway#MapOfMethodResponse": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#MethodResponse"
      }
    },
    "com.amazonaws.apigateway#MapOfMethodSettings": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#MethodSetting"
      }
    },
    "com.amazonaws.apigateway#MapOfMethodSnapshot": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#MethodSnapshot"
      }
    },
    "com.amazonaws.apigateway#MapOfStringToBoolean": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#NullableBoolean"
      }
    },
    "com.amazonaws.apigateway#MapOfStringToList": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#ListOfString"
      }
    },
    "com.amazonaws.apigateway#MapOfStringToString": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#String"
      }
    },
    "com.amazonaws.apigateway#Method": {
      "type": "structure",
      "members": {
        "requestParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key is a method request parameter name matching the pattern of  <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>).  The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or templates.</p>"
          }
        },
        "authorizationType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.</p>"
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The method's HTTP verb.</p>"
          }
        },
        "methodResponses": {
          "target": "com.amazonaws.apigateway#MapOfMethodResponse",
          "traits": {
            "smithy.api#documentation": "<p>Gets a method response associated with a given HTTP status code. </p>\n      <div class=\"remarks\">\n        <p>The collection of method responses are encapsulated in a key-value map, where the key is a response's HTTP status code and the value is a <a>MethodResponse</a> resource that specifies the response returned to the caller from the back end through the integration response.</p>\n        <h4>Example: Get a 200 OK response of a GET method</h4>\n        <h5>Request</h5>\n        <p></p>\n        <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200 HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nContent-Length: 117\nX-Amz-Date: 20160613T215008Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>\n        <h5>Response</h5>\n        <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p>\n        <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html\",\n      \"name\": \"methodresponse\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200\",\n      \"title\": \"200\"\n    },\n    \"methodresponse:delete\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200\"\n    },\n    \"methodresponse:update\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/responses/200\"\n    }\n  },\n  \"responseModels\": {\n    \"application/json\": \"Empty\"\n  },\n  \"responseParameters\": {\n    \"method.response.header.operator\": false,\n    \"method.response.header.operand_2\": false,\n    \"method.response.header.operand_1\": false\n  },\n  \"statusCode\": \"200\"\n}</code></pre>\n        <p></p>\n      </div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-method-response.html\">AWS CLI</a>\n      </div>"
          }
        },
        "requestValidatorId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a <a>RequestValidator</a> for request validation.</p>"
          }
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of an <a>Authorizer</a> to use on this method. The <code>authorizationType</code> must be <code>CUSTOM</code>.</p>"
          }
        },
        "methodIntegration": {
          "target": "com.amazonaws.apigateway#Integration",
          "traits": {
            "smithy.api#documentation": "<p>Gets the method's integration responsible for passing the client-submitted request to the back end and performing necessary transformations to make the request compliant with the back end.</p>\n      <div class=\"remarks\">\n        <p></p>\n        <h4>Example: </h4>\n        <h5>Request</h5>\n        <p></p>\n        <pre><code>GET /restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nContent-Length: 117\nX-Amz-Date: 20160613T213210Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160613/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>\n        <h5>Response</h5>\n        <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p>\n        <pre><code>{\n  \"_links\": {\n    \"curies\": [\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html\",\n        \"name\": \"integration\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html\",\n        \"name\": \"integrationresponse\",\n        \"templated\": true\n      }\n    ],\n    \"self\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration\"\n    },\n    \"integration:delete\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration\"\n    },\n    \"integration:responses\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200\",\n      \"name\": \"200\",\n      \"title\": \"200\"\n    },\n    \"integration:update\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration\"\n    },\n    \"integrationresponse:put\": {\n      \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/{status_code}\",\n      \"templated\": true\n    }\n  },\n  \"cacheKeyParameters\": [],\n  \"cacheNamespace\": \"0cjtch\",\n  \"credentials\": \"arn:aws:iam::123456789012:role/apigAwsProxyRole\",\n  \"httpMethod\": \"POST\",\n  \"passthroughBehavior\": \"WHEN_NO_MATCH\",\n  \"requestTemplates\": {\n    \"application/json\": \"{\\n    \\\"a\\\":  \\\"$input.params('operand1')\\\",\\n    \\\"b\\\":  \\\"$input.params('operand2')\\\", \\n    \\\"op\\\": \\\"$input.params('operator')\\\"   \\n}\"\n  },\n  \"type\": \"AWS\",\n  \"uri\": \"arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/arn:aws:lambda:us-west-2:123456789012:function:Calc/invocations\",\n  \"_embedded\": {\n    \"integration:responses\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200\",\n          \"name\": \"200\",\n          \"title\": \"200\"\n        },\n        \"integrationresponse:delete\": {\n          \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200\"\n        },\n        \"integrationresponse:update\": {\n          \"href\": \"/restapis/uojnr9hd57/resources/0cjtch/methods/GET/integration/responses/200\"\n        }\n      },\n      \"responseParameters\": {\n        \"method.response.header.operator\": \"integration.response.body.op\",\n        \"method.response.header.operand_2\": \"integration.response.body.b\",\n        \"method.response.header.operand_1\": \"integration.response.body.a\"\n      },\n      \"responseTemplates\": {\n        \"application/json\": \"#set($res = $input.path('$'))\\n{\\n    \\\"result\\\": \\\"$res.a, $res.b, $res.op => $res.c\\\",\\n  \\\"a\\\" : \\\"$res.a\\\",\\n  \\\"b\\\" : \\\"$res.b\\\",\\n  \\\"op\\\" : \\\"$res.op\\\",\\n  \\\"c\\\" : \\\"$res.c\\\"\\n}\"\n      },\n      \"selectionPattern\": \"\",\n      \"statusCode\": \"200\"\n    }\n  }\n}</code></pre>\n        <p></p>\n      </div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/get-integration.html\">AWS CLI</a>\n      </div>"
          }
        },
        "operationName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in the <code>PetStore</code> example.</p>"
          }
        },
        "apiKeyRequired": {
          "target": "com.amazonaws.apigateway#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A boolean flag specifying whether a valid <a>ApiKey</a> is required to invoke this method.</p>"
          }
        },
        "authorizationScopes": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on the method. The scopes are used with a <code>COGNITO_USER_POOLS</code> authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>"
          }
        },
        "requestModels": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying data schemas, represented by <a>Model</a> resources, (as the mapped value) of the request payloads of given content types (as the mapping key).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            Represents a client-facing interface by which the client calls the API to access back-end resources. A <b>Method</b> resource is\n            integrated with an <a>Integration</a> resource. Both consist of a request and one or more responses. The method request takes\n            the client input that is passed to the back end through the integration request. A method response returns the output from\n            the back end to the client through an integration response. A method request is embodied in a <b>Method</b> resource, whereas\n            an integration request is embodied in an <a>Integration</a> resource.  On the other hand, a method response is represented\n            by a <a>MethodResponse</a> resource, whereas an integration response is represented by an <a>IntegrationResponse</a> resource.\n        </p>\n        <div class=\"remarks\">\n          <p></p>\n          <h4>Example: Retrive the GET method on a specified resource</h4>\n          <h5>Request</h5>\n          <p>The following example request retrieves the information about the GET method on an API resource (<code>3kzxbg5sa2</code>) of an API (<code>fugvjdxtri</code>). </p>\n          <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nX-Amz-Date: 20160603T210259Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>\n          <h5>Response</h5>\n          <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p>\n          <pre><code>{\n  \"_links\": {\n    \"curies\": [\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html\",\n        \"name\": \"integration\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html\",\n        \"name\": \"integrationresponse\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html\",\n        \"name\": \"method\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html\",\n        \"name\": \"methodresponse\",\n        \"templated\": true\n      }\n    ],\n    \"self\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\",\n      \"name\": \"GET\",\n      \"title\": \"GET\"\n    },\n    \"integration:put\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n    },\n    \"method:delete\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\"\n    },\n    \"method:integration\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n    },\n    \"method:responses\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\",\n      \"name\": \"200\",\n      \"title\": \"200\"\n    },\n    \"method:update\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\"\n    },\n    \"methodresponse:put\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}\",\n      \"templated\": true\n    }\n  },\n  \"apiKeyRequired\": true,\n  \"authorizationType\": \"NONE\",\n  \"httpMethod\": \"GET\",\n  \"_embedded\": {\n    \"method:integration\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integration:delete\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integration:responses\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\",\n          \"name\": \"200\",\n          \"title\": \"200\"\n        },\n        \"integration:update\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integrationresponse:put\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}\",\n          \"templated\": true\n        }\n      },\n      \"cacheKeyParameters\": [],\n      \"cacheNamespace\": \"3kzxbg5sa2\",\n      \"credentials\": \"arn:aws:iam::123456789012:role/apigAwsProxyRole\",\n      \"httpMethod\": \"POST\",\n      \"passthroughBehavior\": \"WHEN_NO_MATCH\",\n      \"requestParameters\": {\n        \"integration.request.header.Content-Type\": \"'application/x-amz-json-1.1'\"\n      },\n      \"requestTemplates\": {\n        \"application/json\": \"{\\n}\"\n      },\n      \"type\": \"AWS\",\n      \"uri\": \"arn:aws:apigateway:us-east-1:kinesis:action/ListStreams\",\n      \"_embedded\": {\n        \"integration:responses\": {\n          \"_links\": {\n            \"self\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\",\n              \"name\": \"200\",\n              \"title\": \"200\"\n            },\n            \"integrationresponse:delete\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n            },\n            \"integrationresponse:update\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n            }\n          },\n          \"responseParameters\": {\n            \"method.response.header.Content-Type\": \"'application/xml'\"\n          },\n          \"responseTemplates\": {\n            \"application/json\": \"$util.urlDecode(\\\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\\\")\"\n          },\n          \"statusCode\": \"200\"\n        }\n      }\n    },\n    \"method:responses\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\",\n          \"name\": \"200\",\n          \"title\": \"200\"\n        },\n        \"methodresponse:delete\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n        },\n        \"methodresponse:update\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n        }\n      },\n      \"responseModels\": {\n        \"application/json\": \"Empty\"\n      },\n      \"responseParameters\": {\n        \"method.response.header.Content-Type\": false\n      },\n      \"statusCode\": \"200\"\n    }\n  }\n}</code></pre>\n          <p>In the example above, the response template for the <code>200 OK</code> response maps the JSON output from the <code>ListStreams</code> action in the back end to an XML output. The mapping template is URL-encoded as <code>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</code> and the output is decoded using the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#util-templat-reference\">$util.urlDecode()</a> helper function.</p>\n      </div>\n      <div class=\"seeAlso\">\n        <a>MethodResponse</a>, <a>Integration</a>, <a>IntegrationResponse</a>, <a>Resource</a>,\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings.html\">Set up an API's method</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#MethodResponse": {
      "type": "structure",
      "members": {
        "responseModels": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the <a>Model</a> resources used for the response's content-type. Response models are represented as a key/value map, with a content-type as the key and a <a>Model</a> name as the value.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The method response's status code.</p>"
          }
        },
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header and the value specifies whether the associated method response header is required or not. The expression of the key must match the pattern <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. API Gateway passes certain integration response data to the method response headers specified here according to the mapping you prescribe in the API's <a>IntegrationResponse</a>. The integration response data that can be mapped include an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a method response of a given HTTP status code returned to the client. The method response is passed from the back end through the associated integration response that can be transformed using a mapping template. <!-- &ABP; sends back the status code to the caller as the HTTP status code. Parameters and models can be used to transform the response from the method's integration.--></p>\n        <div class=\"remarks\">\n          <p></p>\n          <h4>Example: A <b>MethodResponse</b> instance of an API</h4>\n          <h5>Request</h5>\n          <p>The example request retrieves a <b>MethodResponse</b> of the 200 status code.</p>\n          <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nX-Amz-Date: 20160603T222952Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>\n          <h5>Response</h5>\n          <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p>\n          <pre><code>{\n  \"_links\": {\n    \"curies\": {\n      \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html\",\n      \"name\": \"methodresponse\",\n      \"templated\": true\n    },\n    \"self\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\",\n      \"title\": \"200\"\n    },\n    \"methodresponse:delete\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n    },\n    \"methodresponse:update\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n    }\n  },\n  \"responseModels\": {\n    \"application/json\": \"Empty\"\n  },\n  \"responseParameters\": {\n    \"method.response.header.Content-Type\": false\n  },\n  \"statusCode\": \"200\"\n}</code></pre>\n          <p></p>\n      </div>\n      <div class=\"seeAlso\">\n        <a>Method</a>, <a>IntegrationResponse</a>, <a>Integration</a>\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Creating an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#MethodSetting": {
      "type": "structure",
      "members": {
        "requireAuthorizationForCacheControl": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether authorization is required for a cache invalidation request. The PATCH path for this setting is <code>/{method_setting_key}/caching/requireAuthorizationForCacheControl</code>, and the value is a Boolean.</p>"
          }
        },
        "loggingLevel": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the logging level for this method, which affects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/loglevel</code>, and the available levels are <code>OFF</code>, <code>ERROR</code>, and <code>INFO</code>. Choose <code>ERROR</code> to write only error-level entries to CloudWatch Logs, or choose <code>INFO</code> to include all <code>ERROR</code> events as well as extra informational events.</p>"
          }
        },
        "dataTraceEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether data trace logging is enabled for this method, which affects the log entries pushed to Amazon CloudWatch Logs. The PATCH path for this setting is <code>/{method_setting_key}/logging/dataTrace</code>, and the value is a Boolean.</p>"
          }
        },
        "cacheDataEncrypted": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the cached responses are encrypted. The PATCH path for this setting is <code>/{method_setting_key}/caching/dataEncrypted</code>, and the value is a Boolean.</p>"
          }
        },
        "cachingEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/enabled</code>, and the value is a Boolean.</p>"
          }
        },
        "metricsEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether Amazon CloudWatch metrics are enabled for this method. The PATCH path for this setting is <code>/{method_setting_key}/metrics/enabled</code>, and the value is a Boolean.</p>"
          }
        },
        "throttlingBurstLimit": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the throttling burst limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/burstLimit</code>, and the value is an integer.</p>"
          }
        },
        "cacheTtlInSeconds": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached. The PATCH path for this setting is <code>/{method_setting_key}/caching/ttlInSeconds</code>, and the value is an integer.</p>"
          }
        },
        "throttlingRateLimit": {
          "target": "com.amazonaws.apigateway#Double",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the throttling rate limit. The PATCH path for this setting is <code>/{method_setting_key}/throttling/rateLimit</code>, and the value is a double.</p>"
          }
        },
        "unauthorizedCacheControlHeaderStrategy": {
          "target": "com.amazonaws.apigateway#UnauthorizedCacheControlHeaderStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle unauthorized requests for cache invalidation. The PATCH path for this setting is <code>/{method_setting_key}/caching/unauthorizedCacheControlHeaderStrategy</code>, and the available values are <code>FAIL_WITH_403</code>, <code>SUCCEED_WITH_RESPONSE_HEADER</code>, <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the method setting properties.</p>"
      }
    },
    "com.amazonaws.apigateway#MethodSnapshot": {
      "type": "structure",
      "members": {
        "authorizationType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.</p>"
          }
        },
        "apiKeyRequired": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the method requires a valid <a>ApiKey</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a summary of a <a>Method</a> resource, given a particular date and time.</p>"
      }
    },
    "com.amazonaws.apigateway#Model": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the model resource.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be an alphanumeric string.</p>"
          }
        },
        "contentType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>"
          }
        },
        "schema": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For <code>application/json</code> models, this should be <a target=\"_blank\" href=\"https://tools.ietf.org/html/draft-zyp-json-schema-04\">JSON schema draft 4</a> model. Do not include \"\\*/\" characters in the description of any properties because such \"\\*/\" characters may be interpreted as the closing marker for comments in some languages, such as Java or JavaScript, causing the installation of your API's SDK generated by API Gateway to fail.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the data structure of a method's request or response payload.</p>\n      <div class=\"remarks\">\n        <p>A request model defines the data structure of the client-supplied request payload. A response model defines the data structure of the response payload returned by the back end. Although not required, models are useful for mapping payloads between the front end and back end.</p>\n        <p>A model is used for generating an API's SDK, validating the input request body, and creating a skeletal mapping template.</p>\n      </div>\n      <div class=\"seeAlso\">\n        <a>Method</a>, <a>MethodResponse</a>, <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\">Models and Mappings</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#Models": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfModel",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>Model</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a>Method</a>, <a>MethodResponse</a>, <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\">Models and Mappings</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#NotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested resource is not found. Make sure that the request URI is correct.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.apigateway#NullableBoolean": {
      "type": "boolean",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.apigateway#NullableInteger": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.apigateway#Op": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "add"
          },
          {
            "value": "remove"
          },
          {
            "value": "replace"
          },
          {
            "value": "move"
          },
          {
            "value": "copy"
          },
          {
            "value": "test"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#PatchOperation": {
      "type": "structure",
      "members": {
        "value": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The new target value of the update operation. It is applicable for the <code>add</code> or <code>replace</code> operation. When using AWS CLI to update a property of a JSON value, enclose the JSON object with a pair of single quotes in a Linux shell, e.g., '{\"a\": ...}'. In a Windows shell, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json\">Using JSON for Parameters</a>.</p>"
          }
        },
        "op": {
          "target": "com.amazonaws.apigateway#Op",
          "traits": {
            "smithy.api#documentation": "<p> An update operation to be performed with this PATCH request. The valid value can be <code>add</code>, <code>remove</code>,  <code>replace</code> or <code>copy</code>. Not all valid operations are supported for a given resource. Support of the operations depends on specific operational contexts. Attempts to apply an unsupported operation on a resource will return an error message.</p>"
          }
        },
        "from": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The <code>copy</code> update operation's source as identified by a <code>JSON-Pointer</code> value referencing the location within the targeted resource to copy the value from. For example, to promote a canary deployment, you copy the canary deployment ID to the affiliated deployment ID by calling a PATCH request on a <a>Stage</a> resource with <code>\"op\":\"copy\"</code>, <code>\"from\":\"/canarySettings/deploymentId\"</code> and <code>\"path\":\"/deploymentId\"</code>.</p>"
          }
        },
        "path": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The <code>op</code> operation's target, as identified by a <a href=\"https://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08\">JSON Pointer</a> value that references a location within the targeted resource. For example, if the target resource has an updateable property of <code>{\"name\":\"value\"}</code>, the path for this property is <code>/name</code>. If the <code>name</code> property value is a JSON object (e.g., <code>{\"name\": {\"child/name\": \"child-value\"}}</code>), the path for the <code>child/name</code> property will be <code>/name/child~1name</code>. Any slash (\"/\") character appearing in path names must be escaped with \"~1\", as shown in the example above. Each <code>op</code> operation can have only one <code>path</code> associated with it.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "A single patch operation to apply to the specified resource. Please refer to\n        http://tools.ietf.org/html/rfc6902#section-4 for an explanation of how each operation is used."
      }
    },
    "com.amazonaws.apigateway#PathToMapOfMethodSnapshot": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigateway#String"
      },
      "value": {
        "target": "com.amazonaws.apigateway#MapOfMethodSnapshot"
      }
    },
    "com.amazonaws.apigateway#ProviderARN": {
      "type": "string"
    },
    "com.amazonaws.apigateway#PutGatewayResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutGatewayResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#GatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a customization of a <a>GatewayResponse</a> of a specified response type and status code on the given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/gatewayresponses/{responseType}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#PutGatewayResponseRequest": {
      "type": "structure",
      "members": {
        "responseType": {
          "target": "com.amazonaws.apigateway#GatewayResponseType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] <p>The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPE</li></ul> </p></p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "responseTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p><p>Response templates of the <a>GatewayResponse</a> as a string-to-string map of key-value pairs.</p></p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "The HTTP status code of the <a>GatewayResponse</a>."
          }
        },
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p><p>Response parameters (paths, query strings and headers) of the <a>GatewayResponse</a> as a string-to-string map of key-value  pairs.</p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a customization of a <a>GatewayResponse</a> of a specified response type and status code on the given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#PutIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Integration"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets up a method's integration.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#PutIntegrationRequest": {
      "type": "structure",
      "members": {
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a put integration request's resource ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a put integration request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "timeoutInMillis": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds or 29 seconds.</p>"
          }
        },
        "contentHandling": {
          "target": "com.amazonaws.apigateway#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle request payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p>\n  <ul>\n    <li><p><code>CONVERT_TO_BINARY</code>: Converts a request payload from a Base64-encoded string to the corresponding binary blob.</p></li>\n    <li><p><code>CONVERT_TO_TEXT</code>: Converts a request payload from a binary blob to a Base64-encoded string.</p></li>\n  </ul>\n  <p>If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the <code>passthroughBehavior</code> is configured to support payload pass-through.</p>"
          }
        },
        "requestParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the back end. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the back end. The method request parameter value must match the pattern of  <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> must be a valid and unique method request parameter name.</p>"
          }
        },
        "credentials": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether credentials are required for a put integration.</p>"
          }
        },
        "passthroughBehavior": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the <code>requestTemplates</code> property on the Integration resource. There are three valid values:  <code>WHEN_NO_MATCH</code>, <code>WHEN_NO_TEMPLATES</code>, and <code>NEVER</code>.\n        </p>\n        <ul>\n           <li><p><code>WHEN_NO_MATCH</code> passes the request body for unmapped content types through to the integration back end without transformation.</p></li>\n           <li><p><code>NEVER</code> rejects unmapped content types with an HTTP 415 'Unsupported Media Type' response.</p></li>\n           <li><p><code>WHEN_NO_TEMPLATES</code> allows pass-through when the integration has NO content types mapped to templates. However if there is at least one content type defined, unmapped content types will be rejected with the same 415 response.</p></li>\n        </ul>"
          }
        },
        "requestTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.</p>"
          }
        },
        "connectionId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The (<a href=\"https://docs.aws.amazon.com/apigateway/api-reference/resource/vpc-link/#id\"><code>id</code></a>) of the <a>VpcLink</a> used for the integration when <code>connectionType=VPC_LINK</code> and undefined, otherwise.</p>"
          }
        },
        "cacheKeyParameters": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of request parameters whose values API Gateway caches. To be valid values for <code>cacheKeyParameters</code>, these parameters must also be specified for <a>Method</a> <code>requestParameters</code>.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.apigateway#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a put integration input's type.</p>",
            "smithy.api#required": {}
          }
        },
        "tlsConfig": {
          "target": "com.amazonaws.apigateway#TlsConfig"
        },
        "uri": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies Uniform Resource Identifier (URI) of the integration endpoint.</p>\n<ul>\n<li><p> For <code>HTTP</code> or <code>HTTP_PROXY</code> integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier\">RFC-3986 specification</a>, for either standard integration, where <code>connectionType</code> is not <code>VPC_LINK</code>, or private integration, where <code>connectionType</code> is <code>VPC_LINK</code>. For a private HTTP integration, the URI is not used for routing. </p>\n</li>\n<li><p> For <code>AWS</code> or <code>AWS_PROXY</code> integrations, the URI is of the form <code>arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service_api}</code>. Here, <code>{Region}</code> is the API Gateway region (e.g., <code>us-east-1</code>); <code>{service}</code> is the name of the integrated AWS service (e.g., <code>s3</code>); and <code>{subdomain}</code> is a designated subdomain supported by certain AWS service for fast host-name lookup. <code>action</code> can be used for an AWS service action-based API, using an <code>Action={name}&{p1}={v1}&p2={v2}...</code> query string. The ensuing <code>{service_api}</code> refers to a supported action <code>{name}</code> plus any required input parameters. Alternatively, <code>path</code> can be used for an AWS service path-based API. The ensuing  <code>service_api</code> refers to the path to an AWS service resource, including the region of the integrated AWS service, if applicable. For example, for integration with the S3 API of <code><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html\">GetObject</a></code>, the <code>uri</code> can be either <code>arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key}</code> or  <code>arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}</code></p>\n</li></ul>"
          }
        },
        "integrationHttpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a put integration HTTP method. When the integration type is HTTP or AWS, this field is required.</p>",
            "smithy.api#jsonName": "httpMethod"
          }
        },
        "cacheNamespace": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a group of related cached parameters. By default, API Gateway uses the resource ID as the <code>cacheNamespace</code>. You can specify the same <code>cacheNamespace</code> across resources to return the same cached data for requests to different resources.</p>"
          }
        },
        "connectionType": {
          "target": "com.amazonaws.apigateway#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. The valid value is <code>INTERNET</code> for connections through the public routable internet or <code>VPC_LINK</code> for private connections between API Gateway and a network load balancer in a VPC. The default value is <code>INTERNET</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Sets up a method's integration.</p>"
      }
    },
    "com.amazonaws.apigateway#PutIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#IntegrationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents a put integration.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#PutIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies the status code that is used to map the integration response to an existing <a>MethodResponse</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a put integration response request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a put integration response request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the back end.\n            The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The mapped non-static value must match the pattern of <code>integration.response.header.{name}</code> or <code>integration.response.body.{JSON-expression}</code>, where <code>name</code> must be a valid and unique response header name and <code>JSON-expression</code> a valid JSON expression without the <code>$</code> prefix.</p>"
          }
        },
        "responseTemplates": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a put integration response's templates.</p>"
          }
        },
        "selectionPattern": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the selection pattern of a put integration response.</p>"
          }
        },
        "contentHandling": {
          "target": "com.amazonaws.apigateway#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle response payload content type conversions. Supported values are <code>CONVERT_TO_BINARY</code> and <code>CONVERT_TO_TEXT</code>, with the following behaviors:</p>\n    <ul>\n      <li><p><code>CONVERT_TO_BINARY</code>: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p></li>\n      <li><p><code>CONVERT_TO_TEXT</code>: Converts a response payload from a binary blob to a Base64-encoded string.</p></li>\n    </ul>\n    <p>If this property is not defined, the response payload will be passed through from the integration response to the method response without modification.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a put integration response request.</p>"
      }
    },
    "com.amazonaws.apigateway#PutMethod": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutMethodRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Method"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Add a method to an existing <a>Resource</a> resource.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#PutMethodRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the new <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies the method request's HTTP method type.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "requestModels": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the <a>Model</a> resources used for the request's content type. Request models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.</p>"
          }
        },
        "operationName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-friendly operation identifier for the method. For example, you can assign the <code>operationName</code> of <code>ListPets</code> for the <code>GET /pets</code> method in the <code>PetStore</code> example.</p>"
          }
        },
        "authorizationScopes": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on the method. The scopes are used with a <code>COGNITO_USER_POOLS</code> authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>"
          }
        },
        "authorizationType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The method's authorization type. Valid values are <code>NONE</code> for open access, <code>AWS_IAM</code> for using AWS IAM permissions, <code>CUSTOM</code> for using a custom authorizer, or <code>COGNITO_USER_POOLS</code> for using a Cognito user pool.</p>",
            "smithy.api#required": {}
          }
        },
        "apiKeyRequired": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the method required a valid <a>ApiKey</a>.</p>"
          }
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the identifier of an <a>Authorizer</a> to use on this Method, if the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>"
          }
        },
        "requestValidatorId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a <a>RequestValidator</a> for validating the method request.</p>"
          }
        },
        "requestParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key defines a method request parameter name matching the pattern of  <code>method.request.{location}.{name}</code>, where <code>location</code> is <code>querystring</code>, <code>path</code>, or <code>header</code> and <code>name</code> is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (<code>true</code>) or optional (<code>false</code>).  The method request parameter names defined here are available in <a>Integration</a> to be mapped to integration request parameters or body-mapping templates.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to add a method to an existing <a>Resource</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#PutMethodResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutMethodResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#MethodResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds a <a>MethodResponse</a> to an existing <a>Method</a> resource.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#PutMethodResponseRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The method response's status code.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "responseParameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToBoolean",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header name and the associated value is a Boolean flag indicating whether the method response parameter is required or not. The method response header names must match the pattern of <code>method.response.header.{name}</code>, where <code>name</code> is a valid and unique header name. The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in <code>integration.response.header.{name}</code>, a static value enclosed within a pair of single quotes (e.g., <code>'application/json'</code>), or a JSON expression from the back-end response payload in the form of <code>integration.response.body.{JSON-expression}</code>, where <code>JSON-expression</code> is a valid JSON expression without the <code>$</code> prefix.)</p>"
          }
        },
        "responseModels": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the <a>Model</a> resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a <a>Model</a> name as the value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to add a <a>MethodResponse</a> to an existing <a>Method</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#PutMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "merge",
            "name": "Merge"
          },
          {
            "value": "overwrite",
            "name": "Overwrite"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#PutRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#PutRestApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApi"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>A feature of the API Gateway control service for updating an existing API with an input of external API definitions.\n            The update can take the form of merging the supplied definition into the existing API or overwriting the existing API.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/restapis/{restApiId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#PutRestApiRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "parameters": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>Custom header parameters as part of the request. For example, to exclude <a>DocumentationParts</a> from an imported API, set <code>ignore=documentation</code> as a <code>parameters</code> value, as in the AWS CLI command of <code>aws apigateway import-rest-api --parameters ignore=documentation --body 'file:///path/to/imported-api-body.json'</code>.</p>"
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "mode": {
          "target": "com.amazonaws.apigateway#PutMode",
          "traits": {
            "smithy.api#documentation": "<p>The <code>mode</code> query parameter to specify the update mode. Valid values are \"merge\" and \"overwrite\". By default,\n        the update mode is \"merge\".</p>",
            "smithy.api#httpQuery": "mode"
          }
        },
        "failOnWarnings": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A query parameter to indicate whether to rollback the API update (<code>true</code>) or not (<code>false</code>)\n            when a warning is encountered. The default value is <code>false</code>.</p>",
            "smithy.api#httpQuery": "failonwarnings"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A PUT request to update an existing API, with external API definitions specified as the request body.</p>"
      }
    },
    "com.amazonaws.apigateway#QuotaPeriodType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DAY",
            "name": "DAY"
          },
          {
            "value": "WEEK",
            "name": "WEEK"
          },
          {
            "value": "MONTH",
            "name": "MONTH"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#QuotaSettings": {
      "type": "structure",
      "members": {
        "period": {
          "target": "com.amazonaws.apigateway#QuotaPeriodType",
          "traits": {
            "smithy.api#documentation": "<p>The time period in which the limit applies. Valid values are \"DAY\", \"WEEK\" or \"MONTH\".</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of requests that can be made in a given time period.</p>"
          }
        },
        "offset": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The number of requests subtracted from the given limit in the initial time period.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Quotas configured for a usage plan.</p>"
      }
    },
    "com.amazonaws.apigateway#RequestValidator": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of this <a>RequestValidator</a>.</p>"
          }
        },
        "validateRequestBody": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether to validate a request body according to the configured <a>Model</a> schema.</p>"
          }
        },
        "validateRequestParameters": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A Boolean flag to indicate whether to validate request parameters (<code>true</code>) or not (<code>false</code>).</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of this <a>RequestValidator</a></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A set of validation rules for incoming <a>Method</a> requests.</p>\n        <div class=\"remarks\">\n          <p>In OpenAPI, a <a>RequestValidator</a> of an API is defined by the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.requestValidator.html\">x-amazon-apigateway-request-validators.requestValidator</a> object. It the referenced using the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validator\">x-amazon-apigateway-request-validator</a> property.</p>\n        </div>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html\">Enable Basic Request Validation in API Gateway</a></div>"
      }
    },
    "com.amazonaws.apigateway#RequestValidators": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfRequestValidator",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A collection of <a>RequestValidator</a> resources of a given <a>RestApi</a>.</p>\n        <div class=\"remarks\">\n          <p>In OpenAPI, the <a>RequestValidators</a> of an API is defined by the <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.html\">x-amazon-apigateway-request-validators</a> extension.</p>\n        </div>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html\">Enable Basic Request Validation in API Gateway</a></div>"
      }
    },
    "com.amazonaws.apigateway#Resource": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The resource's identifier.</p>"
          }
        },
        "resourceMethods": {
          "target": "com.amazonaws.apigateway#MapOfMethod",
          "traits": {
            "smithy.api#documentation": "<p>Gets an API resource's method of a given HTTP verb.</p>\n      <div class=\"remarks\">\n        <p>The resource methods are a map of methods indexed by methods' HTTP verbs enabled on the resource. This method map is included in the <code>200 OK</code> response of the <code>GET /restapis/{restapi_id}/resources/{resource_id}</code> or <code>GET /restapis/{restapi_id}/resources/{resource_id}?embed=methods</code> request.</p>\n        <h4>Example: Get the GET method of an API resource</h4>\n        <h5>Request</h5>\n        <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1\nContent-Type: application/json\nHost: apigateway.us-east-1.amazonaws.com\nX-Amz-Date: 20170223T031827Z\nAuthorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20170223/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre>\n        <h5>Response</h5>\n        <pre><code>{\n  \"_links\": {\n    \"curies\": [\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html\",\n        \"name\": \"integration\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html\",\n        \"name\": \"integrationresponse\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html\",\n        \"name\": \"method\",\n        \"templated\": true\n      },\n      {\n        \"href\": \"https://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html\",\n        \"name\": \"methodresponse\",\n        \"templated\": true\n      }\n    ],\n    \"self\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\",\n      \"name\": \"GET\",\n      \"title\": \"GET\"\n    },\n    \"integration:put\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n    },\n    \"method:delete\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\"\n    },\n    \"method:integration\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n    },\n    \"method:responses\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\",\n      \"name\": \"200\",\n      \"title\": \"200\"\n    },\n    \"method:update\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET\"\n    },\n    \"methodresponse:put\": {\n      \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}\",\n      \"templated\": true\n    }\n  },\n  \"apiKeyRequired\": false,\n  \"authorizationType\": \"NONE\",\n  \"httpMethod\": \"GET\",\n  \"_embedded\": {\n    \"method:integration\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integration:delete\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integration:responses\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\",\n          \"name\": \"200\",\n          \"title\": \"200\"\n        },\n        \"integration:update\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration\"\n        },\n        \"integrationresponse:put\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}\",\n          \"templated\": true\n        }\n      },\n      \"cacheKeyParameters\": [],\n      \"cacheNamespace\": \"3kzxbg5sa2\",\n      \"credentials\": \"arn:aws:iam::123456789012:role/apigAwsProxyRole\",\n      \"httpMethod\": \"POST\",\n      \"passthroughBehavior\": \"WHEN_NO_MATCH\",\n      \"requestParameters\": {\n        \"integration.request.header.Content-Type\": \"'application/x-amz-json-1.1'\"\n      },\n      \"requestTemplates\": {\n        \"application/json\": \"{\\n}\"\n      },\n      \"type\": \"AWS\",\n      \"uri\": \"arn:aws:apigateway:us-east-1:kinesis:action/ListStreams\",\n      \"_embedded\": {\n        \"integration:responses\": {\n          \"_links\": {\n            \"self\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\",\n              \"name\": \"200\",\n              \"title\": \"200\"\n            },\n            \"integrationresponse:delete\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n            },\n            \"integrationresponse:update\": {\n              \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200\"\n            }\n          },\n          \"responseParameters\": {\n            \"method.response.header.Content-Type\": \"'application/xml'\"\n          },\n          \"responseTemplates\": {\n            \"application/json\": \"$util.urlDecode(\\\"%3CkinesisStreams%3E#foreach($stream in $input.path('$.StreamNames'))%3Cstream%3E%3Cname%3E$stream%3C/name%3E%3C/stream%3E#end%3C/kinesisStreams%3E\\\")\\n\"\n          },\n          \"statusCode\": \"200\"\n        }\n      }\n    },\n    \"method:responses\": {\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\",\n          \"name\": \"200\",\n          \"title\": \"200\"\n        },\n        \"methodresponse:delete\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n        },\n        \"methodresponse:update\": {\n          \"href\": \"/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200\"\n        }\n      },\n      \"responseModels\": {\n        \"application/json\": \"Empty\"\n      },\n      \"responseParameters\": {\n        \"method.response.header.Content-Type\": false\n      },\n      \"statusCode\": \"200\"\n    }\n  }\n}</code></pre>\n        <p>If the <code>OPTIONS</code> is enabled on the resource, you can follow the example here to get that method. Just replace the <code>GET</code> of the last path segment in the request URL with <code>OPTIONS</code>.</p>\n      </div>\n      <div class=\"seeAlso\">\n      </div>"
          }
        },
        "parentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The parent resource's identifier.</p>"
          }
        },
        "path": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The full path for this resource.</p>"
          }
        },
        "pathPart": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The last path segment for this resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an API resource.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Create an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#Resources": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfResource",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of <a>Resource</a> resources.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Create an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#RestApi": {
      "type": "structure",
      "members": {
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The API's description.</p>"
          }
        },
        "policy": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "A stringified JSON policy document that applies to this RestApi regardless of the caller and <a>Method</a> configuration."
          }
        },
        "endpointConfiguration": {
          "target": "com.amazonaws.apigateway#EndpointConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint configuration of this <a>RestApi</a> showing the endpoint types of the API. </p>"
          }
        },
        "apiKeySource": {
          "target": "com.amazonaws.apigateway#ApiKeySourceType",
          "traits": {
            "smithy.api#documentation": "<p>The source of the API key for metering requests according to a usage plan. Valid values are: <ul><li><code>HEADER</code> to read the API key from the <code>X-API-Key</code> header of a request. </li><li><code>AUTHORIZER</code> to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.</li></ul> </p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The API's name.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "warnings": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when <code>failonwarnings</code> is turned on during API import.</p>"
          }
        },
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The API's identifier. This identifier is unique across all of your APIs in API Gateway.</p>"
          }
        },
        "binaryMediaTypes": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>The list of binary media types supported by the <a>RestApi</a>. By default, the <a>RestApi</a> supports only UTF-8-encoded text payloads.</p>"
          }
        },
        "minimumCompressionSize": {
          "target": "com.amazonaws.apigateway#NullableInteger",
          "traits": {
            "smithy.api#documentation": "<p>A nullable integer that is used to enable compression (with non-negative between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with a null value) on an API. When compression is enabled, compression or decompression is not applied on the payload if the payload size is smaller than this value. Setting it to zero allows compression for any payload size.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a REST API.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Create an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#RestApis": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfRestApi",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains references to your APIs and links that guide you in how to interact with your collection. A collection offers a paginated view of your APIs.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html\">Create an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#SdkConfigurationProperty": {
      "type": "structure",
      "members": {
        "defaultValue": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The default value of an <a>SdkType</a> configuration property.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of an <a>SdkType</a> configuration property.</p>"
          }
        },
        "required": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>A boolean flag of an <a>SdkType</a> configuration property to indicate if the associated SDK configuration property is required (<code>true</code>) or not (<code>false</code>).</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of a an <a>SdkType</a> configuration property.</p>"
          }
        },
        "friendlyName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The user-friendly name of an <a>SdkType</a> configuration property.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration property of an SDK type.</p>"
      }
    },
    "com.amazonaws.apigateway#SdkResponse": {
      "type": "structure",
      "members": {
        "contentDisposition": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-disposition header value in the HTTP response.</p>",
            "smithy.api#httpHeader": "Content-Disposition"
          }
        },
        "contentType": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The content-type header value in the HTTP response.</p>",
            "smithy.api#httpHeader": "Content-Type"
          }
        },
        "body": {
          "target": "com.amazonaws.apigateway#Blob",
          "traits": {
            "smithy.api#documentation": "<p>The binary blob response to <a>GetSdk</a>, which contains the generated SDK.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The binary blob response to <a>GetSdk</a>, which contains the generated SDK.</p>"
      }
    },
    "com.amazonaws.apigateway#SdkType": {
      "type": "structure",
      "members": {
        "friendlyName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The user-friendly name of an <a>SdkType</a> instance.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of an <a>SdkType</a>.</p>"
          }
        },
        "configurationProperties": {
          "target": "com.amazonaws.apigateway#ListOfSdkConfigurationProperty",
          "traits": {
            "smithy.api#documentation": "<p>A list of configuration properties of an <a>SdkType</a>.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of an <a>SdkType</a> instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A type of SDK that API Gateway can generate.</p>"
      }
    },
    "com.amazonaws.apigateway#SdkTypes": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfSdkType",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of <a>SdkType</a> instances.</p>"
      }
    },
    "com.amazonaws.apigateway#SecurityPolicy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TLS_1_0"
          },
          {
            "value": "TLS_1_2"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#ServiceUnavailableException": {
      "type": "structure",
      "members": {
        "retryAfterSeconds": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#httpHeader": "Retry-After"
          }
        },
        "message": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested service is not available. For details see the accompanying error message. Retry after the specified time period.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 503
      }
    },
    "com.amazonaws.apigateway#Stage": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the <a>Deployment</a> that the stage points to.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The stage's description.</p>"
          }
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "cacheClusterStatus": {
          "target": "com.amazonaws.apigateway#CacheClusterStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the cache cluster for the stage, if enabled.</p>"
          }
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for an API stage.</p>"
          }
        },
        "cacheClusterEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a cache cluster is enabled for the stage.</p>"
          }
        },
        "canarySettings": {
          "target": "com.amazonaws.apigateway#CanarySettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for the canary deployment in this stage.</p>"
          }
        },
        "variables": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a <a>Stage</a> resource. Variable names can\n          have alphanumeric and underscore characters, and the values must match <code>[A-Za-z0-9-._~:/?#&=,]+</code>.</p>"
          }
        },
        "cacheClusterSize": {
          "target": "com.amazonaws.apigateway#CacheClusterSize",
          "traits": {
            "smithy.api#documentation": "<p>The size of the cache cluster for the stage, if enabled.</p>"
          }
        },
        "accessLogSettings": {
          "target": "com.amazonaws.apigateway#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>"
          }
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The version of the associated API documentation.</p>"
          }
        },
        "lastUpdatedDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage last updated.</p>"
          }
        },
        "createdDate": {
          "target": "com.amazonaws.apigateway#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was created.</p>"
          }
        },
        "tracingEnabled": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether active tracing with X-ray is enabled for the <a>Stage</a>.</p>"
          }
        },
        "webAclArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the WebAcl associated with the <a>Stage</a>.</p>"
          }
        },
        "methodSettings": {
          "target": "com.amazonaws.apigateway#MapOfMethodSettings",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the method settings for a <a>Stage</a> resource. Keys (designated as <code>/{method_setting_key</code> below) are method paths defined as <code>{resource_path}/{http_method}</code> for an individual method override, or <code>/\\*/\\*</code> for overriding all methods in the stage.  <!-- Any forward slash (\"/\") characters in the <code>resource_path</code> part must be encoded as \"~1\" as in, for example, <code>~1resource~1sub-resource/GET</code>.--></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a unique identifier for a version of a deployed <a>RestApi</a> that is callable by users.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html\">Deploy an API</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#StageKey": {
      "type": "structure",
      "members": {
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The stage name associated with the stage key.</p>"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The string identifier of the associated <a>RestApi</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A reference to a unique stage identified in the format <code>{restApiId}/{stage}</code>.</p>"
      }
    },
    "com.amazonaws.apigateway#Stages": {
      "type": "structure",
      "members": {
        "item": {
          "target": "com.amazonaws.apigateway#ListOfStage",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html\">Deploying API in Stages</a></div>"
      }
    },
    "com.amazonaws.apigateway#StatusCode": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The status code.</p>",
        "smithy.api#pattern": "[1-5]\\d\\d"
      }
    },
    "com.amazonaws.apigateway#String": {
      "type": "string"
    },
    "com.amazonaws.apigateway#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#TagResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds or updates a tag on a given resource.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/tags/{resourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#TagResourceRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "resourceArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The ARN of a resource that can be tagged.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The key-value map of strings. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Adds or updates a tag on a given resource.</p>"
      }
    },
    "com.amazonaws.apigateway#Tags": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
      }
    },
    "com.amazonaws.apigateway#Template": {
      "type": "structure",
      "members": {
        "value": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The Apache <a target=\"_blank\" href=\"https://velocity.apache.org/engine/devel/vtl-reference.html\">Velocity Template Language (VTL)</a> template content used for the template resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a mapping template used to transform a payload.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings\">Mapping Templates</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#TestInvokeAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#TestInvokeAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#TestInvokeAuthorizerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Simulate the execution of an <a>Authorizer</a> in your <a>RestApi</a> with headers, parameters, and an incoming request body.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html\">Use Lambda Function as Authorizer</a>\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html\">Use Cognito User Pool as Authorizer</a>\n      </div>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/authorizers/{authorizerId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#TestInvokeAuthorizerRequest": {
      "type": "structure",
      "members": {
        "additionalContext": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>[Optional] A key-value map of additional context variables.</p>"
          }
        },
        "pathWithQueryString": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Optional] The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>"
          }
        },
        "headers": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>[Required] A key-value map of headers to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, should be specified.</p>"
          }
        },
        "body": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Optional] The simulated request body of an incoming invocation request.</p>"
          }
        },
        "stageVariables": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.</p>"
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a test invoke authorizer request's <a>Authorizer</a> ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "multiValueHeaders": {
          "target": "com.amazonaws.apigateway#MapOfStringToList",
          "traits": {
            "smithy.api#documentation": "<p>[Optional] The headers as a map from string to list of values to simulate an incoming invocation request. This is where the incoming authorization token, or identity source, may be specified.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Make a request to simulate the execution of an <a>Authorizer</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#TestInvokeAuthorizerResponse": {
      "type": "structure",
      "members": {
        "log": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The API Gateway execution log for the test authorizer request.</p>"
          }
        },
        "authorization": {
          "target": "com.amazonaws.apigateway#MapOfStringToList"
        },
        "principalId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal identity returned by the <a>Authorizer</a></p>"
          }
        },
        "policy": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The JSON policy document returned by the <a>Authorizer</a></p>"
          }
        },
        "clientStatus": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The HTTP status code that the client would have received. Value is 0 if the authorizer succeeded.</p>"
          }
        },
        "claims": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims\">open identity claims</a>, with any supported custom attributes, returned from the Cognito Your User Pool configured for the API.</p>"
          }
        },
        "latency": {
          "target": "com.amazonaws.apigateway#Long",
          "traits": {
            "smithy.api#documentation": "<p>The execution latency of the test authorizer request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the response of the test invoke request for a custom <a>Authorizer</a></p>"
      }
    },
    "com.amazonaws.apigateway#TestInvokeMethod": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#TestInvokeMethodRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#TestInvokeMethodResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Simulate the execution of a <a>Method</a> in your <a>RestApi</a> with headers, parameters, and an incoming request body.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#TestInvokeMethodRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a test invoke method request's resource ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "multiValueHeaders": {
          "target": "com.amazonaws.apigateway#MapOfStringToList",
          "traits": {
            "smithy.api#documentation": "<p>The headers as a map from string to list of values to simulate an incoming invocation request.</p>"
          }
        },
        "stageVariables": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map of stage variables to simulate an invocation on a deployed <a>Stage</a>.</p>"
          }
        },
        "body": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The simulated request body of an incoming invocation request.</p>"
          }
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A <a>ClientCertificate</a> identifier to use in the test invocation. API Gateway will use the certificate when making the HTTPS request to the defined back-end endpoint.</p>"
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies a test invoke method request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "pathWithQueryString": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The URI path, including query string, of the simulated invocation request. Use this to specify path parameters and query string parameters.</p>"
          }
        },
        "headers": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map of headers to simulate an incoming invocation request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Make a request to simulate the execution of a <a>Method</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#TestInvokeMethodResponse": {
      "type": "structure",
      "members": {
        "headers": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The headers of the HTTP response.</p>"
          }
        },
        "log": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The API Gateway execution log for the test invoke request.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The HTTP status code.</p>"
          }
        },
        "body": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The body of the HTTP response.</p>"
          }
        },
        "multiValueHeaders": {
          "target": "com.amazonaws.apigateway#MapOfStringToList",
          "traits": {
            "smithy.api#documentation": "<p>The headers of the HTTP response as a map from string to list of values.</p>"
          }
        },
        "latency": {
          "target": "com.amazonaws.apigateway#Long",
          "traits": {
            "smithy.api#documentation": "<p>The execution latency of the test invoke request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the response of the test invoke request in the HTTP method.</p>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-test-method.html#how-to-test-method-console\">Test API using the API Gateway console</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#ThrottleSettings": {
      "type": "structure",
      "members": {
        "burstLimit": {
          "target": "com.amazonaws.apigateway#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.</p>"
          }
        },
        "rateLimit": {
          "target": "com.amazonaws.apigateway#Double",
          "traits": {
            "smithy.api#documentation": "<p>The API request steady-state rate limit.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The API request rate limits.</p>"
      }
    },
    "com.amazonaws.apigateway#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.apigateway#TlsConfig": {
      "type": "structure",
      "members": {
        "insecureSkipVerification": {
          "target": "com.amazonaws.apigateway#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether or not API Gateway skips verification that the certificate for an integration endpoint is\n            issued by a <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-supported-certificate-authorities-for-http-endpoints.html\">supported certificate authority</a>. This isn’t recommended, but it enables you to\n            use certificates that are signed by private certificate authorities, or certificates\n            that are self-signed. If enabled, API Gateway still performs basic certificate\n            validation, which includes checking the certificate's expiration date, hostname, and\n            presence of a root certificate authority. Supported only for <code>HTTP</code> and\n            <code>HTTP_PROXY</code> integrations.</p>"
          }
        }
      }
    },
    "com.amazonaws.apigateway#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        },
        "retryAfterSeconds": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#httpHeader": "Retry-After"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request has reached its throttling limit. Retry after the specified time period.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.apigateway#UnauthorizedCacheControlHeaderStrategy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "FAIL_WITH_403",
            "name": "FAIL_WITH_403"
          },
          {
            "value": "SUCCEED_WITH_RESPONSE_HEADER",
            "name": "SUCCEED_WITH_RESPONSE_HEADER"
          },
          {
            "value": "SUCCEED_WITHOUT_RESPONSE_HEADER",
            "name": "SUCCEED_WITHOUT_RESPONSE_HEADER"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#UnauthorizedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.apigateway#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request is denied because the caller has insufficient permissions.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 401
      }
    },
    "com.amazonaws.apigateway#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UntagResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes a tag from a given resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigateway#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "tagKeys": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Tag keys to delete.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "resourceArn": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The ARN of a resource that can be tagged.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Removes a tag from a given resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateAccount": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateAccountRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Account"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about the current <a>Account</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/account",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateAccountRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to change information about the current <a>Account</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateApiKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateApiKeyRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ApiKey"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about an <a>ApiKey</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/apikeys/{apiKey}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateApiKeyRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "apiKey": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ApiKey</a> resource to be updated.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to change information about an <a>ApiKey</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Authorizer"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing <a>Authorizer</a> resource.</p>\n        <div class=\"seeAlso\"><a href=\"https://docs.aws.amazon.com/cli/latest/reference/apigateway/update-authorizer.html\">AWS CLI</a></div>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/authorizers/{authorizerId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateAuthorizerRequest": {
      "type": "structure",
      "members": {
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "authorizerId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Authorizer</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to update an existing <a>Authorizer</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateBasePathMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateBasePathMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#BasePathMapping"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about the <a>BasePathMapping</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/domainnames/{domainName}/basepathmappings/{basePath}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateBasePathMappingRequest": {
      "type": "structure",
      "members": {
        "basePath": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The base path of the <a>BasePathMapping</a> resource to change.</p>\n        <p>To specify an empty base path, set this parameter to <code>'(none)'</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The domain name of the <a>BasePathMapping</a> resource to change.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to change information about the <a>BasePathMapping</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateClientCertificate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateClientCertificateRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#ClientCertificate"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about an <a>ClientCertificate</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/clientcertificates/{clientCertificateId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateClientCertificateRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "clientCertificateId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>ClientCertificate</a> resource to be updated.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to change information about an <a>ClientCertificate</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Deployment"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about a <a>Deployment</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/deployments/{deploymentId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateDeploymentRequest": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The replacement identifier for the <a>Deployment</a> resource to change information about.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to change information about a <a>Deployment</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateDocumentationPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateDocumentationPartRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationPart"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/documentation/parts/{documentationPartId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateDocumentationPartRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "documentationPartId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the to-be-updated documentation part.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing documentation part of a given API.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateDocumentationVersion": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateDocumentationVersionRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DocumentationVersion"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/documentation/versions/{documentationVersion}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateDocumentationVersionRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "documentationVersion": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The version identifier of the to-be-updated documentation version.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>..</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing documentation version of an API.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#DomainName"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about the <a>DomainName</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/domainnames/{domainName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateDomainNameRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "domainName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>DomainName</a> resource to be changed.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to change information about the <a>DomainName</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateGatewayResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateGatewayResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#GatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/gatewayresponses/{responseType}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateGatewayResponseRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "responseType": {
          "target": "com.amazonaws.apigateway#GatewayResponseType",
          "traits": {
            "smithy.api#documentation": "<p>[Required] <p>The response type of the associated <a>GatewayResponse</a>. Valid values are <ul><li>ACCESS_DENIED</li><li>API_CONFIGURATION_ERROR</li><li>AUTHORIZER_FAILURE</li><li> AUTHORIZER_CONFIGURATION_ERROR</li><li>BAD_REQUEST_PARAMETERS</li><li>BAD_REQUEST_BODY</li><li>DEFAULT_4XX</li><li>DEFAULT_5XX</li><li>EXPIRED_TOKEN</li><li>INVALID_SIGNATURE</li><li>INTEGRATION_FAILURE</li><li>INTEGRATION_TIMEOUT</li><li>INVALID_API_KEY</li><li>MISSING_AUTHENTICATION_TOKEN</li><li> QUOTA_EXCEEDED</li><li>REQUEST_TOO_LARGE</li><li>RESOURCE_NOT_FOUND</li><li>THROTTLED</li><li>UNAUTHORIZED</li><li>UNSUPPORTED_MEDIA_TYPE</li></ul> </p></p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a <a>GatewayResponse</a> of a specified response type on the given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Integration"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents an update integration.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateIntegrationRequest": {
      "type": "structure",
      "members": {
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Represents an update integration request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Represents an update integration request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an update integration request.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#IntegrationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Represents an update integration response.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/integration/responses/{statusCode}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies an update integration response request's status code.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies an update integration response request's HTTP method.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] Specifies an update integration response request's resource identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an update integration response request.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateMethod": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateMethodRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Method"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing <a>Method</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateMethodRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to update an existing <a>Method</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateMethodResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateMethodResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#MethodResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#LimitExceededException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing <a>MethodResponse</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/resources/{resourceId}/methods/{httpMethod}/responses/{statusCode}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigateway#UpdateMethodResponseRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The <a>Resource</a> identifier for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "httpMethod": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The HTTP verb of the <a>Method</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "statusCode": {
          "target": "com.amazonaws.apigateway#StatusCode",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The status code for the <a>MethodResponse</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A request to update an existing <a>MethodResponse</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Model"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about a model.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/models/{modelName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateModelRequest": {
      "type": "structure",
      "members": {
        "modelName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the model to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to update an existing model in an existing <a>RestApi</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateRequestValidator": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateRequestValidatorRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RequestValidator"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/requestvalidators/{requestValidatorId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateRequestValidatorRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "requestValidatorId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of <a>RequestValidator</a> to be updated.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Resource"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about a <a>Resource</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/resources/{resourceId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateResourceRequest": {
      "type": "structure",
      "members": {
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "resourceId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the <a>Resource</a> resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to change information about a <a>Resource</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateRestApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateRestApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#RestApi"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about the specified API.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateRestApiRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Request to update an existing <a>RestApi</a> resource in your collection.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Stage"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about a <a>Stage</a> resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/restapis/{restApiId}/stages/{stageName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateStageRequest": {
      "type": "structure",
      "members": {
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "stageName": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The name of the <a>Stage</a> resource to change information about.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "restApiId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The string identifier of the associated <a>RestApi</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Requests API Gateway to change information about a <a>Stage</a> resource.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateUsage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateUsageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#Usage"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Grants a temporary extension to the remaining quota of a usage plan associated with a specified API key.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/usageplans/{usagePlanId}/keys/{keyId}/usage",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateUsagePlan": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateUsagePlanRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#UsagePlan"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a usage plan of a given plan Id.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/usageplans/{usagePlanId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateUsagePlanRequest": {
      "type": "structure",
      "members": {
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the to-be-updated usage plan.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The PATCH request to update a usage plan of a given plan Id.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateUsageRequest": {
      "type": "structure",
      "members": {
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The Id of the usage plan associated with the usage data.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "keyId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the API key associated with the usage plan in which a temporary extension is granted to the remaining quota.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The PATCH request to grant a temporary extension to the remaining quota of a usage plan associated with a specified API key.</p>"
      }
    },
    "com.amazonaws.apigateway#UpdateVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigateway#UpdateVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigateway#VpcLink"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigateway#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigateway#ConflictException"
        },
        {
          "target": "com.amazonaws.apigateway#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigateway#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.apigateway#UnauthorizedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing <a>VpcLink</a> of a specified identifier.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/vpclinks/{vpcLinkId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigateway#UpdateVpcLinkRequest": {
      "type": "structure",
      "members": {
        "template": {
          "target": "com.amazonaws.apigateway#Boolean"
        },
        "vpcLinkId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>[Required] The identifier of the  <a>VpcLink</a>. It is used in an <a>Integration</a> to reference this <a>VpcLink</a>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "title": {
          "target": "com.amazonaws.apigateway#String"
        },
        "name": {
          "target": "com.amazonaws.apigateway#String"
        },
        "templateSkipList": {
          "target": "com.amazonaws.apigateway#ListOfString"
        },
        "patchOperations": {
          "target": "com.amazonaws.apigateway#ListOfPatchOperation",
          "traits": {
            "smithy.api#documentation": "<p>A list of update operations to be applied to the specified resource and in the order specified in this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing <a>VpcLink</a> of a specified identifier.</p>"
      }
    },
    "com.amazonaws.apigateway#Usage": {
      "type": "structure",
      "members": {
        "endDate": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The ending date of the usage data.</p>"
          }
        },
        "usagePlanId": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The plan Id associated with this usage data.</p>"
          }
        },
        "startDate": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The starting date of the usage data.</p>"
          }
        },
        "items": {
          "target": "com.amazonaws.apigateway#MapOfKeyUsages",
          "traits": {
            "smithy.api#documentation": "<p>The usage data, as daily logs of used and remaining quotas, over the specified time interval indexed over the API keys in a usage plan. For example, <code>{..., \"values\" : { \"{api_key}\" : [ [0, 100], [10, 90], [100, 10]]}</code>, where <code>{api_key}</code> stands for an API key value and the daily log entry is of the format <code>[used quota, remaining quota]</code>.</p>",
            "smithy.api#jsonName": "values"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the usage data of a usage plan.</p>\n    <div class=\"remarks\"></div>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html\">Create and Use Usage Plans</a>,\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-usage-plans-with-console.html#api-gateway-usage-plan-manage-usage\">Manage Usage in a Usage Plan</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#UsagePlan": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a <a>UsagePlan</a> resource.</p>"
          }
        },
        "throttle": {
          "target": "com.amazonaws.apigateway#ThrottleSettings",
          "traits": {
            "smithy.api#documentation": "<p>The request throttle limits of a usage plan.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of a usage plan.</p>"
          }
        },
        "apiStages": {
          "target": "com.amazonaws.apigateway#ListOfApiStage",
          "traits": {
            "smithy.api#documentation": "<p>The associated API stages of a usage plan.</p>"
          }
        },
        "productCode": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.</p>"
          }
        },
        "quota": {
          "target": "com.amazonaws.apigateway#QuotaSettings",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of permitted requests per a given unit time interval.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of a usage plan.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a usage plan than can specify who can assess associated API stages with specified request limits and quotas.</p>\n      <div class=\"remarks\">\n        <p>In a usage plan, you associate an API by specifying the API's Id and a stage name of the specified API. You add plan customers by adding API keys to the plan. </p>\n      </div>\n      <div class=\"seeAlso\">\n        <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html\">Create and Use Usage Plans</a>\n      </div>"
      }
    },
    "com.amazonaws.apigateway#UsagePlanKey": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of a usage plan key.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The value of a usage plan key.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The Id of a usage plan key.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The type of a usage plan key. Currently, the valid key type is <code>API_KEY</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a usage plan key to identify a plan customer.</p>\n    <div class=\"remarks\">\n      <p>To associate an API stage with a selected API key in a usage plan, you must create a UsagePlanKey resource to represent the selected <a>ApiKey</a>.</p>\n    </div>\"\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html\">Create and Use Usage Plans</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#UsagePlanKeys": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfUsagePlanKey",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the collection of usage plan keys added to usage plans for the associated API keys and, possibly, other types of keys.</p>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html\">Create and Use Usage Plans</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#UsagePlans": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfUsagePlan",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of usage plans for an AWS account.</p>\n    <div class=\"seeAlso\">\n      <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html\">Create and Use Usage Plans</a>\n    </div>"
      }
    },
    "com.amazonaws.apigateway#VpcLink": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the  <a>VpcLink</a>. It is used in an <a>Integration</a> to reference this <a>VpcLink</a>.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The name used to label and identify the VPC link.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the VPC link.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>A description about the VPC link status.</p>"
          }
        },
        "targetArns": {
          "target": "com.amazonaws.apigateway#ListOfString",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the same AWS account of the API owner.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.apigateway#VpcLinkStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the VPC link. The valid values are <code>AVAILABLE</code>, <code>PENDING</code>, <code>DELETING</code>, or <code>FAILED</code>. Deploying an API will wait if the status is <code>PENDING</code> and will fail if the status is <code>DELETING</code>.  </p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.apigateway#MapOfStringToString",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An API Gateway VPC link for a <a>RestApi</a> to access resources in an Amazon Virtual Private Cloud (VPC).</p>\n        <div class=\"remarks\">\n          <p><p>To enable access to a resource in an Amazon Virtual Private Cloud through Amazon API Gateway, you, as an API developer, create a <a>VpcLink</a> resource targeted for one or more network load balancers of the VPC and then integrate an API method with a private integration that uses the <a>VpcLink</a>. The private integration has an integration type of <code>HTTP</code> or <code>HTTP_PROXY</code> and has a connection type of <code>VPC_LINK</code>. The integration uses the <code>connectionId</code> property to identify the <a>VpcLink</a> used.</p>\n\n</p>\n        </div>"
      }
    },
    "com.amazonaws.apigateway#VpcLinkStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "DELETING",
            "name": "DELETING"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.apigateway#VpcLinks": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.apigateway#ListOfVpcLink",
          "traits": {
            "smithy.api#documentation": "<p>The current page of elements from this collection.</p>",
            "smithy.api#jsonName": "item"
          }
        },
        "position": {
          "target": "com.amazonaws.apigateway#String",
          "traits": {
            "smithy.api#documentation": "<p>The current pagination position in the paged result set.</p>",
            "smithy.api#httpQuery": "position"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The collection of VPC links under the caller's account in a region.</p>\n        <div class=\"seeAlso\">\n            \n<a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-with-private-integration.html\">Getting Started with Private Integrations</a>, \n<a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-private-integration.html\">Set up Private Integrations</a> \n\n        </div>"
      }
    }
  }
}
