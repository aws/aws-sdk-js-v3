{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.s3control#AWSS3ControlServiceV20180820": {
      "type": "service",
      "version": "2018-08-20",
      "operations": [
        {
          "target": "com.amazonaws.s3control#AssociateAccessGrantsIdentityCenter"
        },
        {
          "target": "com.amazonaws.s3control#CreateAccessGrant"
        },
        {
          "target": "com.amazonaws.s3control#CreateAccessGrantsInstance"
        },
        {
          "target": "com.amazonaws.s3control#CreateAccessGrantsLocation"
        },
        {
          "target": "com.amazonaws.s3control#CreateAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#CreateAccessPointForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#CreateBucket"
        },
        {
          "target": "com.amazonaws.s3control#CreateJob"
        },
        {
          "target": "com.amazonaws.s3control#CreateMultiRegionAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#CreateStorageLensGroup"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessGrant"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessGrantsInstance"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessGrantsInstanceResourcePolicy"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessGrantsLocation"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessPointForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessPointPolicy"
        },
        {
          "target": "com.amazonaws.s3control#DeleteAccessPointPolicyForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#DeleteBucket"
        },
        {
          "target": "com.amazonaws.s3control#DeleteBucketLifecycleConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#DeleteBucketPolicy"
        },
        {
          "target": "com.amazonaws.s3control#DeleteBucketReplication"
        },
        {
          "target": "com.amazonaws.s3control#DeleteBucketTagging"
        },
        {
          "target": "com.amazonaws.s3control#DeleteJobTagging"
        },
        {
          "target": "com.amazonaws.s3control#DeleteMultiRegionAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#DeletePublicAccessBlock"
        },
        {
          "target": "com.amazonaws.s3control#DeleteStorageLensConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#DeleteStorageLensConfigurationTagging"
        },
        {
          "target": "com.amazonaws.s3control#DeleteStorageLensGroup"
        },
        {
          "target": "com.amazonaws.s3control#DescribeJob"
        },
        {
          "target": "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperation"
        },
        {
          "target": "com.amazonaws.s3control#DissociateAccessGrantsIdentityCenter"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessGrant"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessGrantsInstance"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefix"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicy"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessGrantsLocation"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointPolicy"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointPolicyStatus"
        },
        {
          "target": "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#GetBucket"
        },
        {
          "target": "com.amazonaws.s3control#GetBucketLifecycleConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#GetBucketPolicy"
        },
        {
          "target": "com.amazonaws.s3control#GetBucketReplication"
        },
        {
          "target": "com.amazonaws.s3control#GetBucketTagging"
        },
        {
          "target": "com.amazonaws.s3control#GetBucketVersioning"
        },
        {
          "target": "com.amazonaws.s3control#GetDataAccess"
        },
        {
          "target": "com.amazonaws.s3control#GetJobTagging"
        },
        {
          "target": "com.amazonaws.s3control#GetMultiRegionAccessPoint"
        },
        {
          "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicy"
        },
        {
          "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatus"
        },
        {
          "target": "com.amazonaws.s3control#GetMultiRegionAccessPointRoutes"
        },
        {
          "target": "com.amazonaws.s3control#GetPublicAccessBlock"
        },
        {
          "target": "com.amazonaws.s3control#GetStorageLensConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#GetStorageLensConfigurationTagging"
        },
        {
          "target": "com.amazonaws.s3control#GetStorageLensGroup"
        },
        {
          "target": "com.amazonaws.s3control#ListAccessGrants"
        },
        {
          "target": "com.amazonaws.s3control#ListAccessGrantsInstances"
        },
        {
          "target": "com.amazonaws.s3control#ListAccessGrantsLocations"
        },
        {
          "target": "com.amazonaws.s3control#ListAccessPoints"
        },
        {
          "target": "com.amazonaws.s3control#ListAccessPointsForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#ListJobs"
        },
        {
          "target": "com.amazonaws.s3control#ListMultiRegionAccessPoints"
        },
        {
          "target": "com.amazonaws.s3control#ListRegionalBuckets"
        },
        {
          "target": "com.amazonaws.s3control#ListStorageLensConfigurations"
        },
        {
          "target": "com.amazonaws.s3control#ListStorageLensGroups"
        },
        {
          "target": "com.amazonaws.s3control#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicy"
        },
        {
          "target": "com.amazonaws.s3control#PutAccessPointConfigurationForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#PutAccessPointPolicy"
        },
        {
          "target": "com.amazonaws.s3control#PutAccessPointPolicyForObjectLambda"
        },
        {
          "target": "com.amazonaws.s3control#PutBucketLifecycleConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#PutBucketPolicy"
        },
        {
          "target": "com.amazonaws.s3control#PutBucketReplication"
        },
        {
          "target": "com.amazonaws.s3control#PutBucketTagging"
        },
        {
          "target": "com.amazonaws.s3control#PutBucketVersioning"
        },
        {
          "target": "com.amazonaws.s3control#PutJobTagging"
        },
        {
          "target": "com.amazonaws.s3control#PutMultiRegionAccessPointPolicy"
        },
        {
          "target": "com.amazonaws.s3control#PutPublicAccessBlock"
        },
        {
          "target": "com.amazonaws.s3control#PutStorageLensConfiguration"
        },
        {
          "target": "com.amazonaws.s3control#PutStorageLensConfigurationTagging"
        },
        {
          "target": "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutes"
        },
        {
          "target": "com.amazonaws.s3control#TagResource"
        },
        {
          "target": "com.amazonaws.s3control#UntagResource"
        },
        {
          "target": "com.amazonaws.s3control#UpdateAccessGrantsLocation"
        },
        {
          "target": "com.amazonaws.s3control#UpdateJobPriority"
        },
        {
          "target": "com.amazonaws.s3control#UpdateJobStatus"
        },
        {
          "target": "com.amazonaws.s3control#UpdateStorageLensGroup"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "S3 Control",
          "arnNamespace": "s3",
          "cloudFormationName": "S3Control",
          "cloudTrailEventSource": "s3control.amazonaws.com",
          "docId": "s3control-2018-08-20",
          "endpointPrefix": "s3-control"
        },
        "aws.auth#sigv4": {
          "name": "s3"
        },
        "aws.protocols#restXml": {},
        "smithy.api#documentation": "<p> Amazon Web Services S3 Control provides access to Amazon S3 control plane actions. </p>",
        "smithy.api#title": "AWS S3 Control",
        "smithy.api#xmlNamespace": {
          "uri": "http://awss3control.amazonaws.com/doc/2018-08-20/"
        },
        "smithy.rules#clientContextParams": {
          "UseArnRegion": {
            "documentation": "Enables this client to use an ARN's region when constructing an endpoint instead of the client's configured region.",
            "type": "boolean"
          }
        },
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            },
            "AccountId": {
              "required": false,
              "documentation": "The Account ID used to send the request. This is an optional parameter that will be set automatically for operations that require it.",
              "type": "String"
            },
            "RequiresAccountId": {
              "required": false,
              "documentation": "Internal parameter for operations that require account id host prefix.",
              "type": "Boolean"
            },
            "OutpostId": {
              "required": false,
              "documentation": "The Outpost ID.  Some operations have an optional OutpostId which should be used in endpoint construction.",
              "type": "String"
            },
            "Bucket": {
              "required": false,
              "documentation": "The S3 bucket used to send the request. This is an optional parameter that will be set automatically for operations that are scoped to an S3 bucket.",
              "type": "String"
            },
            "AccessPointName": {
              "required": false,
              "documentation": "The S3 AccessPointName used to send the request. This is an optional parameter that will be set automatically for operations that are scoped to an S3 AccessPoint.",
              "type": "String"
            },
            "UseArnRegion": {
              "builtIn": "AWS::S3Control::UseArnRegion",
              "required": false,
              "documentation": "When an Access Point ARN is provided and this flag is enabled, the SDK MUST use the ARN's region when constructing the endpoint instead of the client's configured region.",
              "type": "Boolean"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "stringEquals",
                      "argv": [
                        {
                          "ref": "Region"
                        },
                        "snow"
                      ]
                    },
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "partitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "S3 Snow does not support DualStack",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "S3 Snow does not support FIPS",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "{url#scheme}://{url#authority}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "OutpostId"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "partitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "partitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-cn"
                              ]
                            }
                          ],
                          "error": "Partition does not support FIPS",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "not",
                              "argv": [
                                {
                                  "fn": "isSet",
                                  "argv": [
                                    {
                                      "ref": "AccountId"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "error": "AccountId is required but not set",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            },
                            {
                              "fn": "not",
                              "argv": [
                                {
                                  "fn": "isValidHostLabel",
                                  "argv": [
                                    {
                                      "ref": "AccountId"
                                    },
                                    false
                                  ]
                                }
                              ]
                            }
                          ],
                          "error": "AccountId must only contain a-z, A-Z, 0-9 and `-`.",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "not",
                              "argv": [
                                {
                                  "fn": "isValidHostLabel",
                                  "argv": [
                                    {
                                      "ref": "OutpostId"
                                    },
                                    false
                                  ]
                                }
                              ]
                            }
                          ],
                          "error": "OutpostId must only contain a-z, A-Z, 0-9 and `-`.",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "Endpoint"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: DualStack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isValidHostLabel",
                              "argv": [
                                {
                                  "ref": "Region"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "isSet",
                                  "argv": [
                                    {
                                      "ref": "Endpoint"
                                    }
                                  ]
                                },
                                {
                                  "fn": "parseURL",
                                  "argv": [
                                    {
                                      "ref": "Endpoint"
                                    }
                                  ],
                                  "assign": "url"
                                }
                              ],
                              "endpoint": {
                                "url": "{url#scheme}://{url#authority}{url#path}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3-outposts",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "UseFIPS"
                                    },
                                    true
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "UseDualStack"
                                    },
                                    true
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://s3-outposts-fips.{Region}.{partitionResult#dualStackDnsSuffix}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3-outposts",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "UseFIPS"
                                    },
                                    true
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://s3-outposts-fips.{Region}.{partitionResult#dnsSuffix}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3-outposts",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "UseDualStack"
                                    },
                                    true
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://s3-outposts.{Region}.{partitionResult#dualStackDnsSuffix}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3-outposts",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://s3-outposts.{Region}.{partitionResult#dnsSuffix}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3-outposts",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "Invalid region: region was not a valid DNS name.",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "AccessPointName"
                        }
                      ]
                    },
                    {
                      "fn": "aws.parseArn",
                      "argv": [
                        {
                          "ref": "AccessPointName"
                        }
                      ],
                      "assign": "accessPointArn"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "getAttr",
                          "argv": [
                            {
                              "ref": "accessPointArn"
                            },
                            "resourceId[0]"
                          ],
                          "assign": "arnType"
                        },
                        {
                          "fn": "not",
                          "argv": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "ref": "arnType"
                                },
                                ""
                              ]
                            }
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "accessPointArn"
                                    },
                                    "service"
                                  ]
                                },
                                "s3-outposts"
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "accessPointArn"
                                    },
                                    "resourceId[1]"
                                  ],
                                  "assign": "outpostId"
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [
                                    {
                                      "fn": "isValidHostLabel",
                                      "argv": [
                                        {
                                          "ref": "outpostId"
                                        },
                                        false
                                      ]
                                    }
                                  ],
                                  "rules": [
                                    {
                                      "conditions": [
                                        {
                                          "fn": "isSet",
                                          "argv": [
                                            {
                                              "ref": "Endpoint"
                                            }
                                          ]
                                        },
                                        {
                                          "fn": "booleanEquals",
                                          "argv": [
                                            {
                                              "ref": "UseDualStack"
                                            },
                                            true
                                          ]
                                        }
                                      ],
                                      "error": "Invalid Configuration: DualStack and custom endpoint are not supported",
                                      "type": "error"
                                    },
                                    {
                                      "conditions": [
                                        {
                                          "fn": "isSet",
                                          "argv": [
                                            {
                                              "ref": "UseArnRegion"
                                            }
                                          ]
                                        },
                                        {
                                          "fn": "booleanEquals",
                                          "argv": [
                                            {
                                              "ref": "UseArnRegion"
                                            },
                                            false
                                          ]
                                        },
                                        {
                                          "fn": "not",
                                          "argv": [
                                            {
                                              "fn": "stringEquals",
                                              "argv": [
                                                {
                                                  "fn": "getAttr",
                                                  "argv": [
                                                    {
                                                      "ref": "accessPointArn"
                                                    },
                                                    "region"
                                                  ]
                                                },
                                                "{Region}"
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "error": "Invalid configuration: region from ARN `{accessPointArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",
                                      "type": "error"
                                    },
                                    {
                                      "conditions": [
                                        {
                                          "fn": "aws.partition",
                                          "argv": [
                                            {
                                              "ref": "Region"
                                            }
                                          ],
                                          "assign": "partitionResult"
                                        }
                                      ],
                                      "rules": [
                                        {
                                          "conditions": [
                                            {
                                              "fn": "aws.partition",
                                              "argv": [
                                                {
                                                  "fn": "getAttr",
                                                  "argv": [
                                                    {
                                                      "ref": "accessPointArn"
                                                    },
                                                    "region"
                                                  ]
                                                }
                                              ],
                                              "assign": "arnPartition"
                                            }
                                          ],
                                          "rules": [
                                            {
                                              "conditions": [
                                                {
                                                  "fn": "stringEquals",
                                                  "argv": [
                                                    {
                                                      "fn": "getAttr",
                                                      "argv": [
                                                        {
                                                          "ref": "arnPartition"
                                                        },
                                                        "name"
                                                      ]
                                                    },
                                                    {
                                                      "fn": "getAttr",
                                                      "argv": [
                                                        {
                                                          "ref": "partitionResult"
                                                        },
                                                        "name"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "rules": [
                                                {
                                                  "conditions": [
                                                    {
                                                      "fn": "isValidHostLabel",
                                                      "argv": [
                                                        {
                                                          "fn": "getAttr",
                                                          "argv": [
                                                            {
                                                              "ref": "accessPointArn"
                                                            },
                                                            "region"
                                                          ]
                                                        },
                                                        true
                                                      ]
                                                    }
                                                  ],
                                                  "rules": [
                                                    {
                                                      "conditions": [
                                                        {
                                                          "fn": "not",
                                                          "argv": [
                                                            {
                                                              "fn": "stringEquals",
                                                              "argv": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "accessPointArn"
                                                                    },
                                                                    "accountId"
                                                                  ]
                                                                },
                                                                ""
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "rules": [
                                                        {
                                                          "conditions": [
                                                            {
                                                              "fn": "isValidHostLabel",
                                                              "argv": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "accessPointArn"
                                                                    },
                                                                    "accountId"
                                                                  ]
                                                                },
                                                                false
                                                              ]
                                                            }
                                                          ],
                                                          "rules": [
                                                            {
                                                              "conditions": [
                                                                {
                                                                  "fn": "isSet",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "AccountId"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "fn": "not",
                                                                  "argv": [
                                                                    {
                                                                      "fn": "stringEquals",
                                                                      "argv": [
                                                                        {
                                                                          "ref": "AccountId"
                                                                        },
                                                                        "{accessPointArn#accountId}"
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ],
                                                              "error": "Invalid ARN: the accountId specified in the ARN (`{accessPointArn#accountId}`) does not match the parameter (`{AccountId}`)",
                                                              "type": "error"
                                                            },
                                                            {
                                                              "conditions": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "accessPointArn"
                                                                    },
                                                                    "resourceId[2]"
                                                                  ],
                                                                  "assign": "outpostType"
                                                                }
                                                              ],
                                                              "rules": [
                                                                {
                                                                  "conditions": [
                                                                    {
                                                                      "fn": "getAttr",
                                                                      "argv": [
                                                                        {
                                                                          "ref": "accessPointArn"
                                                                        },
                                                                        "resourceId[3]"
                                                                      ],
                                                                      "assign": "accessPointName"
                                                                    }
                                                                  ],
                                                                  "rules": [
                                                                    {
                                                                      "conditions": [
                                                                        {
                                                                          "fn": "stringEquals",
                                                                          "argv": [
                                                                            {
                                                                              "ref": "outpostType"
                                                                            },
                                                                            "accesspoint"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "rules": [
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseFIPS"
                                                                                },
                                                                                true
                                                                              ]
                                                                            },
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseDualStack"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts-fips.{accessPointArn#region}.{arnPartition#dualStackDnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{accessPointArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{accessPointArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseFIPS"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts-fips.{accessPointArn#region}.{arnPartition#dnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{accessPointArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{accessPointArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseDualStack"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts.{accessPointArn#region}.{arnPartition#dualStackDnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{accessPointArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{accessPointArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "isSet",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "Endpoint"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "fn": "parseURL",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "Endpoint"
                                                                                }
                                                                              ],
                                                                              "assign": "url"
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "{url#scheme}://{url#authority}{url#path}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{accessPointArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{accessPointArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts.{accessPointArn#region}.{arnPartition#dnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{accessPointArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{accessPointArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        }
                                                                      ],
                                                                      "type": "tree"
                                                                    },
                                                                    {
                                                                      "conditions": [],
                                                                      "error": "Expected an outpost type `accesspoint`, found `{outpostType}`",
                                                                      "type": "error"
                                                                    }
                                                                  ],
                                                                  "type": "tree"
                                                                },
                                                                {
                                                                  "conditions": [],
                                                                  "error": "Invalid ARN: expected an access point name",
                                                                  "type": "error"
                                                                }
                                                              ],
                                                              "type": "tree"
                                                            },
                                                            {
                                                              "conditions": [],
                                                              "error": "Invalid ARN: Expected a 4-component resource",
                                                              "type": "error"
                                                            }
                                                          ],
                                                          "type": "tree"
                                                        },
                                                        {
                                                          "conditions": [],
                                                          "error": "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointArn#accountId}`",
                                                          "type": "error"
                                                        }
                                                      ],
                                                      "type": "tree"
                                                    },
                                                    {
                                                      "conditions": [],
                                                      "error": "Invalid ARN: missing account ID",
                                                      "type": "error"
                                                    }
                                                  ],
                                                  "type": "tree"
                                                },
                                                {
                                                  "conditions": [],
                                                  "error": "Invalid region in ARN: `{accessPointArn#region}` (invalid DNS name)",
                                                  "type": "error"
                                                }
                                              ],
                                              "type": "tree"
                                            },
                                            {
                                              "conditions": [],
                                              "error": "Client was configured for partition `{partitionResult#name}` but ARN has `{arnPartition#name}`",
                                              "type": "error"
                                            }
                                          ],
                                          "type": "tree"
                                        }
                                      ],
                                      "type": "tree"
                                    }
                                  ],
                                  "type": "tree"
                                },
                                {
                                  "conditions": [],
                                  "error": "Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`., found: `{outpostId}`",
                                  "type": "error"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid ARN: The Outpost Id was not set",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "error": "Invalid ARN: No ARN type specified",
                      "type": "error"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Bucket"
                        }
                      ]
                    },
                    {
                      "fn": "aws.parseArn",
                      "argv": [
                        {
                          "ref": "Bucket"
                        }
                      ],
                      "assign": "bucketArn"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "getAttr",
                          "argv": [
                            {
                              "ref": "bucketArn"
                            },
                            "resourceId[0]"
                          ],
                          "assign": "arnType"
                        },
                        {
                          "fn": "not",
                          "argv": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "ref": "arnType"
                                },
                                ""
                              ]
                            }
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "bucketArn"
                                    },
                                    "service"
                                  ]
                                },
                                "s3-outposts"
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "bucketArn"
                                    },
                                    "resourceId[1]"
                                  ],
                                  "assign": "outpostId"
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [
                                    {
                                      "fn": "isValidHostLabel",
                                      "argv": [
                                        {
                                          "ref": "outpostId"
                                        },
                                        false
                                      ]
                                    }
                                  ],
                                  "rules": [
                                    {
                                      "conditions": [
                                        {
                                          "fn": "isSet",
                                          "argv": [
                                            {
                                              "ref": "Endpoint"
                                            }
                                          ]
                                        },
                                        {
                                          "fn": "booleanEquals",
                                          "argv": [
                                            {
                                              "ref": "UseDualStack"
                                            },
                                            true
                                          ]
                                        }
                                      ],
                                      "error": "Invalid Configuration: DualStack and custom endpoint are not supported",
                                      "type": "error"
                                    },
                                    {
                                      "conditions": [
                                        {
                                          "fn": "isSet",
                                          "argv": [
                                            {
                                              "ref": "UseArnRegion"
                                            }
                                          ]
                                        },
                                        {
                                          "fn": "booleanEquals",
                                          "argv": [
                                            {
                                              "ref": "UseArnRegion"
                                            },
                                            false
                                          ]
                                        },
                                        {
                                          "fn": "not",
                                          "argv": [
                                            {
                                              "fn": "stringEquals",
                                              "argv": [
                                                {
                                                  "fn": "getAttr",
                                                  "argv": [
                                                    {
                                                      "ref": "bucketArn"
                                                    },
                                                    "region"
                                                  ]
                                                },
                                                "{Region}"
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "error": "Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",
                                      "type": "error"
                                    },
                                    {
                                      "conditions": [
                                        {
                                          "fn": "aws.partition",
                                          "argv": [
                                            {
                                              "fn": "getAttr",
                                              "argv": [
                                                {
                                                  "ref": "bucketArn"
                                                },
                                                "region"
                                              ]
                                            }
                                          ],
                                          "assign": "arnPartition"
                                        }
                                      ],
                                      "rules": [
                                        {
                                          "conditions": [
                                            {
                                              "fn": "aws.partition",
                                              "argv": [
                                                {
                                                  "ref": "Region"
                                                }
                                              ],
                                              "assign": "partitionResult"
                                            }
                                          ],
                                          "rules": [
                                            {
                                              "conditions": [
                                                {
                                                  "fn": "stringEquals",
                                                  "argv": [
                                                    {
                                                      "fn": "getAttr",
                                                      "argv": [
                                                        {
                                                          "ref": "arnPartition"
                                                        },
                                                        "name"
                                                      ]
                                                    },
                                                    {
                                                      "fn": "getAttr",
                                                      "argv": [
                                                        {
                                                          "ref": "partitionResult"
                                                        },
                                                        "name"
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ],
                                              "rules": [
                                                {
                                                  "conditions": [
                                                    {
                                                      "fn": "isValidHostLabel",
                                                      "argv": [
                                                        {
                                                          "fn": "getAttr",
                                                          "argv": [
                                                            {
                                                              "ref": "bucketArn"
                                                            },
                                                            "region"
                                                          ]
                                                        },
                                                        true
                                                      ]
                                                    }
                                                  ],
                                                  "rules": [
                                                    {
                                                      "conditions": [
                                                        {
                                                          "fn": "not",
                                                          "argv": [
                                                            {
                                                              "fn": "stringEquals",
                                                              "argv": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "bucketArn"
                                                                    },
                                                                    "accountId"
                                                                  ]
                                                                },
                                                                ""
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ],
                                                      "rules": [
                                                        {
                                                          "conditions": [
                                                            {
                                                              "fn": "isValidHostLabel",
                                                              "argv": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "bucketArn"
                                                                    },
                                                                    "accountId"
                                                                  ]
                                                                },
                                                                false
                                                              ]
                                                            }
                                                          ],
                                                          "rules": [
                                                            {
                                                              "conditions": [
                                                                {
                                                                  "fn": "isSet",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "AccountId"
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "fn": "not",
                                                                  "argv": [
                                                                    {
                                                                      "fn": "stringEquals",
                                                                      "argv": [
                                                                        {
                                                                          "ref": "AccountId"
                                                                        },
                                                                        "{bucketArn#accountId}"
                                                                      ]
                                                                    }
                                                                  ]
                                                                }
                                                              ],
                                                              "error": "Invalid ARN: the accountId specified in the ARN (`{bucketArn#accountId}`) does not match the parameter (`{AccountId}`)",
                                                              "type": "error"
                                                            },
                                                            {
                                                              "conditions": [
                                                                {
                                                                  "fn": "getAttr",
                                                                  "argv": [
                                                                    {
                                                                      "ref": "bucketArn"
                                                                    },
                                                                    "resourceId[2]"
                                                                  ],
                                                                  "assign": "outpostType"
                                                                }
                                                              ],
                                                              "rules": [
                                                                {
                                                                  "conditions": [
                                                                    {
                                                                      "fn": "getAttr",
                                                                      "argv": [
                                                                        {
                                                                          "ref": "bucketArn"
                                                                        },
                                                                        "resourceId[3]"
                                                                      ],
                                                                      "assign": "bucketName"
                                                                    }
                                                                  ],
                                                                  "rules": [
                                                                    {
                                                                      "conditions": [
                                                                        {
                                                                          "fn": "stringEquals",
                                                                          "argv": [
                                                                            {
                                                                              "ref": "outpostType"
                                                                            },
                                                                            "bucket"
                                                                          ]
                                                                        }
                                                                      ],
                                                                      "rules": [
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseFIPS"
                                                                                },
                                                                                true
                                                                              ]
                                                                            },
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseDualStack"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts-fips.{bucketArn#region}.{arnPartition#dualStackDnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{bucketArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{bucketArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseFIPS"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts-fips.{bucketArn#region}.{arnPartition#dnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{bucketArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{bucketArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "booleanEquals",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "UseDualStack"
                                                                                },
                                                                                true
                                                                              ]
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts.{bucketArn#region}.{arnPartition#dualStackDnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{bucketArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{bucketArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [
                                                                            {
                                                                              "fn": "isSet",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "Endpoint"
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "fn": "parseURL",
                                                                              "argv": [
                                                                                {
                                                                                  "ref": "Endpoint"
                                                                                }
                                                                              ],
                                                                              "assign": "url"
                                                                            }
                                                                          ],
                                                                          "endpoint": {
                                                                            "url": "{url#scheme}://{url#authority}{url#path}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{bucketArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{bucketArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        },
                                                                        {
                                                                          "conditions": [],
                                                                          "endpoint": {
                                                                            "url": "https://s3-outposts.{bucketArn#region}.{arnPartition#dnsSuffix}",
                                                                            "properties": {
                                                                              "authSchemes": [
                                                                                {
                                                                                  "disableDoubleEncoding": true,
                                                                                  "name": "sigv4",
                                                                                  "signingName": "s3-outposts",
                                                                                  "signingRegion": "{bucketArn#region}"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "headers": {
                                                                              "x-amz-account-id": [
                                                                                "{bucketArn#accountId}"
                                                                              ],
                                                                              "x-amz-outpost-id": ["{outpostId}"]
                                                                            }
                                                                          },
                                                                          "type": "endpoint"
                                                                        }
                                                                      ],
                                                                      "type": "tree"
                                                                    },
                                                                    {
                                                                      "conditions": [],
                                                                      "error": "Invalid ARN: Expected an outpost type `bucket`, found `{outpostType}`",
                                                                      "type": "error"
                                                                    }
                                                                  ],
                                                                  "type": "tree"
                                                                },
                                                                {
                                                                  "conditions": [],
                                                                  "error": "Invalid ARN: expected a bucket name",
                                                                  "type": "error"
                                                                }
                                                              ],
                                                              "type": "tree"
                                                            },
                                                            {
                                                              "conditions": [],
                                                              "error": "Invalid ARN: Expected a 4-component resource",
                                                              "type": "error"
                                                            }
                                                          ],
                                                          "type": "tree"
                                                        },
                                                        {
                                                          "conditions": [],
                                                          "error": "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",
                                                          "type": "error"
                                                        }
                                                      ],
                                                      "type": "tree"
                                                    },
                                                    {
                                                      "conditions": [],
                                                      "error": "Invalid ARN: missing account ID",
                                                      "type": "error"
                                                    }
                                                  ],
                                                  "type": "tree"
                                                },
                                                {
                                                  "conditions": [],
                                                  "error": "Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",
                                                  "type": "error"
                                                }
                                              ],
                                              "type": "tree"
                                            },
                                            {
                                              "conditions": [],
                                              "error": "Client was configured for partition `{partitionResult#name}` but ARN has `{arnPartition#name}`",
                                              "type": "error"
                                            }
                                          ],
                                          "type": "tree"
                                        }
                                      ],
                                      "type": "tree"
                                    }
                                  ],
                                  "type": "tree"
                                },
                                {
                                  "conditions": [],
                                  "error": "Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`., found: `{outpostId}`",
                                  "type": "error"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "Invalid ARN: The Outpost Id was not set",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "error": "Invalid ARN: No ARN type specified",
                      "type": "error"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "partitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "isValidHostLabel",
                          "argv": [
                            {
                              "ref": "Region"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "partitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-cn"
                              ]
                            }
                          ],
                          "error": "Partition does not support FIPS",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "not",
                              "argv": [
                                {
                                  "fn": "isSet",
                                  "argv": [
                                    {
                                      "ref": "AccountId"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "error": "AccountId is required but not set",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            },
                            {
                              "fn": "not",
                              "argv": [
                                {
                                  "fn": "isValidHostLabel",
                                  "argv": [
                                    {
                                      "ref": "AccountId"
                                    },
                                    false
                                  ]
                                }
                              ]
                            }
                          ],
                          "error": "AccountId must only contain a-z, A-Z, 0-9 and `-`.",
                          "type": "error"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "Endpoint"
                                }
                              ]
                            },
                            {
                              "fn": "parseURL",
                              "argv": [
                                {
                                  "ref": "Endpoint"
                                }
                              ],
                              "assign": "url"
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "UseDualStack"
                                    },
                                    true
                                  ]
                                }
                              ],
                              "error": "Invalid Configuration: DualStack and custom endpoint are not supported",
                              "type": "error"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "isSet",
                                  "argv": [
                                    {
                                      "ref": "RequiresAccountId"
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "ref": "RequiresAccountId"
                                    },
                                    true
                                  ]
                                },
                                {
                                  "fn": "isSet",
                                  "argv": [
                                    {
                                      "ref": "AccountId"
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "{url#scheme}://{AccountId}.{url#authority}{url#path}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "{url#scheme}://{url#authority}{url#path}",
                                "properties": {
                                  "authSchemes": [
                                    {
                                      "disableDoubleEncoding": true,
                                      "name": "sigv4",
                                      "signingName": "s3",
                                      "signingRegion": "{Region}"
                                    }
                                  ]
                                },
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://{AccountId}.s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://{AccountId}.s3-control-fips.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://s3-control-fips.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://{AccountId}.s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "RequiresAccountId"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "isSet",
                              "argv": [
                                {
                                  "ref": "AccountId"
                                }
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://{AccountId}.s3-control.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://s3-control.{Region}.{partitionResult#dnsSuffix}",
                            "properties": {
                              "authSchemes": [
                                {
                                  "disableDoubleEncoding": true,
                                  "name": "sigv4",
                                  "signingName": "s3",
                                  "signingRegion": "{Region}"
                                }
                              ]
                            },
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "error": "Invalid region: region was not a valid DNS name.",
                      "type": "error"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Region must be set",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "Vanilla outposts without ARN region + access point ARN@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Vanilla outposts with ARN region + access point ARN@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "accept an access point ARN@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "vanilla outposts china@cn-north-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "cn-north-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.cn-north-1.amazonaws.com.cn"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "cn-north-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "gov region@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "gov cloud with fips@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "govcloud with fips + arn region@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "gov region@cn-north-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "cn-north-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.cn-north-1.amazonaws.com.cn"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "cn-north-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "gov cloud with fips@cn-north-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "cn-north-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "cn-north-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "govcloud with fips + arn region@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "gov region@af-south-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "af-south-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.af-south-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "af-south-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "gov cloud with fips@af-south-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "af-south-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.af-south-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "af-south-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "govcloud with fips + arn region@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "CreateBucket + OutpostId = outposts endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2"
                  },
                  "operationName": "CreateBucket",
                  "operationParams": {
                    "Bucket": "blah",
                    "OutpostId": "123"
                  }
                }
              ],
              "params": {
                "Bucket": "blah",
                "OutpostId": "123",
                "Region": "us-east-2",
                "RequiresAccountId": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "CreateBucket + OutpostId with fips = outposts endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "CreateBucket",
                  "operationParams": {
                    "Bucket": "blah",
                    "OutpostId": "123"
                  }
                }
              ],
              "params": {
                "Bucket": "blah",
                "OutpostId": "123",
                "Region": "us-east-2",
                "RequiresAccountId": false,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "CreateBucket without OutpostId = regular endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2"
                  },
                  "operationName": "CreateBucket",
                  "operationParams": {
                    "Bucket": "blah"
                  }
                }
              ],
              "params": {
                "Bucket": "blah",
                "Region": "us-east-2",
                "RequiresAccountId": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBuckets + OutpostId = outposts endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "OutpostId": "op-123"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBuckets without OutpostId = regular endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.s3-control.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBucket + OutpostId with fips = outposts endpoint@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "OutpostId": "op-123"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "outpost access points support dualstack@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseDualStack": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseDualStack": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "outpost access points support dualstack@af-south-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "af-south-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.af-south-1.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseDualStack": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseDualStack": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "af-south-1",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "outpost access points support fips + dualstack@af-south-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "af-south-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.af-south-1.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseFIPS": true,
                    "AWS::UseDualStack": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1",
                    "AWS::UseFIPS": true,
                    "AWS::UseDualStack": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "af-south-1",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "invalid ARN: must be include outpost ID@us-west-2",
              "expect": {
                "error": "Invalid ARN: The Outpost Id was not set"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "invalid ARN: must specify access point@us-west-2",
              "expect": {
                "error": "Invalid ARN: Expected a 4-component resource"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "invalid ARN@us-west-2",
              "expect": {
                "error": "Invalid ARN: Expected a 4-component resource"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:myaccesspoint",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "when set, AccountId drives AP construction@us-west-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://myid-1234.s3-control.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "AccessPointName": "myaccesspoint",
                "AccountId": "myid-1234",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Account ID set inline and in ARN but they both match@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": false
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseArnRegion": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Account ID set inline and in ARN and they do not match@us-west-2",
              "expect": {
                "error": "Invalid ARN: the accountId specified in the ARN (`123456789012`) does not match the parameter (`999999999999`)"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": false
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "AccountId": "999999999999",
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "999999999999",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseArnRegion": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "get access point prefixed with account id using endpoint url@us-west-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.control.vpce-1a2b3c4d-5e6f.s3.us-west-2.vpce.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "SDK::Endpoint": "https://control.vpce-1a2b3c4d-5e6f.s3.us-west-2.vpce.amazonaws.com"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "Name": "apname"
                  }
                }
              ],
              "params": {
                "AccessPointName": "apname",
                "AccountId": "123456789012",
                "Endpoint": "https://control.vpce-1a2b3c4d-5e6f.s3.us-west-2.vpce.amazonaws.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "endpoint url with s3-outposts@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Endpoint": "https://beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "access point name with a bucket arn@us-west-2",
              "expect": {
                "error": "Expected an outpost type `accesspoint`, found `bucket`"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Endpoint": "beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket arn with access point name@us-west-2",
              "expect": {
                "error": "Invalid ARN: Expected an outpost type `bucket`, found `accesspoint`"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "Endpoint": "beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "create bucket with outposts@us-west-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "params": {
                "Bucket": "bucketname",
                "Endpoint": "https://beta.example.com",
                "OutpostId": "op-123",
                "Region": "us-west-2",
                "RequiresAccountId": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "get bucket with endpoint_url@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Endpoint": "https://beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBucket + OutpostId endpoint url@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "OutpostId": "op-123"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Endpoint": "https://beta.example.com",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBucket + OutpostId + fips + endpoint url@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true,
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "OutpostId": "op-123"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Endpoint": "https://beta.example.com",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "ListRegionalBucket + OutpostId + fips + dualstack@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true,
                    "AWS::UseDualStack": true
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012",
                    "OutpostId": "op-123"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "CreateBucket + OutpostId endpoint url@us-east-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true,
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "CreateBucket",
                  "operationParams": {
                    "Bucket": "blah",
                    "OutpostId": "123"
                  }
                }
              ],
              "params": {
                "Bucket": "blah",
                "Endpoint": "https://beta.example.com",
                "OutpostId": "123",
                "Region": "us-east-2",
                "RequiresAccountId": false,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "dualstack cannot be used with outposts when an endpoint URL is set@us-west-2.",
              "expect": {
                "error": "Invalid Configuration: DualStack and custom endpoint are not supported"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "Endpoint": "https://s3-outposts.us-west-2.api.aws",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "vanilla bucket arn requires account id@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "CreateAccessPoint",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "Name": "apname",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket arn with UseArnRegion = true (arn region supercedes client configured region)@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition (non-fips)@us-gov-east-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-east-1"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition with FIPS@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-west-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "bucket ARN in aws partition with FIPS@us-east-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "bucket ARN in aws partition with fips + dualstack@us-east-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true,
                    "AWS::UseDualStack": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "vanilla bucket arn requires account id@cn-north-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "cn-north-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.cn-north-1.amazonaws.com.cn"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1"
                  },
                  "operationName": "CreateAccessPoint",
                  "operationParams": {
                    "Bucket": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "Name": "apname",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-cn:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "cn-north-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket arn with UseArnRegion = true (arn region supercedes client configured region)@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition (non-fips)@us-gov-east-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-east-1"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition with FIPS@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-west-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "bucket ARN in aws partition with FIPS@us-east-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "Outposts support dualstack @us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.api.aws"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseDualStack": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "vanilla bucket arn requires account id@af-south-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "af-south-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.af-south-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "af-south-1"
                  },
                  "operationName": "CreateAccessPoint",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "Name": "apname",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:af-south-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "af-south-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket arn with UseArnRegion = true (arn region supercedes client configured region)@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition (non-fips)@us-gov-east-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-gov-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-east-1"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN in gov partition with FIPS@us-gov-west-1",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-gov-west-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-gov-west-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws-us-gov:s3-outposts:us-gov-west-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-gov-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "bucket ARN in aws partition with FIPS@us-east-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts-fips.us-east-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "Invalid ARN: missing outpost id and bucket@us-west-2",
              "expect": {
                "error": "Invalid ARN: The Outpost Id was not set"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Invalid ARN: missing bucket@us-west-2",
              "expect": {
                "error": "Invalid ARN: Expected a 4-component resource"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Invalid ARN: missing outpost and bucket ids@us-west-2",
              "expect": {
                "error": "Invalid ARN: Expected a 4-component resource"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:bucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Invalid ARN: missing bucket id@us-west-2",
              "expect": {
                "error": "Invalid ARN: expected a bucket name"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "account id inserted into hostname@us-west-2",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://1234567890.s3-control.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "AccountId": "1234567890",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "account id prefix with dualstack@us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://1234567890.s3-control.dualstack.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "AccountId": "1234567890",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "account id prefix with fips@us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://1234567890.s3-control-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "AccountId": "1234567890",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom account id prefix with fips@us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.s3-control-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "standard url @ us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "fips url @ us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "dualstack url @ us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control.dualstack.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true
              }
            },
            {
              "documentation": "fips,dualstack url @ us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control-fips.dualstack.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "standard url @ cn-north-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "cn-north-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-control.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "fips @ cn-north-1",
              "expect": {
                "error": "Partition does not support FIPS"
              },
              "params": {
                "Region": "cn-north-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom account id prefix @us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.s3-control.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "invalid account id prefix @us-east-1",
              "expect": {
                "error": "AccountId must only contain a-z, A-Z, 0-9 and `-`."
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "/?invalid&not-host*label"
                  }
                }
              ],
              "params": {
                "AccountId": "/?invalid&not-host*label",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "custom account id prefix with fips@us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.s3-control-fips.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom account id prefix with dualstack,fips@us-east-1",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.s3-control-fips.dualstack.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1",
                    "AWS::UseFIPS": true,
                    "AWS::UseDualStack": true
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom account id with custom endpoint",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1",
                    "SDK::Endpoint": "https://example.com"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "RequiresAccountId with AccountId unset",
              "expect": {
                "error": "AccountId is required but not set"
              },
              "params": {
                "Region": "us-east-1",
                "RequiresAccountId": true
              }
            },
            {
              "documentation": "RequiresAccountId with AccountId unset and custom endpoint",
              "expect": {
                "error": "AccountId is required but not set"
              },
              "params": {
                "Region": "us-east-1",
                "Endpoint": "https://beta.example.com",
                "RequiresAccountId": true
              }
            },
            {
              "documentation": "RequiresAccountId with invalid AccountId and custom endpoint",
              "expect": {
                "error": "AccountId must only contain a-z, A-Z, 0-9 and `-`."
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1",
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "/?invalid&not-host*label"
                  }
                }
              ],
              "params": {
                "Region": "us-east-1",
                "Endpoint": "https://beta.example.com",
                "AccountId": "/?invalid&not-host*label",
                "RequiresAccountId": true
              }
            },
            {
              "documentation": "account id with custom endpoint, fips",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-1",
                    "AWS::UseFIPS": true,
                    "SDK::Endpoint": "https://example.com"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "123456789012",
                "Region": "us-east-1",
                "RequiresAccountId": true,
                "Endpoint": "https://example.com",
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom endpoint, fips",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "Endpoint": "https://example.com",
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom endpoint, fips",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "Endpoint": "https://example.com",
                "UseFIPS": true
              }
            },
            {
              "documentation": "custom endpoint, DualStack",
              "expect": {
                "error": "Invalid Configuration: DualStack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "Endpoint": "https://example.com",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "region not set",
              "expect": {
                "error": "Region must be set"
              }
            },
            {
              "documentation": "invalid partition",
              "expect": {
                "error": "Invalid region: region was not a valid DNS name."
              },
              "params": {
                "Region": "invalid-region 42"
              }
            },
            {
              "documentation": "ListRegionalBuckets + OutpostId without accountId set.",
              "expect": {
                "error": "AccountId is required but not set"
              },
              "params": {
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBuckets + OutpostId with invalid accountId set.",
              "expect": {
                "error": "AccountId must only contain a-z, A-Z, 0-9 and `-`."
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-east-2"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "OutpostId": "op-123",
                    "AccountId": "/?invalid&not-host*label"
                  }
                }
              ],
              "params": {
                "AccountId": "/?invalid&not-host*label",
                "OutpostId": "op-123",
                "Region": "us-east-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "accesspoint set but missing accountId",
              "expect": {
                "error": "AccountId is required but not set"
              },
              "params": {
                "AccessPointName": "myaccesspoint",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "outpost accesspoint ARN with missing accountId",
              "expect": {
                "error": "Invalid ARN: missing account ID"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2::outpost:op-01234567890123456:outpost:op1",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN with missing accountId",
              "expect": {
                "error": "Invalid ARN: missing account ID"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2::outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "endpoint url with accesspoint (non-arn)",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://123456789012.beta.example.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "apname",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "apname",
                "Endpoint": "https://beta.example.com",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "access point name with an accesspoint arn@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://beta.example.com"
                }
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "Endpoint": "https://beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "DualStack + Custom endpoint is not supported(non-arn)",
              "expect": {
                "error": "Invalid Configuration: DualStack and custom endpoint are not supported"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseDualStack": true,
                    "SDK::Endpoint": "https://beta.example.com"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "apname",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "apname",
                "Endpoint": "https://beta.example.com",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "get bucket with custom endpoint and dualstack is not supported@us-west-2",
              "expect": {
                "error": "Invalid Configuration: DualStack and custom endpoint are not supported"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::UseDualStack": true,
                    "SDK::Endpoint": "https://s3-outposts.us-west-2.api.aws"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Endpoint": "https://s3-outposts.us-west-2.api.aws",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "ListRegionalBuckets + OutpostId with fips in CN.",
              "expect": {
                "error": "Partition does not support FIPS"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "cn-north-1",
                    "AWS::UseFIPS": true
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "OutpostId": "op-123",
                    "AccountId": "0123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "0123456789012",
                "OutpostId": "op-123",
                "Region": "cn-north-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "ListRegionalBuckets + invalid OutpostId.",
              "expect": {
                "error": "OutpostId must only contain a-z, A-Z, 0-9 and `-`."
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-1"
                  },
                  "operationName": "ListRegionalBuckets",
                  "operationParams": {
                    "OutpostId": "?outpost/invalid+",
                    "AccountId": "0123456789012"
                  }
                }
              ],
              "params": {
                "AccountId": "0123456789012",
                "OutpostId": "?outpost/invalid+",
                "Region": "us-west-1",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "bucket ARN with mismatched accountId",
              "expect": {
                "error": "Invalid ARN: the accountId specified in the ARN (`999999`) does not match the parameter (`0123456789012`)"
              },
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:999999:outpost:op-01234567890123456:bucket:mybucket",
                "AccountId": "0123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "OutpostId with invalid region",
              "expect": {
                "error": "Invalid region: region was not a valid DNS name."
              },
              "params": {
                "OutpostId": "op-123",
                "Region": "invalid-region 42",
                "AccountId": "0123456",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "OutpostId with RequireAccountId unset",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "OutpostId": "op-123",
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Outpost Accesspoint ARN with arn region and client region mismatch with UseArnRegion=false",
              "expect": {
                "error": "Invalid configuration: region from ARN `us-east-1` does not match client region `us-west-2` and UseArnRegion is `false`"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": false
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": false
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseArnRegion": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Outpost Bucket ARN with arn region and client region mismatch with UseArnRegion=false",
              "expect": {
                "error": "Invalid configuration: region from ARN `us-east-1` does not match client region `us-west-2` and UseArnRegion is `false`"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "SDK::Endpoint": "https://beta.example.com",
                    "AWS::S3Control::UseArnRegion": false
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Endpoint": "https://beta.example.com",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseArnRegion": false,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Accesspoint ARN with region mismatch and UseArnRegion unset",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Bucket ARN with region mismatch and UseArnRegion unset",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-east-1",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-east-1.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-east-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Outpost Bucket ARN with partition mismatch with UseArnRegion=true",
              "expect": {
                "error": "Client was configured for partition `aws` but ARN has `aws-cn`"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": true
                  },
                  "operationName": "GetBucket",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseArnRegion": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Accesspoint ARN with partition mismatch and UseArnRegion=true",
              "expect": {
                "error": "Client was configured for partition `aws` but ARN has `aws-cn`"
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": true
                  },
                  "operationName": "GetAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2",
                    "AWS::S3Control::UseArnRegion": true
                  },
                  "operationName": "DeleteAccessPoint",
                  "operationParams": {
                    "Name": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                    "AccountId": "123456789012"
                  }
                }
              ],
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "AccountId": "123456789012",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseArnRegion": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "Accesspoint ARN with region mismatch, UseArnRegion=false and custom endpoint",
              "expect": {
                "error": "Invalid configuration: region from ARN `cn-north-1` does not match client region `us-west-2` and UseArnRegion is `false`"
              },
              "params": {
                "AccessPointName": "arn:aws:s3-outposts:cn-north-1:123456789012:outpost:op-01234567890123456:accesspoint:myaccesspoint",
                "Region": "us-west-2",
                "Endpoint": "https://example.com",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseArnRegion": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "outpost bucket arn@us-west-2",
              "expect": {
                "endpoint": {
                  "headers": {
                    "x-amz-account-id": ["123456789012"],
                    "x-amz-outpost-id": ["op-01234567890123456"]
                  },
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3-outposts",
                        "signingRegion": "us-west-2",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://s3-outposts.us-west-2.amazonaws.com"
                }
              },
              "operationInputs": [
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "GetBucketVersioning",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012"
                  }
                },
                {
                  "builtInParams": {
                    "AWS::Region": "us-west-2"
                  },
                  "operationName": "PutBucketVersioning",
                  "operationParams": {
                    "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                    "AccountId": "123456789012",
                    "VersioningConfiguration": {
                      "Status": "Enabled"
                    }
                  }
                }
              ],
              "params": {
                "Bucket": "arn:aws:s3-outposts:us-west-2:123456789012:outpost:op-01234567890123456:bucket:mybucket",
                "Region": "us-west-2",
                "RequiresAccountId": true,
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "S3 Snow Control with bucket",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "snow",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://10.0.1.12:433"
                }
              },
              "params": {
                "Region": "snow",
                "Bucket": "bucketName",
                "Endpoint": "https://10.0.1.12:433",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "S3 Snow Control without bucket",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "snow",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://10.0.1.12:433"
                }
              },
              "params": {
                "Region": "snow",
                "Endpoint": "https://10.0.1.12:433",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "S3 Snow Control with bucket and without port",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "snow",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "https://10.0.1.12"
                }
              },
              "params": {
                "Region": "snow",
                "Bucket": "bucketName",
                "Endpoint": "https://10.0.1.12",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "S3 Snow Control with bucket and with DNS",
              "expect": {
                "endpoint": {
                  "properties": {
                    "authSchemes": [
                      {
                        "name": "sigv4",
                        "signingName": "s3",
                        "signingRegion": "snow",
                        "disableDoubleEncoding": true
                      }
                    ]
                  },
                  "url": "http://s3snow.com"
                }
              },
              "params": {
                "Region": "snow",
                "Bucket": "bucketName",
                "Endpoint": "http://s3snow.com",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "S3 Snow Control with FIPS enabled",
              "expect": {
                "error": "S3 Snow does not support FIPS"
              },
              "params": {
                "Region": "snow",
                "Bucket": "bucketName",
                "Endpoint": "https://10.0.1.12:433",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "S3 Snow Control with Dualstack enabled",
              "expect": {
                "error": "S3 Snow does not support DualStack"
              },
              "params": {
                "Region": "snow",
                "Bucket": "bucketName",
                "Endpoint": "https://10.0.1.12:433",
                "UseFIPS": false,
                "UseDualStack": true
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.s3control#AbortIncompleteMultipartUpload": {
      "type": "structure",
      "members": {
        "DaysAfterInitiation": {
          "target": "com.amazonaws.s3control#DaysAfterInitiation",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload to\n         the Outposts bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for abort incomplete multipart upload</p>"
      }
    },
    "com.amazonaws.s3control#AccessControlTranslation": {
      "type": "structure",
      "members": {
        "Owner": {
          "target": "com.amazonaws.s3control#OwnerOverride",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the replica ownership.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for information about access control for replicas.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#AccessGrantArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:s3:[a-z0-9\\-]+:\\d{12}:access\\-grants\\/grant/[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantsInstanceArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:s3:[a-z0-9\\-]+:\\d{12}:access\\-grants\\/[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantsInstanceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantsInstancesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ListAccessGrantsInstanceEntry",
        "traits": {
          "smithy.api#xmlName": "AccessGrantsInstance"
        }
      }
    },
    "com.amazonaws.s3control#AccessGrantsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ListAccessGrantEntry",
        "traits": {
          "smithy.api#xmlName": "AccessGrant"
        }
      }
    },
    "com.amazonaws.s3control#AccessGrantsLocationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:s3:[a-z0-9\\-]+:\\d{12}:access\\-grants\\/location/[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantsLocationConfiguration": {
      "type": "structure",
      "members": {
        "S3SubPrefix": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The <code>S3SubPrefix</code> is appended to the location scope creating the grant scope. Use this field to narrow the scope of the grant to a subset of the location scope. This field is required if the location scope is the default location <code>s3://</code> because you cannot create a grant for all of your S3 data in the Region and must narrow the scope. For example, if the location scope is the default location <code>s3://</code>, the <code>S3SubPrefx</code> can be a <bucket-name>/*, so the full grant scope path would be <code>s3://<bucket-name>/*</code>. Or the <code>S3SubPrefx</code> can be <code><bucket-name>/<prefix-name>*</code>, so the full grant scope path would be or <code>s3://<bucket-name>/<prefix-name>*</code>.</p>\n         <p>If the <code>S3SubPrefix</code> includes a prefix, append the wildcard character <code>*</code> after the prefix to indicate that you want to include all object key names in the bucket that start with that prefix. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration options of the S3 Access Grants location. It contains the <code>S3SubPrefix</code> field. The grant scope, the data to which you are granting access, is the result of appending the <code>Subprefix</code> field to the scope of the registered location.</p>"
      }
    },
    "com.amazonaws.s3control#AccessGrantsLocationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#AccessGrantsLocationsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ListAccessGrantsLocationsEntry",
        "traits": {
          "smithy.api#xmlName": "AccessGrantsLocation"
        }
      }
    },
    "com.amazonaws.s3control#AccessKeyId": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.s3control#AccessPoint": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of this access point.</p>",
            "smithy.api#required": {}
          }
        },
        "NetworkOrigin": {
          "target": "com.amazonaws.s3control#NetworkOrigin",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether this access point allows access from the public internet. If\n            <code>VpcConfiguration</code> is specified for this access point, then\n            <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn't allow access from\n         the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and\n         the access point allows access from the public internet, subject to the access point and bucket access\n         policies.</p>",
            "smithy.api#required": {}
          }
        },
        "VpcConfiguration": {
          "target": "com.amazonaws.s3control#VpcConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The virtual private cloud (VPC) configuration for this access point, if one exists.</p>\n         <note>\n            <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other\n               Amazon Web Services.</p>\n         </note>"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket associated with this access point.</p>",
            "smithy.api#required": {}
          }
        },
        "AccessPointArn": {
          "target": "com.amazonaws.s3control#S3AccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN for the access point.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name or alias of the access point.</p>"
          }
        },
        "BucketAccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 bucket associated with this access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An access point used to access a bucket.</p>"
      }
    },
    "com.amazonaws.s3control#AccessPointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#AccessPoint",
        "traits": {
          "smithy.api#xmlName": "AccessPoint"
        }
      }
    },
    "com.amazonaws.s3control#AccessPointName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 255
        }
      }
    },
    "com.amazonaws.s3control#AccountId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^\\d{12}$"
      }
    },
    "com.amazonaws.s3control#AccountLevel": {
      "type": "structure",
      "members": {
        "ActivityMetrics": {
          "target": "com.amazonaws.s3control#ActivityMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container element for S3 Storage Lens activity metrics.</p>"
          }
        },
        "BucketLevel": {
          "target": "com.amazonaws.s3control#BucketLevel",
          "traits": {
            "smithy.api#documentation": "<p>A container element for the S3 Storage Lens bucket-level configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "AdvancedCostOptimizationMetrics": {
          "target": "com.amazonaws.s3control#AdvancedCostOptimizationMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container element for S3 Storage Lens advanced cost-optimization metrics.</p>"
          }
        },
        "AdvancedDataProtectionMetrics": {
          "target": "com.amazonaws.s3control#AdvancedDataProtectionMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container element for S3 Storage Lens advanced data-protection metrics.</p>"
          }
        },
        "DetailedStatusCodesMetrics": {
          "target": "com.amazonaws.s3control#DetailedStatusCodesMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container element for detailed status code metrics. </p>"
          }
        },
        "StorageLensGroupLevel": {
          "target": "com.amazonaws.s3control#StorageLensGroupLevel",
          "traits": {
            "smithy.api#documentation": "<p>\nA container element for S3 Storage Lens groups metrics.\n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container element for the account-level Amazon S3 Storage Lens configuration.</p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#ActivityMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container that indicates whether activity metrics are enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container element for Amazon S3 Storage Lens activity metrics. Activity metrics show details\n         about how your storage is requested, such as requests (for example, All requests, Get\n         requests, Put requests), bytes uploaded or downloaded, and errors.</p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#AdvancedCostOptimizationMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container that indicates whether advanced cost-optimization metrics are\n         enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container element for Amazon S3 Storage Lens advanced cost-optimization metrics. Advanced\n         cost-optimization metrics provide insights that you can use to manage and optimize your\n         storage costs, for example, lifecycle rule counts for transitions, expirations, and\n         incomplete multipart uploads.</p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#AdvancedDataProtectionMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container that indicates whether advanced data-protection metrics are enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container element for Amazon S3 Storage Lens advanced data-protection metrics. Advanced\n         data-protection metrics provide insights that you can use to perform audits and protect\n         your data, for example replication rule counts within and across Regions.</p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#Alias": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 63
        },
        "smithy.api#pattern": "^[0-9a-z\\\\-]{63}$"
      }
    },
    "com.amazonaws.s3control#AssociateAccessGrantsIdentityCenter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#AssociateAccessGrantsIdentityCenterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Associate your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance. Use this action if you want to create access grants for users or groups from your corporate identity directory. First, you must add your corporate identity directory to Amazon Web Services IAM Identity Center. Then, you can associate this IAM Identity Center instance with your S3 Access Grants instance.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:AssociateAccessGrantsIdentityCenter</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>You must also have the following permissions: <code>sso:CreateApplication</code>, <code>sso:PutApplicationGrant</code>, and <code>sso:PutApplicationAuthenticationMethod</code>. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/accessgrantsinstance/identitycenter",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#AssociateAccessGrantsIdentityCenterRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "IdentityCenterArn": {
          "target": "com.amazonaws.s3control#IdentityCenterArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Web Services IAM Identity Center instance that you are associating with your S3 Access Grants instance. An IAM Identity Center instance is your corporate identity directory that you added to the IAM Identity Center. You can use the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ListInstances.html\">ListInstances</a> API operation to retrieve a list of your Identity Center instances and their ARNs.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#AsyncCreationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#AsyncErrorDetails": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.s3control#MaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>A string that uniquely identifies the error condition.</p>"
          }
        },
        "Message": {
          "target": "com.amazonaws.s3control#MaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>A generic description of the error condition in English.</p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.s3control#MaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the resource associated with the error.</p>"
          }
        },
        "RequestId": {
          "target": "com.amazonaws.s3control#MaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the request associated with the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Error details for the failed asynchronous operation.</p>"
      }
    },
    "com.amazonaws.s3control#AsyncOperation": {
      "type": "structure",
      "members": {
        "CreationTime": {
          "target": "com.amazonaws.s3control#AsyncCreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time that the request was sent to the service.</p>"
          }
        },
        "Operation": {
          "target": "com.amazonaws.s3control#AsyncOperationName",
          "traits": {
            "smithy.api#documentation": "<p>The specific operation for the asynchronous request.</p>"
          }
        },
        "RequestTokenARN": {
          "target": "com.amazonaws.s3control#AsyncRequestTokenARN",
          "traits": {
            "smithy.api#documentation": "<p>The request token associated with the request.</p>"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.s3control#AsyncRequestParameters",
          "traits": {
            "smithy.api#documentation": "<p>The parameters associated with the request.</p>"
          }
        },
        "RequestStatus": {
          "target": "com.amazonaws.s3control#AsyncRequestStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the request.</p>"
          }
        },
        "ResponseDetails": {
          "target": "com.amazonaws.s3control#AsyncResponseDetails",
          "traits": {
            "smithy.api#documentation": "<p>The details of the response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the information about an asynchronous operation.</p>"
      }
    },
    "com.amazonaws.s3control#AsyncOperationName": {
      "type": "enum",
      "members": {
        "CreateMultiRegionAccessPoint": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CreateMultiRegionAccessPoint"
          }
        },
        "DeleteMultiRegionAccessPoint": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DeleteMultiRegionAccessPoint"
          }
        },
        "PutMultiRegionAccessPointPolicy": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PutMultiRegionAccessPointPolicy"
          }
        }
      }
    },
    "com.amazonaws.s3control#AsyncRequestParameters": {
      "type": "structure",
      "members": {
        "CreateMultiRegionAccessPointRequest": {
          "target": "com.amazonaws.s3control#CreateMultiRegionAccessPointInput",
          "traits": {
            "smithy.api#documentation": "<p>A container of the parameters for a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a> request.</p>"
          }
        },
        "DeleteMultiRegionAccessPointRequest": {
          "target": "com.amazonaws.s3control#DeleteMultiRegionAccessPointInput",
          "traits": {
            "smithy.api#documentation": "<p>A container of the parameters for a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a> request.</p>"
          }
        },
        "PutMultiRegionAccessPointPolicyRequest": {
          "target": "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyInput",
          "traits": {
            "smithy.api#documentation": "<p>A container of the parameters for a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPoint.html\">PutMultiRegionAccessPoint</a> request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the request parameters associated with an asynchronous request.</p>"
      }
    },
    "com.amazonaws.s3control#AsyncRequestStatus": {
      "type": "string"
    },
    "com.amazonaws.s3control#AsyncRequestTokenARN": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.s3control#AsyncResponseDetails": {
      "type": "structure",
      "members": {
        "MultiRegionAccessPointDetails": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointsAsyncResponse",
          "traits": {
            "smithy.api#documentation": "<p>The details for the Multi-Region Access Point.</p>"
          }
        },
        "ErrorDetails": {
          "target": "com.amazonaws.s3control#AsyncErrorDetails",
          "traits": {
            "smithy.api#documentation": "<p>Error details for an asynchronous request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the response details that are returned when querying about an\n         asynchronous request.</p>"
      }
    },
    "com.amazonaws.s3control#AwsLambdaTransformation": {
      "type": "structure",
      "members": {
        "FunctionArn": {
          "target": "com.amazonaws.s3control#FunctionArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lambda function.</p>",
            "smithy.api#required": {}
          }
        },
        "FunctionPayload": {
          "target": "com.amazonaws.s3control#AwsLambdaTransformationPayload",
          "traits": {
            "smithy.api#documentation": "<p>Additional JSON that provides supplemental data to the Lambda function used to transform\n         objects.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Lambda function used to transform objects through an Object Lambda Access Point.</p>"
      }
    },
    "com.amazonaws.s3control#AwsLambdaTransformationPayload": {
      "type": "string"
    },
    "com.amazonaws.s3control#AwsOrgArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:organizations::\\d{12}:organization\\/o-[a-z0-9]{10,32}$"
      }
    },
    "com.amazonaws.s3control#BadRequestException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#Boolean": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#BucketAlreadyExists": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>The requested Outposts bucket name is not available. The bucket namespace is shared by\n         all users of the Outposts in this Region. Select a different name and try\n         again.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#BucketAlreadyOwnedByYou": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>The Outposts bucket you tried to create already exists, and you own it. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#BucketCannedACL": {
      "type": "enum",
      "members": {
        "private": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "private"
          }
        },
        "public_read": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "public-read"
          }
        },
        "public_read_write": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "public-read-write"
          }
        },
        "authenticated_read": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "authenticated-read"
          }
        }
      }
    },
    "com.amazonaws.s3control#BucketIdentifierString": {
      "type": "string"
    },
    "com.amazonaws.s3control#BucketLevel": {
      "type": "structure",
      "members": {
        "ActivityMetrics": {
          "target": "com.amazonaws.s3control#ActivityMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for the bucket-level activity metrics for S3 Storage Lens.</p>"
          }
        },
        "PrefixLevel": {
          "target": "com.amazonaws.s3control#PrefixLevel",
          "traits": {
            "smithy.api#documentation": "<p>A container for the prefix-level metrics for S3 Storage Lens. </p>"
          }
        },
        "AdvancedCostOptimizationMetrics": {
          "target": "com.amazonaws.s3control#AdvancedCostOptimizationMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for bucket-level advanced cost-optimization metrics for S3 Storage Lens.</p>"
          }
        },
        "AdvancedDataProtectionMetrics": {
          "target": "com.amazonaws.s3control#AdvancedDataProtectionMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for bucket-level advanced data-protection metrics for S3 Storage Lens.</p>"
          }
        },
        "DetailedStatusCodesMetrics": {
          "target": "com.amazonaws.s3control#DetailedStatusCodesMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for bucket-level detailed status code metrics for S3 Storage Lens.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the bucket-level configuration for Amazon S3 Storage Lens.</p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#BucketLocationConstraint": {
      "type": "enum",
      "members": {
        "EU": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EU"
          }
        },
        "eu_west_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "eu-west-1"
          }
        },
        "us_west_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "us-west-1"
          }
        },
        "us_west_2": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "us-west-2"
          }
        },
        "ap_south_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ap-south-1"
          }
        },
        "ap_southeast_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ap-southeast-1"
          }
        },
        "ap_southeast_2": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ap-southeast-2"
          }
        },
        "ap_northeast_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ap-northeast-1"
          }
        },
        "sa_east_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "sa-east-1"
          }
        },
        "cn_north_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "cn-north-1"
          }
        },
        "eu_central_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "eu-central-1"
          }
        }
      }
    },
    "com.amazonaws.s3control#BucketName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 255
        }
      }
    },
    "com.amazonaws.s3control#BucketVersioningStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Suspended": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Suspended"
          }
        }
      }
    },
    "com.amazonaws.s3control#Buckets": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3BucketArnString",
        "traits": {
          "smithy.api#xmlName": "Arn"
        }
      }
    },
    "com.amazonaws.s3control#CloudWatchMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container that indicates whether CloudWatch publishing for S3 Storage Lens metrics is enabled. A\n         value of <code>true</code> indicates that CloudWatch publishing for S3 Storage Lens metrics is\n         enabled.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for enabling Amazon CloudWatch publishing for S3 Storage Lens metrics.</p>\n         <p>For more information about publishing S3 Storage Lens metrics to CloudWatch, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_view_metrics_cloudwatch.html\">Monitor\n            S3 Storage Lens metrics in CloudWatch</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#ConfigId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-\\_\\.]+$"
      }
    },
    "com.amazonaws.s3control#ConfirmRemoveSelfBucketAccess": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#ConfirmationRequired": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#ContinuationToken": {
      "type": "string"
    },
    "com.amazonaws.s3control#CreateAccessGrant": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateAccessGrantRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateAccessGrantResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates an access grant that gives a grantee access to your S3 data. The grantee can be an IAM user or role or a directory user, or group. Before you can create a grant, you must have an S3 Access Grants instance in the same Region as the S3 data. You can create an S3 Access Grants instance using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessGrantsInstance.html\">CreateAccessGrantsInstance</a>. You must also have registered at least one S3 data location in your S3 Access Grants instance using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessGrantsLocation.html\">CreateAccessGrantsLocation</a>.  </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:CreateAccessGrant</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>For any directory identity - <code>sso:DescribeInstance</code> and <code>sso:DescribeApplication</code>\n               </p>\n               <p>For directory users - <code>identitystore:DescribeUser</code>\n               </p>\n               <p>For directory groups - <code>identitystore:DescribeGroup</code>\n               </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/accessgrantsinstance/grant",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register. </p>\n         <p>If you are passing the <code>default</code> location, you cannot create an access grant for the entire default location. You must also specify a bucket or a bucket and prefix in the <code>Subprefix</code> field. </p>",
            "smithy.api#required": {}
          }
        },
        "AccessGrantsLocationConfiguration": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration options of the grant location. The grant location is the S3 path to the data to which you are granting access. It contains the <code>S3SubPrefix</code> field. The grant scope is the result of appending the subprefix to the location scope of the registered location.</p>"
          }
        },
        "Grantee": {
          "target": "com.amazonaws.s3control#Grantee",
          "traits": {
            "smithy.api#documentation": "<p>The user, group, or role to which you are granting access. You can grant access to an IAM user or role. If you have added your corporate directory to Amazon Web Services IAM Identity Center and associated your Identity Center instance with your S3 Access Grants instance, the grantee can also be a corporate directory user or group.</p>",
            "smithy.api#required": {}
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of access that you are granting to your S3 data, which can be set to one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.s3control#IdentityCenterApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If an application ARN is included in the request to create an access grant, the grantee can only access the S3 data through this application. </p>"
          }
        },
        "S3PrefixType": {
          "target": "com.amazonaws.s3control#S3PrefixType",
          "traits": {
            "smithy.api#documentation": "<p>The type of <code>S3SubPrefix</code>. The only possible value is <code>Object</code>. Pass this value if the access grant scope is an object. Do not pass this value if the access grant scope is a bucket or a bucket and a prefix. </p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services resource tags that you are adding to the access grant. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the access grant. </p>"
          }
        },
        "AccessGrantId": {
          "target": "com.amazonaws.s3control#AccessGrantId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the access grant. S3 Access Grants auto-generates this ID when you create the access grant.</p>"
          }
        },
        "AccessGrantArn": {
          "target": "com.amazonaws.s3control#AccessGrantArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the access grant. </p>"
          }
        },
        "Grantee": {
          "target": "com.amazonaws.s3control#Grantee",
          "traits": {
            "smithy.api#documentation": "<p>The user, group, or role to which you are granting access. You can grant access to an IAM user or role. If you have added your corporate directory to Amazon Web Services IAM Identity Center and associated your Identity Center instance with your S3 Access Grants instance, the grantee can also be a corporate directory user or group.</p>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register. </p>"
          }
        },
        "AccessGrantsLocationConfiguration": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration options of the grant location. The grant location is the S3 path to the data to which you are granting access. </p>"
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of access that you are granting to your S3 data, which can be set to one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>"
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.s3control#IdentityCenterApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If the grant includes an application ARN, the grantee can only access the S3 data through this application. </p>"
          }
        },
        "GrantScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path of the data to which you are granting access. It is the result of appending the <code>Subprefix</code> to the location scope. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateAccessGrantsInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateAccessGrantsInstanceResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates an S3 Access Grants instance, which serves as a logical grouping for access grants. You can create one S3 Access Grants instance per Region per account. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:CreateAccessGrantsInstance</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>To associate an IAM Identity Center instance with your S3 Access Grants instance, you must also have the <code>sso:DescribeInstance</code>, <code>sso:CreateApplication</code>, <code>sso:PutApplicationGrant</code>, and <code>sso:PutApplicationAuthenticationMethod</code> permissions. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/accessgrantsinstance",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsInstanceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "IdentityCenterArn": {
          "target": "com.amazonaws.s3control#IdentityCenterArn",
          "traits": {
            "smithy.api#documentation": "<p>If you would like to associate your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance, use this field to pass the Amazon Resource Name (ARN) of the Amazon Web Services IAM Identity Center instance that you are associating with your S3 Access Grants instance. An IAM Identity Center instance is your corporate identity directory that you added to the IAM Identity Center. You can use the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ListInstances.html\">ListInstances</a> API operation to retrieve a list of your Identity Center instances and their ARNs. </p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services resource tags that you are adding to the S3 Access Grants instance. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsInstanceResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance. </p>"
          }
        },
        "AccessGrantsInstanceId": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Access Grants instance. The ID is <code>default</code>. You can have one S3 Access Grants instance per Region per account. </p>"
          }
        },
        "AccessGrantsInstanceArn": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 Access Grants instance. </p>"
          }
        },
        "IdentityCenterArn": {
          "target": "com.amazonaws.s3control#IdentityCenterArn",
          "traits": {
            "smithy.api#documentation": "<p>If you associated your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance, this field returns the Amazon Resource Name (ARN) of the IAM Identity Center instance application; a subresource of the original Identity Center instance passed in the request. S3 Access Grants creates this Identity Center application for this specific S3 Access Grants instance.  </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsLocation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateAccessGrantsLocationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateAccessGrantsLocationResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>The S3 data location that you would like to register in your S3 Access Grants instance. Your S3 data must be in the same Region as your S3 Access Grants instance. The location can be one of the following: </p>\n         <ul>\n            <li>\n               <p>The default S3 location <code>s3://</code>\n               </p>\n            </li>\n            <li>\n               <p>A bucket - <code>S3://<bucket-name></code>\n               </p>\n            </li>\n            <li>\n               <p>A bucket and prefix - <code>S3://<bucket-name>/<prefix></code>\n               </p>\n            </li>\n         </ul>\n         <p>When you register a location, you must include the IAM role that has permission to manage the S3 location that you are registering. Give S3 Access Grants permission to assume this role <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-location.html\">using a policy</a>. S3 Access Grants assumes this role to manage access to the location and to vend temporary credentials to grantees or client applications. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:CreateAccessGrantsLocation</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>You must also have the following permission for the specified IAM role: <code>iam:PassRole</code>\n               </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/accessgrantsinstance/location",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsLocationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path to the location that you are registering. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket <code>s3://<bucket></code>, or the S3 path to a bucket and prefix <code>s3://<bucket>/<prefix></code>. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>",
            "smithy.api#required": {}
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services resource tags that you are adding to the S3 Access Grants location. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessGrantsLocationResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you registered the location. </p>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>"
          }
        },
        "AccessGrantsLocationArn": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the location you are registering.</p>"
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 URI path to the location that you are registering. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket, or the S3 path to a bucket and prefix. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>"
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateAccessPointRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateAccessPointResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Creates an access point and associates it with the specified bucket. For more information, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\">Managing\n            Data Access with Amazon S3 Access Points</a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <p></p>\n         <note>\n            <p>S3 on Outposts only supports VPC-style access points. </p>\n            <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\"> Accessing Amazon S3 on Outposts using\n               virtual private cloud (VPC) only access points</a> in the\n               <i>Amazon S3 User Guide</i>.</p>\n         </note>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html#API_control_CreateAccessPoint_Examples\">Examples</a> section.</p>\n         <p></p>\n         <p>The following actions are related to <code>CreateAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\">GetAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\">DeleteAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\">ListAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accesspoint/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateAccessPointForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateAccessPointForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateAccessPointForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Creates an Object Lambda Access Point. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html\">Transforming objects with\n            Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to\n         <code>CreateAccessPointForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\">DeleteAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\">GetAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\">ListAccessPointsForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateAccessPointForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name you want to assign to this Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Configuration": {
          "target": "com.amazonaws.s3control#ObjectLambdaConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Object Lambda Access Point configuration as a JSON document.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessPointForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "ObjectLambdaAccessPointArn": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ARN for the Object Lambda Access Point.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointAlias",
          "traits": {
            "smithy.api#documentation": "<p>The alias of the Object Lambda Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name you want to assign to this access point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket that you want to associate this access point with.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "VpcConfiguration": {
          "target": "com.amazonaws.s3control#VpcConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>If you include this field, Amazon S3 restricts access to this access point to requests from the\n         specified virtual private cloud (VPC).</p>\n         <note>\n            <p>This is required for creating an access point for Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "PublicAccessBlockConfiguration": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> The <code>PublicAccessBlock</code> configuration that you want to apply to the access point.\n      </p>"
          }
        },
        "BucketAccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 bucket associated with this access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateAccessPointResult": {
      "type": "structure",
      "members": {
        "AccessPointArn": {
          "target": "com.amazonaws.s3control#S3AccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the access point.</p>\n         <note>\n            <p>This is only supported by Amazon S3 on Outposts.</p>\n         </note>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name or alias of the access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateBucket": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateBucketRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateBucketResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#BucketAlreadyExists"
        },
        {
          "target": "com.amazonaws.s3control#BucketAlreadyOwnedByYou"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action creates an Amazon S3 on Outposts bucket. To create an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">Create\n               Bucket</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Creates a new Outposts bucket. By creating the bucket, you become the bucket owner. To\n         create an Outposts bucket, you must have S3 on Outposts. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>\n         <p>Not every string is an acceptable bucket name. For information on bucket naming\n         restrictions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/BucketRestrictions.html#bucketnamingrules\">Working with\n            Amazon S3 Buckets</a>.</p>\n         <p>S3 on Outposts buckets support:</p>\n         <ul>\n            <li>\n               <p>Tags</p>\n            </li>\n            <li>\n               <p>LifecycleConfigurations for deleting expired objects</p>\n            </li>\n         </ul>\n         <p>For a complete list of restrictions and Amazon S3 feature limitations on S3 on Outposts, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OnOutpostsRestrictionsLimitations.html\">\n            Amazon S3 on Outposts Restrictions and Limitations</a>.</p>\n         <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts\n         endpoint hostname prefix and <code>x-amz-outpost-id</code> in your API request, see the\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html#API_control_CreateBucket_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>CreateBucket</code> for\n         Amazon S3 on Outposts:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html\">GetBucket</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html\">DeleteBucket</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\">CreateAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\">PutAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {}
      }
    },
    "com.amazonaws.s3control#CreateBucketConfiguration": {
      "type": "structure",
      "members": {
        "LocationConstraint": {
          "target": "com.amazonaws.s3control#BucketLocationConstraint",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Region where the bucket will be created. If you are creating a bucket on\n         the US East (N. Virginia) Region (us-east-1), you do not need to specify the location. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the bucket configuration.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#CreateBucketRequest": {
      "type": "structure",
      "members": {
        "ACL": {
          "target": "com.amazonaws.s3control#BucketCannedACL",
          "traits": {
            "smithy.api#documentation": "<p>The canned ACL to apply to the bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-acl"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "CreateBucketConfiguration": {
          "target": "com.amazonaws.s3control#CreateBucketConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration information for the bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpPayload": {},
            "smithy.api#xmlName": "CreateBucketConfiguration"
          }
        },
        "GrantFullControl": {
          "target": "com.amazonaws.s3control#GrantFullControl",
          "traits": {
            "smithy.api#documentation": "<p>Allows grantee the read, write, read ACP, and write ACP permissions on the\n         bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-grant-full-control"
          }
        },
        "GrantRead": {
          "target": "com.amazonaws.s3control#GrantRead",
          "traits": {
            "smithy.api#documentation": "<p>Allows grantee to list the objects in the bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-grant-read"
          }
        },
        "GrantReadACP": {
          "target": "com.amazonaws.s3control#GrantReadACP",
          "traits": {
            "smithy.api#documentation": "<p>Allows grantee to read the bucket ACL.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-grant-read-acp"
          }
        },
        "GrantWrite": {
          "target": "com.amazonaws.s3control#GrantWrite",
          "traits": {
            "smithy.api#documentation": "<p>Allows grantee to create, overwrite, and delete any object in the bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-grant-write"
          }
        },
        "GrantWriteACP": {
          "target": "com.amazonaws.s3control#GrantWriteACP",
          "traits": {
            "smithy.api#documentation": "<p>Allows grantee to write the ACL for the applicable bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-grant-write-acp"
          }
        },
        "ObjectLockEnabledForBucket": {
          "target": "com.amazonaws.s3control#ObjectLockEnabledForBucket",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether you want S3 Object Lock to be enabled for the new bucket.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-bucket-object-lock-enabled"
          }
        },
        "OutpostId": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength64String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Outposts where the bucket is being created.</p>\n         <note>\n            <p>This ID is required by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-outpost-id",
            "smithy.rules#contextParam": {
              "name": "OutpostId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateBucketResult": {
      "type": "structure",
      "members": {
        "Location": {
          "target": "com.amazonaws.s3control#Location",
          "traits": {
            "smithy.api#documentation": "<p>The location of the bucket.</p>",
            "smithy.api#httpHeader": "Location"
          }
        },
        "BucketArn": {
          "target": "com.amazonaws.s3control#S3RegionalBucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateJobRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateJobResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#BadRequestException"
        },
        {
          "target": "com.amazonaws.s3control#IdempotencyException"
        },
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>This operation creates an S3 Batch Operations job.</p>\n         <p>You can use S3 Batch Operations to perform large-scale batch actions on Amazon S3 objects.\n         Batch Operations can run a single action on lists of Amazon S3 objects that you specify. For more\n         information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>For information about permissions required to use the Batch Operations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Granting permissions for S3 Batch Operations</a> in the <i>Amazon S3\n                     User Guide</i>.</p>\n            </dd>\n         </dl>\n         <p></p>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\">DescribeJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\">ListJobs</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\">UpdateJobPriority</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\">UpdateJobStatus</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_JobOperation.html\">JobOperation</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/jobs",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateJobRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that creates the job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ConfirmationRequired": {
          "target": "com.amazonaws.s3control#ConfirmationRequired",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Indicates whether confirmation is required before Amazon S3 runs the job. Confirmation is\n         only required for jobs created through the Amazon S3 console.</p>"
          }
        },
        "Operation": {
          "target": "com.amazonaws.s3control#JobOperation",
          "traits": {
            "smithy.api#documentation": "<p>The action that you want this job to perform on every object listed in the manifest. For\n         more information about the available actions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-actions.html\">Operations</a> in the\n            <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "Report": {
          "target": "com.amazonaws.s3control#JobReport",
          "traits": {
            "smithy.api#documentation": "<p>Configuration parameters for the optional job-completion report.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientRequestToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength64String",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token to ensure that you don't accidentally submit the same request\n         twice. You can use any string up to the maximum length.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "Manifest": {
          "target": "com.amazonaws.s3control#JobManifest",
          "traits": {
            "smithy.api#documentation": "<p>Configuration parameters for the manifest.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength256String",
          "traits": {
            "smithy.api#documentation": "<p>A description for this job. You can use any string within the permitted length.\n         Descriptions don't need to be unique and can be used for multiple jobs.</p>"
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#JobPriority",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The numerical priority for this job. Higher numbers indicate higher priority.</p>",
            "smithy.api#required": {}
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role that Batch Operations will\n         use to run this job's action on every object in the manifest.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>A set of tags to associate with the S3 Batch Operations job. This is an optional parameter.\n      </p>"
          }
        },
        "ManifestGenerator": {
          "target": "com.amazonaws.s3control#JobManifestGenerator",
          "traits": {
            "smithy.api#documentation": "<p>The attribute container for the ManifestGenerator details. Jobs must be created with\n         either a manifest file or a ManifestGenerator, but not both.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateJobResult": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for this job. Amazon S3 generates this ID automatically and returns it after a\n         successful <code>Create Job</code> request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateMultiRegionAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateMultiRegionAccessPointRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#CreateMultiRegionAccessPointResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Creates a Multi-Region Access Point and associates it with the specified buckets. For more information\n         about creating Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html\">Creating\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>This request is asynchronous, meaning that you might receive a response before the\n         command has completed. When this request provides a response, it provides a token that you\n         can use to monitor the status of the request with\n            <code>DescribeMultiRegionAccessPointOperation</code>.</p>\n         <p>The following actions are related to <code>CreateMultiRegionAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\">GetMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\">ListMultiRegionAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/async-requests/mrap/create",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateMultiRegionAccessPointInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Multi-Region Access Point associated with this request.</p>",
            "smithy.api#required": {}
          }
        },
        "PublicAccessBlock": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration"
        },
        "Regions": {
          "target": "com.amazonaws.s3control#RegionCreationList",
          "traits": {
            "smithy.api#documentation": "<p>The buckets in different Regions that are associated with the Multi-Region Access Point.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the information associated with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a> request. </p>"
      }
    },
    "com.amazonaws.s3control#CreateMultiRegionAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point. The owner of the Multi-Region Access Point also must own\n         the underlying buckets.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token used to identify the request and guarantee that requests are\n         unique.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "Details": {
          "target": "com.amazonaws.s3control#CreateMultiRegionAccessPointInput",
          "traits": {
            "smithy.api#documentation": "<p>A container element containing details about the Multi-Region Access Point.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreateMultiRegionAccessPointResult": {
      "type": "structure",
      "members": {
        "RequestTokenARN": {
          "target": "com.amazonaws.s3control#AsyncRequestTokenARN",
          "traits": {
            "smithy.api#documentation": "<p>The request token associated with the request. You can use this token with <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous\n         requests.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#CreateStorageLensGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#CreateStorageLensGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p> Creates a new S3 Storage Lens group and associates it with the specified Amazon Web Services account ID. An\n         S3 Storage Lens group is a custom grouping of objects based on prefix, suffix, object tags,\n         object size, object age, or a combination of these filters. For each Storage Lens group\n         that you’ve created, you can also optionally add Amazon Web Services resource tags. For more information\n         about S3 Storage Lens groups, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-lens-groups-overview.html\">Working with S3 Storage Lens\n            groups</a>.</p>\n         <p>To use this operation, you must have the permission to perform the\n            <code>s3:CreateStorageLensGroup</code> action. If you’re trying to create a Storage Lens\n         group with Amazon Web Services resource tags, you must also have permission to perform the\n            <code>s3:TagResource</code> action. For more information about the required Storage Lens\n         Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about Storage Lens groups errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3LensErrorCodeList\">List of Amazon S3 Storage\n            Lens error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/storagelensgroup",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#CreateStorageLensGroupRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID that the Storage Lens group is created from and associated with.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "StorageLensGroup": {
          "target": "com.amazonaws.s3control#StorageLensGroup",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Storage Lens group configuration.\n</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services resource tags that you're adding to your Storage Lens group. This parameter is optional.\n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#CreationDate": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#CreationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#Credentials": {
      "type": "structure",
      "members": {
        "AccessKeyId": {
          "target": "com.amazonaws.s3control#AccessKeyId",
          "traits": {
            "smithy.api#documentation": "<p>The unique access key ID of the Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>"
          }
        },
        "SecretAccessKey": {
          "target": "com.amazonaws.s3control#SecretAccessKey",
          "traits": {
            "smithy.api#documentation": "<p>The secret access key of the Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>"
          }
        },
        "SessionToken": {
          "target": "com.amazonaws.s3control#SessionToken",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services STS temporary credential that S3 Access Grants vends to grantees and client applications. </p>"
          }
        },
        "Expiration": {
          "target": "com.amazonaws.s3control#Expiration",
          "traits": {
            "smithy.api#documentation": "<p>The expiration date and time of the temporary credential that S3 Access Grants vends to grantees and client applications. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Amazon Web Services Security Token Service temporary credential that S3 Access Grants vends to grantees and client applications. </p>",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.s3control#Date": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#Days": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#DaysAfterInitiation": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrant": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessGrantRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes the access grant from the S3 Access Grants instance. You cannot undo an access grant deletion and the grantee will no longer have access to the S3 data.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:DeleteAccessGrant</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accessgrantsinstance/grant/{AccessGrantId}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantId": {
          "target": "com.amazonaws.s3control#AccessGrantId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the access grant. S3 Access Grants auto-generates this ID when you create the access grant.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessGrantsInstanceRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes your S3 Access Grants instance. You must first delete the access grants and locations before S3 Access Grants can delete the instance. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessGrant.html\">DeleteAccessGrant</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessGrantsLocation.html\">DeleteAccessGrantsLocation</a>. If you have associated an IAM Identity Center instance with your S3 Access Grants instance, you must first dissassociate the Identity Center instance from the S3 Access Grants instance before you can delete the S3 Access Grants instance. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_AssociateAccessGrantsIdentityCenter.html\">AssociateAccessGrantsIdentityCenter</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DissociateAccessGrantsIdentityCenter.html\">DissociateAccessGrantsIdentityCenter</a>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:DeleteAccessGrantsInstance</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accessgrantsinstance",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsInstanceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsInstanceResourcePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessGrantsInstanceResourcePolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes the resource policy of the S3 Access Grants instance. The resource policy is used to manage cross-account access to your S3 Access Grants instance. By deleting the resource policy, you delete any cross-account permissions to your S3 Access Grants instance. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:DeleteAccessGrantsInstanceResourcePolicy</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accessgrantsinstance/resourcepolicy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsInstanceResourcePolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsLocation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessGrantsLocationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Deregisters a location from your S3 Access Grants instance. You can only delete a location registration from an S3 Access Grants instance if there are no grants associated with this location. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessGrant.html\">Delete a grant</a> for information on how to delete grants. You need to have at least one registered location in your S3 Access Grants instance in order to create access grants. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:DeleteAccessGrantsLocation</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accessgrantsinstance/location/{AccessGrantsLocationId}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessGrantsLocationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location that you are deregistering from your S3 Access Grants instance. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessPointRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes the specified access point.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html#API_control_DeleteAccessPoint_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>DeleteAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\">CreateAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\">GetAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\">ListAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accesspoint/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessPointForObjectLambdaRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes the specified Object Lambda Access Point.</p>\n         <p>The following actions are related to\n         <code>DeleteAccessPointForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\">CreateAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\">GetAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\">ListAccessPointsForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessPointPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes the access point policy for the specified access point.</p>\n         <p></p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html#API_control_DeleteAccessPointPolicy_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>DeleteAccessPointPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\">PutAccessPointPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html\">GetAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accesspoint/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointPolicyForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteAccessPointPolicyForObjectLambdaRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Removes the resource policy for an Object Lambda Access Point.</p>\n         <p>The following actions are related to\n         <code>DeleteAccessPointPolicyForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html\">GetAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html\">PutAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointPolicyForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point you want to delete the policy for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point whose policy you want to delete.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point you want to delete.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteBucket": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteBucketRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action deletes an Amazon S3 on Outposts bucket. To delete an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Deletes the Amazon S3 on Outposts bucket. All objects (including all object versions and\n         delete markers) in the bucket must be deleted before the bucket itself can be deleted. For\n         more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in\n            <i>Amazon S3 User Guide</i>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html#API_control_DeleteBucket_Examples\">Examples</a> section.</p>\n         <p class=\"title\">\n            <b>Related Resources</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\">CreateBucket</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html\">GetBucket</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\">DeleteObject</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/bucket/{Bucket}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteBucketLifecycleConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteBucketLifecycleConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action deletes an Amazon S3 on Outposts bucket's lifecycle configuration. To delete\n            an S3 bucket's lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\">DeleteBucketLifecycle</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Deletes the lifecycle configuration from the specified Outposts bucket.\n         Amazon S3 on Outposts removes all the lifecycle configuration rules in the lifecycle subresource\n         associated with the bucket. Your objects never expire, and Amazon S3 on Outposts no longer\n         automatically deletes any objects on the basis of rules contained in the deleted lifecycle\n         configuration. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in\n            <i>Amazon S3 User Guide</i>.</p>\n         <p>To use this operation, you must have permission to perform the\n            <code>s3-outposts:PutLifecycleConfiguration</code> action. By default, the bucket owner\n         has this permission and the Outposts bucket owner can grant this permission to\n         others.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html#API_control_DeleteBucketLifecycleConfiguration_Examples\">Examples</a> section.</p>\n         <p>For more information about object expiration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions\">Elements to Describe Lifecycle Actions</a>.</p>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/bucket/{Bucket}/lifecycleconfiguration",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteBucketLifecycleConfigurationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the lifecycle configuration to delete.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteBucketPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteBucketPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action deletes an Amazon S3 on Outposts bucket policy. To delete an S3 bucket policy,\n            see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\">DeleteBucketPolicy</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>This implementation of the DELETE action uses the policy subresource to delete the\n         policy of a specified Amazon S3 on Outposts bucket. If you are using an identity other than the\n         root user of the Amazon Web Services account that owns the bucket, the calling identity must have the\n            <code>s3-outposts:DeleteBucketPolicy</code> permissions on the specified Outposts bucket\n         and belong to the bucket owner's account to use this action. For more information, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>\n         <p>If you don't have <code>DeleteBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n            Access Denied</code> error. If you have the correct permissions, but you're not using an\n         identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n            Allowed</code> error. </p>\n         <important>\n            <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can\n            always use this action, even if the policy explicitly denies the root user the ability\n            to perform this action.</p>\n         </important>\n         <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n            Policies</a>. </p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html#API_control_DeleteBucketPolicy_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>DeleteBucketPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html\">GetBucketPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html\">PutBucketPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/bucket/{Bucket}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteBucketPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteBucketReplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteBucketReplicationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation deletes an Amazon S3 on Outposts bucket's replication configuration. To\n            delete an S3 bucket's replication configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html\">DeleteBucketReplication</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Deletes the replication configuration from the specified S3 on Outposts bucket.</p>\n         <p>To use this operation, you must have permissions to perform the\n            <code>s3-outposts:PutReplicationConfiguration</code> action. The Outposts bucket owner\n         has this permission by default and can grant it to others. For more information about\n         permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\">Setting up IAM with\n            S3 on Outposts</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\">Managing access to\n            S3 on Outposts buckets</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>It can take a while to propagate <code>PUT</code> or <code>DELETE</code> requests for\n            a replication configuration to all S3 on Outposts systems. Therefore, the replication\n            configuration that's returned by a <code>GET</code> request soon after a\n               <code>PUT</code> or <code>DELETE</code> request might return a more recent result\n            than what's on the Outpost. If an Outpost is offline, the delay in updating the\n            replication configuration on that Outpost can be significant.</p>\n         </note>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html#API_control_DeleteBucketReplication_Examples\">Examples</a> section.</p>\n         <p>For information about S3 replication on Outposts configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\">Replicating objects for S3 on Outposts</a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <p>The following operations are related to <code>DeleteBucketReplication</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html\">PutBucketReplication</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html\">GetBucketReplication</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/bucket/{Bucket}/replication",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteBucketReplicationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket to delete the replication configuration\n         for.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the S3 on Outposts bucket to delete the replication configuration for.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteBucketRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID that owns the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket being deleted.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteBucketTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteBucketTaggingRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action deletes an Amazon S3 on Outposts bucket's tags. To delete an S3 bucket tags,\n            see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\">DeleteBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Deletes the tags from the Outposts bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in <i>Amazon S3 User Guide</i>.</p>\n         <p>To use this action, you must have permission to perform the\n            <code>PutBucketTagging</code> action. By default, the bucket owner has this permission\n         and can grant this permission to others. </p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html#API_control_DeleteBucketTagging_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>DeleteBucketTagging</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html\">GetBucketTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html\">PutBucketTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/bucket/{Bucket}/tagging",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteBucketTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket tag set to be removed.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The bucket ARN that has the tag set to be removed.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteJobTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteJobTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#DeleteJobTaggingResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes the entire tag set from the specified S3 Batch Operations job.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>DeleteJobTagging</code> operation, you must have permission to\n                  perform the <code>s3:DeleteJobTagging</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\">Controlling\n                     access and labeling jobs using tags</a> in the\n                  <i>Amazon S3 User Guide</i>.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\">GetJobTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html\">PutJobTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/jobs/{JobId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteJobTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the S3 Batch Operations job whose tags you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteJobTaggingResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#DeleteMarkerReplication": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#DeleteMarkerReplicationStatus",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether to replicate delete markers.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies whether S3 on Outposts replicates delete markers. If you specify a\n            <code>Filter</code> element in your replication configuration, you must also include a\n            <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a\n            <code>Tag</code> element, the <code>DeleteMarkerReplication</code> element's\n            <code>Status</code> child element must be set to <code>Disabled</code>, because\n         S3 on Outposts does not support replicating delete markers for tag-based rules.</p>\n         <p>For more information about delete marker replication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html#outposts-replication-what-is-replicated\">How delete operations affect replication</a> in the\n            <i>Amazon S3 User Guide</i>. </p>"
      }
    },
    "com.amazonaws.s3control#DeleteMarkerReplicationStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteMultiRegionAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteMultiRegionAccessPointRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#DeleteMultiRegionAccessPointResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes a Multi-Region Access Point. This action does not delete the buckets associated with the Multi-Region Access Point,\n         only the Multi-Region Access Point itself.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>This request is asynchronous, meaning that you might receive a response before the\n         command has completed. When this request provides a response, it provides a token that you\n         can use to monitor the status of the request with\n            <code>DescribeMultiRegionAccessPointOperation</code>.</p>\n         <p>The following actions are related to <code>DeleteMultiRegionAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\">GetMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\">ListMultiRegionAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/async-requests/mrap/delete",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteMultiRegionAccessPointInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Multi-Region Access Point associated with this request.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the information associated with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a> request.</p>"
      }
    },
    "com.amazonaws.s3control#DeleteMultiRegionAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token used to identify the request and guarantee that requests are\n         unique.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "Details": {
          "target": "com.amazonaws.s3control#DeleteMultiRegionAccessPointInput",
          "traits": {
            "smithy.api#documentation": "<p>A container element containing details about the Multi-Region Access Point.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteMultiRegionAccessPointResult": {
      "type": "structure",
      "members": {
        "RequestTokenARN": {
          "target": "com.amazonaws.s3control#AsyncRequestTokenARN",
          "traits": {
            "smithy.api#documentation": "<p>The request token associated with the request. You can use this token with <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous\n         requests.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#DeletePublicAccessBlock": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeletePublicAccessBlockRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Removes the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For more\n         information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\"> Using Amazon S3 block\n            public access</a>.</p>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/configuration/publicAccessBlock",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeletePublicAccessBlockRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration\n         you want to remove.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteStorageLensConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes the Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your storage\n            activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:DeleteStorageLensConfiguration</code> action. For more information, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to\n               use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/storagelens/{ConfigId}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensConfigurationRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensConfigurationTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteStorageLensConfigurationTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#DeleteStorageLensConfigurationTaggingResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Deletes the Amazon S3 Storage Lens configuration tags. For more information about S3 Storage Lens, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your\n            storage activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:DeleteStorageLensConfigurationTagging</code> action. For more information,\n            see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to\n               use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/storagelens/{ConfigId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensConfigurationTaggingRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensConfigurationTaggingResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DeleteStorageLensGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>\nDeletes an existing S3 Storage Lens group.</p>\n         <p>To use this operation, you must have the permission to perform the\n      <code>s3:DeleteStorageLensGroup</code> action. For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about Storage Lens groups errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3LensErrorCodeList\">List of Amazon S3 Storage\n      Lens error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/storagelensgroup/{Name}",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DeleteStorageLensGroupRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#StorageLensGroupName",
          "traits": {
            "smithy.api#documentation": "<p>\nThe name of the Storage Lens group that you're trying to delete.\n</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID used to create the Storage Lens group that you're trying to delete.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DescribeJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DescribeJobRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#DescribeJobResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#BadRequestException"
        },
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the configuration parameters and status for a Batch Operations job. For more\n         information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the <code>DescribeJob</code> operation, you must have permission to perform the <code>s3:DescribeJob</code> action.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\">ListJobs</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\">UpdateJobPriority</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\">UpdateJobStatus</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/jobs/{JobId}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DescribeJobRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the job whose information you want to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DescribeJobResult": {
      "type": "structure",
      "members": {
        "Job": {
          "target": "com.amazonaws.s3control#JobDescriptor",
          "traits": {
            "smithy.api#documentation": "<p>Contains the configuration parameters and status for the job specified in the\n            <code>Describe Job</code> request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperationResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Retrieves the status of an asynchronous request to manage a Multi-Region Access Point. For more information\n         about managing Multi-Region Access Points and how asynchronous requests work, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\">GetMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\">ListMultiRegionAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/async-requests/mrap/{RequestTokenARN+}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "RequestTokenARN": {
          "target": "com.amazonaws.s3control#AsyncRequestTokenARN",
          "traits": {
            "smithy.api#documentation": "<p>The request token associated with the request you want to know about. This request token\n         is returned as part of the response when you make an asynchronous request. You provide this\n         token to query about the status of the asynchronous action.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DescribeMultiRegionAccessPointOperationResult": {
      "type": "structure",
      "members": {
        "AsyncOperation": {
          "target": "com.amazonaws.s3control#AsyncOperation",
          "traits": {
            "smithy.api#documentation": "<p>A container element containing the details of the asynchronous operation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#Destination": {
      "type": "structure",
      "members": {
        "Account": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The destination bucket owner's account ID. </p>"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketIdentifierString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the access point for the destination bucket where you want\n         S3 on Outposts to store the replication results.</p>",
            "smithy.api#required": {}
          }
        },
        "ReplicationTime": {
          "target": "com.amazonaws.s3control#ReplicationTime",
          "traits": {
            "smithy.api#documentation": "<p>A container that specifies S3 Replication Time Control (S3 RTC) settings, including whether S3 RTC is enabled\n         and the time when all objects and operations on objects must be replicated. Must be\n         specified together with a <code>Metrics</code> block. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "AccessControlTranslation": {
          "target": "com.amazonaws.s3control#AccessControlTranslation",
          "traits": {
            "smithy.api#documentation": "<p>Specify this property only in a cross-account scenario (where the source and destination\n         bucket owners are not the same), and you want to change replica ownership to the\n         Amazon Web Services account that owns the destination bucket. If this property is not specified in the\n         replication configuration, the replicas are owned by same Amazon Web Services account that owns the\n         source object.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "EncryptionConfiguration": {
          "target": "com.amazonaws.s3control#EncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A container that provides information about encryption. If\n            <code>SourceSelectionCriteria</code> is specified, you must specify this element.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "Metrics": {
          "target": "com.amazonaws.s3control#Metrics",
          "traits": {
            "smithy.api#documentation": "<p> A container that specifies replication metrics-related settings. </p>"
          }
        },
        "StorageClass": {
          "target": "com.amazonaws.s3control#ReplicationStorageClass",
          "traits": {
            "smithy.api#documentation": "<p> The storage class to use when replicating objects. All objects stored on S3 on Outposts\n         are stored in the <code>OUTPOSTS</code> storage class. S3 on Outposts uses the\n            <code>OUTPOSTS</code> storage class to create the object replicas. </p>\n         <note>\n            <p>Values other than <code>OUTPOSTS</code> aren't supported by Amazon S3 on Outposts. </p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies information about the replication destination bucket and its settings for an\n         S3 on Outposts replication configuration.</p>"
      }
    },
    "com.amazonaws.s3control#DetailedStatusCodesMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container that indicates whether detailed status code metrics are enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container element for Amazon S3 Storage Lens detailed status code metrics. Detailed status\n         code metrics generate metrics for HTTP status codes, such as <code>200 OK</code>, <code>403\n            Forbidden</code>, <code>503 Service Unavailable</code> and others. </p>\n         <p>For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens.html\">Assessing your storage activity and usage with S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#DissociateAccessGrantsIdentityCenter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#DissociateAccessGrantsIdentityCenterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>Dissociates the Amazon Web Services IAM Identity Center instance from the S3 Access Grants instance. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:DissociateAccessGrantsIdentityCenter</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>You must have the <code>sso:DeleteApplication</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/accessgrantsinstance/identitycenter",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#DissociateAccessGrantsIdentityCenterRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#DurationSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 900,
          "max": 43200
        }
      }
    },
    "com.amazonaws.s3control#EncryptionConfiguration": {
      "type": "structure",
      "members": {
        "ReplicaKmsKeyID": {
          "target": "com.amazonaws.s3control#ReplicaKmsKeyID",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ID of the customer managed KMS key that's stored in Key Management Service (KMS)\n         for the destination bucket. This ID is either the Amazon Resource Name (ARN) for the\n         KMS key or the alias ARN for the KMS key. Amazon S3 uses this KMS key to encrypt\n         replica objects. Amazon S3 supports only symmetric encryption KMS keys. For more information,\n         see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#symmetric-cmks\">Symmetric encryption\n            KMS keys</a> in the <i>Amazon Web Services Key Management Service Developer\n            Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies encryption-related information for an Amazon S3 bucket that is a destination for\n         replicated objects.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#Endpoints": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.s3control#NonEmptyMaxLength64String"
      },
      "value": {
        "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String"
      }
    },
    "com.amazonaws.s3control#EstablishedMultiRegionAccessPointPolicy": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The details of the last established policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The last established access control policy for a Multi-Region Access Point.</p>\n         <p>When you update the policy, the update is first listed as the proposed policy. After the\n         update is finished and all Regions have been updated, the proposed policy is listed as the\n         established policy. If both policies have the same version number, the proposed policy is\n         the established policy.</p>"
      }
    },
    "com.amazonaws.s3control#ExceptionMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.s3control#Exclude": {
      "type": "structure",
      "members": {
        "Buckets": {
          "target": "com.amazonaws.s3control#Buckets",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens bucket excludes.</p>"
          }
        },
        "Regions": {
          "target": "com.amazonaws.s3control#Regions",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens Region excludes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for what Amazon S3 Storage Lens will exclude.</p>"
      }
    },
    "com.amazonaws.s3control#ExistingObjectReplication": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#ExistingObjectReplicationStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 replicates existing source bucket objects. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An optional configuration to replicate existing source bucket objects. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#ExistingObjectReplicationStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#Expiration": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#ExpirationStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#ExpiredObjectDeleteMarker": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#Format": {
      "type": "enum",
      "members": {
        "CSV": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CSV"
          }
        },
        "Parquet": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Parquet"
          }
        }
      }
    },
    "com.amazonaws.s3control#FunctionArnString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?$"
      }
    },
    "com.amazonaws.s3control#GeneratedManifestEncryption": {
      "type": "structure",
      "members": {
        "SSES3": {
          "target": "com.amazonaws.s3control#SSES3Encryption",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the use of SSE-S3 to encrypt generated manifest objects.</p>",
            "smithy.api#xmlName": "SSE-S3"
          }
        },
        "SSEKMS": {
          "target": "com.amazonaws.s3control#SSEKMSEncryption",
          "traits": {
            "smithy.api#documentation": "<p>Configuration details on how SSE-KMS is used to encrypt generated manifest\n         objects.</p>",
            "smithy.api#xmlName": "SSE-KMS"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The encryption configuration to use when storing the generated manifest.</p>"
      }
    },
    "com.amazonaws.s3control#GeneratedManifestFormat": {
      "type": "enum",
      "members": {
        "S3InventoryReport_CSV_20211130": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3InventoryReport_CSV_20211130"
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrant": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessGrantRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessGrantResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Get the details of an access grant from your S3 Access Grants instance.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetAccessGrant</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/grant/{AccessGrantId}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrantRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantId": {
          "target": "com.amazonaws.s3control#AccessGrantId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the access grant. S3 Access Grants auto-generates this ID when you create the access grant.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the access grant. </p>"
          }
        },
        "AccessGrantId": {
          "target": "com.amazonaws.s3control#AccessGrantId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the access grant. S3 Access Grants auto-generates this ID when you create the access grant.</p>"
          }
        },
        "AccessGrantArn": {
          "target": "com.amazonaws.s3control#AccessGrantArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the access grant. </p>"
          }
        },
        "Grantee": {
          "target": "com.amazonaws.s3control#Grantee",
          "traits": {
            "smithy.api#documentation": "<p>The user, group, or role to which you are granting access. You can grant access to an IAM user or role. If you have added a corporate directory to Amazon Web Services IAM Identity Center and associated this Identity Center instance with the S3 Access Grants instance, the grantee can also be a corporate directory user or group.</p>"
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of permission that was granted in the access grant. Can be one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register. </p>"
          }
        },
        "AccessGrantsLocationConfiguration": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration options of the grant location. The grant location is the S3 path to the data to which you are granting access. </p>"
          }
        },
        "GrantScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path of the data to which you are granting access. It is the result of appending the <code>Subprefix</code> to the location scope.</p>"
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.s3control#IdentityCenterApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If the grant includes an application ARN, the grantee can only access the S3 data through this application.  </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the S3 Access Grants instance for a Region in your account. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetAccessGrantsInstance</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefix": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefixRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefixResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Retrieve the S3 Access Grants instance that contains a particular prefix.  </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetAccessGrantsInstanceForPrefix</code> permission for the caller account to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>The prefix owner account must grant you the following permissions to their S3 Access Grants instance: <code>s3:GetAccessGrantsInstanceForPrefix</code>. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/prefix",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefixRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "S3Prefix": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 prefix of the access grants that you would like to retrieve.</p>",
            "smithy.api#httpQuery": "s3prefix",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceForPrefixResult": {
      "type": "structure",
      "members": {
        "AccessGrantsInstanceArn": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 Access Grants instance. </p>"
          }
        },
        "AccessGrantsInstanceId": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Access Grants instance. The ID is <code>default</code>. You can have one S3 Access Grants instance per Region per account. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns the resource policy of the S3 Access Grants instance. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetAccessGrantsInstanceResourcePolicy</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/resourcepolicy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceResourcePolicyResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#PolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The resource policy of the S3 Access Grants instance.</p>"
          }
        },
        "Organization": {
          "target": "com.amazonaws.s3control#Organization",
          "traits": {
            "smithy.api#documentation": "<p>The Organization of the resource policy of the S3 Access Grants instance.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance resource policy. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsInstanceResult": {
      "type": "structure",
      "members": {
        "AccessGrantsInstanceArn": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 Access Grants instance. </p>"
          }
        },
        "AccessGrantsInstanceId": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Access Grants instance. The ID is <code>default</code>. You can have one S3 Access Grants instance per Region per account. </p>"
          }
        },
        "IdentityCenterArn": {
          "target": "com.amazonaws.s3control#IdentityCenterArn",
          "traits": {
            "smithy.api#documentation": "<p>If you associated your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance, this field returns the Amazon Resource Name (ARN) of the Amazon Web Services IAM Identity Center instance application; a subresource of the original Identity Center instance. S3 Access Grants creates this Identity Center application for the specific S3 Access Grants instance. </p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsLocation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessGrantsLocationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessGrantsLocationResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the details of a particular location registered in your S3 Access Grants instance. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetAccessGrantsLocation</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/location/{AccessGrantsLocationId}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsLocationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location that you are retrieving. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessGrantsLocationResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you registered the location. </p>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>"
          }
        },
        "AccessGrantsLocationArn": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the registered location. </p>"
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 URI path to the registered location. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket, or the S3 path to a bucket and prefix. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>"
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns configuration information about the specified access point.</p>\n         <p></p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>GetAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\">CreateAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\">DeleteAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPoints.html\">ListAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspoint/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns configuration for an Object Lambda Access Point.</p>\n         <p>The following actions are related to\n            <code>GetAccessPointConfigurationForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointConfigurationForObjectLambda.html\">PutAccessPointConfigurationForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/configuration",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point you want to return the configuration for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointConfigurationForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "Configuration": {
          "target": "com.amazonaws.s3control#ObjectLambdaConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Object Lambda Access Point configuration document.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns configuration information about the specified Object Lambda Access Point</p>\n         <p>The following actions are related to <code>GetAccessPointForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\">CreateAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\">DeleteAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListAccessPointsForObjectLambda.html\">ListAccessPointsForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>"
          }
        },
        "PublicAccessBlockConfiguration": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration to block all public access. This setting is turned on and can not be\n         edited. </p>"
          }
        },
        "CreationDate": {
          "target": "com.amazonaws.s3control#CreationDate",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the specified Object Lambda Access Point was created.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointAlias",
          "traits": {
            "smithy.api#documentation": "<p>The alias of the Object Lambda Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns the access point policy associated with the specified access point.</p>\n         <p>The following actions are related to <code>GetAccessPointPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html\">PutAccessPointPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html\">DeleteAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspoint/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns the resource policy for an Object Lambda Access Point.</p>\n         <p>The following actions are related to\n         <code>GetAccessPointPolicyForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html\">DeleteAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicyForObjectLambda.html\">PutAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#ObjectLambdaPolicy",
          "traits": {
            "smithy.api#documentation": "<p>Object Lambda Access Point resource policy document.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point whose policy you want to retrieve.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The access point policy associated with the specified access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyStatusResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Indicates whether the specified access point currently has a policy that allows public access.\n         For more information about public access through access points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\">Managing Data Access with Amazon S3\n            access points</a> in the <i>Amazon S3 User Guide</i>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspoint/{Name}/policyStatus",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns the status of the resource policy associated with an Object Lambda Access Point.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/policyStatus",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatusForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "PolicyStatus": {
          "target": "com.amazonaws.s3control#PolicyStatus"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatusRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point whose policy status you want to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointPolicyStatusResult": {
      "type": "structure",
      "members": {
        "PolicyStatus": {
          "target": "com.amazonaws.s3control#PolicyStatus",
          "traits": {
            "smithy.api#documentation": "<p>Indicates the current policy status of the specified access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the account that owns the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point whose configuration information you want to retrieve.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetAccessPointResult": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the specified access point.</p>"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket associated with the specified access point.</p>"
          }
        },
        "NetworkOrigin": {
          "target": "com.amazonaws.s3control#NetworkOrigin",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether this access point allows access from the public internet. If\n            <code>VpcConfiguration</code> is specified for this access point, then\n            <code>NetworkOrigin</code> is <code>VPC</code>, and the access point doesn't allow access from\n         the public internet. Otherwise, <code>NetworkOrigin</code> is <code>Internet</code>, and\n         the access point allows access from the public internet, subject to the access point and bucket access\n         policies.</p>\n         <p>This will always be true for an Amazon S3 on Outposts access point</p>"
          }
        },
        "VpcConfiguration": {
          "target": "com.amazonaws.s3control#VpcConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Contains the virtual private cloud (VPC) configuration for the specified access point.</p>\n         <note>\n            <p>This element is empty if this access point is an Amazon S3 on Outposts access point that is used by other\n               Amazon Web Services.</p>\n         </note>"
          }
        },
        "PublicAccessBlockConfiguration": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration"
        },
        "CreationDate": {
          "target": "com.amazonaws.s3control#CreationDate",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the specified access point was created.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#Alias",
          "traits": {
            "smithy.api#documentation": "<p>The name or alias of the access point.</p>"
          }
        },
        "AccessPointArn": {
          "target": "com.amazonaws.s3control#S3AccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the access point.</p>"
          }
        },
        "Endpoints": {
          "target": "com.amazonaws.s3control#Endpoints",
          "traits": {
            "smithy.api#documentation": "<p>The VPC endpoint for the access point.</p>"
          }
        },
        "BucketAccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 bucket associated with this access point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucket": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>Gets an Amazon S3 on Outposts bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\"> Using Amazon S3 on Outposts</a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         </note>\n         <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the\n         Outposts bucket, the calling identity must have the <code>s3-outposts:GetBucket</code>\n         permissions on the specified Outposts bucket and belong to the Outposts bucket owner's\n         account in order to use this action. Only users from Outposts bucket owner account with\n         the right permissions can perform actions on an Outposts bucket. </p>\n         <p> If you don't have <code>s3-outposts:GetBucket</code> permissions or you're not using an\n         identity that belongs to the bucket owner's account, Amazon S3 returns a <code>403 Access\n            Denied</code> error.</p>\n         <p>The following actions are related to <code>GetBucket</code> for Amazon S3 on Outposts:</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucket.html#API_control_GetBucket_Examples\">Examples</a> section.</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\">CreateBucket</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucket.html\">DeleteBucket</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketLifecycleConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketLifecycleConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketLifecycleConfigurationResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action gets an Amazon S3 on Outposts bucket's lifecycle configuration. To get an S3\n            bucket's lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.\n         </p>\n         </note>\n         <p>Returns the lifecycle configuration information set on the Outposts bucket. For more\n         information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> and for\n         information about lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\"> Object Lifecycle\n            Management</a> in <i>Amazon S3 User Guide</i>.</p>\n         <p>To use this action, you must have permission to perform the\n            <code>s3-outposts:GetLifecycleConfiguration</code> action. The Outposts bucket owner\n         has this permission, by default. The bucket owner can grant this permission to others. For\n         more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\">Managing\n            Access Permissions to Your Amazon S3 Resources</a>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html#API_control_GetBucketLifecycleConfiguration_Examples\">Examples</a> section.</p>\n         <p>\n            <code>GetBucketLifecycleConfiguration</code> has the following special error:</p>\n         <ul>\n            <li>\n               <p>Error code: <code>NoSuchLifecycleConfiguration</code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: The lifecycle configuration does not exist.</p>\n                  </li>\n                  <li>\n                     <p>HTTP Status Code: 404 Not Found</p>\n                  </li>\n                  <li>\n                     <p>SOAP Fault Code Prefix: Client</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>The following actions are related to\n         <code>GetBucketLifecycleConfiguration</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html\">DeleteBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}/lifecycleconfiguration",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketLifecycleConfigurationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketLifecycleConfigurationResult": {
      "type": "structure",
      "members": {
        "Rules": {
          "target": "com.amazonaws.s3control#LifecycleRules",
          "traits": {
            "smithy.api#documentation": "<p>Container for the lifecycle rule of the Outposts bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucketPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketPolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action gets a bucket policy for an Amazon S3 on Outposts bucket. To get a policy for\n            an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketPolicy.html\">GetBucketPolicy</a> in the\n               <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Returns the policy of a specified Outposts bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the\n         bucket, the calling identity must have the <code>GetBucketPolicy</code> permissions on the\n         specified bucket and belong to the bucket owner's account in order to use this\n         action.</p>\n         <p>Only users from Outposts bucket owner account with the right permissions can perform\n         actions on an Outposts bucket. If you don't have <code>s3-outposts:GetBucketPolicy</code>\n         permissions or you're not using an identity that belongs to the bucket owner's account,\n         Amazon S3 returns a <code>403 Access Denied</code> error.</p>\n         <important>\n            <p>As a security precaution, the root user of the Amazon Web Services account that owns a bucket can\n            always use this action, even if the policy explicitly denies the root user the ability\n            to perform this action.</p>\n         </important>\n         <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n            Policies</a>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html#API_control_GetBucketPolicy_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>GetBucketPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html\">PutBucketPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html\">DeleteBucketPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketPolicyResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The policy of the Outposts bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucketReplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketReplicationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketReplicationResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation gets an Amazon S3 on Outposts bucket's replication configuration. To get an\n            S3 bucket's replication configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html\">GetBucketReplication</a>\n            in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Returns the replication configuration of an S3 on Outposts bucket. For more information\n         about S3 on Outposts, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the\n            <i>Amazon S3 User Guide</i>. For information about S3 replication on Outposts\n         configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\">Replicating objects for\n            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>It can take a while to propagate <code>PUT</code> or <code>DELETE</code> requests for\n            a replication configuration to all S3 on Outposts systems. Therefore, the replication\n            configuration that's returned by a <code>GET</code> request soon after a\n               <code>PUT</code> or <code>DELETE</code> request might return a more recent result\n            than what's on the Outpost. If an Outpost is offline, the delay in updating the\n            replication configuration on that Outpost can be significant.</p>\n         </note>\n         <p>This action requires permissions for the\n            <code>s3-outposts:GetReplicationConfiguration</code> action. The Outposts bucket owner\n         has this permission by default and can grant it to others. For more information about\n         permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\">Setting up IAM with\n            S3 on Outposts</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\">Managing access to\n            S3 on Outposts bucket</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html#API_control_GetBucketReplication_Examples\">Examples</a> section.</p>\n         <p>If you include the <code>Filter</code> element in a replication configuration, you must\n         also include the <code>DeleteMarkerReplication</code>, <code>Status</code>, and\n            <code>Priority</code> elements. The response also returns those elements.</p>\n         <p>For information about S3 on Outposts replication failure reasons, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/outposts-replication-eventbridge.html#outposts-replication-failure-codes\">Replication failure reasons</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following operations are related to <code>GetBucketReplication</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html\">PutBucketReplication</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html\">DeleteBucketReplication</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}/replication",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketReplicationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket to get the replication information for.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketReplicationResult": {
      "type": "structure",
      "members": {
        "ReplicationConfiguration": {
          "target": "com.amazonaws.s3control#ReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A container for one or more replication rules. A replication configuration must have at\n         least one rule and you can add up to 100 rules. The maximum size of a replication\n         configuration is 128 KB.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucketRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketResult": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The Outposts bucket requested.</p>"
          }
        },
        "PublicAccessBlockEnabled": {
          "target": "com.amazonaws.s3control#PublicAccessBlockEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p></p>"
          }
        },
        "CreationDate": {
          "target": "com.amazonaws.s3control#CreationDate",
          "traits": {
            "smithy.api#documentation": "<p>The creation date of the Outposts bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucketTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketTaggingResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action gets an Amazon S3 on Outposts bucket's tags. To get an S3 bucket tags, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Returns the tag set associated with the Outposts bucket. For more information, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>To use this action, you must have permission to perform the\n            <code>GetBucketTagging</code> action. By default, the bucket owner has this permission\n         and can grant this permission to others.</p>\n         <p>\n            <code>GetBucketTagging</code> has the following special error:</p>\n         <ul>\n            <li>\n               <p>Error code: <code>NoSuchTagSetError</code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: There is no tag set associated with the bucket.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html#API_control_GetBucketTagging_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>GetBucketTagging</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html\">PutBucketTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketTaggingResult": {
      "type": "structure",
      "members": {
        "TagSet": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>The tags set of the Outposts bucket.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetBucketVersioning": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetBucketVersioningRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetBucketVersioningResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation returns the versioning state\n            for\n            S3 on Outposts\n            buckets\n            only. To return the versioning state for an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\">GetBucketVersioning</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Returns the versioning state for an S3 on Outposts bucket. With\n         S3\n         Versioning,\n         you can save multiple distinct copies of your\n         objects\n         and recover from unintended user actions and application failures.</p>\n         <p>If you've never set versioning on your bucket, it has no versioning state. In that case,\n         the <code>GetBucketVersioning</code> request does not return a versioning state\n         value.</p>\n         <p>For more information about versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html\">Versioning</a> in the <i>Amazon S3\n            User Guide</i>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html#API_control_GetBucketVersioning_Examples\">Examples</a> section.</p>\n         <p>The following operations are related to <code>GetBucketVersioning</code> for\n         S3 on Outposts.</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketVersioning.html\">PutBucketVersioning</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket/{Bucket}/versioning",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetBucketVersioningRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the S3 on Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The S3 on Outposts bucket to return the versioning state for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetBucketVersioningResult": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#BucketVersioningStatus",
          "traits": {
            "smithy.api#documentation": "<p>The versioning state of the S3 on Outposts bucket.</p>"
          }
        },
        "MFADelete": {
          "target": "com.amazonaws.s3control#MFADeleteStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether MFA delete is enabled in the bucket versioning configuration. This\n         element is returned only if the bucket has been configured with MFA delete. If MFA delete\n         has never been configured for the bucket, this element is not returned.</p>",
            "smithy.api#xmlName": "MfaDelete"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetDataAccess": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetDataAccessRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetDataAccessResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns a temporary access credential from S3 Access Grants to the grantee or client application. The <a href=\"https://docs.aws.amazon.com/STS/latest/APIReference/API_Credentials.html\">temporary credential</a> is an Amazon Web Services STS token that grants them access to the S3 data. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:GetDataAccess</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>The IAM role that S3 Access Grants assumes must have the following permissions specified in the trust policy when registering the location: <code>sts:AssumeRole</code>, for directory users or groups <code>sts:SetContext</code>, and for IAM users or roles <code>sts:SourceIdentity</code>. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/dataaccess",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetDataAccessRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Target": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 URI path of the data to which you are requesting temporary access credentials. If the requesting account has an access grant for this data, S3 Access Grants vends temporary access credentials in the response.</p>",
            "smithy.api#httpQuery": "target",
            "smithy.api#required": {}
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of permission granted to your S3 data, which can be set to one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "permission",
            "smithy.api#required": {}
          }
        },
        "DurationSeconds": {
          "target": "com.amazonaws.s3control#DurationSeconds",
          "traits": {
            "smithy.api#documentation": "<p>The session duration, in seconds, of the temporary access credential that S3 Access Grants vends to the grantee or client application. The default value is 1 hour, but the grantee can specify a range from 900 seconds (15 minutes) up to 43200 seconds (12 hours). If the grantee requests a value higher than this maximum, the operation fails. </p>",
            "smithy.api#httpQuery": "durationSeconds"
          }
        },
        "Privilege": {
          "target": "com.amazonaws.s3control#Privilege",
          "traits": {
            "smithy.api#documentation": "<p>The scope of the temporary access credential that S3 Access Grants vends to the grantee or client application. </p>\n         <ul>\n            <li>\n               <p>\n                  <code>Default</code> – The scope of the returned temporary access token is the scope of the grant that is closest to the target scope.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Minimal</code> – The scope of the returned temporary access token is the same as the requested target scope as long as the requested scope is the same as or a subset of the grant scope. </p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "privilege"
          }
        },
        "TargetType": {
          "target": "com.amazonaws.s3control#S3PrefixType",
          "traits": {
            "smithy.api#documentation": "<p>The type of <code>Target</code>. The only possible value is <code>Object</code>. Pass this value if the target data that you would like to access is a path to an object. Do not pass this value if the target data is a bucket or a bucket and a prefix. </p>",
            "smithy.api#httpQuery": "targetType"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetDataAccessResult": {
      "type": "structure",
      "members": {
        "Credentials": {
          "target": "com.amazonaws.s3control#Credentials",
          "traits": {
            "smithy.api#documentation": "<p>The temporary credential token that S3 Access Grants vends.</p>"
          }
        },
        "MatchedGrantTarget": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 URI path of the data to which you are being granted temporary access credentials. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetJobTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetJobTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetJobTaggingResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the tags on an S3 Batch Operations job. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>GetJobTagging</code> operation, you must have permission to\n                  perform the <code>s3:GetJobTagging</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\">Controlling\n                     access and labeling jobs using tags</a> in the\n                  <i>Amazon S3 User Guide</i>.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutJobTagging.html\">PutJobTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\">DeleteJobTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/jobs/{JobId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetJobTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the S3 Batch Operations job whose tags you want to retrieve.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetJobTaggingResult": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>The set of tags associated with the S3 Batch Operations job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns configuration information about the specified Multi-Region Access Point.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to <code>GetMultiRegionAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListMultiRegionAccessPoints.html\">ListMultiRegionAccessPoints</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/mrap/instances/{Name+}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns the access control policy of the specified Multi-Region Access Point.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to\n         <code>GetMultiRegionAccessPointPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html\">GetMultiRegionAccessPointPolicyStatus</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html\">PutMultiRegionAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/mrap/instances/{Name+}/policy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Multi-Region Access Point. The name of the Multi-Region Access Point is different from the alias. For more\n         information about the distinction between the name and the alias of an Multi-Region Access Point, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming\">Managing Multi-Region Access Points</a> in the\n         <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The policy associated with the specified Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatusResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Indicates whether the specified Multi-Region Access Point has an access control policy that allows public\n         access.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to\n         <code>GetMultiRegionAccessPointPolicyStatus</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html\">GetMultiRegionAccessPointPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPointPolicy.html\">PutMultiRegionAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/mrap/instances/{Name+}/policystatus",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatusRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Multi-Region Access Point. The name of the Multi-Region Access Point is different from the alias. For more\n         information about the distinction between the name and the alias of an Multi-Region Access Point, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming\">Managing Multi-Region Access Points</a> in the\n         <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointPolicyStatusResult": {
      "type": "structure",
      "members": {
        "Established": {
          "target": "com.amazonaws.s3control#PolicyStatus"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Multi-Region Access Point whose configuration information you want to receive. The name of\n         the Multi-Region Access Point is different from the alias. For more information about the distinction between\n         the name and the alias of an Multi-Region Access Point, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming\">Managing Multi-Region Access Points</a> in the\n         <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointResult": {
      "type": "structure",
      "members": {
        "AccessPoint": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointReport",
          "traits": {
            "smithy.api#documentation": "<p>A container element containing the details of the requested Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointRoutes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointRoutesRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetMultiRegionAccessPointRoutesResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns the routing configuration for a Multi-Region Access Point, indicating which Regions are active or\n         passive.</p>\n         <p>To obtain routing control changes and failover requests, use the Amazon S3 failover control\n         infrastructure endpoints in these five Amazon Web Services Regions:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>us-east-1</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>us-west-2</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ap-southeast-2</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ap-northeast-1</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>eu-west-1</code>\n               </p>\n            </li>\n         </ul>\n         <note>\n            <p>Your Amazon S3 bucket does not need to be in these five Regions.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/mrap/instances/{Mrap+}/routes",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointRoutesRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Mrap": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointId",
          "traits": {
            "smithy.api#documentation": "<p>The Multi-Region Access Point ARN.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetMultiRegionAccessPointRoutesResult": {
      "type": "structure",
      "members": {
        "Mrap": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointId",
          "traits": {
            "smithy.api#documentation": "<p>The Multi-Region Access Point ARN.</p>"
          }
        },
        "Routes": {
          "target": "com.amazonaws.s3control#RouteList",
          "traits": {
            "smithy.api#documentation": "<p>The different routes that make up the route configuration. Active routes return a value\n         of <code>100</code>, and passive routes return a value of <code>0</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetPublicAccessBlock": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetPublicAccessBlockRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetPublicAccessBlockOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#NoSuchPublicAccessBlockConfiguration"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon Web Services account. For\n         more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\"> Using Amazon S3 block\n            public access</a>.</p>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/configuration/publicAccessBlock",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetPublicAccessBlockOutput": {
      "type": "structure",
      "members": {
        "PublicAccessBlockConfiguration": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The <code>PublicAccessBlock</code> configuration currently in effect for this\n         Amazon Web Services account.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetPublicAccessBlockRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration\n         you want to retrieve.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetStorageLensConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetStorageLensConfigurationResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Gets the Amazon S3 Storage Lens configuration. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your storage\n            activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:GetStorageLensConfiguration</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to use Amazon S3 Storage Lens</a> in the\n               <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/storagelens/{ConfigId}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfigurationRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfigurationResult": {
      "type": "structure",
      "members": {
        "StorageLensConfiguration": {
          "target": "com.amazonaws.s3control#StorageLensConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The S3 Storage Lens configuration requested.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfigurationTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetStorageLensConfigurationTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetStorageLensConfigurationTaggingResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Gets the tags of Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your\n            storage activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:GetStorageLensConfigurationTagging</code> action. For more information, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to\n               use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/storagelens/{ConfigId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfigurationTaggingRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensConfigurationTaggingResult": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.s3control#StorageLensTags",
          "traits": {
            "smithy.api#documentation": "<p>The tags of S3 Storage Lens configuration requested.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#GetStorageLensGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#GetStorageLensGroupResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>\nRetrieves the Storage Lens group configuration details.</p>\n         <p>To use this operation, you must have the permission to perform the\n      <code>s3:GetStorageLensGroup</code> action. For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about Storage Lens groups errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3LensErrorCodeList\">List of Amazon S3 Storage\n      Lens error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/storagelensgroup/{Name}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#GetStorageLensGroupRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#StorageLensGroupName",
          "traits": {
            "smithy.api#documentation": "<p>\nThe name of the Storage Lens group that you're trying to retrieve the configuration details for.\n</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID associated with the Storage Lens group that you're trying to retrieve the details for.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#GetStorageLensGroupResult": {
      "type": "structure",
      "members": {
        "StorageLensGroup": {
          "target": "com.amazonaws.s3control#StorageLensGroup",
          "traits": {
            "smithy.api#documentation": "<p>\nThe name of the Storage Lens group that you're trying to retrieve the configuration details for.\n</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#GrantFullControl": {
      "type": "string"
    },
    "com.amazonaws.s3control#GrantRead": {
      "type": "string"
    },
    "com.amazonaws.s3control#GrantReadACP": {
      "type": "string"
    },
    "com.amazonaws.s3control#GrantWrite": {
      "type": "string"
    },
    "com.amazonaws.s3control#GrantWriteACP": {
      "type": "string"
    },
    "com.amazonaws.s3control#Grantee": {
      "type": "structure",
      "members": {
        "GranteeType": {
          "target": "com.amazonaws.s3control#GranteeType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the grantee to which access has been granted. It can be one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>IAM</code> - An IAM user or role.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DIRECTORY_USER</code> - Your corporate directory user. You can use this option if you have added your corporate identity directory to IAM Identity Center and associated the IAM Identity Center instance with your S3 Access Grants instance.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DIRECTORY_GROUP</code> - Your corporate directory group. You can use this option if you have added your corporate identity directory to IAM Identity Center and associated the IAM Identity Center instance with your S3 Access Grants instance.</p>\n            </li>\n         </ul>"
          }
        },
        "GranteeIdentifier": {
          "target": "com.amazonaws.s3control#GranteeIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the <code>Grantee</code>. If the grantee type is <code>IAM</code>, the identifier is the IAM Amazon Resource Name (ARN) of the user or role. If the grantee type is a directory user or group, the identifier is 128-bit universally unique identifier (UUID) in the format <code>a1b2c3d4-5678-90ab-cdef-EXAMPLE11111</code>. You can obtain this UUID from your Amazon Web Services IAM Identity Center instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The user, group, or role to which you are granting access. You can grant access to an IAM user or role. If you have added your corporate directory to Amazon Web Services IAM Identity Center and associated your Identity Center instance with your S3 Access Grants instance, the grantee can also be a corporate directory user or group.</p>"
      }
    },
    "com.amazonaws.s3control#GranteeIdentifier": {
      "type": "string"
    },
    "com.amazonaws.s3control#GranteeType": {
      "type": "enum",
      "members": {
        "DIRECTORY_USER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DIRECTORY_USER"
          }
        },
        "DIRECTORY_GROUP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DIRECTORY_GROUP"
          }
        },
        "IAM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IAM"
          }
        }
      }
    },
    "com.amazonaws.s3control#IAMRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[^:]+:iam::\\d{12}:role/"
      }
    },
    "com.amazonaws.s3control#ID": {
      "type": "string"
    },
    "com.amazonaws.s3control#IdempotencyException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#IdentityCenterApplicationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 1224
        },
        "smithy.api#pattern": "^arn:[^:]+:sso:.*$"
      }
    },
    "com.amazonaws.s3control#IdentityCenterArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 1224
        },
        "smithy.api#pattern": "^arn:[^:]+:sso::(\\d{12}){0,1}:instance/.*$"
      }
    },
    "com.amazonaws.s3control#Include": {
      "type": "structure",
      "members": {
        "Buckets": {
          "target": "com.amazonaws.s3control#Buckets",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens bucket includes.</p>"
          }
        },
        "Regions": {
          "target": "com.amazonaws.s3control#Regions",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens Region includes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for what Amazon S3 Storage Lens configuration includes.</p>"
      }
    },
    "com.amazonaws.s3control#InternalServiceException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "server"
      }
    },
    "com.amazonaws.s3control#InvalidNextTokenException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#InvalidRequestException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#IsEnabled": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#IsPublic": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#JobArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:[^:]+:s3:[a-zA-Z0-9\\-]+:\\d{12}:job\\/"
      }
    },
    "com.amazonaws.s3control#JobCreationTime": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#JobDescriptor": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the specified job.</p>"
          }
        },
        "ConfirmationRequired": {
          "target": "com.amazonaws.s3control#ConfirmationRequired",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Indicates whether confirmation is required before Amazon S3 begins running the specified job.\n         Confirmation is required only for jobs created through the Amazon S3 console.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength256String",
          "traits": {
            "smithy.api#documentation": "<p>The description for this job, if one was provided in this job's <code>Create Job</code>\n         request.</p>"
          }
        },
        "JobArn": {
          "target": "com.amazonaws.s3control#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for this job.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the specified job.</p>"
          }
        },
        "Manifest": {
          "target": "com.amazonaws.s3control#JobManifest",
          "traits": {
            "smithy.api#documentation": "<p>The configuration information for the specified job's manifest object.</p>"
          }
        },
        "Operation": {
          "target": "com.amazonaws.s3control#JobOperation",
          "traits": {
            "smithy.api#documentation": "<p>The operation that the specified job is configured to run on the objects listed in the\n         manifest.</p>"
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#JobPriority",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The priority of the specified job.</p>"
          }
        },
        "ProgressSummary": {
          "target": "com.amazonaws.s3control#JobProgressSummary",
          "traits": {
            "smithy.api#documentation": "<p>Describes the total number of tasks that the specified job has run, the number of tasks\n         that succeeded, and the number of tasks that failed.</p>"
          }
        },
        "StatusUpdateReason": {
          "target": "com.amazonaws.s3control#JobStatusUpdateReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for updating the job.</p>"
          }
        },
        "FailureReasons": {
          "target": "com.amazonaws.s3control#JobFailureList",
          "traits": {
            "smithy.api#documentation": "<p>If the specified job failed, this field contains information describing the\n         failure.</p>"
          }
        },
        "Report": {
          "target": "com.amazonaws.s3control#JobReport",
          "traits": {
            "smithy.api#documentation": "<p>Contains the configuration information for the job-completion report if you requested\n         one in the <code>Create Job</code> request.</p>"
          }
        },
        "CreationTime": {
          "target": "com.amazonaws.s3control#JobCreationTime",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp indicating when this job was created.</p>"
          }
        },
        "TerminationDate": {
          "target": "com.amazonaws.s3control#JobTerminationDate",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp indicating when this job terminated. A job's termination date is the date\n         and time when it succeeded, failed, or was canceled.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Identity and Access Management (IAM) role assigned to run the tasks\n         for this job.</p>"
          }
        },
        "SuspendedDate": {
          "target": "com.amazonaws.s3control#SuspendedDate",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when this job was suspended, if it has been suspended.</p>"
          }
        },
        "SuspendedCause": {
          "target": "com.amazonaws.s3control#SuspendedCause",
          "traits": {
            "smithy.api#documentation": "<p>The reason why the specified job was suspended. A job is only suspended if you create it\n         through the Amazon S3 console. When you create the job, it enters the <code>Suspended</code>\n         state to await confirmation before running. After you confirm the job, it automatically\n         exits the <code>Suspended</code> state.</p>"
          }
        },
        "ManifestGenerator": {
          "target": "com.amazonaws.s3control#JobManifestGenerator",
          "traits": {
            "smithy.api#documentation": "<p>The manifest generator that was used to generate a job manifest for this job.</p>"
          }
        },
        "GeneratedManifestDescriptor": {
          "target": "com.amazonaws.s3control#S3GeneratedManifestDescriptor",
          "traits": {
            "smithy.api#documentation": "<p>The attribute of the JobDescriptor containing details about the job's generated\n         manifest.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container element for the job configuration and status information returned by a\n            <code>Describe Job</code> request.</p>"
      }
    },
    "com.amazonaws.s3control#JobFailure": {
      "type": "structure",
      "members": {
        "FailureCode": {
          "target": "com.amazonaws.s3control#JobFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The failure code, if any, for the specified job.</p>"
          }
        },
        "FailureReason": {
          "target": "com.amazonaws.s3control#JobFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The failure reason, if any, for the specified job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>If this job failed, this element indicates why the job failed.</p>"
      }
    },
    "com.amazonaws.s3control#JobFailureCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.s3control#JobFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#JobFailure"
      }
    },
    "com.amazonaws.s3control#JobFailureReason": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.s3control#JobId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 5,
          "max": 36
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-\\_]+$"
      }
    },
    "com.amazonaws.s3control#JobListDescriptor": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the specified job.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength256String",
          "traits": {
            "smithy.api#documentation": "<p>The user-specified description that was included in the specified job's <code>Create\n            Job</code> request.</p>"
          }
        },
        "Operation": {
          "target": "com.amazonaws.s3control#OperationName",
          "traits": {
            "smithy.api#documentation": "<p>The operation that the specified job is configured to run on every object listed in the\n         manifest.</p>"
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#JobPriority",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The current priority for the specified job.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The specified job's current status.</p>"
          }
        },
        "CreationTime": {
          "target": "com.amazonaws.s3control#JobCreationTime",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp indicating when the specified job was created.</p>"
          }
        },
        "TerminationDate": {
          "target": "com.amazonaws.s3control#JobTerminationDate",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp indicating when the specified job terminated. A job's termination date is\n         the date and time when it succeeded, failed, or was canceled.</p>"
          }
        },
        "ProgressSummary": {
          "target": "com.amazonaws.s3control#JobProgressSummary",
          "traits": {
            "smithy.api#documentation": "<p>Describes the total number of tasks that the specified job has run, the number of tasks\n         that succeeded, and the number of tasks that failed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration and status information for a single job retrieved as part of\n         a job list.</p>"
      }
    },
    "com.amazonaws.s3control#JobListDescriptorList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#JobListDescriptor"
      }
    },
    "com.amazonaws.s3control#JobManifest": {
      "type": "structure",
      "members": {
        "Spec": {
          "target": "com.amazonaws.s3control#JobManifestSpec",
          "traits": {
            "smithy.api#documentation": "<p>Describes the format of the specified job's manifest. If the manifest is in CSV format,\n         also describes the columns contained within the manifest.</p>",
            "smithy.api#required": {}
          }
        },
        "Location": {
          "target": "com.amazonaws.s3control#JobManifestLocation",
          "traits": {
            "smithy.api#documentation": "<p>Contains the information required to locate the specified job's manifest. Manifests\n         can't be imported from directory buckets. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-overview.html\">Directory buckets</a>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration information for a job's manifest.</p>"
      }
    },
    "com.amazonaws.s3control#JobManifestFieldList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#JobManifestFieldName"
      }
    },
    "com.amazonaws.s3control#JobManifestFieldName": {
      "type": "enum",
      "members": {
        "Ignore": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Ignore"
          }
        },
        "Bucket": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Bucket"
          }
        },
        "Key": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Key"
          }
        },
        "VersionId": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VersionId"
          }
        }
      }
    },
    "com.amazonaws.s3control#JobManifestFormat": {
      "type": "enum",
      "members": {
        "S3BatchOperations_CSV_20180820": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3BatchOperations_CSV_20180820"
          }
        },
        "S3InventoryReport_CSV_20161130": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3InventoryReport_CSV_20161130"
          }
        }
      }
    },
    "com.amazonaws.s3control#JobManifestGenerator": {
      "type": "union",
      "members": {
        "S3JobManifestGenerator": {
          "target": "com.amazonaws.s3control#S3JobManifestGenerator",
          "traits": {
            "smithy.api#documentation": "<p>The S3 job ManifestGenerator's configuration details.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configures the type of the job's ManifestGenerator.</p>"
      }
    },
    "com.amazonaws.s3control#JobManifestGeneratorFilter": {
      "type": "structure",
      "members": {
        "EligibleForReplication": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Include objects in the generated manifest only if they are eligible for replication\n         according to the Replication configuration on the source bucket.</p>"
          }
        },
        "CreatedAfter": {
          "target": "com.amazonaws.s3control#ObjectCreationTime",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects that were\n         created after this time.</p>"
          }
        },
        "CreatedBefore": {
          "target": "com.amazonaws.s3control#ObjectCreationTime",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects that were\n         created before this time.</p>"
          }
        },
        "ObjectReplicationStatuses": {
          "target": "com.amazonaws.s3control#ReplicationStatusFilterList",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects that have one of\n         the specified Replication statuses.</p>"
          }
        },
        "KeyNameConstraint": {
          "target": "com.amazonaws.s3control#KeyNameConstraint",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects whose object\n         keys match the string constraints specified for <code>MatchAnyPrefix</code>,\n            <code>MatchAnySuffix</code>, and <code>MatchAnySubstring</code>.</p>"
          }
        },
        "ObjectSizeGreaterThanBytes": {
          "target": "com.amazonaws.s3control#ObjectSizeGreaterThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects whose file size\n         is greater than the specified number of bytes.</p>"
          }
        },
        "ObjectSizeLessThanBytes": {
          "target": "com.amazonaws.s3control#ObjectSizeLessThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects whose file size\n         is less than the specified number of bytes.</p>"
          }
        },
        "MatchAnyStorageClass": {
          "target": "com.amazonaws.s3control#StorageClassList",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects that are stored\n         with the specified storage class.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filter used to describe a set of objects for the job's manifest.</p>"
      }
    },
    "com.amazonaws.s3control#JobManifestLocation": {
      "type": "structure",
      "members": {
        "ObjectArn": {
          "target": "com.amazonaws.s3control#S3KeyArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for a manifest object.</p>\n         <important>\n            <p>When you're using XML requests, you must \nreplace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. \nFor more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\">\n            XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </important>",
            "smithy.api#required": {}
          }
        },
        "ObjectVersionId": {
          "target": "com.amazonaws.s3control#S3ObjectVersionId",
          "traits": {
            "smithy.api#documentation": "<p>The optional version ID to identify a specific version of the manifest object.</p>"
          }
        },
        "ETag": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>The ETag for the specified manifest object.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the information required to locate a manifest object. Manifests can't be\n         imported from directory buckets. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-overview.html\">Directory\n            buckets</a>.</p>"
      }
    },
    "com.amazonaws.s3control#JobManifestSpec": {
      "type": "structure",
      "members": {
        "Format": {
          "target": "com.amazonaws.s3control#JobManifestFormat",
          "traits": {
            "smithy.api#documentation": "<p>Indicates which of the available formats the specified manifest uses.</p>",
            "smithy.api#required": {}
          }
        },
        "Fields": {
          "target": "com.amazonaws.s3control#JobManifestFieldList",
          "traits": {
            "smithy.api#documentation": "<p>If the specified manifest object is in the <code>S3BatchOperations_CSV_20180820</code>\n         format, this element describes which columns contain the required data.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describes the format of a manifest. If the manifest is in CSV format, also describes the\n         columns contained within the manifest.</p>"
      }
    },
    "com.amazonaws.s3control#JobNumberOfTasksFailed": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#JobNumberOfTasksSucceeded": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#JobOperation": {
      "type": "structure",
      "members": {
        "LambdaInvoke": {
          "target": "com.amazonaws.s3control#LambdaInvokeOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to invoke an Lambda function on every object in the\n         manifest.</p>"
          }
        },
        "S3PutObjectCopy": {
          "target": "com.amazonaws.s3control#S3CopyObjectOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to run a PUT Copy object call on every object in the\n         manifest.</p>"
          }
        },
        "S3PutObjectAcl": {
          "target": "com.amazonaws.s3control#S3SetObjectAclOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to run a <code>PutObjectAcl</code> call on every object in the\n         manifest.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "S3PutObjectTagging": {
          "target": "com.amazonaws.s3control#S3SetObjectTaggingOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to run a PUT Object tagging call on every object in the\n         manifest.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "S3DeleteObjectTagging": {
          "target": "com.amazonaws.s3control#S3DeleteObjectTaggingOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to execute a DELETE Object tagging call on every object in the\n         manifest.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "S3InitiateRestoreObject": {
          "target": "com.amazonaws.s3control#S3InitiateRestoreObjectOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to initiate restore requests for every archived object in the\n         manifest.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "S3PutObjectLegalHold": {
          "target": "com.amazonaws.s3control#S3SetObjectLegalHoldOperation"
        },
        "S3PutObjectRetention": {
          "target": "com.amazonaws.s3control#S3SetObjectRetentionOperation"
        },
        "S3ReplicateObject": {
          "target": "com.amazonaws.s3control#S3ReplicateObjectOperation",
          "traits": {
            "smithy.api#documentation": "<p>Directs the specified job to invoke <code>ReplicateObject</code> on every object in the\n         job's manifest.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation that you want this job to perform on every object listed in the manifest.\n         For more information about the available operations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-operations.html\">Operations</a> in the\n            <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#JobPriority": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 2147483647
        }
      }
    },
    "com.amazonaws.s3control#JobProgressSummary": {
      "type": "structure",
      "members": {
        "TotalNumberOfTasks": {
          "target": "com.amazonaws.s3control#JobTotalNumberOfTasks",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p></p>"
          }
        },
        "NumberOfTasksSucceeded": {
          "target": "com.amazonaws.s3control#JobNumberOfTasksSucceeded",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p></p>"
          }
        },
        "NumberOfTasksFailed": {
          "target": "com.amazonaws.s3control#JobNumberOfTasksFailed",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p></p>"
          }
        },
        "Timers": {
          "target": "com.amazonaws.s3control#JobTimers",
          "traits": {
            "smithy.api#documentation": "<p>The JobTimers attribute of a job's progress summary.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describes the total number of tasks that the specified job has started, the number of\n         tasks that succeeded, and the number of tasks that failed.</p>"
      }
    },
    "com.amazonaws.s3control#JobReport": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#S3BucketArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the bucket where specified job-completion report will\n         be stored.</p>\n         <note>\n            <p>\n               <b>Directory buckets</b> - Directory buckets aren't supported \n         as a location for Batch Operations to store job completion reports.</p>\n         </note>"
          }
        },
        "Format": {
          "target": "com.amazonaws.s3control#JobReportFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the specified job-completion report.</p>"
          }
        },
        "Enabled": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Indicates whether the specified job will generate a job-completion report.</p>",
            "smithy.api#required": {}
          }
        },
        "Prefix": {
          "target": "com.amazonaws.s3control#ReportPrefixString",
          "traits": {
            "smithy.api#documentation": "<p>An optional prefix to describe where in the specified bucket the job-completion report\n         will be stored. Amazon S3 stores the job-completion report at\n            <code><prefix>/job-<job-id>/report.json</code>.</p>"
          }
        },
        "ReportScope": {
          "target": "com.amazonaws.s3control#JobReportScope",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the job-completion report will include details of all tasks or only\n         failed tasks.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for a job-completion report.</p>"
      }
    },
    "com.amazonaws.s3control#JobReportFormat": {
      "type": "enum",
      "members": {
        "Report_CSV_20180820": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Report_CSV_20180820"
          }
        }
      }
    },
    "com.amazonaws.s3control#JobReportScope": {
      "type": "enum",
      "members": {
        "AllTasks": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AllTasks"
          }
        },
        "FailedTasksOnly": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FailedTasksOnly"
          }
        }
      }
    },
    "com.amazonaws.s3control#JobStatus": {
      "type": "enum",
      "members": {
        "Active": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Active"
          }
        },
        "Cancelled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Cancelled"
          }
        },
        "Cancelling": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Cancelling"
          }
        },
        "Complete": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Complete"
          }
        },
        "Completing": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Completing"
          }
        },
        "Failed": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Failed"
          }
        },
        "Failing": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Failing"
          }
        },
        "New": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "New"
          }
        },
        "Paused": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Paused"
          }
        },
        "Pausing": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Pausing"
          }
        },
        "Preparing": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Preparing"
          }
        },
        "Ready": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Ready"
          }
        },
        "Suspended": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Suspended"
          }
        }
      }
    },
    "com.amazonaws.s3control#JobStatusException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#JobStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#JobStatus"
      }
    },
    "com.amazonaws.s3control#JobStatusUpdateReason": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.s3control#JobTerminationDate": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#JobTimeInStateSeconds": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#JobTimers": {
      "type": "structure",
      "members": {
        "ElapsedTimeInActiveSeconds": {
          "target": "com.amazonaws.s3control#JobTimeInStateSeconds",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Indicates the elapsed time in seconds the job has been in the Active job state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides timing details for the job.</p>"
      }
    },
    "com.amazonaws.s3control#JobTotalNumberOfTasks": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#KeyNameConstraint": {
      "type": "structure",
      "members": {
        "MatchAnyPrefix": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024StringList",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes objects where the specified string appears\n         at the start of the object key string.</p>"
          }
        },
        "MatchAnySuffix": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024StringList",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes objects where the specified string appears\n         at the end of the object key string.</p>"
          }
        },
        "MatchAnySubstring": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024StringList",
          "traits": {
            "smithy.api#documentation": "<p>If provided, the generated manifest includes objects where the specified string appears\n         anywhere within the object key string.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>If provided, the generated manifest includes only source bucket objects whose object\n         keys match the string constraints specified for <code>MatchAnyPrefix</code>,\n            <code>MatchAnySuffix</code>, and <code>MatchAnySubstring</code>.</p>"
      }
    },
    "com.amazonaws.s3control#KmsKeyArnString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2000
        }
      }
    },
    "com.amazonaws.s3control#LambdaInvokeOperation": {
      "type": "structure",
      "members": {
        "FunctionArn": {
          "target": "com.amazonaws.s3control#FunctionArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the Lambda function that the specified job will\n         invoke on every object in the manifest.</p>"
          }
        },
        "InvocationSchemaVersion": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength64String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the schema version for the payload that Batch Operations sends when invoking\n         an Lambda function. Version <code>1.0</code> is the default. Version\n            <code>2.0</code> is required when you use Batch Operations to invoke Lambda functions that act on directory buckets, or if you need to specify\n            <code>UserArguments</code>. For more information, see <a href=\"https://aws.amazon.com/blogs/storage/using-lambda-with-s3-batch-operations-and-s3-express-one-zone/\">Using Lambda with Amazon S3 Batch Operations and Amazon S3 Express One Zone</a> in the <i>Amazon Web Services Storage\n            Blog</i>.</p>\n         <important>\n            <p>Ensure that your Lambda function code expects\n               <code>InvocationSchemaVersion</code>\n               <b>2.0</b> and uses bucket name rather than bucket ARN. If the\n               <code>InvocationSchemaVersion</code> does not match what your Lambda\n            function expects, your function might not work as expected.</p>\n         </important>\n         <note>\n            <p>\n               <b>Directory buckets</b> - To initiate Amazon Web Services Lambda function to perform custom actions on objects in directory buckets, you must specify <code>2.0</code>.</p>\n         </note>"
          }
        },
        "UserArguments": {
          "target": "com.amazonaws.s3control#UserArguments",
          "traits": {
            "smithy.api#documentation": "<p>Key-value pairs that are passed in the payload that Batch Operations sends when invoking\n         an Lambda function. You must specify <code>InvocationSchemaVersion</code>\n            <b>2.0</b> for <code>LambdaInvoke</code> operations that include\n            <code>UserArguments</code>. For more information, see <a href=\"https://aws.amazon.com/blogs/storage/using-lambda-with-s3-batch-operations-and-s3-express-one-zone/\">Using Lambda with Amazon S3 Batch Operations and Amazon S3 Express One Zone</a> in the <i>Amazon Web Services Storage\n            Blog</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for a <code>Lambda Invoke</code> operation.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleConfiguration": {
      "type": "structure",
      "members": {
        "Rules": {
          "target": "com.amazonaws.s3control#LifecycleRules",
          "traits": {
            "smithy.api#documentation": "<p>A lifecycle rule for individual objects in an Outposts bucket. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the Outposts bucket lifecycle configuration.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleExpiration": {
      "type": "structure",
      "members": {
        "Date": {
          "target": "com.amazonaws.s3control#Date",
          "traits": {
            "smithy.api#documentation": "<p>Indicates at what date the object is to be deleted. Should be in GMT ISO 8601\n         format.</p>"
          }
        },
        "Days": {
          "target": "com.amazonaws.s3control#Days",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Indicates the lifetime, in days, of the objects that are subject to the rule. The value\n         must be a non-zero positive integer.</p>"
          }
        },
        "ExpiredObjectDeleteMarker": {
          "target": "com.amazonaws.s3control#ExpiredObjectDeleteMarker",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set\n         to true, the delete marker will be expired. If set to false, the policy takes no action.\n         This cannot be specified with Days or Date in a Lifecycle Expiration Policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container of the Outposts bucket lifecycle expiration.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleRule": {
      "type": "structure",
      "members": {
        "Expiration": {
          "target": "com.amazonaws.s3control#LifecycleExpiration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the expiration for the lifecycle of the object in the form of date, days and,\n         whether the object has a delete marker.</p>"
          }
        },
        "ID": {
          "target": "com.amazonaws.s3control#ID",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for the rule. The value cannot be longer than 255 characters.</p>"
          }
        },
        "Filter": {
          "target": "com.amazonaws.s3control#LifecycleRuleFilter",
          "traits": {
            "smithy.api#documentation": "<p>The container for the filter of lifecycle rule.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#ExpirationStatus",
          "traits": {
            "smithy.api#documentation": "<p>If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not\n         currently being applied.</p>",
            "smithy.api#required": {}
          }
        },
        "Transitions": {
          "target": "com.amazonaws.s3control#TransitionList",
          "traits": {
            "smithy.api#documentation": "<p>Specifies when an Amazon S3 object transitions to a specified storage class.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "NoncurrentVersionTransitions": {
          "target": "com.amazonaws.s3control#NoncurrentVersionTransitionList",
          "traits": {
            "smithy.api#documentation": "<p> Specifies the transition rule for the lifecycle rule that describes when noncurrent\n         objects transition to a specific storage class. If your bucket is versioning-enabled (or\n         versioning is suspended), you can set this action to request that Amazon S3 transition\n         noncurrent object versions to a specific storage class at a set period in the object's\n         lifetime. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "NoncurrentVersionExpiration": {
          "target": "com.amazonaws.s3control#NoncurrentVersionExpiration",
          "traits": {
            "smithy.api#documentation": "<p>The noncurrent version expiration of the lifecycle rule.</p>"
          }
        },
        "AbortIncompleteMultipartUpload": {
          "target": "com.amazonaws.s3control#AbortIncompleteMultipartUpload",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the days since the initiation of an incomplete multipart upload that Amazon S3\n         waits before permanently removing all parts of the upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">\n            Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration</a> in\n         the <i>Amazon S3 User Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the Outposts bucket lifecycle rule.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleRuleAndOperator": {
      "type": "structure",
      "members": {
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#documentation": "<p>Prefix identifying one or more objects to which the rule applies.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>All of these tags must exist in the object's tag set in order for the rule to\n         apply.</p>"
          }
        },
        "ObjectSizeGreaterThan": {
          "target": "com.amazonaws.s3control#ObjectSizeGreaterThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Minimum object size to which the rule applies.</p>"
          }
        },
        "ObjectSizeLessThan": {
          "target": "com.amazonaws.s3control#ObjectSizeLessThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum object size to which the rule applies.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the Outposts bucket lifecycle rule and operator.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleRuleFilter": {
      "type": "structure",
      "members": {
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#documentation": "<p>Prefix identifying one or more objects to which the rule applies.</p>\n         <important>\n            <p>When you're using XML requests, you must \nreplace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. \nFor more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\">\n            XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </important>"
          }
        },
        "Tag": {
          "target": "com.amazonaws.s3control#S3Tag"
        },
        "And": {
          "target": "com.amazonaws.s3control#LifecycleRuleAndOperator",
          "traits": {
            "smithy.api#documentation": "<p>The container for the <code>AND</code> condition for the lifecycle rule.</p>"
          }
        },
        "ObjectSizeGreaterThan": {
          "target": "com.amazonaws.s3control#ObjectSizeGreaterThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Minimum object size to which the rule applies.</p>"
          }
        },
        "ObjectSizeLessThan": {
          "target": "com.amazonaws.s3control#ObjectSizeLessThanBytes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum object size to which the rule applies.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the filter of the lifecycle rule.</p>"
      }
    },
    "com.amazonaws.s3control#LifecycleRules": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#LifecycleRule",
        "traits": {
          "smithy.api#xmlName": "Rule"
        }
      }
    },
    "com.amazonaws.s3control#ListAccessGrantEntry": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance. </p>"
          }
        },
        "AccessGrantId": {
          "target": "com.amazonaws.s3control#AccessGrantId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the access grant. S3 Access Grants auto-generates this ID when you create the access grant.</p>"
          }
        },
        "AccessGrantArn": {
          "target": "com.amazonaws.s3control#AccessGrantArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the access grant. </p>"
          }
        },
        "Grantee": {
          "target": "com.amazonaws.s3control#Grantee",
          "traits": {
            "smithy.api#documentation": "<p>The user, group, or role to which you are granting access. You can grant access to an IAM user or role. If you have added your corporate directory to Amazon Web Services IAM Identity Center and associated your Identity Center instance with your S3 Access Grants instance, the grantee can also be a corporate directory user or group.</p>"
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of access granted to your S3 data, which can be set to one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>"
          }
        },
        "AccessGrantsLocationConfiguration": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration options of the grant location. The grant location is the S3 path to the data to which you are granting access. </p>"
          }
        },
        "GrantScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path of the data to which you are granting access. It is the result of appending the <code>Subprefix</code> to the location scope.</p>"
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.s3control#IdentityCenterApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If the grant includes an application ARN, the grantee can only access the S3 data through this application. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the access grant.</p>"
      }
    },
    "com.amazonaws.s3control#ListAccessGrants": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListAccessGrantsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListAccessGrantsResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns the list of access grants in your S3 Access Grants instance.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:ListAccessGrants</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/grants",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsInstanceEntry": {
      "type": "structure",
      "members": {
        "AccessGrantsInstanceId": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Access Grants instance. The ID is <code>default</code>. You can have one S3 Access Grants instance per Region per account. </p>"
          }
        },
        "AccessGrantsInstanceArn": {
          "target": "com.amazonaws.s3control#AccessGrantsInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 Access Grants instance. </p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance. </p>"
          }
        },
        "IdentityCenterArn": {
          "target": "com.amazonaws.s3control#IdentityCenterArn",
          "traits": {
            "smithy.api#documentation": "<p>If you associated your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance, this field returns the Amazon Resource Name (ARN) of the IAM Identity Center instance application; a subresource of the original Identity Center instance. S3 Access Grants creates this Identity Center application for the specific S3 Access Grants instance. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the S3 Access Grants instance.</p>"
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListAccessGrantsInstancesRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListAccessGrantsInstancesResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of S3 Access Grants instances. An S3 Access Grants instance serves as a logical grouping for your individual access grants. You can only have one S3 Access Grants instance per Region per account.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:ListAccessGrantsInstances</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstances",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsInstancesRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants Instances</code> request in order to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of access grants that you would like returned in the <code>List Access Grants</code> response. If the results include the pagination token <code>NextToken</code>, make another call using the <code>NextToken</code> to determine if there are more results.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsInstancesResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants Instances</code> request in order to retrieve the next page of results.</p>"
          }
        },
        "AccessGrantsInstancesList": {
          "target": "com.amazonaws.s3control#AccessGrantsInstancesList",
          "traits": {
            "smithy.api#documentation": "<p>A container for a list of S3 Access Grants instances.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsLocations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListAccessGrantsLocationsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListAccessGrantsLocationsResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of the locations registered in your S3 Access Grants instance.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:ListAccessGrantsLocations</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accessgrantsinstance/locations",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsLocationsEntry": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you registered the location. </p>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>"
          }
        },
        "AccessGrantsLocationArn": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the registered location. </p>"
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path to the location that you are registering. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket <code>s3://<bucket></code>, or the S3 path to a bucket and prefix <code>s3://<bucket>/<prefix></code>. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>"
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for information about the registered location.</p>"
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsLocationsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants Locations</code> request in order to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of access grants that you would like returned in the <code>List Access Grants</code> response. If the results include the pagination token <code>NextToken</code>, make another call using the <code>NextToken</code> to determine if there are more results.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path to the location that you are registering. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket <code>s3://<bucket></code>, or the S3 path to a bucket and prefix <code>s3://<bucket>/<prefix></code>. A prefix in S3 is a string of characters at the beginning of an object key name used to organize the objects that you store in your S3 buckets. For example, object key names that start with the <code>engineering/</code> prefix or object key names that start with the <code>marketing/campaigns/</code> prefix.</p>",
            "smithy.api#httpQuery": "locationscope"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsLocationsResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants Locations</code> request in order to retrieve the next page of results.</p>"
          }
        },
        "AccessGrantsLocationsList": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationsList",
          "traits": {
            "smithy.api#documentation": "<p>A container for a list of registered locations in an S3 Access Grants instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants</code> request in order to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of access grants that you would like returned in the <code>List Access Grants</code> response. If the results include the pagination token <code>NextToken</code>, make another call using the <code>NextToken</code> to determine if there are more results.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "GranteeType": {
          "target": "com.amazonaws.s3control#GranteeType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the grantee to which access has been granted. It can be one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>IAM</code> - An IAM user or role.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DIRECTORY_USER</code> - Your corporate directory user. You can use this option if you have added your corporate identity directory to IAM Identity Center and associated the IAM Identity Center instance with your S3 Access Grants instance.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DIRECTORY_GROUP</code> - Your corporate directory group. You can use this option if you have added your corporate identity directory to IAM Identity Center and associated the IAM Identity Center instance with your S3 Access Grants instance.</p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "granteetype"
          }
        },
        "GranteeIdentifier": {
          "target": "com.amazonaws.s3control#GranteeIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifer of the <code>Grantee</code>. If the grantee type is <code>IAM</code>, the identifier is the IAM Amazon Resource Name (ARN) of the user or role. If the grantee type is a directory user or group, the identifier is 128-bit universally unique identifier (UUID) in the format <code>a1b2c3d4-5678-90ab-cdef-EXAMPLE11111</code>. You can obtain this UUID from your Amazon Web Services IAM Identity Center instance.</p>",
            "smithy.api#httpQuery": "granteeidentifier"
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#Permission",
          "traits": {
            "smithy.api#documentation": "<p>The type of permission granted to your S3 data, which can be set to one of the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>READ</code> – Grant read-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>WRITE</code> – Grant write-only access to the S3 data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READWRITE</code> – Grant both read and write access to the S3 data.</p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "permission"
          }
        },
        "GrantScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 path of the data to which you are granting access. It is the result of appending the <code>Subprefix</code> to the location scope.</p>",
            "smithy.api#httpQuery": "grantscope"
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.s3control#IdentityCenterApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of an Amazon Web Services IAM Identity Center application associated with your Identity Center instance. If the grant includes an application ARN, the grantee can only access the S3 data through this application. </p>",
            "smithy.api#httpQuery": "application_arn"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListAccessGrantsResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Pass this value into a subsequent <code>List Access Grants</code> request in order to retrieve the next page of results.</p>"
          }
        },
        "AccessGrantsList": {
          "target": "com.amazonaws.s3control#AccessGrantsList",
          "traits": {
            "smithy.api#documentation": "<p>A container for a list of grants in an S3 Access Grants instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListAccessPoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListAccessPointsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListAccessPointsResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns a list of the access points\n         that are\n         owned by the current account\n         that's\n         associated with the specified bucket. You can retrieve up to 1000 access points\n         per call. If the specified bucket has more than 1,000 access points (or the number specified in\n            <code>maxResults</code>, whichever is less), the response will include a continuation\n         token that you can use to list the additional access points.</p>\n         <p></p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html#API_control_GetAccessPoint_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>ListAccessPoints</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPoint.html\">CreateAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPoint.html\">DeleteAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPoint.html\">GetAccessPoint</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspoint",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListAccessPointsForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListAccessPointsForObjectLambdaRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListAccessPointsForObjectLambdaResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns some or all (up to 1,000) access points associated with the Object Lambda Access Point per call. If there\n         are more access points than what can be returned in one call, the response will include a\n         continuation token that you can use to list the additional access points.</p>\n         <p>The following actions are related to\n         <code>ListAccessPointsForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateAccessPointForObjectLambda.html\">CreateAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointForObjectLambda.html\">DeleteAccessPointForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointForObjectLambda.html\">GetAccessPointForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/accesspointforobjectlambda",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "ObjectLambdaAccessPointList",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListAccessPointsForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>If the list has more access points than can be returned in one call to this API, this field\n         contains a continuation token that you can provide in subsequent calls to this API to\n         retrieve additional access points.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of access points that you want to include in the list. The response may\n         contain fewer access points but will never contain more. If there are more than this number of\n         access points, then the response will include a continuation token in the <code>NextToken</code>\n         field that you can use to retrieve the next page of access points.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListAccessPointsForObjectLambdaResult": {
      "type": "structure",
      "members": {
        "ObjectLambdaAccessPointList": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointList",
          "traits": {
            "smithy.api#documentation": "<p>Returns list of Object Lambda Access Points.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>If the list has more access points than can be returned in one call to this API, this field\n         contains a continuation token that you can provide in subsequent calls to this API to\n         retrieve additional access points.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListAccessPointsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the account that owns the specified access points.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket whose associated access points you want to list.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpQuery": "bucket",
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token. If a previous call to <code>ListAccessPoints</code> returned a\n         continuation token in the <code>NextToken</code> field, then providing that value here\n         causes Amazon S3 to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of access points that you want to include in the list. If the specified\n         bucket has more than this number of access points, then the response will include a continuation\n         token in the <code>NextToken</code> field that you can use to retrieve the next page of\n         access points.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListAccessPointsResult": {
      "type": "structure",
      "members": {
        "AccessPointList": {
          "target": "com.amazonaws.s3control#AccessPointList",
          "traits": {
            "smithy.api#documentation": "<p>Contains identification and configuration information for one or more access points associated\n         with the specified bucket.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>If the specified bucket has more access points than can be returned in one call to this API,\n         this field contains a continuation token that you can provide in subsequent calls to this\n         API to retrieve additional access points.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListJobsResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.s3control#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists current S3 Batch Operations jobs as well as the jobs that have ended within the last 30 days for\n         the Amazon Web Services account making the request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\">S3 Batch Operations</a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>ListJobs</code> operation, you must have permission to\n                  perform the <code>s3:ListJobs</code> action.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <p></p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\">DescribeJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobPriority.html\">UpdateJobPriority</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\">UpdateJobStatus</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/jobs",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListJobsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobStatuses": {
          "target": "com.amazonaws.s3control#JobStatusList",
          "traits": {
            "smithy.api#documentation": "<p>The <code>List Jobs</code> request returns jobs that match the statuses listed in this\n         element.</p>",
            "smithy.api#httpQuery": "jobStatuses"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#StringForNextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results. Use the token that Amazon S3 returned\n         in the <code>NextToken</code> element of the <code>ListJobsResult</code> from the previous\n            <code>List Jobs</code> request.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The maximum number of jobs that Amazon S3 will include in the <code>List Jobs</code>\n         response. If there are more jobs than this number, the response will include a pagination\n         token in the <code>NextToken</code> field to enable you to retrieve the next page of\n         results.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListJobsResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#StringForNextToken",
          "traits": {
            "smithy.api#documentation": "<p>If the <code>List Jobs</code> request produced more than the maximum number of results,\n         you can pass this value into a subsequent <code>List Jobs</code> request in order to\n         retrieve the next page of results.</p>"
          }
        },
        "Jobs": {
          "target": "com.amazonaws.s3control#JobListDescriptorList",
          "traits": {
            "smithy.api#documentation": "<p>The list of current jobs and jobs that have ended within the last 30 days.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListMultiRegionAccessPoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListMultiRegionAccessPointsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListMultiRegionAccessPointsResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns a list of the Multi-Region Access Points currently associated with the specified Amazon Web Services account.\n         Each call can return up to 100 Multi-Region Access Points, the maximum number of Multi-Region Access Points that can be\n         associated with a single account.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to <code>ListMultiRegionAccessPoint</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateMultiRegionAccessPoint.html\">CreateMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteMultiRegionAccessPoint.html\">DeleteMultiRegionAccessPoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPoint.html\">GetMultiRegionAccessPoint</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/mrap/instances",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListMultiRegionAccessPointsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>Not currently used. Do not use this parameter.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Not currently used. Do not use this parameter.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListMultiRegionAccessPointsResult": {
      "type": "structure",
      "members": {
        "AccessPoints": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointReportList",
          "traits": {
            "smithy.api#documentation": "<p>The list of Multi-Region Access Points associated with the user.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>If the specified bucket has more Multi-Region Access Points than can be returned in one call to this\n         action, this field contains a continuation token. You can use this token tin subsequent\n         calls to this action to retrieve additional Multi-Region Access Points.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListRegionalBuckets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListRegionalBucketsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListRegionalBucketsResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Returns a list of all Outposts buckets in an Outpost that are owned by the authenticated\n         sender of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <p>For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts\n         endpoint hostname prefix and <code>x-amz-outpost-id</code> in your request, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListRegionalBuckets.html#API_control_ListRegionalBuckets_Examples\">Examples</a> section.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/bucket",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListRegionalBucketsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.s3control#MaxResults",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p></p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "OutpostId": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength64String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Outposts resource.</p>\n         <note>\n            <p>This ID is required by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-outpost-id",
            "smithy.rules#contextParam": {
              "name": "OutpostId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListRegionalBucketsResult": {
      "type": "structure",
      "members": {
        "RegionalBucketList": {
          "target": "com.amazonaws.s3control#RegionalBucketList",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>\n            <code>NextToken</code> is sent when <code>isTruncated</code> is true, which means there\n         are more buckets that can be listed. The next list requests to Amazon S3 can be continued with\n         this <code>NextToken</code>. <code>NextToken</code> is obfuscated and is not a real\n         key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListStorageLensConfigurationEntry": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens configuration ID.</p>",
            "smithy.api#required": {}
          }
        },
        "StorageLensArn": {
          "target": "com.amazonaws.s3control#StorageLensArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the S3 Storage Lens configuration. This property is read-only.</p>",
            "smithy.api#required": {}
          }
        },
        "HomeRegion": {
          "target": "com.amazonaws.s3control#S3AWSRegion",
          "traits": {
            "smithy.api#documentation": "<p>A container for the S3 Storage Lens home Region. Your metrics data is stored and retained in\n         your designated S3 Storage Lens home Region.</p>",
            "smithy.api#required": {}
          }
        },
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container for whether the S3 Storage Lens configuration is enabled. This property is\n         required.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Part of <code>ListStorageLensConfigurationResult</code>. Each entry includes the\n         description of the S3 Storage Lens configuration, its home Region, whether it is enabled, its\n         Amazon Resource Name (ARN), and config ID.</p>"
      }
    },
    "com.amazonaws.s3control#ListStorageLensConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListStorageLensConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListStorageLensConfigurationsResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Gets a list of Amazon S3 Storage Lens configurations. For more information about S3 Storage Lens, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your\n            storage activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:ListStorageLensConfigurations</code> action. For more information, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to\n               use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/storagelens",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListStorageLensConfigurationsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token to request the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListStorageLensConfigurationsResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>If the request produced more than the maximum number of S3 Storage Lens configuration results,\n         you can pass this value into a subsequent request to retrieve the next page of\n         results.</p>"
          }
        },
        "StorageLensConfigurationList": {
          "target": "com.amazonaws.s3control#StorageLensConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>A list of S3 Storage Lens configurations.</p>",
            "smithy.api#xmlFlattened": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListStorageLensGroupEntry": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#StorageLensGroupName",
          "traits": {
            "smithy.api#documentation": "<p>\nContains the name of the Storage Lens group that exists in the specified home Region.\n</p>",
            "smithy.api#required": {}
          }
        },
        "StorageLensGroupArn": {
          "target": "com.amazonaws.s3control#StorageLensGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>\nContains the Amazon Resource Name (ARN) of the Storage Lens group. This property is read-only.\n</p>",
            "smithy.api#required": {}
          }
        },
        "HomeRegion": {
          "target": "com.amazonaws.s3control#S3AWSRegion",
          "traits": {
            "smithy.api#documentation": "<p>\nContains the Amazon Web Services Region where the Storage Lens group was created.\n</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\nEach entry contains a Storage Lens group that exists in the specified home Region.\n</p>"
      }
    },
    "com.amazonaws.s3control#ListStorageLensGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListStorageLensGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListStorageLensGroupsResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>\nLists all the Storage Lens groups in the specified home Region.\n</p>\n         <p>To use this operation, you must have the permission to perform the\n      <code>s3:ListStorageLensGroups</code> action. For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about Storage Lens groups errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3LensErrorCodeList\">List of Amazon S3 Storage\n      Lens error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/storagelensgroup",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken"
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListStorageLensGroupsRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\n   The Amazon Web Services account ID that owns the Storage Lens groups.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or <code>null</code> if there are no more results.\n   </p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListStorageLensGroupsResult": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.s3control#ContinuationToken",
          "traits": {
            "smithy.api#documentation": "<p>\n   If <code>NextToken</code> is returned, there are more Storage Lens groups results available. The value of <code>NextToken</code> is a\n      unique pagination token for each page. Make the call again using the returned token to\n      retrieve the next page. Keep all other arguments unchanged. Each pagination token expires\n      after 24 hours.\n</p>"
          }
        },
        "StorageLensGroupList": {
          "target": "com.amazonaws.s3control#StorageLensGroupList",
          "traits": {
            "smithy.api#documentation": "<p>\nThe list of Storage Lens groups that exist in the specified home Region.\n</p>",
            "smithy.api#xmlFlattened": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#ListTagsForResourceResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>This operation allows you to list all the Amazon Web Services resource tags for a specified resource. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:ListTagsForResource</code> permission to use this operation. </p>\n            </dd>\n         </dl>\n         <note>\n            <p>This operation is only supported for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-lens-groups.html\">S3 Storage Lens groups</a> and for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-tagging.html\">S3 Access Grants</a>. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant. </p>\n         </note>\n         <p>For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about S3 Tagging errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3TaggingErrorCodeList\">List of Amazon S3 Tagging error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v20180820/tags/{ResourceArn+}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID of the resource owner.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.s3control#S3ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Resource Name (ARN) of the S3 resource that you want to list the tags for. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant.\n</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#ListTagsForResourceResult": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services resource tags that are associated with the resource. \n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#Location": {
      "type": "string"
    },
    "com.amazonaws.s3control#MFA": {
      "type": "string"
    },
    "com.amazonaws.s3control#MFADelete": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#MFADeleteStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#ManifestPrefixString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        }
      }
    },
    "com.amazonaws.s3control#MatchAnyPrefix": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#Prefix",
        "traits": {
          "smithy.api#xmlName": "Prefix"
        }
      }
    },
    "com.amazonaws.s3control#MatchAnySuffix": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#Suffix",
        "traits": {
          "smithy.api#xmlName": "Suffix"
        }
      }
    },
    "com.amazonaws.s3control#MatchAnyTag": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3Tag",
        "traits": {
          "smithy.api#xmlName": "Tag"
        }
      }
    },
    "com.amazonaws.s3control#MatchObjectAge": {
      "type": "structure",
      "members": {
        "DaysGreaterThan": {
          "target": "com.amazonaws.s3control#ObjectAgeValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>\nSpecifies the maximum object age in days. Must be a positive whole number, greater than the minimum object age and less than or equal to 2,147,483,647. \n</p>"
          }
        },
        "DaysLessThan": {
          "target": "com.amazonaws.s3control#ObjectAgeValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>\nSpecifies the minimum object age in days. The value must be a positive whole number, greater than 0 and less than or equal to 2,147,483,647.\n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n   A filter condition that specifies the object age range of included objects in days. Only integers are supported.\n</p>"
      }
    },
    "com.amazonaws.s3control#MatchObjectSize": {
      "type": "structure",
      "members": {
        "BytesGreaterThan": {
          "target": "com.amazonaws.s3control#ObjectSizeValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>\nSpecifies the minimum object size in Bytes. The value must be a positive number, greater than 0 and less than 5 TB.\n</p>"
          }
        },
        "BytesLessThan": {
          "target": "com.amazonaws.s3control#ObjectSizeValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>\nSpecifies the maximum object size in Bytes. The value must be a positive number, greater than the minimum object size and less than 5 TB.\n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\nA filter condition that specifies the object size range of included objects in bytes. Only integers are supported.\n</p>"
      }
    },
    "com.amazonaws.s3control#MaxLength1024String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.s3control#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 1000
        }
      }
    },
    "com.amazonaws.s3control#Metrics": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#MetricsStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether replication metrics are enabled. </p>",
            "smithy.api#required": {}
          }
        },
        "EventThreshold": {
          "target": "com.amazonaws.s3control#ReplicationTimeValue",
          "traits": {
            "smithy.api#documentation": "<p>A container that specifies the time threshold for emitting the\n            <code>s3:Replication:OperationMissedThreshold</code> event. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container that specifies replication metrics-related settings.</p>"
      }
    },
    "com.amazonaws.s3control#MetricsStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#MinStorageBytesPercentage": {
      "type": "double",
      "traits": {
        "smithy.api#range": {
          "min": 0.1,
          "max": 100
        }
      }
    },
    "com.amazonaws.s3control#Minutes": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointAlias": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 63
        },
        "smithy.api#pattern": "^[a-z][a-z0-9]*[.]mrap$"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^\\S+$"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\:.-]{3,200}$"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        },
        "smithy.api#pattern": "^[a-z0-9][-a-z0-9]{1,48}[a-z0-9]$"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointPolicyDocument": {
      "type": "structure",
      "members": {
        "Established": {
          "target": "com.amazonaws.s3control#EstablishedMultiRegionAccessPointPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The last established policy for the Multi-Region Access Point.</p>"
          }
        },
        "Proposed": {
          "target": "com.amazonaws.s3control#ProposedMultiRegionAccessPointPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The proposed policy for the Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Multi-Region Access Point access control policy.</p>\n         <p>When you update the policy, the update is first listed as the proposed policy. After the\n         update is finished and all Regions have been updated, the proposed policy is listed as the\n         established policy. If both policies have the same version number, the proposed policy is\n         the established policy.</p>"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointRegionalResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#RegionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Region in the Multi-Region Access Point.</p>"
          }
        },
        "RequestStatus": {
          "target": "com.amazonaws.s3control#AsyncRequestStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the Multi-Region Access Point in this Region.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Status information for a single Multi-Region Access Point Region.</p>"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointRegionalResponseList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#MultiRegionAccessPointRegionalResponse",
        "traits": {
          "smithy.api#xmlName": "Region"
        }
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointReport": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Multi-Region Access Point.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointAlias",
          "traits": {
            "smithy.api#documentation": "<p>The alias for the Multi-Region Access Point. For more information about the distinction between the name\n         and the alias of an Multi-Region Access Point, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CreatingMultiRegionAccessPoints.html#multi-region-access-point-naming\">Managing Multi-Region Access Points</a>.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the Multi-Region Access Point create request was received.</p>"
          }
        },
        "PublicAccessBlock": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration"
        },
        "Status": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the Multi-Region Access Point.</p>\n         <p>\n            <code>CREATING</code> and <code>DELETING</code> are temporary states that exist while\n         the request is propagating and being completed. If a Multi-Region Access Point has a status of\n            <code>PARTIALLY_CREATED</code>, you can retry creation or send a request to delete the\n         Multi-Region Access Point. If a Multi-Region Access Point has a status of <code>PARTIALLY_DELETED</code>, you can retry a delete\n         request to finish the deletion of the Multi-Region Access Point.</p>"
          }
        },
        "Regions": {
          "target": "com.amazonaws.s3control#RegionReportList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of the Regions and buckets associated with the Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A collection of statuses for a Multi-Region Access Point in the various Regions it supports.</p>"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointReportList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#MultiRegionAccessPointReport",
        "traits": {
          "smithy.api#xmlName": "AccessPoint"
        }
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointRoute": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon S3 bucket for which you'll submit a routing configuration change.\n         Either the <code>Bucket</code> or the <code>Region</code> value must be provided. If both\n         are provided, the bucket must be in the specified Region.</p>"
          }
        },
        "Region": {
          "target": "com.amazonaws.s3control#RegionName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services Region to which you'll be submitting a routing configuration change. Either\n         the <code>Bucket</code> or the <code>Region</code> value must be provided. If both are\n         provided, the bucket must be in the specified Region.</p>"
          }
        },
        "TrafficDialPercentage": {
          "target": "com.amazonaws.s3control#TrafficDialPercentage",
          "traits": {
            "smithy.api#documentation": "<p>The traffic state for the specified bucket or Amazon Web Services Region. </p>\n         <p>A value of <code>0</code> indicates a passive state, which means that no new traffic\n         will be routed to the Region. </p>\n         <p>A value of <code>100</code> indicates an active state, which means that traffic will be\n         routed to the specified Region. </p>\n         <p>When the routing configuration for a Region is changed from active to passive, any\n         in-progress operations (uploads, copies, deletes, and so on) to the formerly active Region\n         will continue to run to until a final success or failure status is reached.</p>\n         <p>If all Regions in the routing configuration are designated as passive, you'll receive an\n            <code>InvalidRequest</code> error.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for a Multi-Region Access Point that indicates where Amazon S3 traffic can be routed. Routes can be\n         either active or passive. Active routes can process Amazon S3 requests through the Multi-Region Access Point, but\n         passive routes are not eligible to process Amazon S3 requests. </p>\n         <p>Each route contains the Amazon S3 bucket name and the Amazon Web Services Region that the bucket is located\n         in. The route also includes the <code>TrafficDialPercentage</code> value, which shows\n         whether the bucket and Region are active (indicated by a value of <code>100</code>) or\n         passive (indicated by a value of <code>0</code>).</p>"
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointStatus": {
      "type": "enum",
      "members": {
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "INCONSISTENT_ACROSS_REGIONS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INCONSISTENT_ACROSS_REGIONS"
          }
        },
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "PARTIALLY_CREATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PARTIALLY_CREATED"
          }
        },
        "PARTIALLY_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PARTIALLY_DELETED"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        }
      }
    },
    "com.amazonaws.s3control#MultiRegionAccessPointsAsyncResponse": {
      "type": "structure",
      "members": {
        "Regions": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointRegionalResponseList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of status information for the different Regions that a Multi-Region Access Point\n         supports.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Multi-Region Access Point details that are returned when querying about an asynchronous request.</p>"
      }
    },
    "com.amazonaws.s3control#NetworkOrigin": {
      "type": "enum",
      "members": {
        "Internet": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Internet"
          }
        },
        "VPC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VPC"
          }
        }
      }
    },
    "com.amazonaws.s3control#NoSuchPublicAccessBlockConfiguration": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#NoSuchPublicAccessBlockConfigurationMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon S3 throws this exception if you make a <code>GetPublicAccessBlock</code> request\n         against an account that doesn't have a <code>PublicAccessBlockConfiguration</code>\n         set.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.s3control#NoSuchPublicAccessBlockConfigurationMessage": {
      "type": "string"
    },
    "com.amazonaws.s3control#NonEmptyMaxLength1024String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.s3control#NonEmptyMaxLength1024StringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String"
      }
    },
    "com.amazonaws.s3control#NonEmptyMaxLength2048String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.s3control#NonEmptyMaxLength256String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.s3control#NonEmptyMaxLength64String": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.s3control#NoncurrentVersionCount": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#NoncurrentVersionExpiration": {
      "type": "structure",
      "members": {
        "NoncurrentDays": {
          "target": "com.amazonaws.s3control#Days",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the\n         associated action. For information about the noncurrent days calculations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations\">How\n            Amazon S3 Calculates When an Object Became Noncurrent</a> in the\n            <i>Amazon S3 User Guide</i>.</p>"
          }
        },
        "NewerNoncurrentVersions": {
          "target": "com.amazonaws.s3control#NoncurrentVersionCount",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Specifies how many noncurrent versions S3 on Outposts will retain. If there are this many\n         more recent noncurrent versions, S3 on Outposts will take the associated action. For more\n         information about noncurrent versions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/intro-lifecycle-rules.html\">Lifecycle configuration\n            elements</a> in the <i>Amazon S3 User Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container of the noncurrent version expiration.</p>"
      }
    },
    "com.amazonaws.s3control#NoncurrentVersionTransition": {
      "type": "structure",
      "members": {
        "NoncurrentDays": {
          "target": "com.amazonaws.s3control#Days",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the\n         associated action. For information about the noncurrent days calculations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations\"> How\n            Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the\n            <i>Amazon S3 User Guide</i>.</p>"
          }
        },
        "StorageClass": {
          "target": "com.amazonaws.s3control#TransitionStorageClass",
          "traits": {
            "smithy.api#documentation": "<p>The class of storage used to store the object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the noncurrent version transition.</p>"
      }
    },
    "com.amazonaws.s3control#NoncurrentVersionTransitionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#NoncurrentVersionTransition",
        "traits": {
          "smithy.api#xmlName": "NoncurrentVersionTransition"
        }
      }
    },
    "com.amazonaws.s3control#NotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#ObjectAgeValue": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#ObjectCreationTime": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPoint": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#required": {}
          }
        },
        "ObjectLambdaAccessPointArn": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ARN for the Object Lambda Access Point.</p>"
          }
        },
        "Alias": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointAlias",
          "traits": {
            "smithy.api#documentation": "<p>The alias of the Object Lambda Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An access point with an attached Lambda function used to access transformed data from an Amazon S3\n         bucket.</p>"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointAlias": {
      "type": "structure",
      "members": {
        "Value": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointAliasValue",
          "traits": {
            "smithy.api#documentation": "<p>The alias value of the Object Lambda Access Point.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointAliasStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the Object Lambda Access Point alias. If the status is <code>PROVISIONING</code>, the Object Lambda Access Point\n         is provisioning the alias and the alias is not ready for use yet. If the status is\n            <code>READY</code>, the Object Lambda Access Point alias is successfully provisioned and ready for\n         use.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The alias of an Object Lambda Access Point. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-use.html#ol-access-points-alias\">How to use a\n            bucket-style alias for your S3 bucket Object Lambda Access Point</a>.</p>"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointAliasStatus": {
      "type": "enum",
      "members": {
        "PROVISIONING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PROVISIONING"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 16
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointAliasValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 63
        },
        "smithy.api#pattern": "^[0-9a-z\\\\-]{3,63}$"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[^:]+:s3-object-lambda:[^:]*:\\d{12}:accesspoint/"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ObjectLambdaAccessPoint",
        "traits": {
          "smithy.api#xmlName": "ObjectLambdaAccessPoint"
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAccessPointName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 45
        },
        "smithy.api#pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAllowedFeature": {
      "type": "enum",
      "members": {
        "GetObjectRange": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GetObject-Range"
          }
        },
        "GetObjectPartNumber": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GetObject-PartNumber"
          }
        },
        "HeadObjectRange": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HeadObject-Range"
          }
        },
        "HeadObjectPartNumber": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HeadObject-PartNumber"
          }
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaAllowedFeaturesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ObjectLambdaAllowedFeature",
        "traits": {
          "smithy.api#xmlName": "AllowedFeature"
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaConfiguration": {
      "type": "structure",
      "members": {
        "SupportingAccessPoint": {
          "target": "com.amazonaws.s3control#ObjectLambdaSupportingAccessPointArn",
          "traits": {
            "smithy.api#documentation": "<p>Standard access point associated with the Object Lambda Access Point.</p>",
            "smithy.api#required": {}
          }
        },
        "CloudWatchMetricsEnabled": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container for whether the CloudWatch metrics configuration is enabled.</p>"
          }
        },
        "AllowedFeatures": {
          "target": "com.amazonaws.s3control#ObjectLambdaAllowedFeaturesList",
          "traits": {
            "smithy.api#documentation": "<p>A container for allowed features. Valid inputs are <code>GetObject-Range</code>,\n            <code>GetObject-PartNumber</code>, <code>HeadObject-Range</code>, and\n            <code>HeadObject-PartNumber</code>.</p>"
          }
        },
        "TransformationConfigurations": {
          "target": "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationsList",
          "traits": {
            "smithy.api#documentation": "<p>A container for transformation configurations for an Object Lambda Access Point.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration used when creating an Object Lambda Access Point.</p>"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaContentTransformation": {
      "type": "union",
      "members": {
        "AwsLambda": {
          "target": "com.amazonaws.s3control#AwsLambdaTransformation",
          "traits": {
            "smithy.api#documentation": "<p>A container for an Lambda function.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for AwsLambdaTransformation.</p>"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaPolicy": {
      "type": "string"
    },
    "com.amazonaws.s3control#ObjectLambdaSupportingAccessPointArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:[^:]+:s3:[^:]*:\\d{12}:accesspoint/"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaTransformationConfiguration": {
      "type": "structure",
      "members": {
        "Actions": {
          "target": "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationActionsList",
          "traits": {
            "smithy.api#documentation": "<p>A container for the action of an Object Lambda Access Point configuration. Valid inputs are\n            <code>GetObject</code>, <code>ListObjects</code>, <code>HeadObject</code>, and\n            <code>ListObjectsV2</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "ContentTransformation": {
          "target": "com.amazonaws.s3control#ObjectLambdaContentTransformation",
          "traits": {
            "smithy.api#documentation": "<p>A container for the content transformation of an Object Lambda Access Point configuration.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration used when creating an Object Lambda Access Point transformation.</p>"
      }
    },
    "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationAction": {
      "type": "enum",
      "members": {
        "GetObject": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GetObject"
          }
        },
        "HeadObject": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HeadObject"
          }
        },
        "ListObjects": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ListObjects"
          }
        },
        "ListObjectsV2": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ListObjectsV2"
          }
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationActionsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationAction",
        "traits": {
          "smithy.api#xmlName": "Action"
        }
      }
    },
    "com.amazonaws.s3control#ObjectLambdaTransformationConfigurationsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ObjectLambdaTransformationConfiguration",
        "traits": {
          "smithy.api#xmlName": "TransformationConfiguration"
        }
      }
    },
    "com.amazonaws.s3control#ObjectLockEnabledForBucket": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#ObjectSizeGreaterThanBytes": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#ObjectSizeLessThanBytes": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#ObjectSizeValue": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#OperationName": {
      "type": "enum",
      "members": {
        "LambdaInvoke": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LambdaInvoke"
          }
        },
        "S3PutObjectCopy": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3PutObjectCopy"
          }
        },
        "S3PutObjectAcl": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3PutObjectAcl"
          }
        },
        "S3PutObjectTagging": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3PutObjectTagging"
          }
        },
        "S3DeleteObjectTagging": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3DeleteObjectTagging"
          }
        },
        "S3InitiateRestoreObject": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3InitiateRestoreObject"
          }
        },
        "S3PutObjectLegalHold": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3PutObjectLegalHold"
          }
        },
        "S3PutObjectRetention": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3PutObjectRetention"
          }
        },
        "S3ReplicateObject": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "S3ReplicateObject"
          }
        }
      }
    },
    "com.amazonaws.s3control#Organization": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 12,
          "max": 34
        },
        "smithy.api#pattern": "^o-[a-z0-9]{10,32}$"
      }
    },
    "com.amazonaws.s3control#OutputSchemaVersion": {
      "type": "enum",
      "members": {
        "V_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "V_1"
          }
        }
      }
    },
    "com.amazonaws.s3control#OwnerOverride": {
      "type": "enum",
      "members": {
        "Destination": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Destination"
          }
        }
      }
    },
    "com.amazonaws.s3control#Permission": {
      "type": "enum",
      "members": {
        "READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READ"
          }
        },
        "WRITE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WRITE"
          }
        },
        "READWRITE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READWRITE"
          }
        }
      }
    },
    "com.amazonaws.s3control#Policy": {
      "type": "string"
    },
    "com.amazonaws.s3control#PolicyDocument": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 350000
        }
      }
    },
    "com.amazonaws.s3control#PolicyStatus": {
      "type": "structure",
      "members": {
        "IsPublic": {
          "target": "com.amazonaws.s3control#IsPublic",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p></p>",
            "smithy.api#xmlName": "IsPublic"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates whether this access point policy is public. For more information about how Amazon S3\n         evaluates policies to determine whether they are public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a> in the <i>Amazon S3 User Guide</i>. </p>"
      }
    },
    "com.amazonaws.s3control#Prefix": {
      "type": "string"
    },
    "com.amazonaws.s3control#PrefixLevel": {
      "type": "structure",
      "members": {
        "StorageMetrics": {
          "target": "com.amazonaws.s3control#PrefixLevelStorageMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for the prefix-level storage metrics for S3 Storage Lens.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the prefix-level configuration.</p>"
      }
    },
    "com.amazonaws.s3control#PrefixLevelStorageMetrics": {
      "type": "structure",
      "members": {
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container for whether prefix-level storage metrics are enabled.</p>"
          }
        },
        "SelectionCriteria": {
          "target": "com.amazonaws.s3control#SelectionCriteria"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the prefix-level storage metrics for S3 Storage Lens.</p>"
      }
    },
    "com.amazonaws.s3control#Priority": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.s3control#Privilege": {
      "type": "enum",
      "members": {
        "Minimal": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Minimal"
          }
        },
        "Default": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Default"
          }
        }
      }
    },
    "com.amazonaws.s3control#ProposedMultiRegionAccessPointPolicy": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The details of the proposed policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The proposed access control policy for the Multi-Region Access Point.</p>\n         <p>When you update the policy, the update is first listed as the proposed policy. After the\n         update is finished and all Regions have been updated, the proposed policy is listed as the\n         established policy. If both policies have the same version number, the proposed policy is\n         the established policy.</p>"
      }
    },
    "com.amazonaws.s3control#PublicAccessBlockConfiguration": {
      "type": "structure",
      "members": {
        "BlockPublicAcls": {
          "target": "com.amazonaws.s3control#Setting",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 should block public access control lists (ACLs) for buckets in\n         this account. Setting this element to <code>TRUE</code> causes the following\n         behavior:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PutBucketAcl</code> and <code>PutObjectAcl</code> calls fail if the\n               specified ACL is public.</p>\n            </li>\n            <li>\n               <p>PUT Object calls fail if the request includes a public ACL.</p>\n            </li>\n            <li>\n               <p>PUT Bucket calls fail if the request includes a public ACL.</p>\n            </li>\n         </ul>\n         <p>Enabling this setting doesn't affect existing policies or ACLs.</p>\n         <p>This property is not supported for Amazon S3 on Outposts.</p>",
            "smithy.api#xmlName": "BlockPublicAcls"
          }
        },
        "IgnorePublicAcls": {
          "target": "com.amazonaws.s3control#Setting",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 should ignore public ACLs for buckets in this account. Setting\n         this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on buckets in this\n         account and any objects that they contain. </p>\n         <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't\n         prevent new public ACLs from being set.</p>\n         <p>This property is not supported for Amazon S3 on Outposts.</p>",
            "smithy.api#xmlName": "IgnorePublicAcls"
          }
        },
        "BlockPublicPolicy": {
          "target": "com.amazonaws.s3control#Setting",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 should block public bucket policies for buckets in this account.\n         Setting this element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy\n         if the specified bucket policy allows public access. </p>\n         <p>Enabling this setting doesn't affect existing bucket policies.</p>\n         <p>This property is not supported for Amazon S3 on Outposts.</p>",
            "smithy.api#xmlName": "BlockPublicPolicy"
          }
        },
        "RestrictPublicBuckets": {
          "target": "com.amazonaws.s3control#Setting",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 should restrict public bucket policies for buckets in this\n         account. Setting this element to <code>TRUE</code> restricts access to buckets with public\n         policies to only Amazon Web Service principals and authorized users within this\n         account.</p>\n         <p>Enabling this setting doesn't affect previously stored bucket policies, except that\n         public and cross-account access within any public bucket policy, including non-public\n         delegation to specific accounts, is blocked.</p>\n         <p>This property is not supported for Amazon S3 on Outposts.</p>",
            "smithy.api#xmlName": "RestrictPublicBuckets"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3\n         account. You can enable the configuration options in any combination. For more information\n         about when Amazon S3 considers a bucket or object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>This data type is not supported for Amazon S3 on Outposts.</p>"
      }
    },
    "com.amazonaws.s3control#PublicAccessBlockEnabled": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates the resource policy of the S3 Access Grants instance. </p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:PutAccessGrantsInstanceResourcePolicy</code> permission to use this operation. </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accessgrantsinstance/resourcepolicy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Policy": {
          "target": "com.amazonaws.s3control#PolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The resource policy of the S3 Access Grants instance that you are updating.</p>",
            "smithy.api#required": {}
          }
        },
        "Organization": {
          "target": "com.amazonaws.s3control#Organization",
          "traits": {
            "smithy.api#documentation": "<p>The Organization of the resource policy of the S3 Access Grants instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutAccessGrantsInstanceResourcePolicyResult": {
      "type": "structure",
      "members": {
        "Policy": {
          "target": "com.amazonaws.s3control#PolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The updated resource policy of the S3 Access Grants instance.</p>"
          }
        },
        "Organization": {
          "target": "com.amazonaws.s3control#Organization",
          "traits": {
            "smithy.api#documentation": "<p>The Organization of the resource policy of the S3 Access Grants instance.</p>"
          }
        },
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you created the S3 Access Grants instance resource policy. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#PutAccessPointConfigurationForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutAccessPointConfigurationForObjectLambdaRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Replaces configuration for an Object Lambda Access Point.</p>\n         <p>The following actions are related to\n            <code>PutAccessPointConfigurationForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointConfigurationForObjectLambda.html\">GetAccessPointConfigurationForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/configuration",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutAccessPointConfigurationForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Configuration": {
          "target": "com.amazonaws.s3control#ObjectLambdaConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Object Lambda Access Point configuration document.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutAccessPointPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutAccessPointPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Associates an access policy with the specified access point. Each access point can have only one policy,\n         so a request made to this API replaces any existing policy associated with the specified\n         access point.</p>\n         <p></p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutAccessPointPolicy.html#API_control_PutAccessPointPolicy_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>PutAccessPointPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicy.html\">GetAccessPointPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicy.html\">DeleteAccessPointPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accesspoint/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutAccessPointPolicyForObjectLambda": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutAccessPointPolicyForObjectLambdaRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Creates or replaces resource policy for an Object Lambda Access Point. For an example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-create.html#olap-create-cli\">Creating Object Lambda Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to\n         <code>PutAccessPointPolicyForObjectLambda</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteAccessPointPolicyForObjectLambda.html\">DeleteAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetAccessPointPolicyForObjectLambda.html\">GetAccessPointPolicyForObjectLambda</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accesspointforobjectlambda/{Name}/policy",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutAccessPointPolicyForObjectLambdaRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the account that owns the specified Object Lambda Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#ObjectLambdaAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Object Lambda Access Point.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Policy": {
          "target": "com.amazonaws.s3control#ObjectLambdaPolicy",
          "traits": {
            "smithy.api#documentation": "<p>Object Lambda Access Point resource policy document.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutAccessPointPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for owner of the bucket associated with the specified access point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Name": {
          "target": "com.amazonaws.s3control#AccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the access point that you want to associate with the specified policy.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the access point accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/accesspoint/<my-accesspoint-name></code>. For example, to access the access point <code>reports-ap</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/accesspoint/reports-ap</code>. The value must be URL encoded. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccessPointName"
            }
          }
        },
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The policy that you want to apply to the specified access point. For more information about access point\n         policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html\">Managing data access with Amazon S3\n            access points</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutBucketLifecycleConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutBucketLifecycleConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action puts a lifecycle configuration to an Amazon S3 on Outposts bucket. To put a\n            lifecycle configuration to an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a> in the <i>Amazon S3 API Reference</i>.\n         </p>\n         </note>\n         <p>Creates a new lifecycle configuration for the S3 on Outposts bucket or replaces an\n         existing lifecycle configuration. Outposts buckets only support lifecycle configurations\n         that delete/expire objects after a certain period of time and abort incomplete multipart\n         uploads.</p>\n         <p></p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html#API_control_PutBucketLifecycleConfiguration_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to\n         <code>PutBucketLifecycleConfiguration</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketLifecycleConfiguration.html\">DeleteBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}/lifecycleconfiguration",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutBucketLifecycleConfigurationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket for which to set the configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "LifecycleConfiguration": {
          "target": "com.amazonaws.s3control#LifecycleConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Container for lifecycle rules. You can add as many as 1,000 rules.</p>",
            "smithy.api#httpPayload": {},
            "smithy.api#xmlName": "LifecycleConfiguration"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutBucketPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutBucketPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action puts a bucket policy to an Amazon S3 on Outposts bucket. To put a policy on an\n            S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\">PutBucketPolicy</a> in the\n               <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Applies an Amazon S3 bucket policy to an Outposts bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>If you are using an identity other than the root user of the Amazon Web Services account that owns the\n         Outposts bucket, the calling identity must have the <code>PutBucketPolicy</code>\n         permissions on the specified Outposts bucket and belong to the bucket owner's account in\n         order to use this action.</p>\n         <p>If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n            Access Denied</code> error. If you have the correct permissions, but you're not using an\n         identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n            Allowed</code> error.</p>\n         <important>\n            <p> As a security precaution, the root user of the Amazon Web Services account that owns a bucket can\n            always use this action, even if the policy explicitly denies the root user the ability\n            to perform this action. </p>\n         </important>\n         <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n            Policies</a>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketPolicy.html#API_control_PutBucketPolicy_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>PutBucketPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketPolicy.html\">GetBucketPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketPolicy.html\">DeleteBucketPolicy</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}/policy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutBucketPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "ConfirmRemoveSelfBucketAccess": {
          "target": "com.amazonaws.s3control#ConfirmRemoveSelfBucketAccess",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Set this parameter to true to confirm that you want to remove your permissions to change\n         this bucket policy in the future.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>",
            "smithy.api#httpHeader": "x-amz-confirm-remove-self-bucket-access"
          }
        },
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The bucket policy as a JSON document.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutBucketReplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutBucketReplicationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action creates an Amazon S3 on Outposts bucket's replication configuration. To create\n            an S3 bucket's replication configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\">PutBucketReplication</a>\n            in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Creates a replication configuration or replaces an existing one. For information about\n         S3 replication on Outposts configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html\">Replicating objects for\n            S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>It can take a while to propagate <code>PUT</code> or <code>DELETE</code> requests for\n            a replication configuration to all S3 on Outposts systems. Therefore, the replication\n            configuration that's returned by a <code>GET</code> request soon after a\n               <code>PUT</code> or <code>DELETE</code> request might return a more recent result\n            than what's on the Outpost. If an Outpost is offline, the delay in updating the\n            replication configuration on that Outpost can be significant.</p>\n         </note>\n         <p>Specify the replication configuration in the request body. In the replication\n         configuration, you provide the following information:</p>\n         <ul>\n            <li>\n               <p>The name of the destination bucket or buckets where you want S3 on Outposts to\n               replicate objects</p>\n            </li>\n            <li>\n               <p>The Identity and Access Management (IAM) role that S3 on Outposts can assume to replicate objects on\n               your behalf</p>\n            </li>\n            <li>\n               <p>Other relevant information, such as replication rules</p>\n            </li>\n         </ul>\n         <p>A replication configuration must include at least one rule and can contain a maximum of\n         100. Each rule identifies a subset of objects to replicate by filtering the objects in the\n         source Outposts bucket. To choose additional subsets of objects to replicate, add a rule\n         for each subset.</p>\n         <p>To specify a subset of the objects in the source Outposts bucket to apply a replication\n         rule to, add the <code>Filter</code> element as a child of the <code>Rule</code> element.\n         You can filter objects based on an object key prefix, one or more object tags, or both.\n         When you add the <code>Filter</code> element in the configuration, you must also add the\n         following elements: <code>DeleteMarkerReplication</code>, <code>Status</code>, and\n            <code>Priority</code>.</p>\n         <p>Using <code>PutBucketReplication</code> on Outposts requires that both the source and\n         destination buckets must have versioning enabled. For information about enabling versioning\n         on a bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsManagingVersioning.html\">Managing S3 Versioning\n            for your S3 on Outposts bucket</a>.</p>\n         <p>For information about S3 on Outposts replication failure reasons, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/outposts-replication-eventbridge.html#outposts-replication-failure-codes\">Replication failure reasons</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>\n            <b>Handling Replication of Encrypted Objects</b>\n         </p>\n         <p>Outposts buckets are encrypted at all times. All the objects in the source Outposts\n         bucket are encrypted and can be replicated. Also, all the replicas in the destination\n         Outposts bucket are encrypted with the same encryption key as the objects in the source\n         Outposts bucket.</p>\n         <p>\n            <b>Permissions</b>\n         </p>\n         <p>To create a <code>PutBucketReplication</code> request, you must have\n            <code>s3-outposts:PutReplicationConfiguration</code> permissions for the bucket. The\n         Outposts bucket owner has this permission by default and can grant it to others. For more\n         information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsIAM.html\">Setting up IAM with\n            S3 on Outposts</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsBucketPolicy.html\">Managing access to\n            S3 on Outposts buckets</a>. </p>\n         <note>\n            <p>To perform this operation, the user or role must also have the\n               <code>iam:CreateRole</code> and <code>iam:PassRole</code> permissions. For more\n            information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html\">Granting a user permissions to\n               pass a role to an Amazon Web Services service</a>.</p>\n         </note>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketReplication.html#API_control_PutBucketReplication_Examples\">Examples</a> section.</p>\n         <p>The following operations are related to <code>PutBucketReplication</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketReplication.html\">GetBucketReplication</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketReplication.html\">DeleteBucketReplication</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}/replication",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutBucketReplicationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the S3 on Outposts bucket to set the configuration for.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "ReplicationConfiguration": {
          "target": "com.amazonaws.s3control#ReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {},
            "smithy.api#xmlName": "ReplicationConfiguration"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutBucketTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutBucketTaggingRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This action puts tags on an Amazon S3 on Outposts bucket. To put tags on an S3 bucket, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\">PutBucketTagging</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Sets the tags for an S3 on Outposts bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using\n            Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>Use tags to organize your Amazon Web Services bill to reflect your own cost structure. To do this,\n         sign up to get your Amazon Web Services account bill with tag key values included. Then, to see the cost\n         of combined resources, organize your billing information according to resources with the\n         same tag key values. For example, you can tag several resources with a specific application\n         name, and then organize your billing information to see the total cost of that application\n         across several services. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Cost allocation and\n            tagging</a>.</p>\n         <note>\n            <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new\n            value overwrites the old value. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/CostAllocTagging.html\"> Using cost allocation in Amazon S3\n               bucket tags</a>.</p>\n         </note>\n         <p>To use this action, you must have permissions to perform the\n            <code>s3-outposts:PutBucketTagging</code> action. The Outposts bucket owner has this\n         permission by default and can grant this permission to others. For more information about\n         permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\"> Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\">Managing\n            access permissions to your Amazon S3 resources</a>.</p>\n         <p>\n            <code>PutBucketTagging</code> has the following special errors:</p>\n         <ul>\n            <li>\n               <p>Error code: <code>InvalidTagError</code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: The tag provided was not a valid tag. This error can occur if\n                     the tag did not pass input validation. For information about tag restrictions,\n                     see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">\n                        User-Defined Tag Restrictions</a> and <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\">\n                        Amazon Web Services-Generated Cost Allocation Tag Restrictions</a>.</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>Error code: <code>MalformedXMLError</code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: The XML provided does not match the schema.</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>Error code: <code>OperationAbortedError </code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: A conflicting conditional action is currently in progress\n                     against this resource. Try again.</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>Error code: <code>InternalError</code>\n               </p>\n               <ul>\n                  <li>\n                     <p>Description: The service was unable to apply the provided tag to the\n                     bucket.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketTagging.html#API_control_PutBucketTagging_Examples\">Examples</a> section.</p>\n         <p>The following actions are related to <code>PutBucketTagging</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketTagging.html\">GetBucketTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}/tagging",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutBucketTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the bucket.</p>\n         <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>\n         <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must  specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/bucket/<my-bucket-name></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded.  </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "Tagging": {
          "target": "com.amazonaws.s3control#Tagging",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {},
            "smithy.api#xmlName": "Tagging"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutBucketVersioning": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutBucketVersioningRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation sets the versioning state\n            for\n            S3 on Outposts\n            buckets\n            only. To set the versioning state for an S3 bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning</a> in the <i>Amazon S3 API Reference</i>. </p>\n         </note>\n         <p>Sets the versioning state for an S3 on Outposts bucket. With\n         S3\n         Versioning,\n         you can save multiple distinct copies of your\n         objects\n         and recover from unintended user actions and application failures.</p>\n         <p>You can set the versioning state to one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Enabled</b> - Enables versioning for the objects in\n               the bucket. All objects added to the bucket receive a unique version ID.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Suspended</b> - Suspends versioning for the objects\n               in the bucket. All objects added to the bucket receive the version ID\n                  <code>null</code>.</p>\n            </li>\n         </ul>\n         <p>If you've never set versioning on your bucket, it has no versioning state. In that case,\n         a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html\">\n            GetBucketVersioning</a> request does not return a versioning state value.</p>\n         <p>When you enable S3 Versioning, for each object in your bucket, you have a current\n         version and zero or more noncurrent versions. You can configure your bucket S3 Lifecycle\n         rules to expire noncurrent versions after a specified time period. For more information,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsLifecycleManaging.html\"> Creating and managing\n            a lifecycle configuration for your S3 on Outposts bucket</a> in the <i>Amazon S3\n            User Guide</i>.</p>\n         <p>If you have an object expiration lifecycle configuration in your non-versioned bucket\n         and you want to maintain the same permanent delete behavior when you enable versioning, you\n         must add a noncurrent expiration policy. The noncurrent expiration lifecycle configuration\n         will manage the deletes of the noncurrent object versions in the version-enabled bucket.\n         For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html\">Versioning</a> in the <i>Amazon S3\n            User Guide</i>.</p>\n         <p>All Amazon S3 on Outposts REST API requests for this action require an additional parameter of <code>x-amz-outpost-id</code> to be passed with the request. In addition, you must use an S3 on Outposts endpoint hostname prefix instead of <code>s3-control</code>. For an example of the request syntax for Amazon S3 on Outposts that uses the S3 on Outposts endpoint hostname prefix and the <code>x-amz-outpost-id</code> derived by using the access point ARN, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketVersioning.html#API_control_PutBucketVersioning_Examples\">Examples</a> section.</p>\n         <p>The following operations are related to <code>PutBucketVersioning</code> for\n         S3 on Outposts.</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketVersioning.html\">GetBucketVersioning</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/bucket/{Bucket}/versioning",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutBucketVersioningRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the S3 on Outposts bucket.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The S3 on Outposts bucket to set the versioning state for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "Bucket"
            }
          }
        },
        "MFA": {
          "target": "com.amazonaws.s3control#MFA",
          "traits": {
            "smithy.api#documentation": "<p>The concatenation of the authentication device's serial number, a space, and the value\n         that is displayed on your authentication device.</p>",
            "smithy.api#httpHeader": "x-amz-mfa"
          }
        },
        "VersioningConfiguration": {
          "target": "com.amazonaws.s3control#VersioningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The root-level tag for the <code>VersioningConfiguration</code> parameters.</p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {},
            "smithy.api#xmlName": "VersioningConfiguration"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutJobTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutJobTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#PutJobTaggingResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets the supplied tag-set on an S3 Batch Operations job.</p>\n         <p>A tag is a key-value pair. You can associate S3 Batch Operations tags with any job by sending\n         a PUT request against the tagging subresource that is associated with the job. To modify\n         the existing tag set, you can either replace the existing tag set entirely, or make changes\n         within the existing tag set by retrieving the existing tag set using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\">GetJobTagging</a>, modify that tag set, and use this operation to replace the tag set\n         with the one you modified. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-managing-jobs.html#batch-ops-job-tags\">Controlling\n            access and labeling jobs using tags</a> in the <i>Amazon S3 User Guide</i>. </p>\n         <note>\n            <ul>\n               <li>\n                  <p>If you send this request with an empty tag set, Amazon S3 deletes the existing\n                  tag set on the Batch Operations job. If you use this method, you are charged for a Tier\n                  1 Request (PUT). For more information, see <a href=\"http://aws.amazon.com/s3/pricing/\">Amazon S3 pricing</a>.</p>\n               </li>\n               <li>\n                  <p>For deleting existing tags for your Batch Operations job, a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\">DeleteJobTagging</a> request is preferred because it achieves the same\n                  result without incurring charges.</p>\n               </li>\n               <li>\n                  <p>A few things to consider about using tags:</p>\n                  <ul>\n                     <li>\n                        <p>Amazon S3 limits the maximum number of tags to 50 tags per job.</p>\n                     </li>\n                     <li>\n                        <p>You can associate up to 50 tags with a job as long as they have unique\n                        tag keys.</p>\n                     </li>\n                     <li>\n                        <p>A tag key can be up to 128 Unicode characters in length, and tag values\n                        can be up to 256 Unicode characters in length.</p>\n                     </li>\n                     <li>\n                        <p>The key and values are case sensitive.</p>\n                     </li>\n                     <li>\n                        <p>For tagging-related restrictions related to characters and encodings, see\n                           <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> in the <i>Billing and Cost Management User Guide</i>.</p>\n                     </li>\n                  </ul>\n               </li>\n            </ul>\n         </note>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>PutJobTagging</code> operation, you must have permission to\n                  perform the <code>s3:PutJobTagging</code> action.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetJobTagging.html\">GetJobTagging</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeleteJobTagging.html\">DeleteJobTagging</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/jobs/{JobId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutJobTaggingRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the S3 Batch Operations job whose tags you want to replace.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>The set of tags to associate with the S3 Batch Operations job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutJobTaggingResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#PutMultiRegionAccessPointPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Associates an access control policy with the specified Multi-Region Access Point. Each Multi-Region Access Point can have only\n         one policy, so a request made to this action replaces any existing policy that is\n         associated with the specified Multi-Region Access Point.</p>\n         <p>This action will always be routed to the US West (Oregon) Region. For more information\n         about the restrictions around managing Multi-Region Access Points, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ManagingMultiRegionAccessPoints.html\">Managing\n            Multi-Region Access Points</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <p>The following actions are related to\n         <code>PutMultiRegionAccessPointPolicy</code>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicy.html\">GetMultiRegionAccessPointPolicy</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetMultiRegionAccessPointPolicyStatus.html\">GetMultiRegionAccessPointPolicyStatus</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/async-requests/mrap/put-policy",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Multi-Region Access Point associated with the request.</p>",
            "smithy.api#required": {}
          }
        },
        "Policy": {
          "target": "com.amazonaws.s3control#Policy",
          "traits": {
            "smithy.api#documentation": "<p>The policy details for the <code>PutMultiRegionAccessPoint</code> request.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the information associated with a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutMultiRegionAccessPoint.html\">PutMultiRegionAccessPoint</a> request.</p>"
      }
    },
    "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ClientToken": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointClientToken",
          "traits": {
            "smithy.api#documentation": "<p>An idempotency token used to identify the request and guarantee that requests are\n         unique.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "Details": {
          "target": "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyInput",
          "traits": {
            "smithy.api#documentation": "<p>A container element containing the details of the policy for the Multi-Region Access Point.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutMultiRegionAccessPointPolicyResult": {
      "type": "structure",
      "members": {
        "RequestTokenARN": {
          "target": "com.amazonaws.s3control#AsyncRequestTokenARN",
          "traits": {
            "smithy.api#documentation": "<p>The request token associated with the request. You can use this token with <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeMultiRegionAccessPointOperation.html\">DescribeMultiRegionAccessPointOperation</a> to determine the status of asynchronous\n         requests.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#PutPublicAccessBlock": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutPublicAccessBlockRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an\n         Amazon Web Services account. For this operation, users must have the\n            <code>s3:PutAccountPublicAccessBlock</code> permission. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">\n            Using Amazon S3 block public access</a>.</p>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/configuration/publicAccessBlock",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutPublicAccessBlockRequest": {
      "type": "structure",
      "members": {
        "PublicAccessBlockConfiguration": {
          "target": "com.amazonaws.s3control#PublicAccessBlockConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The <code>PublicAccessBlock</code> configuration that you want to apply to the specified\n         Amazon Web Services account.</p>",
            "smithy.api#httpPayload": {},
            "smithy.api#required": {},
            "smithy.api#xmlName": "PublicAccessBlockConfiguration"
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID for the Amazon Web Services account whose <code>PublicAccessBlock</code> configuration\n         you want to set.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutStorageLensConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutStorageLensConfigurationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Puts an Amazon S3 Storage Lens configuration. For more information about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Working with\n            Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>. For a complete list of S3 Storage Lens metrics, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_metrics_glossary.html\">S3 Storage Lens metrics glossary</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:PutStorageLensConfiguration</code> action. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to use Amazon S3 Storage Lens</a> in the\n               <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/storagelens/{ConfigId}",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutStorageLensConfigurationRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "StorageLensConfiguration": {
          "target": "com.amazonaws.s3control#StorageLensConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The S3 Storage Lens configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#StorageLensTags",
          "traits": {
            "smithy.api#documentation": "<p>The tag set of the S3 Storage Lens configuration.</p>\n         <note>\n            <p>You can set up to a maximum of 50 tags.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutStorageLensConfigurationTagging": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#PutStorageLensConfigurationTaggingRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#PutStorageLensConfigurationTaggingResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Put or replace tags on an existing Amazon S3 Storage Lens configuration. For more information\n         about S3 Storage Lens, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens.html\">Assessing your storage activity and usage with Amazon S3 Storage Lens </a> in the\n            <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>To use this action, you must have permission to perform the\n               <code>s3:PutStorageLensConfigurationTagging</code> action. For more information, see\n               <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage_lens_iam_permissions.html\">Setting permissions to\n               use Amazon S3 Storage Lens</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/storagelens/{ConfigId}/tagging",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#PutStorageLensConfigurationTaggingRequest": {
      "type": "structure",
      "members": {
        "ConfigId": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the S3 Storage Lens configuration.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the requester.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#StorageLensTags",
          "traits": {
            "smithy.api#documentation": "<p>The tag set of the S3 Storage Lens configuration.</p>\n         <note>\n            <p>You can set up to a maximum of 50 tags.</p>\n         </note>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#PutStorageLensConfigurationTaggingResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#Region": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the associated bucket for the Region.</p>",
            "smithy.api#required": {}
          }
        },
        "BucketAccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that owns the Amazon S3 bucket that's associated with this\n         Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A Region that supports a Multi-Region Access Point as well as the associated bucket for the Region.</p>"
      }
    },
    "com.amazonaws.s3control#RegionCreationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#Region",
        "traits": {
          "smithy.api#xmlName": "Region"
        }
      }
    },
    "com.amazonaws.s3control#RegionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.s3control#RegionReport": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the bucket.</p>"
          }
        },
        "Region": {
          "target": "com.amazonaws.s3control#RegionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Region.</p>"
          }
        },
        "BucketAccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that owns the Amazon S3 bucket that's associated with this\n         Multi-Region Access Point.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A combination of a bucket and Region that's part of a Multi-Region Access Point.</p>"
      }
    },
    "com.amazonaws.s3control#RegionReportList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#RegionReport",
        "traits": {
          "smithy.api#xmlName": "Region"
        }
      }
    },
    "com.amazonaws.s3control#RegionalBucket": {
      "type": "structure",
      "members": {
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketName",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        },
        "BucketArn": {
          "target": "com.amazonaws.s3control#S3RegionalBucketArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for the regional bucket.</p>"
          }
        },
        "PublicAccessBlockEnabled": {
          "target": "com.amazonaws.s3control#PublicAccessBlockEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        },
        "CreationDate": {
          "target": "com.amazonaws.s3control#CreationDate",
          "traits": {
            "smithy.api#documentation": "<p>The creation date of the regional bucket</p>",
            "smithy.api#required": {}
          }
        },
        "OutpostId": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength64String",
          "traits": {
            "smithy.api#documentation": "<p>The Outposts ID of the regional bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the regional bucket.</p>"
      }
    },
    "com.amazonaws.s3control#RegionalBucketList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#RegionalBucket",
        "traits": {
          "smithy.api#xmlName": "RegionalBucket"
        }
      }
    },
    "com.amazonaws.s3control#Regions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3AWSRegion",
        "traits": {
          "smithy.api#xmlName": "Region"
        }
      }
    },
    "com.amazonaws.s3control#ReplicaKmsKeyID": {
      "type": "string"
    },
    "com.amazonaws.s3control#ReplicaModifications": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#ReplicaModificationsStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether S3 on Outposts replicates modifications to object metadata on\n         replicas.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter that you can use to specify whether replica modification sync is enabled.\n         S3 on Outposts replica modification sync can help you keep object metadata synchronized\n         between replicas and source objects. By default, S3 on Outposts replicates metadata from the\n         source objects to the replicas only. When replica modification sync is enabled,\n         S3 on Outposts replicates metadata changes made to the replica copies back to the source\n         object, making the replication bidirectional.</p>\n         <p>To replicate object metadata modifications on replicas, you can specify this element and\n         set the <code>Status</code> of this element to <code>Enabled</code>.</p>\n         <note>\n            <p>You must enable replica modification sync on the source and destination buckets to\n            replicate replica metadata changes between the source and the replicas.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#ReplicaModificationsStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#ReplicationConfiguration": {
      "type": "structure",
      "members": {
        "Role": {
          "target": "com.amazonaws.s3control#Role",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role that S3 on Outposts assumes\n         when replicating objects. For information about S3 replication on Outposts configuration,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/outposts-replication-how-setup.html\">Setting up\n            replication</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "Rules": {
          "target": "com.amazonaws.s3control#ReplicationRules",
          "traits": {
            "smithy.api#documentation": "<p>A container for one or more replication rules. A replication configuration must have at\n         least one rule and can contain an array of 100 rules at the most. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for one or more replication rules. A replication configuration must have at\n         least one rule and you can add up to 100 rules. The maximum size of a replication\n         configuration is 128 KB.</p>"
      }
    },
    "com.amazonaws.s3control#ReplicationRule": {
      "type": "structure",
      "members": {
        "ID": {
          "target": "com.amazonaws.s3control#ID",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for the rule. The maximum value is 255 characters.</p>"
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#Priority",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The priority indicates which rule has precedence whenever two or more replication rules\n         conflict. S3 on Outposts attempts to replicate objects according to all replication rules.\n         However, if there are two or more rules with the same destination Outposts bucket, then\n         objects will be replicated according to the rule with the highest priority. The higher the\n         number, the higher the priority. </p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-between-outposts.html\">Creating replication\n            rules on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
          }
        },
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Prefix has been deprecated"
            },
            "smithy.api#documentation": "<p>An object key name prefix that identifies the object or objects to which the rule\n         applies. The maximum prefix length is 1,024 characters. To include all objects in an\n         Outposts bucket, specify an empty string.</p>\n         <important>\n            <p>When you're using XML requests, you must \nreplace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. \nFor more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\">\n            XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </important>"
          }
        },
        "Filter": {
          "target": "com.amazonaws.s3control#ReplicationRuleFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter that identifies the subset of objects to which the replication rule applies. A\n            <code>Filter</code> element must specify exactly one <code>Prefix</code>,\n            <code>Tag</code>, or <code>And</code> child element.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#ReplicationRuleStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether the rule is enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "SourceSelectionCriteria": {
          "target": "com.amazonaws.s3control#SourceSelectionCriteria",
          "traits": {
            "smithy.api#documentation": "<p>A container that describes additional filters for identifying the source Outposts\n         objects that you want to replicate. You can choose to enable or disable the replication of\n         these objects.</p>"
          }
        },
        "ExistingObjectReplication": {
          "target": "com.amazonaws.s3control#ExistingObjectReplication",
          "traits": {
            "smithy.api#documentation": "<p>An optional configuration to replicate existing source bucket objects. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "Destination": {
          "target": "com.amazonaws.s3control#Destination",
          "traits": {
            "smithy.api#documentation": "<p>A container for information about the replication destination and its\n         configurations.</p>",
            "smithy.api#required": {}
          }
        },
        "DeleteMarkerReplication": {
          "target": "com.amazonaws.s3control#DeleteMarkerReplication",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether S3 on Outposts replicates delete markers. If you specify a\n            <code>Filter</code> element in your replication configuration, you must also include a\n            <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a\n            <code>Tag</code> element, the <code>DeleteMarkerReplication</code> element's\n            <code>Status</code> child element must be set to <code>Disabled</code>, because\n         S3 on Outposts doesn't support replicating delete markers for tag-based rules.</p>\n         <p>For more information about delete marker replication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3OutpostsReplication.html#outposts-replication-what-is-replicated\">How delete operations affect replication</a> in the\n            <i>Amazon S3 User Guide</i>. </p>"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#BucketIdentifierString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the access point for the source Outposts bucket that you want\n         S3 on Outposts to replicate the objects from.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies which S3 on Outposts objects to replicate and where to store the\n         replicas.</p>"
      }
    },
    "com.amazonaws.s3control#ReplicationRuleAndOperator": {
      "type": "structure",
      "members": {
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#documentation": "<p>An object key name prefix that identifies the subset of objects that the rule applies\n         to.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>An array of tags that contain key and value pairs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for specifying rule filters. The filters determine the subset of objects to\n         which the rule applies. This element is required only if you specify more than one filter. </p>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap\n               these filters in an <code>And</code> element. </p>\n            </li>\n            <li>\n               <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements\n               in an <code>And</code> element.</p>\n            </li>\n         </ul>"
      }
    },
    "com.amazonaws.s3control#ReplicationRuleFilter": {
      "type": "structure",
      "members": {
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#documentation": "<p>An object key name prefix that identifies the subset of objects that the rule applies\n         to.</p>\n         <important>\n            <p>When you're using XML requests, you must \nreplace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. \nFor more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\">\n            XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>\n         </important>"
          }
        },
        "Tag": {
          "target": "com.amazonaws.s3control#S3Tag"
        },
        "And": {
          "target": "com.amazonaws.s3control#ReplicationRuleAndOperator",
          "traits": {
            "smithy.api#documentation": "<p>A container for specifying rule filters. The filters determine the subset of objects\n         that the rule applies to. This element is required only if you specify more than one\n         filter. For example: </p>\n         <ul>\n            <li>\n               <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap\n               these filters in an <code>And</code> element.</p>\n            </li>\n            <li>\n               <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements\n               in an <code>And</code> element.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter that identifies the subset of objects to which the replication rule applies. A\n            <code>Filter</code> element must specify exactly one <code>Prefix</code>,\n            <code>Tag</code>, or <code>And</code> child element.</p>"
      }
    },
    "com.amazonaws.s3control#ReplicationRuleStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#ReplicationRules": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ReplicationRule",
        "traits": {
          "smithy.api#xmlName": "Rule"
        }
      }
    },
    "com.amazonaws.s3control#ReplicationStatus": {
      "type": "enum",
      "members": {
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "REPLICA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REPLICA"
          }
        },
        "NONE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NONE"
          }
        }
      }
    },
    "com.amazonaws.s3control#ReplicationStatusFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ReplicationStatus"
      }
    },
    "com.amazonaws.s3control#ReplicationStorageClass": {
      "type": "enum",
      "members": {
        "STANDARD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD"
          }
        },
        "REDUCED_REDUNDANCY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REDUCED_REDUNDANCY"
          }
        },
        "STANDARD_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD_IA"
          }
        },
        "ONEZONE_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ONEZONE_IA"
          }
        },
        "INTELLIGENT_TIERING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTELLIGENT_TIERING"
          }
        },
        "GLACIER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLACIER"
          }
        },
        "DEEP_ARCHIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEEP_ARCHIVE"
          }
        },
        "OUTPOSTS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OUTPOSTS"
          }
        },
        "GLACIER_IR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLACIER_IR"
          }
        }
      }
    },
    "com.amazonaws.s3control#ReplicationTime": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#ReplicationTimeStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether S3 Replication Time Control (S3 RTC) is enabled. </p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.s3control#ReplicationTimeValue",
          "traits": {
            "smithy.api#documentation": "<p>A container that specifies the time by which replication should be complete for all\n         objects and operations on objects. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container that specifies S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC\n         is enabled and the time when all objects and operations on objects must be\n         replicated.</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#ReplicationTimeStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#ReplicationTimeValue": {
      "type": "structure",
      "members": {
        "Minutes": {
          "target": "com.amazonaws.s3control#Minutes",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Contains an integer that specifies the time period in minutes. </p>\n         <p>Valid value: 15</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container that specifies the time value for S3 Replication Time Control (S3 RTC). This value is also used for\n         the replication metrics <code>EventThreshold</code> element. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#ReportPrefixString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        }
      }
    },
    "com.amazonaws.s3control#RequestedJobStatus": {
      "type": "enum",
      "members": {
        "Cancelled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Cancelled"
          }
        },
        "Ready": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Ready"
          }
        }
      }
    },
    "com.amazonaws.s3control#Role": {
      "type": "string"
    },
    "com.amazonaws.s3control#RouteList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#MultiRegionAccessPointRoute",
        "traits": {
          "smithy.api#xmlName": "Route"
        }
      }
    },
    "com.amazonaws.s3control#S3AWSRegion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 5,
          "max": 30
        },
        "smithy.api#pattern": "^[a-z0-9\\-]+$"
      }
    },
    "com.amazonaws.s3control#S3AccessControlList": {
      "type": "structure",
      "members": {
        "Owner": {
          "target": "com.amazonaws.s3control#S3ObjectOwner",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        },
        "Grants": {
          "target": "com.amazonaws.s3control#S3GrantList",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3AccessControlPolicy": {
      "type": "structure",
      "members": {
        "AccessControlList": {
          "target": "com.amazonaws.s3control#S3AccessControlList",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "CannedAccessControlList": {
          "target": "com.amazonaws.s3control#S3CannedAccessControlList",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3AccessPointArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 128
        }
      }
    },
    "com.amazonaws.s3control#S3BucketArnString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:[^:]+:s3:"
      }
    },
    "com.amazonaws.s3control#S3BucketDestination": {
      "type": "structure",
      "members": {
        "Format": {
          "target": "com.amazonaws.s3control#Format",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        },
        "OutputSchemaVersion": {
          "target": "com.amazonaws.s3control#OutputSchemaVersion",
          "traits": {
            "smithy.api#documentation": "<p>The schema version of the export file.</p>",
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The account ID of the owner of the S3 Storage Lens metrics export bucket.</p>",
            "smithy.api#required": {}
          }
        },
        "Arn": {
          "target": "com.amazonaws.s3control#S3BucketArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the bucket. This property is read-only and follows the\n         following format: <code>\n               arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:bucket/<i>your-destination-bucket-name</i>\n            </code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Prefix": {
          "target": "com.amazonaws.s3control#Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The prefix of the destination bucket where the metrics export will be delivered.</p>"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.s3control#StorageLensDataExportEncryption",
          "traits": {
            "smithy.api#documentation": "<p>The container for the type encryption of the metrics exports in this bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the bucket where the Amazon S3 Storage Lens metrics export files are\n         located.</p>"
      }
    },
    "com.amazonaws.s3control#S3CannedAccessControlList": {
      "type": "enum",
      "members": {
        "PRIVATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "private"
          }
        },
        "PUBLIC_READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "public-read"
          }
        },
        "PUBLIC_READ_WRITE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "public-read-write"
          }
        },
        "AWS_EXEC_READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "aws-exec-read"
          }
        },
        "AUTHENTICATED_READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "authenticated-read"
          }
        },
        "BUCKET_OWNER_READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "bucket-owner-read"
          }
        },
        "BUCKET_OWNER_FULL_CONTROL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "bucket-owner-full-control"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ChecksumAlgorithm": {
      "type": "enum",
      "members": {
        "CRC32": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CRC32"
          }
        },
        "CRC32C": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CRC32C"
          }
        },
        "SHA1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SHA1"
          }
        },
        "SHA256": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SHA256"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ContentLength": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#S3CopyObjectOperation": {
      "type": "structure",
      "members": {
        "TargetResource": {
          "target": "com.amazonaws.s3control#S3RegionalOrS3ExpressBucketArnString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the destination bucket\n         Amazon Resource Name\n         (ARN)\n         for the batch copy operation.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>General purpose buckets</b> - For example, to copy objects to a general purpose bucket named\n               <code>destinationBucket</code>, set the <code>TargetResource</code> property to\n               <code>arn:aws:s3:::destinationBucket</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Directory buckets</b> - For example, to copy objects to a directory bucket named\n               <code>destinationBucket</code> in the Availability Zone; identified by the AZ ID <code>usw2-az2</code>, set the <code>TargetResource</code> property to\n               <code>arn:aws:s3express:<i>region</i>:<i>account_id</i>:/bucket/<i>destination_bucket_base_name</i>--<i>usw2-az2</i>--x-s3</code>.</p>\n            </li>\n         </ul>"
          }
        },
        "CannedAccessControlList": {
          "target": "com.amazonaws.s3control#S3CannedAccessControlList",
          "traits": {
            "smithy.api#documentation": "<p></p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "AccessControlGrants": {
          "target": "com.amazonaws.s3control#S3GrantList",
          "traits": {
            "smithy.api#documentation": "<p></p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "MetadataDirective": {
          "target": "com.amazonaws.s3control#S3MetadataDirective",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "ModifiedSinceConstraint": {
          "target": "com.amazonaws.s3control#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "NewObjectMetadata": {
          "target": "com.amazonaws.s3control#S3ObjectMetadata",
          "traits": {
            "smithy.api#documentation": "<p>If you don't provide this parameter, Amazon S3 copies all the metadata from the original\n         objects. If you specify an empty set, the new objects will have no tags. Otherwise, Amazon S3\n         assigns the supplied tags to the new objects.</p>"
          }
        },
        "NewObjectTagging": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a list of tags to add to the destination objects after they are copied. \n         If <code>NewObjectTagging</code> is not specified, the tags of the source objects are copied to destination objects by default.</p>\n         <note>\n            <p>\n               <b>Directory buckets</b> - Tags aren't supported by directory buckets. \n         If your source objects have tags and your destination bucket is a directory bucket, specify an empty tag set in the <code>NewObjectTagging</code> field \n         to prevent copying the source object tags to the directory bucket.</p>\n         </note>"
          }
        },
        "RedirectLocation": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength2048String",
          "traits": {
            "smithy.api#documentation": "<p>If the destination bucket is configured as a website, specifies an optional metadata property for website redirects,\n            <code>x-amz-website-redirect-location</code>. Allows webpage redirects if the object copy is\n         accessed through a website endpoint.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "RequesterPays": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p></p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "StorageClass": {
          "target": "com.amazonaws.s3control#S3StorageClass",
          "traits": {
            "smithy.api#documentation": "<p>Specify the storage class for the destination objects in a <code>Copy</code> operation.</p>\n         <note>\n            <p>\n               <b>Directory buckets </b> - This functionality is not supported by directory buckets. </p>\n         </note>"
          }
        },
        "UnModifiedSinceConstraint": {
          "target": "com.amazonaws.s3control#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "SSEAwsKmsKeyId": {
          "target": "com.amazonaws.s3control#KmsKeyArnString",
          "traits": {
            "smithy.api#documentation": "<p></p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "TargetKeyPrefix": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the folder prefix\n         that\n         you\n         want\n         the objects to be\n         copied\n         into. For example, to copy objects into a folder named\n            <code>Folder1</code> in the destination bucket, set the\n            <code>TargetKeyPrefix</code>\n         property\n         to <code>Folder1</code>.</p>"
          }
        },
        "ObjectLockLegalHoldStatus": {
          "target": "com.amazonaws.s3control#S3ObjectLockLegalHoldStatus",
          "traits": {
            "smithy.api#documentation": "<p>The legal hold status to be applied to all objects in the Batch Operations job.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "ObjectLockMode": {
          "target": "com.amazonaws.s3control#S3ObjectLockMode",
          "traits": {
            "smithy.api#documentation": "<p>The retention mode to be applied to all objects in the Batch Operations job.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "ObjectLockRetainUntilDate": {
          "target": "com.amazonaws.s3control#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>The date when the applied object retention configuration expires on all objects in the\n         Batch Operations job.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "BucketKeyEnabled": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with\n         server-side encryption using Amazon Web Services KMS (SSE-KMS). Setting this header to <code>true</code>\n         causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>\n         <p>Specifying this header with an <i>object</i> action doesn’t affect\n            <i>bucket-level</i> settings for S3 Bucket Key.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
          }
        },
        "ChecksumAlgorithm": {
          "target": "com.amazonaws.s3control#S3ChecksumAlgorithm",
          "traits": {
            "smithy.api#documentation": "<p>Indicates the algorithm\n         that\n         you want Amazon S3 to use to create the checksum. For more\n         information,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\"> Checking object\n            integrity</a> in the <i>Amazon S3 User Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains\n         the configuration parameters for a PUT Copy object operation. S3 Batch Operations passes every\n         object to the underlying\n            <code>CopyObject</code>\n         API\n         operation. For more information about the parameters for this operation,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectCOPY.html\">CopyObject</a>.</p>"
      }
    },
    "com.amazonaws.s3control#S3DeleteObjectTaggingOperation": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>Contains no configuration parameters because the DELETE Object tagging\n            (<code>DeleteObjectTagging</code>)\n         API\n         operation\n         accepts\n         only\n         the bucket name and key name as parameters, which are defined in the\n         job's manifest.</p>"
      }
    },
    "com.amazonaws.s3control#S3ExpirationInDays": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.s3control#S3GeneratedManifestDescriptor": {
      "type": "structure",
      "members": {
        "Format": {
          "target": "com.amazonaws.s3control#GeneratedManifestFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the generated manifest.</p>"
          }
        },
        "Location": {
          "target": "com.amazonaws.s3control#JobManifestLocation"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describes the specified job's generated manifest. Batch Operations jobs created with a\n         ManifestGenerator populate details of this descriptor after execution of the\n         ManifestGenerator.</p>"
      }
    },
    "com.amazonaws.s3control#S3GlacierJobTier": {
      "type": "enum",
      "members": {
        "BULK": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BULK"
          }
        },
        "STANDARD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3Grant": {
      "type": "structure",
      "members": {
        "Grantee": {
          "target": "com.amazonaws.s3control#S3Grantee",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "Permission": {
          "target": "com.amazonaws.s3control#S3Permission",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3GrantList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3Grant"
      }
    },
    "com.amazonaws.s3control#S3Grantee": {
      "type": "structure",
      "members": {
        "TypeIdentifier": {
          "target": "com.amazonaws.s3control#S3GranteeTypeIdentifier",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "Identifier": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3GranteeTypeIdentifier": {
      "type": "enum",
      "members": {
        "CANONICAL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "id"
          }
        },
        "EMAIL_ADDRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "emailAddress"
          }
        },
        "GROUP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "uri"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3InitiateRestoreObjectOperation": {
      "type": "structure",
      "members": {
        "ExpirationInDays": {
          "target": "com.amazonaws.s3control#S3ExpirationInDays",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>This argument specifies how long the S3 Glacier or S3 Glacier Deep Archive object remains\n         available in Amazon S3. S3 Initiate Restore Object jobs that target S3 Glacier and S3 Glacier Deep Archive\n         objects require <code>ExpirationInDays</code> set to 1 or greater.</p>\n         <p>Conversely, do <i>not</i> set <code>ExpirationInDays</code> when creating\n         S3 Initiate Restore Object jobs that target S3 Intelligent-Tiering Archive Access and\n         Deep Archive Access tier objects. Objects in S3 Intelligent-Tiering archive access tiers are\n         not subject to restore expiry, so specifying <code>ExpirationInDays</code> results in\n         restore request failure.</p>\n         <p>S3 Batch Operations jobs can operate either on S3 Glacier and S3 Glacier Deep Archive storage class\n         objects or on S3 Intelligent-Tiering Archive Access and Deep Archive Access storage tier\n         objects, but not both types in the same job. If you need to restore objects of both types\n         you <i>must</i> create separate Batch Operations jobs. </p>"
          }
        },
        "GlacierJobTier": {
          "target": "com.amazonaws.s3control#S3GlacierJobTier",
          "traits": {
            "smithy.api#documentation": "<p>S3 Batch Operations supports <code>STANDARD</code> and <code>BULK</code> retrieval tiers, but\n         not the <code>EXPEDITED</code> retrieval tier.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for\n         a\n         POST Object restore job. S3 Batch Operations passes every object to the\n         underlying\n            <code>RestoreObject</code>\n         API\n         operation. For more information about the parameters for this operation,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html#RESTObjectPOSTrestore-restore-request\">RestoreObject</a>.</p>"
      }
    },
    "com.amazonaws.s3control#S3JobManifestGenerator": {
      "type": "structure",
      "members": {
        "ExpectedBucketOwner": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that owns the bucket the generated manifest is written to. If\n         provided the generated manifest bucket's owner Amazon Web Services account ID must match this value, else\n         the job fails.</p>"
          }
        },
        "SourceBucket": {
          "target": "com.amazonaws.s3control#S3BucketArnString",
          "traits": {
            "smithy.api#documentation": "<p>The source bucket used by the ManifestGenerator.</p>\n         <note>\n            <p>\n               <b>Directory buckets</b> - Directory buckets aren't supported \n         as the source buckets used by <code>S3JobManifestGenerator</code> to generate the job manifest.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "ManifestOutputLocation": {
          "target": "com.amazonaws.s3control#S3ManifestOutputLocation",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the location the generated manifest will be written to. Manifests can't be\n         written to directory buckets. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-overview.html\">Directory\n            buckets</a>.</p>"
          }
        },
        "Filter": {
          "target": "com.amazonaws.s3control#JobManifestGeneratorFilter",
          "traits": {
            "smithy.api#documentation": "<p>Specifies rules the S3JobManifestGenerator should use to decide whether an object\n         in the source bucket should or should not be included in the generated job manifest.</p>"
          }
        },
        "EnableManifestOutput": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Determines whether or not to write the job's generated manifest to a bucket.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The container for the service that will create the S3 manifest.</p>"
      }
    },
    "com.amazonaws.s3control#S3KeyArnString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2000
        },
        "smithy.api#pattern": "^arn:[^:]+:s3:"
      }
    },
    "com.amazonaws.s3control#S3ManifestOutputLocation": {
      "type": "structure",
      "members": {
        "ExpectedManifestBucketOwner": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Account ID that owns the bucket the generated manifest is written to.</p>"
          }
        },
        "Bucket": {
          "target": "com.amazonaws.s3control#S3BucketArnString",
          "traits": {
            "smithy.api#documentation": "<p>The bucket ARN the generated manifest should be written to.</p>\n         <note>\n            <p>\n               <b>Directory buckets</b> - Directory buckets aren't supported \n         as the buckets to store the generated manifest.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "ManifestPrefix": {
          "target": "com.amazonaws.s3control#ManifestPrefixString",
          "traits": {
            "smithy.api#documentation": "<p>Prefix identifying one or more objects to which the manifest applies.</p>"
          }
        },
        "ManifestEncryption": {
          "target": "com.amazonaws.s3control#GeneratedManifestEncryption",
          "traits": {
            "smithy.api#documentation": "<p>Specifies what encryption should be used when the generated manifest objects are\n         written.</p>"
          }
        },
        "ManifestFormat": {
          "target": "com.amazonaws.s3control#GeneratedManifestFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the generated manifest.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Location details for where the generated manifest should be written.</p>"
      }
    },
    "com.amazonaws.s3control#S3MetadataDirective": {
      "type": "enum",
      "members": {
        "COPY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COPY"
          }
        },
        "REPLACE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REPLACE"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ObjectLockLegalHold": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#S3ObjectLockLegalHoldStatus",
          "traits": {
            "smithy.api#documentation": "<p>The Object Lock legal hold status to be applied to all objects in the Batch Operations\n         job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Whether S3 Object Lock legal hold will be applied to objects in an S3 Batch Operations\n         job.</p>"
      }
    },
    "com.amazonaws.s3control#S3ObjectLockLegalHoldStatus": {
      "type": "enum",
      "members": {
        "OFF": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OFF"
          }
        },
        "ON": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ON"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ObjectLockMode": {
      "type": "enum",
      "members": {
        "COMPLIANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLIANCE"
          }
        },
        "GOVERNANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GOVERNANCE"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ObjectLockRetentionMode": {
      "type": "enum",
      "members": {
        "COMPLIANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLIANCE"
          }
        },
        "GOVERNANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GOVERNANCE"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3ObjectMetadata": {
      "type": "structure",
      "members": {
        "CacheControl": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "ContentDisposition": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "ContentEncoding": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "ContentLanguage": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "UserMetadata": {
          "target": "com.amazonaws.s3control#S3UserMetadata",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "ContentLength": {
          "target": "com.amazonaws.s3control#S3ContentLength",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>\n            <i>This member has been deprecated.</i>\n         </p>\n         <p></p>"
          }
        },
        "ContentMD5": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p>\n            <i>This member has been deprecated.</i>\n         </p>\n         <p></p>"
          }
        },
        "ContentType": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "HttpExpiresDate": {
          "target": "com.amazonaws.s3control#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "RequesterCharged": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>\n            <i>This member has been deprecated.</i>\n         </p>\n         <p></p>"
          }
        },
        "SSEAlgorithm": {
          "target": "com.amazonaws.s3control#S3SSEAlgorithm",
          "traits": {
            "smithy.api#documentation": "<p></p>\n         <note>\n            <p>For directory buckets, only the server-side encryption with Amazon S3 managed keys (SSE-S3) (<code>AES256</code>) is supported.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3ObjectOwner": {
      "type": "structure",
      "members": {
        "ID": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "DisplayName": {
          "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#S3ObjectVersionId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2000
        }
      }
    },
    "com.amazonaws.s3control#S3Permission": {
      "type": "enum",
      "members": {
        "FULL_CONTROL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FULL_CONTROL"
          }
        },
        "READ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READ"
          }
        },
        "WRITE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WRITE"
          }
        },
        "READ_ACP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READ_ACP"
          }
        },
        "WRITE_ACP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WRITE_ACP"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3Prefix": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2000
        },
        "smithy.api#pattern": "^.+$"
      }
    },
    "com.amazonaws.s3control#S3PrefixType": {
      "type": "enum",
      "members": {
        "Object": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Object"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3RegionalBucketArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 128
        }
      }
    },
    "com.amazonaws.s3control#S3RegionalOrS3ExpressBucketArnString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:[^:]+:(s3|s3express):"
      }
    },
    "com.amazonaws.s3control#S3ReplicateObjectOperation": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>Directs the specified job to invoke <code>ReplicateObject</code> on every object in the\n         job's manifest.</p>"
      }
    },
    "com.amazonaws.s3control#S3ResourceArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1011
        },
        "smithy.api#pattern": "^arn:[^:]+:s3:[^:]"
      }
    },
    "com.amazonaws.s3control#S3Retention": {
      "type": "structure",
      "members": {
        "RetainUntilDate": {
          "target": "com.amazonaws.s3control#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>The date when the applied Object Lock retention will expire on all objects set by the\n         Batch Operations job.</p>"
          }
        },
        "Mode": {
          "target": "com.amazonaws.s3control#S3ObjectLockRetentionMode",
          "traits": {
            "smithy.api#documentation": "<p>The Object Lock retention mode to be applied to all objects in the Batch Operations\n         job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the S3 Object Lock retention mode to be applied to all objects in the\n         S3 Batch Operations job. If you don't provide <code>Mode</code> and <code>RetainUntilDate</code>\n         data types in your operation, you will remove the retention from your objects. For more\n         information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html\">Using S3 Object Lock retention\n            with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#S3SSEAlgorithm": {
      "type": "enum",
      "members": {
        "AES256": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AES256"
          }
        },
        "KMS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "KMS"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3SetObjectAclOperation": {
      "type": "structure",
      "members": {
        "AccessControlPolicy": {
          "target": "com.amazonaws.s3control#S3AccessControlPolicy",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for a\n         PUT\n         Object ACL operation. S3 Batch Operations passes every object to the underlying\n            <code>PutObjectAcl</code>\n         API\n         operation. For more information about the parameters for this operation,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTacl.html\">PutObjectAcl</a>.</p>"
      }
    },
    "com.amazonaws.s3control#S3SetObjectLegalHoldOperation": {
      "type": "structure",
      "members": {
        "LegalHold": {
          "target": "com.amazonaws.s3control#S3ObjectLockLegalHold",
          "traits": {
            "smithy.api#documentation": "<p>Contains the Object Lock legal hold status to be applied to all objects in the\n         Batch Operations job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration for an S3 Object Lock legal hold operation that an\n         S3 Batch Operations job passes\n         to\n         every object to the underlying\n            <code>PutObjectLegalHold</code>\n         API\n         operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-legal-hold.html\">Using S3 Object Lock legal hold\n            with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#S3SetObjectRetentionOperation": {
      "type": "structure",
      "members": {
        "BypassGovernanceRetention": {
          "target": "com.amazonaws.s3control#Boolean",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Indicates if the action should be applied to objects in the Batch Operations job even if they\n         have Object Lock <code> GOVERNANCE</code> type in place.</p>"
          }
        },
        "Retention": {
          "target": "com.amazonaws.s3control#S3Retention",
          "traits": {
            "smithy.api#documentation": "<p>Contains the Object Lock retention mode to be applied to all objects in the Batch Operations\n         job. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html\">Using S3 Object Lock retention\n            with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for the Object Lock retention action for an\n         S3 Batch Operations job. Batch Operations passes every object to the underlying\n            <code>PutObjectRetention</code>\n         API\n         operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/batch-ops-retention-date.html\">Using S3 Object Lock retention\n            with S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <note>\n            <p>This functionality is not supported by directory buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#S3SetObjectTaggingOperation": {
      "type": "structure",
      "members": {
        "TagSet": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the configuration parameters for a\n         PUT\n         Object Tagging operation. S3 Batch Operations passes every object to the underlying\n            <code>PutObjectTagging</code>\n         API\n         operation. For more information about the parameters for this operation,\n         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html\">PutObjectTagging</a>.</p>"
      }
    },
    "com.amazonaws.s3control#S3StorageClass": {
      "type": "enum",
      "members": {
        "STANDARD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD"
          }
        },
        "STANDARD_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD_IA"
          }
        },
        "ONEZONE_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ONEZONE_IA"
          }
        },
        "GLACIER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLACIER"
          }
        },
        "INTELLIGENT_TIERING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTELLIGENT_TIERING"
          }
        },
        "DEEP_ARCHIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEEP_ARCHIVE"
          }
        },
        "GLACIER_IR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLACIER_IR"
          }
        }
      }
    },
    "com.amazonaws.s3control#S3Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.s3control#TagKeyString",
          "traits": {
            "smithy.api#documentation": "<p>Key of the tag</p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.s3control#TagValueString",
          "traits": {
            "smithy.api#documentation": "<p>Value of the tag</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for a key-value name pair.</p>"
      }
    },
    "com.amazonaws.s3control#S3TagSet": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3Tag"
      }
    },
    "com.amazonaws.s3control#S3UserMetadata": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.s3control#NonEmptyMaxLength1024String"
      },
      "value": {
        "target": "com.amazonaws.s3control#MaxLength1024String"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 8192
        }
      }
    },
    "com.amazonaws.s3control#SSEKMS": {
      "type": "structure",
      "members": {
        "KeyId": {
          "target": "com.amazonaws.s3control#SSEKMSKeyId",
          "traits": {
            "smithy.api#documentation": "<p>A container for the ARN of the SSE-KMS encryption. This property is read-only and\n         follows the following format: <code>\n               arn:aws:kms:<i>us-east-1</i>:<i>example-account-id</i>:key/<i>example-9a73-4afc-8d29-8f5900cef44e</i>\n            </code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#xmlName": "SSE-KMS"
      }
    },
    "com.amazonaws.s3control#SSEKMSEncryption": {
      "type": "structure",
      "members": {
        "KeyId": {
          "target": "com.amazonaws.s3control#KmsKeyArnString",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric encryption\n         customer managed key to use for encrypting generated manifest objects.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration for the use of SSE-KMS to encrypt generated manifest objects.</p>",
        "smithy.api#xmlName": "SSE-KMS"
      }
    },
    "com.amazonaws.s3control#SSEKMSKeyId": {
      "type": "string"
    },
    "com.amazonaws.s3control#SSES3": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#xmlName": "SSE-S3"
      }
    },
    "com.amazonaws.s3control#SSES3Encryption": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>Configuration for the use of SSE-S3 to encrypt generated manifest objects.</p>",
        "smithy.api#xmlName": "SSE-S3"
      }
    },
    "com.amazonaws.s3control#SecretAccessKey": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.s3control#SelectionCriteria": {
      "type": "structure",
      "members": {
        "Delimiter": {
          "target": "com.amazonaws.s3control#StorageLensPrefixLevelDelimiter",
          "traits": {
            "smithy.api#documentation": "<p>A container for the delimiter of the selection criteria being used.</p>"
          }
        },
        "MaxDepth": {
          "target": "com.amazonaws.s3control#StorageLensPrefixLevelMaxDepth",
          "traits": {
            "smithy.api#documentation": "<p>The max depth of the selection criteria</p>"
          }
        },
        "MinStorageBytesPercentage": {
          "target": "com.amazonaws.s3control#MinStorageBytesPercentage",
          "traits": {
            "smithy.api#documentation": "<p>The minimum number of storage bytes percentage whose metrics will be selected.</p>\n         <note>\n            <p>You must choose a value greater than or equal to <code>1.0</code>.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#SessionToken": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.s3control#Setting": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.s3control#SourceSelectionCriteria": {
      "type": "structure",
      "members": {
        "SseKmsEncryptedObjects": {
          "target": "com.amazonaws.s3control#SseKmsEncryptedObjects",
          "traits": {
            "smithy.api#documentation": "<p>A filter that you can use to select Amazon S3 objects that are encrypted with server-side\n         encryption by using Key Management Service (KMS) keys. If you include\n            <code>SourceSelectionCriteria</code> in the replication configuration, this element is\n         required. </p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
          }
        },
        "ReplicaModifications": {
          "target": "com.amazonaws.s3control#ReplicaModifications",
          "traits": {
            "smithy.api#documentation": "<p>A filter that you can use to specify whether replica modification sync is enabled.\n         S3 on Outposts replica modification sync can help you keep object metadata synchronized\n         between replicas and source objects. By default, S3 on Outposts replicates metadata from the\n         source objects to the replicas only. When replica modification sync is enabled,\n         S3 on Outposts replicates metadata changes made to the replica copies back to the source\n         object, making the replication bidirectional.</p>\n         <p>To replicate object metadata modifications on replicas, you can specify this element and\n         set the <code>Status</code> of this element to <code>Enabled</code>.</p>\n         <note>\n            <p>You must enable replica modification sync on the source and destination buckets to\n            replicate replica metadata changes between the source and the replicas.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container that describes additional filters for identifying the source objects that\n         you want to replicate. You can choose to enable or disable the replication of these\n         objects.</p>"
      }
    },
    "com.amazonaws.s3control#SseKmsEncryptedObjects": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.s3control#SseKmsEncryptedObjectsStatus",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether Amazon S3 replicates objects that are created with server-side encryption\n         by using an KMS key stored in Key Management Service.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for filter information that you can use to select S3 objects that are\n         encrypted with Key Management Service (KMS).</p>\n         <note>\n            <p>This is not supported by Amazon S3 on Outposts buckets.</p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#SseKmsEncryptedObjectsStatus": {
      "type": "enum",
      "members": {
        "Enabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Enabled"
          }
        },
        "Disabled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Disabled"
          }
        }
      }
    },
    "com.amazonaws.s3control#StorageClassList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#S3StorageClass"
      }
    },
    "com.amazonaws.s3control#StorageLensArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:s3:[a-z0-9\\-]+:\\d{12}:storage\\-lens\\/"
      }
    },
    "com.amazonaws.s3control#StorageLensAwsOrg": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.s3control#AwsOrgArn",
          "traits": {
            "smithy.api#documentation": "<p>A container for the Amazon Resource Name (ARN) of the Amazon Web Services organization. This property\n         is read-only and follows the following format: <code>\n               arn:aws:organizations:<i>us-east-1</i>:<i>example-account-id</i>:organization/<i>o-ex2l495dck</i>\n            </code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Amazon Web Services organization for your S3 Storage Lens.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensConfiguration": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.s3control#ConfigId",
          "traits": {
            "smithy.api#documentation": "<p>A container for the Amazon S3 Storage Lens configuration ID.</p>",
            "smithy.api#required": {}
          }
        },
        "AccountLevel": {
          "target": "com.amazonaws.s3control#AccountLevel",
          "traits": {
            "smithy.api#documentation": "<p>A container for all the account-level configurations of your S3 Storage Lens\n         configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "Include": {
          "target": "com.amazonaws.s3control#Include",
          "traits": {
            "smithy.api#documentation": "<p>A container for what is included in this configuration. This container can only be valid\n         if there is no <code>Exclude</code> container submitted, and it's not empty. </p>"
          }
        },
        "Exclude": {
          "target": "com.amazonaws.s3control#Exclude",
          "traits": {
            "smithy.api#documentation": "<p>A container for what is excluded in this configuration. This container can only be valid\n         if there is no <code>Include</code> container submitted, and it's not empty. </p>"
          }
        },
        "DataExport": {
          "target": "com.amazonaws.s3control#StorageLensDataExport",
          "traits": {
            "smithy.api#documentation": "<p>A container to specify the properties of your S3 Storage Lens metrics export including, the\n         destination, schema and format.</p>"
          }
        },
        "IsEnabled": {
          "target": "com.amazonaws.s3control#IsEnabled",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A container for whether the S3 Storage Lens configuration is enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "AwsOrg": {
          "target": "com.amazonaws.s3control#StorageLensAwsOrg",
          "traits": {
            "smithy.api#documentation": "<p>A container for the Amazon Web Services organization for this S3 Storage Lens configuration.</p>"
          }
        },
        "StorageLensArn": {
          "target": "com.amazonaws.s3control#StorageLensArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 Storage Lens configuration. This property is read-only\n         and follows the following format: <code>\n               arn:aws:s3:<i>us-east-1</i>:<i>example-account-id</i>:storage-lens/<i>your-dashboard-name</i>\n            </code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the Amazon S3 Storage Lens configuration.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ListStorageLensConfigurationEntry",
        "traits": {
          "smithy.api#xmlName": "StorageLensConfiguration"
        }
      }
    },
    "com.amazonaws.s3control#StorageLensDataExport": {
      "type": "structure",
      "members": {
        "S3BucketDestination": {
          "target": "com.amazonaws.s3control#S3BucketDestination",
          "traits": {
            "smithy.api#documentation": "<p>A container for the bucket where the S3 Storage Lens metrics export will be located.</p>\n         <note>\n            <p>This bucket must be located in the same Region as the storage lens configuration.\n         </p>\n         </note>"
          }
        },
        "CloudWatchMetrics": {
          "target": "com.amazonaws.s3control#CloudWatchMetrics",
          "traits": {
            "smithy.api#documentation": "<p>A container for enabling Amazon CloudWatch publishing for S3 Storage Lens metrics.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container to specify the properties of your S3 Storage Lens metrics export, including the\n         destination, schema, and format.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensDataExportEncryption": {
      "type": "structure",
      "members": {
        "SSES3": {
          "target": "com.amazonaws.s3control#SSES3",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#xmlName": "SSE-S3"
          }
        },
        "SSEKMS": {
          "target": "com.amazonaws.s3control#SSEKMS",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#xmlName": "SSE-KMS"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container for the encryption of the S3 Storage Lens metrics exports.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroup": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#StorageLensGroupName",
          "traits": {
            "smithy.api#documentation": "<p> Contains the name of the Storage Lens group. </p>",
            "smithy.api#required": {}
          }
        },
        "Filter": {
          "target": "com.amazonaws.s3control#StorageLensGroupFilter",
          "traits": {
            "smithy.api#documentation": "<p>Sets the criteria for the Storage Lens group data that is displayed. For multiple filter\n         conditions, the <code>AND</code> or <code>OR</code> logical operator is used.</p>",
            "smithy.api#required": {}
          }
        },
        "StorageLensGroupArn": {
          "target": "com.amazonaws.s3control#StorageLensGroupArn",
          "traits": {
            "smithy.api#documentation": "<p> Contains the Amazon Resource Name (ARN) of the Storage Lens group. This property is\n         read-only. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A custom grouping of objects that include filters for prefixes, suffixes, object tags,\n         object size, or object age. You can create an S3 Storage Lens group that includes a single\n         filter or multiple filter conditions. To specify multiple filter conditions, you use\n            <code>AND</code> or <code>OR</code> logical operators. </p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupAndOperator": {
      "type": "structure",
      "members": {
        "MatchAnyPrefix": {
          "target": "com.amazonaws.s3control#MatchAnyPrefix",
          "traits": {
            "smithy.api#documentation": "<p> Contains a list of prefixes. At least one prefix must be specified. Up to 10 prefixes\n         are allowed. </p>"
          }
        },
        "MatchAnySuffix": {
          "target": "com.amazonaws.s3control#MatchAnySuffix",
          "traits": {
            "smithy.api#documentation": "<p> Contains a list of suffixes. At least one suffix must be specified. Up to 10 suffixes\n         are allowed. </p>"
          }
        },
        "MatchAnyTag": {
          "target": "com.amazonaws.s3control#MatchAnyTag",
          "traits": {
            "smithy.api#documentation": "<p> Contains the list of object tags. At least one object tag must be specified. Up to 10\n         object tags are allowed. </p>"
          }
        },
        "MatchObjectAge": {
          "target": "com.amazonaws.s3control#MatchObjectAge",
          "traits": {
            "smithy.api#documentation": "<p> Contains <code>DaysGreaterThan</code> and <code>DaysLessThan</code> to define the\n         object age range (minimum and maximum number of days). </p>"
          }
        },
        "MatchObjectSize": {
          "target": "com.amazonaws.s3control#MatchObjectSize",
          "traits": {
            "smithy.api#documentation": "<p> Contains <code>BytesGreaterThan</code> and <code>BytesLessThan</code> to define the\n         object size range (minimum and maximum number of Bytes). </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A logical operator that allows multiple filter conditions to be joined for more complex\n         comparisons of Storage Lens group data. </p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:[a-z\\-]+:s3:[a-z0-9\\-]+:\\d{12}:storage\\-lens\\-group\\/"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupFilter": {
      "type": "structure",
      "members": {
        "MatchAnyPrefix": {
          "target": "com.amazonaws.s3control#MatchAnyPrefix",
          "traits": {
            "smithy.api#documentation": "<p> Contains a list of prefixes. At least one prefix must be specified. Up to 10 prefixes\n         are allowed. </p>"
          }
        },
        "MatchAnySuffix": {
          "target": "com.amazonaws.s3control#MatchAnySuffix",
          "traits": {
            "smithy.api#documentation": "<p> Contains a list of suffixes. At least one suffix must be specified. Up to 10 suffixes\n         are allowed. </p>"
          }
        },
        "MatchAnyTag": {
          "target": "com.amazonaws.s3control#MatchAnyTag",
          "traits": {
            "smithy.api#documentation": "<p> Contains the list of S3 object tags. At least one object tag must be specified. Up to\n         10 object tags are allowed. </p>"
          }
        },
        "MatchObjectAge": {
          "target": "com.amazonaws.s3control#MatchObjectAge",
          "traits": {
            "smithy.api#documentation": "<p> Contains <code>DaysGreaterThan</code> and <code>DaysLessThan</code> to define the\n         object age range (minimum and maximum number of days). </p>"
          }
        },
        "MatchObjectSize": {
          "target": "com.amazonaws.s3control#MatchObjectSize",
          "traits": {
            "smithy.api#documentation": "<p> Contains <code>BytesGreaterThan</code> and <code>BytesLessThan</code> to define the\n         object size range (minimum and maximum number of Bytes). </p>"
          }
        },
        "And": {
          "target": "com.amazonaws.s3control#StorageLensGroupAndOperator",
          "traits": {
            "smithy.api#documentation": "<p>A logical operator that allows multiple filter conditions to be joined for more complex\n         comparisons of Storage Lens group data. Objects must match all of the listed filter\n         conditions that are joined by the <code>And</code> logical operator. Only one of each\n         filter condition is allowed.</p>"
          }
        },
        "Or": {
          "target": "com.amazonaws.s3control#StorageLensGroupOrOperator",
          "traits": {
            "smithy.api#documentation": "<p>A single logical operator that allows multiple filter conditions to be joined. Objects\n         can match any of the listed filter conditions, which are joined by the <code>Or</code>\n         logical operator. Only one of each filter condition is allowed. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filter element sets the criteria for the Storage Lens group data that is displayed.\n         For multiple filter conditions, the <code>AND</code> or <code>OR</code> logical operator is\n         used.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupLevel": {
      "type": "structure",
      "members": {
        "SelectionCriteria": {
          "target": "com.amazonaws.s3control#StorageLensGroupLevelSelectionCriteria",
          "traits": {
            "smithy.api#documentation": "<p> Indicates which Storage Lens group ARNs to include or exclude in the Storage Lens group\n         aggregation. If this value is left null, then all Storage Lens groups are selected. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Specifies the Storage Lens groups to include in the Storage Lens group aggregation.\n      </p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupLevelExclude": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#StorageLensGroupArn",
        "traits": {
          "smithy.api#xmlName": "Arn"
        }
      }
    },
    "com.amazonaws.s3control#StorageLensGroupLevelInclude": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#StorageLensGroupArn",
        "traits": {
          "smithy.api#xmlName": "Arn"
        }
      }
    },
    "com.amazonaws.s3control#StorageLensGroupLevelSelectionCriteria": {
      "type": "structure",
      "members": {
        "Include": {
          "target": "com.amazonaws.s3control#StorageLensGroupLevelInclude",
          "traits": {
            "smithy.api#documentation": "<p> Indicates which Storage Lens group ARNs to include in the Storage Lens group\n         aggregation. </p>"
          }
        },
        "Exclude": {
          "target": "com.amazonaws.s3control#StorageLensGroupLevelExclude",
          "traits": {
            "smithy.api#documentation": "<p> Indicates which Storage Lens group ARNs to exclude from the Storage Lens group\n         aggregation. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Indicates which Storage Lens group ARNs to include or exclude in the Storage Lens group\n         aggregation. You can only attach Storage Lens groups to your Storage Lens dashboard if\n         they're included in your Storage Lens group aggregation. If this value is left null, then\n         all Storage Lens groups are selected. </p>"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#ListStorageLensGroupEntry",
        "traits": {
          "smithy.api#xmlName": "StorageLensGroup"
        }
      }
    },
    "com.amazonaws.s3control#StorageLensGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9\\-\\_]+$"
      }
    },
    "com.amazonaws.s3control#StorageLensGroupOrOperator": {
      "type": "structure",
      "members": {
        "MatchAnyPrefix": {
          "target": "com.amazonaws.s3control#MatchAnyPrefix",
          "traits": {
            "smithy.api#documentation": "<p> Filters objects that match any of the specified prefixes. </p>"
          }
        },
        "MatchAnySuffix": {
          "target": "com.amazonaws.s3control#MatchAnySuffix",
          "traits": {
            "smithy.api#documentation": "<p>\nFilters objects that match any of the specified suffixes.\n</p>"
          }
        },
        "MatchAnyTag": {
          "target": "com.amazonaws.s3control#MatchAnyTag",
          "traits": {
            "smithy.api#documentation": "<p>\nFilters objects that match any of the specified S3 object tags.\n</p>"
          }
        },
        "MatchObjectAge": {
          "target": "com.amazonaws.s3control#MatchObjectAge",
          "traits": {
            "smithy.api#documentation": "<p>\nFilters objects that match the specified object age range.\n</p>"
          }
        },
        "MatchObjectSize": {
          "target": "com.amazonaws.s3control#MatchObjectSize",
          "traits": {
            "smithy.api#documentation": "<p>\nFilters objects that match the specified object size range.\n</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A container element for specifying <code>Or</code> rule conditions. The rule conditions\n         determine the subset of objects to which the <code>Or</code> rule applies. Objects can\n         match any of the listed filter conditions, which are joined by the <code>Or</code> logical\n         operator. Only one of each filter condition is allowed.</p>"
      }
    },
    "com.amazonaws.s3control#StorageLensPrefixLevelDelimiter": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.s3control#StorageLensPrefixLevelMaxDepth": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.s3control#StorageLensTag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.s3control#TagKeyString",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.s3control#TagValueString",
          "traits": {
            "smithy.api#documentation": "<p></p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#StorageLensTags": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#StorageLensTag",
        "traits": {
          "smithy.api#xmlName": "Tag"
        }
      }
    },
    "com.amazonaws.s3control#StringForNextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[A-Za-z0-9\\+\\:\\/\\=\\?\\#-_]+$"
      }
    },
    "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutesRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutesResult"
      },
      "traits": {
        "smithy.api#documentation": "<note>\n            <p>This operation is not supported by directory buckets.</p>\n         </note>\n         <p>Submits an updated route configuration for a Multi-Region Access Point. This API operation updates the\n         routing status for the specified Regions from active to passive, or from passive to active.\n         A value of <code>0</code> indicates a passive status, which means that traffic won't be\n         routed to the specified Region. A value of <code>100</code> indicates an active status,\n         which means that traffic will be routed to the specified Region. At least one Region must\n         be active at all times.</p>\n         <p>When the routing configuration is changed, any in-progress operations (uploads, copies,\n         deletes, and so on) to formerly active Regions will continue to run to their final\n         completion state (success or failure). The routing configurations of any Regions that\n         aren’t specified remain unchanged.</p>\n         <note>\n            <p>Updated routing configurations might not be immediately applied. It can take up to 2\n            minutes for your changes to take effect.</p>\n         </note>\n         <p>To submit routing control changes and failover requests, use the Amazon S3 failover control\n         infrastructure endpoints in these five Amazon Web Services Regions:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>us-east-1</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>us-west-2</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ap-southeast-2</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ap-northeast-1</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>eu-west-1</code>\n               </p>\n            </li>\n         </ul>\n         <note>\n            <p>Your Amazon S3 bucket does not need to be in these five Regions.</p>\n         </note>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v20180820/mrap/instances/{Mrap+}/routes",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutesRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID for the owner of the Multi-Region Access Point.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "Mrap": {
          "target": "com.amazonaws.s3control#MultiRegionAccessPointId",
          "traits": {
            "smithy.api#documentation": "<p>The Multi-Region Access Point ARN.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteUpdates": {
          "target": "com.amazonaws.s3control#RouteList",
          "traits": {
            "smithy.api#documentation": "<p>The different routes that make up the new route configuration. Active routes return a\n         value of <code>100</code>, and passive routes return a value of <code>0</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#SubmitMultiRegionAccessPointRoutesResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#Suffix": {
      "type": "string"
    },
    "com.amazonaws.s3control#SuspendedCause": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.s3control#SuspendedDate": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.s3control#TagKeyString",
          "traits": {
            "smithy.api#documentation": "<p>The key of the key-value pair of a tag added to your Amazon Web Services resource. A tag key can be up to 128 Unicode characters in length and is case-sensitive. System created tags that begin with <code>aws:</code> aren’t supported.\n      </p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.s3control#TagValueString",
          "traits": {
            "smithy.api#documentation": "<p>\n   The value of the key-value pair of a tag added to your Amazon Web Services resource. A tag value can be up to 256 Unicode characters in length and is case-sensitive.\n</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n   An Amazon Web Services resource tag that's associated with your S3 resource. You can add tags to new objects when you upload them, or you can add object tags to existing objects. \n</p>\n         <note>\n            <p>This operation is only supported for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-lens-groups.html\">S3 Storage Lens groups</a> and for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-tagging.html\">S3 Access Grants</a>. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant. </p>\n         </note>"
      }
    },
    "com.amazonaws.s3control#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#TagKeyString"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.s3control#TagKeyString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      }
    },
    "com.amazonaws.s3control#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#Tag",
        "traits": {
          "smithy.api#xmlName": "Tag"
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.s3control#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#TagResourceResult"
      },
      "traits": {
        "smithy.api#documentation": "<p> Creates a new Amazon Web Services resource tag or updates an existing resource tag. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources. You can add up to 50 Amazon Web Services resource tags for each S3 resource. </p>\n         <note>\n            <p>This operation is only supported for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-lens-groups.html\">S3 Storage Lens groups</a> and for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-tagging.html\">S3 Access Grants</a>. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant. </p>\n         </note>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:TagResource</code> permission to use this operation. </p>\n            </dd>\n         </dl>\n         <p>For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about S3 Tagging errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3TaggingErrorCodeList\">List of Amazon S3 Tagging error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/tags/{ResourceArn+}",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#TagResourceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID that created the S3 resource that you're trying to add tags to or the requester's account ID. \n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.s3control#S3ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the S3 resource that you're trying to add tags to. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.s3control#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services resource tags that you want to add to the specified S3 resource. \n</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#TagResourceResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#TagValueString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      }
    },
    "com.amazonaws.s3control#Tagging": {
      "type": "structure",
      "members": {
        "TagSet": {
          "target": "com.amazonaws.s3control#S3TagSet",
          "traits": {
            "smithy.api#documentation": "<p>A collection for a set of tags.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.s3control#TimeStamp": {
      "type": "timestamp"
    },
    "com.amazonaws.s3control#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#TooManyTagsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.s3control#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Amazon S3 throws this exception if you have too many tags in your tag set.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.s3control#TrafficDialPercentage": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.s3control#Transition": {
      "type": "structure",
      "members": {
        "Date": {
          "target": "com.amazonaws.s3control#Date",
          "traits": {
            "smithy.api#documentation": "<p>Indicates when objects are transitioned to the specified storage class. The date value\n         must be in ISO 8601 format. The time is always midnight UTC.</p>"
          }
        },
        "Days": {
          "target": "com.amazonaws.s3control#Days",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Indicates the number of days after creation when objects are transitioned to the\n         specified storage class. The value must be a positive integer.</p>"
          }
        },
        "StorageClass": {
          "target": "com.amazonaws.s3control#TransitionStorageClass",
          "traits": {
            "smithy.api#documentation": "<p>The storage class to which you want the object to transition.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies when an object transitions to a specified storage class. For more information\n         about Amazon S3 Lifecycle configuration rules, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html\">\n            Transitioning objects using Amazon S3 Lifecycle</a> in the\n            <i>Amazon S3 User Guide</i>.</p>"
      }
    },
    "com.amazonaws.s3control#TransitionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.s3control#Transition",
        "traits": {
          "smithy.api#xmlName": "Transition"
        }
      }
    },
    "com.amazonaws.s3control#TransitionStorageClass": {
      "type": "enum",
      "members": {
        "GLACIER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLACIER"
          }
        },
        "STANDARD_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDARD_IA"
          }
        },
        "ONEZONE_IA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ONEZONE_IA"
          }
        },
        "INTELLIGENT_TIERING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTELLIGENT_TIERING"
          }
        },
        "DEEP_ARCHIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEEP_ARCHIVE"
          }
        }
      }
    },
    "com.amazonaws.s3control#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#UntagResourceResult"
      },
      "traits": {
        "smithy.api#documentation": "<p> This operation removes the specified Amazon Web Services resource tags from an S3 resource. Each tag is a label consisting of a user-defined key and value. Tags can help you manage, identify, organize, search for, and filter resources. </p>\n         <note>\n            <p>This operation is only supported for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-lens-groups.html\">S3 Storage Lens groups</a> and for <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-grants-tagging.html\">S3 Access Grants</a>. The tagged resource can be an S3 Storage Lens group or S3 Access Grants instance, registered location, or grant. </p>\n         </note>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:UntagResource</code> permission to use this operation. </p>\n            </dd>\n         </dl>\n         <p>For more information about the required Storage\n         Lens Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about S3 Tagging errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3TaggingErrorCodeList\">List of Amazon S3\n            Tagging error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v20180820/tags/{ResourceArn+}",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\n   The Amazon Web Services account ID that owns the resource that you're trying to remove the tags from.\n   </p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.s3control#S3ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>\n   The Amazon Resource Name (ARN) of the S3 resource that you're trying to remove the tags from.\n   </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.s3control#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>\n   The array of tag key-value pairs that you're trying to remove from of the S3 resource.\n   </p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#UntagResourceResult": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#UpdateAccessGrantsLocation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#UpdateAccessGrantsLocationRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#UpdateAccessGrantsLocationResult"
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates the IAM role of a registered location in your S3 Access Grants instance.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>You must have the <code>s3:UpdateAccessGrantsLocation</code> permission to use this operation. </p>\n            </dd>\n            <dt>Additional Permissions</dt>\n            <dd>\n               <p>You must also have the following permission: <code>iam:PassRole</code>\n               </p>\n            </dd>\n         </dl>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/accessgrantsinstance/location/{AccessGrantsLocationId}",
          "code": 200
        },
        "smithy.api#httpChecksumRequired": {},
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#UpdateAccessGrantsLocationRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon Web Services account that is making this request.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location that you are updating. S3 Access Grants assigns this ID when you register the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>\n         <p>The ID of the registered location to which you are granting access. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>\n         <p>If you are passing the <code>default</code> location, you cannot create an access grant for the entire default location. You must also specify a bucket or a bucket and prefix in the <code>Subprefix</code> field. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role for the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#UpdateAccessGrantsLocationResult": {
      "type": "structure",
      "members": {
        "CreatedAt": {
          "target": "com.amazonaws.s3control#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when you registered the location. </p>"
          }
        },
        "AccessGrantsLocationId": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registered location to which you are granting access. S3 Access Grants assigned this ID when you registered the location. S3 Access Grants assigns the ID <code>default</code> to the default location <code>s3://</code> and assigns an auto-generated ID to other locations that you register.  </p>"
          }
        },
        "AccessGrantsLocationArn": {
          "target": "com.amazonaws.s3control#AccessGrantsLocationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the registered location that you are updating. </p>"
          }
        },
        "LocationScope": {
          "target": "com.amazonaws.s3control#S3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>The S3 URI path of the location that you are updating. You cannot update the scope of the registered location. The location scope can be the default S3 location <code>s3://</code>, the S3 path to a bucket <code>s3://<bucket></code>, or the S3 path to a bucket and prefix <code>s3://<bucket>/<prefix></code>. </p>"
          }
        },
        "IAMRoleArn": {
          "target": "com.amazonaws.s3control#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the IAM role of the registered location. S3 Access Grants assumes this role to manage access to the registered location. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#UpdateJobPriority": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#UpdateJobPriorityRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#UpdateJobPriorityResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#BadRequestException"
        },
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing S3 Batch Operations job's priority. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>UpdateJobPriority</code> operation, you must have permission to\n                  perform the <code>s3:UpdateJobPriority</code> action.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\">ListJobs</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\">DescribeJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\">UpdateJobStatus</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/jobs/{JobId}/priority",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#UpdateJobPriorityRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the job whose priority you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#JobPriority",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The priority you want to assign to this job.</p>",
            "smithy.api#httpQuery": "priority",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#UpdateJobPriorityResult": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the job whose priority Amazon S3 updated.</p>",
            "smithy.api#required": {}
          }
        },
        "Priority": {
          "target": "com.amazonaws.s3control#JobPriority",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The new priority assigned to the specified job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#UpdateJobStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#UpdateJobStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.s3control#UpdateJobStatusResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.s3control#BadRequestException"
        },
        {
          "target": "com.amazonaws.s3control#InternalServiceException"
        },
        {
          "target": "com.amazonaws.s3control#JobStatusException"
        },
        {
          "target": "com.amazonaws.s3control#NotFoundException"
        },
        {
          "target": "com.amazonaws.s3control#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the status for the specified job. Use this operation to confirm that you want to\n         run a job or to cancel an existing job. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/batch-ops.html\">S3 Batch Operations</a> in the <i>Amazon S3 User Guide</i>.</p>\n         <dl>\n            <dt>Permissions</dt>\n            <dd>\n               <p>To use the\n                  <code>UpdateJobStatus</code> operation, you must have permission to\n                  perform the <code>s3:UpdateJobStatus</code> action.</p>\n            </dd>\n         </dl>\n         <p>Related actions include:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateJob.html\">CreateJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_ListJobs.html\">ListJobs</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_DescribeJob.html\">DescribeJob</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_UpdateJobStatus.html\">UpdateJobStatus</a>\n               </p>\n            </li>\n         </ul>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v20180820/jobs/{JobId}/status",
          "code": 200
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#UpdateJobStatusRequest": {
      "type": "structure",
      "members": {
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the S3 Batch Operations job.</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job whose status you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RequestedJobStatus": {
          "target": "com.amazonaws.s3control#RequestedJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status that you want to move the specified job to.</p>",
            "smithy.api#httpQuery": "requestedJobStatus",
            "smithy.api#required": {}
          }
        },
        "StatusUpdateReason": {
          "target": "com.amazonaws.s3control#JobStatusUpdateReason",
          "traits": {
            "smithy.api#documentation": "<p>A description of the reason why you want to change the specified job's status. This\n         field can be any string up to the maximum length.</p>",
            "smithy.api#httpQuery": "statusUpdateReason"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#UpdateJobStatusResult": {
      "type": "structure",
      "members": {
        "JobId": {
          "target": "com.amazonaws.s3control#JobId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the job whose status was updated.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current status for the specified job.</p>"
          }
        },
        "StatusUpdateReason": {
          "target": "com.amazonaws.s3control#JobStatusUpdateReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason that the specified job's status was updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.s3control#UpdateStorageLensGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.s3control#UpdateStorageLensGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "traits": {
        "smithy.api#documentation": "<p>\nUpdates the existing Storage Lens group.</p>\n         <p>To use this operation, you must have the permission to perform the\n      <code>s3:UpdateStorageLensGroup</code> action. For more information about the required Storage Lens\n      Groups permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage_lens_iam_permissions.html#storage_lens_groups_permissions\">Setting account permissions to use S3 Storage Lens groups</a>.</p>\n         <p>For information about Storage Lens groups errors, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#S3LensErrorCodeList\">List of Amazon S3 Storage\n      Lens error codes</a>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "{AccountId}."
        },
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v20180820/storagelensgroup/{Name}",
          "code": 204
        },
        "smithy.rules#staticContextParams": {
          "RequiresAccountId": {
            "value": true
          }
        }
      }
    },
    "com.amazonaws.s3control#UpdateStorageLensGroupRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.s3control#StorageLensGroupName",
          "traits": {
            "smithy.api#documentation": "<p>\nThe name of the Storage Lens group that you want to update.\n</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AccountId": {
          "target": "com.amazonaws.s3control#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>\nThe Amazon Web Services account ID of the Storage Lens group owner.\n</p>",
            "smithy.api#hostLabel": {},
            "smithy.api#httpHeader": "x-amz-account-id",
            "smithy.api#required": {},
            "smithy.rules#contextParam": {
              "name": "AccountId"
            }
          }
        },
        "StorageLensGroup": {
          "target": "com.amazonaws.s3control#StorageLensGroup",
          "traits": {
            "smithy.api#documentation": "<p>\nThe JSON file that contains the Storage Lens group configuration.\n</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.s3control#UserArguments": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.s3control#NonEmptyMaxLength64String"
      },
      "value": {
        "target": "com.amazonaws.s3control#MaxLength1024String"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.s3control#VersioningConfiguration": {
      "type": "structure",
      "members": {
        "MFADelete": {
          "target": "com.amazonaws.s3control#MFADelete",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether MFA delete is enabled or disabled in the bucket versioning\n         configuration for the S3 on Outposts bucket.</p>",
            "smithy.api#xmlName": "MfaDelete"
          }
        },
        "Status": {
          "target": "com.amazonaws.s3control#BucketVersioningStatus",
          "traits": {
            "smithy.api#documentation": "<p>Sets the versioning state of the S3 on Outposts bucket.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describes the versioning state of an Amazon S3 on Outposts bucket. For more information, see\n            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_PutBucketVersioning.html\">PutBucketVersioning</a>.</p>"
      }
    },
    "com.amazonaws.s3control#VpcConfiguration": {
      "type": "structure",
      "members": {
        "VpcId": {
          "target": "com.amazonaws.s3control#VpcId",
          "traits": {
            "smithy.api#documentation": "<p>If this field is specified, this access point will only allow connections from the specified VPC\n         ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The virtual private cloud (VPC) configuration for an access point.</p>"
      }
    },
    "com.amazonaws.s3control#VpcId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    }
  }
}
