{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.georoutes#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You don't have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.georoutes#ApiKey": {
      "type": "string",
      "traits": {
        "smithy.api#externalDocumentation": {
          "Implementation Guide": "https://github.com/paseto-standard/paseto-spec/blob/master/docs/02-Implementation-Guide/03-Algorithm-Lucidity.md"
        },
        "smithy.api#length": {
          "max": 1000
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#BeforeWaypointsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointIndex"
      }
    },
    "com.amazonaws.georoutes#BoundingBox": {
      "type": "list",
      "member": {
        "target": "smithy.api#Double"
      },
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-5"
        },
        "smithy.api#length": {
          "min": 4,
          "max": 4
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#CalculateIsolines": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.georoutes#CalculateIsolinesRequest"
      },
      "output": {
        "target": "com.amazonaws.georoutes#CalculateIsolinesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.georoutes#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.georoutes#InternalServerException"
        },
        {
          "target": "com.amazonaws.georoutes#ThrottlingException"
        },
        {
          "target": "com.amazonaws.georoutes#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>Use the <code>CalculateIsolines</code> action to find service areas that can be reached\n         in a given threshold of time, distance.</p>",
        "smithy.api#http": {
          "uri": "/isolines",
          "method": "POST"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "CalculateIsolinesSuccess",
            "params": {
              "Thresholds": {
                "Time": [60]
              },
              "Origin": [-123.116796, 49.281476]
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-west-2"
            }
          }
        ]
      }
    },
    "com.amazonaws.georoutes#CalculateIsolinesRequest": {
      "type": "structure",
      "members": {
        "Allow": {
          "target": "com.amazonaws.georoutes#IsolineAllowOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are allowed while calculating an isoline.</p>"
          }
        },
        "ArrivalTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of arrival at the destination.</p>\n         <p>Time format: <code>YYYY-MM-DDThh:mm:ss.sssZ |\n         YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Avoid": {
          "target": "com.amazonaws.georoutes#IsolineAvoidanceOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are avoided while calculating a route. Avoidance is on a best-case basis.\n         If an avoidance can't be satisfied for a particular case, it violates the avoidance and the\n         returned response produces a notice for the violation.</p>"
          }
        },
        "DepartNow": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Uses the current time as the time of departure.</p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of departure from thr origin.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Destination": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The final position for the route. In the World Geodetic System (WGS 84) format:\n            <code>[longitude, latitude]</code>.</p>"
          }
        },
        "DestinationOptions": {
          "target": "com.amazonaws.georoutes#IsolineDestinationOptions",
          "traits": {
            "smithy.api#documentation": "<p>Destination related options.</p>"
          }
        },
        "IsolineGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the returned IsolineGeometry. </p>\n         <p>Default Value:<code>FlexiblePolyline</code>\n         </p>"
          }
        },
        "IsolineGranularity": {
          "target": "com.amazonaws.georoutes#IsolineGranularityOptions",
          "traits": {
            "smithy.api#documentation": "<p>Defines the granularity of the returned Isoline.</p>"
          }
        },
        "Key": {
          "target": "com.amazonaws.georoutes#ApiKey",
          "traits": {
            "smithy.api#documentation": "<p>Optional: The API key to be used for authorization. Either an API key or valid SigV4\n         signature must be provided when making a request. </p>",
            "smithy.api#httpQuery": "key"
          }
        },
        "OptimizeIsolineFor": {
          "target": "com.amazonaws.georoutes#IsolineOptimizationObjective",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the optimization criteria for when calculating an isoline. AccurateCalculation\n         generates an isoline of higher granularity that is more precise. FastCalculation generates\n         an isoline faster by reducing the granularity, and in turn the quality of the isoline.\n         BalancedCalculation generates an isoline by balancing between quality and performance. </p>\n         <p>Default Value: <code>BalancedCalculation</code>\n         </p>"
          }
        },
        "OptimizeRoutingFor": {
          "target": "com.amazonaws.georoutes#RoutingObjective",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the optimization criteria for calculating a route.</p>\n         <p>Default Value: <code>FastestRoute</code>\n         </p>"
          }
        },
        "Origin": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The start position for the route.</p>"
          }
        },
        "OriginOptions": {
          "target": "com.amazonaws.georoutes#IsolineOriginOptions",
          "traits": {
            "smithy.api#documentation": "<p>Origin related options.</p>"
          }
        },
        "Thresholds": {
          "target": "com.amazonaws.georoutes#IsolineThresholds",
          "traits": {
            "smithy.api#documentation": "<p>Threshold to be used for the isoline calculation. Up to 3 thresholds per provided type\n         can be requested.</p>\n         <p> You incur a calculation charge for each threshold. Using a large amount of thresholds in a\n          request can lead you to incur unexpected charges. See\n          <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/routes-pricing.html`\">\n              Amazon Location's pricing page</a> for more information.</p>",
            "smithy.api#required": {}
          }
        },
        "Traffic": {
          "target": "com.amazonaws.georoutes#IsolineTrafficOptions",
          "traits": {
            "smithy.api#documentation": "<p>Traffic related options.</p>"
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#IsolineTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <note>\n            <p> The mode <code>Scooter</code> also applies to motorcycles, set to\n               <code>Scooter</code> when wanted to calculate options for motorcycles.</p>\n         </note>\n         <p>Default Value: <code>Car</code>\n         </p>"
          }
        },
        "TravelModeOptions": {
          "target": "com.amazonaws.georoutes#IsolineTravelModeOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.georoutes#CalculateIsolinesResponse": {
      "type": "structure",
      "members": {
        "ArrivalTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of arrival at the destination. This parameter is returned only if the Destination\n         parameters was provided in the request. </p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of departure from thr origin.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "IsolineGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>The format of the returned IsolineGeometry. </p>\n         <p>Default Value:<code>FlexiblePolyline</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Isolines": {
          "target": "com.amazonaws.georoutes#IsolineList",
          "traits": {
            "smithy.api#documentation": "<p>Calculated isolines and associated properties.</p>",
            "smithy.api#required": {}
          }
        },
        "PricingBucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pricing bucket for which the query is charged at.</p>",
            "smithy.api#httpHeader": "x-amz-geo-pricing-bucket",
            "smithy.api#required": {}
          }
        },
        "SnappedDestination": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Snapped destination that was used for the Isoline calculation.</p>"
          }
        },
        "SnappedOrigin": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Snapped origin that was used for the Isoline calculation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.georoutes#CalculateRouteMatrix": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.georoutes#CalculateRouteMatrixRequest"
      },
      "output": {
        "target": "com.amazonaws.georoutes#CalculateRouteMatrixResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.georoutes#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.georoutes#InternalServerException"
        },
        {
          "target": "com.amazonaws.georoutes#ThrottlingException"
        },
        {
          "target": "com.amazonaws.georoutes#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p> Use <code>CalculateRouteMatrix</code> to compute results for all pairs of Origins to\n         Destinations. Each row corresponds to one entry in Origins. Each entry in the row\n         corresponds to the route from that entry in Origins to an entry in Destinations\n         positions.</p>",
        "smithy.api#http": {
          "uri": "/route-matrix",
          "method": "POST"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "CalculateRouteMatrixSuccess",
            "params": {
              "Origins": [
                {
                  "Position": [-123.11679, 49.28147]
                }
              ],
              "Destinations": [
                {
                  "Position": [-123.11231, 49.28897192166]
                }
              ],
              "RoutingBoundary": {
                "Unbounded": true
              }
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-west-2"
            }
          }
        ]
      }
    },
    "com.amazonaws.georoutes#CalculateRouteMatrixRequest": {
      "type": "structure",
      "members": {
        "Allow": {
          "target": "com.amazonaws.georoutes#RouteMatrixAllowOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are allowed while calculating a route.</p>"
          }
        },
        "Avoid": {
          "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are avoided while calculating a route. Avoidance is on a best-case basis.\n         If an avoidance can't be satisfied for a particular case, it violates the avoidance and the\n         returned response produces a notice for the violation.</p>"
          }
        },
        "DepartNow": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Uses the current time as the time of departure.</p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of departure from thr origin.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Destinations": {
          "target": "com.amazonaws.georoutes#RouteMatrixDestinationList",
          "traits": {
            "smithy.api#documentation": "<p>List of destinations for the route.</p>\n         <note>\n            <p>Route calculations are billed for each origin and destination pair. If you use a large matrix of origins and destinations, your costs will increase accordingly. See\n            <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/routes-pricing.html`\">\n                Amazon Location's pricing page</a> for more information.</p>\n         </note>",
            "smithy.api#length": {
              "min": 1
            },
            "smithy.api#required": {}
          }
        },
        "Exclude": {
          "target": "com.amazonaws.georoutes#RouteMatrixExclusionOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features to be strictly excluded while calculating the route.</p>"
          }
        },
        "Key": {
          "target": "com.amazonaws.georoutes#ApiKey",
          "traits": {
            "smithy.api#documentation": "<p>Optional: The API key to be used for authorization. Either an API key or valid SigV4\n         signature must be provided when making a request. </p>",
            "smithy.api#httpQuery": "key"
          }
        },
        "OptimizeRoutingFor": {
          "target": "com.amazonaws.georoutes#RoutingObjective",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the optimization criteria for calculating a route.</p>\n         <p>Default Value: <code>FastestRoute</code>\n         </p>"
          }
        },
        "Origins": {
          "target": "com.amazonaws.georoutes#RouteMatrixOriginList",
          "traits": {
            "smithy.api#documentation": "<p>The position in longitude and latitude for the origin.</p>\n         <note>\n            <p>Route calculations are billed for each origin and destination pair. Using a large amount of Origins in a\n            request can lead you to incur unexpected charges. See\n            <a href=\"https://docs.aws.amazon.com/location/latest/developerguide/routes-pricing.html`\">\n                Amazon Location's pricing page</a> for more information.</p>\n         </note>",
            "smithy.api#length": {
              "min": 1
            },
            "smithy.api#required": {}
          }
        },
        "RoutingBoundary": {
          "target": "com.amazonaws.georoutes#RouteMatrixBoundary",
          "traits": {
            "smithy.api#documentation": "<p>Boundary within which the matrix is to be calculated. All data, origins and destinations\n         outside the boundary are considered invalid.</p>\n         <note>\n            <p>When request routing boundary was set as AutoCircle, the response routing boundary\n            will return Circle derived from the AutoCircle settings.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "Traffic": {
          "target": "com.amazonaws.georoutes#RouteMatrixTrafficOptions",
          "traits": {
            "smithy.api#documentation": "<p>Traffic related options.</p>"
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#RouteMatrixTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <p>Default Value: <code>Car</code>\n         </p>"
          }
        },
        "TravelModeOptions": {
          "target": "com.amazonaws.georoutes#RouteMatrixTravelModeOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.georoutes#CalculateRouteMatrixResponse": {
      "type": "structure",
      "members": {
        "ErrorCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The count of error results in the route matrix. If this number is 0, all routes were\n         calculated successfully.</p>",
            "smithy.api#range": {
              "min": 0
            },
            "smithy.api#required": {}
          }
        },
        "PricingBucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pricing bucket for which the query is charged at.</p>",
            "smithy.api#httpHeader": "x-amz-geo-pricing-bucket",
            "smithy.api#required": {}
          }
        },
        "RouteMatrix": {
          "target": "com.amazonaws.georoutes#RouteMatrix",
          "traits": {
            "smithy.api#documentation": "<p>The calculated route matrix containing the results for all pairs of Origins to\n         Destination positions. Each row corresponds to one entry in Origins. Each entry in the row\n         corresponds to the route from that entry in Origins to an entry in Destination\n         positions.</p>",
            "smithy.api#required": {}
          }
        },
        "RoutingBoundary": {
          "target": "com.amazonaws.georoutes#RouteMatrixBoundary",
          "traits": {
            "smithy.api#documentation": "<p>Boundary within which the matrix is to be calculated. All data, origins and destinations\n         outside the boundary are considered invalid.</p>\n         <note>\n            <p>When request routing boundary was set as AutoCircle, the response routing boundary\n            will return Circle derived from the AutoCircle settings.</p>\n         </note>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.georoutes#CalculateRoutes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.georoutes#CalculateRoutesRequest"
      },
      "output": {
        "target": "com.amazonaws.georoutes#CalculateRoutesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.georoutes#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.georoutes#InternalServerException"
        },
        {
          "target": "com.amazonaws.georoutes#ThrottlingException"
        },
        {
          "target": "com.amazonaws.georoutes#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>\n            <code>CalculateRoutes</code> computes routes given the following required parameters:\n            <code>Origin</code> and <code>Destination</code>.</p>",
        "smithy.api#http": {
          "uri": "/routes",
          "method": "POST"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "CalculateRoutesSuccess",
            "params": {
              "Origin": [-123.253374, 49.351673],
              "Destination": [-123.930756, 49.1314]
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-west-2"
            }
          }
        ]
      }
    },
    "com.amazonaws.georoutes#CalculateRoutesRequest": {
      "type": "structure",
      "members": {
        "Allow": {
          "target": "com.amazonaws.georoutes#RouteAllowOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are allowed while calculating a route.</p>"
          }
        },
        "ArrivalTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of arrival at the destination.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Avoid": {
          "target": "com.amazonaws.georoutes#RouteAvoidanceOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are avoided while calculating a route. Avoidance is on a best-case basis.\n         If an avoidance can't be satisfied for a particular case, it violates the avoidance and the\n         returned response produces a notice for the violation.</p>"
          }
        },
        "DepartNow": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Uses the current time as the time of departure.</p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Time of departure from thr origin.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Destination": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The final position for the route. In the World Geodetic System (WGS 84) format:\n            <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "DestinationOptions": {
          "target": "com.amazonaws.georoutes#RouteDestinationOptions",
          "traits": {
            "smithy.api#documentation": "<p>Destination related options.</p>"
          }
        },
        "Driver": {
          "target": "com.amazonaws.georoutes#RouteDriverOptions",
          "traits": {
            "smithy.api#documentation": "<p>Driver related options.</p>"
          }
        },
        "Exclude": {
          "target": "com.amazonaws.georoutes#RouteExclusionOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features to be strictly excluded while calculating the route.</p>"
          }
        },
        "InstructionsMeasurementSystem": {
          "target": "com.amazonaws.georoutes#MeasurementSystem",
          "traits": {
            "smithy.api#documentation": "<p>Measurement system to be used for instructions within steps in the response.</p>"
          }
        },
        "Key": {
          "target": "com.amazonaws.georoutes#ApiKey",
          "traits": {
            "smithy.api#documentation": "<p>Optional: The API key to be used for authorization. Either an API key or valid SigV4\n         signature must be provided when making a request. </p>",
            "smithy.api#httpQuery": "key"
          }
        },
        "Languages": {
          "target": "com.amazonaws.georoutes#LanguageTagList",
          "traits": {
            "smithy.api#documentation": "<p>List of languages for instructions within steps in the response.</p>\n         <note>\n            <p>Instructions in the requested language are returned only if they are\n            available.</p>\n         </note>",
            "smithy.api#length": {
              "max": 10
            }
          }
        },
        "LegAdditionalFeatures": {
          "target": "com.amazonaws.georoutes#RouteLegAdditionalFeatureList",
          "traits": {
            "smithy.api#documentation": "<p>A list of optional additional parameters such as timezone that can be requested for each\n         result.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>Elevation</code>: Retrieves the elevation information for each\n               location.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Incidents</code>: Provides information on traffic incidents along the\n               route.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PassThroughWaypoints</code>: Indicates waypoints that are passed through\n               without stopping.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Summary</code>: Returns a summary of the route, including distance and\n               duration.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Tolls</code>: Supplies toll cost information along the route.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TravelStepInstructions</code>: Provides step-by-step instructions for travel\n               along the route.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TruckRoadTypes</code>: Returns information about road types suitable for\n               trucks.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TypicalDuration</code>: Gives typical travel duration based on historical\n               data.</p>\n            </li>\n            <li>\n               <p>\n                  <code>Zones</code>: Specifies the time zone information for each waypoint.</p>\n            </li>\n         </ul>"
          }
        },
        "LegGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the geometry returned for each leg of the route. You can choose\n         between two different geometry encoding formats.</p>\n         <p>\n            <code>FlexiblePolyline</code>: A compact and precise encoding format for the leg\n         geometry. For more information on the format, see the GitHub repository for <a href=\"https://github.com/heremaps/flexible-polyline\">\n               <code>FlexiblePolyline</code>\n            </a>.</p>\n         <p>\n            <code>Simple</code>: A less compact encoding, which is easier to decode but may be less\n         precise and result in larger payloads.</p>"
          }
        },
        "MaxAlternatives": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of alternative routes to be provided in the response, if\n         available.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5
            }
          }
        },
        "OptimizeRoutingFor": {
          "target": "com.amazonaws.georoutes#RoutingObjective",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the optimization criteria for calculating a route.</p>\n         <p>Default Value: <code>FastestRoute</code>\n         </p>"
          }
        },
        "Origin": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The start position for the route.</p>",
            "smithy.api#required": {}
          }
        },
        "OriginOptions": {
          "target": "com.amazonaws.georoutes#RouteOriginOptions",
          "traits": {
            "smithy.api#documentation": "<p>Origin related options.</p>"
          }
        },
        "SpanAdditionalFeatures": {
          "target": "com.amazonaws.georoutes#RouteSpanAdditionalFeatureList",
          "traits": {
            "smithy.api#documentation": "<p>A list of optional features such as SpeedLimit that can be requested for a Span. A span\n         is a section of a Leg for which the requested features have the same values.</p>"
          }
        },
        "Tolls": {
          "target": "com.amazonaws.georoutes#RouteTollOptions",
          "traits": {
            "smithy.api#documentation": "<p>Toll related options.</p>"
          }
        },
        "Traffic": {
          "target": "com.amazonaws.georoutes#RouteTrafficOptions",
          "traits": {
            "smithy.api#documentation": "<p>Traffic related options.</p>"
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#RouteTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <p>Default Value: <code>Car</code>\n         </p>"
          }
        },
        "TravelModeOptions": {
          "target": "com.amazonaws.georoutes#RouteTravelModeOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
          }
        },
        "TravelStepType": {
          "target": "com.amazonaws.georoutes#RouteTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of step returned by the response. Default provides basic steps intended for web\n         based applications. TurnByTurn provides detailed instructions with more granularity\n         intended for a turn based navigation system.</p>"
          }
        },
        "Waypoints": {
          "target": "com.amazonaws.georoutes#RouteWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>List of waypoints between the Origin and Destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.georoutes#CalculateRoutesResponse": {
      "type": "structure",
      "members": {
        "LegGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the geometry returned for each leg of the route.</p>",
            "smithy.api#required": {}
          }
        },
        "Notices": {
          "target": "com.amazonaws.georoutes#RouteResponseNoticeList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>",
            "smithy.api#required": {}
          }
        },
        "PricingBucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pricing bucket for which the query is charged at.</p>",
            "smithy.api#httpHeader": "x-amz-geo-pricing-bucket",
            "smithy.api#required": {}
          }
        },
        "Routes": {
          "target": "com.amazonaws.georoutes#RouteList",
          "traits": {
            "smithy.api#documentation": "<p>The path from the origin to the destination.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.georoutes#Circle": {
      "type": "structure",
      "members": {
        "Center": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Center of the Circle defined in longitude and latitude coordinates.</p>\n         <p>Example: <code>[-123.1174, 49.2847]</code> represents the position with longitude\n            <code>-123.1174</code> and latitude <code>49.2847</code>. </p>",
            "smithy.api#required": {}
          }
        },
        "Radius": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Radius of the Circle.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry defined as a circle. When request routing boundary was set as\n            <code>AutoCircle</code>, the response routing boundary will return <code>Circle</code>\n         derived from the <code>AutoCircle</code> settings.</p>",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#ClusterIndex": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.georoutes#Corridor": {
      "type": "structure",
      "members": {
        "LineString": {
          "target": "com.amazonaws.georoutes#LineString",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "Radius": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Radius that defines the width of the corridor.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry defined as a corridor - a LineString with a radius that defines the width of\n         the corridor.</p>",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#CountryCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 3
        },
        "smithy.api#pattern": "^([A-Z]{2}|[A-Z]{3})$"
      }
    },
    "com.amazonaws.georoutes#CountryCode3": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 3
        },
        "smithy.api#pattern": "^[A-Z]{3}$"
      }
    },
    "com.amazonaws.georoutes#CountryCodeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#CountryCode"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#CurrencyCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 3
        },
        "smithy.api#pattern": "^[A-Z]{3}$"
      }
    },
    "com.amazonaws.georoutes#DayOfWeek": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "MONDAY",
            "value": "Monday"
          },
          {
            "name": "TUESDAY",
            "value": "Tuesday"
          },
          {
            "name": "WEDNESDAY",
            "value": "Wednesday"
          },
          {
            "name": "THURSDAY",
            "value": "Thursday"
          },
          {
            "name": "FRIDAY",
            "value": "Friday"
          },
          {
            "name": "SATURDAY",
            "value": "Saturday"
          },
          {
            "name": "SUNDAY",
            "value": "Sunday"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#DimensionCentimeters": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 4294967295
        }
      }
    },
    "com.amazonaws.georoutes#DistanceMeters": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 4294967295
        }
      }
    },
    "com.amazonaws.georoutes#DistanceThresholdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#DistanceMeters",
        "traits": {
          "smithy.api#range": {
            "min": 0,
            "max": 300000
          }
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.georoutes#DurationSeconds": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 4294967295
        }
      }
    },
    "com.amazonaws.georoutes#GeometryFormat": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "FLEXIBLE_POLYLINE",
            "value": "FlexiblePolyline"
          },
          {
            "name": "SIMPLE",
            "value": "Simple"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#Heading": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0.0,
          "max": 360.0
        }
      }
    },
    "com.amazonaws.georoutes#IndexList": {
      "type": "list",
      "member": {
        "target": "smithy.api#Integer"
      }
    },
    "com.amazonaws.georoutes#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request processing has failed because of an unknown error, exception or\n         failure.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.georoutes#Isoline": {
      "type": "structure",
      "members": {
        "Connections": {
          "target": "com.amazonaws.georoutes#IsolineConnectionList",
          "traits": {
            "smithy.api#documentation": "<p>Isolines may contain multiple components, if these components are connected by ferry\n         links. These components are returned as separate polygons while the ferry links are\n         returned as connections.</p>",
            "smithy.api#required": {}
          }
        },
        "DistanceThreshold": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance threshold corresponding to the calculated Isoline.</p>"
          }
        },
        "Geometries": {
          "target": "com.amazonaws.georoutes#IsolineShapeGeometryList",
          "traits": {
            "smithy.api#documentation": "<p>Geometries for the Calculated isolines.</p>",
            "smithy.api#required": {}
          }
        },
        "TimeThreshold": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Time threshold corresponding to the calculated isoline.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Calculated isolines and associated properties.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAllowOptions": {
      "type": "structure",
      "members": {
        "Hot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hot (High Occupancy Toll) lanes while calculating an isoline.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        },
        "Hov": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hov (High Occupancy vehicle) lanes while calculating an isoline.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Features that are allowed while calculating an isoline.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceArea": {
      "type": "structure",
      "members": {
        "Except": {
          "target": "com.amazonaws.georoutes#IsolineAvoidanceAreaGeometryList",
          "traits": {
            "smithy.api#documentation": "<p>Exceptions to the provided avoidance geometry, to be included while calculating an\n         isoline.</p>"
          }
        },
        "Geometry": {
          "target": "com.amazonaws.georoutes#IsolineAvoidanceAreaGeometry",
          "traits": {
            "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceAreaGeometry": {
      "type": "structure",
      "members": {
        "BoundingBox": {
          "target": "com.amazonaws.georoutes#BoundingBox",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a bounding box. The first pair represents the X and Y coordinates\n         (longitude and latitude,) of the southwest corner of the bounding box; the second pair\n         represents the X and Y coordinates (longitude and latitude) of the northeast corner.</p>"
          }
        },
        "Corridor": {
          "target": "com.amazonaws.georoutes#Corridor",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a corridor - a LineString with a radius that defines the width of\n         the corridor.</p>"
          }
        },
        "Polygon": {
          "target": "com.amazonaws.georoutes#LinearRings",
          "traits": {
            "smithy.api#documentation": "<p>A list of Polygon will be excluded for calculating isolines, the list can only contain 1\n         polygon.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        },
        "PolylineCorridor": {
          "target": "com.amazonaws.georoutes#PolylineCorridor",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as an encoded corridor – a polyline with a radius that defines the\n         width of the corridor. For more information on polyline encoding, see <a href=\"https://github.com/heremaps/flexiblepolyline/blob/master/README.md\">https://github.com/heremaps/flexiblepolyline/blob/master/README.md</a>.</p>"
          }
        },
        "PolylinePolygon": {
          "target": "com.amazonaws.georoutes#PolylineRingList",
          "traits": {
            "smithy.api#documentation": "<p>A list of PolylinePolygon's that are excluded for calculating isolines, the list can\n         only contain 1 polygon. For more information on polyline encoding, see <a href=\"https://github.com/heremaps/flexiblepolyline/blob/master/README.md\">https://github.com/heremaps/flexiblepolyline/blob/master/README.md</a>. </p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The avoidance geometry, to be included while calculating an isoline.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceAreaGeometryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineAvoidanceAreaGeometry"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceAreaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineAvoidanceArea"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceOptions": {
      "type": "structure",
      "members": {
        "Areas": {
          "target": "com.amazonaws.georoutes#IsolineAvoidanceAreaList",
          "traits": {
            "smithy.api#documentation": "<p>Areas to be avoided.</p>"
          }
        },
        "CarShuttleTrains": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid car-shuttle-trains while calculating an isoline.</p>"
          }
        },
        "ControlledAccessHighways": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid controlled access highways while calculating an isoline.</p>"
          }
        },
        "DirtRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid dirt roads while calculating an isoline.</p>"
          }
        },
        "Ferries": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid ferries while calculating an isoline.</p>"
          }
        },
        "SeasonalClosure": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid roads that have seasonal closure while calculating an isoline.</p>"
          }
        },
        "TollRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TollTransponders": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TruckRoadTypes": {
          "target": "com.amazonaws.georoutes#TruckRoadTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>"
          }
        },
        "Tunnels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid tunnels while calculating an isoline.</p>"
          }
        },
        "UTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "ZoneCategories": {
          "target": "com.amazonaws.georoutes#IsolineAvoidanceZoneCategoryList",
          "traits": {
            "smithy.api#documentation": "<p>Zone categories to be avoided.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Features that are avoided while calculating isolines. Avoidance is on a best-case basis.\n         If an avoidance can't be satisfied for a particular case, it violates the avoidance and the\n         returned response produces a notice for the violation.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceZoneCategory": {
      "type": "structure",
      "members": {
        "Category": {
          "target": "com.amazonaws.georoutes#IsolineZoneCategory",
          "traits": {
            "smithy.api#documentation": "<p>Zone category to be avoided.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Zone category to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineAvoidanceZoneCategoryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineAvoidanceZoneCategory"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#IsolineCarOptions": {
      "type": "structure",
      "members": {
        "EngineType": {
          "target": "com.amazonaws.georoutes#IsolineEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#IsolineVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Car</code>.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineConnection": {
      "type": "structure",
      "members": {
        "FromPolygonIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the polygon corresponding to the \"from\" component of the connection.\n         The polygon is available from <code>Isoline[].Geometries</code>.</p>",
            "smithy.api#range": {
              "min": 0
            },
            "smithy.api#required": {}
          }
        },
        "Geometry": {
          "target": "com.amazonaws.georoutes#IsolineConnectionGeometry",
          "traits": {
            "smithy.api#documentation": "<p>The isoline geometry.</p>",
            "smithy.api#required": {}
          }
        },
        "ToPolygonIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the polygon corresponding to the \"to\" component of the connection.\n         The polygon is available from <code>Isoline[].Geometries</code>.</p>",
            "smithy.api#range": {
              "min": 0
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Isolines may contain multiple components, if these components are connected by ferry\n         links. These components are returned as separate polygons while the ferry links are\n         returned as connections.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineConnectionGeometry": {
      "type": "structure",
      "members": {
        "LineString": {
          "target": "com.amazonaws.georoutes#LineString",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        },
        "Polyline": {
          "target": "com.amazonaws.georoutes#Polyline",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map in a lossy compression\n         format.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the connection between different isoline components.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineConnectionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineConnection"
      }
    },
    "com.amazonaws.georoutes#IsolineDestinationOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#IsolineMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#IsolineSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Destination related options.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineEngineType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ELECTRIC",
            "value": "Electric"
          },
          {
            "name": "INTERNAL_COMBUSTION",
            "value": "InternalCombustion"
          },
          {
            "name": "PLUGIN_HYBRID",
            "value": "PluginHybrid"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#IsolineGranularityOptions": {
      "type": "structure",
      "members": {
        "MaxPoints": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum number of points of returned Isoline.</p>",
            "smithy.api#range": {
              "min": 31
            }
          }
        },
        "MaxResolution": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Maximum resolution of the returned isoline.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Isoline granularity related options.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineHazardousCargoType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "COMBUSTIBLE",
            "value": "Combustible"
          },
          {
            "name": "CORROSIVE",
            "value": "Corrosive"
          },
          {
            "name": "EXPLOSIVE",
            "value": "Explosive"
          },
          {
            "name": "FLAMMABLE",
            "value": "Flammable"
          },
          {
            "name": "GAS",
            "value": "Gas"
          },
          {
            "name": "HARMFUL_TO_WATER",
            "value": "HarmfulToWater"
          },
          {
            "name": "ORGANIC",
            "value": "Organic"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POISON",
            "value": "Poison"
          },
          {
            "name": "POISONOUS_INHALATION",
            "value": "PoisonousInhalation"
          },
          {
            "name": "RADIOACTIVE",
            "value": "Radioactive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#IsolineHazardousCargoTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineHazardousCargoType"
      },
      "traits": {
        "smithy.api#length": {
          "max": 11
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#IsolineList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#Isoline"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.georoutes#IsolineMatchingOptions": {
      "type": "structure",
      "members": {
        "NameHint": {
          "target": "com.amazonaws.georoutes#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>Attempts to match the provided position to a road similar to the provided name.</p>"
          }
        },
        "OnRoadThreshold": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>If the distance to a highway/bridge/tunnel/sliproad is within threshold, the waypoint\n         will be snapped to the highway/bridge/tunnel/sliproad.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>"
          }
        },
        "Radius": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Considers all roads within the provided radius to match the provided destination to. The\n         roads that are considered are determined by the provided Strategy.</p>\n         <p>\n            <b>Unit</b>: <code>Meters</code>\n         </p>"
          }
        },
        "Strategy": {
          "target": "com.amazonaws.georoutes#MatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines matching of the position onto the road network. MatchAny considers\n         all roads possible, whereas MatchMostSignificantRoad matches to the most significant\n         road.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Isoline matching related options.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineOptimizationObjective": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCURATE_CALCULATION",
            "value": "AccurateCalculation"
          },
          {
            "name": "BALANCED_CALCULATION",
            "value": "BalancedCalculation"
          },
          {
            "name": "FAST_CALCULATION",
            "value": "FastCalculation"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#IsolineOriginOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#IsolineMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#IsolineSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Origin related options.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineScooterOptions": {
      "type": "structure",
      "members": {
        "EngineType": {
          "target": "com.amazonaws.georoutes#IsolineEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#IsolineVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed specified.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#IsolineShapeGeometry": {
      "type": "structure",
      "members": {
        "Polygon": {
          "target": "com.amazonaws.georoutes#LinearRings",
          "traits": {
            "smithy.api#documentation": "<p>A list of Isoline Polygons, for each isoline polygon, it contains polygons of the first\n         linear ring (the outer ring) and from 2nd item to the last item (the inner rings).</p>"
          }
        },
        "PolylinePolygon": {
          "target": "com.amazonaws.georoutes#PolylineRingList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Isoline PolylinePolygon, for each isoline PolylinePolygon, it contains\n         PolylinePolygon of the first linear ring (the outer ring) and from 2nd item to the last\n         item (the inner rings). For more information on polyline encoding, see <a href=\"https://github.com/heremaps/flexiblepolyline/blob/master/README.md\">https://github.com/heremaps/flexiblepolyline/blob/master/README.md</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the connection between different Isoline components.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineShapeGeometryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#IsolineShapeGeometry"
      }
    },
    "com.amazonaws.georoutes#IsolineSideOfStreetOptions": {
      "type": "structure",
      "members": {
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "UseWith": {
          "target": "com.amazonaws.georoutes#SideOfStreetMatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines when the side of street position should be used. AnyStreet will\n         always use the provided position.</p>\n         <p>Default Value: <code>DividedStreetOnly</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineThresholds": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceThresholdList",
          "traits": {
            "smithy.api#documentation": "<p>Distance to be used for the isoline calculation.</p>"
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimeThresholdList",
          "traits": {
            "smithy.api#documentation": "<p>Time to be used for the isoline calculation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Threshold to be used for the isoline calculation. Up to 5 thresholds per provided type\n         can be requested.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineTrafficOptions": {
      "type": "structure",
      "members": {
        "FlowEventThresholdOverride": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration for which flow traffic is considered valid. For this period, the flow traffic\n         is used over historical traffic data. Flow traffic refers to congestion, which changes very\n         quickly. Duration in seconds for which flow traffic event would be considered valid. While\n         flow traffic event is valid it will be used over the historical traffic data. </p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Usage": {
          "target": "com.amazonaws.georoutes#TrafficUsage",
          "traits": {
            "smithy.api#documentation": "<p>Determines if traffic should be used or ignored while calculating the route.</p>\n         <p>Default Value: <code>UseTrafficData</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to traffic.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineTrailerOptions": {
      "type": "structure",
      "members": {
        "AxleCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "TrailerCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>",
            "smithy.api#range": {
              "min": 1,
              "max": 255
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#IsolineTravelModeOptions": {
      "type": "structure",
      "members": {
        "Car": {
          "target": "com.amazonaws.georoutes#IsolineCarOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Car\"</p>"
          }
        },
        "Scooter": {
          "target": "com.amazonaws.georoutes#IsolineScooterOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>\n         <note>\n            <p>When travel mode is set to <code>Scooter</code>, then the avoidance option\n               <code>ControlledAccessHighways</code> defaults to <code>true</code>.</p>\n         </note>"
          }
        },
        "Truck": {
          "target": "com.amazonaws.georoutes#IsolineTruckOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineTruckOptions": {
      "type": "structure",
      "members": {
        "AxleCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>",
            "smithy.api#range": {
              "min": 2,
              "max": 255
            }
          }
        },
        "EngineType": {
          "target": "com.amazonaws.georoutes#IsolineEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "GrossWeight": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Gross weight of the vehicle including trailers, and goods at capacity.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#IsolineHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargo contained in the vehicle.</p>"
          }
        },
        "Height": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "HeightAboveFirstAxle": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle above its first axle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "KpraLength": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Kingpin to rear axle length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>"
          }
        },
        "Length": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 30000
            }
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#IsolineVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed specified.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "PayloadCapacity": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Payload capacity of the vehicle and trailers attached.</p>\n         <p>\n            <b>Unit</b>: <code>kilograms</code>\n         </p>"
          }
        },
        "TireCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Number of tires on the vehicle.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 255
            }
          }
        },
        "Trailer": {
          "target": "com.amazonaws.georoutes#IsolineTrailerOptions",
          "traits": {
            "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
          }
        },
        "TruckType": {
          "target": "com.amazonaws.georoutes#IsolineTruckType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the truck.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>"
          }
        },
        "WeightPerAxle": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Heaviest weight per axle irrespective of the axle type or the axle group. Meant for\n         usage in countries where the differences in axle types or axle groups are not\n         distinguished.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "WeightPerAxleGroup": {
          "target": "com.amazonaws.georoutes#WeightPerAxleGroup",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the total weight for the specified axle group. Meant for usage in countries\n         that have different regulations based on the axle group type.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Width": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Width of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineTruckType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "LIGHT_TRUCK",
            "value": "LightTruck"
          },
          {
            "name": "STRAIGHT_TRUCK",
            "value": "StraightTruck"
          },
          {
            "name": "TRACTOR",
            "value": "Tractor"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#IsolineVehicleLicensePlate": {
      "type": "structure",
      "members": {
        "LastCharacter": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The last character of the License Plate.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The vehicle license plate.</p>"
      }
    },
    "com.amazonaws.georoutes#IsolineZoneCategory": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CONGESTION_PRICING",
            "value": "CongestionPricing"
          },
          {
            "name": "ENVIRONMENTAL",
            "value": "Environmental"
          },
          {
            "name": "VIGNETTE",
            "value": "Vignette"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#LanguageTag": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 35
        }
      }
    },
    "com.amazonaws.georoutes#LanguageTagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#LanguageTag"
      }
    },
    "com.amazonaws.georoutes#LineString": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#Position"
      },
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-3.1.4"
        },
        "smithy.api#length": {
          "min": 2
        }
      }
    },
    "com.amazonaws.georoutes#LinearRing": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#Position"
      },
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
        },
        "smithy.api#length": {
          "min": 4
        }
      }
    },
    "com.amazonaws.georoutes#LinearRings": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#LinearRing"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.georoutes#LocalizedString": {
      "type": "structure",
      "members": {
        "Language": {
          "target": "com.amazonaws.georoutes#LanguageTag",
          "traits": {
            "smithy.api#documentation": "<p>A list of BCP 47 compliant language codes for the results to be rendered in. The request\n         uses the regional default as the fallback if the requested language can't be\n         provided.</p>"
          }
        },
        "Value": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The value of the localized string.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The localized string.</p>"
      }
    },
    "com.amazonaws.georoutes#LocalizedStringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#LocalizedString"
      }
    },
    "com.amazonaws.georoutes#MatchingStrategy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "MATCH_ANY",
            "value": "MatchAny"
          },
          {
            "name": "MATCH_MOST_SIGNIFICANT_ROAD",
            "value": "MatchMostSignificantRoad"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#MeasurementSystem": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "METRIC",
            "value": "Metric"
          },
          {
            "name": "IMPERIAL",
            "value": "Imperial"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#OptimizeWaypoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.georoutes#OptimizeWaypointsRequest"
      },
      "output": {
        "target": "com.amazonaws.georoutes#OptimizeWaypointsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.georoutes#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.georoutes#InternalServerException"
        },
        {
          "target": "com.amazonaws.georoutes#ThrottlingException"
        },
        {
          "target": "com.amazonaws.georoutes#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>\n            <code>OptimizeWaypoints</code> calculates the optimal order to travel between a set of\n         waypoints to minimize either the travel time or the distance travelled during the journey,\n         based on road network restrictions and the traffic pattern data.</p>",
        "smithy.api#http": {
          "uri": "/optimize-waypoints",
          "method": "POST"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "OptimizeWaypointsSuccess",
            "params": {
              "Origin": [-123.253374, 49.351673],
              "Destination": [-123.930756, 49.1314]
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-west-2"
            }
          }
        ]
      }
    },
    "com.amazonaws.georoutes#OptimizeWaypointsRequest": {
      "type": "structure",
      "members": {
        "Avoid": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAvoidanceOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features that are avoided. Avoidance is on a best-case basis. If an avoidance can't be\n         satisfied for a particular case, this setting is ignored.</p>"
          }
        },
        "Clustering": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationClusteringOptions",
          "traits": {
            "smithy.api#documentation": "<p>Clustering allows you to specify how nearby waypoints can be clustered to improve the\n         optimized sequence.</p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Departure time from the waypoint.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "Destination": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The final position for the route in the World Geodetic System (WGS 84) format:\n            <code>[longitude, latitude]</code>.</p>"
          }
        },
        "DestinationOptions": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationDestinationOptions",
          "traits": {
            "smithy.api#documentation": "<p>Destination related options.</p>"
          }
        },
        "Driver": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationDriverOptions",
          "traits": {
            "smithy.api#documentation": "<p>Driver related options.</p>"
          }
        },
        "Exclude": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationExclusionOptions",
          "traits": {
            "smithy.api#documentation": "<p>Features to be strictly excluded while calculating the route.</p>"
          }
        },
        "Key": {
          "target": "com.amazonaws.georoutes#ApiKey",
          "traits": {
            "smithy.api#documentation": "<p>Optional: The API key to be used for authorization. Either an API key or valid SigV4\n         signature must be provided when making a request. </p>",
            "smithy.api#httpQuery": "key"
          }
        },
        "OptimizeSequencingFor": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationSequencingObjective",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the optimization criteria for the calculated sequence.</p>\n         <p>Default Value: <code>FastestRoute</code>.</p>"
          }
        },
        "Origin": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>The start position for the route.</p>",
            "smithy.api#required": {}
          }
        },
        "OriginOptions": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationOriginOptions",
          "traits": {
            "smithy.api#documentation": "<p>Origin related options.</p>"
          }
        },
        "Traffic": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTrafficOptions",
          "traits": {
            "smithy.api#documentation": "<p>Traffic-related options.</p>"
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <p>Default Value: <code>Car</code>\n         </p>"
          }
        },
        "TravelModeOptions": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTravelModeOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
          }
        },
        "Waypoints": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>List of waypoints between the <code>Origin</code> and <code>Destination</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.georoutes#OptimizeWaypointsResponse": {
      "type": "structure",
      "members": {
        "Connections": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationConnectionList",
          "traits": {
            "smithy.api#documentation": "<p>Details about the connection from one waypoint to the next, within the optimized\n         sequence.</p>",
            "smithy.api#required": {}
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Overall distance to travel the whole sequence.</p>",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Overall duration to travel the whole sequence.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "ImpedingWaypoints": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationImpedingWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>Returns waypoints that caused the optimization problem to fail, and the constraints that\n         were unsatisfied leading to the failure.</p>",
            "smithy.api#required": {}
          }
        },
        "OptimizedWaypoints": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationOptimizedWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>Waypoints in the order of the optimized sequence.</p>",
            "smithy.api#required": {}
          }
        },
        "PricingBucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pricing bucket for which the query is charged at.</p>",
            "smithy.api#httpHeader": "x-amz-geo-pricing-bucket",
            "smithy.api#required": {}
          }
        },
        "TimeBreakdown": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTimeBreakdown",
          "traits": {
            "smithy.api#documentation": "<p>Time breakdown for the sequence.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.georoutes#Polyline": {
      "type": "string",
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://developers.google.com/maps/documentation/utilities/polylinealgorithm"
        },
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#PolylineCorridor": {
      "type": "structure",
      "members": {
        "Polyline": {
          "target": "com.amazonaws.georoutes#Polyline",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map in a lossy compression\n         format.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "Radius": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Considers all roads within the provided radius to match the provided destination to. The\n         roads that are considered are determined by the provided Strategy.</p>\n         <p>\n            <b>Unit</b>: <code>Meters</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry defined as an encoded corridor - an encoded polyline with a radius that defines\n         the width of the corridor.</p>",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#PolylineRing": {
      "type": "string",
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-3.1.6"
        },
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#PolylineRingList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#PolylineRing"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.georoutes#Position": {
      "type": "list",
      "member": {
        "target": "smithy.api#Double"
      },
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
        },
        "smithy.api#length": {
          "min": 2,
          "max": 2
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#Position23": {
      "type": "list",
      "member": {
        "target": "smithy.api#Double"
      },
      "traits": {
        "smithy.api#externalDocumentation": {
          "Documentation": "https://tools.ietf.org/html/rfc7946#section-3.1.1"
        },
        "smithy.api#length": {
          "min": 2,
          "max": 3
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#ProviderResource": {
      "type": "resource",
      "operations": [
        {
          "target": "com.amazonaws.georoutes#CalculateIsolines"
        },
        {
          "target": "com.amazonaws.georoutes#CalculateRouteMatrix"
        },
        {
          "target": "com.amazonaws.georoutes#CalculateRoutes"
        },
        {
          "target": "com.amazonaws.georoutes#OptimizeWaypoints"
        },
        {
          "target": "com.amazonaws.georoutes#SnapToRoads"
        }
      ]
    },
    "com.amazonaws.georoutes#RoadSnapHazardousCargoType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "COMBUSTIBLE",
            "value": "Combustible"
          },
          {
            "name": "CORROSIVE",
            "value": "Corrosive"
          },
          {
            "name": "EXPLOSIVE",
            "value": "Explosive"
          },
          {
            "name": "FLAMMABLE",
            "value": "Flammable"
          },
          {
            "name": "GAS",
            "value": "Gas"
          },
          {
            "name": "HARMFUL_TO_WATER",
            "value": "HarmfulToWater"
          },
          {
            "name": "ORGANIC",
            "value": "Organic"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POISON",
            "value": "Poison"
          },
          {
            "name": "POISONOUS_INHALATION",
            "value": "PoisonousInhalation"
          },
          {
            "name": "RADIOACTIVE",
            "value": "Radioactive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RoadSnapHazardousCargoTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoadSnapHazardousCargoType"
      },
      "traits": {
        "smithy.api#length": {
          "max": 11
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RoadSnapNotice": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.georoutes#RoadSnapNoticeCode",
          "traits": {
            "smithy.api#documentation": "<p>Code corresponding to the issue.</p>",
            "smithy.api#required": {}
          }
        },
        "Title": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The notice title.</p>",
            "smithy.api#required": {}
          }
        },
        "TracePointIndexes": {
          "target": "com.amazonaws.georoutes#RoadSnapTracePointIndexList",
          "traits": {
            "smithy.api#documentation": "<p>TracePoint indices for which the provided notice code corresponds to.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notices provide information around factors that may have influenced snapping in a manner\n         atypical to the standard use cases.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapNoticeCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "TRACE_POINTS_HEADING_IGNORED",
            "value": "TracePointsHeadingIgnored"
          },
          {
            "name": "TRACE_POINTS_IGNORED",
            "value": "TracePointsIgnored"
          },
          {
            "name": "TRACE_POINTS_MOVED_BY_LARGE_DISTANCE",
            "value": "TracePointsMovedByLargeDistance"
          },
          {
            "name": "TRACE_POINTS_NOT_MATCHED",
            "value": "TracePointsNotMatched"
          },
          {
            "name": "TRACE_POINTS_OUT_OF_SEQUENCE",
            "value": "TracePointsOutOfSequence"
          },
          {
            "name": "TRACE_POINTS_SPEED_ESTIMATED",
            "value": "TracePointsSpeedEstimated"
          },
          {
            "name": "TRACE_POINTS_SPEED_IGNORED",
            "value": "TracePointsSpeedIgnored"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RoadSnapNoticeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoadSnapNotice"
      }
    },
    "com.amazonaws.georoutes#RoadSnapSnappedGeometry": {
      "type": "structure",
      "members": {
        "LineString": {
          "target": "com.amazonaws.georoutes#LineString",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        },
        "Polyline": {
          "target": "com.amazonaws.georoutes#Polyline",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map in a lossy compression\n         format.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Interpolated geometry for the snapped route that is overlay-able onto a map.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapSnappedTracePoint": {
      "type": "structure",
      "members": {
        "Confidence": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Confidence value for the correctness of this point match.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 1
            },
            "smithy.api#required": {}
          }
        },
        "OriginalPosition": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position of the TracePoint provided within the request, at the same index.</p>",
            "smithy.api#required": {}
          }
        },
        "SnappedPosition": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Snapped position of the TracePoint provided within the request, at the same index.\n      </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>TracePoints snapped onto the road network.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapSnappedTracePointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoadSnapSnappedTracePoint"
      }
    },
    "com.amazonaws.georoutes#RoadSnapTracePoint": {
      "type": "structure",
      "members": {
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "Speed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Speed at the specified trace point .</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "Timestamp": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Timestamp of the event.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>TracePoint indices for which the provided notice code corresponds to.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapTracePointIndexList": {
      "type": "list",
      "member": {
        "target": "smithy.api#Integer"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.georoutes#RoadSnapTracePointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoadSnapTracePoint"
      }
    },
    "com.amazonaws.georoutes#RoadSnapTrailerOptions": {
      "type": "structure",
      "members": {
        "TrailerCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 255
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RoadSnapTravelModeOptions": {
      "type": "structure",
      "members": {
        "Truck": {
          "target": "com.amazonaws.georoutes#RoadSnapTruckOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\".</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
      }
    },
    "com.amazonaws.georoutes#RoadSnapTruckOptions": {
      "type": "structure",
      "members": {
        "GrossWeight": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Gross weight of the vehicle including trailers, and goods at capacity.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#RoadSnapHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargos contained in the vehicle.</p>"
          }
        },
        "Height": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "Length": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 30000
            }
          }
        },
        "Trailer": {
          "target": "com.amazonaws.georoutes#RoadSnapTrailerOptions",
          "traits": {
            "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>"
          }
        },
        "Width": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Width of the vehicle in centimenters.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\".</p>"
      }
    },
    "com.amazonaws.georoutes#RoundaboutAngle": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": -360,
          "max": 360
        }
      }
    },
    "com.amazonaws.georoutes#Route": {
      "type": "structure",
      "members": {
        "Legs": {
          "target": "com.amazonaws.georoutes#RouteLegList",
          "traits": {
            "smithy.api#documentation": "<p>A leg is a section of a route from one waypoint to the next. A leg could be of type\n         Vehicle, Pedestrian or Ferry. Legs of different types could occur together within a single\n         route. For example, a car employing the use of a Ferry will contain Vehicle legs\n         corresponding to journey on land, and Ferry legs corresponding to the journey via\n         Ferry.</p>",
            "smithy.api#required": {}
          }
        },
        "MajorRoadLabels": {
          "target": "com.amazonaws.georoutes#RouteMajorRoadLabelList",
          "traits": {
            "smithy.api#documentation": "<p>Important labels including names and route numbers that differentiate the current route\n         from the alternatives presented.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 2
            },
            "smithy.api#required": {}
          }
        },
        "Summary": {
          "target": "com.amazonaws.georoutes#RouteSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAllowOptions": {
      "type": "structure",
      "members": {
        "Hot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hot (High Occupancy Toll) lanes while calculating the route.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        },
        "Hov": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hov (High Occupancy vehicle) lanes while calculating the route.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Features that are allowed while calculating a route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceArea": {
      "type": "structure",
      "members": {
        "Except": {
          "target": "com.amazonaws.georoutes#RouteAvoidanceAreaGeometryList",
          "traits": {
            "smithy.api#documentation": "<p>Exceptions to the provided avoidance geometry, to be included while calculating the\n         route.</p>"
          }
        },
        "Geometry": {
          "target": "com.amazonaws.georoutes#RouteAvoidanceAreaGeometry",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Areas to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceAreaGeometry": {
      "type": "structure",
      "members": {
        "Corridor": {
          "target": "com.amazonaws.georoutes#Corridor",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a corridor - a LineString with a radius that defines the width of\n         the corridor.</p>"
          }
        },
        "BoundingBox": {
          "target": "com.amazonaws.georoutes#BoundingBox",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a bounding box. The first pair represents the X and Y coordinates\n         (longitude and latitude,) of the southwest corner of the bounding box; the second pair\n         represents the X and Y coordinates (longitude and latitude) of the northeast corner.</p>"
          }
        },
        "Polygon": {
          "target": "com.amazonaws.georoutes#LinearRings",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a polygon with only one linear ring.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        },
        "PolylineCorridor": {
          "target": "com.amazonaws.georoutes#PolylineCorridor",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as an encoded corridor - an encoded polyline with a radius that defines\n         the width of the corridor.</p>"
          }
        },
        "PolylinePolygon": {
          "target": "com.amazonaws.georoutes#PolylineRingList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Isoline PolylinePolygon, for each isoline PolylinePolygon, it contains\n         PolylinePolygon of the first linear ring (the outer ring) and from 2nd item to the last\n         item (the inner rings). For more information on polyline encoding, see <a href=\"https://github.com/heremaps/flexiblepolyline/blob/master/README.md\">https://github.com/heremaps/flexiblepolyline/blob/master/README.md</a>.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceAreaGeometryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteAvoidanceAreaGeometry"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceAreaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteAvoidanceArea"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceOptions": {
      "type": "structure",
      "members": {
        "Areas": {
          "target": "com.amazonaws.georoutes#RouteAvoidanceAreaList",
          "traits": {
            "smithy.api#documentation": "<p>Areas to be avoided.</p>"
          }
        },
        "CarShuttleTrains": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid car-shuttle-trains while calculating the route.</p>"
          }
        },
        "ControlledAccessHighways": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid controlled access highways while calculating the route.</p>"
          }
        },
        "DirtRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid dirt roads while calculating the route.</p>"
          }
        },
        "Ferries": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid ferries while calculating the route.</p>"
          }
        },
        "SeasonalClosure": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid roads that have seasonal closure while calculating the route.</p>"
          }
        },
        "TollRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TollTransponders": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TruckRoadTypes": {
          "target": "com.amazonaws.georoutes#TruckRoadTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>"
          }
        },
        "Tunnels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid tunnels while calculating the route.</p>"
          }
        },
        "UTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "ZoneCategories": {
          "target": "com.amazonaws.georoutes#RouteAvoidanceZoneCategoryList",
          "traits": {
            "smithy.api#documentation": "<p>Zone categories to be avoided.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies options for areas to avoid when calculating the route. This is a best-effort\n         avoidance setting, meaning the router will try to honor the avoidance preferences but may\n         still include restricted areas if no feasible alternative route exists. If avoidance\n         options are not followed, the response will indicate that the avoidance criteria were\n         violated.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceZoneCategory": {
      "type": "structure",
      "members": {
        "Category": {
          "target": "com.amazonaws.georoutes#RouteZoneCategory",
          "traits": {
            "smithy.api#documentation": "<p>Zone category to be avoided.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Zone categories to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteAvoidanceZoneCategoryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteAvoidanceZoneCategory"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        }
      }
    },
    "com.amazonaws.georoutes#RouteCarOptions": {
      "type": "structure",
      "members": {
        "EngineType": {
          "target": "com.amazonaws.georoutes#RouteEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed specified.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Car</code>.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteContinueHighwayStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the continue highway step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteContinueStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the continue step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteDestinationOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>",
            "smithy.api#range": {
              "max": 2000
            }
          }
        },
        "AvoidUTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#RouteMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        },
        "StopDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the stop.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to the destination.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteDirection": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "EAST",
            "value": "East"
          },
          {
            "name": "NORTH",
            "value": "North"
          },
          {
            "name": "SOUTH",
            "value": "South"
          },
          {
            "name": "WEST",
            "value": "West"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteDriverOptions": {
      "type": "structure",
      "members": {
        "Schedule": {
          "target": "com.amazonaws.georoutes#RouteDriverScheduleIntervalList",
          "traits": {
            "smithy.api#documentation": "<p>Driver work-rest schedule. Stops are added to fulfil the provided rest schedule.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Driver related options.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteDriverScheduleInterval": {
      "type": "structure",
      "members": {
        "DriveDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Maximum allowed driving time before stopping to rest.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "RestDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Resting time before the driver can continue driving.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Interval of the driver work-rest schedule. Stops are added to fulfil the provided rest\n         schedule.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteDriverScheduleIntervalList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteDriverScheduleInterval"
      }
    },
    "com.amazonaws.georoutes#RouteEmissionType": {
      "type": "structure",
      "members": {
        "Co2EmissionClass": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The CO 2 emission classes.</p>"
          }
        },
        "Type": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Type of the emission.</p>\n         <p>\n            <b>Valid values</b>: <code>Euro1, Euro2, Euro3, Euro4, Euro5,\n            Euro6, EuroEev</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Type of the emission.</p>\n         <p>\n            <b>Valid values</b>: <code>Euro1, Euro2, Euro3, Euro4, Euro5,\n            Euro6, EuroEev</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteEngineType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ELECTRIC",
            "value": "Electric"
          },
          {
            "name": "INTERNAL_COMBUSTION",
            "value": "InternalCombustion"
          },
          {
            "name": "PLUGIN_HYBRID",
            "value": "PluginHybrid"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteEnterHighwayStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the enter highway step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteExclusionOptions": {
      "type": "structure",
      "members": {
        "Countries": {
          "target": "com.amazonaws.georoutes#CountryCodeList",
          "traits": {
            "smithy.api#documentation": "<p>List of countries to be avoided defined by two-letter or three-letter country\n         codes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies strict exclusion options for the route calculation. This setting mandates that\n         the router will avoid any routes that include the specified options, rather than merely\n         attempting to minimize them.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteExitStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "RelativeExit": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Exit to be taken.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 12
            }
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the exit step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryAfterTravelStep": {
      "type": "structure",
      "members": {
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Instruction": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief description of the step in the requested language.</p>\n         <note>\n            <p>Only available when the TravelStepType is Default.</p>\n         </note>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteFerryAfterTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that must be performed after the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryAfterTravelStepList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteFerryAfterTravelStep"
      }
    },
    "com.amazonaws.georoutes#RouteFerryAfterTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DEBOARD",
            "value": "Deboard"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteFerryArrival": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RouteFerryPlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the arrival for the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryBeforeTravelStep": {
      "type": "structure",
      "members": {
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Instruction": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief description of the step in the requested language.</p>\n         <note>\n            <p>Only available when the TravelStepType is Default.</p>\n         </note>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteFerryBeforeTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that must be performed before the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryBeforeTravelStepList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteFerryBeforeTravelStep"
      }
    },
    "com.amazonaws.georoutes#RouteFerryBeforeTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "BOARD",
            "value": "Board"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteFerryDeparture": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RouteFerryPlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the departure for the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryLegDetails": {
      "type": "structure",
      "members": {
        "AfterTravelSteps": {
          "target": "com.amazonaws.georoutes#RouteFerryAfterTravelStepList",
          "traits": {
            "smithy.api#documentation": "<p>Steps of a leg that must be performed after the travel portion of the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Arrival": {
          "target": "com.amazonaws.georoutes#RouteFerryArrival",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the arrival for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "BeforeTravelSteps": {
          "target": "com.amazonaws.georoutes#RouteFerryBeforeTravelStepList",
          "traits": {
            "smithy.api#documentation": "<p>Steps of a leg that must be performed before the travel portion of the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Departure": {
          "target": "com.amazonaws.georoutes#RouteFerryDeparture",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the departure for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Notices": {
          "target": "com.amazonaws.georoutes#RouteFerryNoticeList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>",
            "smithy.api#required": {}
          }
        },
        "PassThroughWaypoints": {
          "target": "com.amazonaws.georoutes#RoutePassThroughWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>Waypoints that were passed through during the leg. This includes the waypoints that were\n         configured with the PassThrough option.</p>",
            "smithy.api#required": {}
          }
        },
        "RouteName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Route name of the ferry line.</p>"
          }
        },
        "Spans": {
          "target": "com.amazonaws.georoutes#RouteFerrySpanList",
          "traits": {
            "smithy.api#documentation": "<p>Spans that were computed for the requested SpanAdditionalFeatures.</p>",
            "smithy.api#required": {}
          }
        },
        "Summary": {
          "target": "com.amazonaws.georoutes#RouteFerrySummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
          }
        },
        "TravelSteps": {
          "target": "com.amazonaws.georoutes#RouteFerryTravelStepList",
          "traits": {
            "smithy.api#documentation": "<p>Steps of a leg that must be performed before the travel portion of the leg.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>FerryLegDetails is populated when the Leg type is Ferry, and provides additional\n         information that is specific</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryNotice": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.georoutes#RouteFerryNoticeCode",
          "traits": {
            "smithy.api#documentation": "<p>Code corresponding to the issue.</p>",
            "smithy.api#required": {}
          }
        },
        "Impact": {
          "target": "com.amazonaws.georoutes#RouteNoticeImpact",
          "traits": {
            "smithy.api#documentation": "<p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High\n         impact notices must be evaluated further to determine the impact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryNoticeCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCURATE_POLYLINE_UNAVAILABLE",
            "value": "AccuratePolylineUnavailable"
          },
          {
            "name": "NO_SCHEDULE",
            "value": "NoSchedule"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "VIOLATED_AVOID_FERRY",
            "value": "ViolatedAvoidFerry"
          },
          {
            "name": "VIOLATED_AVOID_RAIL_FERRY",
            "value": "ViolatedAvoidRailFerry"
          },
          {
            "name": "SEASONAL_CLOSURE",
            "value": "SeasonalClosure"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteFerryNoticeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteFerryNotice"
      }
    },
    "com.amazonaws.georoutes#RouteFerryOverviewSummary": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryPlace": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the place.</p>"
          }
        },
        "OriginalPosition": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position provided in the request.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "WaypointIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the waypoint in the request.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Position provided in the request.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerrySpan": {
      "type": "structure",
      "members": {
        "Country": {
          "target": "com.amazonaws.georoutes#CountryCode3",
          "traits": {
            "smithy.api#documentation": "<p>3 letter Country code corresponding to the Span.</p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this span.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Names": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Provides an array of names of the ferry span in available languages.</p>"
          }
        },
        "Region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>2-3 letter Region code corresponding to the Span. This is either a province or a\n         state.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 3
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Span computed for the requested SpanAdditionalFeatures.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerrySpanList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteFerrySpan"
      }
    },
    "com.amazonaws.georoutes#RouteFerrySummary": {
      "type": "structure",
      "members": {
        "Overview": {
          "target": "com.amazonaws.georoutes#RouteFerryOverviewSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including before travel, travel and after travel\n         steps.</p>"
          }
        },
        "TravelOnly": {
          "target": "com.amazonaws.georoutes#RouteFerryTravelOnlySummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is in meters</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is the same as the Distance within the Overview summary.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryTravelOnlySummary": {
      "type": "structure",
      "members": {
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Total duration in free flowing traffic, which is the best case or shortest duration\n         possible to cover the leg.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is the same as the Distance within the Overview summary.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryTravelStep": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this step.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Instruction": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief description of the step in the requested language.</p>\n         <note>\n            <p>Only available when the TravelStepType is Default.</p>\n         </note>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteFerryTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that must be performed during the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteFerryTravelStepList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteFerryTravelStep"
      }
    },
    "com.amazonaws.georoutes#RouteFerryTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DEPART",
            "value": "Depart"
          },
          {
            "name": "CONTINUE",
            "value": "Continue"
          },
          {
            "name": "ARRIVE",
            "value": "Arrive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteHazardousCargoType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "COMBUSTIBLE",
            "value": "Combustible"
          },
          {
            "name": "CORROSIVE",
            "value": "Corrosive"
          },
          {
            "name": "EXPLOSIVE",
            "value": "Explosive"
          },
          {
            "name": "FLAMMABLE",
            "value": "Flammable"
          },
          {
            "name": "GAS",
            "value": "Gas"
          },
          {
            "name": "HARMFUL_TO_WATER",
            "value": "HarmfulToWater"
          },
          {
            "name": "ORGANIC",
            "value": "Organic"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POISON",
            "value": "Poison"
          },
          {
            "name": "POISONOUS_INHALATION",
            "value": "PoisonousInhalation"
          },
          {
            "name": "RADIOACTIVE",
            "value": "Radioactive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteHazardousCargoTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteHazardousCargoType"
      },
      "traits": {
        "smithy.api#length": {
          "max": 11
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteKeepStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details that are specific to a Keep step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteLeg": {
      "type": "structure",
      "members": {
        "FerryLegDetails": {
          "target": "com.amazonaws.georoutes#RouteFerryLegDetails",
          "traits": {
            "smithy.api#documentation": "<p>FerryLegDetails is populated when the Leg type is Ferry, and provides additional\n         information that is specific</p>"
          }
        },
        "Geometry": {
          "target": "com.amazonaws.georoutes#RouteLegGeometry",
          "traits": {
            "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>",
            "smithy.api#required": {}
          }
        },
        "Language": {
          "target": "com.amazonaws.georoutes#LanguageTag",
          "traits": {
            "smithy.api#documentation": "<p>List of languages for instructions within steps in the response.</p>"
          }
        },
        "PedestrianLegDetails": {
          "target": "com.amazonaws.georoutes#RoutePedestrianLegDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details related to the pedestrian leg.</p>"
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#RouteLegTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <p>Default Value: <code>Car</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteLegType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "VehicleLegDetails": {
          "target": "com.amazonaws.georoutes#RouteVehicleLegDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details related to the vehicle leg.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A leg is a section of a route from one waypoint to the next. A leg could be of type\n         Vehicle, Pedestrian or Ferry. Legs of different types could occur together within a single\n         route. For example, a car employing the use of a Ferry will contain Vehicle legs\n         corresponding to journey on land, and Ferry legs corresponding to the journey via\n         Ferry.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteLegAdditionalFeature": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ELEVATION",
            "value": "Elevation"
          },
          {
            "name": "INCIDENTS",
            "value": "Incidents"
          },
          {
            "name": "PASS_THROUGH_WAYPOINTS",
            "value": "PassThroughWaypoints"
          },
          {
            "name": "SUMMARY",
            "value": "Summary"
          },
          {
            "name": "TOLLS",
            "value": "Tolls"
          },
          {
            "name": "TRAVEL_STEP_INSTRUCTIONS",
            "value": "TravelStepInstructions"
          },
          {
            "name": "TRUCK_ROAD_TYPES",
            "value": "TruckRoadTypes"
          },
          {
            "name": "TYPICAL_DURATION",
            "value": "TypicalDuration"
          },
          {
            "name": "ZONES",
            "value": "Zones"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteLegAdditionalFeatureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteLegAdditionalFeature"
      },
      "traits": {
        "smithy.api#length": {
          "max": 9
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteLegGeometry": {
      "type": "structure",
      "members": {
        "LineString": {
          "target": "com.amazonaws.georoutes#LineString",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        },
        "Polyline": {
          "target": "com.amazonaws.georoutes#Polyline",
          "traits": {
            "smithy.api#documentation": "<p>An ordered list of positions used to plot a route on a map in a lossy compression\n         format.</p>\n         <note>\n            <p>LineString and Polyline are mutually exclusive properties.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The returned Route leg geometry.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteLegList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteLeg"
      }
    },
    "com.amazonaws.georoutes#RouteLegTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "FERRY",
            "value": "Ferry"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          },
          {
            "name": "CAR_SHUTTLE_TRAIN",
            "value": "CarShuttleTrain"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteLegType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "FERRY",
            "value": "Ferry"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "VEHICLE",
            "value": "Vehicle"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#Route"
      }
    },
    "com.amazonaws.georoutes#RouteMajorRoadLabel": {
      "type": "structure",
      "members": {
        "RoadName": {
          "target": "com.amazonaws.georoutes#LocalizedString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the road (localized).</p>"
          }
        },
        "RouteNumber": {
          "target": "com.amazonaws.georoutes#RouteNumber",
          "traits": {
            "smithy.api#documentation": "<p>Route number of the road.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Important labels including names and route numbers that differentiate the current route\n         from the alternatives presented.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMajorRoadLabelList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMajorRoadLabel"
      }
    },
    "com.amazonaws.georoutes#RouteMatchingOptions": {
      "type": "structure",
      "members": {
        "NameHint": {
          "target": "com.amazonaws.georoutes#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>Attempts to match the provided position to a road similar to the provided name.</p>",
            "smithy.api#length": {
              "max": 100
            }
          }
        },
        "OnRoadThreshold": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>If the distance to a highway/bridge/tunnel/sliproad is within threshold, the waypoint\n         will be snapped to the highway/bridge/tunnel/sliproad.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>"
          }
        },
        "Radius": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Considers all roads within the provided radius to match the provided destination to. The\n         roads that are considered are determined by the provided Strategy.</p>\n         <p>\n            <b>Unit</b>: <code>Meters</code>\n         </p>"
          }
        },
        "Strategy": {
          "target": "com.amazonaws.georoutes#MatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines matching of the position onto the road network. MatchAny considers\n         all roads possible, whereas MatchMostSignificantRoad matches to the most significant\n         road.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to route matching.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrix": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixRow"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAllowOptions": {
      "type": "structure",
      "members": {
        "Hot": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hot (High Occupancy Toll) lanes while calculating the route.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        },
        "Hov": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Allow Hov (High Occupancy vehicle) lanes while calculating the route.</p>\n         <p>Default value: <code>false</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Allow Options related to the route matrix.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAutoCircle": {
      "type": "structure",
      "members": {
        "Margin": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The margin provided for the calculation.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 200000
            }
          }
        },
        "MaxRadius": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum size of the radius provided for the calculation.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 200000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides the circle that was used while calculating the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceArea": {
      "type": "structure",
      "members": {
        "Geometry": {
          "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceAreaGeometry",
          "traits": {
            "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceAreaGeometry": {
      "type": "structure",
      "members": {
        "BoundingBox": {
          "target": "com.amazonaws.georoutes#BoundingBox",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a bounding box. The first pair represents the X and Y coordinates\n         (longitude and latitude,) of the southwest corner of the bounding box; the second pair\n         represents the X and Y coordinates (longitude and latitude) of the northeast corner.</p>"
          }
        },
        "Polygon": {
          "target": "com.amazonaws.georoutes#LinearRings",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a polygon with only one linear ring.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        },
        "PolylinePolygon": {
          "target": "com.amazonaws.georoutes#PolylineRingList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Isoline PolylinePolygon, for each isoline PolylinePolygon, it contains\n         PolylinePolygon of the first linear ring (the outer ring) and from second item to the last\n         item (the inner rings). For more information on polyline encoding, see <a href=\"https://github.com/heremaps/flexiblepolyline/blob/master/README.md\">https://github.com/heremaps/flexiblepolyline/blob/master/README.md</a>.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceAreaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceArea"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceOptions": {
      "type": "structure",
      "members": {
        "Areas": {
          "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceAreaList",
          "traits": {
            "smithy.api#documentation": "<p>Areas to be avoided.</p>",
            "smithy.api#length": {
              "max": 250
            }
          }
        },
        "CarShuttleTrains": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid car-shuttle-trains while calculating the route.</p>"
          }
        },
        "ControlledAccessHighways": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid controlled access highways while calculating the route.</p>"
          }
        },
        "DirtRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid dirt roads while calculating the route.</p>"
          }
        },
        "Ferries": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid ferries while calculating the route.</p>"
          }
        },
        "TollRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TollTransponders": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "TruckRoadTypes": {
          "target": "com.amazonaws.georoutes#TruckRoadTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>"
          }
        },
        "Tunnels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid tunnels while calculating the route.</p>"
          }
        },
        "UTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "ZoneCategories": {
          "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceZoneCategoryList",
          "traits": {
            "smithy.api#documentation": "<p>Zone categories to be avoided.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies options for areas to avoid when calculating the route. This is a best-effort\n         avoidance setting, meaning the router will try to honor the avoidance preferences but may\n         still include restricted areas if no feasible alternative route exists. If avoidance\n         options are not followed, the response will indicate that the avoidance criteria were\n         violated.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceZoneCategory": {
      "type": "structure",
      "members": {
        "Category": {
          "target": "com.amazonaws.georoutes#RouteMatrixZoneCategory",
          "traits": {
            "smithy.api#documentation": "<p>Zone category to be avoided.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Zone categories to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixAvoidanceZoneCategoryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixAvoidanceZoneCategory"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteMatrixBoundary": {
      "type": "structure",
      "members": {
        "Geometry": {
          "target": "com.amazonaws.georoutes#RouteMatrixBoundaryGeometry",
          "traits": {
            "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>"
          }
        },
        "Unbounded": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>No restrictions in terms of a routing boundary, and is typically used for longer\n         routes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Boundary within which the matrix is to be calculated. All data, origins and destinations\n         outside the boundary are considered invalid.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixBoundaryGeometry": {
      "type": "structure",
      "members": {
        "AutoCircle": {
          "target": "com.amazonaws.georoutes#RouteMatrixAutoCircle",
          "traits": {
            "smithy.api#documentation": "<p>Provides the circle that was used while calculating the route.</p>"
          }
        },
        "Circle": {
          "target": "com.amazonaws.georoutes#Circle",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a circle. When request routing boundary was set as\n            <code>AutoCircle</code>, the response routing boundary will return <code>Circle</code>\n         derived from the <code>AutoCircle</code> settings.</p>"
          }
        },
        "BoundingBox": {
          "target": "com.amazonaws.georoutes#BoundingBox",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a bounding box. The first pair represents the X and Y coordinates\n         (longitude and latitude,) of the southwest corner of the bounding box; the second pair\n         represents the X and Y coordinates (longitude and latitude) of the northeast corner.</p>"
          }
        },
        "Polygon": {
          "target": "com.amazonaws.georoutes#LinearRings",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a polygon with only one linear ring.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the routing boundary.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixCarOptions": {
      "type": "structure",
      "members": {
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteMatrixVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Car</code>.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixDestination": {
      "type": "structure",
      "members": {
        "Options": {
          "target": "com.amazonaws.georoutes#RouteMatrixDestinationOptions",
          "traits": {
            "smithy.api#documentation": "<p>Destination related options.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The route destination.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixDestinationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixDestination"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixDestinationOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#RouteMatrixMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteMatrixSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to the destination.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixEntry": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The total distance of travel for the route.</p>",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The expected duration of travel for the route.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Error": {
          "target": "com.amazonaws.georoutes#RouteMatrixErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>Error code that occurred during calculation of the route.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The calculated route matrix containing the results for all pairs of Origins to\n         Destination positions. Each row corresponds to one entry in Origins. Each entry in the row\n         corresponds to the route from that entry in Origins to an entry in Destination\n         positions.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "NO_MATCH",
            "value": "NoMatch"
          },
          {
            "name": "NO_MATCH_DESTINATION",
            "value": "NoMatchDestination"
          },
          {
            "name": "NO_MATCH_ORIGIN",
            "value": "NoMatchOrigin"
          },
          {
            "name": "NO_ROUTE",
            "value": "NoRoute"
          },
          {
            "name": "OUT_OF_BOUNDS",
            "value": "OutOfBounds"
          },
          {
            "name": "OUT_OF_BOUNDS_DESTINATION",
            "value": "OutOfBoundsDestination"
          },
          {
            "name": "OUT_OF_BOUNDS_ORIGIN",
            "value": "OutOfBoundsOrigin"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "VIOLATION",
            "value": "Violation"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteMatrixExclusionOptions": {
      "type": "structure",
      "members": {
        "Countries": {
          "target": "com.amazonaws.georoutes#CountryCodeList",
          "traits": {
            "smithy.api#documentation": "<p>List of countries to be avoided defined by two-letter or three-letter country\n         codes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies strict exclusion options for the route calculation. This setting mandates that\n         the router will avoid any routes that include the specified options, rather than merely\n         attempting to minimize them.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixHazardousCargoType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "COMBUSTIBLE",
            "value": "Combustible"
          },
          {
            "name": "CORROSIVE",
            "value": "Corrosive"
          },
          {
            "name": "EXPLOSIVE",
            "value": "Explosive"
          },
          {
            "name": "FLAMMABLE",
            "value": "Flammable"
          },
          {
            "name": "GAS",
            "value": "Gas"
          },
          {
            "name": "HARMFUL_TO_WATER",
            "value": "HarmfulToWater"
          },
          {
            "name": "ORGANIC",
            "value": "Organic"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POISON",
            "value": "Poison"
          },
          {
            "name": "POISONOUS_INHALATION",
            "value": "PoisonousInhalation"
          },
          {
            "name": "RADIOACTIVE",
            "value": "Radioactive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteMatrixHazardousCargoTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixHazardousCargoType"
      },
      "traits": {
        "smithy.api#length": {
          "max": 11
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteMatrixMatchingOptions": {
      "type": "structure",
      "members": {
        "NameHint": {
          "target": "com.amazonaws.georoutes#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>Attempts to match the provided position to a road similar to the provided name.</p>"
          }
        },
        "OnRoadThreshold": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>If the distance to a highway/bridge/tunnel/sliproad is within threshold, the waypoint\n         will be snapped to the highway/bridge/tunnel/sliproad.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Radius": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Considers all roads within the provided radius to match the provided destination to. The\n         roads that are considered are determined by the provided Strategy.</p>\n         <p>\n            <b>Unit</b>: <code>Meters</code>\n         </p>"
          }
        },
        "Strategy": {
          "target": "com.amazonaws.georoutes#MatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines matching of the position onto the road network. MatchAny considers\n         all roads possible, whereas MatchMostSignificantRoad matches to the most significant\n         road.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Matching options.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixOrigin": {
      "type": "structure",
      "members": {
        "Options": {
          "target": "com.amazonaws.georoutes#RouteMatrixOriginOptions",
          "traits": {
            "smithy.api#documentation": "<p>Origin related options.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The start position for the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixOriginList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixOrigin"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixOriginOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#RouteMatrixMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteMatrixSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Origin related options.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixRow": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteMatrixEntry"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixScooterOptions": {
      "type": "structure",
      "members": {
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteMatrixVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixSideOfStreetOptions": {
      "type": "structure",
      "members": {
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "UseWith": {
          "target": "com.amazonaws.georoutes#SideOfStreetMatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines when the side of street position should be used. AnyStreet will\n         always use the provided position.</p>\n         <p>Default Value: <code>DividedStreetOnly</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTrafficOptions": {
      "type": "structure",
      "members": {
        "FlowEventThresholdOverride": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration for which flow traffic is considered valid. For this period, the flow traffic\n         is used over historical traffic data. Flow traffic refers to congestion, which changes very\n         quickly. Duration in seconds for which flow traffic event would be considered valid. While\n         flow traffic event is valid it will be used over the historical traffic data. </p>"
          }
        },
        "Usage": {
          "target": "com.amazonaws.georoutes#TrafficUsage",
          "traits": {
            "smithy.api#documentation": "<p>Determines if traffic should be used or ignored while calculating the route.</p>\n         <p>Default Value: <code>UseTrafficData</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Traffic related options.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTrailerOptions": {
      "type": "structure",
      "members": {
        "TrailerCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 255
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTravelModeOptions": {
      "type": "structure",
      "members": {
        "Car": {
          "target": "com.amazonaws.georoutes#RouteMatrixCarOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Car\"</p>"
          }
        },
        "Scooter": {
          "target": "com.amazonaws.georoutes#RouteMatrixScooterOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>\n         <note>\n            <p>When travel mode is set to <code>Scooter</code>, then the avoidance option\n               <code>ControlledAccessHighways</code> defaults to <code>true</code>.</p>\n         </note>"
          }
        },
        "Truck": {
          "target": "com.amazonaws.georoutes#RouteMatrixTruckOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTruckOptions": {
      "type": "structure",
      "members": {
        "AxleCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>",
            "smithy.api#range": {
              "min": 2,
              "max": 255
            }
          }
        },
        "GrossWeight": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Gross weight of the vehicle including trailers, and goods at capacity.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#RouteMatrixHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargo contained in the vehicle.</p>"
          }
        },
        "Height": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "KpraLength": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Kingpin to rear axle length of the vehicle</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>"
          }
        },
        "Length": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 30000
            }
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteMatrixVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "PayloadCapacity": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Payload capacity of the vehicle and trailers attached.</p>\n         <p>\n            <b>Unit</b>: <code>kilograms</code>\n         </p>"
          }
        },
        "Trailer": {
          "target": "com.amazonaws.georoutes#RouteMatrixTrailerOptions",
          "traits": {
            "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
          }
        },
        "TruckType": {
          "target": "com.amazonaws.georoutes#RouteMatrixTruckType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the truck.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>"
          }
        },
        "WeightPerAxle": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Heaviest weight per axle irrespective of the axle type or the axle group. Meant for\n         usage in countries where the differences in axle types or axle groups are not\n         distinguished.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "WeightPerAxleGroup": {
          "target": "com.amazonaws.georoutes#WeightPerAxleGroup",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the total weight for the specified axle group. Meant for usage in countries\n         that have different regulations based on the axle group type.</p>"
          }
        },
        "Width": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Width of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixTruckType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "LIGHT_TRUCK",
            "value": "LightTruck"
          },
          {
            "name": "STRAIGHT_TRUCK",
            "value": "StraightTruck"
          },
          {
            "name": "TRACTOR",
            "value": "Tractor"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteMatrixVehicleLicensePlate": {
      "type": "structure",
      "members": {
        "LastCharacter": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The last character of the License Plate.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteMatrixZoneCategory": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CONGESTION_PRICING",
            "value": "CongestionPricing"
          },
          {
            "name": "ENVIRONMENTAL",
            "value": "Environmental"
          },
          {
            "name": "VIGNETTE",
            "value": "Vignette"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteNoticeDetailRange": {
      "type": "structure",
      "members": {
        "Min": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Minimum value for the range.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Max": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum value for the range.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notice Detail that is a range.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteNoticeImpact": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "HIGH",
            "value": "High"
          },
          {
            "name": "LOW",
            "value": "Low"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteNumber": {
      "type": "structure",
      "members": {
        "Direction": {
          "target": "com.amazonaws.georoutes#RouteDirection",
          "traits": {
            "smithy.api#documentation": "<p>Directional identifier of the route.</p>"
          }
        },
        "Language": {
          "target": "com.amazonaws.georoutes#LanguageTag",
          "traits": {
            "smithy.api#documentation": "<p>List of languages for instructions corresponding to the route number.</p>"
          }
        },
        "Value": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The route number.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The route number.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteNumberList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteNumber"
      }
    },
    "com.amazonaws.georoutes#RouteOriginOptions": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>",
            "smithy.api#range": {
              "max": 2000
            }
          }
        },
        "AvoidUTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#RouteMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Origin related options.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePassThroughPlace": {
      "type": "structure",
      "members": {
        "OriginalPosition": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position provided in the request.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "WaypointIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the waypoint in the request.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The place where the waypoint is passed through and not treated as a stop.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePassThroughWaypoint": {
      "type": "structure",
      "members": {
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this step.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Place": {
          "target": "com.amazonaws.georoutes#RoutePassThroughPlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>If the waypoint should be treated as a stop. If yes, the route is split up into\n         different legs around the stop.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePassThroughWaypointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoutePassThroughWaypoint"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianArrival": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RoutePedestrianPlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the arrival for a leg.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianDeparture": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RoutePedestrianPlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the departure for a leg.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianLegDetails": {
      "type": "structure",
      "members": {
        "Arrival": {
          "target": "com.amazonaws.georoutes#RoutePedestrianArrival",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the arrival for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Departure": {
          "target": "com.amazonaws.georoutes#RoutePedestrianDeparture",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the departure for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Notices": {
          "target": "com.amazonaws.georoutes#RoutePedestrianNoticeList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>",
            "smithy.api#required": {}
          }
        },
        "PassThroughWaypoints": {
          "target": "com.amazonaws.georoutes#RoutePassThroughWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>Waypoints that were passed through during the leg. This includes the waypoints that were\n         configured with the PassThrough option.</p>",
            "smithy.api#required": {}
          }
        },
        "Spans": {
          "target": "com.amazonaws.georoutes#RoutePedestrianSpanList",
          "traits": {
            "smithy.api#documentation": "<p>Spans that were computed for the requested SpanAdditionalFeatures.</p>",
            "smithy.api#required": {}
          }
        },
        "Summary": {
          "target": "com.amazonaws.georoutes#RoutePedestrianSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
          }
        },
        "TravelSteps": {
          "target": "com.amazonaws.georoutes#RoutePedestrianTravelStepList",
          "traits": {
            "smithy.api#documentation": "<p>Steps of a leg that must be performed before the travel portion of the leg.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details that are specific to a pedestrian leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianNotice": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.georoutes#RoutePedestrianNoticeCode",
          "traits": {
            "smithy.api#documentation": "<p>Code corresponding to the issue.</p>",
            "smithy.api#required": {}
          }
        },
        "Impact": {
          "target": "com.amazonaws.georoutes#RouteNoticeImpact",
          "traits": {
            "smithy.api#documentation": "<p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High\n         impact notices must be evaluated further to determine the impact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianNoticeCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCURATE_POLYLINE_UNAVAILABLE",
            "value": "AccuratePolylineUnavailable"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "VIOLATED_AVOID_DIRT_ROAD",
            "value": "ViolatedAvoidDirtRoad"
          },
          {
            "name": "VIOLATED_AVOID_TUNNEL",
            "value": "ViolatedAvoidTunnel"
          },
          {
            "name": "VIOLATED_PEDESTRIAN_OPTION",
            "value": "ViolatedPedestrianOption"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianNoticeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoutePedestrianNotice"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianOptions": {
      "type": "structure",
      "members": {
        "Speed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Walking speed in Kilometers per hour.</p>",
            "smithy.api#range": {
              "min": 1.8,
              "max": 7.2
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to the pedestrian.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianOverviewSummary": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides a summary of a pedestrian route step.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianPlace": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the place.</p>"
          }
        },
        "OriginalPosition": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position provided in the request.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteSideOfStreet",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        },
        "WaypointIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the waypoint in the request.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Place details corresponding to the arrival or departure.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianSpan": {
      "type": "structure",
      "members": {
        "BestCaseDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span without traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Country": {
          "target": "com.amazonaws.georoutes#CountryCode3",
          "traits": {
            "smithy.api#documentation": "<p>3 letter Country code corresponding to the Span.</p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "DynamicSpeed": {
          "target": "com.amazonaws.georoutes#RouteSpanDynamicSpeedDetails",
          "traits": {
            "smithy.api#documentation": "<p>Dynamic speed details corresponding to the span.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "FunctionalClassification": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Functional classification of the road segment corresponding to the span.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 5
            }
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this span.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Incidents": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Incidents corresponding to the span. These index into the Incidents in the parent\n         Leg.</p>"
          }
        },
        "Names": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Provides an array of names of the pedestrian span in available languages.</p>"
          }
        },
        "PedestrianAccess": {
          "target": "com.amazonaws.georoutes#RouteSpanPedestrianAccessAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Access attributes for a pedestrian corresponding to the span.</p>"
          }
        },
        "Region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>2-3 letter Region code corresponding to the Span. This is either a province or a\n         state.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 3
            }
          }
        },
        "RoadAttributes": {
          "target": "com.amazonaws.georoutes#RouteSpanRoadAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Attributes for the road segment corresponding to the span. </p>"
          }
        },
        "RouteNumbers": {
          "target": "com.amazonaws.georoutes#RouteNumberList",
          "traits": {
            "smithy.api#documentation": "<p>Designated route name or number corresponding to the span.</p>"
          }
        },
        "SpeedLimit": {
          "target": "com.amazonaws.georoutes#RouteSpanSpeedLimitDetails",
          "traits": {
            "smithy.api#documentation": "<p>Speed limit details corresponding to the span.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "TypicalDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span under typical traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Span computed for the requested SpanAdditionalFeatures.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianSpanList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoutePedestrianSpan"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianSummary": {
      "type": "structure",
      "members": {
        "Overview": {
          "target": "com.amazonaws.georoutes#RoutePedestrianOverviewSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including before travel, travel and after travel\n         steps.</p>"
          }
        },
        "TravelOnly": {
          "target": "com.amazonaws.georoutes#RoutePedestrianTravelOnlySummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is in meters</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details for the leg including before travel, travel and after travel\n         steps.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianTravelOnlySummary": {
      "type": "structure",
      "members": {
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details for the leg including travel steps.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianTravelStep": {
      "type": "structure",
      "members": {
        "ContinueStepDetails": {
          "target": "com.amazonaws.georoutes#RouteContinueStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details related to the continue step.</p>"
          }
        },
        "CurrentRoad": {
          "target": "com.amazonaws.georoutes#RouteRoad",
          "traits": {
            "smithy.api#documentation": "<p>Details of the current road. See RouteRoad for details of sub-attributes.</p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "ExitNumber": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Exit number of the road exit, if applicable.</p>"
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this step.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Instruction": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief description of the step in the requested language.</p>\n         <note>\n            <p>Only available when the TravelStepType is Default.</p>\n         </note>"
          }
        },
        "KeepStepDetails": {
          "target": "com.amazonaws.georoutes#RouteKeepStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Keep step.</p>"
          }
        },
        "NextRoad": {
          "target": "com.amazonaws.georoutes#RouteRoad",
          "traits": {
            "smithy.api#documentation": "<p>Details of the next road. See RouteRoad for details of sub-attributes.</p>"
          }
        },
        "RoundaboutEnterStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutEnterStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Enter step.</p>"
          }
        },
        "RoundaboutExitStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutExitStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Exit step.</p>"
          }
        },
        "RoundaboutPassStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutPassStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Pass step.</p>"
          }
        },
        "Signpost": {
          "target": "com.amazonaws.georoutes#RouteSignpost",
          "traits": {
            "smithy.api#documentation": "<p>Sign post information of the action, applicable only for TurnByTurn steps. See\n         RouteSignpost for details of sub-attributes.</p>"
          }
        },
        "TurnStepDetails": {
          "target": "com.amazonaws.georoutes#RouteTurnStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a turn step.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RoutePedestrianTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the step.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that must be performed during the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianTravelStepList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RoutePedestrianTravelStep"
      }
    },
    "com.amazonaws.georoutes#RoutePedestrianTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ARRIVE",
            "value": "Arrive"
          },
          {
            "name": "CONTINUE",
            "value": "Continue"
          },
          {
            "name": "DEPART",
            "value": "Depart"
          },
          {
            "name": "KEEP",
            "value": "Keep"
          },
          {
            "name": "ROUNDABOUT_ENTER",
            "value": "RoundaboutEnter"
          },
          {
            "name": "ROUNDABOUT_EXIT",
            "value": "RoundaboutExit"
          },
          {
            "name": "ROUNDABOUT_PASS",
            "value": "RoundaboutPass"
          },
          {
            "name": "TURN",
            "value": "Turn"
          },
          {
            "name": "EXIT",
            "value": "Exit"
          },
          {
            "name": "RAMP",
            "value": "Ramp"
          },
          {
            "name": "U_TURN",
            "value": "UTurn"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteRampStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details that are specific to a ramp step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteResponseNotice": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.georoutes#RouteResponseNoticeCode",
          "traits": {
            "smithy.api#documentation": "<p>Code corresponding to the issue.</p>",
            "smithy.api#required": {}
          }
        },
        "Impact": {
          "target": "com.amazonaws.georoutes#RouteNoticeImpact",
          "traits": {
            "smithy.api#documentation": "<p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High\n         impact notices must be evaluated further to determine the impact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteResponseNoticeCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "MAIN_LANGUAGE_NOT_FOUND",
            "value": "MainLanguageNotFound"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "TRAVEL_TIME_EXCEEDS_DRIVER_WORK_HOURS",
            "value": "TravelTimeExceedsDriverWorkHours"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteResponseNoticeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteResponseNotice"
      }
    },
    "com.amazonaws.georoutes#RouteRoad": {
      "type": "structure",
      "members": {
        "RoadName": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the road (localized).</p>",
            "smithy.api#required": {}
          }
        },
        "RouteNumber": {
          "target": "com.amazonaws.georoutes#RouteNumberList",
          "traits": {
            "smithy.api#documentation": "<p>Route number of the road.</p>",
            "smithy.api#required": {}
          }
        },
        "Towards": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Names of destinations that can be reached when traveling on the road.</p>",
            "smithy.api#required": {}
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteRoadType",
          "traits": {
            "smithy.api#documentation": "<p>The type of road.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The road on the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteRoadType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "HIGHWAY",
            "value": "Highway"
          },
          {
            "name": "RURAL",
            "value": "Rural"
          },
          {
            "name": "URBAN",
            "value": "Urban"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteRoundaboutEnterStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the roundabout leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteRoundaboutExitStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "RelativeExit": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Exit to be taken.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 12
            }
          }
        },
        "RoundaboutAngle": {
          "target": "com.amazonaws.georoutes#RoundaboutAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the roundabout.</p>"
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the roundabout step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteRoundaboutPassStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteScooterOptions": {
      "type": "structure",
      "members": {
        "EngineType": {
          "target": "com.amazonaws.georoutes#RouteEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteSideOfStreet": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "LEFT",
            "value": "Left"
          },
          {
            "name": "RIGHT",
            "value": "Right"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSideOfStreetOptions": {
      "type": "structure",
      "members": {
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "UseWith": {
          "target": "com.amazonaws.georoutes#SideOfStreetMatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines when the side of street position should be used.</p>\n         <p>Default Value: <code>DividedStreetOnly</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteSignpost": {
      "type": "structure",
      "members": {
        "Labels": {
          "target": "com.amazonaws.georoutes#RouteSignpostLabelList",
          "traits": {
            "smithy.api#documentation": "<p>Labels present on the sign post.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Sign post information of the action, applicable only for TurnByTurn steps. See\n         RouteSignpost for details of sub-attributes.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteSignpostLabel": {
      "type": "structure",
      "members": {
        "RouteNumber": {
          "target": "com.amazonaws.georoutes#RouteNumber",
          "traits": {
            "smithy.api#documentation": "<p>Route number of the road.</p>"
          }
        },
        "Text": {
          "target": "com.amazonaws.georoutes#LocalizedString",
          "traits": {
            "smithy.api#documentation": "<p>The Signpost text.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Labels presented on the sign post.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteSignpostLabelList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSignpostLabel"
      }
    },
    "com.amazonaws.georoutes#RouteSpanAdditionalFeature": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "BEST_CASE_DURATION",
            "value": "BestCaseDuration"
          },
          {
            "name": "CAR_ACCESS",
            "value": "CarAccess"
          },
          {
            "name": "COUNTRY",
            "value": "Country"
          },
          {
            "name": "DISTANCE",
            "value": "Distance"
          },
          {
            "name": "DURATION",
            "value": "Duration"
          },
          {
            "name": "DYNAMIC_SPEED",
            "value": "DynamicSpeed"
          },
          {
            "name": "FUNCTIONAL_CLASSIFICATION",
            "value": "FunctionalClassification"
          },
          {
            "name": "GATES",
            "value": "Gates"
          },
          {
            "name": "INCIDENTS",
            "value": "Incidents"
          },
          {
            "name": "NAMES",
            "value": "Names"
          },
          {
            "name": "NOTICES",
            "value": "Notices"
          },
          {
            "name": "PEDESTRIAN_ACCESS",
            "value": "PedestrianAccess"
          },
          {
            "name": "RAILWAY_CROSSINGS",
            "value": "RailwayCrossings"
          },
          {
            "name": "REGION",
            "value": "Region"
          },
          {
            "name": "ROAD_ATTRIBUTES",
            "value": "RoadAttributes"
          },
          {
            "name": "ROUTE_NUMBERS",
            "value": "RouteNumbers"
          },
          {
            "name": "SCOOTER_ACCESS",
            "value": "ScooterAccess"
          },
          {
            "name": "SPEED_LIMIT",
            "value": "SpeedLimit"
          },
          {
            "name": "TOLL_SYSTEMS",
            "value": "TollSystems"
          },
          {
            "name": "TRUCK_ACCESS",
            "value": "TruckAccess"
          },
          {
            "name": "TRUCK_ROAD_TYPES",
            "value": "TruckRoadTypes"
          },
          {
            "name": "TYPICAL_DURATION",
            "value": "TypicalDuration"
          },
          {
            "name": "ZONES",
            "value": "Zones"
          },
          {
            "name": "CONSUMPTION",
            "value": "Consumption"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanAdditionalFeatureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanAdditionalFeature"
      },
      "traits": {
        "smithy.api#length": {
          "max": 24
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSpanCarAccessAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ALLOWED",
            "value": "Allowed"
          },
          {
            "name": "NO_THROUGH_TRAFFIC",
            "value": "NoThroughTraffic"
          },
          {
            "name": "TOLL_ROAD",
            "value": "TollRoad"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanCarAccessAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanCarAccessAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSpanDynamicSpeedDetails": {
      "type": "structure",
      "members": {
        "BestCaseSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Estimated speed while traversing the span without traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "TurnDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Estimated time to turn from this span into the next. </p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "TypicalSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Estimated speed while traversing the span under typical traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the dynamic speed.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteSpanGateAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "EMERGENCY",
            "value": "Emergency"
          },
          {
            "name": "KEY_ACCESS",
            "value": "KeyAccess"
          },
          {
            "name": "PERMISSION_REQUIRED",
            "value": "PermissionRequired"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanPedestrianAccessAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ALLOWED",
            "value": "Allowed"
          },
          {
            "name": "INDOORS",
            "value": "Indoors"
          },
          {
            "name": "NO_THROUGH_TRAFFIC",
            "value": "NoThroughTraffic"
          },
          {
            "name": "PARK",
            "value": "Park"
          },
          {
            "name": "STAIRS",
            "value": "Stairs"
          },
          {
            "name": "TOLL_ROAD",
            "value": "TollRoad"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanPedestrianAccessAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanPedestrianAccessAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "max": 6
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSpanRailwayCrossingAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "PROTECTED",
            "value": "Protected"
          },
          {
            "name": "UNPROTECTED",
            "value": "Unprotected"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanRoadAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "BRIDGE",
            "value": "Bridge"
          },
          {
            "name": "BUILT_UP_AREA",
            "value": "BuiltUpArea"
          },
          {
            "name": "CONTROLLED_ACCESS_HIGHWAY",
            "value": "ControlledAccessHighway"
          },
          {
            "name": "DIRT_ROAD",
            "value": "DirtRoad"
          },
          {
            "name": "DIVIDED_ROAD",
            "value": "DividedRoad"
          },
          {
            "name": "MOTORWAY",
            "value": "Motorway"
          },
          {
            "name": "PRIVATE_ROAD",
            "value": "PrivateRoad"
          },
          {
            "name": "RAMP",
            "value": "Ramp"
          },
          {
            "name": "RIGHT_HAND_TRAFFIC",
            "value": "RightHandTraffic"
          },
          {
            "name": "ROUNDABOUT",
            "value": "Roundabout"
          },
          {
            "name": "TUNNEL",
            "value": "Tunnel"
          },
          {
            "name": "UNDER_CONSTRUCTION",
            "value": "UnderConstruction"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanRoadAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanRoadAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "max": 12
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSpanScooterAccessAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ALLOWED",
            "value": "Allowed"
          },
          {
            "name": "NO_THROUGH_TRAFFIC",
            "value": "NoThroughTraffic"
          },
          {
            "name": "TOLL_ROAD",
            "value": "TollRoad"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanScooterAccessAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanScooterAccessAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSpanSpeedLimitDetails": {
      "type": "structure",
      "members": {
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Maximum speed.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "Unlimited": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the span doesn't have a speed limit like the Autobahn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the speed limit corresponding to the span.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteSpanTruckAccessAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ALLOWED",
            "value": "Allowed"
          },
          {
            "name": "NO_THROUGH_TRAFFIC",
            "value": "NoThroughTraffic"
          },
          {
            "name": "TOLL_ROAD",
            "value": "TollRoad"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSpanTruckAccessAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteSpanTruckAccessAttribute"
      },
      "traits": {
        "smithy.api#length": {
          "max": 3
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteSteeringDirection": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "LEFT",
            "value": "Left"
          },
          {
            "name": "RIGHT",
            "value": "Right"
          },
          {
            "name": "STRAIGHT",
            "value": "Straight"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteSummary": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the route.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the route.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Tolls": {
          "target": "com.amazonaws.georoutes#RouteTollSummary",
          "traits": {
            "smithy.api#documentation": "<p>Toll summary for the complete route.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is the same as the Distance within the Overview summary.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteToll": {
      "type": "structure",
      "members": {
        "Country": {
          "target": "com.amazonaws.georoutes#CountryCode3",
          "traits": {
            "smithy.api#documentation": "<p>The alpha-2 or alpha-3 character code for the country.</p>"
          }
        },
        "PaymentSites": {
          "target": "com.amazonaws.georoutes#RouteTollPaymentSiteList",
          "traits": {
            "smithy.api#documentation": "<p>Locations or sites where the toll fare is collected.</p>",
            "smithy.api#required": {}
          }
        },
        "Rates": {
          "target": "com.amazonaws.georoutes#RouteTollRateList",
          "traits": {
            "smithy.api#documentation": "<p>Toll rates that need to be paid to travel this leg of the route.</p>",
            "smithy.api#required": {}
          }
        },
        "Systems": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Toll systems are authorities that collect payments for the toll.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Provides details about toll information along a route, including the payment sites,\n         applicable toll rates, toll systems, and the country associated with the toll\n         collection.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteToll"
      }
    },
    "com.amazonaws.georoutes#RouteTollOptions": {
      "type": "structure",
      "members": {
        "AllTransponders": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies if the user has valid transponder with access to all toll systems. This\n         impacts toll calculation, and if true the price with transponders is used.</p>"
          }
        },
        "AllVignettes": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies if the user has valid vignettes with access for all toll roads. If a user has\n         a vignette for a toll road, then toll cost for that road is omitted since no further\n         payment is necessary.</p>"
          }
        },
        "Currency": {
          "target": "com.amazonaws.georoutes#CurrencyCode",
          "traits": {
            "smithy.api#documentation": "<p>Currency code corresponding to the price. This is the same as Currency specified in the\n         request.</p>"
          }
        },
        "EmissionType": {
          "target": "com.amazonaws.georoutes#RouteEmissionType",
          "traits": {
            "smithy.api#documentation": "<p>Emission type of the vehicle for toll cost calculation.</p>\n         <p>\n            <b>Valid values</b>: <code>Euro1, Euro2, Euro3, Euro4, Euro5,\n            Euro6, EuroEev</code>\n         </p>"
          }
        },
        "VehicleCategory": {
          "target": "com.amazonaws.georoutes#RouteTollVehicleCategory",
          "traits": {
            "smithy.api#documentation": "<p>Vehicle category for toll cost calculation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to Tolls on a route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPass": {
      "type": "structure",
      "members": {
        "IncludesReturnTrip": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the pass includes the rate for the return leg of the trip.</p>"
          }
        },
        "SeniorPass": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the pass is only valid for senior persons.</p>"
          }
        },
        "TransferCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>If the toll pass can be transferred, and how many times.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "TripCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of trips the pass is valid for.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "ValidityPeriod": {
          "target": "com.amazonaws.georoutes#RouteTollPassValidityPeriod",
          "traits": {
            "smithy.api#documentation": "<p>Period for which the pass is valid.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details if the toll rate can be a pass that supports multiple trips.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPassValidityPeriod": {
      "type": "structure",
      "members": {
        "Period": {
          "target": "com.amazonaws.georoutes#RouteTollPassValidityPeriodType",
          "traits": {
            "smithy.api#documentation": "<p>Validity period.</p>",
            "smithy.api#required": {}
          }
        },
        "PeriodCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Counts for the validity period.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Period for which the pass is valid.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPassValidityPeriodType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ANNUAL",
            "value": "Annual"
          },
          {
            "name": "DAYS",
            "value": "Days"
          },
          {
            "name": "EXTENDED_ANNUAL",
            "value": "ExtendedAnnual"
          },
          {
            "name": "MINUTES",
            "value": "Minutes"
          },
          {
            "name": "MONTHS",
            "value": "Months"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTollPaymentMethod": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "BANK_CARD",
            "value": "BankCard"
          },
          {
            "name": "CASH",
            "value": "Cash"
          },
          {
            "name": "CASH_EXACT",
            "value": "CashExact"
          },
          {
            "name": "CREDIT_CARD",
            "value": "CreditCard"
          },
          {
            "name": "PASS_SUBSCRIPTION",
            "value": "PassSubscription"
          },
          {
            "name": "TRAVEL_CARD",
            "value": "TravelCard"
          },
          {
            "name": "TRANSPONDER",
            "value": "Transponder"
          },
          {
            "name": "VIDEO_TOLL",
            "value": "VideoToll"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTollPaymentMethodList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteTollPaymentMethod"
      },
      "traits": {
        "smithy.api#length": {
          "max": 8
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#RouteTollPaymentSite": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of the payment site.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Locations or sites where the toll fare is collected.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPaymentSiteList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteTollPaymentSite"
      }
    },
    "com.amazonaws.georoutes#RouteTollPrice": {
      "type": "structure",
      "members": {
        "Currency": {
          "target": "com.amazonaws.georoutes#CurrencyCode",
          "traits": {
            "smithy.api#documentation": "<p>Currency code corresponding to the price. This is the same as Currency specified in the\n         request.</p>",
            "smithy.api#required": {}
          }
        },
        "Estimate": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the price is an estimate or an exact value. </p>",
            "smithy.api#required": {}
          }
        },
        "PerDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration for which the price corresponds to.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Range": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the price is a range or an exact value. If any of the toll fares making up the route\n         is a range, the overall price is also a range.</p>",
            "smithy.api#required": {}
          }
        },
        "RangeValue": {
          "target": "com.amazonaws.georoutes#RouteTollPriceValueRange",
          "traits": {
            "smithy.api#documentation": "<p>Price range with a minimum and maximum value, if a range.</p>"
          }
        },
        "Value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Exact price, if not a range.</p>",
            "smithy.api#range": {
              "min": 0.0
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The toll price.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPriceSummary": {
      "type": "structure",
      "members": {
        "Currency": {
          "target": "com.amazonaws.georoutes#CurrencyCode",
          "traits": {
            "smithy.api#documentation": "<p>Currency code corresponding to the price. This is the same as Currency specified in the\n         request.</p>",
            "smithy.api#required": {}
          }
        },
        "Estimate": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the price is an estimate or an exact value. </p>",
            "smithy.api#required": {}
          }
        },
        "Range": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the price is a range or an exact value. If any of the toll fares making up the route\n         is a range, the overall price is also a range.</p>",
            "smithy.api#required": {}
          }
        },
        "RangeValue": {
          "target": "com.amazonaws.georoutes#RouteTollPriceValueRange",
          "traits": {
            "smithy.api#documentation": "<p>Price range with a minimum and maximum value, if a range.</p>"
          }
        },
        "Value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Exact price, if not a range.</p>",
            "smithy.api#range": {
              "min": 0.0
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary of the route and toll price.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollPriceValueRange": {
      "type": "structure",
      "members": {
        "Min": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Minimum price.</p>",
            "smithy.api#range": {
              "min": 0.0
            },
            "smithy.api#required": {}
          }
        },
        "Max": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Maximum price.</p>",
            "smithy.api#range": {
              "min": 0.0
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Price range with a minimum and maximum value, if a range.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollRate": {
      "type": "structure",
      "members": {
        "ApplicableTimes": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Time when the rate is valid.</p>"
          }
        },
        "ConvertedPrice": {
          "target": "com.amazonaws.georoutes#RouteTollPrice",
          "traits": {
            "smithy.api#documentation": "<p>Price in the converted currency as specified in the request.</p>"
          }
        },
        "Id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Toll rate Id.</p>",
            "smithy.api#required": {}
          }
        },
        "LocalPrice": {
          "target": "com.amazonaws.georoutes#RouteTollPrice",
          "traits": {
            "smithy.api#documentation": "<p>Price in the local regional currency.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the toll.</p>",
            "smithy.api#required": {}
          }
        },
        "Pass": {
          "target": "com.amazonaws.georoutes#RouteTollPass",
          "traits": {
            "smithy.api#documentation": "<p>Details if the toll rate can be a pass that supports multiple trips.</p>"
          }
        },
        "PaymentMethods": {
          "target": "com.amazonaws.georoutes#RouteTollPaymentMethodList",
          "traits": {
            "smithy.api#documentation": "<p>Accepted payment methods at the toll.</p>",
            "smithy.api#required": {}
          }
        },
        "Transponders": {
          "target": "com.amazonaws.georoutes#RouteTransponderList",
          "traits": {
            "smithy.api#documentation": "<p>Transponders for which this toll can be applied.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The toll rate.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollRateList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteTollRate"
      }
    },
    "com.amazonaws.georoutes#RouteTollSummary": {
      "type": "structure",
      "members": {
        "Total": {
          "target": "com.amazonaws.georoutes#RouteTollPriceSummary",
          "traits": {
            "smithy.api#documentation": "<p>Total toll summary for the complete route. Total is the only summary available\n         today.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The toll summary for the complete route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollSystem": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The toll system name.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Toll systems are authorities that collect payments for the toll.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTollSystemList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteTollSystem"
      }
    },
    "com.amazonaws.georoutes#RouteTollVehicleCategory": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "MINIBUS",
            "value": "Minibus"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTrafficOptions": {
      "type": "structure",
      "members": {
        "FlowEventThresholdOverride": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration for which flow traffic is considered valid. For this period, the flow traffic\n         is used over historical traffic data. Flow traffic refers to congestion, which changes very\n         quickly. Duration in seconds for which flow traffic event would be considered valid. While\n         flow traffic event is valid it will be used over the historical traffic data. </p>"
          }
        },
        "Usage": {
          "target": "com.amazonaws.georoutes#TrafficUsage",
          "traits": {
            "smithy.api#documentation": "<p>Determines if traffic should be used or ignored while calculating the route.</p>\n         <p>Default Value: <code>UseTrafficData</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Traffic options for the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTrailerOptions": {
      "type": "structure",
      "members": {
        "AxleCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "TrailerCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>",
            "smithy.api#range": {
              "min": 1,
              "max": 255
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTransponder": {
      "type": "structure",
      "members": {
        "SystemName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Names of the toll system collecting the toll.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Transponders for which this toll can be applied.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTransponderList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteTransponder"
      }
    },
    "com.amazonaws.georoutes#RouteTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTravelModeOptions": {
      "type": "structure",
      "members": {
        "Car": {
          "target": "com.amazonaws.georoutes#RouteCarOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Car\"</p>"
          }
        },
        "Pedestrian": {
          "target": "com.amazonaws.georoutes#RoutePedestrianOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Pedestrian\"</p>"
          }
        },
        "Scooter": {
          "target": "com.amazonaws.georoutes#RouteScooterOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is <code>Scooter</code>\n         </p>\n         <note>\n            <p>When travel mode is set to <code>Scooter</code>, then the avoidance option\n               <code>ControlledAccessHighways</code> defaults to <code>true</code>.</p>\n         </note>"
          }
        },
        "Truck": {
          "target": "com.amazonaws.georoutes#RouteTruckOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DEFAULT",
            "value": "Default"
          },
          {
            "name": "TURN_BY_TURN",
            "value": "TurnByTurn"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTruckOptions": {
      "type": "structure",
      "members": {
        "AxleCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>",
            "smithy.api#range": {
              "min": 2,
              "max": 255
            }
          }
        },
        "EngineType": {
          "target": "com.amazonaws.georoutes#RouteEngineType",
          "traits": {
            "smithy.api#documentation": "<p>Engine type of the vehicle.</p>"
          }
        },
        "GrossWeight": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Gross weight of the vehicle including trailers, and goods at capacity.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#RouteHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargo contained in the vehicle.</p>"
          }
        },
        "Height": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "HeightAboveFirstAxle": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle above its first axle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "KpraLength": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Kingpin to rear axle length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>"
          }
        },
        "Length": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>c</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 30000
            }
          }
        },
        "LicensePlate": {
          "target": "com.amazonaws.georoutes#RouteVehicleLicensePlate",
          "traits": {
            "smithy.api#documentation": "<p>The vehicle License Plate.</p>"
          }
        },
        "MaxSpeed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Maximum speed</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 3.6,
              "max": 252.0
            }
          }
        },
        "Occupancy": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "PayloadCapacity": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Payload capacity of the vehicle and trailers attached.</p>\n         <p>\n            <b>Unit</b>: <code>kilograms</code>\n         </p>"
          }
        },
        "TireCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Number of tires on the vehicle.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 255
            }
          }
        },
        "Trailer": {
          "target": "com.amazonaws.georoutes#RouteTrailerOptions",
          "traits": {
            "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
          }
        },
        "TruckType": {
          "target": "com.amazonaws.georoutes#RouteTruckType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the truck.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>",
            "smithy.api#length": {
              "max": 20
            }
          }
        },
        "WeightPerAxle": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Heaviest weight per axle irrespective of the axle type or the axle group. Meant for\n         usage in countries where the differences in axle types or axle groups are not\n         distinguished.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "WeightPerAxleGroup": {
          "target": "com.amazonaws.georoutes#WeightPerAxleGroup",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the total weight for the specified axle group. Meant for usage in countries\n         that have different regulations based on the axle group type.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Width": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Width of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
      }
    },
    "com.amazonaws.georoutes#RouteTruckType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "LIGHT_TRUCK",
            "value": "LightTruck"
          },
          {
            "name": "STRAIGHT_TRUCK",
            "value": "StraightTruck"
          },
          {
            "name": "TRACTOR",
            "value": "Tractor"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTurnIntensity": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "SHARP",
            "value": "Sharp"
          },
          {
            "name": "SLIGHT",
            "value": "Slight"
          },
          {
            "name": "TYPICAL",
            "value": "Typical"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteTurnStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the turn step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteUTurnStepDetails": {
      "type": "structure",
      "members": {
        "Intersection": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Name of the intersection, if applicable to the step.</p>",
            "smithy.api#required": {}
          }
        },
        "SteeringDirection": {
          "target": "com.amazonaws.georoutes#RouteSteeringDirection",
          "traits": {
            "smithy.api#documentation": "<p>Steering direction for the step.</p>"
          }
        },
        "TurnAngle": {
          "target": "com.amazonaws.georoutes#TurnAngle",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Angle of the turn.</p>"
          }
        },
        "TurnIntensity": {
          "target": "com.amazonaws.georoutes#RouteTurnIntensity",
          "traits": {
            "smithy.api#documentation": "<p>Intensity of the turn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details related to the U-turn step.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleArrival": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RouteVehiclePlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the arrival for a leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleDeparture": {
      "type": "structure",
      "members": {
        "Place": {
          "target": "com.amazonaws.georoutes#RouteVehiclePlace",
          "traits": {
            "smithy.api#documentation": "<p>The place details.</p>",
            "smithy.api#required": {}
          }
        },
        "Time": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>The departure time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details corresponding to the departure for the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleIncident": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief readable description of the incident.</p>"
          }
        },
        "EndTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>End timestamp of the incident.</p>"
          }
        },
        "Severity": {
          "target": "com.amazonaws.georoutes#RouteVehicleIncidentSeverity",
          "traits": {
            "smithy.api#documentation": "<p>Severity of the incident Critical - The part of the route the incident affects is\n         unusable. Major- Major impact on the leg duration, for example stop and go Minor- Minor\n         impact on the leg duration, for example traffic jam Low - Low on duration, for example\n         slightly increased traffic</p>"
          }
        },
        "StartTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Start time of the incident.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteVehicleIncidentType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the incident.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Incidents corresponding to this leg of the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleIncidentList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteVehicleIncident"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleIncidentSeverity": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CRITICAL",
            "value": "Critical"
          },
          {
            "name": "HIGH",
            "value": "High"
          },
          {
            "name": "MEDIUM",
            "value": "Medium"
          },
          {
            "name": "LOW",
            "value": "Low"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteVehicleIncidentType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCIDENT",
            "value": "Accident"
          },
          {
            "name": "CONGESTION",
            "value": "Congestion"
          },
          {
            "name": "CONSTRUCTION",
            "value": "Construction"
          },
          {
            "name": "DISABLED_VEHICLE",
            "value": "DisabledVehicle"
          },
          {
            "name": "LANE_RESTRICTION",
            "value": "LaneRestriction"
          },
          {
            "name": "MASS_TRANSIT",
            "value": "MassTransit"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "PLANNED_EVENT",
            "value": "PlannedEvent"
          },
          {
            "name": "ROAD_CLOSURE",
            "value": "RoadClosure"
          },
          {
            "name": "ROAD_HAZARD",
            "value": "RoadHazard"
          },
          {
            "name": "WEATHER",
            "value": "Weather"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteVehicleLegDetails": {
      "type": "structure",
      "members": {
        "Arrival": {
          "target": "com.amazonaws.georoutes#RouteVehicleArrival",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the arrival for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Departure": {
          "target": "com.amazonaws.georoutes#RouteVehicleDeparture",
          "traits": {
            "smithy.api#documentation": "<p>Details corresponding to the departure for the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "Incidents": {
          "target": "com.amazonaws.georoutes#RouteVehicleIncidentList",
          "traits": {
            "smithy.api#documentation": "<p>Incidents corresponding to this leg of the route.</p>",
            "smithy.api#required": {}
          }
        },
        "Notices": {
          "target": "com.amazonaws.georoutes#RouteVehicleNoticeList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>",
            "smithy.api#required": {}
          }
        },
        "PassThroughWaypoints": {
          "target": "com.amazonaws.georoutes#RoutePassThroughWaypointList",
          "traits": {
            "smithy.api#documentation": "<p>Waypoints that were passed through during the leg. This includes the waypoints that were\n         configured with the PassThrough option.</p>",
            "smithy.api#required": {}
          }
        },
        "Spans": {
          "target": "com.amazonaws.georoutes#RouteVehicleSpanList",
          "traits": {
            "smithy.api#documentation": "<p>Spans that were computed for the requested SpanAdditionalFeatures.</p>",
            "smithy.api#required": {}
          }
        },
        "Summary": {
          "target": "com.amazonaws.georoutes#RouteVehicleSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
          }
        },
        "Tolls": {
          "target": "com.amazonaws.georoutes#RouteTollList",
          "traits": {
            "smithy.api#documentation": "<p>Toll related options.</p>",
            "smithy.api#required": {}
          }
        },
        "TollSystems": {
          "target": "com.amazonaws.georoutes#RouteTollSystemList",
          "traits": {
            "smithy.api#documentation": "<p>Toll systems are authorities that collect payments for the toll.</p>",
            "smithy.api#required": {}
          }
        },
        "TravelSteps": {
          "target": "com.amazonaws.georoutes#RouteVehicleTravelStepList",
          "traits": {
            "smithy.api#documentation": "<p>Steps of a leg that must be performed before the travel portion of the leg.</p>",
            "smithy.api#required": {}
          }
        },
        "TruckRoadTypes": {
          "target": "com.amazonaws.georoutes#TruckRoadTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "Zones": {
          "target": "com.amazonaws.georoutes#RouteZoneList",
          "traits": {
            "smithy.api#documentation": "<p>Zones corresponding to this leg of the route.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that correspond to the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleLicensePlate": {
      "type": "structure",
      "members": {
        "LastCharacter": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The last character of the License Plate.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 1
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>License plate information of the vehicle. Currently, only the last character is used\n         where license plate based controlled access is enforced.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleNotice": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "com.amazonaws.georoutes#RouteVehicleNoticeCode",
          "traits": {
            "smithy.api#documentation": "<p>Code corresponding to the issue.</p>",
            "smithy.api#required": {}
          }
        },
        "Details": {
          "target": "com.amazonaws.georoutes#RouteVehicleNoticeDetailList",
          "traits": {
            "smithy.api#documentation": "<p>Additional details of the notice.</p>",
            "smithy.api#required": {}
          }
        },
        "Impact": {
          "target": "com.amazonaws.georoutes#RouteNoticeImpact",
          "traits": {
            "smithy.api#documentation": "<p>Impact corresponding to the issue. While Low impact notices can be safely ignored, High\n         impact notices must be evaluated further to determine the impact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleNoticeCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCURATE_POLYLINE_UNAVAILABLE",
            "value": "AccuratePolylineUnavailable"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POTENTIAL_VIOLATED_AVOID_TOLL_ROAD_USAGE",
            "value": "PotentialViolatedAvoidTollRoadUsage"
          },
          {
            "name": "POTENTIAL_VIOLATED_CARPOOL_USAGE",
            "value": "PotentialViolatedCarpoolUsage"
          },
          {
            "name": "POTENTIAL_VIOLATED_TURN_RESTRICTION_USAGE",
            "value": "PotentialViolatedTurnRestrictionUsage"
          },
          {
            "name": "POTENTIAL_VIOLATED_VEHICLE_RESTRICTION_USAGE",
            "value": "PotentialViolatedVehicleRestrictionUsage"
          },
          {
            "name": "POTENTIAL_VIOLATED_ZONE_RESTRICTION_USAGE",
            "value": "PotentialViolatedZoneRestrictionUsage"
          },
          {
            "name": "SEASONAL_CLOSURE",
            "value": "SeasonalClosure"
          },
          {
            "name": "TOLLS_DATA_TEMPORARILY_UNAVAILABLE",
            "value": "TollsDataTemporarilyUnavailable"
          },
          {
            "name": "TOLLS_DATA_UNAVAILABLE",
            "value": "TollsDataUnavailable"
          },
          {
            "name": "TOLL_TRANSPONDER",
            "value": "TollTransponder"
          },
          {
            "name": "VIOLATED_AVOID_CONTROLLED_ACCESS_HIGHWAY",
            "value": "ViolatedAvoidControlledAccessHighway"
          },
          {
            "name": "VIOLATED_AVOID_DIFFICULT_TURNS",
            "value": "ViolatedAvoidDifficultTurns"
          },
          {
            "name": "VIOLATED_AVOID_DIRT_ROAD",
            "value": "ViolatedAvoidDirtRoad"
          },
          {
            "name": "VIOLATED_AVOID_SEASONAL_CLOSURE",
            "value": "ViolatedAvoidSeasonalClosure"
          },
          {
            "name": "VIOLATED_AVOID_TOLL_ROAD",
            "value": "ViolatedAvoidTollRoad"
          },
          {
            "name": "VIOLATED_AVOID_TOLL_TRANSPONDER",
            "value": "ViolatedAvoidTollTransponder"
          },
          {
            "name": "VIOLATED_AVOID_TRUCK_ROAD_TYPE",
            "value": "ViolatedAvoidTruckRoadType"
          },
          {
            "name": "VIOLATED_AVOID_TUNNEL",
            "value": "ViolatedAvoidTunnel"
          },
          {
            "name": "VIOLATED_AVOID_U_TURNS",
            "value": "ViolatedAvoidUTurns"
          },
          {
            "name": "VIOLATED_BLOCKED_ROAD",
            "value": "ViolatedBlockedRoad"
          },
          {
            "name": "VIOLATED_CARPOOL",
            "value": "ViolatedCarpool"
          },
          {
            "name": "VIOLATED_EMERGENCY_GATE",
            "value": "ViolatedEmergencyGate"
          },
          {
            "name": "VIOLATED_START_DIRECTION",
            "value": "ViolatedStartDirection"
          },
          {
            "name": "VIOLATED_TURN_RESTRICTION",
            "value": "ViolatedTurnRestriction"
          },
          {
            "name": "VIOLATED_VEHICLE_RESTRICTION",
            "value": "ViolatedVehicleRestriction"
          },
          {
            "name": "VIOLATED_ZONE_RESTRICTION",
            "value": "ViolatedZoneRestriction"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteVehicleNoticeDetail": {
      "type": "structure",
      "members": {
        "Title": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The notice title.</p>"
          }
        },
        "ViolatedConstraints": {
          "target": "com.amazonaws.georoutes#RouteViolatedConstraints",
          "traits": {
            "smithy.api#documentation": "<p>Any violated constraints.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Additional details of the notice.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleNoticeDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteVehicleNoticeDetail"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleNoticeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteVehicleNotice"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleOverviewSummary": {
      "type": "structure",
      "members": {
        "BestCaseDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Total duration in free flowing traffic, which is the best case or shortest duration\n         possible to cover the leg.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "TypicalDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span under typical traffic congestion. </p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehiclePlace": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the place.</p>"
          }
        },
        "OriginalPosition": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position provided in the request.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position23",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteSideOfStreet",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        },
        "WaypointIndex": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Index of the waypoint in the request.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Place details corresponding to the arrival or departure.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleSpan": {
      "type": "structure",
      "members": {
        "BestCaseDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span without traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "CarAccess": {
          "target": "com.amazonaws.georoutes#RouteSpanCarAccessAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Access attributes for a car corresponding to the span.</p>"
          }
        },
        "Country": {
          "target": "com.amazonaws.georoutes#CountryCode3",
          "traits": {
            "smithy.api#documentation": "<p>3 letter Country code corresponding to the Span.</p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span. This feature doesn't split a span, but is always computed\n         on a span split by other properties.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "DynamicSpeed": {
          "target": "com.amazonaws.georoutes#RouteSpanDynamicSpeedDetails",
          "traits": {
            "smithy.api#documentation": "<p>Dynamic speed details corresponding to the span.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "FunctionalClassification": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Functional classification of the road segment corresponding to the span.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 5
            }
          }
        },
        "Gate": {
          "target": "com.amazonaws.georoutes#RouteSpanGateAttribute",
          "traits": {
            "smithy.api#documentation": "<p>Attributes corresponding to a gate. The gate is present at the end of the returned\n         span.</p>"
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this span.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Incidents": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Incidents corresponding to the span. These index into the Incidents in the parent\n         Leg.</p>"
          }
        },
        "Names": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Provides an array of names of the vehicle span in available languages.</p>"
          }
        },
        "Notices": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>"
          }
        },
        "RailwayCrossing": {
          "target": "com.amazonaws.georoutes#RouteSpanRailwayCrossingAttribute",
          "traits": {
            "smithy.api#documentation": "<p>Attributes corresponding to a railway crossing. The gate is present at the end of the\n         returned span.</p>"
          }
        },
        "Region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>2-3 letter Region code corresponding to the Span. This is either a province or a\n         state.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 3
            }
          }
        },
        "RoadAttributes": {
          "target": "com.amazonaws.georoutes#RouteSpanRoadAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Attributes for the road segment corresponding to the span. </p>"
          }
        },
        "RouteNumbers": {
          "target": "com.amazonaws.georoutes#RouteNumberList",
          "traits": {
            "smithy.api#documentation": "<p>Designated route name or number corresponding to the span.</p>"
          }
        },
        "ScooterAccess": {
          "target": "com.amazonaws.georoutes#RouteSpanScooterAccessAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Access attributes for a scooter corresponding to the span.</p>"
          }
        },
        "SpeedLimit": {
          "target": "com.amazonaws.georoutes#RouteSpanSpeedLimitDetails",
          "traits": {
            "smithy.api#documentation": "<p>Speed limit details corresponding to the span.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>"
          }
        },
        "TollSystems": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Toll systems are authorities that collect payments for the toll.</p>"
          }
        },
        "TruckAccess": {
          "target": "com.amazonaws.georoutes#RouteSpanTruckAccessAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>Access attributes for a truck corresponding to the span.</p>"
          }
        },
        "TruckRoadTypes": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>"
          }
        },
        "TypicalDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span under typical traffic congestion. </p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Zones": {
          "target": "com.amazonaws.georoutes#IndexList",
          "traits": {
            "smithy.api#documentation": "<p>Zones corresponding to this leg of the route.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Span computed for the requested SpanAdditionalFeatures.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleSpanList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteVehicleSpan"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleSummary": {
      "type": "structure",
      "members": {
        "Overview": {
          "target": "com.amazonaws.georoutes#RouteVehicleOverviewSummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including before travel, travel and after travel\n         steps.</p>"
          }
        },
        "TravelOnly": {
          "target": "com.amazonaws.georoutes#RouteVehicleTravelOnlySummary",
          "traits": {
            "smithy.api#documentation": "<p>Summarized details for the leg including travel steps only. The Distance for the travel\n         only portion of the journey is in meters</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details of the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleTravelOnlySummary": {
      "type": "structure",
      "members": {
        "BestCaseDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Total duration in free flowing traffic, which is the best case or shortest duration\n         possible to cover the leg.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "TypicalDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the computed span under typical traffic congestion.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summarized details of the route.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleTravelStep": {
      "type": "structure",
      "members": {
        "ContinueHighwayStepDetails": {
          "target": "com.amazonaws.georoutes#RouteContinueHighwayStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Continue Highway step.</p>"
          }
        },
        "ContinueStepDetails": {
          "target": "com.amazonaws.georoutes#RouteContinueStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Continue step.</p>"
          }
        },
        "CurrentRoad": {
          "target": "com.amazonaws.georoutes#RouteRoad",
          "traits": {
            "smithy.api#documentation": "<p>Details of the current road.</p>"
          }
        },
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>"
          }
        },
        "Duration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "EnterHighwayStepDetails": {
          "target": "com.amazonaws.georoutes#RouteEnterHighwayStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Enter Highway step.</p>"
          }
        },
        "ExitNumber": {
          "target": "com.amazonaws.georoutes#LocalizedStringList",
          "traits": {
            "smithy.api#documentation": "<p>Exit number of the road exit, if applicable.</p>"
          }
        },
        "ExitStepDetails": {
          "target": "com.amazonaws.georoutes#RouteExitStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Exit step.</p>"
          }
        },
        "GeometryOffset": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Offset in the leg geometry corresponding to the start of this step.</p>",
            "smithy.api#range": {
              "min": 0
            }
          }
        },
        "Instruction": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Brief description of the step in the requested language.</p>\n         <note>\n            <p>Only available when the TravelStepType is Default.</p>\n         </note>"
          }
        },
        "KeepStepDetails": {
          "target": "com.amazonaws.georoutes#RouteKeepStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Keep step.</p>"
          }
        },
        "NextRoad": {
          "target": "com.amazonaws.georoutes#RouteRoad",
          "traits": {
            "smithy.api#documentation": "<p>Details of the next road. See RouteRoad for details of sub-attributes.</p>"
          }
        },
        "RampStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRampStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Ramp step.</p>"
          }
        },
        "RoundaboutEnterStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutEnterStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Enter step.</p>"
          }
        },
        "RoundaboutExitStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutExitStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Exit step.</p>"
          }
        },
        "RoundaboutPassStepDetails": {
          "target": "com.amazonaws.georoutes#RouteRoundaboutPassStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Roundabout Pass step.</p>"
          }
        },
        "Signpost": {
          "target": "com.amazonaws.georoutes#RouteSignpost",
          "traits": {
            "smithy.api#documentation": "<p>Sign post information of the action, applicable only for TurnByTurn steps. See\n         RouteSignpost for details of sub-attributes.</p>"
          }
        },
        "TurnStepDetails": {
          "target": "com.amazonaws.georoutes#RouteTurnStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Turn step.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.georoutes#RouteVehicleTravelStepType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the step.</p>",
            "smithy.api#required": {}
          }
        },
        "UTurnStepDetails": {
          "target": "com.amazonaws.georoutes#RouteUTurnStepDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details that are specific to a Turn step.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Steps of a leg that correspond to the travel portion of the leg.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleTravelStepList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteVehicleTravelStep"
      }
    },
    "com.amazonaws.georoutes#RouteVehicleTravelStepType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ARRIVE",
            "value": "Arrive"
          },
          {
            "name": "CONTINUE",
            "value": "Continue"
          },
          {
            "name": "CONTINUE_HIGHWAY",
            "value": "ContinueHighway"
          },
          {
            "name": "DEPART",
            "value": "Depart"
          },
          {
            "name": "ENTER_HIGHWAY",
            "value": "EnterHighway"
          },
          {
            "name": "EXIT",
            "value": "Exit"
          },
          {
            "name": "KEEP",
            "value": "Keep"
          },
          {
            "name": "RAMP",
            "value": "Ramp"
          },
          {
            "name": "ROUNDABOUT_ENTER",
            "value": "RoundaboutEnter"
          },
          {
            "name": "ROUNDABOUT_EXIT",
            "value": "RoundaboutExit"
          },
          {
            "name": "ROUNDABOUT_PASS",
            "value": "RoundaboutPass"
          },
          {
            "name": "TURN",
            "value": "Turn"
          },
          {
            "name": "U_TURN",
            "value": "UTurn"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteViolatedConstraints": {
      "type": "structure",
      "members": {
        "AllHazardsRestricted": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>This restriction applies to truck cargo, where the resulting route excludes roads on\n         which hazardous materials are prohibited from being transported.</p>"
          }
        },
        "AxleCount": {
          "target": "com.amazonaws.georoutes#RouteNoticeDetailRange",
          "traits": {
            "smithy.api#documentation": "<p>Total number of axles of the vehicle.</p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#RouteHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargo contained in the vehicle.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxHeight": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum height of the vehicle.</p>"
          }
        },
        "MaxKpraLength": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum Kpra length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>"
          }
        },
        "MaxLength": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum length of the vehicle.</p>"
          }
        },
        "MaxPayloadCapacity": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum load capacity of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>kilograms</code>\n         </p>"
          }
        },
        "MaxWeight": {
          "target": "com.amazonaws.georoutes#RouteWeightConstraint",
          "traits": {
            "smithy.api#documentation": "<p>The maximum weight of the route.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "MaxWeightPerAxle": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum weight per axle of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "MaxWeightPerAxleGroup": {
          "target": "com.amazonaws.georoutes#WeightPerAxleGroup",
          "traits": {
            "smithy.api#documentation": "<p>The maximum weight per axle group of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "MaxWidth": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum width of the vehicle.</p>"
          }
        },
        "Occupancy": {
          "target": "com.amazonaws.georoutes#RouteNoticeDetailRange",
          "traits": {
            "smithy.api#documentation": "<p>The number of occupants in the vehicle.</p>\n         <p>Default Value: <code>1</code>\n         </p>"
          }
        },
        "RestrictedTimes": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Access radius restrictions based on time.</p>"
          }
        },
        "TimeDependent": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>The time dependent constraint.</p>"
          }
        },
        "TrailerCount": {
          "target": "com.amazonaws.georoutes#RouteNoticeDetailRange",
          "traits": {
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>"
          }
        },
        "TravelMode": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode corresponding to the leg.</p>"
          }
        },
        "TruckRoadType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Truck road type identifiers. <code>BK1</code> through <code>BK4</code> apply only to\n         Sweden. <code>A2,A4,B2,B4,C,D,ET2,ET4</code> apply only to Mexico.</p>\n         <note>\n            <p>There are currently no other supported values as of 26th April 2024.</p>\n         </note>"
          }
        },
        "TruckType": {
          "target": "com.amazonaws.georoutes#RouteTruckType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the truck.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This property contains a summary of violated constraints.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteWaypoint": {
      "type": "structure",
      "members": {
        "AvoidActionsForDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Avoids actions for the provided distance. This is typically to consider for users in\n         moving vehicles who may not have sufficient time to make an action at an origin or a\n         destination.</p>",
            "smithy.api#range": {
              "max": 2000
            }
          }
        },
        "AvoidUTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Matching": {
          "target": "com.amazonaws.georoutes#RouteMatchingOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to the road network.</p>"
          }
        },
        "PassThrough": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>If the waypoint should not be treated as a stop. If yes, the waypoint is passed through\n         and doesn't split the route into different legs.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#RouteSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        },
        "StopDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of the stop.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Waypoint between the Origin and Destination.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteWaypointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteWaypoint"
      }
    },
    "com.amazonaws.georoutes#RouteWeightConstraint": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.georoutes#RouteWeightConstraintType",
          "traits": {
            "smithy.api#documentation": "<p>The type of constraint.</p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The constraint value.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The weight constraint for the route.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#RouteWeightConstraintType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CURRENT",
            "value": "Current"
          },
          {
            "name": "GROSS",
            "value": "Gross"
          },
          {
            "name": "UNKNOWN",
            "value": "Unknown"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteZone": {
      "type": "structure",
      "members": {
        "Category": {
          "target": "com.amazonaws.georoutes#RouteZoneCategory",
          "traits": {
            "smithy.api#documentation": "<p>The zone category.</p>"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the zone.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The zone.</p>"
      }
    },
    "com.amazonaws.georoutes#RouteZoneCategory": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CONGESTION_PRICING",
            "value": "CongestionPricing"
          },
          {
            "name": "ENVIRONMENTAL",
            "value": "Environmental"
          },
          {
            "name": "VIGNETTE",
            "value": "Vignette"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#RouteZoneList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#RouteZone"
      }
    },
    "com.amazonaws.georoutes#RoutesService": {
      "type": "service",
      "version": "2020-11-19",
      "resources": [
        {
          "target": "com.amazonaws.georoutes#ProviderResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Geo Routes",
          "arnNamespace": "geo-routes",
          "cloudTrailEventSource": "geo-routes.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "geo-routes"
        },
        "aws.endpoints#standardRegionalEndpoints": {
          "partitionSpecialCases": {
            "aws": [
              {
                "endpoint": "https://routes.geo.{region}.{dnsSuffix}/v2"
              },
              {
                "endpoint": "https://routes.geo-fips.{region}.{dualStackDnsSuffix}/v2",
                "fips": true,
                "dualStack": true
              },
              {
                "endpoint": "https://routes.geo-fips.{region}.{dnsSuffix}/v2",
                "fips": true,
                "dualStack": false
              },
              {
                "endpoint": "https://routes.geo.{region}.{dualStackDnsSuffix}/v2",
                "fips": false,
                "dualStack": true
              }
            ],
            "aws-us-gov": [
              {
                "endpoint": "https://routes.geo.{region}.us-gov.{dnsSuffix}/v2"
              },
              {
                "endpoint": "https://routes.geo-fips.{region}.us-gov.{dualStackDnsSuffix}/v2",
                "fips": true,
                "dualStack": true
              },
              {
                "endpoint": "https://routes.geo-fips.{region}.us-gov.{dnsSuffix}/v2",
                "fips": true,
                "dualStack": false
              },
              {
                "endpoint": "https://routes.geo.{region}.us-gov.{dualStackDnsSuffix}/v2",
                "fips": false,
                "dualStack": true
              }
            ]
          }
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": ["x-amz-content-sha256", "x-amz-user-agent", "content-type"]
        },
        "smithy.api#documentation": "<p>With the Amazon Location Routes API you can calculate routes and estimate travel time\n         based on up-to-date road network and live traffic information.</p>\n         <p>Calculate optimal travel routes and estimate travel times using up-to-date road network\n         and traffic data. Key features include:</p>\n         <ul>\n            <li>\n               <p>Point-to-point routing with estimated travel time, distance, and turn-by-turn\n               directions</p>\n            </li>\n            <li>\n               <p>Multi-point route optimization to minimize travel time or distance</p>\n            </li>\n            <li>\n               <p>Route matrices for efficient multi-destination planning</p>\n            </li>\n            <li>\n               <p>Isoline calculations to determine reachable areas within specified time or\n               distance thresholds</p>\n            </li>\n            <li>\n               <p>Map-matching to align GPS traces with the road network</p>\n            </li>\n         </ul>",
        "smithy.api#title": "Amazon Location Service Routes V2",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            },
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": {
                          "ref": "Endpoint"
                        },
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo.{Region}.{PartitionResult#dnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo-fips.{Region}.{PartitionResult#dualStackDnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo-fips.{Region}.{PartitionResult#dnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo.{Region}.{PartitionResult#dualStackDnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-us-gov"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo.{Region}.us-gov.{PartitionResult#dnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-us-gov"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo-fips.{Region}.us-gov.{PartitionResult#dualStackDnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-us-gov"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo-fips.{Region}.us-gov.{PartitionResult#dnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "stringEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "name"
                                  ]
                                },
                                "aws-us-gov"
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "endpoint": {
                            "url": "https://routes.geo.{Region}.us-gov.{PartitionResult#dualStackDnsSuffix}/v2",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "endpoint": {
                                    "url": "https://geo-routes-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                  },
                                  "type": "endpoint"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                false
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    },
                                    true
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "endpoint": {
                                    "url": "https://geo-routes-fips.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                  },
                                  "type": "endpoint"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS is enabled but this partition does not support FIPS",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                false
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "endpoint": {
                                    "url": "https://geo-routes.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                  },
                                  "type": "endpoint"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "DualStack is enabled but this partition does not support DualStack",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://geo-routes.{Region}.{PartitionResult#dnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ],
              "type": "tree"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For custom endpoint with region not set and fips disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Endpoint": "https://example.com",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://example.com",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Endpoint": "https://example.com",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo-fips.us-east-1.api.aws/v2"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo-fips.us-east-1.amazonaws.com/v2"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo.us-east-1.api.aws/v2"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo.us-east-1.amazonaws.com/v2"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo-fips.us-gov-west-1.us-gov.api.aws/v2"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo-fips.us-gov-west-1.us-gov.amazonaws.com/v2"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo.us-gov-west-1.us-gov.api.aws/v2"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://routes.geo.us-gov-west-1.us-gov.amazonaws.com/v2"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.eu-isoe-west-1.cloud.adc-e.uk"
                }
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region eu-isoe-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.eu-isoe-west-1.cloud.adc-e.uk"
                }
              },
              "params": {
                "Region": "eu-isoe-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes-fips.us-isof-south-1.csp.hci.ic.gov"
                }
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isof-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://geo-routes.us-isof-south-1.csp.hci.ic.gov"
                }
              },
              "params": {
                "Region": "us-isof-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.georoutes#RoutingObjective": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "FASTEST_ROUTE",
            "value": "FastestRoute"
          },
          {
            "name": "SHORTEST_ROUTE",
            "value": "ShortestRoute"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#SensitiveString": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.georoutes#SideOfStreetMatchingStrategy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ANY_STREET",
            "value": "AnyStreet"
          },
          {
            "name": "DIVIDED_STREET_ONLY",
            "value": "DividedStreetOnly"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#SnapToRoads": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.georoutes#SnapToRoadsRequest"
      },
      "output": {
        "target": "com.amazonaws.georoutes#SnapToRoadsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.georoutes#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.georoutes#InternalServerException"
        },
        {
          "target": "com.amazonaws.georoutes#ThrottlingException"
        },
        {
          "target": "com.amazonaws.georoutes#ValidationException"
        }
      ],
      "traits": {
        "aws.api#dataPlane": {},
        "smithy.api#documentation": "<p>\n            <code>SnapToRoads</code> matches GPS trace to roads most likely traveled on.</p>",
        "smithy.api#http": {
          "uri": "/snap-to-roads",
          "method": "POST"
        },
        "smithy.api#readonly": {},
        "smithy.test#smokeTests": [
          {
            "id": "SnapToRoadsSuccess",
            "params": {
              "TracePoints": [
                {
                  "Position": [8.53404, 50.16364]
                },
                {
                  "Position": [8.53379056, 50.16352417]
                }
              ]
            },
            "expect": {
              "success": {}
            },
            "vendorParamsShape": "aws.test#AwsVendorParams",
            "vendorParams": {
              "region": "us-west-2"
            }
          }
        ]
      }
    },
    "com.amazonaws.georoutes#SnapToRoadsRequest": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.georoutes#ApiKey",
          "traits": {
            "smithy.api#documentation": "<p>Optional: The API key to be used for authorization. Either an API key or valid SigV4\n         signature must be provided when making a request. </p>",
            "smithy.api#httpQuery": "key"
          }
        },
        "SnappedGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>Chooses what the returned SnappedGeometry format should be.</p>\n         <p>Default Value: <code>FlexiblePolyline</code>\n         </p>"
          }
        },
        "SnapRadius": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The radius around the provided tracepoint that is considered for snapping.</p>\n         <p>\n            <b>Unit</b>: <code>meters</code>\n         </p>\n         <p>Default value: <code>300</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 10000
            }
          }
        },
        "TracePoints": {
          "target": "com.amazonaws.georoutes#RoadSnapTracePointList",
          "traits": {
            "smithy.api#documentation": "<p>List of trace points to be snapped onto the road network.</p>",
            "smithy.api#length": {
              "min": 2,
              "max": 5000
            },
            "smithy.api#required": {}
          }
        },
        "TravelMode": {
          "target": "com.amazonaws.georoutes#RoadSnapTravelMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the mode of transport when calculating a route. Used in estimating the speed\n         of travel and road compatibility.</p>\n         <p>Default Value: <code>Car</code>\n         </p>"
          }
        },
        "TravelModeOptions": {
          "target": "com.amazonaws.georoutes#RoadSnapTravelModeOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.georoutes#SnapToRoadsResponse": {
      "type": "structure",
      "members": {
        "Notices": {
          "target": "com.amazonaws.georoutes#RoadSnapNoticeList",
          "traits": {
            "smithy.api#documentation": "<p>Notices are additional information returned that indicate issues that occurred during\n         route calculation.</p>",
            "smithy.api#required": {}
          }
        },
        "PricingBucket": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pricing bucket for which the query is charged at.</p>",
            "smithy.api#httpHeader": "x-amz-geo-pricing-bucket",
            "smithy.api#required": {}
          }
        },
        "SnappedGeometry": {
          "target": "com.amazonaws.georoutes#RoadSnapSnappedGeometry",
          "traits": {
            "smithy.api#documentation": "<p>The interpolated geometry for the snapped route onto the road network.</p>"
          }
        },
        "SnappedGeometryFormat": {
          "target": "com.amazonaws.georoutes#GeometryFormat",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the geometry returned for each leg of the route.</p>",
            "smithy.api#required": {}
          }
        },
        "SnappedTracePoints": {
          "target": "com.amazonaws.georoutes#RoadSnapSnappedTracePointList",
          "traits": {
            "smithy.api#documentation": "<p>The trace points snapped onto the road network. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.georoutes#SpeedKilometersPerHour": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0.0
        }
      }
    },
    "com.amazonaws.georoutes#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was denied due to request throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.georoutes#TimeOfDay": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](Z|[+-]([0-1]?[0-9]|2[0-3]):[0-5][0-9])$"
      }
    },
    "com.amazonaws.georoutes#TimeThresholdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#DurationSeconds",
        "traits": {
          "smithy.api#range": {
            "min": 0,
            "max": 10800
          }
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        }
      }
    },
    "com.amazonaws.georoutes#TimestampWithTimezoneOffset": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^([1-2][0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]{0,9})?(Z|[+-]([01][0-9]|2[0-3]):[0-5][0-9])$"
      }
    },
    "com.amazonaws.georoutes#TrafficUsage": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "IGNORE_TRAFFIC_DATA",
            "value": "IgnoreTrafficData"
          },
          {
            "name": "USE_TRAFFIC_DATA",
            "value": "UseTrafficData"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#TruckRoadType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.georoutes#TruckRoadTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#TruckRoadType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 12
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#TunnelRestrictionCode": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.georoutes#TurnAngle": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": -180,
          "max": 180
        }
      }
    },
    "com.amazonaws.georoutes#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        },
        "Reason": {
          "target": "com.amazonaws.georoutes#ValidationExceptionReason",
          "traits": {
            "smithy.api#documentation": "<p>A message with the reason for the validation exception error.</p>",
            "smithy.api#jsonName": "reason",
            "smithy.api#required": {}
          }
        },
        "FieldList": {
          "target": "com.amazonaws.georoutes#ValidationExceptionFieldList",
          "traits": {
            "smithy.api#documentation": "<p>The field where the invalid entry was detected.</p>",
            "smithy.api#jsonName": "fieldList",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.georoutes#ValidationExceptionField": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Validation Exception Field.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The error message.</p>",
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to satisfy the constraints specified by the Amazon Location\n         service.</p>"
      }
    },
    "com.amazonaws.georoutes#ValidationExceptionFieldList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#ValidationExceptionField"
      }
    },
    "com.amazonaws.georoutes#ValidationExceptionReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "UNKNOWN_OPERATION",
            "value": "UnknownOperation",
            "documentation": "No such operation is supported."
          },
          {
            "name": "MISSING",
            "value": "Missing",
            "documentation": "The required input is missing."
          },
          {
            "name": "CANNOT_PARSE",
            "value": "CannotParse",
            "documentation": "    The input cannot be parsed. For example a required JSON document, ARN identifier,\n    date value, or numeric field cannot be parsed.\n"
          },
          {
            "name": "FIELD_VALIDATION_FAILED",
            "value": "FieldValidationFailed",
            "documentation": "    The input is present and parsable, but it is otherwise invalid. For example, a\n    required numeric argument is outside the allowed range.\n"
          },
          {
            "name": "OTHER",
            "value": "Other",
            "documentation": "The input is invalid but no more specific reason is applicable."
          },
          {
            "name": "UNKNOWN_FIELD",
            "value": "UnknownField",
            "documentation": "No such field is supported."
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.georoutes#WaypointIndex": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAccessHours": {
      "type": "structure",
      "members": {
        "From": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAccessHoursEntry",
          "traits": {
            "smithy.api#documentation": "<p>Contains the ID of the starting waypoint in this connection.</p>",
            "smithy.api#required": {}
          }
        },
        "To": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAccessHoursEntry",
          "traits": {
            "smithy.api#documentation": "<p>Contains the ID of the ending waypoint in this connection.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Access hours corresponding to when a destination can be visited.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAccessHoursEntry": {
      "type": "structure",
      "members": {
        "DayOfWeek": {
          "target": "com.amazonaws.georoutes#DayOfWeek",
          "traits": {
            "smithy.api#documentation": "<p>Day of the week.</p>",
            "smithy.api#required": {}
          }
        },
        "TimeOfDay": {
          "target": "com.amazonaws.georoutes#TimeOfDay",
          "traits": {
            "smithy.api#documentation": "<p>Time of the day.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Hours of entry.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAvoidanceArea": {
      "type": "structure",
      "members": {
        "Geometry": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAvoidanceAreaGeometry",
          "traits": {
            "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAvoidanceAreaGeometry": {
      "type": "structure",
      "members": {
        "BoundingBox": {
          "target": "com.amazonaws.georoutes#BoundingBox",
          "traits": {
            "smithy.api#documentation": "<p>Geometry defined as a bounding box. The first pair represents the X and Y coordinates\n         (longitude and latitude,) of the southwest corner of the bounding box; the second pair\n         represents the X and Y coordinates (longitude and latitude) of the northeast corner.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Geometry of the area to be avoided.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAvoidanceAreaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationAvoidanceArea"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationAvoidanceOptions": {
      "type": "structure",
      "members": {
        "Areas": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAvoidanceAreaList",
          "traits": {
            "smithy.api#documentation": "<p>Areas to be avoided.</p>",
            "smithy.api#length": {
              "max": 20
            }
          }
        },
        "CarShuttleTrains": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoidance options for cars-shuttles-trains.</p>"
          }
        },
        "ControlledAccessHighways": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid controlled access highways while calculating the route.</p>"
          }
        },
        "DirtRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid dirt roads while calculating the route.</p>"
          }
        },
        "Ferries": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoidance options for ferries.</p>"
          }
        },
        "TollRoads": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoids roads where the specified toll transponders are the only mode of payment.</p>"
          }
        },
        "Tunnels": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid tunnels while calculating the route.</p>"
          }
        },
        "UTurns": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid U-turns for calculation on highways and motorways.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies options for areas to avoid. This is a best-effort avoidance setting, meaning\n         the router will try to honor the avoidance preferences but may still include restricted\n         areas if no feasible alternative route exists. If avoidance options are not followed, the\n         response will indicate that the avoidance criteria were violated.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationClusteringAlgorithm": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DRIVING_DISTANCE",
            "value": "DrivingDistance"
          },
          {
            "name": "TOPOLOGY_SEGMENT",
            "value": "TopologySegment"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationClusteringOptions": {
      "type": "structure",
      "members": {
        "Algorithm": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationClusteringAlgorithm",
          "traits": {
            "smithy.api#documentation": "<p>The algorithm to be used. <code>DrivingDistance</code> assigns all the waypoints that\n         are within driving distance of each other into a single cluster.\n            <code>TopologySegment</code> assigns all the waypoints that are within the same topology\n         segment into a single cluster. A Topology segment is a linear stretch of road between two\n         junctions.</p>",
            "smithy.api#required": {}
          }
        },
        "DrivingDistanceOptions": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationDrivingDistanceOptions",
          "traits": {
            "smithy.api#documentation": "<p>Driving distance options to be used when the clustering algorithm is\n         DrivingDistance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options for WaypointOptimizationClustering.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationConnection": {
      "type": "structure",
      "members": {
        "Distance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Distance of the step.</p>",
            "smithy.api#required": {}
          }
        },
        "From": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>contains the ID of the starting waypoint in this connection.</p>",
            "smithy.api#required": {}
          }
        },
        "RestDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Resting time before the driver can continue driving.</p>",
            "smithy.api#required": {}
          }
        },
        "To": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>Contains the ID of the ending waypoint in this connection.</p>",
            "smithy.api#required": {}
          }
        },
        "TravelDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Total duration.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "WaitDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Duration of a wait step.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This contains information such as distance and duration from one waypoint to the next\n         waypoint in the sequence.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationConnectionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationConnection"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationConstraint": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "ACCESS_HOURS",
            "value": "AccessHours"
          },
          {
            "name": "APPOINTMENT_TIME",
            "value": "AppointmentTime"
          },
          {
            "name": "BEFORE",
            "value": "Before"
          },
          {
            "name": "HEADING",
            "value": "Heading"
          },
          {
            "name": "SERVICE_DURATION",
            "value": "ServiceDuration"
          },
          {
            "name": "SIDE_OF_STREET",
            "value": "SideOfStreet"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationDestinationOptions": {
      "type": "structure",
      "members": {
        "AccessHours": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAccessHours",
          "traits": {
            "smithy.api#documentation": "<p>Access hours corresponding to when a waypoint can be visited.</p>"
          }
        },
        "AppointmentTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Appointment time at the destination.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>The waypoint Id.</p>"
          }
        },
        "ServiceDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Service time spent at the destination. At an appointment, the service time should be the\n         appointment duration.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Destination related options.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationDriverOptions": {
      "type": "structure",
      "members": {
        "RestCycles": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationRestCycles",
          "traits": {
            "smithy.api#documentation": "<p>Driver work-rest schedules defined by a short and long cycle. A rest needs to be taken\n         after the short work duration. The short cycle can be repeated until you hit the long work\n         duration, at which point the long rest duration should be taken before restarting.</p>"
          }
        },
        "RestProfile": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationRestProfile",
          "traits": {
            "smithy.api#documentation": "<p>Pre defined rest profiles for a driver schedule. The only currently supported profile is\n         EU.</p>"
          }
        },
        "TreatServiceTimeAs": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationServiceTimeTreatment",
          "traits": {
            "smithy.api#documentation": "<p>If the service time provided at a waypoint/destination should be considered as rest or\n         work. This contributes to the total time breakdown returned within the response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Driver related options.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationDrivingDistanceOptions": {
      "type": "structure",
      "members": {
        "DrivingDistance": {
          "target": "com.amazonaws.georoutes#DistanceMeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>DrivingDistance assigns all the waypoints that are within driving distance of each other\n         into a single cluster.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Driving distance related options.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationExclusionOptions": {
      "type": "structure",
      "members": {
        "Countries": {
          "target": "com.amazonaws.georoutes#CountryCodeList",
          "traits": {
            "smithy.api#documentation": "<p>List of countries to be avoided defined by two-letter or three-letter country\n         codes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies strict exclusion options for the route calculation. This setting mandates that\n         the router will avoid any routes that include the specified options, rather than merely\n         attempting to minimize them.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationFailedConstraint": {
      "type": "structure",
      "members": {
        "Constraint": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationConstraint",
          "traits": {
            "smithy.api#documentation": "<p>The failed constraint.</p>"
          }
        },
        "Reason": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Reason for the failed constraint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The failed constraint.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationFailedConstraintList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationFailedConstraint"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationHazardousCargoType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "COMBUSTIBLE",
            "value": "Combustible"
          },
          {
            "name": "CORROSIVE",
            "value": "Corrosive"
          },
          {
            "name": "EXPLOSIVE",
            "value": "Explosive"
          },
          {
            "name": "FLAMMABLE",
            "value": "Flammable"
          },
          {
            "name": "GAS",
            "value": "Gas"
          },
          {
            "name": "HARMFUL_TO_WATER",
            "value": "HarmfulToWater"
          },
          {
            "name": "ORGANIC",
            "value": "Organic"
          },
          {
            "name": "OTHER",
            "value": "Other"
          },
          {
            "name": "POISON",
            "value": "Poison"
          },
          {
            "name": "POISONOUS_INHALATION",
            "value": "PoisonousInhalation"
          },
          {
            "name": "RADIOACTIVE",
            "value": "Radioactive"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationHazardousCargoTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationHazardousCargoType"
      },
      "traits": {
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationImpedingWaypoint": {
      "type": "structure",
      "members": {
        "FailedConstraints": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationFailedConstraintList",
          "traits": {
            "smithy.api#documentation": "<p>Failed constraints for an impeding waypoint.</p>",
            "smithy.api#required": {}
          }
        },
        "Id": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>The waypoint Id.</p>",
            "smithy.api#required": {}
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The impeding waypoint.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationImpedingWaypointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationImpedingWaypoint"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationOptimizedWaypoint": {
      "type": "structure",
      "members": {
        "ArrivalTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Estimated time of arrival at the destination.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>"
          }
        },
        "ClusterIndex": {
          "target": "com.amazonaws.georoutes#ClusterIndex",
          "traits": {
            "smithy.api#documentation": "<p>Index of the cluster the waypoint is associated with. The index is included in the response only if clustering was performed while processing the request.</p>"
          }
        },
        "DepartureTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Estimated time of departure from thr origin.</p>\n         <p>Time format:<code>YYYY-MM-DDThh:mm:ss.sssZ | YYYY-MM-DDThh:mm:ss.sss+hh:mm</code>\n         </p>\n         <p>Examples:</p>\n         <p>\n            <code>2020-04-22T17:57:24Z</code>\n         </p>\n         <p>\n            <code>2020-04-22T17:57:24+02:00</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "Id": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>The waypoint Id.</p>",
            "smithy.api#required": {}
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The optimized waypoint.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationOptimizedWaypointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationOptimizedWaypoint"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationOriginOptions": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>The Origin Id.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Origin related options.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationPedestrianOptions": {
      "type": "structure",
      "members": {
        "Speed": {
          "target": "com.amazonaws.georoutes#SpeedKilometersPerHour",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Walking speed.</p>\n         <p>\n            <b>Unit</b>: <code>KilometersPerHour</code>\n         </p>",
            "smithy.api#range": {
              "min": 1.8,
              "max": 7.2
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to a pedestrian.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationRestCycleDurations": {
      "type": "structure",
      "members": {
        "RestDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Resting phase of the cycle.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "WorkDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Working phase of the cycle.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Driver work-rest schedules defined by a short and long cycle. A rest needs to be taken\n         after the short work duration. The short cycle can be repeated until you hit the long work\n         duration, at which point the long rest duration should be taken before restarting.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationRestCycles": {
      "type": "structure",
      "members": {
        "LongCycle": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationRestCycleDurations",
          "traits": {
            "smithy.api#documentation": "<p>Long cycle for a driver work-rest schedule.</p>",
            "smithy.api#required": {}
          }
        },
        "ShortCycle": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationRestCycleDurations",
          "traits": {
            "smithy.api#documentation": "<p>Short cycle for a driver work-rest schedule</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Resting phase of the cycle.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationRestProfile": {
      "type": "structure",
      "members": {
        "Profile": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Pre defined rest profiles for a driver schedule. The only currently supported profile is\n         EU.</p>",
            "smithy.api#length": {
              "min": 2,
              "max": 2
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Pre defined rest profiles for a driver schedule. The only currently supported profile is\n         EU.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationSequencingObjective": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "FASTEST_ROUTE",
            "value": "FastestRoute"
          },
          {
            "name": "SHORTEST_ROUTE",
            "value": "ShortestRoute"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationServiceTimeTreatment": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "REST",
            "value": "Rest"
          },
          {
            "name": "WORK",
            "value": "Work"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationSideOfStreetOptions": {
      "type": "structure",
      "members": {
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "UseWith": {
          "target": "com.amazonaws.georoutes#SideOfStreetMatchingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Strategy that defines when the side of street position should be used. AnyStreet will\n         always use the provided position.</p>\n         <p>Default Value: <code>DividedStreetOnly</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTimeBreakdown": {
      "type": "structure",
      "members": {
        "RestDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Resting phase of the cycle.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "ServiceDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Service time spent at the destination. At an appointment, the service time should be the\n         appointment duration.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "TravelDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Traveling phase of the cycle.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "WaitDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Waiting phase of the cycle.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Time breakdown for the sequence.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTrafficOptions": {
      "type": "structure",
      "members": {
        "Usage": {
          "target": "com.amazonaws.georoutes#TrafficUsage",
          "traits": {
            "smithy.api#documentation": "<p>Determines if traffic should be used or ignored while calculating the route.</p>\n         <p>Default Value: <code>UseTrafficData</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Options related to traffic.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTrailerOptions": {
      "type": "structure",
      "members": {
        "TrailerCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Number of trailers attached to the vehicle.</p>\n         <p>Default Value: <code>0</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 255
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTravelMode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CAR",
            "value": "Car"
          },
          {
            "name": "PEDESTRIAN",
            "value": "Pedestrian"
          },
          {
            "name": "SCOOTER",
            "value": "Scooter"
          },
          {
            "name": "TRUCK",
            "value": "Truck"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTravelModeOptions": {
      "type": "structure",
      "members": {
        "Pedestrian": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationPedestrianOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Pedestrian\"</p>"
          }
        },
        "Truck": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTruckOptions",
          "traits": {
            "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode related options for the provided travel mode.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTruckOptions": {
      "type": "structure",
      "members": {
        "GrossWeight": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Gross weight of the vehicle including trailers, and goods at capacity.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "HazardousCargos": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationHazardousCargoTypeList",
          "traits": {
            "smithy.api#documentation": "<p>List of Hazardous cargo contained in the vehicle.</p>"
          }
        },
        "Height": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Height of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        },
        "Length": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Length of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 30000
            }
          }
        },
        "Trailer": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTrailerOptions",
          "traits": {
            "smithy.api#documentation": "<p>Trailer options corresponding to the vehicle.</p>"
          }
        },
        "TruckType": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationTruckType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the truck.</p>"
          }
        },
        "TunnelRestrictionCode": {
          "target": "com.amazonaws.georoutes#TunnelRestrictionCode",
          "traits": {
            "smithy.api#documentation": "<p>The tunnel restriction code.</p>\n         <p>Tunnel categories in this list indicate the restrictions which apply to certain tunnels\n         in Great Britain. They relate to the types of dangerous goods that can be transported\n         through them.</p>\n         <ul>\n            <li>\n               <p>\n                  <i>Tunnel Category B</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Limited risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Few restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category C</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Medium risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Some restrictions</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category D</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: High risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Many restrictions occur</p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>\n                  <i>Tunnel Category E</i>\n               </p>\n               <ul>\n                  <li>\n                     <p>\n                        <i>Risk Level</i>: Very high risk</p>\n                  </li>\n                  <li>\n                     <p>\n                        <i>Restrictions</i>: Restricted tunnel</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>"
          }
        },
        "WeightPerAxle": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Heaviest weight per axle irrespective of the axle type or the axle group. Meant for\n         usage in countries where the differences in axle types or axle groups are not\n         distinguished.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Width": {
          "target": "com.amazonaws.georoutes#DimensionCentimeters",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Width of the vehicle.</p>\n         <p>\n            <b>Unit</b>: <code>centimeters</code>\n         </p>",
            "smithy.api#range": {
              "min": 0,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Travel mode options when the provided travel mode is \"Truck\"</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationTruckType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "STRAIGHT_TRUCK",
            "value": "StraightTruck"
          },
          {
            "name": "TRACTOR",
            "value": "Tractor"
          }
        ]
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationWaypoint": {
      "type": "structure",
      "members": {
        "AccessHours": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationAccessHours",
          "traits": {
            "smithy.api#documentation": "<p>Access hours corresponding to when a waypoint can be visited.</p>"
          }
        },
        "AppointmentTime": {
          "target": "com.amazonaws.georoutes#TimestampWithTimezoneOffset",
          "traits": {
            "smithy.api#documentation": "<p>Appointment time at the waypoint.</p>"
          }
        },
        "Before": {
          "target": "com.amazonaws.georoutes#BeforeWaypointsList",
          "traits": {
            "smithy.api#documentation": "<p>Constraint defining what waypoints are to be visited after this waypoint.</p>"
          }
        },
        "Heading": {
          "target": "com.amazonaws.georoutes#Heading",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>GPS Heading at the position.</p>"
          }
        },
        "Id": {
          "target": "com.amazonaws.georoutes#WaypointId",
          "traits": {
            "smithy.api#documentation": "<p>The waypoint Id.</p>"
          }
        },
        "Position": {
          "target": "com.amazonaws.georoutes#Position",
          "traits": {
            "smithy.api#documentation": "<p>Position defined as <code>[longitude, latitude]</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "ServiceDuration": {
          "target": "com.amazonaws.georoutes#DurationSeconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Service time spent at the waypoint. At an appointment, the service time should be the\n         appointment duration.</p>\n         <p>\n            <b>Unit</b>: <code>seconds</code>\n         </p>"
          }
        },
        "SideOfStreet": {
          "target": "com.amazonaws.georoutes#WaypointOptimizationSideOfStreetOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options to configure matching the provided position to a side of the street.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Waypoint between the Origin and Destination.</p>"
      }
    },
    "com.amazonaws.georoutes#WaypointOptimizationWaypointList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.georoutes#WaypointOptimizationWaypoint"
      }
    },
    "com.amazonaws.georoutes#WeightKilograms": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 4294967295
        }
      }
    },
    "com.amazonaws.georoutes#WeightPerAxleGroup": {
      "type": "structure",
      "members": {
        "Single": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Weight for single axle group.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Tandem": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Weight for tandem axle group.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Triple": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Weight for triple axle group.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Quad": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Weight for quad axle group.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        },
        "Quint": {
          "target": "com.amazonaws.georoutes#WeightKilograms",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Weight for quad quint group.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the total weight for the specified axle group. Meant for usage in countries\n         that have different regulations based on the axle group type.</p>\n         <p>\n            <b>Unit</b>: <code>Kilograms</code>\n         </p>"
      }
    }
  }
}
