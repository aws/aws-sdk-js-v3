{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.omics#AccessDeniedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.omics#ActivateReadSetFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#ReadSetActivationJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The filter's status.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A read set activation job filter.</p>"
      }
    },
    "com.amazonaws.omics#ActivateReadSetJobItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ActivationJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetActivationJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A read set activation job.</p>"
      }
    },
    "com.amazonaws.omics#ActivateReadSetJobList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ActivateReadSetJobItem"
      }
    },
    "com.amazonaws.omics#ActivateReadSetSourceItem": {
      "type": "structure",
      "members": {
        "readSetId": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The source's read set ID.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetActivationJobItemStatus",
          "traits": {
            "smithy.api#documentation": "<p>The source's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The source's status message.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for a read set activation job.</p>"
      }
    },
    "com.amazonaws.omics#ActivateReadSetSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ActivateReadSetSourceItem"
      }
    },
    "com.amazonaws.omics#ActivationJobId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#AnnotationImportItemDetail": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "jobStatus": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The item's job status.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an imported annotation item.</p>"
      }
    },
    "com.amazonaws.omics#AnnotationImportItemDetails": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#AnnotationImportItemDetail"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#AnnotationImportItemSource": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for an annotation import job.</p>"
      }
    },
    "com.amazonaws.omics#AnnotationImportItemSources": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#AnnotationImportItemSource"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#AnnotationImportJob": {
      "type": "resource",
      "identifiers": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#StartAnnotationImportJob"
      },
      "read": {
        "target": "com.amazonaws.omics#GetAnnotationImportJob"
      },
      "delete": {
        "target": "com.amazonaws.omics#CancelAnnotationImportJob"
      },
      "list": {
        "target": "com.amazonaws.omics#ListAnnotationImportJobs"
      }
    },
    "com.amazonaws.omics#AnnotationImportJobItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination annotation store.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "completionTime": {
          "target": "com.amazonaws.omics#CompletionTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>"
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An annotation import job.</p>"
      }
    },
    "com.amazonaws.omics#AnnotationImportJobItems": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#AnnotationImportJobItem"
      }
    },
    "com.amazonaws.omics#AnnotationStore": {
      "type": "resource",
      "identifiers": {
        "name": {
          "target": "smithy.api#String"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateAnnotationStore"
      },
      "read": {
        "target": "com.amazonaws.omics#GetAnnotationStore"
      },
      "update": {
        "target": "com.amazonaws.omics#UpdateAnnotationStore"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteAnnotationStore"
      },
      "list": {
        "target": "com.amazonaws.omics#ListAnnotationStores"
      }
    },
    "com.amazonaws.omics#AnnotationStoreItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "storeArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "storeFormat": {
          "target": "com.amazonaws.omics#StoreFormat",
          "traits": {
            "smithy.api#documentation": "<p>The store's file format.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>The store's creation time.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#StatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The store's status message.</p>",
            "smithy.api#required": {}
          }
        },
        "storeSizeBytes": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The store's size in bytes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An annotation store.</p>"
      }
    },
    "com.amazonaws.omics#AnnotationStoreItems": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#AnnotationStoreItem"
      }
    },
    "com.amazonaws.omics#AnnotationType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "GENERIC",
            "name": "GENERIC",
            "documentation": "Generic text file. No genomic information"
          },
          {
            "value": "CHR_POS",
            "name": "CHR_POS",
            "documentation": "Contains contig and 1-base position"
          },
          {
            "value": "CHR_POS_REF_ALT",
            "name": "CHR_POS_REF_ALT",
            "documentation": "Contains contig, 1-base position, ref and alt allele information"
          },
          {
            "value": "CHR_START_END_ONE_BASE",
            "name": "CHR_START_END_ONE_BASE",
            "documentation": "Contains contig, start, and end positions. Coordinates are 1-based"
          },
          {
            "value": "CHR_START_END_REF_ALT_ONE_BASE",
            "name": "CHR_START_END_REF_ALT_ONE_BASE",
            "documentation": "Contains contig, start, end, ref and alt allele information. Coordinates are 1-based"
          },
          {
            "value": "CHR_START_END_ZERO_BASE",
            "name": "CHR_START_END_ZERO_BASE",
            "documentation": "Contains contig, start, and end positions. Coordinates are 0-based"
          },
          {
            "value": "CHR_START_END_REF_ALT_ZERO_BASE",
            "name": "CHR_START_END_REF_ALT_ZERO_BASE",
            "documentation": "Contains contig, start, end, ref and alt allele information. Coordinates are 0-based"
          }
        ]
      }
    },
    "com.amazonaws.omics#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:([^:\n]*):([^:\n]*):([^:\n]*):([0-9]{12}):([^:\n]*)$"
      }
    },
    "com.amazonaws.omics#BatchDeleteReadSet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#BatchDeleteReadSetRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#BatchDeleteReadSetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes one or more read sets.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/readset/batch/delete"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#BatchDeleteReadSetRequest": {
      "type": "structure",
      "members": {
        "ids": {
          "target": "com.amazonaws.omics#ReadSetIdList",
          "traits": {
            "smithy.api#documentation": "<p>The read sets' IDs.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read sets' sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#BatchDeleteReadSetResponse": {
      "type": "structure",
      "members": {
        "errors": {
          "target": "com.amazonaws.omics#ReadSetBatchErrorList",
          "traits": {
            "smithy.api#documentation": "<p>Errors returned by individual delete operations.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CancelAnnotationImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CancelAnnotationImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CancelAnnotationImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels an annotation import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/import/annotation/{jobId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#CancelAnnotationImportRequest": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CancelAnnotationImportResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CancelRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CancelRunRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels a run.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/run/{id}/cancel",
          "code": 202
        }
      }
    },
    "com.amazonaws.omics#CancelRunRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CancelVariantImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CancelVariantImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CancelVariantImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels a variant import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/import/variant/{jobId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#CancelVariantImportRequest": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CancelVariantImportResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#CommentChar": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#CompletionTime": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#ConflictException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request cannot be applied to the target resource in its current state.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.omics#CreateAnnotationStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateAnnotationStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateAnnotationStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an annotation store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/annotationStore",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#CreateAnnotationStoreRequest": {
      "type": "structure",
      "members": {
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The genome reference for the store's annotations.</p>"
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#pattern": "^([a-z]){1}([a-z0-9_]){2,254}$"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the store.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>Server-side encryption (SSE) settings for the store.</p>"
          }
        },
        "storeFormat": {
          "target": "com.amazonaws.omics#StoreFormat",
          "traits": {
            "smithy.api#documentation": "<p>The annotation file format of the store.</p>",
            "smithy.api#required": {}
          }
        },
        "storeOptions": {
          "target": "com.amazonaws.omics#StoreOptions",
          "traits": {
            "smithy.api#documentation": "<p>File parsing options for the annotation store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateAnnotationStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>"
          }
        },
        "storeFormat": {
          "target": "com.amazonaws.omics#StoreFormat",
          "traits": {
            "smithy.api#documentation": "<p>The annotation file format of the store.</p>"
          }
        },
        "storeOptions": {
          "target": "com.amazonaws.omics#StoreOptions",
          "traits": {
            "smithy.api#documentation": "<p>The store's file parsing options.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreateReferenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateReferenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateReferenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#conditionKeys": ["aws:RequestTag/${TagKey}", "aws:TagKeys"],
        "smithy.api#documentation": "<p>Creates a reference store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/referencestore"
        }
      }
    },
    "com.amazonaws.omics#CreateReferenceStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#ReferenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>Server-side encryption (SSE) settings for the store.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the store.</p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that requests don't run multiple times, specify a unique token for each request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateReferenceStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReferenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's SSE settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreateRunGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateRunGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateRunGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a run group.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/runGroup",
          "code": 201
        }
      }
    },
    "com.amazonaws.omics#CreateRunGroupRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#RunGroupName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the group.</p>"
          }
        },
        "maxCpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of CPUs to use in the group.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxRuns": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of concurrent runs for the group.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxDuration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A max duration for the group.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the group.</p>"
          }
        },
        "requestId": {
          "target": "com.amazonaws.omics#RunGroupRequestId",
          "traits": {
            "smithy.api#documentation": "<p>A request ID for the group.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateRunGroupResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>The group's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The group's ID.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the run group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreateSequenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateSequenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateSequenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#conditionKeys": ["aws:RequestTag/${TagKey}", "aws:TagKeys"],
        "smithy.api#documentation": "<p>Creates a sequence store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore"
        }
      }
    },
    "com.amazonaws.omics#CreateSequenceStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#SequenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#SequenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>Server-side encryption (SSE) settings for the store.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the store.</p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that requests don't run multiple times, specify a unique token for each request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateSequenceStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#SequenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#SequenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#SequenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's SSE settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreateVariantStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateVariantStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateVariantStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a variant store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/variantStore",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#CreateVariantStoreRequest": {
      "type": "structure",
      "members": {
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The genome reference for the store's variants.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#pattern": "^([a-z]){1}([a-z0-9_]){2,254}$"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the store.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>Server-side encryption (SSE) settings for the store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateVariantStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreateWorkflow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#CreateWorkflowRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#CreateWorkflowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a workflow.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/workflow",
          "code": 201
        }
      }
    },
    "com.amazonaws.omics#CreateWorkflowRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#WorkflowName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the workflow.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#WorkflowDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the workflow.</p>"
          }
        },
        "engine": {
          "target": "com.amazonaws.omics#WorkflowEngine",
          "traits": {
            "smithy.api#documentation": "<p>An engine for the workflow.</p>"
          }
        },
        "definitionZip": {
          "target": "smithy.api#Blob",
          "traits": {
            "smithy.api#documentation": "<p>A ZIP archive for the workflow.</p>"
          }
        },
        "definitionUri": {
          "target": "com.amazonaws.omics#WorkflowDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The URI of a definition for the workflow.</p>"
          }
        },
        "main": {
          "target": "com.amazonaws.omics#WorkflowMain",
          "traits": {
            "smithy.api#documentation": "<p>The path of the main definition file for the workflow.</p>"
          }
        },
        "parameterTemplate": {
          "target": "com.amazonaws.omics#WorkflowParameterTemplate",
          "traits": {
            "smithy.api#documentation": "<p>A parameter template for the workflow.</p>"
          }
        },
        "storageCapacity": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A storage capacity for the workflow.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the workflow.</p>"
          }
        },
        "requestId": {
          "target": "com.amazonaws.omics#WorkflowRequestId",
          "traits": {
            "smithy.api#documentation": "<p>A request ID for the workflow.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#CreateWorkflowResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#WorkflowArn",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#WorkflowStatus",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's status.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#CreationTime": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#DeleteAnnotationStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteAnnotationStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#DeleteAnnotationStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an annotation store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/annotationStore/{name}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteAnnotationStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "smithy.api#PrimitiveBoolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether to force deletion.</p>",
            "smithy.api#httpQuery": "force"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteAnnotationStoreResponse": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#DeleteReference": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteReferenceRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#DeleteReferenceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a genome reference.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/referencestore/{referenceStoreId}/reference/{id}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteReferenceRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "referenceId"
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteReferenceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#DeleteReferenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteReferenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#DeleteReferenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a genome reference store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/referencestore/{id}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteReferenceStoreRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "referenceStoreId"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteReferenceStoreResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#DeleteRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteRunRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a workflow run.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/run/{id}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteRunGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteRunGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a workflow run group.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/runGroup/{id}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteRunGroupRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The run group's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteRunRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteSequenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteSequenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#DeleteSequenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a sequence store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/sequencestore/{id}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteSequenceStoreRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The sequence store's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "sequenceStoreId"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteSequenceStoreResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#DeleteVariantStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteVariantStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#DeleteVariantStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a variant store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/variantStore/{name}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteVariantStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "smithy.api#PrimitiveBoolean",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether to force deletion.</p>",
            "smithy.api#httpQuery": "force"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#DeleteVariantStoreResponse": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#DeleteWorkflow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#DeleteWorkflowRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a workflow.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/workflow/{id}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#DeleteWorkflowRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#Encoding": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.omics#EncryptionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "KMS",
            "name": "KMS",
            "documentation": "KMS"
          }
        ]
      }
    },
    "com.amazonaws.omics#EscapeChar": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#EscapeQuotes": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.omics#ExportJobId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#ExportReadSet": {
      "type": "structure",
      "members": {
        "readSetId": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The set's ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A read set.</p>"
      }
    },
    "com.amazonaws.omics#ExportReadSetDetail": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The set's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetExportJobItemStatus",
          "traits": {
            "smithy.api#documentation": "<p>The set's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The set's status message.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a read set.</p>"
      }
    },
    "com.amazonaws.omics#ExportReadSetDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ExportReadSetDetail"
      }
    },
    "com.amazonaws.omics#ExportReadSetFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#ReadSetExportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An read set export job filter.</p>"
      }
    },
    "com.amazonaws.omics#ExportReadSetJobDetail": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ExportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "com.amazonaws.omics#S3Destination",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetExportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a read set export job.</p>"
      }
    },
    "com.amazonaws.omics#ExportReadSetJobDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ExportReadSetJobDetail"
      }
    },
    "com.amazonaws.omics#ExportReadSetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ExportReadSet"
      }
    },
    "com.amazonaws.omics#FileInformation": {
      "type": "structure",
      "members": {
        "totalParts": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The file's total parts.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 10000
            }
          }
        },
        "partSize": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The file's part size.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 5368709120
            }
          }
        },
        "contentLength": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The file's content length.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 5497558138880
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a file.</p>"
      }
    },
    "com.amazonaws.omics#FileType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "FASTQ",
            "name": "FASTQ"
          },
          {
            "value": "BAM",
            "name": "BAM"
          },
          {
            "value": "CRAM",
            "name": "CRAM"
          }
        ]
      }
    },
    "com.amazonaws.omics#FormatOptions": {
      "type": "union",
      "members": {
        "tsvOptions": {
          "target": "com.amazonaws.omics#TsvOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options for a TSV file.</p>"
          }
        },
        "vcfOptions": {
          "target": "com.amazonaws.omics#VcfOptions",
          "traits": {
            "smithy.api#documentation": "<p>Options for a VCF file.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Formatting options for a file.</p>"
      }
    },
    "com.amazonaws.omics#FormatToHeader": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.omics#FormatToHeaderKey"
      },
      "value": {
        "target": "smithy.api#String",
        "traits": {
          "smithy.api#length": {
            "min": 0,
            "max": 1000
          }
        }
      }
    },
    "com.amazonaws.omics#FormatToHeaderKey": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CHR",
            "name": "CHR"
          },
          {
            "value": "START",
            "name": "START"
          },
          {
            "value": "END",
            "name": "END"
          },
          {
            "value": "REF",
            "name": "REF"
          },
          {
            "value": "ALT",
            "name": "ALT"
          },
          {
            "value": "POS",
            "name": "POS"
          }
        ]
      }
    },
    "com.amazonaws.omics#GeneratedFrom": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#GetAnnotationImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetAnnotationImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetAnnotationImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about an annotation import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/import/annotation/{jobId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "AnnotationImportJobCreated": {
            "documentation": "Wait until an annotation import is completed",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetAnnotationImportRequest": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetAnnotationImportResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationName": {
          "target": "com.amazonaws.omics#StoreName",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination annotation store.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMsg",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "completionTime": {
          "target": "com.amazonaws.omics#CompletionTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#required": {}
          }
        },
        "items": {
          "target": "com.amazonaws.omics#AnnotationImportItemDetails",
          "traits": {
            "smithy.api#documentation": "<p>The job's imported items.</p>",
            "smithy.api#required": {}
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>",
            "smithy.api#required": {}
          }
        },
        "formatOptions": {
          "target": "com.amazonaws.omics#FormatOptions",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetAnnotationStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetAnnotationStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetAnnotationStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about an annotation store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/annotationStore/{name}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "AnnotationStoreCreated": {
            "documentation": "Wait until an annotation store is created",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "ACTIVE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CREATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "UPDATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "AnnotationStoreDeleted": {
            "documentation": "Wait until an annotation store is deleted.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetAnnotationStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetAnnotationStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "storeArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The store's tags.</p>",
            "smithy.api#required": {}
          }
        },
        "storeOptions": {
          "target": "com.amazonaws.omics#StoreOptions",
          "traits": {
            "smithy.api#documentation": "<p>The store's parsing options.</p>"
          }
        },
        "storeFormat": {
          "target": "com.amazonaws.omics#StoreFormat",
          "traits": {
            "smithy.api#documentation": "<p>The store's annotation file format.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#StatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>A status message.</p>",
            "smithy.api#required": {}
          }
        },
        "storeSizeBytes": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The store's size in bytes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReadSet": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReadSetRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReadSetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RangeNotSatisfiableException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a file from a read set.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{sequenceStoreId}/readset/{id}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetReadSetActivationJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReadSetActivationJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReadSetActivationJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a read set activation job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{sequenceStoreId}/activationjob/{id}"
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "ReadSetActivationJobCompleted": {
            "documentation": "Wait until a job is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED_WITH_FAILURES",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetReadSetActivationJobRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ActivationJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReadSetActivationJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ActivationJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetActivationJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#ActivateReadSetSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The job's sources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReadSetExportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReadSetExportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReadSetExportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a read set export job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{sequenceStoreId}/exportjob/{id}"
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "ReadSetExportJobCompleted": {
            "documentation": "Wait until a job is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED_WITH_FAILURES",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetReadSetExportJobRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.omics#ExportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReadSetExportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ExportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "com.amazonaws.omics#S3Destination",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetExportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "readSets": {
          "target": "com.amazonaws.omics#ExportReadSetDetailList",
          "traits": {
            "smithy.api#documentation": "<p>The job's read sets.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReadSetImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReadSetImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReadSetImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a read set import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{sequenceStoreId}/importjob/{id}"
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "ReadSetImportJobCompleted": {
            "documentation": "Wait until a job is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED_WITH_FAILURES",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetReadSetImportJobRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReadSetImportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#ImportReadSetSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The job's sources.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReadSetMetadata": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReadSetMetadataRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReadSetMetadataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets details about a read set.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{sequenceStoreId}/readset/{id}/metadata"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetReadSetMetadataRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "readSetId"
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReadSetMetadataResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReadSetArn",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "subjectId": {
          "target": "com.amazonaws.omics#SubjectId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's subject ID.</p>"
          }
        },
        "sampleId": {
          "target": "com.amazonaws.omics#SampleId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sample ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetStatus",
          "traits": {
            "smithy.api#documentation": "<p>The read set's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReadSetName",
          "traits": {
            "smithy.api#documentation": "<p>The read set's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReadSetDescription",
          "traits": {
            "smithy.api#documentation": "<p>The read set's description.</p>"
          }
        },
        "fileType": {
          "target": "com.amazonaws.omics#FileType",
          "traits": {
            "smithy.api#documentation": "<p>The read set's file type.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the read set was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "sequenceInformation": {
          "target": "com.amazonaws.omics#SequenceInformation",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence information.</p>"
          }
        },
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The read set's genome reference ARN.</p>"
          }
        },
        "files": {
          "target": "com.amazonaws.omics#ReadSetFiles",
          "traits": {
            "smithy.api#documentation": "<p>The read set's files.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReadSetRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "readSetId"
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "file": {
          "target": "com.amazonaws.omics#ReadSetFile",
          "traits": {
            "smithy.api#documentation": "<p>The file to retrieve.</p>",
            "smithy.api#httpQuery": "file"
          }
        },
        "partNumber": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The part number to retrieve.</p>",
            "smithy.api#httpQuery": "partNumber",
            "smithy.api#range": {
              "min": 1,
              "max": 10000
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReadSetResponse": {
      "type": "structure",
      "members": {
        "payload": {
          "target": "com.amazonaws.omics#ReadSetStreamingBlob",
          "traits": {
            "smithy.api#default": "",
            "smithy.api#documentation": "<p>The read set file payload.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReference": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReferenceRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReferenceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RangeNotSatisfiableException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a reference file.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/referencestore/{referenceStoreId}/reference/{id}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetReferenceImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReferenceImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReferenceImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a reference import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/referencestore/{referenceStoreId}/importjob/{id}"
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "ReferenceImportJobCompleted": {
            "documentation": "Wait until a job is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED_WITH_FAILURES",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetReferenceImportJobRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReferenceImportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#ImportReferenceSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The job's sources.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReferenceMetadata": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReferenceMetadataRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReferenceMetadataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a genome reference's metadata.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/referencestore/{referenceStoreId}/reference/{id}/metadata"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetReferenceMetadataRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "referenceId"
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's reference store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReferenceMetadataResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's reference store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "md5": {
          "target": "com.amazonaws.omics#Md5",
          "traits": {
            "smithy.api#documentation": "<p>The reference's MD5 checksum.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceStatus",
          "traits": {
            "smithy.api#documentation": "<p>The reference's status.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceName",
          "traits": {
            "smithy.api#documentation": "<p>The reference's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The reference's description.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the reference was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "updateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the reference was updated.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "files": {
          "target": "com.amazonaws.omics#ReferenceFiles",
          "traits": {
            "smithy.api#documentation": "<p>The reference's files.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReferenceRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "referenceId"
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "range": {
          "target": "com.amazonaws.omics#Range",
          "traits": {
            "smithy.api#documentation": "<p>The range to retrieve.</p>",
            "smithy.api#httpHeader": "Range"
          }
        },
        "partNumber": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The part number to retrieve.</p>",
            "smithy.api#httpQuery": "partNumber",
            "smithy.api#range": {
              "min": 1,
              "max": 10000
            },
            "smithy.api#required": {}
          }
        },
        "file": {
          "target": "com.amazonaws.omics#ReferenceFile",
          "traits": {
            "smithy.api#documentation": "<p>The file to retrieve.</p>",
            "smithy.api#httpQuery": "file"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReferenceResponse": {
      "type": "structure",
      "members": {
        "payload": {
          "target": "com.amazonaws.omics#ReferenceStreamingBlob",
          "traits": {
            "smithy.api#default": "",
            "smithy.api#documentation": "<p>The reference file payload.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetReferenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetReferenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetReferenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a reference store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/referencestore/{id}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetReferenceStoreRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "referenceStoreId"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetReferenceStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReferenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetRunRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetRunResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a workflow run.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/run/{id}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "RunRunning": {
            "documentation": "Wait until a run is running.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "RUNNING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "PENDING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STARTING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "RunCompleted": {
            "documentation": "Wait until a run is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "PENDING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STARTING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "RUNNING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STOPPING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetRunGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetRunGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetRunGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a workflow run group.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/runGroup/{id}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetRunGroupRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The group's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetRunGroupResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>The group's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The group's ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The group's name.</p>"
          }
        },
        "maxCpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The group's maximum number of CPUs to use.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxRuns": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of concurrent runs for the group.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxDuration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The group's maximum run duration.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#RunGroupTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the group was created.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The group's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetRunRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "export": {
          "target": "com.amazonaws.omics#RunExportList",
          "traits": {
            "smithy.api#documentation": "<p>The run's export format.</p>",
            "smithy.api#httpQuery": "export"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetRunResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunArn",
          "traits": {
            "smithy.api#documentation": "<p>The run's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#RunStatus",
          "traits": {
            "smithy.api#documentation": "<p>The run's status.</p>"
          }
        },
        "workflowId": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The run's workflow ID.</p>"
          }
        },
        "workflowType": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The run's workflow type.</p>"
          }
        },
        "runId": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RunRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The run's service role ARN.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunName",
          "traits": {
            "smithy.api#documentation": "<p>The run's name.</p>"
          }
        },
        "runGroupId": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The run's group ID.</p>"
          }
        },
        "priority": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The run's priority.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "definition": {
          "target": "com.amazonaws.omics#WorkflowDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The run's definition.</p>"
          }
        },
        "digest": {
          "target": "com.amazonaws.omics#WorkflowDigest",
          "traits": {
            "smithy.api#documentation": "<p>The run's digest.</p>"
          }
        },
        "parameters": {
          "target": "com.amazonaws.omics#RunParameters",
          "traits": {
            "smithy.api#documentation": "<p>The run's parameters.</p>"
          }
        },
        "storageCapacity": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The run's storage capacity.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "outputUri": {
          "target": "com.amazonaws.omics#RunOutputUri",
          "traits": {
            "smithy.api#documentation": "<p>The run's output URI.</p>"
          }
        },
        "logLevel": {
          "target": "com.amazonaws.omics#RunLogLevel",
          "traits": {
            "smithy.api#documentation": "<p>The run's log level.</p>"
          }
        },
        "resourceDigests": {
          "target": "com.amazonaws.omics#RunResourceDigests",
          "traits": {
            "smithy.api#documentation": "<p>The run's resource digests.</p>"
          }
        },
        "startedBy": {
          "target": "com.amazonaws.omics#RunStartedBy",
          "traits": {
            "smithy.api#documentation": "<p>Who started the run.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the run was created.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the run started.</p>"
          }
        },
        "stopTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The run's stop time.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#RunStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The run's status message.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The run's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetRunTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetRunTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetRunTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a workflow run task.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/run/{id}/task/{taskId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "TaskRunning": {
            "documentation": "Wait until a task is running.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "RUNNING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "PENDING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STARTING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "TaskCompleted": {
            "documentation": "Wait until a task is completed.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "PENDING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STARTING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "RUNNING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "STOPPING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetRunTaskRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The task's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.omics#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The task's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetRunTaskResponse": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.omics#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The task's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#TaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The task's status.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#TaskName",
          "traits": {
            "smithy.api#documentation": "<p>The task's name.</p>"
          }
        },
        "cpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The task's CPU usage.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "memory": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The task's memory setting.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the task was created.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The task's start time.</p>"
          }
        },
        "stopTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The task's stop time.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#TaskStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The task's status message.</p>"
          }
        },
        "logStream": {
          "target": "com.amazonaws.omics#TaskLogStream",
          "traits": {
            "smithy.api#documentation": "<p>The task's log stream.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetSequenceStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetSequenceStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetSequenceStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a sequence store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/sequencestore/{id}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#GetSequenceStoreRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {},
            "smithy.api#resourceIdentifier": "sequenceStoreId"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetSequenceStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#SequenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#SequenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#SequenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetVariantImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetVariantImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetVariantImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a variant import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/import/variant/{jobId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "VariantImportJobCreated": {
            "documentation": "Wait until variant import is completed",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "SUBMITTED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "IN_PROGRESS",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CANCELLED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetVariantImportRequest": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetVariantImportResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationName": {
          "target": "com.amazonaws.omics#StoreName",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination variant store.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMsg",
          "traits": {
            "smithy.api#documentation": "<p>The job's status message.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "completionTime": {
          "target": "com.amazonaws.omics#CompletionTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>"
          }
        },
        "items": {
          "target": "com.amazonaws.omics#VariantImportItemDetails",
          "traits": {
            "smithy.api#documentation": "<p>The job's items.</p>",
            "smithy.api#required": {}
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetVariantStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetVariantStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetVariantStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a variant store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/variantStore/{name}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "VariantStoreCreated": {
            "documentation": "Wait until a variant store is created",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "ACTIVE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CREATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "UPDATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "VariantStoreDeleted": {
            "documentation": "Wait until a variant store is deleted.",
            "minDelay": 30,
            "maxDelay": 600,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "errorType": "ResourceNotFoundException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetVariantStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetVariantStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "storeArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The store's tags.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#StatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The store's status message.</p>",
            "smithy.api#required": {}
          }
        },
        "storeSizeBytes": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The store's size in bytes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#GetWorkflow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#GetWorkflowRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#GetWorkflowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a workflow.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/workflow/{id}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "WorkflowActive": {
            "documentation": "Wait until a workflow is active.",
            "minDelay": 3,
            "maxDelay": 30,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "ACTIVE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "CREATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "UPDATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.omics#GetWorkflowRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "type": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's type.</p>",
            "smithy.api#httpQuery": "type"
          }
        },
        "export": {
          "target": "com.amazonaws.omics#WorkflowExportList",
          "traits": {
            "smithy.api#documentation": "<p>The export format for the workflow.</p>",
            "smithy.api#httpQuery": "export"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#GetWorkflowResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#WorkflowArn",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#WorkflowStatus",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's status.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's type.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#WorkflowName",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#WorkflowDescription",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's description.</p>"
          }
        },
        "engine": {
          "target": "com.amazonaws.omics#WorkflowEngine",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's engine.</p>"
          }
        },
        "definition": {
          "target": "com.amazonaws.omics#WorkflowDefinition",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's definition.</p>"
          }
        },
        "main": {
          "target": "com.amazonaws.omics#WorkflowMain",
          "traits": {
            "smithy.api#documentation": "<p>The path of the main definition file for the workflow.</p>"
          }
        },
        "digest": {
          "target": "com.amazonaws.omics#WorkflowDigest",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's digest.</p>"
          }
        },
        "parameterTemplate": {
          "target": "com.amazonaws.omics#WorkflowParameterTemplate",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's parameter template.</p>"
          }
        },
        "storageCapacity": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's storage capacity.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#WorkflowTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the workflow was created.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#WorkflowStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's status message.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#Header": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.omics#IdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ResourceIdentifier"
      }
    },
    "com.amazonaws.omics#ImportJobId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#ImportReadSetFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#ReadSetImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for import read set jobs.</p>"
      }
    },
    "com.amazonaws.omics#ImportReadSetJobItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An import read set job.</p>"
      }
    },
    "com.amazonaws.omics#ImportReadSetJobList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ImportReadSetJobItem"
      }
    },
    "com.amazonaws.omics#ImportReadSetSourceItem": {
      "type": "structure",
      "members": {
        "sourceFiles": {
          "target": "com.amazonaws.omics#SourceFiles",
          "traits": {
            "smithy.api#documentation": "<p>The source files' location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceFileType": {
          "target": "com.amazonaws.omics#FileType",
          "traits": {
            "smithy.api#documentation": "<p>The source's file type.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetImportJobItemStatus",
          "traits": {
            "smithy.api#documentation": "<p>The source's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The source's status message.</p>"
          }
        },
        "subjectId": {
          "target": "com.amazonaws.omics#SubjectId",
          "traits": {
            "smithy.api#documentation": "<p>The source's subject ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sampleId": {
          "target": "com.amazonaws.omics#SampleId",
          "traits": {
            "smithy.api#documentation": "<p>The source's sample ID.</p>",
            "smithy.api#required": {}
          }
        },
        "generatedFrom": {
          "target": "com.amazonaws.omics#GeneratedFrom",
          "traits": {
            "smithy.api#documentation": "<p>Where the source originated.</p>"
          }
        },
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The source's genome reference ARN.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReadSetName",
          "traits": {
            "smithy.api#documentation": "<p>The source's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReadSetDescription",
          "traits": {
            "smithy.api#documentation": "<p>The source's description.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The source's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for an import read set job.</p>"
      }
    },
    "com.amazonaws.omics#ImportReadSetSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ImportReadSetSourceItem"
      }
    },
    "com.amazonaws.omics#ImportReferenceFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#ReferenceImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for import references.</p>"
      }
    },
    "com.amazonaws.omics#ImportReferenceJobItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "completionTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An import reference job.</p>"
      }
    },
    "com.amazonaws.omics#ImportReferenceJobList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ImportReferenceJobItem"
      }
    },
    "com.amazonaws.omics#ImportReferenceSourceItem": {
      "type": "structure",
      "members": {
        "sourceFile": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceImportJobItemStatus",
          "traits": {
            "smithy.api#documentation": "<p>The source's status.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#JobStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The source's status message.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceName",
          "traits": {
            "smithy.api#documentation": "<p>The source's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The source's description.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The source's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An genome reference source.</p>"
      }
    },
    "com.amazonaws.omics#ImportReferenceSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ImportReferenceSourceItem"
      }
    },
    "com.amazonaws.omics#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An unexpected error occurred. Try the request again.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.omics#JobStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUBMITTED",
            "name": "SUBMITTED",
            "documentation": "The Job has been submitted to run"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS",
            "documentation": "The Job is executing"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED",
            "documentation": "The Job was cancelled"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED",
            "documentation": "The Job has completed"
          },
          {
            "value": "FAILED",
            "name": "FAILED",
            "documentation": "The Job failed"
          }
        ]
      }
    },
    "com.amazonaws.omics#JobStatusMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#JobStatusMsg": {
      "type": "string"
    },
    "com.amazonaws.omics#LineSep": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.omics#ListAnnotationImportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListAnnotationImportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListAnnotationImportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of annotation import jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/import/annotations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "annotationImportJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListAnnotationImportJobsFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "storeName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A store name to filter on.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for annotation import jobs.</p>"
      }
    },
    "com.amazonaws.omics#ListAnnotationImportJobsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "ids": {
          "target": "com.amazonaws.omics#IdList",
          "traits": {
            "smithy.api#documentation": "<p>IDs of annotation import jobs to retrieve.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 20
            }
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken",
            "smithy.api#length": {
              "min": 1,
              "max": 10000
            }
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ListAnnotationImportJobsFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListAnnotationImportJobsResponse": {
      "type": "structure",
      "members": {
        "annotationImportJobs": {
          "target": "com.amazonaws.omics#AnnotationImportJobItems",
          "traits": {
            "smithy.api#documentation": "<p>A list of jobs.</p>"
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListAnnotationStores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListAnnotationStoresRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListAnnotationStoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of annotation stores.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/annotationStores",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "annotationStores"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListAnnotationStoresFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for annotation stores.</p>"
      }
    },
    "com.amazonaws.omics#ListAnnotationStoresRequest": {
      "type": "structure",
      "members": {
        "ids": {
          "target": "com.amazonaws.omics#IdList",
          "traits": {
            "smithy.api#documentation": "<p>IDs of stores to list.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 20
            }
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of stores to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken",
            "smithy.api#length": {
              "min": 1,
              "max": 10000
            }
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ListAnnotationStoresFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListAnnotationStoresResponse": {
      "type": "structure",
      "members": {
        "annotationStores": {
          "target": "com.amazonaws.omics#AnnotationStoreItems",
          "traits": {
            "smithy.api#documentation": "<p>A list of stores.</p>"
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReadSetActivationJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReadSetActivationJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReadSetActivationJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of read set activation jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/activationjobs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "activationJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReadSetActivationJobsRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of read set activation jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ActivateReadSetFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReadSetActivationJobsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "activationJobs": {
          "target": "com.amazonaws.omics#ActivateReadSetJobList",
          "traits": {
            "smithy.api#documentation": "<p>A list of jobs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReadSetExportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReadSetExportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReadSetExportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of read set export jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/exportjobs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "exportJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReadSetExportJobsRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The jobs' sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ExportReadSetFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReadSetExportJobsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "exportJobs": {
          "target": "com.amazonaws.omics#ExportReadSetJobDetailList",
          "traits": {
            "smithy.api#documentation": "<p>A list of jobs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReadSetImportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReadSetImportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReadSetImportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of read set import jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/importjobs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "importJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReadSetImportJobsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The jobs' sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ImportReadSetFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReadSetImportJobsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "importJobs": {
          "target": "com.amazonaws.omics#ImportReadSetJobList",
          "traits": {
            "smithy.api#documentation": "<p>A list of jobs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReadSets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReadSetsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReadSetsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of read sets.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/readsets"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "readSets"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReadSetsRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The jobs' sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of read sets to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ReadSetFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReadSetsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "readSets": {
          "target": "com.amazonaws.omics#ReadSetList",
          "traits": {
            "smithy.api#documentation": "<p>A list of read sets.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReferenceImportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReferenceImportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReferenceImportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of reference import jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/referencestore/{referenceStoreId}/importjobs"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "importJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReferenceImportJobsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ImportReferenceFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReferenceImportJobsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "importJobs": {
          "target": "com.amazonaws.omics#ImportReferenceJobList",
          "traits": {
            "smithy.api#documentation": "<p>A lis of jobs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReferenceStores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReferenceStoresRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReferenceStoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of reference stores.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/referencestores"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "referenceStores"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReferenceStoresRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of stores to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ReferenceStoreFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReferenceStoresResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "referenceStores": {
          "target": "com.amazonaws.omics#ReferenceStoreDetailList",
          "traits": {
            "smithy.api#documentation": "<p>A list of reference stores.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListReferences": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListReferencesRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListReferencesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of references.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/referencestore/{referenceStoreId}/references"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "references"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListReferencesRequest": {
      "type": "structure",
      "members": {
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The references' reference store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of references to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ReferenceFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListReferencesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "references": {
          "target": "com.amazonaws.omics#ReferenceList",
          "traits": {
            "smithy.api#documentation": "<p>A list of references.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListRunGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListRunGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListRunGroupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of run groups.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/runGroup",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "startingToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "items"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListRunGroupsRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#RunGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The run groups' name.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "startingToken": {
          "target": "com.amazonaws.omics#RunGroupListToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "startingToken"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of run groups to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListRunGroupsResponse": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.omics#RunGroupList",
          "traits": {
            "smithy.api#documentation": "<p>A list of groups.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#RunGroupListToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListRunTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListRunTasksRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListRunTasksResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of tasks for a run.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/run/{id}/task",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "startingToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "items"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListRunTasksRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#TaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>Filter the list by status.</p>",
            "smithy.api#httpQuery": "status"
          }
        },
        "startingToken": {
          "target": "com.amazonaws.omics#TaskListToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "startingToken"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of run tasks to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListRunTasksResponse": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.omics#TaskList",
          "traits": {
            "smithy.api#documentation": "<p>A list of tasks.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#TaskListToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListRuns": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListRunsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListRunsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of runs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/run",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "startingToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "items"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListRunsRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#RunName",
          "traits": {
            "smithy.api#documentation": "<p>Filter the list by run name.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "runGroupId": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>Filter the list by run group ID.</p>",
            "smithy.api#httpQuery": "runGroupId"
          }
        },
        "startingToken": {
          "target": "com.amazonaws.omics#RunListToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "startingToken"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of runs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListRunsResponse": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.omics#RunList",
          "traits": {
            "smithy.api#documentation": "<p>A list of runs.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#RunListToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListSequenceStores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListSequenceStoresRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListSequenceStoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of sequence stores.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestores"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "sequenceStores"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListSequenceStoresRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of stores to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#SequenceStoreFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListSequenceStoresResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.omics#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        },
        "sequenceStores": {
          "target": "com.amazonaws.omics#SequenceStoreDetailList",
          "traits": {
            "smithy.api#documentation": "<p>A list of sequence stores.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of tags for a resource.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "tags-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.omics#TagArn",
          "traits": {
            "smithy.api#documentation": "<p>The resource's ARN.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>A list of tags.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListVariantImportJobs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListVariantImportJobsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListVariantImportJobsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of variant import jobs.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/import/variants",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "variantImportJobs"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListVariantImportJobsFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "storeName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A store name to filter on.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for variant import jobs.</p>"
      }
    },
    "com.amazonaws.omics#ListVariantImportJobsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of import jobs to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "ids": {
          "target": "com.amazonaws.omics#IdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of job IDs.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 20
            }
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken",
            "smithy.api#length": {
              "min": 1,
              "max": 10000
            }
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ListVariantImportJobsFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListVariantImportJobsResponse": {
      "type": "structure",
      "members": {
        "variantImportJobs": {
          "target": "com.amazonaws.omics#VariantImportJobItems",
          "traits": {
            "smithy.api#documentation": "<p>A list of jobs.</p>"
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListVariantStores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListVariantStoresRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListVariantStoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of variant stores.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/variantStores",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "variantStores"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListVariantStoresFilter": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for variant stores.</p>"
      }
    },
    "com.amazonaws.omics#ListVariantStoresRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of stores to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        },
        "ids": {
          "target": "com.amazonaws.omics#IdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of store IDs.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 20
            }
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken",
            "smithy.api#length": {
              "min": 1,
              "max": 10000
            }
          }
        },
        "filter": {
          "target": "com.amazonaws.omics#ListVariantStoresFilter",
          "traits": {
            "smithy.api#documentation": "<p>A filter to apply to the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListVariantStoresResponse": {
      "type": "structure",
      "members": {
        "variantStores": {
          "target": "com.amazonaws.omics#VariantStoreItems",
          "traits": {
            "smithy.api#documentation": "<p>A list of variant stores.</p>"
          }
        },
        "nextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#ListWorkflows": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#ListWorkflowsRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#ListWorkflowsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves a list of workflows.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "GET",
          "uri": "/workflow",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "startingToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "items"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.omics#ListWorkflowsRequest": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The workflows' type.</p>",
            "smithy.api#httpQuery": "type"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#WorkflowName",
          "traits": {
            "smithy.api#documentation": "<p>The workflows' name.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "startingToken": {
          "target": "com.amazonaws.omics#WorkflowListToken",
          "traits": {
            "smithy.api#documentation": "<p>Specify the pagination token from a previous request to retrieve the next page of results.</p>",
            "smithy.api#httpQuery": "startingToken"
          }
        },
        "maxResults": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of workflows to return in one page of results.</p>",
            "smithy.api#httpQuery": "maxResults",
            "smithy.api#range": {
              "min": 1,
              "max": 100
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ListWorkflowsResponse": {
      "type": "structure",
      "members": {
        "items": {
          "target": "com.amazonaws.omics#WorkflowList",
          "traits": {
            "smithy.api#documentation": "<p>The workflows' items.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.omics#WorkflowListToken",
          "traits": {
            "smithy.api#documentation": "<p>A pagination token that's included if more results are available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#Md5": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{N}]+$"
      }
    },
    "com.amazonaws.omics#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 6144
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#Omics": {
      "type": "service",
      "version": "2022-11-28",
      "resources": [
        {
          "target": "com.amazonaws.omics#AnnotationImportJob"
        },
        {
          "target": "com.amazonaws.omics#AnnotationStore"
        },
        {
          "target": "com.amazonaws.omics#ReferenceStoreResource"
        },
        {
          "target": "com.amazonaws.omics#RunGroupResource"
        },
        {
          "target": "com.amazonaws.omics#RunResource"
        },
        {
          "target": "com.amazonaws.omics#SequenceStoreResource"
        },
        {
          "target": "com.amazonaws.omics#TaggingResource"
        },
        {
          "target": "com.amazonaws.omics#VariantImportJob"
        },
        {
          "target": "com.amazonaws.omics#VariantStore"
        },
        {
          "target": "com.amazonaws.omics#WorkflowResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Omics",
          "arnNamespace": "omics",
          "cloudTrailEventSource": "omics.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "omics"
        },
        "aws.iam#defineConditionKeys": {
          "aws:ResourceTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by the presence of tag key-value pairs attached to the resource",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag"
          },
          "aws:RequestTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by the presence of tag key-value pairs in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag"
          },
          "aws:TagKeys": {
            "type": "ArrayOfString",
            "documentation": "Filters access by the presence of tag keys in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys"
          }
        },
        "aws.iam#supportedPrincipalTypes": ["Root", "IAMUser", "IAMRole", "FederatedUser"],
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>This is the <i>Amazon Omics API Reference</i>. For an introduction to the service, see <a href=\"https://docs.aws.amazon.com/omics/latest/dev/\">What is Amazon Omics?</a> in the\n      <i>Amazon Omics Developer Guide</i>.</p>",
        "smithy.api#title": "Amazon Omics",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": true,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://omics-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://omics-fips.{Region}.{PartitionResult#dnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://omics.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://omics.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-gov-east-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "cn-north-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-iso-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": true,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://omics.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-isob-east-1"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": false,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": false,
                "UseFIPS": true,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": true,
                "UseFIPS": false,
                "Region": "us-east-1",
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.omics#Quote": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#QuoteAll": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.omics#Range": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RangeNotSatisfiableException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The ranges specified in the request are not valid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 416,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.omics#ReadOptions": {
      "type": "structure",
      "members": {
        "sep": {
          "target": "com.amazonaws.omics#Separator",
          "traits": {
            "smithy.api#documentation": "<p>The file's field separator.</p>"
          }
        },
        "encoding": {
          "target": "com.amazonaws.omics#Encoding",
          "traits": {
            "smithy.api#documentation": "<p>The file's encoding.</p>"
          }
        },
        "quote": {
          "target": "com.amazonaws.omics#Quote",
          "traits": {
            "smithy.api#documentation": "<p>The file's quote character.</p>"
          }
        },
        "quoteAll": {
          "target": "com.amazonaws.omics#QuoteAll",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether all values need to be quoted, or just those that contain quotes.</p>"
          }
        },
        "escape": {
          "target": "com.amazonaws.omics#EscapeChar",
          "traits": {
            "smithy.api#documentation": "<p>A character for escaping quotes in the file.</p>"
          }
        },
        "escapeQuotes": {
          "target": "com.amazonaws.omics#EscapeQuotes",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether quotes need to be escaped in the file.</p>"
          }
        },
        "comment": {
          "target": "com.amazonaws.omics#CommentChar",
          "traits": {
            "smithy.api#documentation": "<p>The file's comment character.</p>"
          }
        },
        "header": {
          "target": "com.amazonaws.omics#Header",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether the file has a header row.</p>"
          }
        },
        "lineSep": {
          "target": "com.amazonaws.omics#LineSep",
          "traits": {
            "smithy.api#documentation": "<p>A line separator for the file.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Read options for an annotation import job.</p>"
      }
    },
    "com.amazonaws.omics#ReadSetActivationJobItemStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NOT_STARTED",
            "name": "NOT_STARTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "FINISHED",
            "name": "FINISHED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetActivationJobStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUBMITTED",
            "name": "SUBMITTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "COMPLETED_WITH_FAILURES",
            "name": "COMPLETED_WITH_FAILURES"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#ReadSetBatchError": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The error's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "code": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The error's code.</p>",
            "smithy.api#required": {}
          }
        },
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The error's message.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An error from a batch read set operation.</p>"
      }
    },
    "com.amazonaws.omics#ReadSetBatchErrorList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ReadSetBatchError"
      }
    },
    "com.amazonaws.omics#ReadSetDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReadSetExportJobItemStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NOT_STARTED",
            "name": "NOT_STARTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "FINISHED",
            "name": "FINISHED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetExportJobStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUBMITTED",
            "name": "SUBMITTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "COMPLETED_WITH_FAILURES",
            "name": "COMPLETED_WITH_FAILURES"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetFile": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SOURCE1",
            "name": "SOURCE1"
          },
          {
            "value": "SOURCE2",
            "name": "SOURCE2"
          },
          {
            "value": "INDEX",
            "name": "INDEX"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetFiles": {
      "type": "structure",
      "members": {
        "source1": {
          "target": "com.amazonaws.omics#FileInformation",
          "traits": {
            "smithy.api#documentation": "<p>The location of the first file in Amazon S3.</p>"
          }
        },
        "source2": {
          "target": "com.amazonaws.omics#FileInformation",
          "traits": {
            "smithy.api#documentation": "<p>The location of the second file in Amazon S3.</p>"
          }
        },
        "index": {
          "target": "com.amazonaws.omics#FileInformation",
          "traits": {
            "smithy.api#documentation": "<p>The files' index.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Files in a read set.</p>"
      }
    },
    "com.amazonaws.omics#ReadSetFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#ReadSetName",
          "traits": {
            "smithy.api#documentation": "<p>A name to filter on.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status to filter on.</p>"
          }
        },
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>A genome reference ARN to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for read sets.</p>"
      }
    },
    "com.amazonaws.omics#ReadSetId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#ReadSetIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ReadSetId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.omics#ReadSetImportJobItemStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NOT_STARTED",
            "name": "NOT_STARTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "FINISHED",
            "name": "FINISHED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetImportJobStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUBMITTED",
            "name": "SUBMITTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "COMPLETED_WITH_FAILURES",
            "name": "COMPLETED_WITH_FAILURES"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ReadSetListItem"
      }
    },
    "com.amazonaws.omics#ReadSetListItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReadSetArn",
          "traits": {
            "smithy.api#documentation": "<p>The read set's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "subjectId": {
          "target": "com.amazonaws.omics#SubjectId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's subject ID.</p>"
          }
        },
        "sampleId": {
          "target": "com.amazonaws.omics#SampleId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sample ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetStatus",
          "traits": {
            "smithy.api#documentation": "<p>The read set's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReadSetName",
          "traits": {
            "smithy.api#documentation": "<p>The read set's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReadSetDescription",
          "traits": {
            "smithy.api#documentation": "<p>The read set's description.</p>"
          }
        },
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The read set's genome reference ARN.</p>"
          }
        },
        "fileType": {
          "target": "com.amazonaws.omics#FileType",
          "traits": {
            "smithy.api#documentation": "<p>The read set's file type.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceInformation": {
          "target": "com.amazonaws.omics#SequenceInformation"
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the read set was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A read set.</p>"
      }
    },
    "com.amazonaws.omics#ReadSetName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReadSetResource": {
      "type": "resource",
      "identifiers": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId"
        },
        "readSetId": {
          "target": "com.amazonaws.omics#ReadSetId"
        }
      },
      "read": {
        "target": "com.amazonaws.omics#GetReadSetMetadata"
      },
      "list": {
        "target": "com.amazonaws.omics#ListReadSets"
      },
      "operations": [
        {
          "target": "com.amazonaws.omics#GetReadSet"
        }
      ],
      "collectionOperations": [
        {
          "target": "com.amazonaws.omics#BatchDeleteReadSet"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "sequenceStore/{sequenceStoreId}/readSet/{readSetId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "readSet"
        }
      }
    },
    "com.amazonaws.omics#ReadSetStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ARCHIVED",
            "name": "ARCHIVED"
          },
          {
            "value": "ACTIVATING",
            "name": "ACTIVATING"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "DELETING",
            "name": "DELETING"
          },
          {
            "value": "DELETED",
            "name": "DELETED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReadSetStreamingBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#streaming": {}
      }
    },
    "com.amazonaws.omics#ReferenceArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#ReferenceDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReferenceFile": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SOURCE",
            "name": "SOURCE"
          },
          {
            "value": "INDEX",
            "name": "INDEX"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReferenceFiles": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.omics#FileInformation",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>"
          }
        },
        "index": {
          "target": "com.amazonaws.omics#FileInformation",
          "traits": {
            "smithy.api#documentation": "<p>The files' index.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A set of genome reference files.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#ReferenceName",
          "traits": {
            "smithy.api#documentation": "<p>A name to filter on.</p>"
          }
        },
        "md5": {
          "target": "com.amazonaws.omics#Md5",
          "traits": {
            "smithy.api#documentation": "<p>An MD5 checksum to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for references.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#ReferenceImportJobItemStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NOT_STARTED",
            "name": "NOT_STARTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "FINISHED",
            "name": "FINISHED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReferenceImportJobStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUBMITTED",
            "name": "SUBMITTED"
          },
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "COMPLETED_WITH_FAILURES",
            "name": "COMPLETED_WITH_FAILURES"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReferenceItem": {
      "type": "union",
      "members": {
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ARN.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A genome reference.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ReferenceListItem"
      }
    },
    "com.amazonaws.omics#ReferenceListItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ReferenceId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "arn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The reference's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The reference's store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "md5": {
          "target": "com.amazonaws.omics#Md5",
          "traits": {
            "smithy.api#documentation": "<p>The reference's MD5 checksum.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceStatus",
          "traits": {
            "smithy.api#documentation": "<p>The reference's status.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceName",
          "traits": {
            "smithy.api#documentation": "<p>The reference's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The reference's description.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the reference was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "updateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the reference was updated.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A genome reference.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReferenceResource": {
      "type": "resource",
      "identifiers": {
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId"
        },
        "referenceId": {
          "target": "com.amazonaws.omics#ReferenceId"
        }
      },
      "read": {
        "target": "com.amazonaws.omics#GetReferenceMetadata"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteReference"
      },
      "list": {
        "target": "com.amazonaws.omics#ListReferences"
      },
      "operations": [
        {
          "target": "com.amazonaws.omics#GetReference"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "referenceStore/{referenceStoreId}/reference/{referenceId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "reference"
        }
      }
    },
    "com.amazonaws.omics#ReferenceStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "DELETING",
            "name": "DELETING"
          },
          {
            "value": "DELETED",
            "name": "DELETED"
          }
        ]
      }
    },
    "com.amazonaws.omics#ReferenceStoreArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#ReferenceStoreDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReferenceStoreDetail": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#ReferenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a reference store.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceStoreDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#ReferenceStoreDetail"
      }
    },
    "com.amazonaws.omics#ReferenceStoreFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#ReferenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The name to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for reference stores.</p>"
      }
    },
    "com.amazonaws.omics#ReferenceStoreId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#ReferenceStoreName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#ReferenceStoreResource": {
      "type": "resource",
      "identifiers": {
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateReferenceStore"
      },
      "read": {
        "target": "com.amazonaws.omics#GetReferenceStore"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteReferenceStore"
      },
      "list": {
        "target": "com.amazonaws.omics#ListReferenceStores"
      },
      "operations": [
        {
          "target": "com.amazonaws.omics#GetReferenceImportJob"
        },
        {
          "target": "com.amazonaws.omics#ListReferenceImportJobs"
        },
        {
          "target": "com.amazonaws.omics#StartReferenceImportJob"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.omics#ReferenceResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "referenceStore/{referenceStoreId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "referenceStore"
        }
      }
    },
    "com.amazonaws.omics#ReferenceStreamingBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#streaming": {}
      }
    },
    "com.amazonaws.omics#RequestTimeoutException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request timed out.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 408
      }
    },
    "com.amazonaws.omics#ResourceId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      }
    },
    "com.amazonaws.omics#ResourceIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.omics#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The target resource was not found in the current Region.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.omics#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:.*"
      }
    },
    "com.amazonaws.omics#RunArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#RunExport": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DEFINITION",
            "value": "DEFINITION"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#RunExportList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#RunExport"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 32
        }
      }
    },
    "com.amazonaws.omics#RunGroupArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#RunGroupId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 18
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#RunGroupList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#RunGroupListItem"
      }
    },
    "com.amazonaws.omics#RunGroupListItem": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>The group's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The group's ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The group's name.</p>"
          }
        },
        "maxCpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The group's maximum CPU count setting.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxRuns": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The group's maximum concurrent run setting.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxDuration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The group's maximum duration setting.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#RunGroupTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the group was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A run group.</p>"
      }
    },
    "com.amazonaws.omics#RunGroupListToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunGroupRequestId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunGroupResource": {
      "type": "resource",
      "identifiers": {
        "id": {
          "target": "com.amazonaws.omics#RunGroupId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateRunGroup"
      },
      "read": {
        "target": "com.amazonaws.omics#GetRunGroup"
      },
      "update": {
        "target": "com.amazonaws.omics#UpdateRunGroup"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteRunGroup"
      },
      "list": {
        "target": "com.amazonaws.omics#ListRunGroups"
      },
      "traits": {
        "aws.api#arn": {
          "template": "runGroup/{id}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "runGroup"
        }
      }
    },
    "com.amazonaws.omics#RunGroupTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#RunId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 18
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#RunLeftNormalization": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.omics#RunList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#RunListItem"
      }
    },
    "com.amazonaws.omics#RunListItem": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunArn",
          "traits": {
            "smithy.api#documentation": "<p>The run's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#RunStatus",
          "traits": {
            "smithy.api#documentation": "<p>The run's status.</p>"
          }
        },
        "workflowId": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The run's workflow ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunName",
          "traits": {
            "smithy.api#documentation": "<p>The run's name.</p>"
          }
        },
        "priority": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The run's priority.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "storageCapacity": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The run's storage capacity.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the run was created.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the run started.</p>"
          }
        },
        "stopTime": {
          "target": "com.amazonaws.omics#RunTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the run stopped.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A workflow run.</p>"
      }
    },
    "com.amazonaws.omics#RunListToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunLogLevel": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "OFF",
            "value": "OFF"
          },
          {
            "name": "FATAL",
            "value": "FATAL"
          },
          {
            "name": "ERROR",
            "value": "ERROR"
          },
          {
            "name": "ALL",
            "value": "ALL"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#RunName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunOutputUri": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunParameters": {
      "type": "document"
    },
    "com.amazonaws.omics#RunRequestId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunResource": {
      "type": "resource",
      "identifiers": {
        "id": {
          "target": "com.amazonaws.omics#RunId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#StartRun"
      },
      "read": {
        "target": "com.amazonaws.omics#GetRun"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteRun"
      },
      "list": {
        "target": "com.amazonaws.omics#ListRuns"
      },
      "operations": [
        {
          "target": "com.amazonaws.omics#CancelRun"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.omics#TaskResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "run/{id}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "run"
        }
      }
    },
    "com.amazonaws.omics#RunResourceDigest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunResourceDigestKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunResourceDigests": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.omics#RunResourceDigestKey"
      },
      "value": {
        "target": "com.amazonaws.omics#RunResourceDigest"
      }
    },
    "com.amazonaws.omics#RunRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#RunStartedBy": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.omics#RunStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "PENDING",
            "value": "PENDING"
          },
          {
            "name": "STARTING",
            "value": "STARTING"
          },
          {
            "name": "RUNNING",
            "value": "RUNNING"
          },
          {
            "name": "STOPPING",
            "value": "STOPPING"
          },
          {
            "name": "COMPLETED",
            "value": "COMPLETED"
          },
          {
            "name": "DELETED",
            "value": "DELETED"
          },
          {
            "name": "CANCELLED",
            "value": "CANCELLED"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#RunStatusMessage": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#RunTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#S3Destination": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/?((.{1,1024})/)?$"
      }
    },
    "com.amazonaws.omics#S3Uri": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^s3://([a-z0-9][a-z0-9-.]{1,61}[a-z0-9])/(.{1,1024})$"
      }
    },
    "com.amazonaws.omics#SampleId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#Schema": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#SchemaItem"
      }
    },
    "com.amazonaws.omics#SchemaItem": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "com.amazonaws.omics#SchemaValueType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#SchemaValueType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LONG",
            "name": "LONG",
            "documentation": "LONG type"
          },
          {
            "value": "INT",
            "name": "INT",
            "documentation": "INT type"
          },
          {
            "value": "STRING",
            "name": "STRING",
            "documentation": "STRING type"
          },
          {
            "value": "FLOAT",
            "name": "FLOAT",
            "documentation": "FLOAT type"
          },
          {
            "value": "DOUBLE",
            "name": "DOUBLE",
            "documentation": "DOUBLE type"
          },
          {
            "value": "BOOLEAN",
            "name": "BOOLEAN",
            "documentation": "BOOLEAN type"
          }
        ]
      }
    },
    "com.amazonaws.omics#Separator": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.omics#SequenceInformation": {
      "type": "structure",
      "members": {
        "totalReadCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The sequence's total read count.</p>"
          }
        },
        "totalBaseCount": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The sequence's total base count.</p>"
          }
        },
        "generatedFrom": {
          "target": "com.amazonaws.omics#GeneratedFrom",
          "traits": {
            "smithy.api#documentation": "<p>Where the sequence originated.</p>"
          }
        },
        "alignment": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The sequence's alignment setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a sequence.</p>"
      }
    },
    "com.amazonaws.omics#SequenceStoreArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#SequenceStoreDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#SequenceStoreDetail": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#SequenceStoreArn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#SequenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#SequenceStoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>"
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about a sequence store.</p>"
      }
    },
    "com.amazonaws.omics#SequenceStoreDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#SequenceStoreDetail"
      }
    },
    "com.amazonaws.omics#SequenceStoreFilter": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.omics#SequenceStoreName",
          "traits": {
            "smithy.api#documentation": "<p>A name to filter on.</p>"
          }
        },
        "createdAfter": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's start date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "createdBefore": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The filter's end date.</p>",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A filter for a sequence store.</p>"
      }
    },
    "com.amazonaws.omics#SequenceStoreId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 36
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#SequenceStoreName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#SequenceStoreResource": {
      "type": "resource",
      "identifiers": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateSequenceStore"
      },
      "read": {
        "target": "com.amazonaws.omics#GetSequenceStore"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteSequenceStore"
      },
      "list": {
        "target": "com.amazonaws.omics#ListSequenceStores"
      },
      "operations": [
        {
          "target": "com.amazonaws.omics#GetReadSetActivationJob"
        },
        {
          "target": "com.amazonaws.omics#GetReadSetExportJob"
        },
        {
          "target": "com.amazonaws.omics#GetReadSetImportJob"
        },
        {
          "target": "com.amazonaws.omics#ListReadSetActivationJobs"
        },
        {
          "target": "com.amazonaws.omics#ListReadSetExportJobs"
        },
        {
          "target": "com.amazonaws.omics#ListReadSetImportJobs"
        },
        {
          "target": "com.amazonaws.omics#StartReadSetActivationJob"
        },
        {
          "target": "com.amazonaws.omics#StartReadSetExportJob"
        },
        {
          "target": "com.amazonaws.omics#StartReadSetImportJob"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.omics#ReadSetResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "sequenceStore/{sequenceStoreId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "sequenceStore"
        }
      }
    },
    "com.amazonaws.omics#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request exceeds a service quota.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.omics#SourceFiles": {
      "type": "structure",
      "members": {
        "source1": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The location of the first file in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "source2": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The location of the second file in Amazon S3.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Source files for a sequence.</p>"
      }
    },
    "com.amazonaws.omics#SseConfig": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.omics#EncryptionType",
          "traits": {
            "smithy.api#documentation": "<p>The encryption type.</p>",
            "smithy.api#required": {}
          }
        },
        "keyArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>An encryption key ARN.</p>",
            "smithy.api#length": {
              "min": 20,
              "max": 2048
            },
            "smithy.api#pattern": "arn:([^:\n]*):([^:\n]*):([^:\n]*):([0-9]{12}):([^:\n]*)"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Server-side encryption (SSE) settings for a store.</p>"
      }
    },
    "com.amazonaws.omics#StartAnnotationImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartAnnotationImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartAnnotationImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts an annotation import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/import/annotation",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#StartAnnotationImportRequest": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.omics#StoreName",
          "traits": {
            "smithy.api#documentation": "<p>A destination annotation store for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "items": {
          "target": "com.amazonaws.omics#AnnotationImportItemSources",
          "traits": {
            "smithy.api#documentation": "<p>Items to import.</p>",
            "smithy.api#required": {}
          }
        },
        "formatOptions": {
          "target": "com.amazonaws.omics#FormatOptions",
          "traits": {
            "smithy.api#documentation": "<p>Formatting options for the annotation file.</p>"
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartAnnotationImportResponse": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartReadSetActivationJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartReadSetActivationJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartReadSetActivationJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a read set activation job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/activationjob"
        }
      }
    },
    "com.amazonaws.omics#StartReadSetActivationJobRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that jobs don't run multiple times, specify a unique token for each job.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#StartReadSetActivationJobSourceList",
          "traits": {
            "smithy.api#documentation": "<p>The job's sources.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 20
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartReadSetActivationJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ActivationJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetActivationJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartReadSetActivationJobSourceItem": {
      "type": "structure",
      "members": {
        "readSetId": {
          "target": "com.amazonaws.omics#ReadSetId",
          "traits": {
            "smithy.api#documentation": "<p>The source's read set ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for a read set activation job.</p>"
      }
    },
    "com.amazonaws.omics#StartReadSetActivationJobSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#StartReadSetActivationJobSourceItem"
      }
    },
    "com.amazonaws.omics#StartReadSetExportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartReadSetExportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartReadSetExportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a read set export job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/exportjob"
        }
      }
    },
    "com.amazonaws.omics#StartReadSetExportJobRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "com.amazonaws.omics#S3Destination",
          "traits": {
            "smithy.api#documentation": "<p>A location for exported files in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that jobs don't run multiple times, specify a unique token for each job.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#ExportReadSetList",
          "traits": {
            "smithy.api#documentation": "<p>Sources for the job.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 100
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartReadSetExportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ExportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "com.amazonaws.omics#S3Destination",
          "traits": {
            "smithy.api#documentation": "<p>The job's output location.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetExportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartReadSetImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartReadSetImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartReadSetImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a read set import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/sequencestore/{sequenceStoreId}/importjob"
        }
      }
    },
    "com.amazonaws.omics#StartReadSetImportJobRequest": {
      "type": "structure",
      "members": {
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that jobs don't run multiple times, specify a unique token for each job.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#StartReadSetImportJobSourceList",
          "traits": {
            "smithy.api#documentation": "<p>Source files to import.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 100
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartReadSetImportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceStoreId": {
          "target": "com.amazonaws.omics#SequenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The read set's sequence store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReadSetImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartReadSetImportJobSourceItem": {
      "type": "structure",
      "members": {
        "sourceFiles": {
          "target": "com.amazonaws.omics#SourceFiles",
          "traits": {
            "smithy.api#documentation": "<p>The source files' location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "sourceFileType": {
          "target": "com.amazonaws.omics#FileType",
          "traits": {
            "smithy.api#documentation": "<p>The source's file type.</p>",
            "smithy.api#required": {}
          }
        },
        "subjectId": {
          "target": "com.amazonaws.omics#SubjectId",
          "traits": {
            "smithy.api#documentation": "<p>The source's subject ID.</p>",
            "smithy.api#required": {}
          }
        },
        "sampleId": {
          "target": "com.amazonaws.omics#SampleId",
          "traits": {
            "smithy.api#documentation": "<p>The source's sample ID.</p>",
            "smithy.api#required": {}
          }
        },
        "generatedFrom": {
          "target": "com.amazonaws.omics#GeneratedFrom",
          "traits": {
            "smithy.api#documentation": "<p>Where the source originated.</p>"
          }
        },
        "referenceArn": {
          "target": "com.amazonaws.omics#ReferenceArn",
          "traits": {
            "smithy.api#documentation": "<p>The source's reference ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReadSetName",
          "traits": {
            "smithy.api#documentation": "<p>The source's name.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReadSetDescription",
          "traits": {
            "smithy.api#documentation": "<p>The source's description.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The source's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for a read set import job.</p>"
      }
    },
    "com.amazonaws.omics#StartReadSetImportJobSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#StartReadSetImportJobSourceItem"
      }
    },
    "com.amazonaws.omics#StartReferenceImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartReferenceImportJobRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartReferenceImportJobResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a reference import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "control-storage-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/referencestore/{referenceStoreId}/importjob"
        }
      }
    },
    "com.amazonaws.omics#StartReferenceImportJobRequest": {
      "type": "structure",
      "members": {
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.omics#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>To ensure that jobs don't run multiple times, specify a unique token for each job.</p>"
          }
        },
        "sources": {
          "target": "com.amazonaws.omics#StartReferenceImportJobSourceList",
          "traits": {
            "smithy.api#documentation": "<p>Sources for the job.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 100
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartReferenceImportJobResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ImportJobId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "referenceStoreId": {
          "target": "com.amazonaws.omics#ReferenceStoreId",
          "traits": {
            "smithy.api#documentation": "<p>The job's reference store ID.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#ReferenceImportJobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {},
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartReferenceImportJobSourceItem": {
      "type": "structure",
      "members": {
        "sourceFile": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#ReferenceName",
          "traits": {
            "smithy.api#documentation": "<p>The source's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#ReferenceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The source's description.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The source's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A source for a reference import job.</p>"
      }
    },
    "com.amazonaws.omics#StartReferenceImportJobSourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#StartReferenceImportJobSourceItem"
      }
    },
    "com.amazonaws.omics#StartRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartRunRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartRunResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a run.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/run",
          "code": 201
        }
      }
    },
    "com.amazonaws.omics#StartRunRequest": {
      "type": "structure",
      "members": {
        "workflowId": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The run's workflow ID.</p>"
          }
        },
        "workflowType": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The run's workflows type.</p>"
          }
        },
        "runId": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#RunRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the run.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the run.</p>"
          }
        },
        "runGroupId": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The run's group ID.</p>"
          }
        },
        "priority": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A priority for the run.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "parameters": {
          "target": "com.amazonaws.omics#RunParameters",
          "traits": {
            "smithy.api#documentation": "<p>Parameters for the run.</p>"
          }
        },
        "storageCapacity": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A storage capacity for the run.</p>",
            "smithy.api#range": {
              "min": 0,
              "max": 100000
            }
          }
        },
        "outputUri": {
          "target": "com.amazonaws.omics#RunOutputUri",
          "traits": {
            "smithy.api#documentation": "<p>An output URI for the run.</p>"
          }
        },
        "logLevel": {
          "target": "com.amazonaws.omics#RunLogLevel",
          "traits": {
            "smithy.api#documentation": "<p>A log level for the run.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the run.</p>"
          }
        },
        "requestId": {
          "target": "com.amazonaws.omics#RunRequestId",
          "traits": {
            "smithy.api#documentation": "<p>A request ID for the run.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartRunResponse": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#RunArn",
          "traits": {
            "smithy.api#documentation": "<p>The run's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#RunId",
          "traits": {
            "smithy.api#documentation": "<p>The run's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#RunStatus",
          "traits": {
            "smithy.api#documentation": "<p>The run's status.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The run's tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StartVariantImportJob": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#StartVariantImportRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#StartVariantImportResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a variant import job.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/import/variant",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#StartVariantImportRequest": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.omics#StoreName",
          "traits": {
            "smithy.api#documentation": "<p>The destination variant store for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>A service role for the job.</p>",
            "smithy.api#required": {}
          }
        },
        "items": {
          "target": "com.amazonaws.omics#VariantImportItemSources",
          "traits": {
            "smithy.api#documentation": "<p>Items to import.</p>",
            "smithy.api#required": {}
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#StartVariantImportResponse": {
      "type": "structure",
      "members": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#StatusMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1000
        }
      }
    },
    "com.amazonaws.omics#StoreDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.omics#StoreFormat": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "GFF",
            "name": "GFF",
            "documentation": "GFF3 Format"
          },
          {
            "value": "TSV",
            "name": "TSV",
            "documentation": "TSV Format"
          },
          {
            "value": "VCF",
            "name": "VCF",
            "documentation": "VCF Format"
          }
        ]
      }
    },
    "com.amazonaws.omics#StoreName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 255
        },
        "smithy.api#pattern": "^([a-z]){1}([a-z0-9_]){2,254}$"
      }
    },
    "com.amazonaws.omics#StoreOptions": {
      "type": "union",
      "members": {
        "tsvStoreOptions": {
          "target": "com.amazonaws.omics#TsvStoreOptions",
          "traits": {
            "smithy.api#documentation": "<p>File settings for a TSV store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Settings for a store.</p>"
      }
    },
    "com.amazonaws.omics#StoreStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CREATING",
            "name": "CREATING",
            "documentation": "The Store is being created"
          },
          {
            "value": "UPDATING",
            "name": "UPDATING",
            "documentation": "The Store is updating"
          },
          {
            "value": "DELETING",
            "name": "DELETING",
            "documentation": "The Store is deleting"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE",
            "documentation": "The Store is active"
          },
          {
            "value": "FAILED",
            "name": "FAILED",
            "documentation": "The Store creation failed"
          }
        ]
      }
    },
    "com.amazonaws.omics#SubjectId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 127
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#TagArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.omics#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.omics#TagMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.omics#TagKey"
      },
      "value": {
        "target": "com.amazonaws.omics#TagValue"
      }
    },
    "com.amazonaws.omics#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Tags a resource.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "tags-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.omics#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.omics#TagArn",
          "traits": {
            "smithy.api#documentation": "<p>The resource's ARN.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.omics#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the resource.</p>",
            "smithy.api#length": {
              "min": 0,
              "max": 50
            },
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.omics#TaggingResource": {
      "type": "resource",
      "identifiers": {
        "tagKey": {
          "target": "com.amazonaws.omics#TagKey"
        }
      },
      "list": {
        "target": "com.amazonaws.omics#ListTagsForResource"
      },
      "collectionOperations": [
        {
          "target": "com.amazonaws.omics#TagResource"
        },
        {
          "target": "com.amazonaws.omics#UntagResource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "tag/{tagKey}"
        },
        "aws.iam#disableConditionKeyInference": {}
      }
    },
    "com.amazonaws.omics#TaskId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 18
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#TaskList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#TaskListItem"
      }
    },
    "com.amazonaws.omics#TaskListItem": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.omics#TaskId",
          "traits": {
            "smithy.api#documentation": "<p>The task's ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#TaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The task's status.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#TaskName",
          "traits": {
            "smithy.api#documentation": "<p>The task's name.</p>"
          }
        },
        "cpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The task's CPU count.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "memory": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The task's memory.</p>",
            "smithy.api#range": {
              "min": 1
            }
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the task was created.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the task started.</p>"
          }
        },
        "stopTime": {
          "target": "com.amazonaws.omics#TaskTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the task stopped.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A workflow run task.</p>"
      }
    },
    "com.amazonaws.omics#TaskListToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#TaskLogStream": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#TaskName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.omics#TaskResource": {
      "type": "resource",
      "identifiers": {
        "id": {
          "target": "com.amazonaws.omics#RunId"
        },
        "taskId": {
          "target": "com.amazonaws.omics#TaskId"
        }
      },
      "read": {
        "target": "com.amazonaws.omics#GetRunTask"
      },
      "list": {
        "target": "com.amazonaws.omics#ListRunTasks"
      },
      "traits": {
        "aws.iam#disableConditionKeyInference": {}
      }
    },
    "com.amazonaws.omics#TaskStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "PENDING",
            "value": "PENDING"
          },
          {
            "name": "STARTING",
            "value": "STARTING"
          },
          {
            "name": "RUNNING",
            "value": "RUNNING"
          },
          {
            "name": "STOPPING",
            "value": "STOPPING"
          },
          {
            "name": "COMPLETED",
            "value": "COMPLETED"
          },
          {
            "name": "CANCELLED",
            "value": "CANCELLED"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#TaskStatusMessage": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#TaskTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was denied due to request throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.omics#TsvOptions": {
      "type": "structure",
      "members": {
        "readOptions": {
          "target": "com.amazonaws.omics#ReadOptions",
          "traits": {
            "smithy.api#documentation": "<p>The file's read options.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Formatting options for a TSV file.</p>"
      }
    },
    "com.amazonaws.omics#TsvStoreOptions": {
      "type": "structure",
      "members": {
        "annotationType": {
          "target": "com.amazonaws.omics#AnnotationType",
          "traits": {
            "smithy.api#documentation": "<p>The store's annotation type.</p>"
          }
        },
        "formatToHeader": {
          "target": "com.amazonaws.omics#FormatToHeader",
          "traits": {
            "smithy.api#documentation": "<p>The store's header key to column name mapping.</p>"
          }
        },
        "schema": {
          "target": "com.amazonaws.omics#Schema",
          "traits": {
            "smithy.api#documentation": "<p>The store's schema.</p>",
            "smithy.api#length": {
              "min": 1,
              "max": 5000
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>File settings for a TSV store.</p>"
      }
    },
    "com.amazonaws.omics#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes tags from a resource.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "tags-"
        },
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.omics#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.omics#TagArn",
          "traits": {
            "smithy.api#documentation": "<p>The resource's ARN.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.omics#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>Keys of tags to remove.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#UpdateAnnotationStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#UpdateAnnotationStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#UpdateAnnotationStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an annotation store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/annotationStore/{name}",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#UpdateAnnotationStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#UpdateAnnotationStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "storeOptions": {
          "target": "com.amazonaws.omics#StoreOptions",
          "traits": {
            "smithy.api#documentation": "<p>Parsing options for the store.</p>"
          }
        },
        "storeFormat": {
          "target": "com.amazonaws.omics#StoreFormat",
          "traits": {
            "smithy.api#documentation": "<p>The annotation file format of the store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#UpdateRunGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#UpdateRunGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a run group.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/runGroup/{id}",
          "code": 202
        }
      }
    },
    "com.amazonaws.omics#UpdateRunGroupRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#RunGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The group's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#RunGroupName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the group.</p>"
          }
        },
        "maxCpus": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of CPUs to use.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxRuns": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of concurrent runs for the group.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        },
        "maxDuration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum amount of time to run.</p>",
            "smithy.api#range": {
              "min": 1,
              "max": 100000
            }
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#UpdateTime": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#UpdateVariantStore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#UpdateVariantStoreRequest"
      },
      "output": {
        "target": "com.amazonaws.omics#UpdateVariantStoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a variant store.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "analytics-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/variantStore/{name}",
          "code": 200
        }
      }
    },
    "com.amazonaws.omics#UpdateVariantStoreRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A name for the store.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the store.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#UpdateVariantStoreResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.omics#UpdateWorkflow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.omics#UpdateWorkflowRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.omics#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.omics#ConflictException"
        },
        {
          "target": "com.amazonaws.omics#InternalServerException"
        },
        {
          "target": "com.amazonaws.omics#RequestTimeoutException"
        },
        {
          "target": "com.amazonaws.omics#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.omics#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.omics#ThrottlingException"
        },
        {
          "target": "com.amazonaws.omics#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a workflow.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "workflows-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/workflow/{id}",
          "code": 202
        }
      }
    },
    "com.amazonaws.omics#UpdateWorkflowRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.omics#WorkflowName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the workflow.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.omics#WorkflowDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the workflow.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.omics#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.omics#VariantImportItemDetail": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        },
        "jobStatus": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The item's job status.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an imported variant item.</p>"
      }
    },
    "com.amazonaws.omics#VariantImportItemDetails": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#VariantImportItemDetail"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#VariantImportItemSource": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.omics#S3Uri",
          "traits": {
            "smithy.api#documentation": "<p>The source file's location in Amazon S3.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A imported variant item's source.</p>"
      }
    },
    "com.amazonaws.omics#VariantImportItemSources": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#VariantImportItemSource"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.omics#VariantImportJob": {
      "type": "resource",
      "identifiers": {
        "jobId": {
          "target": "com.amazonaws.omics#ResourceId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#StartVariantImportJob"
      },
      "read": {
        "target": "com.amazonaws.omics#GetVariantImportJob"
      },
      "delete": {
        "target": "com.amazonaws.omics#CancelVariantImportJob"
      },
      "list": {
        "target": "com.amazonaws.omics#ListVariantImportJobs"
      }
    },
    "com.amazonaws.omics#VariantImportJobItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The job's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The job's destination variant store.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The job's service role ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#JobStatus",
          "traits": {
            "smithy.api#documentation": "<p>The job's status.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "completionTime": {
          "target": "com.amazonaws.omics#CompletionTime",
          "traits": {
            "smithy.api#documentation": "<p>When the job completed.</p>"
          }
        },
        "runLeftNormalization": {
          "target": "com.amazonaws.omics#RunLeftNormalization",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The job's left normalization setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A variant import job.</p>"
      }
    },
    "com.amazonaws.omics#VariantImportJobItems": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#VariantImportJobItem"
      }
    },
    "com.amazonaws.omics#VariantStore": {
      "type": "resource",
      "identifiers": {
        "name": {
          "target": "smithy.api#String"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateVariantStore"
      },
      "read": {
        "target": "com.amazonaws.omics#GetVariantStore"
      },
      "update": {
        "target": "com.amazonaws.omics#UpdateVariantStore"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteVariantStore"
      },
      "list": {
        "target": "com.amazonaws.omics#ListVariantStores"
      }
    },
    "com.amazonaws.omics#VariantStoreItem": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.omics#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The store's ID.</p>",
            "smithy.api#required": {}
          }
        },
        "reference": {
          "target": "com.amazonaws.omics#ReferenceItem",
          "traits": {
            "smithy.api#documentation": "<p>The store's genome reference.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.omics#StoreStatus",
          "traits": {
            "smithy.api#documentation": "<p>The store's status.</p>",
            "smithy.api#required": {}
          }
        },
        "storeArn": {
          "target": "com.amazonaws.omics#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The store's ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The store's name.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.omics#StoreDescription",
          "traits": {
            "smithy.api#documentation": "<p>The store's description.</p>",
            "smithy.api#required": {}
          }
        },
        "sseConfig": {
          "target": "com.amazonaws.omics#SseConfig",
          "traits": {
            "smithy.api#documentation": "<p>The store's server-side encryption (SSE) settings.</p>",
            "smithy.api#required": {}
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#CreationTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was created.</p>",
            "smithy.api#required": {}
          }
        },
        "updateTime": {
          "target": "com.amazonaws.omics#UpdateTime",
          "traits": {
            "smithy.api#documentation": "<p>When the store was updated.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.omics#StatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The store's status message.</p>",
            "smithy.api#required": {}
          }
        },
        "storeSizeBytes": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#documentation": "<p>The store's size in bytes.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A variant store.</p>"
      }
    },
    "com.amazonaws.omics#VariantStoreItems": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#VariantStoreItem"
      }
    },
    "com.amazonaws.omics#VcfOptions": {
      "type": "structure",
      "members": {
        "ignoreQualField": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>The file's ignore qual field setting.</p>"
          }
        },
        "ignoreFilterField": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>The file's ignore filter field setting.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Formatting options for a VCF file.</p>"
      }
    },
    "com.amazonaws.omics#WorkflowArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:.+$"
      }
    },
    "com.amazonaws.omics#WorkflowDefinition": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowDigest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#WorkflowEngine": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "WDL",
            "value": "WDL"
          },
          {
            "name": "NEXTFLOW",
            "value": "NEXTFLOW"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#WorkflowExport": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "DEFINITION",
            "value": "DEFINITION"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#WorkflowExportList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#WorkflowExport"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 32
        }
      }
    },
    "com.amazonaws.omics#WorkflowId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 18
        },
        "smithy.api#pattern": "^[0-9]+$"
      }
    },
    "com.amazonaws.omics#WorkflowList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.omics#WorkflowListItem"
      }
    },
    "com.amazonaws.omics#WorkflowListItem": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.omics#WorkflowArn",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ARN.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.omics#WorkflowId",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.omics#WorkflowName",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's name.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.omics#WorkflowStatus",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's status.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.omics#WorkflowType",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's type.</p>"
          }
        },
        "digest": {
          "target": "com.amazonaws.omics#WorkflowDigest",
          "traits": {
            "smithy.api#documentation": "<p>The workflow's digest.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.omics#WorkflowTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the workflow was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A workflow.</p>"
      }
    },
    "com.amazonaws.omics#WorkflowListToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowMain": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowParameter": {
      "type": "structure",
      "members": {
        "description": {
          "target": "com.amazonaws.omics#WorkflowParameterDescription",
          "traits": {
            "smithy.api#documentation": "<p>The parameter's description.</p>"
          }
        },
        "optional": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether the parameter is optional.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A workflow parameter.</p>"
      }
    },
    "com.amazonaws.omics#WorkflowParameterDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowParameterName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowParameterTemplate": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.omics#WorkflowParameterName"
      },
      "value": {
        "target": "com.amazonaws.omics#WorkflowParameter"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.omics#WorkflowRequestId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowResource": {
      "type": "resource",
      "identifiers": {
        "id": {
          "target": "com.amazonaws.omics#WorkflowId"
        }
      },
      "create": {
        "target": "com.amazonaws.omics#CreateWorkflow"
      },
      "read": {
        "target": "com.amazonaws.omics#GetWorkflow"
      },
      "update": {
        "target": "com.amazonaws.omics#UpdateWorkflow"
      },
      "delete": {
        "target": "com.amazonaws.omics#DeleteWorkflow"
      },
      "list": {
        "target": "com.amazonaws.omics#ListWorkflows"
      },
      "traits": {
        "aws.api#arn": {
          "template": "workflow/{id}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "workflow"
        }
      }
    },
    "com.amazonaws.omics#WorkflowStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "CREATING",
            "value": "CREATING"
          },
          {
            "name": "ACTIVE",
            "value": "ACTIVE"
          },
          {
            "name": "UPDATING",
            "value": "UPDATING"
          },
          {
            "name": "DELETED",
            "value": "DELETED"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.omics#WorkflowStatusMessage": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[\\p{L}||\\p{M}||\\p{Z}||\\p{S}||\\p{N}||\\p{P}]+$"
      }
    },
    "com.amazonaws.omics#WorkflowTimestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.omics#WorkflowType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "PRIVATE",
            "value": "PRIVATE"
          }
        ],
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    }
  }
}
