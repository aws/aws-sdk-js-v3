{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.ivsrealtime#AccessDeniedException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>User does not have sufficient access to perform this action.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.ivsrealtime#AmazonInteractiveVideoServiceRealTime": {
      "type": "service",
      "version": "2020-07-14",
      "operations": [
        {
          "target": "com.amazonaws.ivsrealtime#CreateEncoderConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#CreateParticipantToken"
        },
        {
          "target": "com.amazonaws.ivsrealtime#CreateStage"
        },
        {
          "target": "com.amazonaws.ivsrealtime#CreateStorageConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#DeleteEncoderConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#DeleteStage"
        },
        {
          "target": "com.amazonaws.ivsrealtime#DeleteStorageConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#DisconnectParticipant"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetComposition"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetEncoderConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetParticipant"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetStage"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetStageSession"
        },
        {
          "target": "com.amazonaws.ivsrealtime#GetStorageConfiguration"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListCompositions"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListEncoderConfigurations"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListParticipantEvents"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListParticipants"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListStages"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListStageSessions"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListStorageConfigurations"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.ivsrealtime#StartComposition"
        },
        {
          "target": "com.amazonaws.ivsrealtime#StopComposition"
        },
        {
          "target": "com.amazonaws.ivsrealtime#TagResource"
        },
        {
          "target": "com.amazonaws.ivsrealtime#UntagResource"
        },
        {
          "target": "com.amazonaws.ivsrealtime#UpdateStage"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "IVS RealTime",
          "arnNamespace": "ivs",
          "cloudFormationName": "IVS",
          "cloudTrailEventSource": "REPLACE_WITH_EVENT_SOURCE",
          "endpointPrefix": "ivsrealtime"
        },
        "aws.auth#sigv4": {
          "name": "ivs"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "Content-Type",
            "X-Api-Key",
            "X-Amz-Content-Sha256",
            "X-Amz-User-Agent",
            "amz-sdk-invocation-id",
            "amz-sdk-request"
          ],
          "additionalExposedHeaders": [
            "x-amzn-errortype",
            "x-amzn-requestid",
            "x-amzn-errormessage",
            "x-amzn-trace-id",
            "x-amzn-requestid",
            "x-amz-apigw-id",
            "date"
          ]
        },
        "smithy.api#documentation": "<p>\n            <b>Introduction</b>\n         </p>\n         <p>The Amazon Interactive Video Service (IVS) real-time API is REST compatible, using a standard HTTP \n\t  API and an AWS EventBridge event stream for responses. JSON is used for both requests and responses, \n\t  including errors.\n    </p>\n         <p>Terminology:</p>\n         <ul>\n            <li>\n               <p>A <i>stage</i>  is a virtual space where participants can exchange video in real time.</p>\n            </li>\n            <li>\n               <p>A <i>participant token</i> is a token that authenticates a participant when they join a stage.</p>\n            </li>\n            <li>\n               <p>A <i>participant object</i> represents participants (people) in the stage and\n          contains information about them. When a token is created, it includes a participant ID;\n          when a participant uses that token to join a stage, the participant is associated with\n          that participant ID. There is a 1:1 mapping between participant tokens and\n          participants.</p>\n            </li>\n            <li>\n               <p>Server-side composition: The <i>composition</i> process composites participants\n          of a stage into a single video and forwards it to a set of outputs (e.g., IVS channels).\n          Composition endpoints support this process.</p>\n            </li>\n            <li>\n               <p>Server-side composition: A <i>composition</i> controls the look of the outputs,\n          including how participants are positioned in the video.</p>\n            </li>\n         </ul>\n         <p>\n            <b>Resources</b>\n         </p>\n         <p>The following resources contain information about your IVS live stream (see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started.html\">Getting Started with Amazon IVS Real-Time Streaming</a>):</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Stage</b> — A stage is a virtual space where participants can exchange video in real time.</p>\n            </li>\n         </ul>\n         <p>\n            <b>Tagging</b>\n         </p>\n         <p>A <i>tag</i> is a metadata label that you assign to an AWS resource. A tag\n      comprises a <i>key</i> and a <i>value</i>, both set by you. For\n      example, you might set a tag as <code>topic:nature</code> to label a particular video\n      category. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS Resources</a> for more information, including restrictions that apply to\n      tags and \"Tag naming limits and requirements\"; Amazon IVS stages has no service-specific\n      constraints beyond what is documented there.</p>\n         <p>Tags can help you identify and organize your AWS resources. For example, you can use the\n      same tag for different resources to indicate that they are related. You can also use tags to\n      manage access (see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Access Tags</a>).</p>\n         <p>The Amazon IVS real-time API has these tag-related endpoints: <a>TagResource</a>, <a>UntagResource</a>, and\n      <a>ListTagsForResource</a>. The following resource supports tagging: Stage.</p>\n         <p>At most 50 tags can be applied to a resource.</p>\n         <p>\n            <b>Stages Endpoints</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a>CreateParticipantToken</a> — Creates an additional token for a specified stage. This can be done after stage creation or when tokens expire.</p>\n            </li>\n            <li>\n               <p>\n                  <a>CreateStage</a> — Creates a new stage (and optionally participant tokens).</p>\n            </li>\n            <li>\n               <p>\n                  <a>DeleteStage</a> — Shuts down and deletes the specified stage (disconnecting all participants).</p>\n            </li>\n            <li>\n               <p>\n                  <a>DisconnectParticipant</a> — Disconnects a specified participant and revokes the participant permanently from a specified stage.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetParticipant</a> — Gets information about the specified\n          participant token.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetStage</a> — Gets information for the specified stage.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetStageSession</a> — Gets information for the specified stage\n          session.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListParticipantEvents</a> — Lists events for a specified\n          participant that occurred during a specified stage session.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListParticipants</a> — Lists all participants in a specified stage\n          session.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListStages</a> — Gets summary information about all stages in your account, in the AWS region where the API request is processed.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListStageSessions</a> — Gets all sessions for a specified stage.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UpdateStage</a> — Updates a stage’s configuration.</p>\n            </li>\n         </ul>\n         <p>\n            <b>Composition Endpoints</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a>GetComposition</a> — Gets information about the specified\n          Composition resource.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListCompositions</a> — Gets summary information about all\n          Compositions in your account, in the AWS region where the API request is processed.</p>\n            </li>\n            <li>\n               <p>\n                  <a>StartComposition</a> — Starts a Composition from a stage based on\n          the configuration provided in the request.</p>\n            </li>\n            <li>\n               <p>\n                  <a>StopComposition</a> — Stops and deletes a Composition resource.\n          Any broadcast from the Composition resource is stopped.</p>\n            </li>\n         </ul>\n         <p>\n            <b>EncoderConfiguration Endpoints</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a>CreateEncoderConfiguration</a> — Creates an EncoderConfiguration object.</p>\n            </li>\n            <li>\n               <p>\n                  <a>DeleteEncoderConfiguration</a> — Deletes an EncoderConfiguration\n          resource. Ensures that no Compositions are using this template; otherwise, returns an\n          error.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetEncoderConfiguration</a> — Gets information about the specified\n          EncoderConfiguration resource.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListEncoderConfigurations</a> — Gets summary information about all\n          EncoderConfigurations in your account, in the AWS region where the API request is\n          processed.</p>\n            </li>\n         </ul>\n         <p>\n            <b>StorageConfiguration Endpoints</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a>CreateStorageConfiguration</a> — Creates a new storage configuration, used to enable \n\t\trecording to Amazon S3.</p>\n            </li>\n            <li>\n               <p>\n                  <a>DeleteStorageConfiguration</a> — Deletes the storage configuration for the specified ARN.</p>\n            </li>\n            <li>\n               <p>\n                  <a>GetStorageConfiguration</a> — Gets the storage configuration for the specified ARN.</p>\n            </li>\n            <li>\n               <p>\n                  <a>ListStorageConfigurations</a> — Gets summary information about all storage configurations in your \n\t\taccount, in the AWS region where the API request is processed.</p>\n            </li>\n         </ul>\n         <p>\n            <b>Tags Endpoints</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <a>ListTagsForResource</a> — Gets information about AWS tags for the\n          specified ARN.</p>\n            </li>\n            <li>\n               <p>\n                  <a>TagResource</a> — Adds or updates tags for the AWS resource with\n          the specified ARN.</p>\n            </li>\n            <li>\n               <p>\n                  <a>UntagResource</a> — Removes tags from the resource with the\n          specified ARN.</p>\n            </li>\n         </ul>",
        "smithy.api#title": "Amazon Interactive Video Service RealTime",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": {
                          "ref": "Endpoint"
                        },
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://ivsrealtime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    },
                                    true
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://ivsrealtime-fips.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS is enabled but this partition does not support FIPS",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://ivsrealtime.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "DualStack is enabled but this partition does not support DualStack",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://ivsrealtime.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ],
              "type": "tree"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ivsrealtime.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.ivsrealtime#AttributeKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#AutoParticipantRecordingConfiguration": {
      "type": "structure",
      "members": {
        "storageConfigurationArn": {
          "target": "com.amazonaws.ivsrealtime#AutoParticipantRecordingStorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the <a>StorageConfiguration</a> resource to use for auto participant recording. Default: \"\" (empty string, no storage configuration is specified).  Individual participant recording cannot be started unless a storage configuration is specified, when a  <a>Stage</a> is created or updated.</p>",
            "smithy.api#required": {}
          }
        },
        "mediaTypes": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingMediaTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Types of media to be recorded. Default: <code>AUDIO_VIDEO</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying an auto-participant-recording configuration.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#AutoParticipantRecordingStorageConfigurationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$$"
      }
    },
    "com.amazonaws.ivsrealtime#Bitrate": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 8500000
        }
      }
    },
    "com.amazonaws.ivsrealtime#ChannelArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#ChannelDestinationConfiguration": {
      "type": "structure",
      "members": {
        "channelArn": {
          "target": "com.amazonaws.ivsrealtime#ChannelArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the channel to use for broadcasting. The channel and stage resources must be in\n         the same AWS account and region. The channel must be offline (not broadcasting).</p>",
            "smithy.api#required": {}
          }
        },
        "encoderConfigurationArn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the <a>EncoderConfiguration</a> resource. The encoder configuration\n         and stage resources must be in the same AWS account and region.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying a channel as a destination.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#Composition": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#CompositionArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the Composition resource.</p>",
            "smithy.api#required": {}
          }
        },
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage used as input</p>",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#CompositionState",
          "traits": {
            "smithy.api#documentation": "<p>State of the Composition.</p>",
            "smithy.api#required": {}
          }
        },
        "layout": {
          "target": "com.amazonaws.ivsrealtime#LayoutConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Layout object to configure composition parameters.</p>",
            "smithy.api#required": {}
          }
        },
        "destinations": {
          "target": "com.amazonaws.ivsrealtime#DestinationList",
          "traits": {
            "smithy.api#documentation": "<p>Array of Destination objects. A Composition can contain either one destination \n\t        (<code>channel</code> or <code>s3</code>) or two (one <code>channel</code> and one <code>s3</code>).</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n         (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the Composition start. This is an ISO 8601 timestamp; <i>note that\n         this is returned as a string</i>.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the Composition end. This is an ISO 8601 timestamp; <i>note that\n         this is returned as a string</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying a Composition resource.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#CompositionArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:composition/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#CompositionClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#CompositionState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "STARTING",
            "name": "STARTING"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "STOPPING",
            "name": "STOPPING"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "STOPPED",
            "name": "STOPPED"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#CompositionSummary": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#CompositionArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the Composition resource.</p>",
            "smithy.api#required": {}
          }
        },
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the attached stage.</p>",
            "smithy.api#required": {}
          }
        },
        "destinations": {
          "target": "com.amazonaws.ivsrealtime#DestinationSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>Array of Destination objects.</p>",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#CompositionState",
          "traits": {
            "smithy.api#documentation": "<p>State of the Composition resource.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n         (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the Composition start. This is an ISO 8601 timestamp; <i>note that\n         this is returned as a string</i>.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the Composition end. This is an ISO 8601 timestamp; <i>note that\n         this is returned as a string</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a Composition.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#CompositionSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#CompositionSummary"
      }
    },
    "com.amazonaws.ivsrealtime#ConflictException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Updating or deleting a resource can cause an inconsistent state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.ivsrealtime#CreateEncoderConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#CreateEncoderConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#CreateEncoderConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an EncoderConfiguration object.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateEncoderConfiguration"
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateEncoderConfigurationRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Optional name to identify the resource.</p>"
          }
        },
        "video": {
          "target": "com.amazonaws.ivsrealtime#Video",
          "traits": {
            "smithy.api#documentation": "<p>Video configuration. Default: video resolution 1280x720, bitrate 2500 kbps, 30\n         fps.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#CreateEncoderConfigurationResponse": {
      "type": "structure",
      "members": {
        "encoderConfiguration": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The EncoderConfiguration that was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#CreateParticipantToken": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#CreateParticipantTokenRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#CreateParticipantTokenResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an additional token for a specified stage. This can be done after stage creation\n         or when tokens expire. Tokens always are scoped to the stage for which they are\n         created.</p>\n         <p>Encryption keys are owned by Amazon IVS and never used directly by your\n         application.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateParticipantToken"
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateParticipantTokenRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage to which this token is scoped.</p>",
            "smithy.api#required": {}
          }
        },
        "duration": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenDurationMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Duration (in minutes), after which the token expires. Default: 720 (12 hours).</p>"
          }
        },
        "userId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenUserId",
          "traits": {
            "smithy.api#documentation": "<p>Name that can be specified to help identify the token. This can be any UTF-8 encoded\n         text. <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information.</i>\n         </p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenAttributes",
          "traits": {
            "smithy.api#documentation": "<p>Application-provided attributes to encode into the token and attach to a stage. Map keys\n         and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information.</i>\n         </p>"
          }
        },
        "capabilities": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>Set of capabilities that the user is allowed to perform in the stage. Default:\n            <code>PUBLISH, SUBSCRIBE</code>.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateParticipantTokenResponse": {
      "type": "structure",
      "members": {
        "participantToken": {
          "target": "com.amazonaws.ivsrealtime#ParticipantToken",
          "traits": {
            "smithy.api#documentation": "<p>The participant token that was created.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#CreateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#CreateStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new stage (and optionally participant tokens).</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateStage"
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateStageRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ivsrealtime#StageName",
          "traits": {
            "smithy.api#documentation": "<p>Optional name that can be specified for the stage being created.</p>"
          }
        },
        "participantTokenConfigurations": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>Array of participant token configuration objects to attach to the new stage.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there. </p>"
          }
        },
        "autoParticipantRecordingConfiguration": {
          "target": "com.amazonaws.ivsrealtime#AutoParticipantRecordingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Auto participant recording configuration object attached to the stage.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateStageResponse": {
      "type": "structure",
      "members": {
        "stage": {
          "target": "com.amazonaws.ivsrealtime#Stage",
          "traits": {
            "smithy.api#documentation": "<p>The stage that was created.</p>"
          }
        },
        "participantTokens": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenList",
          "traits": {
            "smithy.api#documentation": "<p>Participant tokens attached to the stage. These correspond to the\n            <code>participants</code> in the request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateStorageConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#CreateStorageConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#CreateStorageConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new storage configuration, used to enable recording to Amazon S3. \n\t  When a StorageConfiguration is created, IVS will modify the S3 bucketPolicy of the provided bucket. \n\t  This will ensure that IVS has sufficient permissions to write content to the provided bucket.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateStorageConfiguration"
        }
      }
    },
    "com.amazonaws.ivsrealtime#CreateStorageConfigurationRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Storage configuration name. The value does not need to be unique.</p>"
          }
        },
        "s3": {
          "target": "com.amazonaws.ivsrealtime#S3StorageConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains a storage configuration for where recorded video will be stored.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#CreateStorageConfigurationResponse": {
      "type": "structure",
      "members": {
        "storageConfiguration": {
          "target": "com.amazonaws.ivsrealtime#StorageConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The StorageConfiguration that was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#DeleteEncoderConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#DeleteEncoderConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#DeleteEncoderConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an EncoderConfiguration resource. Ensures that no Compositions are using this\n         template; otherwise, returns an error.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteEncoderConfiguration"
        }
      }
    },
    "com.amazonaws.ivsrealtime#DeleteEncoderConfigurationRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the EncoderConfiguration.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#DeleteEncoderConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#DeleteStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#DeleteStageRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#DeleteStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Shuts down and deletes the specified stage (disconnecting all participants).</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteStage"
        }
      }
    },
    "com.amazonaws.ivsrealtime#DeleteStageRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage to be deleted.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#DeleteStageResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ivsrealtime#DeleteStorageConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#DeleteStorageConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#DeleteStorageConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the storage configuration for the specified ARN.</p>\n         <p>If you try to delete a storage configuration that is used by a Composition, you will get an error (409 ConflictException). \n\t  To avoid this, for all Compositions that reference the storage configuration, first use <a>StopComposition</a> and wait for it to complete, \n\t  then use DeleteStorageConfiguration.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteStorageConfiguration"
        }
      }
    },
    "com.amazonaws.ivsrealtime#DeleteStorageConfigurationRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the storage configuration to be deleted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#DeleteStorageConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#Destination": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.ivsrealtime#String",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this destination, assigned by IVS.</p>",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#DestinationState",
          "traits": {
            "smithy.api#documentation": "<p>State of the Composition Destination.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that\n            this is returned as a string</i>.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this\n            is returned as a string</i>.</p>"
          }
        },
        "configuration": {
          "target": "com.amazonaws.ivsrealtime#DestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration used to create this destination.</p>",
            "smithy.api#required": {}
          }
        },
        "detail": {
          "target": "com.amazonaws.ivsrealtime#DestinationDetail",
          "traits": {
            "smithy.api#documentation": "<p>Optional details regarding the status of the destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying the status of a Destination.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#DestinationConfiguration": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ivsrealtime#DestinationConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Name that can be specified to help identify the destination.</p>"
          }
        },
        "channel": {
          "target": "com.amazonaws.ivsrealtime#ChannelDestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>An IVS channel to be used for broadcasting, for server-side composition. Either a <code>channel</code> or an \n\t  <code>s3</code> must be specified. </p>"
          }
        },
        "s3": {
          "target": "com.amazonaws.ivsrealtime#S3DestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>An S3 storage configuration to be used for recording video data. Either a <code>channel</code> \n\t  or an <code>s3</code> must be specified.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Complex data type that defines destination-configuration objects.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#DestinationConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#DestinationConfiguration"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.ivsrealtime#DestinationConfigurationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#DestinationDetail": {
      "type": "structure",
      "members": {
        "s3": {
          "target": "com.amazonaws.ivsrealtime#S3Detail",
          "traits": {
            "smithy.api#documentation": "<p>An S3 detail object to return information about the S3 destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Complex data type that defines destination-detail objects.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#DestinationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#Destination"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.ivsrealtime#DestinationState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "name": "STARTING",
            "value": "STARTING"
          },
          {
            "name": "ACTIVE",
            "value": "ACTIVE"
          },
          {
            "name": "STOPPING",
            "value": "STOPPING"
          },
          {
            "name": "RECONNECTING",
            "value": "RECONNECTING"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          },
          {
            "name": "STOPPED",
            "value": "STOPPED"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#DestinationSummary": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.ivsrealtime#String",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this destination, assigned by IVS.</p>",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#DestinationState",
          "traits": {
            "smithy.api#documentation": "<p>State of the Composition Destination.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the destination start. This is an ISO 8601 timestamp; <i>note that\n            this is returned as a string</i>.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>UTC time of the destination end. This is an ISO 8601 timestamp; <i>note that this\n            is returned as a string</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a Destination.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#DestinationSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#DestinationSummary"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2
        },
        "smithy.api#uniqueItems": {}
      }
    },
    "com.amazonaws.ivsrealtime#DisconnectParticipant": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#DisconnectParticipantRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#DisconnectParticipantResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Disconnects a specified participant and revokes the participant permanently from a\n         specified stage.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DisconnectParticipant"
        }
      }
    },
    "com.amazonaws.ivsrealtime#DisconnectParticipantReason": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        }
      }
    },
    "com.amazonaws.ivsrealtime#DisconnectParticipantRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage to which the participant is attached.</p>",
            "smithy.api#required": {}
          }
        },
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenId",
          "traits": {
            "smithy.api#documentation": "<p>Identifier of the participant to be disconnected. This is assigned by IVS and returned\n         by <a>CreateParticipantToken</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "reason": {
          "target": "com.amazonaws.ivsrealtime#DisconnectParticipantReason",
          "traits": {
            "smithy.api#documentation": "<p>Description of why this participant is being disconnected.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#DisconnectParticipantResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ivsrealtime#EncoderConfiguration": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the EncoderConfiguration resource.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Optional name to identify the resource.</p>"
          }
        },
        "video": {
          "target": "com.amazonaws.ivsrealtime#Video",
          "traits": {
            "smithy.api#documentation": "<p>Video configuration. Default: video resolution 1280x720, bitrate 2500 kbps, 30\n         fps</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Settings for transcoding.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#EncoderConfigurationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:encoder-configuration/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#EncoderConfigurationArnList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.ivsrealtime#EncoderConfigurationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#EncoderConfigurationSummary": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the EncoderConfiguration resource.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Optional name to identify the resource.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about an EncoderConfiguration.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#EncoderConfigurationSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#EncoderConfigurationSummary"
      }
    },
    "com.amazonaws.ivsrealtime#Event": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ivsrealtime#EventName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the event.</p>"
          }
        },
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for the participant who triggered the event. This is assigned by\n         IVS.</p>"
          }
        },
        "eventTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) for when the event occurred.</p>"
          }
        },
        "remoteParticipantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for the remote participant. For a subscribe event, this is the\n         publisher. For a publish or join event, this is null. This is assigned by IVS.</p>"
          }
        },
        "errorCode": {
          "target": "com.amazonaws.ivsrealtime#EventErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>If the event is an error event, the error code is provided to give insight into the\n         specific error that occurred. If the event is not an error event, this field is null.\n            <code>INSUFFICIENT_CAPABILITIES</code> indicates that the participant tried to take an\n         action that the participant’s token is not allowed to do. For more information about\n         participant capabilities, see the <code>capabilities</code> field in <a>CreateParticipantToken</a>. <code>QUOTA_EXCEEDED</code> indicates that the\n         number of participants who want to publish/subscribe to a stage exceeds the quota; for more\n         information, see <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/service-quotas.html\">Service Quotas</a>.\n            <code>PUBLISHER_NOT_FOUND</code> indicates that the participant tried to subscribe to a\n         publisher that doesn’t exist. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An occurrence during a stage session.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#EventErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "INSUFFICIENT_CAPABILITIES",
            "name": "INSUFFICIENT_CAPABILITIES"
          },
          {
            "value": "QUOTA_EXCEEDED",
            "name": "QUOTA_EXCEEDED"
          },
          {
            "value": "PUBLISHER_NOT_FOUND",
            "name": "PUBLISHER_NOT_FOUND"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#EventList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#Event"
      }
    },
    "com.amazonaws.ivsrealtime#EventName": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "JOINED",
            "name": "JOINED"
          },
          {
            "value": "LEFT",
            "name": "LEFT"
          },
          {
            "value": "PUBLISH_STARTED",
            "name": "PUBLISH_STARTED"
          },
          {
            "value": "PUBLISH_STOPPED",
            "name": "PUBLISH_STOPPED"
          },
          {
            "value": "SUBSCRIBE_STARTED",
            "name": "SUBSCRIBE_STARTED"
          },
          {
            "value": "SUBSCRIBE_STOPPED",
            "name": "SUBSCRIBE_STOPPED"
          },
          {
            "value": "PUBLISH_ERROR",
            "name": "PUBLISH_ERROR"
          },
          {
            "value": "SUBSCRIBE_ERROR",
            "name": "SUBSCRIBE_ERROR"
          },
          {
            "value": "JOIN_ERROR",
            "name": "JOIN_ERROR"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#Framerate": {
      "type": "float",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 60
        }
      }
    },
    "com.amazonaws.ivsrealtime#GetComposition": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetCompositionRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetCompositionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Get information about the specified Composition resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetComposition"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetCompositionRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#CompositionArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the Composition resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetCompositionResponse": {
      "type": "structure",
      "members": {
        "composition": {
          "target": "com.amazonaws.ivsrealtime#Composition",
          "traits": {
            "smithy.api#documentation": "<p>The Composition that was returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetEncoderConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetEncoderConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetEncoderConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the specified EncoderConfiguration resource. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetEncoderConfiguration"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetEncoderConfigurationRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the EncoderConfiguration resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetEncoderConfigurationResponse": {
      "type": "structure",
      "members": {
        "encoderConfiguration": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The EncoderConfiguration that was returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetParticipant": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetParticipantRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetParticipantResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about the specified participant token.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetParticipant"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetParticipantRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of a session within the stage.</p>",
            "smithy.api#required": {}
          }
        },
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for the participant. This is assigned by IVS and returned by <a>CreateParticipantToken</a>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetParticipantResponse": {
      "type": "structure",
      "members": {
        "participant": {
          "target": "com.amazonaws.ivsrealtime#Participant",
          "traits": {
            "smithy.api#documentation": "<p>The participant that is returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetStageRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information for the specified stage.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetStage"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStageRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage for which the information is to be retrieved.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#GetStageResponse": {
      "type": "structure",
      "members": {
        "stage": {
          "target": "com.amazonaws.ivsrealtime#Stage",
          "traits": {
            "smithy.api#documentation": "<p>The stage that is returned.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#GetStageSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetStageSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetStageSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information for the specified stage session.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetStageSession"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStageSessionRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage for which the information is to be retrieved.</p>",
            "smithy.api#required": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of a session within the stage.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStageSessionResponse": {
      "type": "structure",
      "members": {
        "stageSession": {
          "target": "com.amazonaws.ivsrealtime#StageSession",
          "traits": {
            "smithy.api#documentation": "<p>The stage session that is returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStorageConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#GetStorageConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#GetStorageConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the storage configuration for the specified ARN.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetStorageConfiguration"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStorageConfigurationRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the storage configuration to be retrieved.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#GetStorageConfigurationResponse": {
      "type": "structure",
      "members": {
        "storageConfiguration": {
          "target": "com.amazonaws.ivsrealtime#StorageConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The StorageConfiguration that was returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#GridConfiguration": {
      "type": "structure",
      "members": {
        "featuredParticipantAttribute": {
          "target": "com.amazonaws.ivsrealtime#AttributeKey",
          "traits": {
            "smithy.api#documentation": "<p>This attribute name identifies the featured slot. A participant with this attribute set\n         to <code>\"true\"</code> (as a string value) in <a>ParticipantTokenConfiguration</a> is placed in the featured\n         slot.</p>"
          }
        },
        "omitStoppedVideo": {
          "target": "com.amazonaws.ivsrealtime#OmitStoppedVideo",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Determines whether to omit participants with stopped video in the composition. Default: <code>false</code>.</p>"
          }
        },
        "videoAspectRatio": {
          "target": "com.amazonaws.ivsrealtime#VideoAspectRatio",
          "traits": {
            "smithy.api#documentation": "<p>Sets the non-featured participant display mode. Default: <code>VIDEO</code>.</p>"
          }
        },
        "videoFillMode": {
          "target": "com.amazonaws.ivsrealtime#VideoFillMode",
          "traits": {
            "smithy.api#documentation": "<p>Defines how video fits within the participant tile. When not set, \n\t  <code>videoFillMode</code> defaults to <code>COVER</code> fill mode for participants in the grid \n\t  and to <code>CONTAIN</code> fill mode for featured participants.</p>"
          }
        },
        "gridGap": {
          "target": "com.amazonaws.ivsrealtime#GridGap",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Specifies the spacing between participant tiles in pixels. Default: <code>2</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration information specific to Grid layout, for server-side composition. See\n         \"Layouts\" in <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/server-side-composition.html\">Server-Side\n            Composition</a>.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#GridGap": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ivsrealtime#Height": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1920
        }
      }
    },
    "com.amazonaws.ivsrealtime#InternalServerException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Unexpected error during processing of request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.ivsrealtime#LayoutConfiguration": {
      "type": "structure",
      "members": {
        "grid": {
          "target": "com.amazonaws.ivsrealtime#GridConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration related to grid layout. Default: Grid layout.</p>"
          }
        },
        "pip": {
          "target": "com.amazonaws.ivsrealtime#PipConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration related to PiP layout.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration information of supported layouts for server-side composition.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ListCompositions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListCompositionsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListCompositionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets summary information about all Compositions in your account, in the AWS region\n         where the API request is processed. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListCompositions"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListCompositionsRequest": {
      "type": "structure",
      "members": {
        "filterByStageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Filters the Composition list to match the specified Stage ARN.</p>"
          }
        },
        "filterByEncoderConfigurationArn": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>Filters the Composition list to match the specified EncoderConfiguration attached to at\n         least one of its output.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first Composition to retrieve. This is used for pagination; see the\n         <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxCompositionResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 100.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListCompositionsResponse": {
      "type": "structure",
      "members": {
        "compositions": {
          "target": "com.amazonaws.ivsrealtime#CompositionSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching Compositions (summary information only).</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more compositions than <code>maxResults</code>, use <code>nextToken</code>\n         in the request to get the next set.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListEncoderConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListEncoderConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListEncoderConfigurationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets summary information about all EncoderConfigurations in your account, in the AWS\n         region where the API request is processed.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListEncoderConfigurations"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListEncoderConfigurationsRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first encoder configuration to retrieve. This is used for pagination; see the\n            <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxEncoderConfigurationResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 100.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListEncoderConfigurationsResponse": {
      "type": "structure",
      "members": {
        "encoderConfigurations": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching EncoderConfigurations (summary information only).</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more encoder configurations than <code>maxResults</code>, use\n            <code>nextToken</code> in the request to get the next set.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipantEvents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListParticipantEventsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListParticipantEventsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists events for a specified participant that occurred during a specified stage\n         session.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListParticipantEvents"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipantEventsRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of a session within the stage.</p>",
            "smithy.api#required": {}
          }
        },
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this participant. This is assigned by IVS and returned by <a>CreateParticipantToken</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first participant event to retrieve. This is used for pagination; see the\n            <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxParticipantEventResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 50.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipantEventsResponse": {
      "type": "structure",
      "members": {
        "events": {
          "target": "com.amazonaws.ivsrealtime#EventList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching events.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more events than <code>maxResults</code>, use <code>nextToken</code> in the\n         request to get the next set. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipants": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListParticipantsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListParticipantsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all participants in a specified stage session.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListParticipants"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipantsRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of the session within the stage.</p>",
            "smithy.api#required": {}
          }
        },
        "filterByUserId": {
          "target": "com.amazonaws.ivsrealtime#UserId",
          "traits": {
            "smithy.api#documentation": "<p>Filters the response list to match the specified user ID. \n            Only one of <code>filterByUserId</code>, <code>filterByPublished</code>, \n            <code>filterByState</code>, or <code>filterByRecordingState</code> can be provided per request.\n\t    A <code>userId</code> is a\n            customer-assigned name to help identify the token; this can be used to link a participant\n            to a user in the customer’s own systems.</p>"
          }
        },
        "filterByPublished": {
          "target": "com.amazonaws.ivsrealtime#Published",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Filters the response list to only show participants who published during the stage session.\n            Only one of <code>filterByUserId</code>, <code>filterByPublished</code>, \n            <code>filterByState</code>, or <code>filterByRecordingState</code> can be provided per request.</p>"
          }
        },
        "filterByState": {
          "target": "com.amazonaws.ivsrealtime#ParticipantState",
          "traits": {
            "smithy.api#documentation": "<p>Filters the response list to only show participants in the specified state. \n            Only one of <code>filterByUserId</code>, <code>filterByPublished</code>, \n            <code>filterByState</code>, or <code>filterByRecordingState</code> can be provided per request.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first participant to retrieve. This is used for pagination; see the\n            <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxParticipantResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 50.</p>"
          }
        },
        "filterByRecordingState": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingFilterByRecordingState",
          "traits": {
            "smithy.api#documentation": "<p>Filters the response list to only show participants with the specified recording state.\n            Only one of <code>filterByUserId</code>, <code>filterByPublished</code>, \n            <code>filterByState</code>, or <code>filterByRecordingState</code> can be provided per request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListParticipantsResponse": {
      "type": "structure",
      "members": {
        "participants": {
          "target": "com.amazonaws.ivsrealtime#ParticipantList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching participants (summary information only).</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more participants than <code>maxResults</code>, use <code>nextToken</code>\n         in the request to get the next set.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStageSessions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListStageSessionsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListStageSessionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets all sessions for a specified stage.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListStageSessions"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStageSessionsRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first stage session to retrieve. This is used for pagination; see the\n            <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxStageSessionResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 50.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStageSessionsResponse": {
      "type": "structure",
      "members": {
        "stageSessions": {
          "target": "com.amazonaws.ivsrealtime#StageSessionList",
          "traits": {
            "smithy.api#documentation": "<p>List of matching stage sessions.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more stage sessions than <code>maxResults</code>, use\n            <code>nextToken</code> in the request to get the next set.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListStagesRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListStagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets summary information about all stages in your account, in the AWS region where the\n         API request is processed.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListStages"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStagesRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first stage to retrieve. This is used for pagination; see the <code>nextToken</code>\n         response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxStageResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of results to return. Default: 50.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#ListStagesResponse": {
      "type": "structure",
      "members": {
        "stages": {
          "target": "com.amazonaws.ivsrealtime#StageSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching stages (summary information only).</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more stages than <code>maxResults</code>, use <code>nextToken</code> in the\n         request to get the next set.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#ListStorageConfigurations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListStorageConfigurationsRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListStorageConfigurationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets summary information about all storage configurations in your account, \n\t  in the AWS region where the API request is processed.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListStorageConfigurations"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStorageConfigurationsRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The first storage configuration to retrieve. This is used for pagination; \n\t  see the <code>nextToken</code> response field.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ivsrealtime#MaxStorageConfigurationResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of storage configurations to return. Default: your service quota or 100, \n\t  whichever is smaller.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListStorageConfigurationsResponse": {
      "type": "structure",
      "members": {
        "storageConfigurations": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>List of the matching storage configurations.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ivsrealtime#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>If there are more storage configurations than <code>maxResults</code>, use <code>nextToken</code>\n     in the request to get the next set.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about AWS tags for the specified ARN.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.ivsrealtime#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ivsrealtime#ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the resource to be retrieved. The ARN must be URL-encoded.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxCompositionResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxEncoderConfigurationResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxParticipantEventResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxParticipantResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxStageResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxStageSessionResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#MaxStorageConfigurationResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ivsrealtime#OmitStoppedVideo": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ivsrealtime#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^[a-zA-Z0-9+/=_-]*$"
      }
    },
    "com.amazonaws.ivsrealtime#Participant": {
      "type": "structure",
      "members": {
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this participant, assigned by IVS.</p>"
          }
        },
        "userId": {
          "target": "com.amazonaws.ivsrealtime#UserId",
          "traits": {
            "smithy.api#documentation": "<p>Customer-assigned name to help identify the token; this can be used to link a\n         participant to a user in the customer’s own systems. This can be any UTF-8 encoded text.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information</i>.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#ParticipantState",
          "traits": {
            "smithy.api#documentation": "<p>Whether the participant is connected to or disconnected from the stage.</p>"
          }
        },
        "firstJoinTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) when the participant first joined the stage\n         session.</p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.ivsrealtime#ParticipantAttributes",
          "traits": {
            "smithy.api#documentation": "<p>Application-provided attributes to encode into the token and attach to a stage. Map keys\n         and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information</i>.</p>"
          }
        },
        "published": {
          "target": "com.amazonaws.ivsrealtime#Published",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether the participant ever published to the stage session.</p>"
          }
        },
        "ispName": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s Internet Service Provider.</p>"
          }
        },
        "osName": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s operating system.</p>"
          }
        },
        "osVersion": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s operating system version.</p>"
          }
        },
        "browserName": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s browser.</p>"
          }
        },
        "browserVersion": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s browser version.</p>"
          }
        },
        "sdkVersion": {
          "target": "com.amazonaws.ivsrealtime#ParticipantClientAttribute",
          "traits": {
            "smithy.api#documentation": "<p>The participant’s SDK version.</p>"
          }
        },
        "recordingS3BucketName": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingS3BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Name of the S3 bucket to where the participant is being recorded, if individual participant recording is enabled, or \"\" (empty string), if recording is not enabled.</p>"
          }
        },
        "recordingS3Prefix": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingS3Prefix",
          "traits": {
            "smithy.api#documentation": "<p>S3 prefix of the S3 bucket to where the participant is being recorded, if individual participant recording is enabled, or \"\" (empty string), if recording is not enabled.</p>"
          }
        },
        "recordingState": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingState",
          "traits": {
            "smithy.api#documentation": "<p>Participant’s recording state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object describing a participant that has joined a stage.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantAttributes": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.ivsrealtime#String"
      },
      "value": {
        "target": "com.amazonaws.ivsrealtime#String"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantClientAttribute": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_.,:;\\s]*$"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-]*$"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#ParticipantSummary"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingFilterByRecordingState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "STARTING",
            "name": "STARTING"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "STOPPING",
            "name": "STOPPING"
          },
          {
            "value": "STOPPED",
            "name": "STOPPED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingMediaType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AUDIO_VIDEO",
            "name": "AUDIO_VIDEO"
          },
          {
            "value": "AUDIO_ONLY",
            "name": "AUDIO_ONLY"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingMediaTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#ParticipantRecordingMediaType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingS3BucketName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 63
        },
        "smithy.api#pattern": "^[a-z0-9-.]*$"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingS3Prefix": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-]*$"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantRecordingState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "STARTING",
            "name": "STARTING"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "STOPPING",
            "name": "STOPPING"
          },
          {
            "value": "STOPPED",
            "name": "STOPPED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "DISABLED",
            "name": "DISABLED"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CONNECTED",
            "name": "CONNECTED"
          },
          {
            "value": "DISCONNECTED",
            "name": "DISCONNECTED"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantSummary": {
      "type": "structure",
      "members": {
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this participant, assigned by IVS.</p>"
          }
        },
        "userId": {
          "target": "com.amazonaws.ivsrealtime#UserId",
          "traits": {
            "smithy.api#documentation": "<p>Customer-assigned name to help identify the token; this can be used to link a\n         participant to a user in the customer’s own systems. This can be any UTF-8 encoded text.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information</i>.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.ivsrealtime#ParticipantState",
          "traits": {
            "smithy.api#documentation": "<p>Whether the participant is connected to or disconnected from the stage.</p>"
          }
        },
        "firstJoinTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) when the participant first joined the stage\n         session.</p>"
          }
        },
        "published": {
          "target": "com.amazonaws.ivsrealtime#Published",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether the participant ever published to the stage session.</p>"
          }
        },
        "recordingState": {
          "target": "com.amazonaws.ivsrealtime#ParticipantRecordingState",
          "traits": {
            "smithy.api#documentation": "<p>Participant’s recording state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary object describing a participant that has joined a stage.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantToken": {
      "type": "structure",
      "members": {
        "participantId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenId",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifier for this participant token, assigned by IVS.</p>"
          }
        },
        "token": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenString",
          "traits": {
            "smithy.api#documentation": "<p>The issued client token, encrypted.</p>"
          }
        },
        "userId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenUserId",
          "traits": {
            "smithy.api#documentation": "<p>Customer-assigned name to help identify the token; this can be used to link a\n         participant to a user in the customer’s own systems. This can be any UTF-8 encoded text.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information.</i>\n         </p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenAttributes",
          "traits": {
            "smithy.api#documentation": "<p>Application-provided attributes to encode into the token and attach to a stage.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information.</i>\n         </p>"
          }
        },
        "duration": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenDurationMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Duration (in minutes), after which the participant token expires. Default: 720 (12\n         hours).</p>"
          }
        },
        "capabilities": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>Set of capabilities that the user is allowed to perform in the stage.</p>"
          }
        },
        "expirationTime": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenExpirationTime",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) for when this token expires.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying a participant token in a stage.</p>\n         <p>\n            <b>Important</b>: Treat tokens as opaque; i.e., do not build functionality\n         based on token contents. The format of tokens could change in the future.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenAttributes": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.ivsrealtime#String"
      },
      "value": {
        "target": "com.amazonaws.ivsrealtime#String"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenCapabilities": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#ParticipantTokenCapability"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2
        }
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenCapability": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "PUBLISH",
            "name": "PUBLISH"
          },
          {
            "value": "SUBSCRIBE",
            "name": "SUBSCRIBE"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenConfiguration": {
      "type": "structure",
      "members": {
        "duration": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenDurationMinutes",
          "traits": {
            "smithy.api#documentation": "<p>Duration (in minutes), after which the corresponding participant token expires. Default:\n         720 (12 hours).</p>"
          }
        },
        "userId": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenUserId",
          "traits": {
            "smithy.api#documentation": "<p>Customer-assigned name to help identify the token; this can be used to link a\n         participant to a user in the customer’s own systems. This can be any UTF-8 encoded text.\n            <i>This field is exposed to all stage participants and should not be used for\n            personally identifying, confidential, or sensitive information.</i>\n         </p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenAttributes",
          "traits": {
            "smithy.api#documentation": "<p>Application-provided attributes to encode into the corresponding participant token and\n         attach to a stage. Map keys and values can contain UTF-8 encoded text. The maximum length\n         of this field is 1 KB total. <i>This field is exposed to all stage participants and\n            should not be used for personally identifying, confidential, or sensitive\n            information.</i>\n         </p>"
          }
        },
        "capabilities": {
          "target": "com.amazonaws.ivsrealtime#ParticipantTokenCapabilities",
          "traits": {
            "smithy.api#documentation": "<p>Set of capabilities that the user is allowed to perform in the stage.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying a participant token configuration in a stage.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenConfigurations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#ParticipantTokenConfiguration"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 12
        }
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenDurationMinutes": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 20160
        }
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenExpirationTime": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenId": {
      "type": "string"
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#ParticipantToken"
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenString": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.ivsrealtime#ParticipantTokenUserId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        }
      }
    },
    "com.amazonaws.ivsrealtime#PendingVerification": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p> Your account is pending verification. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.ivsrealtime#PipBehavior": {
      "type": "enum",
      "members": {
        "STATIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STATIC"
          }
        },
        "DYNAMIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DYNAMIC"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#PipConfiguration": {
      "type": "structure",
      "members": {
        "featuredParticipantAttribute": {
          "target": "com.amazonaws.ivsrealtime#AttributeKey",
          "traits": {
            "smithy.api#documentation": "<p>This attribute name identifies the featured slot. A participant with this attribute set\n         to <code>\"true\"</code> (as a string value) in <a>ParticipantTokenConfiguration</a> is placed in the featured\n         slot.</p>"
          }
        },
        "omitStoppedVideo": {
          "target": "com.amazonaws.ivsrealtime#OmitStoppedVideo",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Determines whether to omit participants with stopped video in the composition. Default: <code>false</code>.</p>"
          }
        },
        "videoFillMode": {
          "target": "com.amazonaws.ivsrealtime#VideoFillMode",
          "traits": {
            "smithy.api#documentation": "<p>Defines how video fits within the participant tile. Default: <code>COVER</code>.\n</p>"
          }
        },
        "gridGap": {
          "target": "com.amazonaws.ivsrealtime#GridGap",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Specifies the spacing between participant tiles in pixels. Default: <code>0</code>.</p>"
          }
        },
        "pipParticipantAttribute": {
          "target": "com.amazonaws.ivsrealtime#AttributeKey",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the PiP slot. A participant with this attribute set\n         to <code>\"true\"</code> (as a string value) in <a>ParticipantTokenConfiguration</a> \n\t\t is placed in the PiP slot.</p>"
          }
        },
        "pipBehavior": {
          "target": "com.amazonaws.ivsrealtime#PipBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Defines PiP behavior when all participants have left. Default: <code>STATIC</code>.</p>"
          }
        },
        "pipOffset": {
          "target": "com.amazonaws.ivsrealtime#PipOffset",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Sets the PiP window’s offset position in pixels from the closest edges determined by <code>PipPosition</code>. \n\t  Default: <code>0</code>.</p>"
          }
        },
        "pipPosition": {
          "target": "com.amazonaws.ivsrealtime#PipPosition",
          "traits": {
            "smithy.api#documentation": "<p>Determines the corner position of the PiP window. Default: <code>BOTTOM_RIGHT</code>.</p>"
          }
        },
        "pipWidth": {
          "target": "com.amazonaws.ivsrealtime#PipWidth",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the width of the PiP window in pixels. When this is not set explicitly, \n\t        <code>pipWidth</code>’s value will be based on the size of the composition and the \n\t\t\taspect ratio of the participant’s video.</p>"
          }
        },
        "pipHeight": {
          "target": "com.amazonaws.ivsrealtime#PipHeight",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the height of the PiP window in pixels. When this is not set explicitly, \n\t        <code>pipHeight</code>’s value will be based on the size of the composition and the\n\t\t\taspect ratio of the participant’s video.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration information specific to Picture-in-Picture (PiP) layout, \n\t        for <a href=\"https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/server-side-composition.html\">server-side composition</a>.\n\t  </p>"
      }
    },
    "com.amazonaws.ivsrealtime#PipHeight": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.ivsrealtime#PipOffset": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ivsrealtime#PipPosition": {
      "type": "enum",
      "members": {
        "TOP_LEFT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TOP_LEFT"
          }
        },
        "TOP_RIGHT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TOP_RIGHT"
          }
        },
        "BOTTOM_LEFT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BOTTOM_LEFT"
          }
        },
        "BOTTOM_RIGHT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BOTTOM_RIGHT"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#PipWidth": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.ivsrealtime#Published": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ivsrealtime#RecordingConfiguration": {
      "type": "structure",
      "members": {
        "format": {
          "target": "com.amazonaws.ivsrealtime#RecordingConfigurationFormat",
          "traits": {
            "smithy.api#documentation": "<p>The recording format for storing a recording in Amazon S3.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing a configuration to record a stage stream.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#RecordingConfigurationFormat": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HLS",
            "name": "HLS"
          }
        ]
      }
    },
    "com.amazonaws.ivsrealtime#ResourceArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Request references a resource which does not exist.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.ivsrealtime#S3BucketName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 63
        },
        "smithy.api#pattern": "^[a-z0-9-.]+$"
      }
    },
    "com.amazonaws.ivsrealtime#S3DestinationConfiguration": {
      "type": "structure",
      "members": {
        "storageConfigurationArn": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the <a>StorageConfiguration</a> where recorded videos will be stored.</p>",
            "smithy.api#required": {}
          }
        },
        "encoderConfigurationArns": {
          "target": "com.amazonaws.ivsrealtime#EncoderConfigurationArnList",
          "traits": {
            "smithy.api#documentation": "<p>ARNs of the <a>EncoderConfiguration</a> resource. The encoder configuration and stage resources \n\t  must be in the same AWS account and region. </p>",
            "smithy.api#required": {}
          }
        },
        "recordingConfiguration": {
          "target": "com.amazonaws.ivsrealtime#RecordingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Array of maps, each of the form <code>string:string (key:value)</code>. \n\t  This is an optional customer specification, currently used only to specify \n\t  the recording format for storing a recording in Amazon S3.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that describes an S3 location where recorded videos will be stored.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#S3Detail": {
      "type": "structure",
      "members": {
        "recordingPrefix": {
          "target": "com.amazonaws.ivsrealtime#String",
          "traits": {
            "smithy.api#documentation": "<p>The S3 bucket prefix under which the recording is stored.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Complex data type that defines S3Detail objects.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#S3StorageConfiguration": {
      "type": "structure",
      "members": {
        "bucketName": {
          "target": "com.amazonaws.ivsrealtime#S3BucketName",
          "traits": {
            "smithy.api#documentation": "<p>Location (S3 bucket name) where recorded videos will be stored.  Note that the StorageConfiguration \n\t  and S3 bucket must be in the same region as the Composition.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that describes an S3 location where recorded videos will be stored.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Request would cause a service quota to be exceeded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.ivsrealtime#Stage": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#StageName",
          "traits": {
            "smithy.api#documentation": "<p>Stage name.</p>"
          }
        },
        "activeSessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of the active session within the stage.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        },
        "autoParticipantRecordingConfiguration": {
          "target": "com.amazonaws.ivsrealtime#AutoParticipantRecordingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Auto-participant-recording configuration object attached to the stage.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object specifying a stage.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StageArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#StageName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#StageSession": {
      "type": "structure",
      "members": {
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of the session within the stage.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p> ISO 8601 timestamp (returned as a string) when this stage session began.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) when the stage session ended. This is null if\n         the stage is active.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A stage session begins when the first participant joins a stage and ends after the last\n         participant leaves the stage. A stage session helps with debugging stages by grouping\n         events and participants into shorter periods of time (i.e., a session), which is helpful\n         when stages are used over long periods of time.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StageSessionId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 16,
          "max": 16
        },
        "smithy.api#pattern": "^st-[a-zA-Z0-9]+$"
      }
    },
    "com.amazonaws.ivsrealtime#StageSessionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#StageSessionSummary"
      }
    },
    "com.amazonaws.ivsrealtime#StageSessionSummary": {
      "type": "structure",
      "members": {
        "sessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of the session within the stage.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p> ISO 8601 timestamp (returned as a string) when this stage session began.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.ivsrealtime#Time",
          "traits": {
            "smithy.api#documentation": "<p>ISO 8601 timestamp (returned as a string) when the stage session ended. This is null if\n         the stage is active.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a stage session.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StageSummary": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>Stage ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#StageName",
          "traits": {
            "smithy.api#documentation": "<p>Stage name.</p>"
          }
        },
        "activeSessionId": {
          "target": "com.amazonaws.ivsrealtime#StageSessionId",
          "traits": {
            "smithy.api#documentation": "<p>ID of the active session within the stage.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a stage.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StageSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#StageSummary"
      }
    },
    "com.amazonaws.ivsrealtime#StartComposition": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#StartCompositionRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#StartCompositionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a Composition from a stage based on the configuration provided in the\n         request.</p>\n         <p>A Composition is an ephemeral resource that exists after this endpoint returns\n         successfully. Composition stops and the resource is deleted:</p>\n         <ul>\n            <li>\n               <p>When <a>StopComposition</a> is called.</p>\n            </li>\n            <li>\n               <p>After a 1-minute timeout, when all participants are disconnected from the\n               stage.</p>\n            </li>\n            <li>\n               <p>After a 1-minute timeout, if there are no participants in the stage when\n               StartComposition is called.</p>\n            </li>\n            <li>\n               <p>When broadcasting to the IVS channel fails and all retries are exhausted.</p>\n            </li>\n            <li>\n               <p>When broadcasting is disconnected and all attempts to reconnect are\n               exhausted.</p>\n            </li>\n         </ul>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/StartComposition"
        }
      }
    },
    "com.amazonaws.ivsrealtime#StartCompositionRequest": {
      "type": "structure",
      "members": {
        "stageArn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage to be used for compositing.</p>",
            "smithy.api#required": {}
          }
        },
        "idempotencyToken": {
          "target": "com.amazonaws.ivsrealtime#CompositionClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Idempotency token.</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "layout": {
          "target": "com.amazonaws.ivsrealtime#LayoutConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Layout object to configure composition parameters.</p>"
          }
        },
        "destinations": {
          "target": "com.amazonaws.ivsrealtime#DestinationConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>Array of destination configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#StartCompositionResponse": {
      "type": "structure",
      "members": {
        "composition": {
          "target": "com.amazonaws.ivsrealtime#Composition",
          "traits": {
            "smithy.api#documentation": "<p>The Composition that was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#StopComposition": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#StopCompositionRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#StopCompositionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Stops and deletes a Composition resource. Any broadcast from the Composition resource\n         is stopped.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/StopComposition"
        }
      }
    },
    "com.amazonaws.ivsrealtime#StopCompositionRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#CompositionArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the Composition.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ivsrealtime#StopCompositionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ivsrealtime#StorageConfiguration": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the storage configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Name of the storage configuration.</p>"
          }
        },
        "s3": {
          "target": "com.amazonaws.ivsrealtime#S3StorageConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>An S3 destination configuration where recorded videos will be stored.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that describes a location where recorded videos will be stored.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StorageConfigurationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^arn:aws:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$"
      }
    },
    "com.amazonaws.ivsrealtime#StorageConfigurationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.ivsrealtime#StorageConfigurationSummary": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the storage configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#StorageConfigurationName",
          "traits": {
            "smithy.api#documentation": "<p>Name of the storage configuration.</p>"
          }
        },
        "s3": {
          "target": "com.amazonaws.ivsrealtime#S3StorageConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>An S3 destination configuration where recorded videos will be stored.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags attached to the resource. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints on tags beyond what is documented\n         there.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a storage configuration.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#StorageConfigurationSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#StorageConfigurationSummary"
      }
    },
    "com.amazonaws.ivsrealtime#String": {
      "type": "string"
    },
    "com.amazonaws.ivsrealtime#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.ivsrealtime#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ivsrealtime#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.ivsrealtime#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds or updates tags for the AWS resource with the specified ARN.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}"
        }
      }
    },
    "com.amazonaws.ivsrealtime#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ivsrealtime#ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the resource to be tagged. The ARN must be URL-encoded.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ivsrealtime#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Array of tags to be added or updated. Array of maps, each of the form\n            <code>string:string (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints beyond what is documented\n         there.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ivsrealtime#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 256
        }
      }
    },
    "com.amazonaws.ivsrealtime#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.ivsrealtime#TagKey"
      },
      "value": {
        "target": "com.amazonaws.ivsrealtime#TagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.ivsrealtime#Time": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.ivsrealtime#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#InternalServerException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes tags from the resource with the specified ARN.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.ivsrealtime#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ivsrealtime#ResourceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the resource to be untagged. The ARN must be URL-encoded.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.ivsrealtime#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>Array of tags to be removed. Array of maps, each of the form <code>string:string\n            (key:value)</code>. See <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging AWS\n            Resources</a> for details, including restrictions that apply to tags and \"Tag naming\n         limits and requirements\"; Amazon IVS has no constraints beyond what is documented\n         there.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#UntagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ivsrealtime#UpdateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ivsrealtime#UpdateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.ivsrealtime#UpdateStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ivsrealtime#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ConflictException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#PendingVerification"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.ivsrealtime#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a stage’s configuration.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateStage"
        }
      }
    },
    "com.amazonaws.ivsrealtime#UpdateStageRequest": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.ivsrealtime#StageArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the stage to be updated.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.ivsrealtime#StageName",
          "traits": {
            "smithy.api#documentation": "<p>Name of the stage to be updated.</p>"
          }
        },
        "autoParticipantRecordingConfiguration": {
          "target": "com.amazonaws.ivsrealtime#AutoParticipantRecordingConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Auto-participant-recording configuration object to attach to the stage.\n      Auto-participant-recording configuration cannot be updated while recording is active.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#UpdateStageResponse": {
      "type": "structure",
      "members": {
        "stage": {
          "target": "com.amazonaws.ivsrealtime#Stage",
          "traits": {
            "smithy.api#documentation": "<p>The updated stage.</p>"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#UserId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        }
      }
    },
    "com.amazonaws.ivsrealtime#ValidationException": {
      "type": "structure",
      "members": {
        "exceptionMessage": {
          "target": "com.amazonaws.ivsrealtime#errorMessage",
          "traits": {
            "smithy.api#documentation": "<p>The input fails to satisfy the constraints specified by an Amazon Web Services service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.ivsrealtime#Video": {
      "type": "structure",
      "members": {
        "width": {
          "target": "com.amazonaws.ivsrealtime#Width",
          "traits": {
            "smithy.api#documentation": "<p>Video-resolution width. Note that the maximum value is determined by <code>width</code>\n         times <code>height</code>, such that the maximum total pixels is 2073600 (1920x1080 or\n         1080x1920). Default: 1280.</p>"
          }
        },
        "height": {
          "target": "com.amazonaws.ivsrealtime#Height",
          "traits": {
            "smithy.api#documentation": "<p>Video-resolution height. Note that the maximum value is determined by <code>width</code>\n         times <code>height</code>, such that the maximum total pixels is 2073600 (1920x1080 or\n         1080x1920). Default: 720.</p>"
          }
        },
        "framerate": {
          "target": "com.amazonaws.ivsrealtime#Framerate",
          "traits": {
            "smithy.api#documentation": "<p>Video frame rate, in fps. Default: 30.</p>"
          }
        },
        "bitrate": {
          "target": "com.amazonaws.ivsrealtime#Bitrate",
          "traits": {
            "smithy.api#documentation": "<p>Bitrate for generated output, in bps. Default: 2500000.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Settings for video.</p>"
      }
    },
    "com.amazonaws.ivsrealtime#VideoAspectRatio": {
      "type": "enum",
      "members": {
        "AUTO": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AUTO"
          }
        },
        "VIDEO": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VIDEO"
          }
        },
        "SQUARE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SQUARE"
          }
        },
        "PORTRAIT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PORTRAIT"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#VideoFillMode": {
      "type": "enum",
      "members": {
        "FILL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FILL"
          }
        },
        "COVER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COVER"
          }
        },
        "CONTAIN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONTAIN"
          }
        }
      }
    },
    "com.amazonaws.ivsrealtime#Width": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1920
        }
      }
    },
    "com.amazonaws.ivsrealtime#errorMessage": {
      "type": "string"
    }
  }
}
