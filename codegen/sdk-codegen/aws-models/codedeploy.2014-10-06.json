{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.codedeploy#AddTagsToOnPremisesInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#AddTagsToOnPremisesInstancesInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InstanceLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNotRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds tags to on-premises instances.</p>"
      }
    },
    "com.amazonaws.codedeploy#AddTagsToOnPremisesInstancesInput": {
      "type": "structure",
      "members": {
        "instanceNames": {
          "target": "com.amazonaws.codedeploy#InstanceNameList",
          "traits": {
            "smithy.api#documentation": "<p>The names of the on-premises instances to which to add tags.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tag key-value pairs to add to the on-premises instances.</p>\n        <p>Keys and values are both required. Keys cannot be null or empty strings. Value-only\n            tags are not allowed.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of, and adds tags to, an on-premises instance operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#AdditionalDeploymentStatusInfo": {
      "type": "string",
      "traits": {
        "smithy.api#deprecated": {
          "message": "AdditionalDeploymentStatusInfo is deprecated, use DeploymentStatusMessageList instead."
        }
      }
    },
    "com.amazonaws.codedeploy#Alarm": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.codedeploy#AlarmName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the alarm. Maximum length is 255 characters. Each alarm name can be used\n            only once in a list of alarms.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an alarm.</p>"
      }
    },
    "com.amazonaws.codedeploy#AlarmConfiguration": {
      "type": "structure",
      "members": {
        "ignorePollAlarmFailure": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether a deployment should continue if information about the current state\n            of alarms cannot be retrieved from Amazon CloudWatch. The default value is false.</p>\n        <ul>\n            <li>\n                <p>\n                  <code>true</code>: The deployment proceeds even if alarm status information\n                    can't be retrieved from Amazon CloudWatch.</p>\n            </li>\n            <li>\n                <p>\n                  <code>false</code>: The deployment stops if alarm status information can't be\n                    retrieved from Amazon CloudWatch.</p>\n            </li>\n         </ul>"
          }
        },
        "enabled": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the alarm configuration is enabled.</p>"
          }
        },
        "alarms": {
          "target": "com.amazonaws.codedeploy#AlarmList",
          "traits": {
            "smithy.api#documentation": "<p>A list of alarms configured for the deployment group. A maximum of 10 alarms can be\n            added to a deployment group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about alarms associated with the deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#AlarmList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#Alarm"
      }
    },
    "com.amazonaws.codedeploy#AlarmName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#AlarmsLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The maximum number of alarms for a deployment group (10) was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#AppSpecContent": {
      "type": "structure",
      "members": {
        "sha256": {
          "target": "com.amazonaws.codedeploy#RawStringSha256",
          "traits": {
            "smithy.api#documentation": "<p> The SHA256 hash value of the revision content. </p>"
          }
        },
        "content": {
          "target": "com.amazonaws.codedeploy#RawStringContent",
          "traits": {
            "smithy.api#documentation": "<p> The YAML-formatted or JSON-formatted revision string. </p>\n        <p> For an AWS Lambda deployment, the content includes a Lambda function name, the alias\n            for its original version, and the alias for its replacement version. The deployment\n            shifts traffic from the original version of the Lambda function to the replacement\n            version. </p>\n        <p> For an Amazon ECS deployment, the content includes the task name, information about\n            the load balancer that serves traffic to the container, and more. </p>\n        <p> For both types of deployments, the content can specify Lambda functions that run at\n            specified hooks, such as <code>BeforeInstall</code>, during a deployment. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A revision for an AWS Lambda or Amazon ECS deployment that is a YAML-formatted or\n            JSON-formatted string. For AWS Lambda and Amazon ECS deployments, the revision is the\n            same as the AppSpec file. This method replaces the deprecated <code>RawString</code>\n            data type. </p>"
      }
    },
    "com.amazonaws.codedeploy#ApplicationAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An application with the specified name with the IAM user or AWS account already\n            exists.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ApplicationDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The application does not exist with the IAM user or AWS account.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ApplicationId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ApplicationInfo": {
      "type": "structure",
      "members": {
        "createTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the application was created.</p>"
          }
        },
        "linkedToGitHub": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>True if the user has authenticated with GitHub for the specified application.\n            Otherwise, false.</p>"
          }
        },
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The destination platform type for deployment of the application (<code>Lambda</code>\n            or <code>Server</code>).</p>"
          }
        },
        "gitHubAccountName": {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenName",
          "traits": {
            "smithy.api#documentation": "<p>The name for a connection to a GitHub account.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The application name.</p>"
          }
        },
        "applicationId": {
          "target": "com.amazonaws.codedeploy#ApplicationId",
          "traits": {
            "smithy.api#documentation": "<p>The application ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an application.</p>"
      }
    },
    "com.amazonaws.codedeploy#ApplicationLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>More applications were attempted to be created than are allowed.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ApplicationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codedeploy#ApplicationNameRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The minimum number of required application names was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ApplicationRevisionSortBy": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "registerTime",
            "name": "RegisterTime"
          },
          {
            "value": "firstUsedTime",
            "name": "FirstUsedTime"
          },
          {
            "value": "lastUsedTime",
            "name": "LastUsedTime"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#ApplicationsInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ApplicationInfo"
      }
    },
    "com.amazonaws.codedeploy#ApplicationsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ApplicationName"
      }
    },
    "com.amazonaws.codedeploy#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        }
      }
    },
    "com.amazonaws.codedeploy#ArnNotSupportedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The specified ARN is not supported. For example, it might be an ARN for a resource that is not expected.\n        </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#AutoRollbackConfiguration": {
      "type": "structure",
      "members": {
        "events": {
          "target": "com.amazonaws.codedeploy#AutoRollbackEventsList",
          "traits": {
            "smithy.api#documentation": "<p>The event type or types that trigger a rollback.</p>"
          }
        },
        "enabled": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether a defined automatic rollback configuration is currently\n            enabled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a configuration for automatically rolling back to a previous version\n            of an application revision when a deployment is not completed successfully.</p>"
      }
    },
    "com.amazonaws.codedeploy#AutoRollbackEvent": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DEPLOYMENT_FAILURE",
            "name": "DEPLOYMENT_FAILURE"
          },
          {
            "value": "DEPLOYMENT_STOP_ON_ALARM",
            "name": "DEPLOYMENT_STOP_ON_ALARM"
          },
          {
            "value": "DEPLOYMENT_STOP_ON_REQUEST",
            "name": "DEPLOYMENT_STOP_ON_REQUEST"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#AutoRollbackEventsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#AutoRollbackEvent"
      }
    },
    "com.amazonaws.codedeploy#AutoScalingGroup": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The Auto Scaling group name.</p>"
          }
        },
        "hook": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupHook",
          "traits": {
            "smithy.api#documentation": "<p>An Auto Scaling lifecycle event hook name.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an Auto Scaling group.</p>"
      }
    },
    "com.amazonaws.codedeploy#AutoScalingGroupHook": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#AutoScalingGroupList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#AutoScalingGroup"
      }
    },
    "com.amazonaws.codedeploy#AutoScalingGroupName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#AutoScalingGroupNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#AutoScalingGroupName"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplicationRevisions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetApplicationRevisionsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetApplicationRevisionsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRevisionException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more application revisions. The maximum number of application revisions that can be returned is 25.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplicationRevisionsInput": {
      "type": "structure",
      "members": {
        "revisions": {
          "target": "com.amazonaws.codedeploy#RevisionLocationList",
          "traits": {
            "smithy.api#documentation": "<p>An array of <code>RevisionLocation</code> objects that specify information to get about the application revisions, including type and\n            location. The maximum number of <code>RevisionLocation</code> objects you can specify is 25.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application about which to get revision\n            information.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>BatchGetApplicationRevisions</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplicationRevisionsOutput": {
      "type": "structure",
      "members": {
        "errorMessage": {
          "target": "com.amazonaws.codedeploy#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Information about errors that might have occurred during the API call.</p>"
          }
        },
        "revisions": {
          "target": "com.amazonaws.codedeploy#RevisionInfoList",
          "traits": {
            "smithy.api#documentation": "<p>Additional information about the revisions, including the type and location.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the application that corresponds to the revisions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>BatchGetApplicationRevisions</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplications": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetApplicationsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetApplicationsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more applications. The maximum number of applications that can be returned is 100.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplicationsInput": {
      "type": "structure",
      "members": {
        "applicationNames": {
          "target": "com.amazonaws.codedeploy#ApplicationsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of application names separated by spaces. The maximum number of application names you can specify is 100.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>BatchGetApplications</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetApplicationsOutput": {
      "type": "structure",
      "members": {
        "applicationsInfo": {
          "target": "com.amazonaws.codedeploy#ApplicationsInfoList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the applications.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>BatchGetApplications</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentGroupsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentGroupsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more deployment groups.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentGroupsInput": {
      "type": "structure",
      "members": {
        "deploymentGroupNames": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupsList",
          "traits": {
            "smithy.api#documentation": "<p>The names of the deployment groups.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the applicable IAM user or\n            AWS account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>BatchGetDeploymentGroups</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentGroupsOutput": {
      "type": "structure",
      "members": {
        "errorMessage": {
          "target": "com.amazonaws.codedeploy#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Information about errors that might have occurred during the API call.</p>"
          }
        },
        "deploymentGroupsInfo": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupInfoList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the deployment groups.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>BatchGetDeploymentGroups</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentInstancesInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentInstancesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "This operation is deprecated, use BatchGetDeploymentTargets instead."
        },
        "smithy.api#documentation": "<note>\n            <p> This method works, but is deprecated. Use <code>BatchGetDeploymentTargets</code>\n                instead. </p>\n        </note>\n        <p> Returns an array of one or more instances associated with a deployment. This method works with\n            EC2/On-premises and AWS Lambda compute platforms. The newer\n                <code>BatchGetDeploymentTargets</code> works with all compute platforms. \n            The maximum number of instances that can be returned is 25.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentInstancesInput": {
      "type": "structure",
      "members": {
        "instanceIds": {
          "target": "com.amazonaws.codedeploy#InstancesList",
          "traits": {
            "smithy.api#documentation": "<p>The unique IDs of instances used in the deployment. The maximum number of instance IDs you can specify is 25.</p>",
            "smithy.api#required": {}
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>BatchGetDeploymentInstances</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentInstancesOutput": {
      "type": "structure",
      "members": {
        "instancesSummary": {
          "target": "com.amazonaws.codedeploy#InstanceSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the instance.</p>"
          }
        },
        "errorMessage": {
          "target": "com.amazonaws.codedeploy#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>Information about errors that might have occurred during the API call.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>BatchGetDeploymentInstances</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentTargets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentTargetsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentTargetsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentNotStartedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentTargetDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentTargetIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentTargetListSizeExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentTargetIdException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns an array of one or more targets associated with a deployment. This method works with all\n            compute types and should be used instead of the deprecated\n            <code>BatchGetDeploymentInstances</code>. \n            The maximum number of targets that can be returned is 25.</p>\n        <p> The type of targets returned depends on the deployment's compute platform or deployment method: </p>\n        <ul>\n            <li>\n                <p>\n                    <b>EC2/On-premises</b>: Information about EC2 instance\n                    targets. </p>\n            </li>\n            <li>\n                <p>\n                    <b>AWS Lambda</b>: Information about Lambda functions\n                    targets. </p>\n            </li>\n            <li>\n                <p>\n                    <b>Amazon ECS</b>: Information about Amazon ECS\n                    service targets. </p>\n            </li>\n            <li>\n                <p>\n                  <b>CloudFormation</b>: Information about targets of\n                    blue/green deployments initiated by a CloudFormation stack update.</p>\n            </li>\n         </ul>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentTargetsInput": {
      "type": "structure",
      "members": {
        "targetIds": {
          "target": "com.amazonaws.codedeploy#TargetIdList",
          "traits": {
            "smithy.api#documentation": "<p> The unique IDs of the deployment targets. The compute platform of the deployment\n            determines the type of the targets and their formats. The maximum number of deployment target IDs you can specify is 25.</p>\n        <ul>\n            <li>\n                <p> For deployments that use the EC2/On-premises compute platform, the target IDs\n                    are EC2 or on-premises instances IDs, and their target type is\n                    <code>instanceTarget</code>. </p>\n            </li>\n            <li>\n                <p> For deployments that use the AWS Lambda compute platform, the target IDs are\n                    the names of Lambda functions, and their target type is\n                    <code>instanceTarget</code>. </p>\n            </li>\n            <li>\n                <p> For deployments that use the Amazon ECS compute platform, the target IDs are\n                    pairs of Amazon ECS clusters and services specified using the format\n                    <code><clustername>:<servicename></code>. Their target type is\n                    <code>ecsTarget</code>. </p>\n            </li>\n            <li>\n                <p> For deployments that are deployed with AWS CloudFormation, the target IDs are\n                    CloudFormation stack IDs. Their target type is\n                    <code>cloudFormationTarget</code>. </p>\n            </li>\n         </ul>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentTargetsOutput": {
      "type": "structure",
      "members": {
        "deploymentTargets": {
          "target": "com.amazonaws.codedeploy#DeploymentTargetList",
          "traits": {
            "smithy.api#documentation": "<p> A list of target objects for a deployment. Each target object contains details about\n            the target, such as its status and lifecycle events. The type of the target objects\n            depends on the deployment' compute platform. </p>\n        <ul>\n            <li>\n                <p>\n                    <b>EC2/On-premises</b>: Each target object is an EC2\n                    or on-premises instance. </p>\n            </li>\n            <li>\n                <p>\n                    <b>AWS Lambda</b>: The target object is a specific\n                    version of an AWS Lambda function. </p>\n            </li>\n            <li>\n                <p>\n                    <b>Amazon ECS</b>: The target object is an Amazon ECS\n                    service. </p>\n            </li>\n            <li>\n                <p>\n                    <b>CloudFormation</b>: The target object is an AWS\n                    CloudFormation blue/green deployment. </p>\n            </li>\n         </ul>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeployments": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetDeploymentsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more deployments. The maximum number of deployments that can be returned is 25.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentsInput": {
      "type": "structure",
      "members": {
        "deploymentIds": {
          "target": "com.amazonaws.codedeploy#DeploymentsList",
          "traits": {
            "smithy.api#documentation": "<p> A list of deployment IDs, separated by spaces. The maximum number of deployment IDs you can specify is 25.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>BatchGetDeployments</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetDeploymentsOutput": {
      "type": "structure",
      "members": {
        "deploymentsInfo": {
          "target": "com.amazonaws.codedeploy#DeploymentsInfoList",
          "traits": {
            "smithy.api#documentation": "<p> Information about the deployments. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the output of a <code>BatchGetDeployments</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetOnPremisesInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#BatchGetOnPremisesInstancesInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#BatchGetOnPremisesInstancesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#BatchLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about one or more on-premises instances. The maximum number of on-premises instances that can be returned is 25.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetOnPremisesInstancesInput": {
      "type": "structure",
      "members": {
        "instanceNames": {
          "target": "com.amazonaws.codedeploy#InstanceNameList",
          "traits": {
            "smithy.api#documentation": "<p>The names of the on-premises instances about which to get information. The maximum number of instance names you can specify is 25.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>BatchGetOnPremisesInstances</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchGetOnPremisesInstancesOutput": {
      "type": "structure",
      "members": {
        "instanceInfos": {
          "target": "com.amazonaws.codedeploy#InstanceInfoList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the on-premises instances.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>BatchGetOnPremisesInstances</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#BatchLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The maximum number of names or IDs allowed for this request (100) was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#BlueGreenDeploymentConfiguration": {
      "type": "structure",
      "members": {
        "deploymentReadyOption": {
          "target": "com.amazonaws.codedeploy#DeploymentReadyOption",
          "traits": {
            "smithy.api#documentation": "<p>Information about the action to take when newly provisioned instances are ready to\n            receive traffic in a blue/green deployment.</p>"
          }
        },
        "greenFleetProvisioningOption": {
          "target": "com.amazonaws.codedeploy#GreenFleetProvisioningOption",
          "traits": {
            "smithy.api#documentation": "<p>Information about how instances are provisioned for a replacement environment in a\n            blue/green deployment.</p>"
          }
        },
        "terminateBlueInstancesOnDeploymentSuccess": {
          "target": "com.amazonaws.codedeploy#BlueInstanceTerminationOption",
          "traits": {
            "smithy.api#documentation": "<p>Information about whether to terminate instances in the original fleet during a\n            blue/green deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about blue/green deployment options for a deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#BlueInstanceTerminationOption": {
      "type": "structure",
      "members": {
        "terminationWaitTimeInMinutes": {
          "target": "com.amazonaws.codedeploy#Duration",
          "traits": {
            "smithy.api#documentation": "<p>For an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before\n            terminating instances from the original environment.</p>\n        \n        <p>\n            For an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, \n            CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set. \n        </p>\n        \n        <p>\n            The maximum setting is 2880 minutes (2 days).\n        </p>"
          }
        },
        "action": {
          "target": "com.amazonaws.codedeploy#InstanceAction",
          "traits": {
            "smithy.api#documentation": "<p>The action to take on instances in the original environment after a successful\n            blue/green deployment.</p>\n        <ul>\n            <li>\n                <p>\n                  <code>TERMINATE</code>: Instances are terminated after a specified wait\n                    time.</p>\n            </li>\n            <li>\n                <p>\n                  <code>KEEP_ALIVE</code>: Instances are left running after they are\n                    deregistered from the load balancer and removed from the deployment\n                    group.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about whether instances in the original environment are terminated when a\n            blue/green deployment is successful. <code>BlueInstanceTerminationOption</code> does not \n            apply to Lambda deployments.\n        </p>"
      }
    },
    "com.amazonaws.codedeploy#Boolean": {
      "type": "boolean"
    },
    "com.amazonaws.codedeploy#BucketNameFilterRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A bucket name is required, but was not provided.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#BundleType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "tar",
            "name": "Tar"
          },
          {
            "value": "tgz",
            "name": "TarGZip"
          },
          {
            "value": "zip",
            "name": "Zip"
          },
          {
            "value": "YAML",
            "name": "YAML"
          },
          {
            "value": "JSON",
            "name": "JSON"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#CloudFormationResourceType": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#CloudFormationTarget": {
      "type": "structure",
      "members": {
        "targetVersionWeight": {
          "target": "com.amazonaws.codedeploy#TrafficWeight",
          "traits": {
            "smithy.api#documentation": "<p>The percentage of production traffic that the target version of an AWS CloudFormation\n            blue/green deployment receives.</p>"
          }
        },
        "targetId": {
          "target": "com.amazonaws.codedeploy#TargetId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment target that has a type\n                of <code>CloudFormationTarget</code>. </p>"
          }
        },
        "resourceType": {
          "target": "com.amazonaws.codedeploy#CloudFormationResourceType",
          "traits": {
            "smithy.api#documentation": "<p>The resource type for the AWS CloudFormation blue/green deployment.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#TargetStatus",
          "traits": {
            "smithy.api#documentation": "<p> The status of an AWS CloudFormation blue/green deployment's target application. </p>"
          }
        },
        "lifecycleEvents": {
          "target": "com.amazonaws.codedeploy#LifecycleEventList",
          "traits": {
            "smithy.api#documentation": "<p> The lifecycle events of the AWS CloudFormation blue/green deployment to this target\n            application. </p>"
          }
        },
        "lastUpdatedAt": {
          "target": "com.amazonaws.codedeploy#Time",
          "traits": {
            "smithy.api#documentation": "<p> The date and time when the target application was updated by an AWS CloudFormation\n            blue/green deployment. </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of an AWS CloudFormation blue/green deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the target to be updated by an AWS CloudFormation blue/green\n            deployment. This target type is used for all deployments initiated by a CloudFormation\n            stack update.</p>"
      }
    },
    "com.amazonaws.codedeploy#CodeDeploy_20141006": {
      "type": "service",
      "version": "2014-10-06",
      "operations": [
        {
          "target": "com.amazonaws.codedeploy#AddTagsToOnPremisesInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetApplicationRevisions"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetApplications"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetDeploymentGroups"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetDeploymentInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetDeployments"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetDeploymentTargets"
        },
        {
          "target": "com.amazonaws.codedeploy#BatchGetOnPremisesInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#ContinueDeployment"
        },
        {
          "target": "com.amazonaws.codedeploy#CreateApplication"
        },
        {
          "target": "com.amazonaws.codedeploy#CreateDeployment"
        },
        {
          "target": "com.amazonaws.codedeploy#CreateDeploymentConfig"
        },
        {
          "target": "com.amazonaws.codedeploy#CreateDeploymentGroup"
        },
        {
          "target": "com.amazonaws.codedeploy#DeleteApplication"
        },
        {
          "target": "com.amazonaws.codedeploy#DeleteDeploymentConfig"
        },
        {
          "target": "com.amazonaws.codedeploy#DeleteDeploymentGroup"
        },
        {
          "target": "com.amazonaws.codedeploy#DeleteGitHubAccountToken"
        },
        {
          "target": "com.amazonaws.codedeploy#DeleteResourcesByExternalId"
        },
        {
          "target": "com.amazonaws.codedeploy#DeregisterOnPremisesInstance"
        },
        {
          "target": "com.amazonaws.codedeploy#GetApplication"
        },
        {
          "target": "com.amazonaws.codedeploy#GetApplicationRevision"
        },
        {
          "target": "com.amazonaws.codedeploy#GetDeployment"
        },
        {
          "target": "com.amazonaws.codedeploy#GetDeploymentConfig"
        },
        {
          "target": "com.amazonaws.codedeploy#GetDeploymentGroup"
        },
        {
          "target": "com.amazonaws.codedeploy#GetDeploymentInstance"
        },
        {
          "target": "com.amazonaws.codedeploy#GetDeploymentTarget"
        },
        {
          "target": "com.amazonaws.codedeploy#GetOnPremisesInstance"
        },
        {
          "target": "com.amazonaws.codedeploy#ListApplicationRevisions"
        },
        {
          "target": "com.amazonaws.codedeploy#ListApplications"
        },
        {
          "target": "com.amazonaws.codedeploy#ListDeploymentConfigs"
        },
        {
          "target": "com.amazonaws.codedeploy#ListDeploymentGroups"
        },
        {
          "target": "com.amazonaws.codedeploy#ListDeploymentInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#ListDeployments"
        },
        {
          "target": "com.amazonaws.codedeploy#ListDeploymentTargets"
        },
        {
          "target": "com.amazonaws.codedeploy#ListGitHubAccountTokenNames"
        },
        {
          "target": "com.amazonaws.codedeploy#ListOnPremisesInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatus"
        },
        {
          "target": "com.amazonaws.codedeploy#RegisterApplicationRevision"
        },
        {
          "target": "com.amazonaws.codedeploy#RegisterOnPremisesInstance"
        },
        {
          "target": "com.amazonaws.codedeploy#RemoveTagsFromOnPremisesInstances"
        },
        {
          "target": "com.amazonaws.codedeploy#SkipWaitTimeForInstanceTermination"
        },
        {
          "target": "com.amazonaws.codedeploy#StopDeployment"
        },
        {
          "target": "com.amazonaws.codedeploy#TagResource"
        },
        {
          "target": "com.amazonaws.codedeploy#UntagResource"
        },
        {
          "target": "com.amazonaws.codedeploy#UpdateApplication"
        },
        {
          "target": "com.amazonaws.codedeploy#UpdateDeploymentGroup"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "CodeDeploy",
          "arnNamespace": "codedeploy",
          "cloudFormationName": "CodeDeploy",
          "cloudTrailEventSource": "codedeploy.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "codedeploy"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<fullname>AWS CodeDeploy</fullname>\n        <p>AWS CodeDeploy is a deployment service that automates application deployments to\n            Amazon EC2 instances, on-premises instances running in your own facility, serverless\n            AWS Lambda functions, or applications in an Amazon ECS service.</p>\n        <p>You can deploy a nearly unlimited variety of application content, such as an updated\n            Lambda function, updated applications in an Amazon ECS service, code, web and configuration \n            files, executables, packages, scripts,\n            multimedia files, and so on. AWS CodeDeploy can deploy application content stored in\n            Amazon S3 buckets, GitHub repositories, or Bitbucket repositories. You do not need to\n            make changes to your existing code before you can use AWS CodeDeploy.</p>\n        <p>AWS CodeDeploy makes it easier for you to rapidly release new features, helps you\n            avoid downtime during application deployment, and handles the complexity of updating\n            your applications, without many of the risks associated with error-prone manual\n            deployments.</p>\n        <p>\n            <b>AWS CodeDeploy Components</b>\n        </p>\n        <p>Use the information in this guide to help you work with the following AWS CodeDeploy\n            components:</p>\n        <ul>\n            <li>\n                <p>\n                    <b>Application</b>: A name that uniquely identifies\n                    the application you want to deploy. AWS CodeDeploy uses this name, which\n                    functions as a container, to ensure the correct combination of revision,\n                    deployment configuration, and deployment group are referenced during a\n                    deployment.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment group</b>: A set of individual\n                    instances, CodeDeploy Lambda deployment configuration settings, or an Amazon ECS\n                    service and network details. A Lambda deployment group specifies how to route\n                    traffic to a new version of a Lambda function. An Amazon ECS deployment group\n                    specifies the service created in Amazon ECS to deploy, a load balancer, and a\n                    listener to reroute production traffic to an updated containerized application.\n                    An EC2/On-premises deployment group contains individually tagged instances,\n                    Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All deployment\n                    groups can specify optional trigger, alarm, and rollback settings.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment configuration</b>: A set of deployment\n                    rules and deployment success and failure conditions used by AWS CodeDeploy\n                    during a deployment.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment</b>: The process and the components used\n                    when updating a Lambda function, a containerized application in an Amazon ECS\n                    service, or of installing content on one or more instances. </p>\n            </li>\n            <li>\n                <p>\n                    <b>Application revisions</b>: For an AWS Lambda\n                    deployment, this is an AppSpec file that specifies the Lambda function to be\n                    updated and one or more functions to validate deployment lifecycle events. For\n                    an Amazon ECS deployment, this is an AppSpec file that specifies the Amazon ECS\n                    task definition, container, and port where production traffic is rerouted. For\n                    an EC2/On-premises deployment, this is an archive file that contains source\n                    content—source code, webpages, executable files, and deployment scripts—along\n                    with an AppSpec file. Revisions are stored in Amazon S3 buckets or GitHub\n                    repositories. For Amazon S3, a revision is uniquely identified by its Amazon S3\n                    object key and its ETag, version, or both. For GitHub, a revision is uniquely\n                    identified by its commit ID.</p>\n            </li>\n         </ul>\n        <p>This guide also contains information to help you get details about the instances in\n            your deployments, to make on-premises instances available for AWS CodeDeploy\n            deployments, to get details about a Lambda function deployment, and to get details about\n            Amazon ECS service deployments.</p>\n        <p>\n            <b>AWS CodeDeploy Information Resources</b>\n         </p>\n        <ul>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide\">AWS CodeDeploy\n                        User Guide</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/codedeploy/latest/APIReference/\">AWS\n                        CodeDeploy API Reference Guide</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/cli/latest/reference/deploy/index.html\">AWS\n                        CLI Reference for AWS CodeDeploy</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                    <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=179\">AWS CodeDeploy\n                        Developer Forum</a>\n                </p>\n            </li>\n         </ul>",
        "smithy.api#title": "AWS CodeDeploy",
        "smithy.api#xmlNamespace": {
          "uri": "http://codedeploy.amazonaws.com/doc/2014-10-06/"
        }
      }
    },
    "com.amazonaws.codedeploy#CommitId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ComputePlatform": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Server",
            "name": "SERVER"
          },
          {
            "value": "Lambda",
            "name": "LAMBDA"
          },
          {
            "value": "ECS",
            "name": "ECS"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#ContinueDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ContinueDeploymentInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentAlreadyCompletedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIsNotInReadyStateException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentWaitTypeException"
        },
        {
          "target": "com.amazonaws.codedeploy#UnsupportedActionForDeploymentTypeException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For a blue/green deployment, starts the process of rerouting traffic from instances in\n            the original environment to instances in the replacement environment without waiting for\n            a specified wait time to elapse. (Traffic rerouting, which is achieved by registering\n            instances in the replacement environment with the load balancer, can start as soon as\n            all instances have a status of Ready.) </p>"
      }
    },
    "com.amazonaws.codedeploy#ContinueDeploymentInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a blue/green deployment for which you want to start rerouting\n            traffic to the replacement environment. </p>"
          }
        },
        "deploymentWaitType": {
          "target": "com.amazonaws.codedeploy#DeploymentWaitType",
          "traits": {
            "smithy.api#documentation": "<p> The status of the deployment's waiting period. <code>READY_WAIT</code> indicates that\n            the deployment is ready to start shifting traffic. <code>TERMINATION_WAIT</code>\n            indicates that the traffic is shifted, but the original target is not terminated. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#CreateApplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#CreateApplicationInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#CreateApplicationOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagsToAddException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an application.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateApplicationInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the application. This name must be unique with the applicable IAM user or\n            AWS account.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The metadata that you apply to CodeDeploy applications to help you organize and categorize them. Each tag \n            consists of a key and an optional value, both of which you define.\n        </p>"
          }
        },
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p> The destination platform type for the deployment (<code>Lambda</code>, \n                <code>Server</code>, or <code>ECS</code>).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>CreateApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateApplicationOutput": {
      "type": "structure",
      "members": {
        "applicationId": {
          "target": "com.amazonaws.codedeploy#ApplicationId",
          "traits": {
            "smithy.api#documentation": "<p>A unique application ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>CreateApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DescriptionTooLongException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoRollbackConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoScalingGroupException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidFileExistsBehaviorException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidGitHubAccountTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidIgnoreApplicationStopFailuresValueException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidLoadBalancerInfoException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRevisionException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRoleException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTargetInstancesException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTrafficRoutingConfigurationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidUpdateOutdatedInstancesOnlyValueException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deploys an application revision through the specified deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentConfigInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentConfigOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidMinimumHealthyHostValueException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTrafficRoutingConfigurationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Creates a deployment configuration. </p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentConfigInput": {
      "type": "structure",
      "members": {
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the deployment configuration to create.</p>",
            "smithy.api#required": {}
          }
        },
        "minimumHealthyHosts": {
          "target": "com.amazonaws.codedeploy#MinimumHealthyHosts",
          "traits": {
            "smithy.api#documentation": "<p>The minimum number of healthy instances that should be available at any time during\n            the deployment. There are two parameters expected in the input: type and value.</p>\n        <p>The type parameter takes either of the following values:</p>\n        <ul>\n            <li>\n                <p>HOST_COUNT: The value parameter represents the minimum number of healthy\n                    instances as an absolute value.</p>\n            </li>\n            <li>\n                <p>FLEET_PERCENT: The value parameter represents the minimum number of healthy\n                    instances as a percentage of the total number of instances in the deployment. If\n                    you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy\n                    converts the percentage to the equivalent number of instances and rounds up\n                    fractional instances.</p>\n            </li>\n         </ul>\n        <p>The value parameter takes an integer.</p>\n        <p>For example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT\n            and a value of 95.</p>"
          }
        },
        "trafficRoutingConfig": {
          "target": "com.amazonaws.codedeploy#TrafficRoutingConfig",
          "traits": {
            "smithy.api#documentation": "<p>The configuration that specifies how the deployment traffic is routed.</p>"
          }
        },
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>, or <code>ECS</code>).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>CreateDeploymentConfig</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentConfigOutput": {
      "type": "structure",
      "members": {
        "deploymentConfigId": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigId",
          "traits": {
            "smithy.api#documentation": "<p>A unique deployment configuration ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>CreateDeploymentConfig</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentGroupInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#CreateDeploymentGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#AlarmsLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#ECSServiceMappingLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAlarmConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoRollbackConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoScalingGroupException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidBlueGreenDeploymentConfigurationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentStyleException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidEC2TagCombinationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidEC2TagException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidECSServiceException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInputException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidLoadBalancerInfoException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidOnPremisesTagCombinationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRoleException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagsToAddException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTargetGroupPairException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTrafficRoutingConfigurationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTriggerConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#LifecycleHookLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#RoleRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagSetListLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codedeploy#TriggerTargetsLimitExceededException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a deployment group to which application revisions are deployed.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentGroupInput": {
      "type": "structure",
      "members": {
        "onPremisesInstanceTagFilters": {
          "target": "com.amazonaws.codedeploy#TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tags on which to filter. The deployment group includes\n            on-premises instances with any of the specified tags. Cannot be used in the same call as\n                <code>OnPremisesTagSet</code>.</p>"
          }
        },
        "deploymentStyle": {
          "target": "com.amazonaws.codedeploy#DeploymentStyle",
          "traits": {
            "smithy.api#documentation": "<p>Information about the type of deployment, in-place or blue/green, that you want to run\n            and whether to route deployment traffic behind a load balancer.</p>"
          }
        },
        "blueGreenDeploymentConfiguration": {
          "target": "com.amazonaws.codedeploy#BlueGreenDeploymentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about blue/green deployment options for a deployment group.</p>"
          }
        },
        "onPremisesTagSet": {
          "target": "com.amazonaws.codedeploy#OnPremisesTagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about groups of tags applied to on-premises instances. The deployment\n            group includes only on-premises instances identified by all of the tag groups. Cannot be\n            used in the same call as <code>onPremisesInstanceTagFilters</code>.</p>"
          }
        },
        "autoScalingGroups": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupNameList",
          "traits": {
            "smithy.api#documentation": "<p>A list of associated Amazon EC2 Auto Scaling groups.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag \n            consists of a key and an optional value, both of which you define.\n        </p>"
          }
        },
        "alarmConfiguration": {
          "target": "com.amazonaws.codedeploy#AlarmConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information to add about Amazon CloudWatch alarms when the deployment group is\n            created.</p>"
          }
        },
        "ec2TagFilters": {
          "target": "com.amazonaws.codedeploy#EC2TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances\n            with any of the specified tags. Cannot be used in the same call as ec2TagSet.</p>"
          }
        },
        "loadBalancerInfo": {
          "target": "com.amazonaws.codedeploy#LoadBalancerInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the load balancer used in a deployment.</p>"
          }
        },
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>If specified, the deployment configuration name can be either one of the predefined\n            configurations provided with AWS CodeDeploy or a custom deployment configuration that\n            you create by calling the create deployment configuration operation.</p>\n        <p>\n            <code>CodeDeployDefault.OneAtATime</code> is the default deployment configuration. It\n            is used if a configuration isn't specified for the deployment or deployment\n            group.</p>\n        <p>For more information about the predefined deployment configurations in AWS CodeDeploy,\n            see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html\">Working with\n                Deployment Configurations in CodeDeploy</a> in the <i>AWS CodeDeploy User\n                Guide</i>.</p>"
          }
        },
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a new deployment group for the specified application.</p>",
            "smithy.api#required": {}
          }
        },
        "triggerConfigurations": {
          "target": "com.amazonaws.codedeploy#TriggerConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Information about triggers to create when the deployment group is created. For\n            examples, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html\">Create a Trigger for an\n                AWS CodeDeploy Event</a> in the <i>AWS CodeDeploy User\n            Guide</i>.</p>"
          }
        },
        "ecsServices": {
          "target": "com.amazonaws.codedeploy#ECSServiceList",
          "traits": {
            "smithy.api#documentation": "<p> The target Amazon ECS services in the deployment group. This applies only to\n            deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service\n            is specified as an Amazon ECS cluster and service name pair using the format\n            <code><clustername>:<servicename></code>. </p>"
          }
        },
        "autoRollbackConfiguration": {
          "target": "com.amazonaws.codedeploy#AutoRollbackConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration information for an automatic rollback that is added when a deployment\n            group is created.</p>"
          }
        },
        "serviceRoleArn": {
          "target": "com.amazonaws.codedeploy#Role",
          "traits": {
            "smithy.api#documentation": "<p>A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy to act on the\n            user's behalf when interacting with AWS services.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        },
        "ec2TagSet": {
          "target": "com.amazonaws.codedeploy#EC2TagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about groups of tags applied to EC2 instances. The deployment group\n            includes only EC2 instances identified by all the tag groups. Cannot be used in the same\n            call as <code>ec2TagFilters</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>CreateDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentGroupOutput": {
      "type": "structure",
      "members": {
        "deploymentGroupId": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupId",
          "traits": {
            "smithy.api#documentation": "<p>A unique deployment group ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>CreateDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentInput": {
      "type": "structure",
      "members": {
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment configuration associated with the IAM user or AWS\n            account.</p>\n        <p>If not specified, the value configured in the deployment group is used as the default.\n            If the deployment group does not have a deployment configuration associated with it,\n                <code>CodeDeployDefault</code>.<code>OneAtATime</code> is used by default.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.codedeploy#Description",
          "traits": {
            "smithy.api#documentation": "<p>A comment about the deployment.</p>"
          }
        },
        "fileExistsBehavior": {
          "target": "com.amazonaws.codedeploy#FileExistsBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Information about how AWS CodeDeploy handles files that already exist in a deployment\n            target location but weren't part of the previous successful deployment.</p>\n        <p>The <code>fileExistsBehavior</code> parameter takes any of the following\n            values:</p>\n        <ul>\n            <li>\n                <p>DISALLOW: The deployment fails. This is also the default behavior if no option\n                    is specified.</p>\n            </li>\n            <li>\n                <p>OVERWRITE: The version of the file from the application revision currently\n                    being deployed replaces the version already on the instance.</p>\n            </li>\n            <li>\n                <p>RETAIN: The version of the file already on the instance is kept and used as\n                    part of the new deployment.</p>\n            </li>\n         </ul>"
          }
        },
        "targetInstances": {
          "target": "com.amazonaws.codedeploy#TargetInstances",
          "traits": {
            "smithy.api#documentation": "<p> Information about the instances that belong to the replacement environment in a\n            blue/green deployment. </p>"
          }
        },
        "ignoreApplicationStopFailures": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p> If true, then if an <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, or\n                <code>AfterBlockTraffic</code> deployment lifecycle event to an instance fails, then\n            the deployment continues to the next deployment lifecycle event. For example, if\n                <code>ApplicationStop</code> fails, the deployment continues with\n                <code>DownloadBundle</code>. If <code>BeforeBlockTraffic</code> fails, the\n            deployment continues with <code>BlockTraffic</code>. If <code>AfterBlockTraffic</code>\n            fails, the deployment continues with <code>ApplicationStop</code>. </p>\n        \n        <p>\n            If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. \n            If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, \n            then a deployment to the next instance is attempted.\n        </p>\n        \n        <p> During a deployment, the AWS CodeDeploy agent runs the scripts specified for\n                <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, and\n                <code>AfterBlockTraffic</code> in the AppSpec file from the previous successful\n            deployment. (All other scripts are run from the AppSpec file in the current deployment.)\n            If one of these scripts contains an error and does not run successfully, the deployment\n            can fail. </p>\n        \n        <p> If the cause of the failure is a script from the last successful deployment that will\n            never run successfully, create a new deployment and use\n                <code>ignoreApplicationStopFailures</code> to specify that the\n                <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, and\n                <code>AfterBlockTraffic</code> failures should be ignored. </p>"
          }
        },
        "updateOutdatedInstancesOnly": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p> Indicates whether to deploy to all instances or only to instances that are not\n            running the latest application revision. </p>"
          }
        },
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the deployment group.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        },
        "revision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p> The type and location of the revision to deploy. </p>"
          }
        },
        "autoRollbackConfiguration": {
          "target": "com.amazonaws.codedeploy#AutoRollbackConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Configuration information for an automatic rollback that is added when a deployment is\n            created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>CreateDeployment</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#CreateDeploymentOutput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the output of a <code>CreateDeployment</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteApplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeleteApplicationInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRoleException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an application.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteApplicationInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>DeleteApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteDeploymentConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeleteDeploymentConfigInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigInUseException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidOperationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a deployment configuration.</p>\n        <note>\n            <p>A deployment configuration cannot be deleted if it is currently in use. Predefined\n                configurations cannot be deleted.</p>\n        </note>"
      }
    },
    "com.amazonaws.codedeploy#DeleteDeploymentConfigInput": {
      "type": "structure",
      "members": {
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment configuration associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>DeleteDeploymentConfig</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteDeploymentGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeleteDeploymentGroupInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#DeleteDeploymentGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRoleException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteDeploymentGroupInput": {
      "type": "structure",
      "members": {
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment group for the specified application.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>DeleteDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteDeploymentGroupOutput": {
      "type": "structure",
      "members": {
        "hooksNotCleanedUp": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupList",
          "traits": {
            "smithy.api#documentation": "<p>If the output contains no data, and the corresponding deployment group contained at\n            least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto\n            Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group.\n            If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle\n            event hooks from the Amazon EC2 instances in the Auto Scaling group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>DeleteDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteGitHubAccountToken": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeleteGitHubAccountTokenInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#DeleteGitHubAccountTokenOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidGitHubAccountTokenNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#OperationNotSupportedException"
        },
        {
          "target": "com.amazonaws.codedeploy#ResourceValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a GitHub account connection.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteGitHubAccountTokenInput": {
      "type": "structure",
      "members": {
        "tokenName": {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the GitHub account connection to delete.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>DeleteGitHubAccount</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteGitHubAccountTokenOutput": {
      "type": "structure",
      "members": {
        "tokenName": {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the GitHub account connection that was deleted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>DeleteGitHubAccountToken</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteResourcesByExternalId": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeleteResourcesByExternalIdInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#DeleteResourcesByExternalIdOutput"
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes resources linked to an external ID.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeleteResourcesByExternalIdInput": {
      "type": "structure",
      "members": {
        "externalId": {
          "target": "com.amazonaws.codedeploy#ExternalId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of an external resource (for example, a CloudFormation stack ID) that is\n            linked to one or more CodeDeploy resources.</p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#DeleteResourcesByExternalIdOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.codedeploy#DeploymentAlreadyCompletedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment is already complete.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A deployment configuration with the specified name with the IAM user or AWS account\n            already exists.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment configuration does not exist with the IAM user or AWS account.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#DeploymentConfigInUseException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment configuration is still in use.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigInfo": {
      "type": "structure",
      "members": {
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>, or <code>ECS</code>).</p>"
          }
        },
        "createTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the deployment configuration was created.</p>"
          }
        },
        "minimumHealthyHosts": {
          "target": "com.amazonaws.codedeploy#MinimumHealthyHosts",
          "traits": {
            "smithy.api#documentation": "<p>Information about the number or percentage of minimum healthy instance.</p>"
          }
        },
        "trafficRoutingConfig": {
          "target": "com.amazonaws.codedeploy#TrafficRoutingConfig",
          "traits": {
            "smithy.api#documentation": "<p>The configuration that specifies how the deployment traffic is routed. Used for \n        deployments with a Lambda or ECS compute platform only.</p>"
          }
        },
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The deployment configuration name.</p>"
          }
        },
        "deploymentConfigId": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigId",
          "traits": {
            "smithy.api#documentation": "<p>The deployment configuration ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment configuration.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment configurations limit was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigNameRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment configuration name was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentConfigsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentConfigName"
      }
    },
    "com.amazonaws.codedeploy#DeploymentCreator": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "user",
            "name": "User"
          },
          {
            "value": "autoscaling",
            "name": "Autoscaling"
          },
          {
            "value": "codeDeployRollback",
            "name": "CodeDeployRollback"
          },
          {
            "value": "CodeDeploy",
            "name": "CodeDeploy"
          },
          {
            "value": "CloudFormation",
            "name": "CloudFormation"
          },
          {
            "value": "CloudFormationRollback",
            "name": "CloudFormationRollback"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment with the IAM user or AWS account does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A deployment group with the specified name with the IAM user or AWS account already\n            exists.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The named deployment group with the IAM user or AWS account does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#DeploymentGroupInfo": {
      "type": "structure",
      "members": {
        "onPremisesInstanceTagFilters": {
          "target": "com.amazonaws.codedeploy#TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tags on which to filter. The deployment group includes\n            on-premises instances with any of the specified tags.</p>"
          }
        },
        "deploymentStyle": {
          "target": "com.amazonaws.codedeploy#DeploymentStyle",
          "traits": {
            "smithy.api#documentation": "<p>Information about the type of deployment, either in-place or blue/green, you want to\n            run and whether to route deployment traffic behind a load balancer.</p>"
          }
        },
        "ec2TagSet": {
          "target": "com.amazonaws.codedeploy#EC2TagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about groups of tags applied to an EC2 instance. The deployment group\n            includes only EC2 instances identified by all of the tag groups. Cannot be used in the\n            same call as ec2TagFilters.</p>"
          }
        },
        "triggerConfigurations": {
          "target": "com.amazonaws.codedeploy#TriggerConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Information about triggers associated with the deployment group.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The application name.</p>"
          }
        },
        "serviceRoleArn": {
          "target": "com.amazonaws.codedeploy#Role",
          "traits": {
            "smithy.api#documentation": "<p>A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. \n            For more information, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html\">Create a Service Role for AWS CodeDeploy</a> in \n            the <i>AWS CodeDeploy User Guide</i>.</p>"
          }
        },
        "ecsServices": {
          "target": "com.amazonaws.codedeploy#ECSServiceList",
          "traits": {
            "smithy.api#documentation": "<p> The target Amazon ECS services in the deployment group. This applies only to\n            deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service\n            is specified as an Amazon ECS cluster and service name pair using the format\n            <code><clustername>:<servicename></code>. </p>"
          }
        },
        "autoRollbackConfiguration": {
          "target": "com.amazonaws.codedeploy#AutoRollbackConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about the automatic rollback configuration associated with the deployment\n            group.</p>"
          }
        },
        "blueGreenDeploymentConfiguration": {
          "target": "com.amazonaws.codedeploy#BlueGreenDeploymentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about blue/green deployment options for a deployment group.</p>"
          }
        },
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The deployment configuration name.</p>"
          }
        },
        "targetRevision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the deployment group's target revision, including type and\n            location.</p>"
          }
        },
        "alarmConfiguration": {
          "target": "com.amazonaws.codedeploy#AlarmConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A list of alarms associated with the deployment group.</p>"
          }
        },
        "loadBalancerInfo": {
          "target": "com.amazonaws.codedeploy#LoadBalancerInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the load balancer to use in a deployment.</p>"
          }
        },
        "deploymentGroupId": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupId",
          "traits": {
            "smithy.api#documentation": "<p>The deployment group ID.</p>"
          }
        },
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>, or <code>ECS</code>).</p>"
          }
        },
        "autoScalingGroups": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupList",
          "traits": {
            "smithy.api#documentation": "<p>A list of associated Auto Scaling groups.</p>"
          }
        },
        "lastSuccessfulDeployment": {
          "target": "com.amazonaws.codedeploy#LastDeploymentInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the most recent successful deployment to the deployment\n            group.</p>"
          }
        },
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The deployment group name.</p>"
          }
        },
        "onPremisesTagSet": {
          "target": "com.amazonaws.codedeploy#OnPremisesTagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about groups of tags applied to an on-premises instance. The deployment\n            group includes only on-premises instances identified by all the tag groups. Cannot be\n            used in the same call as onPremisesInstanceTagFilters.</p>"
          }
        },
        "ec2TagFilters": {
          "target": "com.amazonaws.codedeploy#EC2TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances\n            with any of the specified tags.</p>"
          }
        },
        "lastAttemptedDeployment": {
          "target": "com.amazonaws.codedeploy#LastDeploymentInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the most recent attempted deployment to the deployment group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentGroupInfo"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The deployment groups limit was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment group name was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentGroupsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentGroupName"
      }
    },
    "com.amazonaws.codedeploy#DeploymentId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#DeploymentIdRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>At least one deployment ID must be specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentInfo": {
      "type": "structure",
      "members": {
        "errorInformation": {
          "target": "com.amazonaws.codedeploy#ErrorInformation",
          "traits": {
            "smithy.api#documentation": "<p>Information about any error associated with this deployment.</p>"
          }
        },
        "blueGreenDeploymentConfiguration": {
          "target": "com.amazonaws.codedeploy#BlueGreenDeploymentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about blue/green deployment options for this deployment.</p>"
          }
        },
        "deploymentStatusMessages": {
          "target": "com.amazonaws.codedeploy#DeploymentStatusMessageList",
          "traits": {
            "smithy.api#documentation": "<p>Messages that contain information about the status of a deployment.</p>"
          }
        },
        "autoRollbackConfiguration": {
          "target": "com.amazonaws.codedeploy#AutoRollbackConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about the automatic rollback configuration associated with the\n            deployment.</p>"
          }
        },
        "createTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the deployment was created.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The application name.</p>"
          }
        },
        "additionalDeploymentStatusInfo": {
          "target": "com.amazonaws.codedeploy#AdditionalDeploymentStatusInfo",
          "traits": {
            "smithy.api#documentation": "<p>Provides information about the results of a deployment, such as whether instances in\n            the original environment in a blue/green deployment were not terminated.</p>"
          }
        },
        "ignoreApplicationStopFailures": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p> If true, then if an <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, or\n                <code>AfterBlockTraffic</code> deployment lifecycle event to an instance fails, then\n            the deployment continues to the next deployment lifecycle event. For example, if\n                <code>ApplicationStop</code> fails, the deployment continues with DownloadBundle. If\n                <code>BeforeBlockTraffic</code> fails, the deployment continues with\n                <code>BlockTraffic</code>. If <code>AfterBlockTraffic</code> fails, the deployment\n            continues with <code>ApplicationStop</code>. </p>\n        \n        <p>\n            If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. \n            If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, \n            then a deployment to the next instance is attempted.\n        </p>\n        \n        <p> During a deployment, the AWS CodeDeploy agent runs the scripts specified for\n                <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, and\n                <code>AfterBlockTraffic</code> in the AppSpec file from the previous successful\n            deployment. (All other scripts are run from the AppSpec file in the current deployment.)\n            If one of these scripts contains an error and does not run successfully, the deployment\n            can fail. </p>\n        \n        <p> If the cause of the failure is a script from the last successful deployment that will\n            never run successfully, create a new deployment and use\n                <code>ignoreApplicationStopFailures</code> to specify that the\n                <code>ApplicationStop</code>, <code>BeforeBlockTraffic</code>, and\n                <code>AfterBlockTraffic</code> failures should be ignored. </p>"
          }
        },
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p> The deployment group name. </p>"
          }
        },
        "fileExistsBehavior": {
          "target": "com.amazonaws.codedeploy#FileExistsBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Information about how AWS CodeDeploy handles files that already exist in a deployment\n            target location but weren't part of the previous successful deployment.</p>\n        <ul>\n            <li>\n                <p>\n                  <code>DISALLOW</code>: The deployment fails. This is also the default behavior\n                    if no option is specified.</p>\n            </li>\n            <li>\n                <p>\n                  <code>OVERWRITE</code>: The version of the file from the application revision\n                    currently being deployed replaces the version already on the instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>RETAIN</code>: The version of the file already on the instance is kept\n                    and used as part of the new deployment.</p>\n            </li>\n         </ul>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "instanceTerminationWaitTimeStarted": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the wait period set for the termination of instances in the original\n            environment has started. Status is 'false' if the KEEP_ALIVE option is specified.\n            Otherwise, 'true' as soon as the termination wait period starts.</p>"
          }
        },
        "revision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the location of stored application artifacts and the service from\n            which to retrieve them.</p>"
          }
        },
        "updateOutdatedInstancesOnly": {
          "target": "com.amazonaws.codedeploy#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether only instances that are not running the latest application revision\n            are to be deployed to.</p>"
          }
        },
        "rollbackInfo": {
          "target": "com.amazonaws.codedeploy#RollbackInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about a deployment rollback.</p>"
          }
        },
        "deploymentStyle": {
          "target": "com.amazonaws.codedeploy#DeploymentStyle",
          "traits": {
            "smithy.api#documentation": "<p>Information about the type of deployment, either in-place or blue/green, you want to\n            run and whether to route deployment traffic behind a load balancer.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the deployment was deployed to the deployment\n            group.</p>\n        <p>In some cases, the reported value of the start time might be later than the complete\n            time. This is due to differences in the clock settings of backend servers that\n            participate in the deployment process.</p>"
          }
        },
        "targetInstances": {
          "target": "com.amazonaws.codedeploy#TargetInstances",
          "traits": {
            "smithy.api#documentation": "<p>Information about the instances that belong to the replacement environment in a\n            blue/green deployment.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the deployment as a whole.</p>"
          }
        },
        "previousRevision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the application revision that was deployed to the deployment group\n            before the most recent successful deployment.</p>"
          }
        },
        "deploymentOverview": {
          "target": "com.amazonaws.codedeploy#DeploymentOverview",
          "traits": {
            "smithy.api#documentation": "<p>A summary of the deployment status of the instances in the deployment.</p>"
          }
        },
        "computePlatform": {
          "target": "com.amazonaws.codedeploy#ComputePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The destination platform type for the deployment (<code>Lambda</code>, <code>Server</code>, or <code>ECS</code>).</p>"
          }
        },
        "creator": {
          "target": "com.amazonaws.codedeploy#DeploymentCreator",
          "traits": {
            "smithy.api#documentation": "<p>The means by which the deployment was created:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>user</code>: A user created the deployment.</p>\n            </li>\n            <li>\n                <p>\n                  <code>autoscaling</code>: Amazon EC2 Auto Scaling created the\n                    deployment.</p>\n            </li>\n            <li>\n                <p>\n                  <code>codeDeployRollback</code>: A rollback process created the\n                    deployment.</p>\n            </li>\n         </ul>"
          }
        },
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p> The deployment configuration name. </p>"
          }
        },
        "loadBalancerInfo": {
          "target": "com.amazonaws.codedeploy#LoadBalancerInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the load balancer used in the deployment.</p>"
          }
        },
        "externalId": {
          "target": "com.amazonaws.codedeploy#ExternalId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID for an external resource (for example, a CloudFormation stack ID) that\n            is linked to this deployment.</p>"
          }
        },
        "completeTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the deployment was complete.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.codedeploy#Description",
          "traits": {
            "smithy.api#documentation": "<p>A comment about the deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentIsNotInReadyStateException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment does not have a status of Ready and can't continue yet.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The number of allowed deployments was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentNotStartedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified deployment has not started.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentOption": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "WITH_TRAFFIC_CONTROL",
            "name": "WITH_TRAFFIC_CONTROL"
          },
          {
            "value": "WITHOUT_TRAFFIC_CONTROL",
            "name": "WITHOUT_TRAFFIC_CONTROL"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentOverview": {
      "type": "structure",
      "members": {
        "Succeeded": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in the deployment to which revisions have been successfully\n            deployed.</p>"
          }
        },
        "Pending": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in the deployment in a pending state.</p>"
          }
        },
        "Ready": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in a replacement environment ready to receive traffic in a\n            blue/green deployment.</p>"
          }
        },
        "Skipped": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in the deployment in a skipped state.</p>"
          }
        },
        "Failed": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in the deployment in a failed state.</p>"
          }
        },
        "InProgress": {
          "target": "com.amazonaws.codedeploy#InstanceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances in which the deployment is in progress.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the deployment status of the instances in the deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentReadyAction": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CONTINUE_DEPLOYMENT",
            "name": "CONTINUE_DEPLOYMENT"
          },
          {
            "value": "STOP_DEPLOYMENT",
            "name": "STOP_DEPLOYMENT"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentReadyOption": {
      "type": "structure",
      "members": {
        "actionOnTimeout": {
          "target": "com.amazonaws.codedeploy#DeploymentReadyAction",
          "traits": {
            "smithy.api#documentation": "<p>Information about when to reroute traffic from an original environment to a\n            replacement environment in a blue/green deployment.</p>\n        <ul>\n            <li>\n                <p>CONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately\n                    after the new application revision is installed on the instances in the\n                    replacement environment.</p>\n            </li>\n            <li>\n                <p>STOP_DEPLOYMENT: Do not register new instances with a load balancer unless\n                    traffic rerouting is started using <a>ContinueDeployment</a>. If\n                    traffic rerouting is not started before the end of the specified wait period,\n                    the deployment status is changed to Stopped.</p>\n            </li>\n         </ul>"
          }
        },
        "waitTimeInMinutes": {
          "target": "com.amazonaws.codedeploy#Duration",
          "traits": {
            "smithy.api#documentation": "<p>The number of minutes to wait before the status of a blue/green deployment is changed\n            to Stopped if rerouting is not started manually. Applies only to the\n                <code>STOP_DEPLOYMENT</code> option for <code>actionOnTimeout</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about how traffic is rerouted to instances in a replacement environment in\n            a blue/green deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Created",
            "name": "CREATED"
          },
          {
            "value": "Queued",
            "name": "QUEUED"
          },
          {
            "value": "InProgress",
            "name": "IN_PROGRESS"
          },
          {
            "value": "Baking",
            "name": "BAKING"
          },
          {
            "value": "Succeeded",
            "name": "SUCCEEDED"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Stopped",
            "name": "STOPPED"
          },
          {
            "value": "Ready",
            "name": "READY"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentStatus"
      }
    },
    "com.amazonaws.codedeploy#DeploymentStatusMessageList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ErrorMessage"
      }
    },
    "com.amazonaws.codedeploy#DeploymentStyle": {
      "type": "structure",
      "members": {
        "deploymentType": {
          "target": "com.amazonaws.codedeploy#DeploymentType",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether to run an in-place deployment or a blue/green deployment.</p>"
          }
        },
        "deploymentOption": {
          "target": "com.amazonaws.codedeploy#DeploymentOption",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether to route deployment traffic behind a load balancer.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the type of deployment, either in-place or blue/green, you want to\n            run and whether to route deployment traffic behind a load balancer.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTarget": {
      "type": "structure",
      "members": {
        "instanceTarget": {
          "target": "com.amazonaws.codedeploy#InstanceTarget",
          "traits": {
            "smithy.api#documentation": "<p> Information about the target for a deployment that uses the EC2/On-premises compute\n            platform. </p>"
          }
        },
        "deploymentTargetType": {
          "target": "com.amazonaws.codedeploy#DeploymentTargetType",
          "traits": {
            "smithy.api#documentation": "<p>The deployment type that is specific to the deployment's compute platform or deployments initiated by a CloudFormation stack update.</p>"
          }
        },
        "cloudFormationTarget": {
          "target": "com.amazonaws.codedeploy#CloudFormationTarget"
        },
        "lambdaTarget": {
          "target": "com.amazonaws.codedeploy#LambdaTarget",
          "traits": {
            "smithy.api#documentation": "<p> Information about the target for a deployment that uses the AWS Lambda compute\n            platform. </p>"
          }
        },
        "ecsTarget": {
          "target": "com.amazonaws.codedeploy#ECSTarget",
          "traits": {
            "smithy.api#documentation": "<p> Information about the target for a deployment that uses the Amazon ECS compute\n            platform. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the deployment target. </p>"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTargetDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The provided target ID does not belong to the attempted deployment. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTargetIdRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A deployment target ID was not provided. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTargetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentTarget"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTargetListSizeExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The maximum number of targets that can be associated with an Amazon ECS or AWS Lambda\n            deployment was exceeded. The target list of both types of deployments must have exactly\n            one item. This exception does not apply to EC2/On-premises deployments. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#DeploymentTargetType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "InstanceTarget",
            "name": "INSTANCE_TARGET"
          },
          {
            "value": "LambdaTarget",
            "name": "LAMBDA_TARGET"
          },
          {
            "value": "ECSTarget",
            "name": "ECS_TARGET"
          },
          {
            "value": "CloudFormationTarget",
            "name": "CLOUDFORMATION_TARGET"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "IN_PLACE",
            "name": "IN_PLACE"
          },
          {
            "value": "BLUE_GREEN",
            "name": "BLUE_GREEN"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentWaitType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "READY_WAIT",
            "name": "READY_WAIT"
          },
          {
            "value": "TERMINATION_WAIT",
            "name": "TERMINATION_WAIT"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#DeploymentsInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentInfo"
      }
    },
    "com.amazonaws.codedeploy#DeploymentsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#DeploymentId"
      }
    },
    "com.amazonaws.codedeploy#DeregisterOnPremisesInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#DeregisterOnPremisesInstanceInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deregisters an on-premises instance.</p>"
      }
    },
    "com.amazonaws.codedeploy#DeregisterOnPremisesInstanceInput": {
      "type": "structure",
      "members": {
        "instanceName": {
          "target": "com.amazonaws.codedeploy#InstanceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the on-premises instance to deregister.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>DeregisterOnPremisesInstance</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#Description": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#DescriptionTooLongException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The description is too long.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#Diagnostics": {
      "type": "structure",
      "members": {
        "logTail": {
          "target": "com.amazonaws.codedeploy#LogTail",
          "traits": {
            "smithy.api#documentation": "<p>The last portion of the diagnostic log.</p>\n        <p>If available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.</p>"
          }
        },
        "scriptName": {
          "target": "com.amazonaws.codedeploy#ScriptName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the script.</p>"
          }
        },
        "errorCode": {
          "target": "com.amazonaws.codedeploy#LifecycleErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>The associated error code:</p>\n        <ul>\n            <li>\n                <p>Success: The specified script ran.</p>\n            </li>\n            <li>\n                <p>ScriptMissing: The specified script was not found in the specified\n                    location.</p>\n            </li>\n            <li>\n                <p>ScriptNotExecutable: The specified script is not a recognized executable file\n                    type.</p>\n            </li>\n            <li>\n                <p>ScriptTimedOut: The specified script did not finish running in the specified\n                    time period.</p>\n            </li>\n            <li>\n                <p>ScriptFailed: The specified script failed to run as expected.</p>\n            </li>\n            <li>\n                <p>UnknownError: The specified script did not run for an unknown reason.</p>\n            </li>\n         </ul>"
          }
        },
        "message": {
          "target": "com.amazonaws.codedeploy#LifecycleMessage",
          "traits": {
            "smithy.api#documentation": "<p>The message associated with the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Diagnostic information about executable scripts that are part of a deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#Duration": {
      "type": "integer"
    },
    "com.amazonaws.codedeploy#EC2TagFilter": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.codedeploy#EC2TagFilterType",
          "traits": {
            "smithy.api#documentation": "<p>The tag filter type:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>KEY_ONLY</code>: Key only.</p>\n            </li>\n            <li>\n                <p>\n                  <code>VALUE_ONLY</code>: Value only.</p>\n            </li>\n            <li>\n                <p>\n                  <code>KEY_AND_VALUE</code>: Key and value.</p>\n            </li>\n         </ul>"
          }
        },
        "Key": {
          "target": "com.amazonaws.codedeploy#Key",
          "traits": {
            "smithy.api#documentation": "<p>The tag filter key.</p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.codedeploy#Value",
          "traits": {
            "smithy.api#documentation": "<p>The tag filter value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an EC2 tag filter.</p>"
      }
    },
    "com.amazonaws.codedeploy#EC2TagFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#EC2TagFilter"
      }
    },
    "com.amazonaws.codedeploy#EC2TagFilterType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "KEY_ONLY",
            "name": "KEY_ONLY"
          },
          {
            "value": "VALUE_ONLY",
            "name": "VALUE_ONLY"
          },
          {
            "value": "KEY_AND_VALUE",
            "name": "KEY_AND_VALUE"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#EC2TagSet": {
      "type": "structure",
      "members": {
        "ec2TagSetList": {
          "target": "com.amazonaws.codedeploy#EC2TagSetList",
          "traits": {
            "smithy.api#documentation": "<p>A list that contains other lists of EC2 instance tag groups. For an instance to be\n            included in the deployment group, it must be identified by all of the tag groups in the\n            list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about groups of EC2 instance tags.</p>"
      }
    },
    "com.amazonaws.codedeploy#EC2TagSetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#EC2TagFilterList"
      }
    },
    "com.amazonaws.codedeploy#ECSClusterName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ECSService": {
      "type": "structure",
      "members": {
        "serviceName": {
          "target": "com.amazonaws.codedeploy#ECSServiceName",
          "traits": {
            "smithy.api#documentation": "<p> The name of the target Amazon ECS service. </p>"
          }
        },
        "clusterName": {
          "target": "com.amazonaws.codedeploy#ECSClusterName",
          "traits": {
            "smithy.api#documentation": "<p> The name of the cluster that the Amazon ECS service is associated with. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Contains the service and cluster names used to identify an Amazon ECS deployment's\n            target. </p>"
      }
    },
    "com.amazonaws.codedeploy#ECSServiceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ECSService"
      }
    },
    "com.amazonaws.codedeploy#ECSServiceMappingLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The Amazon ECS service is associated with more than one deployment groups. An Amazon\n            ECS service can be associated with only one deployment group. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ECSServiceName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ECSTarget": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.codedeploy#TargetStatus",
          "traits": {
            "smithy.api#documentation": "<p> The status an Amazon ECS deployment's target ECS application. </p>"
          }
        },
        "taskSetsInfo": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetList",
          "traits": {
            "smithy.api#documentation": "<p> The <code>ECSTaskSet</code> objects associated with the ECS target. </p>"
          }
        },
        "targetId": {
          "target": "com.amazonaws.codedeploy#TargetId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment target that has a type of <code>ecsTarget</code>.\n        </p>"
          }
        },
        "targetArn": {
          "target": "com.amazonaws.codedeploy#TargetArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the target. </p>"
          }
        },
        "lastUpdatedAt": {
          "target": "com.amazonaws.codedeploy#Time",
          "traits": {
            "smithy.api#documentation": "<p> The date and time when the target Amazon ECS application was updated by a deployment.\n        </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "lifecycleEvents": {
          "target": "com.amazonaws.codedeploy#LifecycleEventList",
          "traits": {
            "smithy.api#documentation": "<p> The lifecycle events of the deployment to this target Amazon ECS application. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the target of an Amazon ECS deployment. </p>"
      }
    },
    "com.amazonaws.codedeploy#ECSTaskSet": {
      "type": "structure",
      "members": {
        "identifer": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetIdentifier",
          "traits": {
            "smithy.api#documentation": "<p> A unique ID of an <code>ECSTaskSet</code>. </p>"
          }
        },
        "runningCount": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetCount",
          "traits": {
            "smithy.api#documentation": "<p> The number of tasks in the task set that are in the <code>RUNNING</code> status\n            during an Amazon ECS deployment. A task in the <code>RUNNING</code> state is running and\n            ready for use. </p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetStatus",
          "traits": {
            "smithy.api#documentation": "<p> The status of the task set. There are three valid task set statuses: </p>\n        <ul>\n            <li>\n                <p>\n                    <code>PRIMARY</code>: Indicates the task set is serving production traffic. </p>\n            </li>\n            <li>\n                <p>\n                    <code>ACTIVE</code>: Indicates the task set is not serving production traffic. </p>\n            </li>\n            <li>\n                <p>\n                    <code>DRAINING</code>: Indicates the tasks in the task set are being stopped and\n                    their corresponding targets are being deregistered from their target group. </p>\n            </li>\n         </ul>"
          }
        },
        "desiredCount": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetCount",
          "traits": {
            "smithy.api#documentation": "<p> The number of tasks in a task set. During a deployment that uses the Amazon ECS\n            compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this\n            value to determine how many tasks to create. After the updated task set is created,\n            CodeDeploy shifts traffic to the new task set. </p>"
          }
        },
        "trafficWeight": {
          "target": "com.amazonaws.codedeploy#TrafficWeight",
          "traits": {
            "smithy.api#documentation": "<p> The percentage of traffic served by this task set. </p>"
          }
        },
        "targetGroup": {
          "target": "com.amazonaws.codedeploy#TargetGroupInfo",
          "traits": {
            "smithy.api#documentation": "<p> The target group associated with the task set. The target group is used by AWS\n            CodeDeploy to manage traffic to a task set. </p>"
          }
        },
        "taskSetLabel": {
          "target": "com.amazonaws.codedeploy#TargetLabel",
          "traits": {
            "smithy.api#documentation": "<p> A label that identifies whether the ECS task set is an original target\n            (<code>BLUE</code>) or a replacement target (<code>GREEN</code>). </p>"
          }
        },
        "pendingCount": {
          "target": "com.amazonaws.codedeploy#ECSTaskSetCount",
          "traits": {
            "smithy.api#documentation": "<p> The number of tasks in the task set that are in the <code>PENDING</code> status\n            during an Amazon ECS deployment. A task in the <code>PENDING</code> state is preparing\n            to enter the <code>RUNNING</code> state. A task set enters the <code>PENDING</code>\n            status when it launches for the first time, or when it is restarted after being in the\n            <code>STOPPED</code> state. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An\n            Amazon ECS task set includes details such as the desired number of tasks, how many tasks\n            are running, and whether the task set serves production traffic. An AWS CodeDeploy\n            application that uses the Amazon ECS compute platform deploys a containerized\n            application in an Amazon ECS service as a task set. </p>"
      }
    },
    "com.amazonaws.codedeploy#ECSTaskSetCount": {
      "type": "long"
    },
    "com.amazonaws.codedeploy#ECSTaskSetIdentifier": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ECSTaskSetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ECSTaskSet"
      }
    },
    "com.amazonaws.codedeploy#ECSTaskSetStatus": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ELBInfo": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.codedeploy#ELBName",
          "traits": {
            "smithy.api#documentation": "<p>For blue/green deployments, the name of the load balancer that is used to route\n            traffic from original instances to replacement instances in a blue/green deployment. For\n            in-place deployments, the name of the load balancer that instances are deregistered from\n            so they are not serving traffic during a deployment, and then re-registered with after\n            the deployment is complete.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a load balancer in Elastic Load Balancing to use in a deployment.\n            Instances are registered directly with a load balancer, and traffic is routed to the\n            load balancer.</p>"
      }
    },
    "com.amazonaws.codedeploy#ELBInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ELBInfo"
      }
    },
    "com.amazonaws.codedeploy#ELBName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ETag": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AGENT_ISSUE",
            "name": "AGENT_ISSUE"
          },
          {
            "value": "ALARM_ACTIVE",
            "name": "ALARM_ACTIVE"
          },
          {
            "value": "APPLICATION_MISSING",
            "name": "APPLICATION_MISSING"
          },
          {
            "value": "AUTOSCALING_VALIDATION_ERROR",
            "name": "AUTOSCALING_VALIDATION_ERROR"
          },
          {
            "value": "AUTO_SCALING_CONFIGURATION",
            "name": "AUTO_SCALING_CONFIGURATION"
          },
          {
            "value": "AUTO_SCALING_IAM_ROLE_PERMISSIONS",
            "name": "AUTO_SCALING_IAM_ROLE_PERMISSIONS"
          },
          {
            "value": "CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND",
            "name": "CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND"
          },
          {
            "value": "CUSTOMER_APPLICATION_UNHEALTHY",
            "name": "CUSTOMER_APPLICATION_UNHEALTHY"
          },
          {
            "value": "DEPLOYMENT_GROUP_MISSING",
            "name": "DEPLOYMENT_GROUP_MISSING"
          },
          {
            "value": "ECS_UPDATE_ERROR",
            "name": "ECS_UPDATE_ERROR"
          },
          {
            "value": "ELASTIC_LOAD_BALANCING_INVALID",
            "name": "ELASTIC_LOAD_BALANCING_INVALID"
          },
          {
            "value": "ELB_INVALID_INSTANCE",
            "name": "ELB_INVALID_INSTANCE"
          },
          {
            "value": "HEALTH_CONSTRAINTS",
            "name": "HEALTH_CONSTRAINTS"
          },
          {
            "value": "HEALTH_CONSTRAINTS_INVALID",
            "name": "HEALTH_CONSTRAINTS_INVALID"
          },
          {
            "value": "HOOK_EXECUTION_FAILURE",
            "name": "HOOK_EXECUTION_FAILURE"
          },
          {
            "value": "IAM_ROLE_MISSING",
            "name": "IAM_ROLE_MISSING"
          },
          {
            "value": "IAM_ROLE_PERMISSIONS",
            "name": "IAM_ROLE_PERMISSIONS"
          },
          {
            "value": "INTERNAL_ERROR",
            "name": "INTERNAL_ERROR"
          },
          {
            "value": "INVALID_ECS_SERVICE",
            "name": "INVALID_ECS_SERVICE"
          },
          {
            "value": "INVALID_LAMBDA_CONFIGURATION",
            "name": "INVALID_LAMBDA_CONFIGURATION"
          },
          {
            "value": "INVALID_LAMBDA_FUNCTION",
            "name": "INVALID_LAMBDA_FUNCTION"
          },
          {
            "value": "INVALID_REVISION",
            "name": "INVALID_REVISION"
          },
          {
            "value": "MANUAL_STOP",
            "name": "MANUAL_STOP"
          },
          {
            "value": "MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION",
            "name": "MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION"
          },
          {
            "value": "MISSING_ELB_INFORMATION",
            "name": "MISSING_ELB_INFORMATION"
          },
          {
            "value": "MISSING_GITHUB_TOKEN",
            "name": "MISSING_GITHUB_TOKEN"
          },
          {
            "value": "NO_EC2_SUBSCRIPTION",
            "name": "NO_EC2_SUBSCRIPTION"
          },
          {
            "value": "NO_INSTANCES",
            "name": "NO_INSTANCES"
          },
          {
            "value": "OVER_MAX_INSTANCES",
            "name": "OVER_MAX_INSTANCES"
          },
          {
            "value": "RESOURCE_LIMIT_EXCEEDED",
            "name": "RESOURCE_LIMIT_EXCEEDED"
          },
          {
            "value": "REVISION_MISSING",
            "name": "REVISION_MISSING"
          },
          {
            "value": "THROTTLED",
            "name": "THROTTLED"
          },
          {
            "value": "TIMEOUT",
            "name": "TIMEOUT"
          },
          {
            "value": "CLOUDFORMATION_STACK_FAILURE",
            "name": "CLOUDFORMATION_STACK_FAILURE"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#ErrorInformation": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>An accompanying error message.</p>"
          }
        },
        "code": {
          "target": "com.amazonaws.codedeploy#ErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>For more information, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/error-codes.html\">Error Codes for AWS\n                CodeDeploy</a> in the <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide\">AWS CodeDeploy User Guide</a>.</p>\n        <p>The error code:</p>\n        <ul>\n            <li>\n                <p>APPLICATION_MISSING: The application was missing. This error code is most\n                    likely raised if the application is deleted after the deployment is created, but\n                    before it is started.</p>\n            </li>\n            <li>\n                <p>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This error code is\n                    most likely raised if the deployment group is deleted after the deployment is\n                    created, but before it is started.</p>\n            </li>\n            <li>\n                <p>HEALTH_CONSTRAINTS: The deployment failed on too many instances to be\n                    successfully deployed within the instance health constraints specified.</p>\n            </li>\n            <li>\n                <p>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully deployed\n                    within the instance health constraints specified.</p>\n            </li>\n            <li>\n                <p>IAM_ROLE_MISSING: The service role cannot be accessed.</p>\n            </li>\n            <li>\n                <p>IAM_ROLE_PERMISSIONS: The service role does not have the correct\n                    permissions.</p>\n            </li>\n            <li>\n                <p>INTERNAL_ERROR: There was an internal error.</p>\n            </li>\n            <li>\n                <p>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to Amazon\n                    EC2.</p>\n            </li>\n            <li>\n                <p>NO_INSTANCES: No instances were specified, or no instances can be\n                    found.</p>\n            </li>\n            <li>\n                <p>OVER_MAX_INSTANCES: The maximum number of instances was exceeded.</p>\n            </li>\n            <li>\n                <p>THROTTLED: The operation was throttled because the calling account exceeded\n                    the throttling limits of one or more AWS services.</p>\n            </li>\n            <li>\n                <p>TIMEOUT: The deployment has timed out.</p>\n            </li>\n            <li>\n                <p>REVISION_MISSING: The revision ID was missing. This error code is most likely\n                    raised if the revision is deleted after the deployment is created, but before it\n                    is started.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment error.</p>"
      }
    },
    "com.amazonaws.codedeploy#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ExternalId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#FileExistsBehavior": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DISALLOW",
            "name": "DISALLOW"
          },
          {
            "value": "OVERWRITE",
            "name": "OVERWRITE"
          },
          {
            "value": "RETAIN",
            "name": "RETAIN"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#FilterValue": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#FilterValueList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#FilterValue"
      }
    },
    "com.amazonaws.codedeploy#GenericRevisionInfo": {
      "type": "structure",
      "members": {
        "lastUsedTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the revision was last used by AWS CodeDeploy.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.codedeploy#Description",
          "traits": {
            "smithy.api#documentation": "<p>A comment about the revision.</p>"
          }
        },
        "deploymentGroups": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupsList",
          "traits": {
            "smithy.api#documentation": "<p>The deployment groups for which this is the current target revision.</p>"
          }
        },
        "registerTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the revision was registered with AWS CodeDeploy.</p>"
          }
        },
        "firstUsedTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>When the revision was first used by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an application revision.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetApplicationInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetApplicationOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about an application.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplicationInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>GetApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplicationOutput": {
      "type": "structure",
      "members": {
        "application": {
          "target": "com.amazonaws.codedeploy#ApplicationInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the application.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>GetApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplicationRevision": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetApplicationRevisionInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetApplicationRevisionOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRevisionException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about an application revision.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplicationRevisionInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the application that corresponds to the revision.</p>",
            "smithy.api#required": {}
          }
        },
        "revision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the application revision to get, including type and location.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>GetApplicationRevision</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetApplicationRevisionOutput": {
      "type": "structure",
      "members": {
        "revisionInfo": {
          "target": "com.amazonaws.codedeploy#GenericRevisionInfo",
          "traits": {
            "smithy.api#documentation": "<p>General information about the revision.</p>"
          }
        },
        "revision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Additional information about the revision, including type and location.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the application that corresponds to the revision.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>GetApplicationRevision</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetDeploymentInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetDeploymentOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a deployment.</p>\n        <note>\n            <p>\n                The <code>content</code> property of the <code>appSpecContent</code> object in the returned revision is always null. \n                Use <code>GetApplicationRevision</code> and the <code>sha256</code> property of the returned <code>appSpecContent</code> \n                object to get the content of the deployment’s AppSpec file. \n            </p>\n        </note>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetDeploymentConfigInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetDeploymentConfigOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a deployment configuration.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentConfigInput": {
      "type": "structure",
      "members": {
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment configuration associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>GetDeploymentConfig</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentConfigOutput": {
      "type": "structure",
      "members": {
        "deploymentConfigInfo": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the deployment configuration.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>GetDeploymentConfig</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetDeploymentGroupInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetDeploymentGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentGroupInput": {
      "type": "structure",
      "members": {
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment group for the specified application.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>GetDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentGroupOutput": {
      "type": "structure",
      "members": {
        "deploymentGroupInfo": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the deployment group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>GetDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment associated with the IAM user or AWS account. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>GetDeployment</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetDeploymentInstanceInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetDeploymentInstanceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "This operation is deprecated, use GetDeploymentTarget instead."
        },
        "smithy.api#documentation": "<p>Gets information about an instance as part of a deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentInstanceInput": {
      "type": "structure",
      "members": {
        "instanceId": {
          "target": "com.amazonaws.codedeploy#InstanceId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of an instance in the deployment group. </p>",
            "smithy.api#required": {}
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>GetDeploymentInstance</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentInstanceOutput": {
      "type": "structure",
      "members": {
        "instanceSummary": {
          "target": "com.amazonaws.codedeploy#InstanceSummary",
          "traits": {
            "smithy.api#documentation": "<p> Information about the instance. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the output of a <code>GetDeploymentInstance</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentOutput": {
      "type": "structure",
      "members": {
        "deploymentInfo": {
          "target": "com.amazonaws.codedeploy#DeploymentInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>GetDeployment</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentTarget": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetDeploymentTargetInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetDeploymentTargetOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentNotStartedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentTargetDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentTargetIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentTargetIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns information about a deployment target. </p>"
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentTargetInput": {
      "type": "structure",
      "members": {
        "targetId": {
          "target": "com.amazonaws.codedeploy#TargetId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment target. </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#GetDeploymentTargetOutput": {
      "type": "structure",
      "members": {
        "deploymentTarget": {
          "target": "com.amazonaws.codedeploy#DeploymentTarget",
          "traits": {
            "smithy.api#documentation": "<p> A deployment target that contains information about a deployment such as its status,\n            lifecycle events, and when it was last updated. It also contains metadata about the\n            deployment target. The deployment target metadata depends on the deployment target's\n            type (<code>instanceTarget</code>, <code>lambdaTarget</code>, or\n            <code>ecsTarget</code>). </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#GetOnPremisesInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#GetOnPremisesInstanceInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#GetOnPremisesInstanceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNotRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Gets information about an on-premises instance. </p>"
      }
    },
    "com.amazonaws.codedeploy#GetOnPremisesInstanceInput": {
      "type": "structure",
      "members": {
        "instanceName": {
          "target": "com.amazonaws.codedeploy#InstanceName",
          "traits": {
            "smithy.api#documentation": "<p> The name of the on-premises instance about which to get information. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>GetOnPremisesInstance</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#GetOnPremisesInstanceOutput": {
      "type": "structure",
      "members": {
        "instanceInfo": {
          "target": "com.amazonaws.codedeploy#InstanceInfo",
          "traits": {
            "smithy.api#documentation": "<p> Information about the on-premises instance. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the output of a <code>GetOnPremisesInstance</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#GitHubAccountTokenDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No GitHub account connection exists with the named specified in the call.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#GitHubAccountTokenName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#GitHubAccountTokenNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#GitHubAccountTokenName"
      }
    },
    "com.amazonaws.codedeploy#GitHubAccountTokenNameRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The call is missing a required GitHub account connection name.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#GitHubLocation": {
      "type": "structure",
      "members": {
        "repository": {
          "target": "com.amazonaws.codedeploy#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The GitHub account and repository pair that stores a reference to the commit that\n            represents the bundled artifacts for the application revision. </p>\n        <p>Specified as account/repository.</p>"
          }
        },
        "commitId": {
          "target": "com.amazonaws.codedeploy#CommitId",
          "traits": {
            "smithy.api#documentation": "<p>The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the\n            application revision.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the location of application artifacts stored in GitHub.</p>"
      }
    },
    "com.amazonaws.codedeploy#GreenFleetProvisioningAction": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DISCOVER_EXISTING",
            "name": "DISCOVER_EXISTING"
          },
          {
            "value": "COPY_AUTO_SCALING_GROUP",
            "name": "COPY_AUTO_SCALING_GROUP"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#GreenFleetProvisioningOption": {
      "type": "structure",
      "members": {
        "action": {
          "target": "com.amazonaws.codedeploy#GreenFleetProvisioningAction",
          "traits": {
            "smithy.api#documentation": "<p>The method used to add instances to a replacement environment.</p>\n        <ul>\n            <li>\n                <p>\n                  <code>DISCOVER_EXISTING</code>: Use instances that already exist or will be\n                    created manually.</p>\n            </li>\n            <li>\n                <p>\n                  <code>COPY_AUTO_SCALING_GROUP</code>: Use settings from a specified Auto\n                    Scaling group to define and create instances in a new Auto Scaling group.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the instances that belong to the replacement environment in a\n            blue/green deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#IamArnRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No IAM ARN was included in the request. You must use an IAM session ARN or IAM user\n            ARN in the request.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#IamSessionArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#IamSessionArnAlreadyRegisteredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request included an IAM session ARN that has already been used to register a\n            different instance.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#IamUserArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#IamUserArnAlreadyRegisteredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified IAM user ARN is already registered with an on-premises instance.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#IamUserArnRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An IAM user ARN was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceAction": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TERMINATE",
            "name": "TERMINATE"
          },
          {
            "value": "KEEP_ALIVE",
            "name": "KEEP_ALIVE"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#InstanceArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#InstanceCount": {
      "type": "long"
    },
    "com.amazonaws.codedeploy#InstanceDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "This exception is deprecated, use DeploymentTargetDoesNotExistException instead."
        },
        "smithy.api#documentation": "<p>The specified instance does not exist in the deployment group.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#InstanceIdRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "This exception is deprecated, use DeploymentTargetIdRequiredException instead."
        },
        "smithy.api#documentation": "<p>The instance ID was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceInfo": {
      "type": "structure",
      "members": {
        "iamSessionArn": {
          "target": "com.amazonaws.codedeploy#IamSessionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM session associated with the on-premises instance.</p>"
          }
        },
        "instanceArn": {
          "target": "com.amazonaws.codedeploy#InstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the on-premises instance.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags currently associated with the on-premises instance.</p>"
          }
        },
        "iamUserArn": {
          "target": "com.amazonaws.codedeploy#IamUserArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM user ARN associated with the on-premises instance.</p>"
          }
        },
        "deregisterTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>If the on-premises instance was deregistered, the time at which the on-premises\n            instance was deregistered.</p>"
          }
        },
        "registerTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time at which the on-premises instance was registered.</p>"
          }
        },
        "instanceName": {
          "target": "com.amazonaws.codedeploy#InstanceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the on-premises instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an on-premises instance.</p>"
      }
    },
    "com.amazonaws.codedeploy#InstanceInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceInfo"
      }
    },
    "com.amazonaws.codedeploy#InstanceLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The maximum number of allowed on-premises instances in a single call was\n            exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#InstanceNameAlreadyRegisteredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified on-premises instance name is already registered.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceName"
      }
    },
    "com.amazonaws.codedeploy#InstanceNameRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An on-premises instance name was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceNotRegisteredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified on-premises instance is not registered.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InstanceStatus": {
      "type": "string",
      "traits": {
        "smithy.api#deprecated": {
          "message": "InstanceStatus is deprecated, use TargetStatus instead."
        },
        "smithy.api#enum": [
          {
            "value": "Pending",
            "name": "PENDING"
          },
          {
            "value": "InProgress",
            "name": "IN_PROGRESS"
          },
          {
            "value": "Succeeded",
            "name": "SUCCEEDED"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Skipped",
            "name": "SKIPPED"
          },
          {
            "value": "Unknown",
            "name": "UNKNOWN"
          },
          {
            "value": "Ready",
            "name": "READY"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#InstanceStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceStatus"
      }
    },
    "com.amazonaws.codedeploy#InstanceSummary": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "instanceId": {
          "target": "com.amazonaws.codedeploy#InstanceId",
          "traits": {
            "smithy.api#documentation": "<p>The instance ID.</p>"
          }
        },
        "lastUpdatedAt": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the instance information was last updated.</p>"
          }
        },
        "instanceType": {
          "target": "com.amazonaws.codedeploy#InstanceType",
          "traits": {
            "smithy.api#documentation": "<p>Information about which environment an instance belongs to in a blue/green\n            deployment.</p>\n        <ul>\n            <li>\n                <p>BLUE: The instance is part of the original environment.</p>\n            </li>\n            <li>\n                <p>GREEN: The instance is part of the replacement environment.</p>\n            </li>\n         </ul>"
          }
        },
        "lifecycleEvents": {
          "target": "com.amazonaws.codedeploy#LifecycleEventList",
          "traits": {
            "smithy.api#documentation": "<p>A list of lifecycle events for this instance.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#InstanceStatus",
          "traits": {
            "smithy.api#documentation": "<p>The deployment status for this instance:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>Pending</code>: The deployment is pending for this instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>In Progress</code>: The deployment is in progress for this\n                    instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Succeeded</code>: The deployment has succeeded for this instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Failed</code>: The deployment has failed for this instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Skipped</code>: The deployment has been skipped for this\n                    instance.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Unknown</code>: The deployment status is unknown for this\n                    instance.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "InstanceSummary is deprecated, use DeploymentTarget instead."
        },
        "smithy.api#documentation": "<p>Information about an instance in a deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#InstanceSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceSummary"
      }
    },
    "com.amazonaws.codedeploy#InstanceTarget": {
      "type": "structure",
      "members": {
        "instanceLabel": {
          "target": "com.amazonaws.codedeploy#TargetLabel",
          "traits": {
            "smithy.api#documentation": "<p> A label that identifies whether the instance is an original target\n            (<code>BLUE</code>) or a replacement target (<code>GREEN</code>). </p>"
          }
        },
        "lifecycleEvents": {
          "target": "com.amazonaws.codedeploy#LifecycleEventList",
          "traits": {
            "smithy.api#documentation": "<p> The lifecycle events of the deployment to this target instance. </p>"
          }
        },
        "lastUpdatedAt": {
          "target": "com.amazonaws.codedeploy#Time",
          "traits": {
            "smithy.api#documentation": "<p> The date and time when the target instance was updated by a deployment. </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "targetId": {
          "target": "com.amazonaws.codedeploy#TargetId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment target that has a type of <code>instanceTarget</code>.\n        </p>"
          }
        },
        "targetArn": {
          "target": "com.amazonaws.codedeploy#TargetArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the target. </p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#TargetStatus",
          "traits": {
            "smithy.api#documentation": "<p> The status an EC2/On-premises deployment's target instance. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A target Amazon EC2 or on-premises instance during a deployment that uses the\n            EC2/On-premises compute platform. </p>"
      }
    },
    "com.amazonaws.codedeploy#InstanceType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Blue",
            "name": "BLUE"
          },
          {
            "value": "Green",
            "name": "GREEN"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#InstanceTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceType"
      }
    },
    "com.amazonaws.codedeploy#InstancesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#InstanceId"
      }
    },
    "com.amazonaws.codedeploy#InvalidAlarmConfigException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The format of the alarm configuration is invalid. Possible causes include:</p>\n        <ul>\n            <li>\n                <p>The alarm list is null.</p>\n            </li>\n            <li>\n                <p>The alarm object is null.</p>\n            </li>\n            <li>\n                <p>The alarm name is empty or null or exceeds the limit of 255 characters.</p>\n            </li>\n            <li>\n                <p>Two alarms with the same name have been specified.</p>\n            </li>\n            <li>\n                <p>The alarm configuration is enabled, but the alarm list is empty.</p>\n            </li>\n         </ul>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidApplicationNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The application name was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidArnException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The specified ARN is not in a valid format. \n        </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidAutoRollbackConfigException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The automatic rollback configuration was specified in an invalid format. For example,\n            automatic rollback is enabled, but an invalid triggering event type or no event types\n            were listed.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidAutoScalingGroupException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Auto Scaling group was specified in an invalid format or does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidBlueGreenDeploymentConfigurationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for the blue/green deployment group was provided in an invalid\n            format. For information about deployment configuration format, see <a>CreateDeploymentConfig</a>.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidBucketNameFilterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The bucket name either doesn't exist or was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidComputePlatformException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The computePlatform is invalid. The computePlatform should be <code>Lambda</code>,\n                <code>Server</code>, or <code>ECS</code>.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeployedStateFilterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployed state filter was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment configuration name was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The deployment group name was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentIdException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>At least one of the deployment IDs was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentInstanceTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An instance type was specified for an in-place deployment. Instance types are\n            supported for blue/green deployments only.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentStatusException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified deployment status doesn't exist or cannot be determined.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentStyleException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid deployment style was specified. Valid deployment types include \"IN_PLACE\"\n            and \"BLUE_GREEN.\" Valid deployment options include \"WITH_TRAFFIC_CONTROL\" and\n            \"WITHOUT_TRAFFIC_CONTROL.\"</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentTargetIdException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The target ID provided was not valid. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidDeploymentWaitTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The wait type is invalid. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidEC2TagCombinationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A call was submitted that specified both Ec2TagFilters and Ec2TagSet, but only one of\n            these data types can be used in a single call.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidEC2TagException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The tag was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidECSServiceException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The Amazon ECS service identifier is not valid. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidExternalIdException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The external ID was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidFileExistsBehaviorException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid fileExistsBehavior option was specified to determine how AWS CodeDeploy\n            handles files or directories that already exist in a deployment target location, but\n            weren't part of the previous successful deployment. Valid values include \"DISALLOW,\"\n            \"OVERWRITE,\" and \"RETAIN.\"</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidGitHubAccountTokenException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The GitHub token is not valid.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidGitHubAccountTokenNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The format of the specified GitHub account connection name is invalid.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidIamSessionArnException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The IAM session ARN was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidIamUserArnException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The IAM user ARN was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidIgnoreApplicationStopFailuresValueException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The IgnoreApplicationStopFailures value is invalid. For AWS Lambda deployments,\n                <code>false</code> is expected. For EC2/On-premises deployments, <code>true</code>\n            or <code>false</code> is expected.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidInputException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidInstanceNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The on-premises instance name was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidInstanceStatusException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified instance status does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidInstanceTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid instance type was specified for instances in a blue/green deployment. Valid\n            values include \"Blue\" for an original environment and \"Green\" for a replacement\n            environment.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidKeyPrefixFilterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified key prefix filter was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidLifecycleEventHookExecutionIdException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A lifecycle event hook is invalid. Review the <code>hooks</code> section in your\n            AppSpec file to ensure the lifecycle events and <code>hooks</code> functions are\n            valid.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidLifecycleEventHookExecutionStatusException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The result of a Lambda validation function that verifies a lifecycle event is invalid.\n            It should return <code>Succeeded</code> or <code>Failed</code>.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidLoadBalancerInfoException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid load balancer name, or no load balancer name, was specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidMinimumHealthyHostValueException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The minimum healthy instance value was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidNextTokenException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The next token was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidOnPremisesTagCombinationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A call was submitted that specified both OnPremisesTagFilters and OnPremisesTagSet,\n            but only one of these data types can be used in a single call.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidOperationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid operation was detected.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidRegistrationStatusException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The registration status was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidRevisionException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The revision was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidRoleException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service role ARN was specified in an invalid format. Or, if an Auto Scaling group\n            was specified, the specified service role does not grant the appropriate permissions to\n            Amazon EC2 Auto Scaling.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidSortByException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The column name to sort by is either not present or was specified in an invalid\n            format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidSortOrderException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The sort order was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTagException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The tag was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTagFilterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The tag filter was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTagsToAddException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The specified tags are not valid. \n        </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTargetFilterNameException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The target filter name is invalid. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTargetGroupPairException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A target group pair associated with this deployment is not valid. </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTargetInstancesException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The target instance configuration is invalid. Possible causes include:</p>\n        <ul>\n            <li>\n                <p>Configuration data for target instances was entered for an in-place\n                    deployment.</p>\n            </li>\n            <li>\n                <p>The limit of 10 tags for a tag type was exceeded.</p>\n            </li>\n            <li>\n                <p>The combined length of the tag names exceeded the limit. </p>\n            </li>\n            <li>\n                <p>A specified tag is not currently applied to any instances.</p>\n            </li>\n         </ul>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTimeRangeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified time range was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTrafficRoutingConfigurationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The configuration that specifies how traffic is routed during a deployment is\n            invalid.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidTriggerConfigException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The trigger was specified in an invalid format.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#InvalidUpdateOutdatedInstancesOnlyValueException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The UpdateOutdatedInstancesOnly value is invalid. For AWS Lambda deployments,\n                <code>false</code> is expected. For EC2/On-premises deployments, <code>true</code>\n            or <code>false</code> is expected.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#Key": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#LambdaFunctionAlias": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#LambdaFunctionInfo": {
      "type": "structure",
      "members": {
        "currentVersion": {
          "target": "com.amazonaws.codedeploy#Version",
          "traits": {
            "smithy.api#documentation": "<p>\n            The version of a Lambda function that production traffic points to.\n        </p>"
          }
        },
        "targetVersion": {
          "target": "com.amazonaws.codedeploy#Version",
          "traits": {
            "smithy.api#documentation": "<p>\n            The version of a Lambda function that production traffic points to after the Lambda function is deployed.\n        </p>"
          }
        },
        "functionName": {
          "target": "com.amazonaws.codedeploy#LambdaFunctionName",
          "traits": {
            "smithy.api#documentation": "<p>\n            The name of a Lambda function.\n        </p>"
          }
        },
        "functionAlias": {
          "target": "com.amazonaws.codedeploy#LambdaFunctionAlias",
          "traits": {
            "smithy.api#documentation": "<p> The alias of a Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/aliases-intro.html\">AWS Lambda Function Aliases</a> in the\n                <i>AWS Lambda Developer Guide</i>.</p>"
          }
        },
        "targetVersionWeight": {
          "target": "com.amazonaws.codedeploy#TrafficWeight",
          "traits": {
            "smithy.api#documentation": "<p>\n            The percentage of production traffic that the target version of a Lambda function receives.\n        </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            Information about a Lambda function specified in a deployment.\n        </p>"
      }
    },
    "com.amazonaws.codedeploy#LambdaFunctionName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#LambdaTarget": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.codedeploy#TargetStatus",
          "traits": {
            "smithy.api#documentation": "<p> The status an AWS Lambda deployment's target Lambda function. </p>"
          }
        },
        "lambdaFunctionInfo": {
          "target": "com.amazonaws.codedeploy#LambdaFunctionInfo",
          "traits": {
            "smithy.api#documentation": "<p>\n            A <code>LambdaFunctionInfo</code> object that describes a target Lambda function.\n        </p>"
          }
        },
        "targetArn": {
          "target": "com.amazonaws.codedeploy#TargetArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the target. </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "lifecycleEvents": {
          "target": "com.amazonaws.codedeploy#LifecycleEventList",
          "traits": {
            "smithy.api#documentation": "<p> The lifecycle events of the deployment to this target Lambda function. </p>"
          }
        },
        "lastUpdatedAt": {
          "target": "com.amazonaws.codedeploy#Time",
          "traits": {
            "smithy.api#documentation": "<p> The date and time when the target Lambda function was updated by a deployment.\n        </p>"
          }
        },
        "targetId": {
          "target": "com.amazonaws.codedeploy#TargetId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment target that has a type of <code>lambdaTarget</code>.\n        </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the target AWS Lambda function during an AWS Lambda deployment.\n        </p>"
      }
    },
    "com.amazonaws.codedeploy#LastDeploymentInfo": {
      "type": "structure",
      "members": {
        "createTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the most recent deployment to the deployment group\n            started.</p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the most recent deployment.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the most recent deployment to the deployment group was\n            complete.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the most recent attempted or successful deployment to a deployment\n            group.</p>"
      }
    },
    "com.amazonaws.codedeploy#LifecycleErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Success",
            "name": "SUCCESS"
          },
          {
            "value": "ScriptMissing",
            "name": "SCRIPT_MISSING"
          },
          {
            "value": "ScriptNotExecutable",
            "name": "SCRIPT_NOT_EXECUTABLE"
          },
          {
            "value": "ScriptTimedOut",
            "name": "SCRIPT_TIMED_OUT"
          },
          {
            "value": "ScriptFailed",
            "name": "SCRIPT_FAILED"
          },
          {
            "value": "UnknownError",
            "name": "UNKNOWN_ERROR"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#LifecycleEvent": {
      "type": "structure",
      "members": {
        "startTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the deployment lifecycle event started.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#LifecycleEventStatus",
          "traits": {
            "smithy.api#documentation": "<p>The deployment lifecycle event status:</p>\n        <ul>\n            <li>\n                <p>Pending: The deployment lifecycle event is pending.</p>\n            </li>\n            <li>\n                <p>InProgress: The deployment lifecycle event is in progress.</p>\n            </li>\n            <li>\n                <p>Succeeded: The deployment lifecycle event ran successfully.</p>\n            </li>\n            <li>\n                <p>Failed: The deployment lifecycle event has failed.</p>\n            </li>\n            <li>\n                <p>Skipped: The deployment lifecycle event has been skipped.</p>\n            </li>\n            <li>\n                <p>Unknown: The deployment lifecycle event is unknown.</p>\n            </li>\n         </ul>"
          }
        },
        "lifecycleEventName": {
          "target": "com.amazonaws.codedeploy#LifecycleEventName",
          "traits": {
            "smithy.api#documentation": "<p>The deployment lifecycle event name, such as <code>ApplicationStop</code>,\n                <code>BeforeInstall</code>, <code>AfterInstall</code>,\n            <code>ApplicationStart</code>, or <code>ValidateService</code>.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp that indicates when the deployment lifecycle event ended.</p>"
          }
        },
        "diagnostics": {
          "target": "com.amazonaws.codedeploy#Diagnostics",
          "traits": {
            "smithy.api#documentation": "<p>Diagnostic information about the deployment lifecycle event.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment lifecycle event.</p>"
      }
    },
    "com.amazonaws.codedeploy#LifecycleEventAlreadyCompletedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An attempt to return the status of an already completed lifecycle event\n            occurred.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#LifecycleEventHookExecutionId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#LifecycleEventList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#LifecycleEvent"
      }
    },
    "com.amazonaws.codedeploy#LifecycleEventName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#LifecycleEventStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Pending",
            "name": "PENDING"
          },
          {
            "value": "InProgress",
            "name": "IN_PROGRESS"
          },
          {
            "value": "Succeeded",
            "name": "SUCCEEDED"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Skipped",
            "name": "SKIPPED"
          },
          {
            "value": "Unknown",
            "name": "UNKNOWN"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#LifecycleHookLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The limit for lifecycle hooks was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#LifecycleMessage": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ListApplicationRevisions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListApplicationRevisionsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListApplicationRevisionsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#BucketNameFilterRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidBucketNameFilterException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeployedStateFilterException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidKeyPrefixFilterException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidSortByException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidSortOrderException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists information about revisions for an application.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "revisions"
        }
      }
    },
    "com.amazonaws.codedeploy#ListApplicationRevisionsInput": {
      "type": "structure",
      "members": {
        "s3Bucket": {
          "target": "com.amazonaws.codedeploy#S3Bucket",
          "traits": {
            "smithy.api#documentation": "<p> An Amazon S3 bucket name to limit the search for revisions. </p>\n        <p> If set to null, all of the user's buckets are searched. </p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p> The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account. </p>",
            "smithy.api#required": {}
          }
        },
        "s3KeyPrefix": {
          "target": "com.amazonaws.codedeploy#S3Key",
          "traits": {
            "smithy.api#documentation": "<p> A key prefix for the set of Amazon S3 objects to limit the search for revisions.\n        </p>"
          }
        },
        "sortBy": {
          "target": "com.amazonaws.codedeploy#ApplicationRevisionSortBy",
          "traits": {
            "smithy.api#documentation": "<p>The column name to use to sort the list results:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>registerTime</code>: Sort by the time the revisions were registered with\n                    AWS CodeDeploy.</p>\n            </li>\n            <li>\n                <p>\n                  <code>firstUsedTime</code>: Sort by the time the revisions were first used in\n                    a deployment.</p>\n            </li>\n            <li>\n                <p>\n                  <code>lastUsedTime</code>: Sort by the time the revisions were last used in a\n                    deployment.</p>\n            </li>\n         </ul>\n        <p> If not specified or set to null, the results are returned in an arbitrary order. </p>"
          }
        },
        "deployed": {
          "target": "com.amazonaws.codedeploy#ListStateFilterAction",
          "traits": {
            "smithy.api#documentation": "<p> Whether to list revisions based on whether the revision is the target revision of a\n            deployment group: </p>\n        <ul>\n            <li>\n                <p>\n                  <code>include</code>: List revisions that are target revisions of a deployment\n                    group.</p>\n            </li>\n            <li>\n                <p>\n                  <code>exclude</code>: Do not list revisions that are target revisions of a\n                    deployment group.</p>\n            </li>\n            <li>\n                <p>\n                  <code>ignore</code>: List all revisions.</p>\n            </li>\n         </ul>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous <code>ListApplicationRevisions</code> call.\n            It can be used to return the next set of applications in the list.</p>"
          }
        },
        "sortOrder": {
          "target": "com.amazonaws.codedeploy#SortOrder",
          "traits": {
            "smithy.api#documentation": "<p> The order in which to sort the list results: </p>\n        <ul>\n            <li>\n                <p>\n                  <code>ascending</code>: ascending order.</p>\n            </li>\n            <li>\n                <p>\n                  <code>descending</code>: descending order.</p>\n            </li>\n         </ul>\n        <p>If not specified, the results are sorted in ascending order.</p>\n        <p>If set to null, the results are sorted in an arbitrary order.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>ListApplicationRevisions</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#ListApplicationRevisionsOutput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list application revisions call to return the next set of\n            application revisions in the list.</p>"
          }
        },
        "revisions": {
          "target": "com.amazonaws.codedeploy#RevisionLocationList",
          "traits": {
            "smithy.api#documentation": "<p>A list of locations that contain the matching revisions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListApplicationRevisions</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListApplications": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListApplicationsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListApplicationsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the applications registered with the IAM user or AWS account.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "applications"
        }
      }
    },
    "com.amazonaws.codedeploy#ListApplicationsInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous list applications call. It can be used to\n            return the next set of applications in the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListApplications</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListApplicationsOutput": {
      "type": "structure",
      "members": {
        "applications": {
          "target": "com.amazonaws.codedeploy#ApplicationsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of application names.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list applications call to return the next set of applications in\n            the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a ListApplications operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentConfigs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListDeploymentConfigsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListDeploymentConfigsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the deployment configurations with the IAM user or AWS account.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "deploymentConfigsList"
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentConfigsInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous <code>ListDeploymentConfigs</code> call. It\n            can be used to return the next set of deployment configurations in the list. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListDeploymentConfigs</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentConfigsOutput": {
      "type": "structure",
      "members": {
        "deploymentConfigsList": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of deployment configurations, including built-in configurations such as\n                <code>CodeDeployDefault.OneAtATime</code>.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list deployment configurations call to return the next set of\n            deployment configurations in the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListDeploymentConfigs</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListDeploymentGroupsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListDeploymentGroupsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the deployment groups for an application registered with the IAM user or AWS\n            account.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "deploymentGroups"
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentGroupsInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous list deployment groups call. It can be used\n            to return the next set of deployment groups in the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListDeploymentGroups</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentGroupsOutput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The application name.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list deployment groups call to return the next set of deployment\n            groups in the list.</p>"
          }
        },
        "deploymentGroups": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of deployment group names.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListDeploymentGroups</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListDeploymentInstancesInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListDeploymentInstancesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentNotStartedException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidComputePlatformException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentInstanceTypeException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceTypeException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTargetFilterNameException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "This operation is deprecated, use ListDeploymentTargets instead."
        },
        "smithy.api#documentation": "<note>\n            <p> The newer <code>BatchGetDeploymentTargets</code> should be used instead because\n                it works with all compute types. <code>ListDeploymentInstances</code> throws an\n                exception if it is used with a compute platform other than EC2/On-premises or AWS\n                Lambda. </p>\n        </note>\n        <p> Lists the instance for a deployment associated with the IAM user or AWS account. </p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "instancesList"
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentInstancesInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous list deployment instances call. It can be\n            used to return the next set of deployment instances in the list.</p>"
          }
        },
        "instanceTypeFilter": {
          "target": "com.amazonaws.codedeploy#InstanceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The set of instances in a blue/green deployment, either those in the original\n            environment (\"BLUE\") or those in the replacement environment (\"GREEN\"), for which you\n            want to view instance information.</p>"
          }
        },
        "instanceStatusFilter": {
          "target": "com.amazonaws.codedeploy#InstanceStatusList",
          "traits": {
            "smithy.api#documentation": "<p>A subset of instances to list by status:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>Pending</code>: Include those instances with pending deployments.</p>\n            </li>\n            <li>\n                <p>\n                  <code>InProgress</code>: Include those instances where deployments are still\n                    in progress.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Succeeded</code>: Include those instances with successful\n                    deployments.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Failed</code>: Include those instances with failed deployments.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Skipped</code>: Include those instances with skipped deployments.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Unknown</code>: Include those instances with deployments in an unknown\n                    state.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>ListDeploymentInstances</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentInstancesOutput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list deployment instances call to return the next set of\n            deployment instances in the list.</p>"
          }
        },
        "instancesList": {
          "target": "com.amazonaws.codedeploy#InstancesList",
          "traits": {
            "smithy.api#documentation": "<p>A list of instance IDs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListDeploymentInstances</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentTargets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListDeploymentTargetsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListDeploymentTargetsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentNotStartedException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentInstanceTypeException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceTypeException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns an array of target IDs that are associated a deployment. </p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentTargetsInput": {
      "type": "structure",
      "members": {
        "targetFilters": {
          "target": "com.amazonaws.codedeploy#TargetFilters",
          "traits": {
            "smithy.api#documentation": "<p> A key used to filter the returned targets. The two valid values are:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>TargetStatus</code> - A <code>TargetStatus</code> filter string can be <code>Failed</code>, <code>InProgress</code>, <code>Pending</code>, \n                    <code>Ready</code>, <code>Skipped</code>, <code>Succeeded</code>, or <code>Unknown</code>.\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>ServerInstanceLabel</code> - A <code>ServerInstanceLabel</code> filter string can be <code>Blue</code> or <code>Green</code>.\n                </p>\n            </li>\n         </ul>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> A token identifier returned from the previous <code>ListDeploymentTargets</code>\n            call. It can be used to return the next set of deployment targets in the list. </p>"
          }
        },
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentTargetsOutput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> If a large amount of information is returned, a token identifier is also  returned.\n            It can be used in a subsequent <code>ListDeploymentTargets</code> call to return the\n            next set of deployment targets in the list. </p>"
          }
        },
        "targetIds": {
          "target": "com.amazonaws.codedeploy#TargetIdList",
          "traits": {
            "smithy.api#documentation": "<p> The unique IDs of deployment targets. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeployments": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListDeploymentsInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListDeploymentsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidExternalIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInputException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTimeRangeException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the deployments in a deployment group for an application registered with the IAM\n            user or AWS account.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "deployments"
        }
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentsInput": {
      "type": "structure",
      "members": {
        "createTimeRange": {
          "target": "com.amazonaws.codedeploy#TimeRange",
          "traits": {
            "smithy.api#documentation": "<p>A time range (start and end) for returning a subset of the list of deployments.</p>"
          }
        },
        "externalId": {
          "target": "com.amazonaws.codedeploy#ExternalId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of an external resource for returning deployments linked to the external resource.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>\n        <note>\n            <p>If <code>applicationName</code> is specified, then <code>deploymentGroupName</code> must \n                be specified. If it is not specified, then <code>deploymentGroupName</code> must not \n                be specified.\n            </p>\n        </note>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous list deployments call. It can be used to\n            return the next set of deployments in the list.</p>"
          }
        },
        "deploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of a deployment group for the specified application.</p>\n        <note>\n            <p>If <code>deploymentGroupName</code> is specified, then <code>applicationName</code> must \n                be specified. If it is not specified, then <code>applicationName</code> must not \n                be specified.\n            </p>\n        </note>"
          }
        },
        "includeOnlyStatuses": {
          "target": "com.amazonaws.codedeploy#DeploymentStatusList",
          "traits": {
            "smithy.api#documentation": "<p>A subset of deployments to list by status:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>Created</code>: Include created deployments in the resulting\n                    list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Queued</code>: Include queued deployments in the resulting list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>In Progress</code>: Include in-progress deployments in the resulting\n                    list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Succeeded</code>: Include successful deployments in the resulting\n                    list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Failed</code>: Include failed deployments in the resulting list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Stopped</code>: Include stopped deployments in the resulting\n                    list.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListDeployments</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListDeploymentsOutput": {
      "type": "structure",
      "members": {
        "deployments": {
          "target": "com.amazonaws.codedeploy#DeploymentsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of deployment IDs.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list deployments call to return the next set of deployments in\n            the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListDeployments</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListGitHubAccountTokenNames": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListGitHubAccountTokenNamesInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListGitHubAccountTokenNamesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#OperationNotSupportedException"
        },
        {
          "target": "com.amazonaws.codedeploy#ResourceValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the names of stored connections to GitHub accounts.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListGitHubAccountTokenNamesInput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous <code>ListGitHubAccountTokenNames</code>\n            call. It can be used to return the next set of names in the list. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListGitHubAccountTokenNames</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListGitHubAccountTokenNamesOutput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent <code>ListGitHubAccountTokenNames</code> call to return the next\n            set of names in the list. </p>"
          }
        },
        "tokenNameList": {
          "target": "com.amazonaws.codedeploy#GitHubAccountTokenNameList",
          "traits": {
            "smithy.api#documentation": "<p>A list of names of connections to GitHub accounts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of a <code>ListGitHubAccountTokenNames</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListOnPremisesInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListOnPremisesInstancesInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListOnPremisesInstancesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InvalidNextTokenException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRegistrationStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagFilterException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a list of names for one or more on-premises instances.</p>\n        <p>Unless otherwise specified, both registered and deregistered on-premises instance\n            names are listed. To list only registered or deregistered on-premises instance names,\n            use the registration status parameter.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListOnPremisesInstancesInput": {
      "type": "structure",
      "members": {
        "tagFilters": {
          "target": "com.amazonaws.codedeploy#TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tags that are used to restrict the  on-premises instance\n            names returned.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous list on-premises instances call. It can be\n            used to return the next set of on-premises instances in the list.</p>"
          }
        },
        "registrationStatus": {
          "target": "com.amazonaws.codedeploy#RegistrationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The registration status of the on-premises instances:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>Deregistered</code>: Include deregistered on-premises instances in the\n                    resulting list.</p>\n            </li>\n            <li>\n                <p>\n                  <code>Registered</code>: Include registered on-premises instances in the\n                    resulting list.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>ListOnPremisesInstances</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListOnPremisesInstancesOutput": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list on-premises instances call to return the next set of\n            on-premises instances in the list.</p>"
          }
        },
        "instanceNames": {
          "target": "com.amazonaws.codedeploy#InstanceNameList",
          "traits": {
            "smithy.api#documentation": "<p>The list of matching on-premises instance names.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of the list on-premises instances operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#ListStateFilterAction": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "include",
            "name": "Include"
          },
          {
            "value": "exclude",
            "name": "Exclude"
          },
          {
            "value": "ignore",
            "name": "Ignore"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#ListTagsForResourceInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#ListTagsForResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ArnNotSupportedException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidArnException"
        },
        {
          "target": "com.amazonaws.codedeploy#ResourceArnRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns a list of tags for the resource identified by a specified Amazon Resource\n            Name (ARN). Tags are used to organize and categorize your CodeDeploy resources. </p>"
      }
    },
    "com.amazonaws.codedeploy#ListTagsForResourceInput": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>An identifier returned from the previous <code>ListTagsForResource</code> call.\n                It can be used to return the next set of applications in the list.</p>"
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.codedeploy#Arn",
          "traits": {
            "smithy.api#documentation": "<p>\n            The ARN of a CodeDeploy resource. <code>ListTagsForResource</code> returns all the tags associated with the \n            resource that is identified by the <code>ResourceArn</code>.\n        </p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codedeploy#ListTagsForResourceOutput": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            A list of tags returned by <code>ListTagsForResource</code>. The tags are associated with the resource \n            identified by the input <code>ResourceArn</code> parameter.\n        </p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codedeploy#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If a large amount of information is returned, an identifier is also returned. It can\n            be used in a subsequent list application revisions call to return the next set of\n            application revisions in the list.</p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#ListenerArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ListenerArnList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#ListenerArn"
      }
    },
    "com.amazonaws.codedeploy#LoadBalancerInfo": {
      "type": "structure",
      "members": {
        "targetGroupPairInfoList": {
          "target": "com.amazonaws.codedeploy#TargetGroupPairInfoList",
          "traits": {
            "smithy.api#documentation": "<p> The target group pair information. This is an array of\n            <code>TargeGroupPairInfo</code> objects with a maximum size of one. </p>"
          }
        },
        "targetGroupInfoList": {
          "target": "com.amazonaws.codedeploy#TargetGroupInfoList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains information about the target group to use for load balancing in\n            a deployment. In Elastic Load Balancing, target groups are used with Application Load\n            Balancers.</p>\n        <note>\n            <p> Adding more than one target group to the array is not supported. </p>\n        </note>"
          }
        },
        "elbInfoList": {
          "target": "com.amazonaws.codedeploy#ELBInfoList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains information about the load balancer to use for load balancing\n            in a deployment. In Elastic Load Balancing, load balancers are used with Classic Load\n            Balancers.</p>\n        <note>\n            <p> Adding more than one load balancer to the array is not supported. </p>\n        </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the Elastic Load Balancing load balancer or target group used in a\n            deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#LogTail": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#Message": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#MinimumHealthyHosts": {
      "type": "structure",
      "members": {
        "value": {
          "target": "com.amazonaws.codedeploy#MinimumHealthyHostsValue",
          "traits": {
            "smithy.api#documentation": "<p>The minimum healthy instance value.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.codedeploy#MinimumHealthyHostsType",
          "traits": {
            "smithy.api#documentation": "<p>The minimum healthy instance type:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>HOST_COUNT</code>: The minimum number of healthy instances as an\n                    absolute value.</p>\n            </li>\n            <li>\n                <p>\n                  <code>FLEET_PERCENT</code>: The minimum number of healthy instances as a\n                    percentage of the total number of instances in the deployment.</p>\n            </li>\n         </ul>\n        <p>In an example of nine instances, if a HOST_COUNT of six is specified, deploy to up to\n            three instances at a time. The deployment is successful if six or more instances are\n            deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is\n            specified, deploy to up to five instances at a time. The deployment is successful if\n            four or more instances are deployed to successfully. Otherwise, the deployment\n            fails.</p>\n        <note>\n            <p>In a call to the <code>GetDeploymentConfig</code>,\n                CodeDeployDefault.OneAtATime returns a minimum healthy instance type of\n                MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a\n                time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or\n                FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy\n                attempts to ensure that all instances but one are kept in a healthy state during the\n                deployment. Although this allows one instance at a time to be taken offline for a\n                new deployment, it also means that if the deployment to the last instance fails, the\n                overall deployment is still successful.</p>\n        </note>\n        <p>For more information, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html\">AWS CodeDeploy Instance\n                Health</a> in the <i>AWS CodeDeploy User Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about minimum healthy instance.</p>"
      }
    },
    "com.amazonaws.codedeploy#MinimumHealthyHostsType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HOST_COUNT"
          },
          {
            "value": "FLEET_PERCENT"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#MinimumHealthyHostsValue": {
      "type": "integer"
    },
    "com.amazonaws.codedeploy#MultipleIamArnsProvidedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Both an IAM user ARN and an IAM session ARN were included in the request. Use only one\n            ARN type.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#NextToken": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#NullableBoolean": {
      "type": "boolean",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.codedeploy#OnPremisesTagSet": {
      "type": "structure",
      "members": {
        "onPremisesTagSetList": {
          "target": "com.amazonaws.codedeploy#OnPremisesTagSetList",
          "traits": {
            "smithy.api#documentation": "<p>A list that contains other lists of on-premises instance tag groups. For an instance\n            to be included in the deployment group, it must be identified by all of the tag groups\n            in the list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about groups of on-premises instance tags.</p>"
      }
    },
    "com.amazonaws.codedeploy#OnPremisesTagSetList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TagFilterList"
      }
    },
    "com.amazonaws.codedeploy#OperationNotSupportedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The API used does not support the deployment.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#Percentage": {
      "type": "integer"
    },
    "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatusInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatusOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidLifecycleEventHookExecutionIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidLifecycleEventHookExecutionStatusException"
        },
        {
          "target": "com.amazonaws.codedeploy#LifecycleEventAlreadyCompletedException"
        },
        {
          "target": "com.amazonaws.codedeploy#UnsupportedActionForDeploymentTypeException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Sets the result of a Lambda validation function. The function validates\n            lifecycle hooks during a deployment that uses the AWS Lambda or Amazon ECS compute platform. For AWS \n            Lambda deployments, the available lifecycle hooks are <code>BeforeAllowTraffic</code> and <code>AfterAllowTraffic</code>. \n            For Amazon ECS deployments, the available lifecycle hooks are <code>BeforeInstall</code>, <code>AfterInstall</code>, \n            <code>AfterAllowTestTraffic</code>, <code>BeforeAllowTraffic</code>, and <code>AfterAllowTraffic</code>. Lambda \n            validation functions return <code>Succeeded</code> or <code>Failed</code>. For more information, \n            see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-lambda\">AppSpec 'hooks' \n                Section for an AWS Lambda Deployment\n            </a> and <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs\">AppSpec \n                'hooks' Section for an Amazon ECS Deployment</a>.</p>"
      }
    },
    "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatusInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. Pass this ID to a Lambda function that validates a\n            deployment lifecycle event. </p>"
          }
        },
        "status": {
          "target": "com.amazonaws.codedeploy#LifecycleEventStatus",
          "traits": {
            "smithy.api#documentation": "<p>The result of a Lambda function that validates a deployment lifecycle event\n                (<code>Succeeded</code> or <code>Failed</code>).</p>"
          }
        },
        "lifecycleEventHookExecutionId": {
          "target": "com.amazonaws.codedeploy#LifecycleEventHookExecutionId",
          "traits": {
            "smithy.api#documentation": "<p> The execution ID of a deployment's lifecycle hook. A deployment lifecycle hook is\n            specified in the <code>hooks</code> section of the AppSpec file. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#PutLifecycleEventHookExecutionStatusOutput": {
      "type": "structure",
      "members": {
        "lifecycleEventHookExecutionId": {
          "target": "com.amazonaws.codedeploy#LifecycleEventHookExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The execution ID of the lifecycle event hook. A hook is specified in the\n                <code>hooks</code> section of the deployment's AppSpec file.</p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#RawString": {
      "type": "structure",
      "members": {
        "sha256": {
          "target": "com.amazonaws.codedeploy#RawStringSha256",
          "traits": {
            "smithy.api#documentation": "<p>The SHA256 hash value of the revision content.</p>"
          }
        },
        "content": {
          "target": "com.amazonaws.codedeploy#RawStringContent",
          "traits": {
            "smithy.api#documentation": "<p>The YAML-formatted or JSON-formatted revision string. It includes information about\n            which Lambda function to update and optional Lambda functions that validate deployment\n            lifecycle events.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "RawString and String revision type are deprecated, use AppSpecContent type instead."
        },
        "smithy.api#documentation": "<p>A revision for an AWS Lambda deployment that is a YAML-formatted or JSON-formatted\n            string. For AWS Lambda deployments, the revision is the same as the AppSpec file.</p>"
      }
    },
    "com.amazonaws.codedeploy#RawStringContent": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#RawStringSha256": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#RegisterApplicationRevision": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#RegisterApplicationRevisionInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DescriptionTooLongException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRevisionException"
        },
        {
          "target": "com.amazonaws.codedeploy#RevisionRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Registers with AWS CodeDeploy a revision for the specified application.</p>"
      }
    },
    "com.amazonaws.codedeploy#RegisterApplicationRevisionInput": {
      "type": "structure",
      "members": {
        "revision": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the application revision to register, including type and\n            location.</p>",
            "smithy.api#required": {}
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an AWS CodeDeploy application associated with the IAM user or AWS\n            account.</p>",
            "smithy.api#required": {}
          }
        },
        "description": {
          "target": "com.amazonaws.codedeploy#Description",
          "traits": {
            "smithy.api#documentation": "<p>A comment about the revision.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a RegisterApplicationRevision operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#RegisterOnPremisesInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#RegisterOnPremisesInstanceInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#IamArnRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#IamSessionArnAlreadyRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#IamUserArnAlreadyRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#IamUserArnRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNameAlreadyRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidIamSessionArnException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidIamUserArnException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#MultipleIamArnsProvidedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Registers an on-premises instance.</p>\n        <note>\n            <p>Only one IAM ARN (an IAM session ARN or IAM user ARN) is supported in the request.\n                You cannot use both.</p>\n        </note>"
      }
    },
    "com.amazonaws.codedeploy#RegisterOnPremisesInstanceInput": {
      "type": "structure",
      "members": {
        "iamSessionArn": {
          "target": "com.amazonaws.codedeploy#IamSessionArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM session to associate with the on-premises instance.</p>"
          }
        },
        "iamUserArn": {
          "target": "com.amazonaws.codedeploy#IamUserArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM user to associate with the on-premises instance.</p>"
          }
        },
        "instanceName": {
          "target": "com.amazonaws.codedeploy#InstanceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the on-premises instance to register.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of the register on-premises instance operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#RegistrationStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Registered",
            "name": "Registered"
          },
          {
            "value": "Deregistered",
            "name": "Deregistered"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#RemoveTagsFromOnPremisesInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#RemoveTagsFromOnPremisesInstancesInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#InstanceLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InstanceNotRegisteredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInstanceNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes one or more tags from one or more on-premises instances.</p>"
      }
    },
    "com.amazonaws.codedeploy#RemoveTagsFromOnPremisesInstancesInput": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tag key-value pairs to remove from the on-premises instances.</p>",
            "smithy.api#required": {}
          }
        },
        "instanceNames": {
          "target": "com.amazonaws.codedeploy#InstanceNameList",
          "traits": {
            "smithy.api#documentation": "<p>The names of the on-premises instances from which to remove tags.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of a <code>RemoveTagsFromOnPremisesInstances</code>\n            operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#Repository": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#ResourceArnRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            The ARN of a resource is required, but was not found.\n        </p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#ResourceValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource could not be validated.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#RevisionDoesNotExistException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The named revision does not exist with the IAM user or AWS account.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#RevisionInfo": {
      "type": "structure",
      "members": {
        "revisionLocation": {
          "target": "com.amazonaws.codedeploy#RevisionLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the location and type of an application revision.</p>"
          }
        },
        "genericRevisionInfo": {
          "target": "com.amazonaws.codedeploy#GenericRevisionInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about an application revision, including usage details and associated\n            deployment groups.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an application revision.</p>"
      }
    },
    "com.amazonaws.codedeploy#RevisionInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#RevisionInfo"
      }
    },
    "com.amazonaws.codedeploy#RevisionLocation": {
      "type": "structure",
      "members": {
        "gitHubLocation": {
          "target": "com.amazonaws.codedeploy#GitHubLocation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the location of application artifacts stored in GitHub.</p>"
          }
        },
        "revisionType": {
          "target": "com.amazonaws.codedeploy#RevisionLocationType",
          "traits": {
            "smithy.api#documentation": "<p>The type of application revision:</p>\n        <ul>\n            <li>\n                <p>S3: An application revision stored in Amazon S3.</p>\n            </li>\n            <li>\n                <p>GitHub: An application revision stored in GitHub (EC2/On-premises deployments\n                    only).</p>\n            </li>\n            <li>\n                <p>String: A YAML-formatted or JSON-formatted string (AWS Lambda deployments\n                    only).</p>\n            </li>\n            <li>\n                <p>AppSpecContent: An <code>AppSpecContent</code> object that contains the contents of an AppSpec file for \n                    an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML \n                    stored as a RawString.</p>\n            </li>\n         </ul>"
          }
        },
        "appSpecContent": {
          "target": "com.amazonaws.codedeploy#AppSpecContent",
          "traits": {
            "smithy.api#documentation": "<p> The content of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The\n            content is formatted as JSON or YAML and stored as a RawString. </p>"
          }
        },
        "string": {
          "target": "com.amazonaws.codedeploy#RawString",
          "traits": {
            "smithy.api#documentation": "<p>Information about the location of an AWS Lambda deployment revision stored as a\n            RawString.</p>"
          }
        },
        "s3Location": {
          "target": "com.amazonaws.codedeploy#S3Location",
          "traits": {
            "smithy.api#documentation": "<p>Information about the location of a revision stored in Amazon S3. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the location of an application revision.</p>"
      }
    },
    "com.amazonaws.codedeploy#RevisionLocationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#RevisionLocation"
      }
    },
    "com.amazonaws.codedeploy#RevisionLocationType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "S3",
            "name": "S3"
          },
          {
            "value": "GitHub",
            "name": "GitHub"
          },
          {
            "value": "String",
            "name": "String"
          },
          {
            "value": "AppSpecContent",
            "name": "AppSpecContent"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#RevisionRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The revision ID was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#Role": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#RoleRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The role ID was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#RollbackInfo": {
      "type": "structure",
      "members": {
        "rollbackTriggeringDeploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p>The deployment ID of the deployment that was underway and triggered a rollback\n            deployment because it failed or was stopped.</p>"
          }
        },
        "rollbackDeploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the deployment rollback.</p>"
          }
        },
        "rollbackMessage": {
          "target": "com.amazonaws.codedeploy#Description",
          "traits": {
            "smithy.api#documentation": "<p>Information that describes the status of a deployment rollback (for example, whether\n            the deployment can't be rolled back, is in progress, failed, or succeeded). </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a deployment rollback.</p>"
      }
    },
    "com.amazonaws.codedeploy#S3Bucket": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#S3Key": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#S3Location": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.codedeploy#S3Bucket",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon S3 bucket where the application revision is stored.</p>"
          }
        },
        "bundleType": {
          "target": "com.amazonaws.codedeploy#BundleType",
          "traits": {
            "smithy.api#documentation": "<p>The file type of the application revision. Must be one of the following:</p>\n        <ul>\n            <li>\n                <p>\n                  <code>tar</code>: A tar archive file.</p>\n            </li>\n            <li>\n                <p>\n                  <code>tgz</code>: A compressed tar archive file.</p>\n            </li>\n            <li>\n                <p>\n                  <code>zip</code>: A zip archive file.</p>\n            </li>\n         </ul>"
          }
        },
        "eTag": {
          "target": "com.amazonaws.codedeploy#ETag",
          "traits": {
            "smithy.api#documentation": "<p>The ETag of the Amazon S3 object that represents the bundled artifacts for the\n            application revision.</p>\n        <p>If the ETag is not specified as an input parameter, ETag validation of the object is\n            skipped.</p>"
          }
        },
        "key": {
          "target": "com.amazonaws.codedeploy#S3Key",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Amazon S3 object that represents the bundled artifacts for the\n            application revision.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.codedeploy#VersionId",
          "traits": {
            "smithy.api#documentation": "<p>A specific version of the Amazon S3 object that represents the bundled artifacts for\n            the application revision.</p>\n        <p>If the version is not specified, the system uses the most recent version by\n            default.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the location of application artifacts stored in Amazon S3.</p>"
      }
    },
    "com.amazonaws.codedeploy#ScriptName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#SkipWaitTimeForInstanceTermination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#SkipWaitTimeForInstanceTerminationInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentAlreadyCompletedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentNotStartedException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#UnsupportedActionForDeploymentTypeException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "This operation is deprecated, use ContinueDeployment with DeploymentWaitType instead."
        },
        "smithy.api#documentation": "<p>In a blue/green deployment, overrides any specified wait time and starts terminating\n            instances immediately after the traffic routing is complete.</p>"
      }
    },
    "com.amazonaws.codedeploy#SkipWaitTimeForInstanceTerminationInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a blue/green deployment for which you want to skip the instance\n            termination wait time. </p>"
          }
        }
      }
    },
    "com.amazonaws.codedeploy#SortOrder": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ascending",
            "name": "Ascending"
          },
          {
            "value": "descending",
            "name": "Descending"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#StopDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#StopDeploymentInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#StopDeploymentOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#DeploymentAlreadyCompletedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentIdRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentIdException"
        },
        {
          "target": "com.amazonaws.codedeploy#UnsupportedActionForDeploymentTypeException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Attempts to stop an ongoing deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#StopDeploymentInput": {
      "type": "structure",
      "members": {
        "deploymentId": {
          "target": "com.amazonaws.codedeploy#DeploymentId",
          "traits": {
            "smithy.api#documentation": "<p> The unique ID of a deployment. </p>",
            "smithy.api#required": {}
          }
        },
        "autoRollbackEnabled": {
          "target": "com.amazonaws.codedeploy#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p> Indicates, when a deployment is stopped, whether instances that have been updated\n            should be rolled back to the previous version of the application revision. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the input of a <code>StopDeployment</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#StopDeploymentOutput": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.codedeploy#StopStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the stop deployment operation:</p>\n        <ul>\n            <li>\n                <p>Pending: The stop operation is pending.</p>\n            </li>\n            <li>\n                <p>Succeeded: The stop operation was successful.</p>\n            </li>\n         </ul>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>An accompanying status message.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Represents the output of a <code>StopDeployment</code> operation. </p>"
      }
    },
    "com.amazonaws.codedeploy#StopStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Pending",
            "name": "PENDING"
          },
          {
            "value": "Succeeded",
            "name": "SUCCEEDED"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.codedeploy#Key",
          "traits": {
            "smithy.api#documentation": "<p>The tag's key.</p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.codedeploy#Value",
          "traits": {
            "smithy.api#documentation": "<p>The tag's value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a tag.</p>"
      }
    },
    "com.amazonaws.codedeploy#TagFilter": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.codedeploy#TagFilterType",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tag filter type:</p>\n        <ul>\n            <li>\n                <p>KEY_ONLY: Key only.</p>\n            </li>\n            <li>\n                <p>VALUE_ONLY: Value only.</p>\n            </li>\n            <li>\n                <p>KEY_AND_VALUE: Key and value.</p>\n            </li>\n         </ul>"
          }
        },
        "Key": {
          "target": "com.amazonaws.codedeploy#Key",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tag filter key.</p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.codedeploy#Value",
          "traits": {
            "smithy.api#documentation": "<p>The on-premises instance tag filter value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an on-premises instance tag filter.</p>"
      }
    },
    "com.amazonaws.codedeploy#TagFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TagFilter"
      }
    },
    "com.amazonaws.codedeploy#TagFilterType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "KEY_ONLY",
            "name": "KEY_ONLY"
          },
          {
            "value": "VALUE_ONLY",
            "name": "VALUE_ONLY"
          },
          {
            "value": "KEY_AND_VALUE",
            "name": "KEY_AND_VALUE"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#Key"
      }
    },
    "com.amazonaws.codedeploy#TagLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The maximum allowed number of tags was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#Tag"
      }
    },
    "com.amazonaws.codedeploy#TagRequiredException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A tag was not specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#TagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#TagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ArnNotSupportedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidArnException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagsToAddException"
        },
        {
          "target": "com.amazonaws.codedeploy#ResourceArnRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n            Associates the list of tags in the input <code>Tags</code> parameter with the resource identified by the <code>ResourceArn</code> input parameter.\n        </p>"
      }
    },
    "com.amazonaws.codedeploy#TagResourceInput": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.codedeploy#TagList",
          "traits": {
            "smithy.api#documentation": "<p>\n            A list of tags that <code>TagResource</code> associates with a resource. The resource is identified by the <code>ResourceArn</code> input parameter.\n        </p>",
            "smithy.api#required": {}
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.codedeploy#Arn",
          "traits": {
            "smithy.api#documentation": "<p>\n            The ARN of a resource, such as a CodeDeploy application or deployment group.\n        </p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codedeploy#TagResourceOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.codedeploy#TagSetListLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The number of tag groups included in the tag set list exceeded the maximum allowed\n            limit of 3.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#TargetArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#TargetFilterName": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TargetStatus",
            "name": "TARGET_STATUS"
          },
          {
            "value": "ServerInstanceLabel",
            "name": "SERVER_INSTANCE_LABEL"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#TargetFilters": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.codedeploy#TargetFilterName"
      },
      "value": {
        "target": "com.amazonaws.codedeploy#FilterValueList"
      }
    },
    "com.amazonaws.codedeploy#TargetGroupInfo": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.codedeploy#TargetGroupName",
          "traits": {
            "smithy.api#documentation": "<p>For blue/green deployments, the name of the target group that instances in the\n            original environment are deregistered from, and instances in the replacement environment\n            are registered with. For in-place deployments, the name of the target group that\n            instances are deregistered from, so they are not serving traffic during a deployment,\n            and then re-registered with after the deployment is complete. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a target group in Elastic Load Balancing to use in a deployment.\n            Instances are registered as targets in a target group, and traffic is routed to the\n            target group.</p>"
      }
    },
    "com.amazonaws.codedeploy#TargetGroupInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TargetGroupInfo"
      }
    },
    "com.amazonaws.codedeploy#TargetGroupName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#TargetGroupPairInfo": {
      "type": "structure",
      "members": {
        "testTrafficRoute": {
          "target": "com.amazonaws.codedeploy#TrafficRoute",
          "traits": {
            "smithy.api#documentation": "<p> An optional path used by a load balancer to route test traffic after an Amazon ECS\n            deployment. Validation can occur while test traffic is served during a deployment. </p>"
          }
        },
        "prodTrafficRoute": {
          "target": "com.amazonaws.codedeploy#TrafficRoute",
          "traits": {
            "smithy.api#documentation": "<p> The path used by a load balancer to route production traffic when an Amazon ECS\n            deployment is complete. </p>"
          }
        },
        "targetGroups": {
          "target": "com.amazonaws.codedeploy#TargetGroupInfoList",
          "traits": {
            "smithy.api#documentation": "<p> One pair of target groups. One is associated with the original task set. The second\n            is associated with the task set that serves traffic after the deployment is complete. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about two target groups and how traffic is routed during an Amazon ECS\n            deployment. An optional test traffic route can be specified. </p>"
      }
    },
    "com.amazonaws.codedeploy#TargetGroupPairInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TargetGroupPairInfo"
      }
    },
    "com.amazonaws.codedeploy#TargetId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#TargetIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TargetId"
      }
    },
    "com.amazonaws.codedeploy#TargetInstances": {
      "type": "structure",
      "members": {
        "autoScalingGroups": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupNameList",
          "traits": {
            "smithy.api#documentation": "<p>The names of one or more Auto Scaling groups to identify a replacement environment for\n            a blue/green deployment.</p>"
          }
        },
        "ec2TagSet": {
          "target": "com.amazonaws.codedeploy#EC2TagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about the groups of EC2 instance tags that an instance must be identified\n            by in order for it to be included in the replacement environment for a blue/green\n            deployment. Cannot be used in the same call as <code>tagFilters</code>.</p>"
          }
        },
        "tagFilters": {
          "target": "com.amazonaws.codedeploy#EC2TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The tag filter key, type, and value used to identify Amazon EC2 instances in a\n            replacement environment for a blue/green deployment. Cannot be used in the same call as\n                <code>ec2TagSet</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the instances to be used in the replacement environment in a\n            blue/green deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#TargetLabel": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Blue",
            "name": "BLUE"
          },
          {
            "value": "Green",
            "name": "GREEN"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#TargetStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Pending",
            "name": "PENDING"
          },
          {
            "value": "InProgress",
            "name": "IN_PROGRESS"
          },
          {
            "value": "Succeeded",
            "name": "SUCCEEDED"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Skipped",
            "name": "SKIPPED"
          },
          {
            "value": "Unknown",
            "name": "UNKNOWN"
          },
          {
            "value": "Ready",
            "name": "READY"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An API function was called too frequently.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#Time": {
      "type": "timestamp"
    },
    "com.amazonaws.codedeploy#TimeBasedCanary": {
      "type": "structure",
      "members": {
        "canaryPercentage": {
          "target": "com.amazonaws.codedeploy#Percentage",
          "traits": {
            "smithy.api#documentation": "<p>The percentage of traffic to shift in the first increment of a\n                <code>TimeBasedCanary</code> deployment.</p>"
          }
        },
        "canaryInterval": {
          "target": "com.amazonaws.codedeploy#WaitTimeInMins",
          "traits": {
            "smithy.api#documentation": "<p>The number of minutes between the first and second traffic shifts of a\n                <code>TimeBasedCanary</code> deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration that shifts traffic from one version of a Lambda function or ECS task set to another\n            in two increments. The original and target Lambda function versions or ECS task sets are specified in the\n            deployment's AppSpec file.</p>"
      }
    },
    "com.amazonaws.codedeploy#TimeBasedLinear": {
      "type": "structure",
      "members": {
        "linearPercentage": {
          "target": "com.amazonaws.codedeploy#Percentage",
          "traits": {
            "smithy.api#documentation": "<p>The percentage of traffic that is shifted at the start of each increment of a\n                <code>TimeBasedLinear</code> deployment.</p>"
          }
        },
        "linearInterval": {
          "target": "com.amazonaws.codedeploy#WaitTimeInMins",
          "traits": {
            "smithy.api#documentation": "<p>The number of minutes between each incremental traffic shift of a\n                <code>TimeBasedLinear</code> deployment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration that shifts traffic from one version of a Lambda function or ECS task set to another\n            in equal increments, with an equal number of minutes between each increment. The\n            original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec\n            file.</p>"
      }
    },
    "com.amazonaws.codedeploy#TimeRange": {
      "type": "structure",
      "members": {
        "start": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start time of the time range.</p>\n        <note>\n            <p>Specify null to leave the start time open-ended.</p>\n        </note>"
          }
        },
        "end": {
          "target": "com.amazonaws.codedeploy#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end time of the time range.</p>\n        <note>\n            <p>Specify null to leave the end time open-ended.</p>\n        </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a time range.</p>"
      }
    },
    "com.amazonaws.codedeploy#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.codedeploy#TrafficRoute": {
      "type": "structure",
      "members": {
        "listenerArns": {
          "target": "com.amazonaws.codedeploy#ListenerArnList",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of one listener. The listener identifies the route\n            between a target group and a load balancer. This is an array of strings with a maximum\n            size of one. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about a listener. The listener contains the path used to route traffic\n            that is received from the load balancer to a target group. </p>"
      }
    },
    "com.amazonaws.codedeploy#TrafficRoutingConfig": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.codedeploy#TrafficRoutingType",
          "traits": {
            "smithy.api#documentation": "<p>The type of traffic shifting (<code>TimeBasedCanary</code> or\n                <code>TimeBasedLinear</code>) used by a deployment configuration.</p>"
          }
        },
        "timeBasedLinear": {
          "target": "com.amazonaws.codedeploy#TimeBasedLinear",
          "traits": {
            "smithy.api#documentation": "<p>A configuration that shifts traffic from one version of a Lambda function or ECS task set to another\n            in equal increments, with an equal number of minutes between each increment. The\n            original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec\n            file.</p>"
          }
        },
        "timeBasedCanary": {
          "target": "com.amazonaws.codedeploy#TimeBasedCanary",
          "traits": {
            "smithy.api#documentation": "<p>A configuration that shifts traffic from one version of a Lambda function or ECS task set to another\n            in two increments. The original and target Lambda function versions or ECS task sets are specified in the\n            deployment's AppSpec file.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration that specifies how traffic is shifted from one version of a Lambda\n            function to another version during an AWS Lambda deployment, or from one Amazon ECS task \n            set to another during an Amazon ECS deployment.</p>"
      }
    },
    "com.amazonaws.codedeploy#TrafficRoutingType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TimeBasedCanary",
            "name": "TimeBasedCanary"
          },
          {
            "value": "TimeBasedLinear",
            "name": "TimeBasedLinear"
          },
          {
            "value": "AllAtOnce",
            "name": "AllAtOnce"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#TrafficWeight": {
      "type": "double"
    },
    "com.amazonaws.codedeploy#TriggerConfig": {
      "type": "structure",
      "members": {
        "triggerName": {
          "target": "com.amazonaws.codedeploy#TriggerName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the notification trigger.</p>"
          }
        },
        "triggerTargetArn": {
          "target": "com.amazonaws.codedeploy#TriggerTargetArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through\n            which notifications about deployment or instance events are sent.</p>"
          }
        },
        "triggerEvents": {
          "target": "com.amazonaws.codedeploy#TriggerEventTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The event type or types for which notifications are triggered.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about notification triggers for the deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#TriggerConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TriggerConfig"
      }
    },
    "com.amazonaws.codedeploy#TriggerEventType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DeploymentStart",
            "name": "DEPLOYMENT_START"
          },
          {
            "value": "DeploymentSuccess",
            "name": "DEPLOYMENT_SUCCESS"
          },
          {
            "value": "DeploymentFailure",
            "name": "DEPLOYMENT_FAILURE"
          },
          {
            "value": "DeploymentStop",
            "name": "DEPLOYMENT_STOP"
          },
          {
            "value": "DeploymentRollback",
            "name": "DEPLOYMENT_ROLLBACK"
          },
          {
            "value": "DeploymentReady",
            "name": "DEPLOYMENT_READY"
          },
          {
            "value": "InstanceStart",
            "name": "INSTANCE_START"
          },
          {
            "value": "InstanceSuccess",
            "name": "INSTANCE_SUCCESS"
          },
          {
            "value": "InstanceFailure",
            "name": "INSTANCE_FAILURE"
          },
          {
            "value": "InstanceReady",
            "name": "INSTANCE_READY"
          }
        ]
      }
    },
    "com.amazonaws.codedeploy#TriggerEventTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codedeploy#TriggerEventType"
      }
    },
    "com.amazonaws.codedeploy#TriggerName": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#TriggerTargetArn": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#TriggerTargetsLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The maximum allowed number of triggers was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#UnsupportedActionForDeploymentTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.codedeploy#Message",
          "traits": {
            "smithy.api#documentation": "<p>The message that corresponds to the exception thrown by AWS CodeDeploy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A call was submitted that is not supported for the specified deployment type.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.codedeploy#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#UntagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#UntagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ArnNotSupportedException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidArnException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagsToAddException"
        },
        {
          "target": "com.amazonaws.codedeploy#ResourceArnRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagRequiredException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Disassociates a resource from a list of tags. The resource is identified by the\n                <code>ResourceArn</code> input parameter. The tags are identified by the list of\n            keys in the <code>TagKeys</code> input parameter. </p>"
      }
    },
    "com.amazonaws.codedeploy#UntagResourceInput": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.codedeploy#Arn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that specifies from which resource to disassociate the\n            tags with the keys in the <code>TagKeys</code> input parameter. </p>",
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.codedeploy#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>\n            A list of keys of <code>Tag</code> objects. The <code>Tag</code> objects identified by the keys are disassociated from the resource \n            specified by the <code>ResourceArn</code> input parameter.\n        </p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codedeploy#UntagResourceOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.codedeploy#UpdateApplication": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#UpdateApplicationInput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#ApplicationAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes the name of an application.</p>"
      }
    },
    "com.amazonaws.codedeploy#UpdateApplicationInput": {
      "type": "structure",
      "members": {
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The current name of the application you want to change.</p>"
          }
        },
        "newApplicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The new name to give the application.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of an <code>UpdateApplication</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#UpdateDeploymentGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codedeploy#UpdateDeploymentGroupInput"
      },
      "output": {
        "target": "com.amazonaws.codedeploy#UpdateDeploymentGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.codedeploy#AlarmsLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#ApplicationNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentConfigDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupDoesNotExistException"
        },
        {
          "target": "com.amazonaws.codedeploy#DeploymentGroupNameRequiredException"
        },
        {
          "target": "com.amazonaws.codedeploy#ECSServiceMappingLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAlarmConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidApplicationNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoRollbackConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidAutoScalingGroupException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidBlueGreenDeploymentConfigurationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentConfigNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentGroupNameException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidDeploymentStyleException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidEC2TagCombinationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidEC2TagException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidECSServiceException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidInputException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidLoadBalancerInfoException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidOnPremisesTagCombinationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidRoleException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTagException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTargetGroupPairException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTrafficRoutingConfigurationException"
        },
        {
          "target": "com.amazonaws.codedeploy#InvalidTriggerConfigException"
        },
        {
          "target": "com.amazonaws.codedeploy#LifecycleHookLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#TagSetListLimitExceededException"
        },
        {
          "target": "com.amazonaws.codedeploy#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codedeploy#TriggerTargetsLimitExceededException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Changes information about a deployment group.</p>"
      }
    },
    "com.amazonaws.codedeploy#UpdateDeploymentGroupInput": {
      "type": "structure",
      "members": {
        "deploymentStyle": {
          "target": "com.amazonaws.codedeploy#DeploymentStyle",
          "traits": {
            "smithy.api#documentation": "<p>Information about the type of deployment, either in-place or blue/green, you want to\n            run and whether to route deployment traffic behind a load balancer.</p>"
          }
        },
        "applicationName": {
          "target": "com.amazonaws.codedeploy#ApplicationName",
          "traits": {
            "smithy.api#documentation": "<p>The application name that corresponds to the deployment group to update.</p>",
            "smithy.api#required": {}
          }
        },
        "blueGreenDeploymentConfiguration": {
          "target": "com.amazonaws.codedeploy#BlueGreenDeploymentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information about blue/green deployment options for a deployment group.</p>"
          }
        },
        "onPremisesInstanceTagFilters": {
          "target": "com.amazonaws.codedeploy#TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The replacement set of on-premises instance tags on which to filter, if you want to\n            change them. To keep the existing tags, enter their names. To remove tags, do not enter\n            any tag names.</p>"
          }
        },
        "alarmConfiguration": {
          "target": "com.amazonaws.codedeploy#AlarmConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information to add or change about Amazon CloudWatch alarms when the deployment group\n            is updated.</p>"
          }
        },
        "loadBalancerInfo": {
          "target": "com.amazonaws.codedeploy#LoadBalancerInfo",
          "traits": {
            "smithy.api#documentation": "<p>Information about the load balancer used in a deployment.</p>"
          }
        },
        "autoScalingGroups": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupNameList",
          "traits": {
            "smithy.api#documentation": "<p>The replacement list of Auto Scaling groups to be included in the deployment group, if\n            you want to change them. To keep the Auto Scaling groups, enter their names. To remove\n            Auto Scaling groups, do not enter any Auto Scaling group names.</p>"
          }
        },
        "serviceRoleArn": {
          "target": "com.amazonaws.codedeploy#Role",
          "traits": {
            "smithy.api#documentation": "<p>A replacement ARN for the service role, if you want to change it.</p>"
          }
        },
        "ec2TagFilters": {
          "target": "com.amazonaws.codedeploy#EC2TagFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The replacement set of Amazon EC2 tags on which to filter, if you want to change them.\n            To keep the existing tags, enter their names. To remove tags, do not enter any tag\n            names.</p>"
          }
        },
        "ecsServices": {
          "target": "com.amazonaws.codedeploy#ECSServiceList",
          "traits": {
            "smithy.api#documentation": "<p> The target Amazon ECS services in the deployment group. This applies only to\n            deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service\n            is specified as an Amazon ECS cluster and service name pair using the format\n            <code><clustername>:<servicename></code>. </p>"
          }
        },
        "onPremisesTagSet": {
          "target": "com.amazonaws.codedeploy#OnPremisesTagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about an on-premises instance tag set. The deployment group includes only\n            on-premises instances identified by all the tag groups.</p>"
          }
        },
        "currentDeploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The current name of the deployment group.</p>",
            "smithy.api#required": {}
          }
        },
        "autoRollbackConfiguration": {
          "target": "com.amazonaws.codedeploy#AutoRollbackConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Information for an automatic rollback configuration that is added or changed when a\n            deployment group is updated.</p>"
          }
        },
        "triggerConfigurations": {
          "target": "com.amazonaws.codedeploy#TriggerConfigList",
          "traits": {
            "smithy.api#documentation": "<p>Information about triggers to change when the deployment group is updated. For\n            examples, see <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-edit.html\">Edit a Trigger in a\n                CodeDeploy Deployment Group</a> in the <i>AWS CodeDeploy User\n                Guide</i>.</p>"
          }
        },
        "deploymentConfigName": {
          "target": "com.amazonaws.codedeploy#DeploymentConfigName",
          "traits": {
            "smithy.api#documentation": "<p>The replacement deployment configuration name to use, if you want to change it.</p>"
          }
        },
        "newDeploymentGroupName": {
          "target": "com.amazonaws.codedeploy#DeploymentGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The new name of the deployment group, if you want to change it.</p>"
          }
        },
        "ec2TagSet": {
          "target": "com.amazonaws.codedeploy#EC2TagSet",
          "traits": {
            "smithy.api#documentation": "<p>Information about groups of tags applied to on-premises instances. The deployment\n            group includes only EC2 instances identified by all the tag groups.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the input of an <code>UpdateDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#UpdateDeploymentGroupOutput": {
      "type": "structure",
      "members": {
        "hooksNotCleanedUp": {
          "target": "com.amazonaws.codedeploy#AutoScalingGroupList",
          "traits": {
            "smithy.api#documentation": "<p>If the output contains no data, and the corresponding deployment group contained at\n            least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto\n            Scaling lifecycle event hooks from the AWS account. If the output contains data, AWS\n            CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the AWS\n            account.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the output of an <code>UpdateDeploymentGroup</code> operation.</p>"
      }
    },
    "com.amazonaws.codedeploy#Value": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#Version": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#VersionId": {
      "type": "string"
    },
    "com.amazonaws.codedeploy#WaitTimeInMins": {
      "type": "integer"
    }
  }
}
