{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.controlcatalog#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.controlcatalog#AssociatedDomainSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#DomainArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the related domain.</p>"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the related domain.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of the domain that a common control or an objective belongs to.</p>"
      }
    },
    "com.amazonaws.controlcatalog#AssociatedObjectiveSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#ObjectiveArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the related objective.</p>"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the related objective.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of the objective that a common control supports.</p>"
      }
    },
    "com.amazonaws.controlcatalog#CommonControlArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 41,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws(?:[-a-z]*)?):controlcatalog:::common-control/[0-9a-z]+$"
      }
    },
    "com.amazonaws.controlcatalog#CommonControlFilter": {
      "type": "structure",
      "members": {
        "Objectives": {
          "target": "com.amazonaws.controlcatalog#ObjectiveResourceFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The objective that's used as filter criteria.</p>\n         <p>You can use this parameter to specify one objective ARN at a time. Passing multiple ARNs\n      in the <code>CommonControlFilter</code> isnâ€™t currently supported.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An optional filter that narrows the results to a specific objective.</p>"
      }
    },
    "com.amazonaws.controlcatalog#CommonControlResource": {
      "type": "resource",
      "identifiers": {
        "CommonControlArn": {
          "target": "com.amazonaws.controlcatalog#CommonControlArn"
        }
      },
      "list": {
        "target": "com.amazonaws.controlcatalog#ListCommonControls"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{CommonControlArn}",
          "noAccount": true,
          "absolute": true
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "common-control"
        }
      }
    },
    "com.amazonaws.controlcatalog#CommonControlSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#CommonControlArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the common control.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the common control.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the common control.</p>",
            "smithy.api#required": {}
          }
        },
        "Domain": {
          "target": "com.amazonaws.controlcatalog#AssociatedDomainSummary",
          "traits": {
            "smithy.api#documentation": "<p>The domain that the common control belongs to.</p>",
            "smithy.api#required": {}
          }
        },
        "Objective": {
          "target": "com.amazonaws.controlcatalog#AssociatedObjectiveSummary",
          "traits": {
            "smithy.api#documentation": "<p>The objective that the common control belongs to.</p>",
            "smithy.api#required": {}
          }
        },
        "CreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the common control was created.</p>",
            "smithy.api#required": {}
          }
        },
        "LastUpdateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the common control was most recently updated.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of metadata for a common control.</p>"
      }
    },
    "com.amazonaws.controlcatalog#CommonControlSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#CommonControlSummary"
      }
    },
    "com.amazonaws.controlcatalog#ControlArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 34,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws(?:[-a-z]*)?):(controlcatalog|controltower):[a-zA-Z0-9-]*::control/[0-9a-zA-Z_\\-]+$"
      }
    },
    "com.amazonaws.controlcatalog#ControlBehavior": {
      "type": "enum",
      "members": {
        "PREVENTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PREVENTIVE"
          }
        },
        "PROACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PROACTIVE"
          }
        },
        "DETECTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DETECTIVE"
          }
        }
      }
    },
    "com.amazonaws.controlcatalog#ControlCatalog": {
      "type": "service",
      "version": "2018-05-10",
      "resources": [
        {
          "target": "com.amazonaws.controlcatalog#CommonControlResource"
        },
        {
          "target": "com.amazonaws.controlcatalog#ControlResource"
        },
        {
          "target": "com.amazonaws.controlcatalog#DomainResource"
        },
        {
          "target": "com.amazonaws.controlcatalog#ObjectiveResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "ControlCatalog",
          "arnNamespace": "controlcatalog",
          "cloudTrailEventSource": "controlcatalog.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "controlcatalog"
        },
        "aws.iam#supportedPrincipalTypes": ["Root", "IAMUser", "IAMRole", "FederatedUser"],
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "origin": "*",
          "additionalAllowedHeaders": [
            "*",
            "access-control-allow-origin",
            "Amz-Sdk-Invocation-Id",
            "Amz-Sdk-Request",
            "Authorization",
            "Content-Length",
            "Content-Type",
            "Date",
            "Host",
            "X-Amz-Content-Sha256",
            "X-Amz-Date",
            "X-Amz-Security-Token",
            "X-Amz-Target",
            "X-Amz-User-Agent",
            "X-Amzn-Trace-Id"
          ]
        },
        "smithy.api#documentation": "<p>Welcome to the Amazon Web Services Control Catalog API reference. This guide is for \n      developers who need detailed information about how to programmatically identify and filter \n      the common controls and related metadata that are available to Amazon Web Services customers. This API reference provides \n      descriptions, syntax, and usage examples for each of the actions and data types that are \n      supported by Amazon Web Services Control Catalog. </p>\n         <p>Use the following links to get started with the Amazon Web Services Control Catalog API:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_Operations.html\">Actions</a>: An\n          alphabetical list of all Control Catalog API operations.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_Types.html\">Data types</a>: An\n          alphabetical list of all Control Catalog data types.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/controlcatalog/latest/APIReference/CommonParameters.html\">Common\n          parameters</a>: Parameters that all operations can use.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/controlcatalog/latest/APIReference/CommonErrors.html\">Common errors</a>:\n          Client and server errors that all operations can return.</p>\n            </li>\n         </ul>",
        "smithy.api#title": "AWS Control Catalog",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": {
                          "ref": "Endpoint"
                        },
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://controlcatalog-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    },
                                    true
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://controlcatalog-fips.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "FIPS is enabled but this partition does not support FIPS",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "rules": [
                                {
                                  "conditions": [],
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://controlcatalog.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ],
                                  "type": "tree"
                                }
                              ],
                              "type": "tree"
                            },
                            {
                              "conditions": [],
                              "error": "DualStack is enabled but this partition does not support DualStack",
                              "type": "error"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://controlcatalog.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        }
                      ],
                      "type": "tree"
                    }
                  ],
                  "type": "tree"
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ],
              "type": "tree"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://controlcatalog.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.controlcatalog#ControlParameter": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The parameter name. This name is the parameter <code>key</code> when you call <a href=\"https://docs.aws.amazon.com/controltower/latest/APIReference/API_EnableControl.html\">\n               <code>EnableControl</code>\n            </a> or <a href=\"https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateEnabledControl.html\">\n               <code>UpdateEnabledControl</code>\n            </a>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Five types of control parameters are supported.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AllowedRegions</b>: List of Amazon Web Services Regions exempted from the\n          control. Each string is expected to be an Amazon Web Services Region code. This parameter is mandatory for the <b>OU Region deny</b> control, <b>CT.MULTISERVICE.PV.1</b>.</p>\n               <p>Example: <code>[\"us-east-1\",\"us-west-2\"]</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>ExemptedActions</b>: List of Amazon Web Services IAM actions exempted\n          from the control. Each string is expected to be an IAM action.</p>\n               <p>Example:\n          <code>[\"logs:DescribeLogGroups\",\"logs:StartQuery\",\"logs:GetQueryResults\"]</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>ExemptedPrincipalArns</b>: List of Amazon Web Services IAM principal ARNs\n          exempted from the control. Each string is expected to be an IAM principal that follows\n          the pattern <code>^arn:(aws|aws-us-gov):(iam|sts)::.+:.+$</code>\n               </p>\n               <p>Example:\n          <code>[\"arn:aws:iam::*:role/ReadOnly\",\"arn:aws:sts::*:assumed-role/ReadOnly/*\"]</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>ExemptedResourceArns</b>: List of resource ARNs exempted\n          from the control. Each string is expected to be a resource ARN.</p>\n               <p>Example: <code>[\"arn:aws:s3:::my-bucket-name\"]</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>ExemptAssumeRoot</b>: A parameter that lets you choose\n          whether to exempt requests made with <code>AssumeRoot</code> from this control, for this\n          OU. For member accounts, the <code>AssumeRoot</code> property is included in requests\n          initiated by IAM centralized root access. This parameter applies only to the\n            <code>AWS-GR_RESTRICT_ROOT_USER</code> control. If you add the parameter when enabling\n          the control, the <code>AssumeRoot</code> exemption is allowed. If you omit the parameter,\n          the <code>AssumeRoot</code> exception is not permitted. The parameter does not accept\n            <code>False</code> as a value.</p>\n               <p>\n                  <i>Example: Enabling the control and allowing <code>AssumeRoot</code>\n                  </i>\n               </p>\n               <p>\n                  <code>{\n          \"controlIdentifier\": \"arn:aws:controlcatalog:::control/5kvme4m5d2b4d7if2fs5yg2ui\",\n          \"parameters\": [\n            {\n              \"key\": \"ExemptAssumeRoot\",\n              \"value\": true\n            }\n          ],\n          \"targetIdentifier\": \"arn:aws:organizations::8633900XXXXX:ou/o-6jmn81636m/ou-qsah-jtiihcla\"\n          }</code>\n               </p>\n            </li>\n         </ul>"
      }
    },
    "com.amazonaws.controlcatalog#ControlParameters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#ControlParameter"
      }
    },
    "com.amazonaws.controlcatalog#ControlResource": {
      "type": "resource",
      "identifiers": {
        "ControlArn": {
          "target": "com.amazonaws.controlcatalog#ControlArn"
        }
      },
      "read": {
        "target": "com.amazonaws.controlcatalog#GetControl"
      },
      "list": {
        "target": "com.amazonaws.controlcatalog#ListControls"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{ControlArn}",
          "absolute": true
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "control"
        }
      }
    },
    "com.amazonaws.controlcatalog#ControlScope": {
      "type": "enum",
      "members": {
        "GLOBAL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GLOBAL"
          }
        },
        "REGIONAL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REGIONAL"
          }
        }
      }
    },
    "com.amazonaws.controlcatalog#ControlSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#ControlArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the control.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the control.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A description of the control, as it may appear in the console. Describes the functionality of the control.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Overview of information about a control.</p>"
      }
    },
    "com.amazonaws.controlcatalog#Controls": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#ControlSummary"
      }
    },
    "com.amazonaws.controlcatalog#DeployableRegions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#RegionCode"
      }
    },
    "com.amazonaws.controlcatalog#DomainArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 33,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws(?:[-a-z]*)?):controlcatalog:::domain/[0-9a-z]+$"
      }
    },
    "com.amazonaws.controlcatalog#DomainResource": {
      "type": "resource",
      "identifiers": {
        "DomainArn": {
          "target": "com.amazonaws.controlcatalog#DomainArn"
        }
      },
      "list": {
        "target": "com.amazonaws.controlcatalog#ListDomains"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{DomainArn}",
          "noAccount": true,
          "absolute": true
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "domain"
        }
      }
    },
    "com.amazonaws.controlcatalog#DomainResourceFilter": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#DomainArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the domain.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The domain resource that's being used as a filter.</p>"
      }
    },
    "com.amazonaws.controlcatalog#DomainResourceFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#DomainResourceFilter"
      }
    },
    "com.amazonaws.controlcatalog#DomainSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#DomainArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the domain.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the domain.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the domain.</p>",
            "smithy.api#required": {}
          }
        },
        "CreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the domain was created.</p>",
            "smithy.api#required": {}
          }
        },
        "LastUpdateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the domain was most recently updated.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of metadata for a domain.</p>"
      }
    },
    "com.amazonaws.controlcatalog#DomainSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#DomainSummary"
      }
    },
    "com.amazonaws.controlcatalog#GetControl": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.controlcatalog#GetControlRequest"
      },
      "output": {
        "target": "com.amazonaws.controlcatalog#GetControlResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.controlcatalog#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.controlcatalog#InternalServerException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ThrottlingException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns details about a specific control, most notably a list of Amazon Web Services Regions where this control is supported. Input a value for the <i>ControlArn</i> parameter, in ARN form. <code>GetControl</code> accepts <i>controltower</i> or <i>controlcatalog</i> control ARNs as input. Returns a <i>controlcatalog</i> ARN format.</p>\n         <p>In the API response, controls that have the value <code>GLOBAL</code> in the <code>Scope</code> field do not show the <code>DeployableRegions</code> field, because it does not apply. Controls that have the value <code>REGIONAL</code> in the <code>Scope</code> field return a value for the <code>DeployableRegions</code> field, as shown in the example.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/get-control"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.controlcatalog#GetControlRequest": {
      "type": "structure",
      "members": {
        "ControlArn": {
          "target": "com.amazonaws.controlcatalog#ControlArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the control. It has one of the following formats:</p>\n         <p>\n            <i>Global format</i>\n         </p>\n         <p>\n            <code>arn:{PARTITION}:controlcatalog:::control/{CONTROL_CATALOG_OPAQUE_ID}</code>\n         </p>\n         <p>\n            <i>Or Regional format</i>\n         </p>\n         <p>\n            <code>arn:{PARTITION}:controltower:{REGION}::control/{CONTROL_TOWER_OPAQUE_ID}</code>\n         </p>\n         <p>Here is a more general pattern that covers Amazon Web Services Control Tower and Control Catalog ARNs:</p>\n         <p>\n            <code>^arn:(aws(?:[-a-z]*)?):(controlcatalog|controltower):[a-zA-Z0-9-]*::control/[0-9a-zA-Z_\\\\-]+$</code>\n         </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.controlcatalog#GetControlResponse": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#ControlArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the control.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The display name of the control.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A description of what the control does.</p>",
            "smithy.api#required": {}
          }
        },
        "Behavior": {
          "target": "com.amazonaws.controlcatalog#ControlBehavior",
          "traits": {
            "smithy.api#documentation": "<p>A term that identifies the control's functional behavior. One of <code>Preventive</code>, <code>Detective</code>, <code>Proactive</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "RegionConfiguration": {
          "target": "com.amazonaws.controlcatalog#RegionConfiguration",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "Implementation": {
          "target": "com.amazonaws.controlcatalog#ImplementationDetails",
          "traits": {
            "smithy.api#documentation": "<p>Returns information about the control, as an <code>ImplementationDetails</code> object that shows the underlying implementation type for a control.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.controlcatalog#ControlParameters",
          "traits": {
            "smithy.api#documentation": "<p>Returns an array of <code>ControlParameter</code> objects that specify the parameters a control supports. An empty list is returned for controls that donâ€™t support parameters.\n    </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.controlcatalog#ImplementationDetails": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.controlcatalog#ImplementationType",
          "traits": {
            "smithy.api#documentation": "<p>A string that describes a control's implementation type.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that describes the implementation type for a control.</p>\n         <p>Our <code>ImplementationDetails</code>\n            <code>Type</code> format has three required segments:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME</code>\n               </p>\n            </li>\n         </ul>\n         <p>For example, <code>AWS::Config::ConfigRule</code>\n            <b>or</b>\n            <code>AWS::SecurityHub::SecurityControl</code> resources have the format with three required segments.</p>\n         <p>Our <code>ImplementationDetails</code>\n            <code>Type</code> format has an optional fourth segment, which is present for applicable \n      implementation types. The format is as follows: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME::RESOURCE-TYPE-DESCRIPTION</code>\n               </p>\n            </li>\n         </ul>\n         <p>For example, <code>AWS::Organizations::Policy::SERVICE_CONTROL_POLICY</code>\n            <b>or</b>\n            <code>AWS::CloudFormation::Type::HOOK</code> have the format with four segments.</p>\n         <p>Although the format is similar, the values for the <code>Type</code> field do not match any Amazon Web Services CloudFormation values.</p>"
      }
    },
    "com.amazonaws.controlcatalog#ImplementationType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 7,
          "max": 2048
        },
        "smithy.api#pattern": "^[A-Za-z0-9]+(::[A-Za-z0-9_]+){2,3}$"
      }
    },
    "com.amazonaws.controlcatalog#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An internal service error occurred during the processing of your request. Try again later.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.controlcatalog#ListCommonControls": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.controlcatalog#ListCommonControlsRequest"
      },
      "output": {
        "target": "com.amazonaws.controlcatalog#ListCommonControlsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.controlcatalog#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.controlcatalog#InternalServerException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ThrottlingException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a paginated list of common controls from the Amazon Web Services Control\n      Catalog.</p>\n         <p>You can apply an optional filter to see common controls that have a specific objective. If\n      you donâ€™t provide a filter, the operation returns all common controls. </p>",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/common-controls"
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "CommonControls"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.controlcatalog#ListCommonControlsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.controlcatalog#MaxListCommonControlsResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results on a page or for an API request call.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "CommonControlFilter": {
          "target": "com.amazonaws.controlcatalog#CommonControlFilter",
          "traits": {
            "smithy.api#documentation": "<p>An optional filter that narrows the results to a specific objective.</p>\n         <p>This filter allows you to specify one objective ARN at a time. Passing multiple ARNs in\n      the <code>CommonControlFilter</code> isnâ€™t currently supported.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.controlcatalog#ListCommonControlsResponse": {
      "type": "structure",
      "members": {
        "CommonControls": {
          "target": "com.amazonaws.controlcatalog#CommonControlSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The list of common controls that the <code>ListCommonControls</code> API returns.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.controlcatalog#ListControls": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.controlcatalog#ListControlsRequest"
      },
      "output": {
        "target": "com.amazonaws.controlcatalog#ListControlsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.controlcatalog#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.controlcatalog#InternalServerException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ThrottlingException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a paginated list of all available controls in the Amazon Web Services Control Catalog library. Allows you to discover available controls. The list of controls is given as structures of type <i>controlSummary</i>. The ARN is returned in the global <i>controlcatalog</i> format, as shown in the examples.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/list-controls"
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Controls"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.controlcatalog#ListControlsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.controlcatalog#MaxListControlsResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results on a page or for an API request call.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.controlcatalog#ListControlsResponse": {
      "type": "structure",
      "members": {
        "Controls": {
          "target": "com.amazonaws.controlcatalog#Controls",
          "traits": {
            "smithy.api#documentation": "<p>Returns a list of controls, given as structures of type <i>controlSummary</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.controlcatalog#ListDomains": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.controlcatalog#ListDomainsRequest"
      },
      "output": {
        "target": "com.amazonaws.controlcatalog#ListDomainsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.controlcatalog#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.controlcatalog#InternalServerException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ThrottlingException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a paginated list of domains from the Amazon Web Services Control Catalog.</p>",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/domains"
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Domains"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.controlcatalog#ListDomainsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.controlcatalog#MaxListDomainsResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results on a page or for an API request call.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.controlcatalog#ListDomainsResponse": {
      "type": "structure",
      "members": {
        "Domains": {
          "target": "com.amazonaws.controlcatalog#DomainSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The list of domains that the <code>ListDomains</code> API returns.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.controlcatalog#ListObjectives": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.controlcatalog#ListObjectivesRequest"
      },
      "output": {
        "target": "com.amazonaws.controlcatalog#ListObjectivesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.controlcatalog#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.controlcatalog#InternalServerException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ThrottlingException"
        },
        {
          "target": "com.amazonaws.controlcatalog#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a paginated list of objectives from the Amazon Web Services Control Catalog.</p>\n         <p>You can apply an optional filter to see the objectives that belong to a specific domain.\n      If you donâ€™t provide a filter, the operation returns all objectives. </p>",
        "smithy.api#http": {
          "code": 200,
          "method": "POST",
          "uri": "/objectives"
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults",
          "items": "Objectives"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.controlcatalog#ListObjectivesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.controlcatalog#MaxListObjectivesResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results on a page or for an API request call.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "ObjectiveFilter": {
          "target": "com.amazonaws.controlcatalog#ObjectiveFilter",
          "traits": {
            "smithy.api#documentation": "<p>An optional filter that narrows the results to a specific domain.</p>\n         <p>This filter allows you to specify one domain ARN at a time. \n      Passing multiple ARNs in the <code>ObjectiveFilter</code> isnâ€™t currently supported.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.controlcatalog#ListObjectivesResponse": {
      "type": "structure",
      "members": {
        "Objectives": {
          "target": "com.amazonaws.controlcatalog#ObjectiveSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>The list of objectives that the <code>ListObjectives</code> API returns.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.controlcatalog#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>The pagination token that's used to fetch the next set of results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.controlcatalog#MaxListCommonControlsResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.controlcatalog#MaxListControlsResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.controlcatalog#MaxListDomainsResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.controlcatalog#MaxListObjectivesResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws(?:[-a-z]*)?):controlcatalog:::objective/[0-9a-z]+$"
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveFilter": {
      "type": "structure",
      "members": {
        "Domains": {
          "target": "com.amazonaws.controlcatalog#DomainResourceFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The domain that's used as filter criteria.</p>\n         <p>You can use this parameter to specify one domain ARN at a time. Passing multiple ARNs in\n      the <code>ObjectiveFilter</code> isnâ€™t currently supported.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An optional filter that narrows the list of objectives to a specific domain.</p>"
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveResource": {
      "type": "resource",
      "identifiers": {
        "ObjectiveArn": {
          "target": "com.amazonaws.controlcatalog#ObjectiveArn"
        }
      },
      "list": {
        "target": "com.amazonaws.controlcatalog#ListObjectives"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{ObjectiveArn}",
          "noAccount": true,
          "absolute": true
        },
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "objective"
        }
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveResourceFilter": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#ObjectiveArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the objective.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The objective resource that's being used as a filter.</p>"
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveResourceFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#ObjectiveResourceFilter"
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveSummary": {
      "type": "structure",
      "members": {
        "Arn": {
          "target": "com.amazonaws.controlcatalog#ObjectiveArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the objective.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the objective.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The description of the objective.</p>",
            "smithy.api#required": {}
          }
        },
        "Domain": {
          "target": "com.amazonaws.controlcatalog#AssociatedDomainSummary",
          "traits": {
            "smithy.api#documentation": "<p>The domain that the objective belongs to.</p>",
            "smithy.api#required": {}
          }
        },
        "CreateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the objective was created.</p>",
            "smithy.api#required": {}
          }
        },
        "LastUpdateTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the objective was most recently updated.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of metadata for an objective.</p>"
      }
    },
    "com.amazonaws.controlcatalog#ObjectiveSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.controlcatalog#ObjectiveSummary"
      }
    },
    "com.amazonaws.controlcatalog#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "max": 1024
        }
      }
    },
    "com.amazonaws.controlcatalog#RegionCode": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-zA-Z0-9-]{1,128}$"
      }
    },
    "com.amazonaws.controlcatalog#RegionConfiguration": {
      "type": "structure",
      "members": {
        "Scope": {
          "target": "com.amazonaws.controlcatalog#ControlScope",
          "traits": {
            "smithy.api#documentation": "<p>The coverage of the control, if deployed. Scope is an enumerated type, with value <code>Regional</code>, or <code>Global</code>. A control with Global scope is effective in all Amazon Web Services Regions, regardless of the Region from which it is enabled, or to which it is deployed. A control implemented by an SCP is usually Global in scope. A control with Regional scope has operations that are restricted specifically to the Region from which it is enabled and to which it is deployed. Controls implemented by Config rules and CloudFormation hooks usually are Regional in scope.  Security Hub controls usually are Regional in scope.</p>",
            "smithy.api#required": {}
          }
        },
        "DeployableRegions": {
          "target": "com.amazonaws.controlcatalog#DeployableRegions",
          "traits": {
            "smithy.api#documentation": "<p>Regions in which the control is available to be deployed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Returns information about the control, including the scope of the control, if enabled, and the Regions in which the control currently is available for deployment. For more information about scope, see <a href=\"https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html\">Global services</a>.</p>\n         <p>If you are applying controls through an Amazon Web Services Control Tower landing zone environment, remember that the values returned in the <code>RegionConfiguration</code> API operation are not related to the governed Regions in your landing zone. For example, if you are governing Regions <code>A</code>,<code>B</code>,and <code>C</code> while the control is available in Regions <code>A</code>, <code>B</code>, C<code>,</code> and <code>D</code>, you'd see a response with <code>DeployableRegions</code> of <code>A</code>, <code>B</code>, <code>C</code>, and <code>D</code> for a control with <code>REGIONAL</code> scope, even though you may not intend to deploy the control in Region <code>D</code>, because you do not govern it through your landing zone.</p>"
      }
    },
    "com.amazonaws.controlcatalog#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested resource does not exist.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.controlcatalog#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was denied due to request throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.controlcatalog#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request has invalid or missing parameters.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    }
  }
}
