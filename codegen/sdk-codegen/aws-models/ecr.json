{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.ecr#AmazonEC2ContainerRegistry_V20150921": {
      "type": "service",
      "version": "2015-09-21",
      "operations": [
        {
          "target": "com.amazonaws.ecr#BatchCheckLayerAvailability"
        },
        {
          "target": "com.amazonaws.ecr#BatchDeleteImage"
        },
        {
          "target": "com.amazonaws.ecr#BatchGetImage"
        },
        {
          "target": "com.amazonaws.ecr#BatchGetRepositoryScanningConfiguration"
        },
        {
          "target": "com.amazonaws.ecr#CompleteLayerUpload"
        },
        {
          "target": "com.amazonaws.ecr#CreatePullThroughCacheRule"
        },
        {
          "target": "com.amazonaws.ecr#CreateRepository"
        },
        {
          "target": "com.amazonaws.ecr#DeleteLifecyclePolicy"
        },
        {
          "target": "com.amazonaws.ecr#DeletePullThroughCacheRule"
        },
        {
          "target": "com.amazonaws.ecr#DeleteRegistryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#DeleteRepository"
        },
        {
          "target": "com.amazonaws.ecr#DeleteRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#DescribeImageReplicationStatus"
        },
        {
          "target": "com.amazonaws.ecr#DescribeImages"
        },
        {
          "target": "com.amazonaws.ecr#DescribeImageScanFindings"
        },
        {
          "target": "com.amazonaws.ecr#DescribePullThroughCacheRules"
        },
        {
          "target": "com.amazonaws.ecr#DescribeRegistry"
        },
        {
          "target": "com.amazonaws.ecr#DescribeRepositories"
        },
        {
          "target": "com.amazonaws.ecr#GetAuthorizationToken"
        },
        {
          "target": "com.amazonaws.ecr#GetDownloadUrlForLayer"
        },
        {
          "target": "com.amazonaws.ecr#GetLifecyclePolicy"
        },
        {
          "target": "com.amazonaws.ecr#GetLifecyclePolicyPreview"
        },
        {
          "target": "com.amazonaws.ecr#GetRegistryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#GetRegistryScanningConfiguration"
        },
        {
          "target": "com.amazonaws.ecr#GetRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#InitiateLayerUpload"
        },
        {
          "target": "com.amazonaws.ecr#ListImages"
        },
        {
          "target": "com.amazonaws.ecr#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.ecr#PutImage"
        },
        {
          "target": "com.amazonaws.ecr#PutImageScanningConfiguration"
        },
        {
          "target": "com.amazonaws.ecr#PutImageTagMutability"
        },
        {
          "target": "com.amazonaws.ecr#PutLifecyclePolicy"
        },
        {
          "target": "com.amazonaws.ecr#PutRegistryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#PutRegistryScanningConfiguration"
        },
        {
          "target": "com.amazonaws.ecr#PutReplicationConfiguration"
        },
        {
          "target": "com.amazonaws.ecr#SetRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecr#StartImageScan"
        },
        {
          "target": "com.amazonaws.ecr#StartLifecyclePolicyPreview"
        },
        {
          "target": "com.amazonaws.ecr#TagResource"
        },
        {
          "target": "com.amazonaws.ecr#UntagResource"
        },
        {
          "target": "com.amazonaws.ecr#UploadLayerPart"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "ECR",
          "arnNamespace": "ecr",
          "cloudFormationName": "ECR",
          "cloudTrailEventSource": "ecr.amazonaws.com",
          "endpointPrefix": "api.ecr"
        },
        "aws.auth#sigv4": {
          "name": "ecr"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<fullname>Amazon Elastic Container Registry</fullname>\n        <p>Amazon Elastic Container Registry (Amazon ECR) is a managed container image registry service. Customers can use the\n            familiar Docker CLI, or their preferred client, to push, pull, and manage images. Amazon ECR\n            provides a secure, scalable, and reliable registry for your Docker or Open Container\n            Initiative (OCI) images. Amazon ECR supports private repositories with resource-based\n            permissions using IAM so that specific users or Amazon EC2 instances can access\n            repositories and images.</p>\n        <p>Amazon ECR has service endpoints in each supported Region. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/ecr.html\">Amazon ECR endpoints</a> in the\n                <i>Amazon Web Services General Reference</i>.</p>",
        "smithy.api#title": "Amazon EC2 Container Registry",
        "smithy.api#xmlNamespace": {
          "uri": "http://ecr.amazonaws.com/doc/2015-09-21/"
        },
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    },
                    {
                      "fn": "parseURL",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ],
                      "assign": "url"
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://api.ecr-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-east-2"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-east-2.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-east-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-east-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-west-2"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-west-2.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-west-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-west-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-gov-east-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-gov-east-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "dkr-us-gov-west-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.us-gov-west-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws-us-gov",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://ecr-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://api.ecr-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://api.ecr.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://api.ecr.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region ap-south-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-south-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-south-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-south-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-south-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-south-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-south-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-south-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-south-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-south-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-south-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-south-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-south-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-south-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-south-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-south-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-south-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-south-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-south-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-south-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region me-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.me-central-1.api.aws"
                }
              },
              "params": {
                "Region": "me-central-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region me-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.me-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-central-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region me-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.me-central-1.api.aws"
                }
              },
              "params": {
                "Region": "me-central-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region me-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.me-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-central-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ca-central-1.api.aws"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ca-central-1.api.aws"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-central-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-central-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-iso-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-iso-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-iso-west-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-iso-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-iso-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-iso-west-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-central-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-central-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-central-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-central-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-central-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-central-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-central-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-west-2.api.aws"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region af-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.af-south-1.api.aws"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region af-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.af-south-1.api.aws"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-north-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-north-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-west-3.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-3.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-2.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.eu-west-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-1.api.aws"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-northeast-3.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-northeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-3.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-northeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.me-south-1.api.aws"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.me-south-1.api.aws"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.sa-east-1.api.aws"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.sa-east-1.api.aws"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-east-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-east-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-gov-west-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-1.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-3 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-southeast-3.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-3",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-3 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-southeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-3",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-3 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-3.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-3",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-3",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-4 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.ap-southeast-4.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-4",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-4 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.ap-southeast-4.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-4",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-4 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-4.api.aws"
                }
              },
              "params": {
                "Region": "ap-southeast-4",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-4 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.ap-southeast-4.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-4",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-east-2.api.aws"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://ecr-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-east-2.api.aws"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.cn-northwest-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseDualStack": true,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseDualStack": false,
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseDualStack": true,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseDualStack": false,
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": false,
                "UseFIPS": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseDualStack": true,
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.ecr#Arch": {
      "type": "string"
    },
    "com.amazonaws.ecr#Arn": {
      "type": "string"
    },
    "com.amazonaws.ecr#Attribute": {
      "type": "structure",
      "members": {
        "key": {
          "target": "com.amazonaws.ecr#AttributeKey",
          "traits": {
            "smithy.api#documentation": "<p>The attribute key.</p>",
            "smithy.api#required": {}
          }
        },
        "value": {
          "target": "com.amazonaws.ecr#AttributeValue",
          "traits": {
            "smithy.api#documentation": "<p>The value assigned to the attribute key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This data type is used in the <a>ImageScanFinding</a> data type.</p>"
      }
    },
    "com.amazonaws.ecr#AttributeKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.ecr#AttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Attribute"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecr#AttributeValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.ecr#Author": {
      "type": "string"
    },
    "com.amazonaws.ecr#AuthorizationData": {
      "type": "structure",
      "members": {
        "authorizationToken": {
          "target": "com.amazonaws.ecr#Base64",
          "traits": {
            "smithy.api#documentation": "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR\n            registry. When the string is decoded, it is presented in the format\n                <code>user:password</code> for private registry authentication using <code>docker\n                login</code>.</p>"
          }
        },
        "expiresAt": {
          "target": "com.amazonaws.ecr#ExpirationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The Unix time in seconds and milliseconds when the authorization token expires.\n            Authorization tokens are valid for 12 hours.</p>"
          }
        },
        "proxyEndpoint": {
          "target": "com.amazonaws.ecr#ProxyEndpoint",
          "traits": {
            "smithy.api#documentation": "<p>The registry URL to use for this authorization token in a <code>docker login</code>\n            command. The Amazon ECR registry URL format is\n        <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example,\n        <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing authorization data for an Amazon ECR registry.</p>"
      }
    },
    "com.amazonaws.ecr#AuthorizationDataList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#AuthorizationData"
      }
    },
    "com.amazonaws.ecr#AwsEcrContainerImageDetails": {
      "type": "structure",
      "members": {
        "architecture": {
          "target": "com.amazonaws.ecr#Arch",
          "traits": {
            "smithy.api#documentation": "<p>The architecture of the Amazon ECR container image.</p>"
          }
        },
        "author": {
          "target": "com.amazonaws.ecr#Author",
          "traits": {
            "smithy.api#documentation": "<p>The image author of the Amazon ECR container image.</p>"
          }
        },
        "imageHash": {
          "target": "com.amazonaws.ecr#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The image hash of the Amazon ECR container image.</p>"
          }
        },
        "imageTags": {
          "target": "com.amazonaws.ecr#ImageTagsList",
          "traits": {
            "smithy.api#documentation": "<p>The image tags attached to the Amazon ECR container image.</p>"
          }
        },
        "platform": {
          "target": "com.amazonaws.ecr#Platform",
          "traits": {
            "smithy.api#documentation": "<p>The platform of the Amazon ECR container image.</p>"
          }
        },
        "pushedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the Amazon ECR container image was pushed.</p>"
          }
        },
        "registry": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry the Amazon ECR container image belongs to.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository the Amazon ECR container image resides in.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image details of the Amazon ECR container image.</p>"
      }
    },
    "com.amazonaws.ecr#Base64": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^\\S+$"
      }
    },
    "com.amazonaws.ecr#BaseScore": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.ecr#BatchCheckLayerAvailability": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#BatchCheckLayerAvailabilityRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#BatchCheckLayerAvailabilityResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Checks the availability of one or more image layers in a repository.</p>\n        <p>When an image is pushed to a repository, each image layer is checked to verify if it\n            has been uploaded before. If it has been uploaded, then the image layer is\n            skipped.</p>\n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#BatchCheckLayerAvailabilityRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the image layers to\n            check. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that is associated with the image layers to check.</p>",
            "smithy.api#required": {}
          }
        },
        "layerDigests": {
          "target": "com.amazonaws.ecr#BatchedOperationLayerDigestList",
          "traits": {
            "smithy.api#documentation": "<p>The digests of the image layers to check.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchCheckLayerAvailabilityResponse": {
      "type": "structure",
      "members": {
        "layers": {
          "target": "com.amazonaws.ecr#LayerList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image layer objects corresponding to the image layer references in the\n            request.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecr#LayerFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchDeleteImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#BatchDeleteImageRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#BatchDeleteImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a list of specified images within a repository. Images are specified with\n            either an <code>imageTag</code> or <code>imageDigest</code>.</p>\n        <p>You can remove a tag from an image by specifying the image's tag in your request. When\n            you remove the last tag from an image, the image is deleted from your repository.</p>\n        <p>You can completely delete an image (and all of its tags) by specifying the image's\n            digest in your request.</p>"
      }
    },
    "com.amazonaws.ecr#BatchDeleteImageRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the image to delete.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository that contains the image to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image ID references that correspond to images to delete. The format of the\n                <code>imageIds</code> reference is <code>imageTag=tag</code> or\n                <code>imageDigest=digest</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Deletes specified images within a specified repository. Images are specified with\n            either the <code>imageTag</code> or <code>imageDigest</code>.</p>"
      }
    },
    "com.amazonaws.ecr#BatchDeleteImageResponse": {
      "type": "structure",
      "members": {
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The image IDs of the deleted images.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecr#ImageFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchGetImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#BatchGetImageRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#BatchGetImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets detailed information for an image. Images are specified with either an\n                <code>imageTag</code> or <code>imageDigest</code>.</p>\n        <p>When an image is pulled, the BatchGetImage API is called once to retrieve the image\n            manifest.</p>"
      }
    },
    "com.amazonaws.ecr#BatchGetImageRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the images to\n            describe. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository that contains the images to describe.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image ID references that correspond to images to describe. The format of the\n                <code>imageIds</code> reference is <code>imageTag=tag</code> or\n                <code>imageDigest=digest</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "acceptedMediaTypes": {
          "target": "com.amazonaws.ecr#MediaTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The accepted media types for the request.</p>\n        <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> |\n                <code>application/vnd.docker.distribution.manifest.v2+json</code> |\n                <code>application/vnd.oci.image.manifest.v1+json</code>\n         </p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchGetImageResponse": {
      "type": "structure",
      "members": {
        "images": {
          "target": "com.amazonaws.ecr#ImageList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image objects corresponding to the image references in the request.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecr#ImageFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchGetRepositoryScanningConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#BatchGetRepositoryScanningConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#BatchGetRepositoryScanningConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the scanning configuration for one or more repositories.</p>"
      }
    },
    "com.amazonaws.ecr#BatchGetRepositoryScanningConfigurationRequest": {
      "type": "structure",
      "members": {
        "repositoryNames": {
          "target": "com.amazonaws.ecr#ScanningConfigurationRepositoryNameList",
          "traits": {
            "smithy.api#documentation": "<p>One or more repository names to get the scanning configuration for.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchGetRepositoryScanningConfigurationResponse": {
      "type": "structure",
      "members": {
        "scanningConfigurations": {
          "target": "com.amazonaws.ecr#RepositoryScanningConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>The scanning configuration for the requested repositories.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecr#RepositoryScanningConfigurationFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#BatchedOperationLayerDigest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1000
        }
      }
    },
    "com.amazonaws.ecr#BatchedOperationLayerDigestList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#BatchedOperationLayerDigest"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#CompleteLayerUpload": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#CompleteLayerUploadRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#CompleteLayerUploadResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#EmptyUploadException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidLayerException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#LayerAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecr#LayerPartTooSmallException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#UploadNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Informs Amazon ECR that the image layer upload has completed for a specified registry,\n            repository name, and upload ID. You can optionally provide a <code>sha256</code> digest\n            of the image layer for data validation purposes.</p>\n        <p>When an image is pushed, the CompleteLayerUpload API is called once per each new image\n            layer to verify that the upload has completed.</p>\n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#CompleteLayerUploadRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to which to upload layers.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to associate with the image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to\n            associate with the image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "layerDigests": {
          "target": "com.amazonaws.ecr#LayerDigestList",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#CompleteLayerUploadResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID associated with the layer.</p>"
          }
        },
        "layerDigest": {
          "target": "com.amazonaws.ecr#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#CreatePullThroughCacheRule": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#CreatePullThroughCacheRuleRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#CreatePullThroughCacheRuleResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#UnsupportedUpstreamRegistryException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a pull through cache rule. A pull through cache rule provides a way to cache\n            images from an external public registry in your Amazon ECR private registry.</p>"
      }
    },
    "com.amazonaws.ecr#CreatePullThroughCacheRuleRequest": {
      "type": "structure",
      "members": {
        "ecrRepositoryPrefix": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The repository name prefix to use when caching images from the source registry.</p>",
            "smithy.api#required": {}
          }
        },
        "upstreamRegistryUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The registry URL of the upstream public registry to use as the source for the pull\n            through cache rule.</p>",
            "smithy.api#required": {}
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to create the pull through cache\n            rule for. If you do not specify a registry, the default registry is assumed.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#CreatePullThroughCacheRuleResponse": {
      "type": "structure",
      "members": {
        "ecrRepositoryPrefix": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon ECR repository prefix associated with the pull through cache rule.</p>"
          }
        },
        "upstreamRegistryUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The upstream registry URL associated with the pull through cache rule.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecr#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, in JavaScript date format, when the pull through cache rule was\n            created.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#CreateRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#CreateRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#CreateRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a repository. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html\">Amazon ECR repositories</a> in the\n                <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#CreateRepositoryRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to create the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name to use for the repository. The repository name may be specified on its own\n            (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group\n            the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ecr#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The metadata that you apply to the repository to help you categorize and organize\n            them. Each tag consists of a key and an optional value, both of which you define.\n            Tag keys can have a maximum character length of 128 characters, and tag values can have\n            a maximum length of 256 characters.</p>"
          }
        },
        "imageTagMutability": {
          "target": "com.amazonaws.ecr#ImageTagMutability",
          "traits": {
            "smithy.api#documentation": "<p>The tag mutability setting for the repository. If this parameter is omitted, the\n            default setting of <code>MUTABLE</code> will be used which will allow image tags to be\n            overwritten. If <code>IMMUTABLE</code> is specified, all image tags within the\n            repository will be immutable which will prevent them from being overwritten.</p>"
          }
        },
        "imageScanningConfiguration": {
          "target": "com.amazonaws.ecr#ImageScanningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The image scanning configuration for the repository. This determines whether images\n            are scanned for known vulnerabilities after being pushed to the repository.</p>"
          }
        },
        "encryptionConfiguration": {
          "target": "com.amazonaws.ecr#EncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The encryption configuration for the repository. This determines how the contents of\n            your repository are encrypted at rest.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#CreateRepositoryResponse": {
      "type": "structure",
      "members": {
        "repository": {
          "target": "com.amazonaws.ecr#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The repository that was created.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#CreationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#CvssScore": {
      "type": "structure",
      "members": {
        "baseScore": {
          "target": "com.amazonaws.ecr#BaseScore",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The base CVSS score used for the finding.</p>"
          }
        },
        "scoringVector": {
          "target": "com.amazonaws.ecr#ScoringVector",
          "traits": {
            "smithy.api#documentation": "<p>The vector string of the CVSS score.</p>"
          }
        },
        "source": {
          "target": "com.amazonaws.ecr#Source",
          "traits": {
            "smithy.api#documentation": "<p>The source of the CVSS score.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.ecr#Version",
          "traits": {
            "smithy.api#documentation": "<p>The version of CVSS used for the score.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The CVSS score for a finding.</p>"
      }
    },
    "com.amazonaws.ecr#CvssScoreAdjustment": {
      "type": "structure",
      "members": {
        "metric": {
          "target": "com.amazonaws.ecr#Metric",
          "traits": {
            "smithy.api#documentation": "<p>The metric used to adjust the CVSS score.</p>"
          }
        },
        "reason": {
          "target": "com.amazonaws.ecr#Reason",
          "traits": {
            "smithy.api#documentation": "<p>The reason the CVSS score has been adjustment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details on adjustments Amazon Inspector made to the CVSS score for a finding.</p>"
      }
    },
    "com.amazonaws.ecr#CvssScoreAdjustmentList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#CvssScoreAdjustment"
      }
    },
    "com.amazonaws.ecr#CvssScoreDetails": {
      "type": "structure",
      "members": {
        "adjustments": {
          "target": "com.amazonaws.ecr#CvssScoreAdjustmentList",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details about adjustment Amazon Inspector made to the CVSS score.</p>"
          }
        },
        "score": {
          "target": "com.amazonaws.ecr#Score",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The CVSS score.</p>"
          }
        },
        "scoreSource": {
          "target": "com.amazonaws.ecr#Source",
          "traits": {
            "smithy.api#documentation": "<p>The source for the CVSS score.</p>"
          }
        },
        "scoringVector": {
          "target": "com.amazonaws.ecr#ScoringVector",
          "traits": {
            "smithy.api#documentation": "<p>The vector for the CVSS score.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.ecr#Version",
          "traits": {
            "smithy.api#documentation": "<p>The CVSS version used in scoring.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the CVSS score.</p>"
      }
    },
    "com.amazonaws.ecr#CvssScoreList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#CvssScore"
      }
    },
    "com.amazonaws.ecr#Date": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#DeleteLifecyclePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DeleteLifecyclePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DeleteLifecyclePolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LifecyclePolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the lifecycle policy associated with the specified repository.</p>"
      }
    },
    "com.amazonaws.ecr#DeleteLifecyclePolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteLifecyclePolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON lifecycle policy text.</p>"
          }
        },
        "lastEvaluatedAt": {
          "target": "com.amazonaws.ecr#EvaluationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time stamp of the last time that the lifecycle policy was run.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeletePullThroughCacheRule": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DeletePullThroughCacheRuleRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DeletePullThroughCacheRuleResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a pull through cache rule.</p>"
      }
    },
    "com.amazonaws.ecr#DeletePullThroughCacheRuleRequest": {
      "type": "structure",
      "members": {
        "ecrRepositoryPrefix": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon ECR repository prefix associated with the pull through cache rule to\n            delete.</p>",
            "smithy.api#required": {}
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the pull through cache\n            rule. If you do not specify a registry, the default registry is assumed.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeletePullThroughCacheRuleResponse": {
      "type": "structure",
      "members": {
        "ecrRepositoryPrefix": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon ECR repository prefix associated with the request.</p>"
          }
        },
        "upstreamRegistryUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The upstream registry URL associated with the pull through cache rule.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecr#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp associated with the pull through cache rule.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteRegistryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DeleteRegistryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DeleteRegistryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RegistryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the registry permissions policy.</p>"
      }
    },
    "com.amazonaws.ecr#DeleteRegistryPolicyRequest": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#DeleteRegistryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RegistryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The contents of the registry permissions policy that was deleted.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DeleteRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DeleteRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotEmptyException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a repository. If the repository contains images, you must either delete all\n            images in the repository or use the <code>force</code> option to delete the\n            repository.</p>"
      }
    },
    "com.amazonaws.ecr#DeleteRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DeleteRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DeleteRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the repository policy associated with the specified repository.</p>"
      }
    },
    "com.amazonaws.ecr#DeleteRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository policy\n            to delete. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that is associated with the repository policy to\n            delete.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy that was deleted from the repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteRepositoryRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository to\n            delete. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "com.amazonaws.ecr#ForceFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p> If a repository contains images, forces the deletion.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DeleteRepositoryResponse": {
      "type": "structure",
      "members": {
        "repository": {
          "target": "com.amazonaws.ecr#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The repository that was deleted.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImageReplicationStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribeImageReplicationStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribeImageReplicationStatusResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#ImageNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the replication status for a specified image.</p>"
      }
    },
    "com.amazonaws.ecr#DescribeImageReplicationStatusRequest": {
      "type": "structure",
      "members": {
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that the image is in.</p>",
            "smithy.api#required": {}
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry. If you do not specify a registry, the default registry is assumed.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImageReplicationStatusResponse": {
      "type": "structure",
      "members": {
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier"
        },
        "replicationStatuses": {
          "target": "com.amazonaws.ecr#ImageReplicationStatusList",
          "traits": {
            "smithy.api#documentation": "<p>The replication status details for the images in the specified repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImageScanFindings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribeImageScanFindingsRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribeImageScanFindingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#ImageNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ScanNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the scan findings for the specified image.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        },
        "smithy.waiters#waitable": {
          "ImageScanComplete": {
            "documentation": "Wait until an image scan is complete and findings can be accessed",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "imageScanStatus.status",
                    "expected": "COMPLETE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "imageScanStatus.status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ],
            "minDelay": 5
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImageScanFindingsRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to describe the image scan findings for. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository for the image for which to describe the scan findings.</p>",
            "smithy.api#required": {}
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated\n                <code>DescribeImageScanFindings</code> request where <code>maxResults</code> was\n            used and the results exceeded the value of that parameter. Pagination continues from the\n            end of the previous results that returned the <code>nextToken</code> value. This value\n            is null when there are no more results to return.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of image scan results returned by\n                <code>DescribeImageScanFindings</code> in paginated output. When this parameter is\n            used, <code>DescribeImageScanFindings</code> only returns <code>maxResults</code>\n            results in a single page along with a <code>nextToken</code> response element. The\n            remaining results of the initial request can be seen by sending another\n                <code>DescribeImageScanFindings</code> request with the returned\n                <code>nextToken</code> value. This value can be between 1 and 1000. If this\n            parameter is not used, then <code>DescribeImageScanFindings</code> returns up to 100\n            results and a <code>nextToken</code> value, if applicable.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImageScanFindingsResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier"
        },
        "imageScanStatus": {
          "target": "com.amazonaws.ecr#ImageScanStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the scan.</p>"
          }
        },
        "imageScanFindings": {
          "target": "com.amazonaws.ecr#ImageScanFindings",
          "traits": {
            "smithy.api#documentation": "<p>The information contained in the image scan findings.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n                <code>DescribeImageScanFindings</code> request. When the results of a\n                <code>DescribeImageScanFindings</code> request exceed <code>maxResults</code>, this\n            value can be used to retrieve the next page of results. This value is null when there\n            are no more results to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribeImagesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribeImagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#ImageNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns metadata about the images in a repository.</p>\n        <note>\n            <p>Beginning with Docker version 1.9, the Docker client compresses image layers\n                before pushing them to a V2 Docker registry. The output of the <code>docker\n                    images</code> command shows the uncompressed image size, so it may return a\n                larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n        </note>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "imageDetails",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecr#DescribeImagesFilter": {
      "type": "structure",
      "members": {
        "tagStatus": {
          "target": "com.amazonaws.ecr#TagStatus",
          "traits": {
            "smithy.api#documentation": "<p>The tag status with which to filter your <a>DescribeImages</a> results. You\n            can filter results based on whether they are <code>TAGGED</code> or\n                <code>UNTAGGED</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing a filter on a <a>DescribeImages</a>\n            operation.</p>"
      }
    },
    "com.amazonaws.ecr#DescribeImagesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to describe images. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository that contains the images to describe.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The list of image IDs for the requested repository.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated\n                <code>DescribeImages</code> request where <code>maxResults</code> was used and the\n            results exceeded the value of that parameter. Pagination continues from the end of the\n            previous results that returned the <code>nextToken</code> value. This value is\n                <code>null</code> when there are no more results to return. This option cannot be\n            used when you specify images with <code>imageIds</code>.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results returned by <code>DescribeImages</code> in\n            paginated output. When this parameter is used, <code>DescribeImages</code> only returns\n                <code>maxResults</code> results in a single page along with a <code>nextToken</code>\n            response element. The remaining results of the initial request can be seen by sending\n            another <code>DescribeImages</code> request with the returned <code>nextToken</code>\n            value. This value can be between 1 and 1000. If this\n            parameter is not used, then <code>DescribeImages</code> returns up to\n            100 results and a <code>nextToken</code> value, if applicable. This\n            option cannot be used when you specify images with <code>imageIds</code>.</p>"
          }
        },
        "filter": {
          "target": "com.amazonaws.ecr#DescribeImagesFilter",
          "traits": {
            "smithy.api#documentation": "<p>The filter key and value with which to filter your <code>DescribeImages</code>\n            results.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeImagesResponse": {
      "type": "structure",
      "members": {
        "imageDetails": {
          "target": "com.amazonaws.ecr#ImageDetailList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a>ImageDetail</a> objects that contain data about the\n            image.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code>\n            request. When the results of a <code>DescribeImages</code> request exceed\n                <code>maxResults</code>, this value can be used to retrieve the next page of\n            results. This value is <code>null</code> when there are no more results to\n            return.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribePullThroughCacheRules": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribePullThroughCacheRulesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribePullThroughCacheRulesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the pull through cache rules for a registry.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecr#DescribePullThroughCacheRulesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to return the pull through cache\n            rules for. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "ecrRepositoryPrefixes": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefixList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon ECR repository prefixes associated with the pull through cache rules to return.\n            If no repository prefix value is specified, all pull through cache rules are\n            returned.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated\n                <code>DescribePullThroughCacheRulesRequest</code> request where\n                <code>maxResults</code> was used and the results exceeded the value of that\n            parameter. Pagination continues from the end of the previous results that returned the\n                <code>nextToken</code> value. This value is null when there are no more results to\n            return.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of pull through cache rules returned by\n                <code>DescribePullThroughCacheRulesRequest</code> in paginated output. When this\n            parameter is used, <code>DescribePullThroughCacheRulesRequest</code> only returns\n                <code>maxResults</code> results in a single page along with a <code>nextToken</code>\n            response element. The remaining results of the initial request can be seen by sending\n            another <code>DescribePullThroughCacheRulesRequest</code> request with the returned\n                <code>nextToken</code> value. This value can be between 1 and 1000. If this\n            parameter is not used, then <code>DescribePullThroughCacheRulesRequest</code> returns up\n            to 100 results and a <code>nextToken</code> value, if applicable.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribePullThroughCacheRulesResponse": {
      "type": "structure",
      "members": {
        "pullThroughCacheRules": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleList",
          "traits": {
            "smithy.api#documentation": "<p>The details of the pull through cache rules.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n                <code>DescribePullThroughCacheRulesRequest</code> request. When the results of a\n                <code>DescribePullThroughCacheRulesRequest</code> request exceed\n                <code>maxResults</code>, this value can be used to retrieve the next page of\n            results. This value is null when there are no more results to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeRegistry": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribeRegistryRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribeRegistryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes the settings for a registry. The replication configuration for a repository\n            can be created or updated with the <a>PutReplicationConfiguration</a> API\n            action.</p>"
      }
    },
    "com.amazonaws.ecr#DescribeRegistryRequest": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#DescribeRegistryResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registry.</p>"
          }
        },
        "replicationConfiguration": {
          "target": "com.amazonaws.ecr#ReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The replication configuration for the registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeRepositories": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#DescribeRepositoriesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#DescribeRepositoriesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes image repositories in a registry.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "repositories",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecr#DescribeRepositoriesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repositories to be\n            described. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryNames": {
          "target": "com.amazonaws.ecr#RepositoryNameList",
          "traits": {
            "smithy.api#documentation": "<p>A list of repositories to describe. If this parameter is omitted, then all\n            repositories in a registry are described.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated\n                <code>DescribeRepositories</code> request where <code>maxResults</code> was used and\n            the results exceeded the value of that parameter. Pagination continues from the end of\n            the previous results that returned the <code>nextToken</code> value. This value is\n                <code>null</code> when there are no more results to return. This option cannot be\n            used when you specify repositories with <code>repositoryNames</code>.</p>\n        <note>\n            <p>This token should be treated as an opaque identifier that is only used to\n                retrieve the next items in a list and not for other programmatic purposes.</p>\n        </note>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results returned by <code>DescribeRepositories</code>\n            in paginated output. When this parameter is used, <code>DescribeRepositories</code> only\n            returns <code>maxResults</code> results in a single page along with a\n                <code>nextToken</code> response element. The remaining results of the initial\n            request can be seen by sending another <code>DescribeRepositories</code> request with\n            the returned <code>nextToken</code> value. This value can be between 1\n            and 1000. If this parameter is not used, then\n                <code>DescribeRepositories</code> returns up to 100 results and a\n                <code>nextToken</code> value, if applicable. This option cannot be used when you\n            specify repositories with <code>repositoryNames</code>.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#DescribeRepositoriesResponse": {
      "type": "structure",
      "members": {
        "repositories": {
          "target": "com.amazonaws.ecr#RepositoryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of repository objects corresponding to valid repositories.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n                <code>DescribeRepositories</code> request. When the results of a\n                <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value\n            can be used to retrieve the next page of results. This value is <code>null</code> when\n            there are no more results to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#EmptyUploadException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified layer upload does not contain any layer parts.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#EncryptionConfiguration": {
      "type": "structure",
      "members": {
        "encryptionType": {
          "target": "com.amazonaws.ecr#EncryptionType",
          "traits": {
            "smithy.api#documentation": "<p>The encryption type to use.</p>\n        <p>If you use the <code>KMS</code> encryption type, the contents of the repository will\n            be encrypted using server-side encryption with Key Management Service key stored in KMS. When you\n            use KMS to encrypt your data, you can either use the default Amazon Web Services managed KMS key\n            for Amazon ECR, or specify your own KMS key, which you already created. For more\n            information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">Protecting data using server-side\n                encryption with an KMS key stored in Key Management Service (SSE-KMS)</a> in the\n                <i>Amazon Simple Storage Service Console Developer Guide</i>.</p>\n        <p>If you use the <code>AES256</code> encryption type, Amazon ECR uses server-side encryption\n            with Amazon S3-managed encryption keys which encrypts the images in the repository using an\n            AES-256 encryption algorithm. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">Protecting data using\n                server-side encryption with Amazon S3-managed encryption keys (SSE-S3)</a> in the\n                <i>Amazon Simple Storage Service Console Developer Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKey": {
          "target": "com.amazonaws.ecr#KmsKey",
          "traits": {
            "smithy.api#documentation": "<p>If you use the <code>KMS</code> encryption type, specify the KMS key to use for\n            encryption. The alias, key ID, or full ARN of the KMS key can be specified. The key\n            must exist in the same Region as the repository. If no key is specified, the default\n            Amazon Web Services managed KMS key for Amazon ECR will be used.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The encryption configuration for the repository. This determines how the contents of\n            your repository are encrypted at rest.</p>\n        <p>By default, when no encryption configuration is set or the <code>AES256</code>\n            encryption type is used, Amazon ECR uses server-side encryption with Amazon S3-managed encryption\n            keys which encrypts your data at rest using an AES-256 encryption algorithm. This does\n            not require any action on your part.</p>\n        <p>For more control over the encryption of the contents of your repository, you can use\n            server-side encryption with Key Management Service key stored in Key Management Service (KMS) to encrypt your\n            images. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html\">Amazon ECR encryption at\n                rest</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#EncryptionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AES256",
            "name": "AES256"
          },
          {
            "value": "KMS",
            "name": "KMS"
          }
        ]
      }
    },
    "com.amazonaws.ecr#EnhancedImageScanFinding": {
      "type": "structure",
      "members": {
        "awsAccountId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the image.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.ecr#FindingDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the finding.</p>"
          }
        },
        "findingArn": {
          "target": "com.amazonaws.ecr#FindingArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Number (ARN) of the finding.</p>"
          }
        },
        "firstObservedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the finding was first observed.</p>"
          }
        },
        "lastObservedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the finding was last observed.</p>"
          }
        },
        "packageVulnerabilityDetails": {
          "target": "com.amazonaws.ecr#PackageVulnerabilityDetails",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the details of a package vulnerability finding.</p>"
          }
        },
        "remediation": {
          "target": "com.amazonaws.ecr#Remediation",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the details about how to remediate a finding.</p>"
          }
        },
        "resources": {
          "target": "com.amazonaws.ecr#ResourceList",
          "traits": {
            "smithy.api#documentation": "<p>Contains information on the resources involved in a finding.</p>"
          }
        },
        "score": {
          "target": "com.amazonaws.ecr#Score",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The Amazon Inspector score given to the finding.</p>"
          }
        },
        "scoreDetails": {
          "target": "com.amazonaws.ecr#ScoreDetails",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details of the Amazon Inspector score.</p>"
          }
        },
        "severity": {
          "target": "com.amazonaws.ecr#Severity",
          "traits": {
            "smithy.api#documentation": "<p>The severity of the finding.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.ecr#Status",
          "traits": {
            "smithy.api#documentation": "<p>The status of the finding.</p>"
          }
        },
        "title": {
          "target": "com.amazonaws.ecr#Title",
          "traits": {
            "smithy.api#documentation": "<p>The title of the finding.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.ecr#Type",
          "traits": {
            "smithy.api#documentation": "<p>The type of the finding.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the finding was last updated at.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of an enhanced image scan. This is returned when enhanced scanning is\n            enabled for your private registry.</p>"
      }
    },
    "com.amazonaws.ecr#EnhancedImageScanFindingList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#EnhancedImageScanFinding"
      }
    },
    "com.amazonaws.ecr#Epoch": {
      "type": "integer"
    },
    "com.amazonaws.ecr#EvaluationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#ExceptionMessage": {
      "type": "string"
    },
    "com.amazonaws.ecr#ExpirationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#FilePath": {
      "type": "string"
    },
    "com.amazonaws.ecr#FindingArn": {
      "type": "string"
    },
    "com.amazonaws.ecr#FindingDescription": {
      "type": "string"
    },
    "com.amazonaws.ecr#FindingName": {
      "type": "string"
    },
    "com.amazonaws.ecr#FindingSeverity": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "INFORMATIONAL",
            "name": "INFORMATIONAL"
          },
          {
            "value": "LOW",
            "name": "LOW"
          },
          {
            "value": "MEDIUM",
            "name": "MEDIUM"
          },
          {
            "value": "HIGH",
            "name": "HIGH"
          },
          {
            "value": "CRITICAL",
            "name": "CRITICAL"
          },
          {
            "value": "UNDEFINED",
            "name": "UNDEFINED"
          }
        ]
      }
    },
    "com.amazonaws.ecr#FindingSeverityCounts": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.ecr#FindingSeverity"
      },
      "value": {
        "target": "com.amazonaws.ecr#SeverityCount"
      }
    },
    "com.amazonaws.ecr#ForceFlag": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ecr#GetAuthorizationToken": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetAuthorizationTokenRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetAuthorizationTokenResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves an authorization token. An authorization token represents your IAM\n            authentication credentials and can be used to access any Amazon ECR registry that your IAM\n            principal has access to. The authorization token is valid for 12 hours.</p>\n        <p>The <code>authorizationToken</code> returned is a base64 encoded string that can be\n            decoded and used in a <code>docker login</code> command to authenticate to a registry.\n            The CLI offers an <code>get-login-password</code> command that simplifies the login\n            process. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth\">Registry\n                authentication</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#GetAuthorizationTokenRegistryIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RegistryId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.ecr#GetAuthorizationTokenRequest": {
      "type": "structure",
      "members": {
        "registryIds": {
          "target": "com.amazonaws.ecr#GetAuthorizationTokenRegistryIdList",
          "traits": {
            "smithy.api#deprecated": {
              "message": "This field is deprecated. The returned authorization token can be used to access any Amazon ECR registry that the IAM principal has access to, specifying a registry ID doesn't change the permissions scope of the authorization token."
            },
            "smithy.api#documentation": "<p>A list of Amazon Web Services account IDs that are associated with the registries for which to get\n            AuthorizationData objects. If you do not specify a registry, the default registry is assumed.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetAuthorizationTokenResponse": {
      "type": "structure",
      "members": {
        "authorizationData": {
          "target": "com.amazonaws.ecr#AuthorizationDataList",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization token data objects that correspond to the\n                <code>registryIds</code> values in the request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetDownloadUrlForLayer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetDownloadUrlForLayerRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetDownloadUrlForLayerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LayerInaccessibleException"
        },
        {
          "target": "com.amazonaws.ecr#LayersNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can\n            only get URLs for image layers that are referenced in an image.</p>\n        <p>When an image is pulled, the GetDownloadUrlForLayer API is called once per image layer\n            that is not already cached.</p>\n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#GetDownloadUrlForLayerRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the image layer to\n            download. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that is associated with the image layer to download.</p>",
            "smithy.api#required": {}
          }
        },
        "layerDigest": {
          "target": "com.amazonaws.ecr#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The digest of the image layer to download.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#GetDownloadUrlForLayerResponse": {
      "type": "structure",
      "members": {
        "downloadUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>"
          }
        },
        "layerDigest": {
          "target": "com.amazonaws.ecr#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The digest of the image layer to download.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetLifecyclePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetLifecyclePolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LifecyclePolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the lifecycle policy for the specified repository.</p>"
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicyPreview": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetLifecyclePolicyPreviewRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetLifecyclePolicyPreviewResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the results of the lifecycle policy preview request for the specified\n            repository.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "previewResults",
          "pageSize": "maxResults"
        },
        "smithy.waiters#waitable": {
          "LifecyclePolicyPreviewComplete": {
            "documentation": "Wait until a lifecycle policy preview request is complete and results can be accessed",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "COMPLETE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "status",
                    "expected": "FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ],
            "minDelay": 5
          }
        }
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicyPreviewRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The list of imageIDs to be included.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated \n                <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code>\n            was used and the  results exceeded the value of that parameter. Pagination continues\n            from the end of the  previous results that returned the <code>nextToken</code> value.\n            This value is  <code>null</code> when there are no more results to return. This option\n            cannot be used when you specify images with <code>imageIds</code>.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#LifecyclePreviewMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results returned by\n                <code>GetLifecyclePolicyPreviewRequest</code> in  paginated output. When this\n            parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns \n                <code>maxResults</code> results in a single page along with a\n            <code>nextToken</code>  response element. The remaining results of the initial request\n            can be seen by sending  another <code>GetLifecyclePolicyPreviewRequest</code> request\n            with the returned <code>nextToken</code>  value. This value can be between\n            1 and 1000. If this  parameter is not used, then\n                <code>GetLifecyclePolicyPreviewRequest</code> returns up to  100\n            results and a <code>nextToken</code> value, if  applicable. This option cannot be used\n            when you specify images with <code>imageIds</code>.</p>"
          }
        },
        "filter": {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewFilter",
          "traits": {
            "smithy.api#documentation": "<p>An optional parameter that filters results based on image tag status and all tags, if\n            tagged.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicyPreviewResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON lifecycle policy text.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the lifecycle policy preview request.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n                <code>GetLifecyclePolicyPreview</code> request. When the results of a\n                <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this\n            value can be used to retrieve the next page of results. This value is <code>null</code>\n            when there are no more results to return.</p>"
          }
        },
        "previewResults": {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewResultList",
          "traits": {
            "smithy.api#documentation": "<p>The results of the lifecycle policy preview request.</p>"
          }
        },
        "summary": {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewSummary",
          "traits": {
            "smithy.api#documentation": "<p>The list of images that is returned as a result of the action.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#GetLifecyclePolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON lifecycle policy text.</p>"
          }
        },
        "lastEvaluatedAt": {
          "target": "com.amazonaws.ecr#EvaluationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time stamp of the last time that the lifecycle policy was run.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetRegistryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetRegistryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetRegistryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RegistryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the permissions policy for a registry.</p>"
      }
    },
    "com.amazonaws.ecr#GetRegistryPolicyRequest": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#GetRegistryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registry.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RegistryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON text of the permissions policy for a registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetRegistryScanningConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetRegistryScanningConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetRegistryScanningConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the scanning configuration for a registry.</p>"
      }
    },
    "com.amazonaws.ecr#GetRegistryScanningConfigurationRequest": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#GetRegistryScanningConfigurationResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the registry.</p>"
          }
        },
        "scanningConfiguration": {
          "target": "com.amazonaws.ecr#RegistryScanningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The scanning configuration for the registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#GetRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#GetRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#GetRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the repository policy for the specified repository.</p>"
      }
    },
    "com.amazonaws.ecr#GetRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository with the policy to retrieve.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#GetRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text associated with the repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#Image": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry containing the image.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository associated with the image.</p>"
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the image tag and image digest associated with an image.</p>"
          }
        },
        "imageManifest": {
          "target": "com.amazonaws.ecr#ImageManifest",
          "traits": {
            "smithy.api#documentation": "<p>The image manifest associated with the image.</p>"
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecr#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The manifest media type of the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing an Amazon ECR image.</p>"
      }
    },
    "com.amazonaws.ecr#ImageActionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "EXPIRE",
            "name": "EXPIRE"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ImageAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image has already been pushed, and there were no changes to the manifest\n            or image tag after the last push.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ImageCount": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ecr#ImageDetail": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to which this image belongs.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to which this image belongs.</p>"
          }
        },
        "imageDigest": {
          "target": "com.amazonaws.ecr#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imageTags": {
          "target": "com.amazonaws.ecr#ImageTagList",
          "traits": {
            "smithy.api#documentation": "<p>The list of tags associated with this image.</p>"
          }
        },
        "imageSizeInBytes": {
          "target": "com.amazonaws.ecr#ImageSizeInBytes",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, of the image in the repository.</p>\n        <p>If the image is a manifest list, this will be the max size of all manifests in the\n            list.</p>\n        <note>\n            <p>Beginning with Docker version 1.9, the Docker client compresses image layers\n                before pushing them to a V2 Docker registry. The output of the <code>docker\n                    images</code> command shows the uncompressed image size, so it may return a\n                larger image size than the image sizes returned by <a>DescribeImages</a>.</p>\n        </note>"
          }
        },
        "imagePushedAt": {
          "target": "com.amazonaws.ecr#PushTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, expressed in standard JavaScript date format, at which the current\n            image was pushed to the repository. </p>"
          }
        },
        "imageScanStatus": {
          "target": "com.amazonaws.ecr#ImageScanStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the scan.</p>"
          }
        },
        "imageScanFindingsSummary": {
          "target": "com.amazonaws.ecr#ImageScanFindingsSummary",
          "traits": {
            "smithy.api#documentation": "<p>A summary of the last completed image scan.</p>"
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecr#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the image manifest.</p>"
          }
        },
        "artifactMediaType": {
          "target": "com.amazonaws.ecr#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The artifact media type of the image.</p>"
          }
        },
        "lastRecordedPullTime": {
          "target": "com.amazonaws.ecr#RecordedPullTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, expressed in standard JavaScript date format, when Amazon ECR recorded\n            the last image pull.</p>\n        <note>\n            <p>Amazon ECR refreshes the last image pull timestamp at least once every 24 hours. For\n                example, if you pull an image once a day then the <code>lastRecordedPullTime</code>\n                timestamp will indicate the exact time that the image was last pulled. However, if\n                you pull an image once an hour, because Amazon ECR refreshes the\n                    <code>lastRecordedPullTime</code> timestamp at least once every 24 hours, the\n                result may not be the exact time that the image was last pulled.</p>\n        </note>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that describes an image returned by a <a>DescribeImages</a>\n            operation.</p>"
      }
    },
    "com.amazonaws.ecr#ImageDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageDetail"
      }
    },
    "com.amazonaws.ecr#ImageDigest": {
      "type": "string"
    },
    "com.amazonaws.ecr#ImageDigestDoesNotMatchException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image digest does not match the digest that Amazon ECR calculated for the\n            image.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ImageFailure": {
      "type": "structure",
      "members": {
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The image ID associated with the failure.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecr#ImageFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The code associated with the failure.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.ecr#ImageFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the failure.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing an Amazon ECR image failure.</p>"
      }
    },
    "com.amazonaws.ecr#ImageFailureCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "InvalidImageDigest",
            "name": "InvalidImageDigest"
          },
          {
            "value": "InvalidImageTag",
            "name": "InvalidImageTag"
          },
          {
            "value": "ImageTagDoesNotMatchDigest",
            "name": "ImageTagDoesNotMatchDigest"
          },
          {
            "value": "ImageNotFound",
            "name": "ImageNotFound"
          },
          {
            "value": "MissingDigestAndTag",
            "name": "MissingDigestAndTag"
          },
          {
            "value": "ImageReferencedByManifestList",
            "name": "ImageReferencedByManifestList"
          },
          {
            "value": "KmsError",
            "name": "KmsError"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ImageFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageFailure"
      }
    },
    "com.amazonaws.ecr#ImageFailureReason": {
      "type": "string"
    },
    "com.amazonaws.ecr#ImageIdentifier": {
      "type": "structure",
      "members": {
        "imageDigest": {
          "target": "com.amazonaws.ecr#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imageTag": {
          "target": "com.amazonaws.ecr#ImageTag",
          "traits": {
            "smithy.api#documentation": "<p>The tag used for the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object with identifying information for an image in an Amazon ECR repository.</p>"
      }
    },
    "com.amazonaws.ecr#ImageIdentifierList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageIdentifier"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#ImageList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Image"
      }
    },
    "com.amazonaws.ecr#ImageManifest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 4194304
        }
      }
    },
    "com.amazonaws.ecr#ImageNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image requested does not exist in the specified repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ImageReplicationStatus": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.ecr#Region",
          "traits": {
            "smithy.api#documentation": "<p>The destination Region for the image replication.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to which the image belongs.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.ecr#ReplicationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The image replication status.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecr#ReplicationError",
          "traits": {
            "smithy.api#documentation": "<p>The failure code for a replication that has failed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The status of the replication process for an image.</p>"
      }
    },
    "com.amazonaws.ecr#ImageReplicationStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageReplicationStatus"
      }
    },
    "com.amazonaws.ecr#ImageScanFinding": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ecr#FindingName",
          "traits": {
            "smithy.api#documentation": "<p>The name associated with the finding, usually a CVE number.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.ecr#FindingDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the finding.</p>"
          }
        },
        "uri": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>A link containing additional details about the security vulnerability.</p>"
          }
        },
        "severity": {
          "target": "com.amazonaws.ecr#FindingSeverity",
          "traits": {
            "smithy.api#documentation": "<p>The finding severity.</p>"
          }
        },
        "attributes": {
          "target": "com.amazonaws.ecr#AttributeList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of attributes of the host from which the finding is generated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains information about an image scan finding.</p>"
      }
    },
    "com.amazonaws.ecr#ImageScanFindingList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageScanFinding"
      }
    },
    "com.amazonaws.ecr#ImageScanFindings": {
      "type": "structure",
      "members": {
        "imageScanCompletedAt": {
          "target": "com.amazonaws.ecr#ScanTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time of the last completed image scan.</p>"
          }
        },
        "vulnerabilitySourceUpdatedAt": {
          "target": "com.amazonaws.ecr#VulnerabilitySourceUpdateTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the vulnerability data was last scanned.</p>"
          }
        },
        "findingSeverityCounts": {
          "target": "com.amazonaws.ecr#FindingSeverityCounts",
          "traits": {
            "smithy.api#documentation": "<p>The image vulnerability counts, sorted by severity.</p>"
          }
        },
        "findings": {
          "target": "com.amazonaws.ecr#ImageScanFindingList",
          "traits": {
            "smithy.api#documentation": "<p>The findings from the image scan.</p>"
          }
        },
        "enhancedFindings": {
          "target": "com.amazonaws.ecr#EnhancedImageScanFindingList",
          "traits": {
            "smithy.api#documentation": "<p>Details about the enhanced scan findings from Amazon Inspector.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of an image scan.</p>"
      }
    },
    "com.amazonaws.ecr#ImageScanFindingsSummary": {
      "type": "structure",
      "members": {
        "imageScanCompletedAt": {
          "target": "com.amazonaws.ecr#ScanTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time of the last completed image scan.</p>"
          }
        },
        "vulnerabilitySourceUpdatedAt": {
          "target": "com.amazonaws.ecr#VulnerabilitySourceUpdateTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the vulnerability data was last scanned.</p>"
          }
        },
        "findingSeverityCounts": {
          "target": "com.amazonaws.ecr#FindingSeverityCounts",
          "traits": {
            "smithy.api#documentation": "<p>The image vulnerability counts, sorted by severity.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A summary of the last completed image scan.</p>"
      }
    },
    "com.amazonaws.ecr#ImageScanStatus": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.ecr#ScanStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of an image scan.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.ecr#ScanStatusDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the image scan status.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The current status of an image scan.</p>"
      }
    },
    "com.amazonaws.ecr#ImageScanningConfiguration": {
      "type": "structure",
      "members": {
        "scanOnPush": {
          "target": "com.amazonaws.ecr#ScanOnPushFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>The setting that determines whether images are scanned after being pushed to a\n            repository. If set to <code>true</code>, images will be scanned after being pushed. If\n            this parameter is not specified, it will default to <code>false</code> and images will\n            not be scanned unless a scan is manually started with the <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_StartImageScan.html\">API_StartImageScan</a> API.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image scanning configuration for a repository.</p>"
      }
    },
    "com.amazonaws.ecr#ImageSizeInBytes": {
      "type": "long"
    },
    "com.amazonaws.ecr#ImageTag": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 300
        }
      }
    },
    "com.amazonaws.ecr#ImageTagAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image is tagged with a tag that already exists. The repository is\n            configured for tag immutability.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ImageTagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageTag"
      }
    },
    "com.amazonaws.ecr#ImageTagMutability": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "MUTABLE",
            "name": "MUTABLE"
          },
          {
            "value": "IMMUTABLE",
            "name": "IMMUTABLE"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ImageTagsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ImageTag"
      }
    },
    "com.amazonaws.ecr#InitiateLayerUpload": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#InitiateLayerUploadRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#InitiateLayerUploadResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Notifies Amazon ECR that you intend to upload an image layer.</p>\n        <p>When an image is pushed, the InitiateLayerUpload API is called once per image layer\n            that has not already been uploaded. Whether or not an image layer has been uploaded is\n            determined by the BatchCheckLayerAvailability API action.</p>\n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#InitiateLayerUploadRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to which you intend to upload\n            layers. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to which you intend to upload layers.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#InitiateLayerUploadResponse": {
      "type": "structure",
      "members": {
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a>\n            operations.</p>"
          }
        },
        "partSize": {
          "target": "com.amazonaws.ecr#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#InvalidLayerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does\n            not match the digest specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#InvalidLayerPartException": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the exception.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the exception.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID associated with the exception.</p>"
          }
        },
        "lastValidByteReceived": {
          "target": "com.amazonaws.ecr#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The last valid byte received from the layer part upload that is associated with the\n            exception.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The layer part size is not valid, or the first byte specified is not consecutive to\n            the last byte of a previous layer part upload.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#InvalidParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified parameter is invalid. Review the available parameters for the API\n            request.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#InvalidTagParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have\n            a maximum length of 256 characters.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#KmsError": {
      "type": "string"
    },
    "com.amazonaws.ecr#KmsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        },
        "kmsError": {
          "target": "com.amazonaws.ecr#KmsError",
          "traits": {
            "smithy.api#documentation": "<p>The error code returned by KMS.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation failed due to a KMS exception.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#KmsKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.ecr#Layer": {
      "type": "structure",
      "members": {
        "layerDigest": {
          "target": "com.amazonaws.ecr#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>"
          }
        },
        "layerAvailability": {
          "target": "com.amazonaws.ecr#LayerAvailability",
          "traits": {
            "smithy.api#documentation": "<p>The availability status of the image layer.</p>"
          }
        },
        "layerSize": {
          "target": "com.amazonaws.ecr#LayerSizeInBytes",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, of the image layer.</p>"
          }
        },
        "mediaType": {
          "target": "com.amazonaws.ecr#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the layer, such as\n                <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or\n                <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing an Amazon ECR image layer.</p>"
      }
    },
    "com.amazonaws.ecr#LayerAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image layer already exists in the associated repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LayerAvailability": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "UNAVAILABLE",
            "name": "UNAVAILABLE"
          }
        ]
      }
    },
    "com.amazonaws.ecr#LayerDigest": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+$"
      }
    },
    "com.amazonaws.ecr#LayerDigestList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#LayerDigest"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#LayerFailure": {
      "type": "structure",
      "members": {
        "layerDigest": {
          "target": "com.amazonaws.ecr#BatchedOperationLayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The layer digest associated with the failure.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecr#LayerFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The failure code associated with the failure.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.ecr#LayerFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the failure.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing an Amazon ECR image layer failure.</p>"
      }
    },
    "com.amazonaws.ecr#LayerFailureCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "InvalidLayerDigest",
            "name": "InvalidLayerDigest"
          },
          {
            "value": "MissingLayerDigest",
            "name": "MissingLayerDigest"
          }
        ]
      }
    },
    "com.amazonaws.ecr#LayerFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#LayerFailure"
      }
    },
    "com.amazonaws.ecr#LayerFailureReason": {
      "type": "string"
    },
    "com.amazonaws.ecr#LayerInaccessibleException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified layer is not available because it is not associated with an image.\n            Unassociated image layers may be cleaned up at any time.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LayerList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Layer"
      }
    },
    "com.amazonaws.ecr#LayerPartBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20971520
        }
      }
    },
    "com.amazonaws.ecr#LayerPartTooSmallException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Layer parts must be at least 5 MiB in size.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LayerSizeInBytes": {
      "type": "long"
    },
    "com.amazonaws.ecr#LayersNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified layers could not be found, or the specified layer is not valid for this\n            repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The lifecycle policy could not be found, and no policy is set to the\n            repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewFilter": {
      "type": "structure",
      "members": {
        "tagStatus": {
          "target": "com.amazonaws.ecr#TagStatus",
          "traits": {
            "smithy.api#documentation": "<p>The tag status of the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filter for the lifecycle policy preview.</p>"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewInProgressException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The previous lifecycle policy preview request has not completed. Wait and try\n            again.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>There is no dry run for this repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewResult": {
      "type": "structure",
      "members": {
        "imageTags": {
          "target": "com.amazonaws.ecr#ImageTagList",
          "traits": {
            "smithy.api#documentation": "<p>The list of tags associated with this image.</p>"
          }
        },
        "imageDigest": {
          "target": "com.amazonaws.ecr#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imagePushedAt": {
          "target": "com.amazonaws.ecr#PushTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, expressed in standard JavaScript date format, at which the current\n            image was pushed to the repository.</p>"
          }
        },
        "action": {
          "target": "com.amazonaws.ecr#LifecyclePolicyRuleAction",
          "traits": {
            "smithy.api#documentation": "<p>The type of action to be taken.</p>"
          }
        },
        "appliedRulePriority": {
          "target": "com.amazonaws.ecr#LifecyclePolicyRulePriority",
          "traits": {
            "smithy.api#documentation": "<p>The priority of the applied rule.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The result of the lifecycle policy preview.</p>"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewResultList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#LifecyclePolicyPreviewResult"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "COMPLETE",
            "name": "COMPLETE"
          },
          {
            "value": "EXPIRED",
            "name": "EXPIRED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyPreviewSummary": {
      "type": "structure",
      "members": {
        "expiringImageTotalCount": {
          "target": "com.amazonaws.ecr#ImageCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of expiring images.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The summary of the lifecycle policy preview request.</p>"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyRuleAction": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.ecr#ImageActionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of action to be taken.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The type of action to be taken.</p>"
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyRulePriority": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.ecr#LifecyclePolicyText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 100,
          "max": 30720
        }
      }
    },
    "com.amazonaws.ecr#LifecyclePreviewMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#LimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation did not succeed because it would have exceeded a service limit for your\n            account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html\">Amazon ECR service quotas</a> in\n            the Amazon Elastic Container Registry User Guide.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ListImages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#ListImagesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#ListImagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all the image IDs for the specified repository.</p>\n        <p>You can filter images based on whether or not they are tagged by using the\n                <code>tagStatus</code> filter and specifying either <code>TAGGED</code>,\n                <code>UNTAGGED</code> or <code>ANY</code>. For example, you can filter your results\n            to return only <code>UNTAGGED</code> images and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or, you can filter your\n            results to return only <code>TAGGED</code> images to list all of the tags in your\n            repository.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "imageIds",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecr#ListImagesFilter": {
      "type": "structure",
      "members": {
        "tagStatus": {
          "target": "com.amazonaws.ecr#TagStatus",
          "traits": {
            "smithy.api#documentation": "<p>The tag status with which to filter your <a>ListImages</a> results. You can\n            filter results based on whether they are <code>TAGGED</code> or\n            <code>UNTAGGED</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing a filter on a <a>ListImages</a> operation.</p>"
      }
    },
    "com.amazonaws.ecr#ListImagesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to list images. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository with image IDs to be listed.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated\n                <code>ListImages</code> request where <code>maxResults</code> was used and the\n            results exceeded the value of that parameter. Pagination continues from the end of the\n            previous results that returned the <code>nextToken</code> value. This value is\n                <code>null</code> when there are no more results to return.</p>\n        <note>\n            <p>This token should be treated as an opaque identifier that is only used to\n                retrieve the next items in a list and not for other programmatic purposes.</p>\n        </note>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecr#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of image results returned by <code>ListImages</code> in paginated\n            output. When this parameter is used, <code>ListImages</code> only returns\n                <code>maxResults</code> results in a single page along with a <code>nextToken</code>\n            response element. The remaining results of the initial request can be seen by sending\n            another <code>ListImages</code> request with the returned <code>nextToken</code> value.\n            This value can be between 1 and 1000. If this parameter is\n            not used, then <code>ListImages</code> returns up to 100 results and a\n                <code>nextToken</code> value, if applicable.</p>"
          }
        },
        "filter": {
          "target": "com.amazonaws.ecr#ListImagesFilter",
          "traits": {
            "smithy.api#documentation": "<p>The filter key and value with which to filter your <code>ListImages</code>\n            results.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#ListImagesResponse": {
      "type": "structure",
      "members": {
        "imageIds": {
          "target": "com.amazonaws.ecr#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The list of image IDs for the requested repository.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecr#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code>\n            request. When the results of a <code>ListImages</code> request exceed\n                <code>maxResults</code>, this value can be used to retrieve the next page of\n            results. This value is <code>null</code> when there are no more results to\n            return.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List the tags for an Amazon ECR resource.</p>"
      }
    },
    "com.amazonaws.ecr#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecr#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the resource for which to list the tags. Currently, the\n            only supported resource is an Amazon ECR repository.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.ecr#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags for the resource.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.ecr#MediaType": {
      "type": "string"
    },
    "com.amazonaws.ecr#MediaTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#MediaType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#Metric": {
      "type": "string"
    },
    "com.amazonaws.ecr#NextToken": {
      "type": "string"
    },
    "com.amazonaws.ecr#PackageManager": {
      "type": "string"
    },
    "com.amazonaws.ecr#PackageVulnerabilityDetails": {
      "type": "structure",
      "members": {
        "cvss": {
          "target": "com.amazonaws.ecr#CvssScoreList",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details about the CVSS score of a finding.</p>"
          }
        },
        "referenceUrls": {
          "target": "com.amazonaws.ecr#ReferenceUrlsList",
          "traits": {
            "smithy.api#documentation": "<p>One or more URLs that contain details about this vulnerability type.</p>"
          }
        },
        "relatedVulnerabilities": {
          "target": "com.amazonaws.ecr#RelatedVulnerabilitiesList",
          "traits": {
            "smithy.api#documentation": "<p>One or more vulnerabilities related to the one identified in this finding.</p>"
          }
        },
        "source": {
          "target": "com.amazonaws.ecr#Source",
          "traits": {
            "smithy.api#documentation": "<p>The source of the vulnerability information.</p>"
          }
        },
        "sourceUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>A URL to the source of the vulnerability information.</p>"
          }
        },
        "vendorCreatedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that this vulnerability was first added to the vendor's\n            database.</p>"
          }
        },
        "vendorSeverity": {
          "target": "com.amazonaws.ecr#Severity",
          "traits": {
            "smithy.api#documentation": "<p>The severity the vendor has given to this vulnerability type.</p>"
          }
        },
        "vendorUpdatedAt": {
          "target": "com.amazonaws.ecr#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the vendor last updated this vulnerability in their database.</p>"
          }
        },
        "vulnerabilityId": {
          "target": "com.amazonaws.ecr#VulnerabilityId",
          "traits": {
            "smithy.api#documentation": "<p>The ID given to this vulnerability.</p>"
          }
        },
        "vulnerablePackages": {
          "target": "com.amazonaws.ecr#VulnerablePackagesList",
          "traits": {
            "smithy.api#documentation": "<p>The packages impacted by this vulnerability.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a package vulnerability finding.</p>"
      }
    },
    "com.amazonaws.ecr#PartSize": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ecr#Platform": {
      "type": "string"
    },
    "com.amazonaws.ecr#ProxyEndpoint": {
      "type": "string"
    },
    "com.amazonaws.ecr#PullThroughCacheRule": {
      "type": "structure",
      "members": {
        "ecrRepositoryPrefix": {
          "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon ECR repository prefix associated with the pull through cache rule.</p>"
          }
        },
        "upstreamRegistryUrl": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The upstream registry URL associated with the pull through cache rule.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecr#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the pull through cache was created.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry the pull through cache rule is\n            associated with.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of a pull through cache rule.</p>"
      }
    },
    "com.amazonaws.ecr#PullThroughCacheRuleAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A pull through cache rule with these settings already exists for the private\n            registry.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#PullThroughCacheRuleList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#PullThroughCacheRule"
      }
    },
    "com.amazonaws.ecr#PullThroughCacheRuleNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The pull through cache rule was not found. Specify a valid pull through cache rule and\n            try again.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 20
        },
        "smithy.api#pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*$"
      }
    },
    "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefixList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#PullThroughCacheRuleRepositoryPrefix"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#PushTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#PutImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutImageRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#ImageAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecr#ImageDigestDoesNotMatchException"
        },
        {
          "target": "com.amazonaws.ecr#ImageTagAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#LayersNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecr#ReferencedImagesNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the image manifest and tags associated with an image.</p>\n        <p>When an image is pushed and all new image layers have been uploaded, the PutImage API\n            is called once to create or update the image manifest and the tags associated with the\n            image.</p>\n        \n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#PutImageRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to put the image. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository in which to put the image.</p>",
            "smithy.api#required": {}
          }
        },
        "imageManifest": {
          "target": "com.amazonaws.ecr#ImageManifest",
          "traits": {
            "smithy.api#documentation": "<p>The image manifest corresponding to the image to be uploaded.</p>",
            "smithy.api#required": {}
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecr#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the image manifest. If you push an image manifest that does not\n            contain the <code>mediaType</code> field, you must specify the\n                <code>imageManifestMediaType</code> in the request.</p>"
          }
        },
        "imageTag": {
          "target": "com.amazonaws.ecr#ImageTag",
          "traits": {
            "smithy.api#documentation": "<p>The tag to associate with the image. This parameter is required for images that use\n            the Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.</p>"
          }
        },
        "imageDigest": {
          "target": "com.amazonaws.ecr#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The image digest of the image manifest corresponding to the image.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutImageResponse": {
      "type": "structure",
      "members": {
        "image": {
          "target": "com.amazonaws.ecr#Image",
          "traits": {
            "smithy.api#documentation": "<p>Details of the image uploaded.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutImageScanningConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutImageScanningConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutImageScanningConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<important>\n            <p>The <code>PutImageScanningConfiguration</code> API is being deprecated, in favor\n                of specifying the image scanning configuration at the registry level. For more\n                information, see <a>PutRegistryScanningConfiguration</a>.</p>\n        </important>\n        <p>Updates the image scanning configuration for the specified repository.</p>"
      }
    },
    "com.amazonaws.ecr#PutImageScanningConfigurationRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to update the image scanning configuration setting.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository in which to update the image scanning configuration\n            setting.</p>",
            "smithy.api#required": {}
          }
        },
        "imageScanningConfiguration": {
          "target": "com.amazonaws.ecr#ImageScanningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The image scanning configuration for the repository. This setting determines whether\n            images are scanned for known vulnerabilities after being pushed to the\n            repository.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#PutImageScanningConfigurationResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "imageScanningConfiguration": {
          "target": "com.amazonaws.ecr#ImageScanningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The image scanning configuration setting for the repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutImageTagMutability": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutImageTagMutabilityRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutImageTagMutabilityResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the image tag mutability settings for the specified repository. For more\n            information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html\">Image tag\n                mutability</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#PutImageTagMutabilityRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to update the image tag mutability settings. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository in which to update the image tag mutability\n            settings.</p>",
            "smithy.api#required": {}
          }
        },
        "imageTagMutability": {
          "target": "com.amazonaws.ecr#ImageTagMutability",
          "traits": {
            "smithy.api#documentation": "<p>The tag mutability setting for the repository. If <code>MUTABLE</code> is specified,\n            image tags can be overwritten. If <code>IMMUTABLE</code> is specified, all image tags\n            within the repository will be immutable which will prevent them from being\n            overwritten.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#PutImageTagMutabilityResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "imageTagMutability": {
          "target": "com.amazonaws.ecr#ImageTagMutability",
          "traits": {
            "smithy.api#documentation": "<p>The image tag mutability setting for the repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutLifecyclePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutLifecyclePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutLifecyclePolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the lifecycle policy for the specified repository. For more\n            information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html\">Lifecycle policy\n                template</a>.</p>"
      }
    },
    "com.amazonaws.ecr#PutLifecyclePolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository. If you\n            do  not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to receive the policy.</p>",
            "smithy.api#required": {}
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text to apply to the repository.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#PutLifecyclePolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutRegistryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutRegistryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutRegistryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the permissions policy for your registry.</p>\n        <p>A registry policy is used to specify permissions for another Amazon Web Services account and is used\n            when configuring cross-account replication. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html\">Registry permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#PutRegistryPolicyRequest": {
      "type": "structure",
      "members": {
        "policyText": {
          "target": "com.amazonaws.ecr#RegistryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON policy text to apply to your registry. The policy text follows the same\n            format as IAM policy text. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html\">Registry\n                permissions</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#PutRegistryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RegistryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON policy text for your registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutRegistryScanningConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutRegistryScanningConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutRegistryScanningConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the scanning configuration for your private registry.</p>"
      }
    },
    "com.amazonaws.ecr#PutRegistryScanningConfigurationRequest": {
      "type": "structure",
      "members": {
        "scanType": {
          "target": "com.amazonaws.ecr#ScanType",
          "traits": {
            "smithy.api#documentation": "<p>The scanning type to set for the registry.</p>\n        <p>When a registry scanning configuration is not defined, by default the\n                <code>BASIC</code> scan type is used. When basic scanning is used, you may specify\n            filters to determine which individual repositories, or all repositories, are scanned\n            when new images are pushed to those repositories. Alternatively, you can do manual scans\n            of images with basic scanning.</p>\n        <p>When the <code>ENHANCED</code> scan type is set, Amazon Inspector provides automated\n            vulnerability scanning. You may choose between continuous scanning or scan on push and\n            you may specify filters to determine which individual repositories, or all repositories,\n            are scanned.</p>"
          }
        },
        "rules": {
          "target": "com.amazonaws.ecr#RegistryScanningRuleList",
          "traits": {
            "smithy.api#documentation": "<p>The scanning rules to use for the registry. A scanning rule is used to determine which\n            repository filters are used and at what frequency scanning will occur.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutRegistryScanningConfigurationResponse": {
      "type": "structure",
      "members": {
        "registryScanningConfiguration": {
          "target": "com.amazonaws.ecr#RegistryScanningConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The scanning configuration for your registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#PutReplicationConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#PutReplicationConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#PutReplicationConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the replication configuration for a registry. The existing\n            replication configuration for a repository can be retrieved with the <a>DescribeRegistry</a> API action. The first time the\n            PutReplicationConfiguration API is called, a service-linked IAM role is created in\n            your account for the replication process. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/using-service-linked-roles.html\">Using\n                service-linked roles for Amazon ECR</a> in the\n            <i>Amazon Elastic Container Registry User Guide</i>.</p>\n        <note>\n            <p>When configuring cross-account replication, the destination account must grant the\n                source account permission to replicate. This permission is controlled using a\n                registry permissions policy. For more information, see <a>PutRegistryPolicy</a>.</p>\n        </note>"
      }
    },
    "com.amazonaws.ecr#PutReplicationConfigurationRequest": {
      "type": "structure",
      "members": {
        "replicationConfiguration": {
          "target": "com.amazonaws.ecr#ReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>An object representing the replication configuration for a registry.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#PutReplicationConfigurationResponse": {
      "type": "structure",
      "members": {
        "replicationConfiguration": {
          "target": "com.amazonaws.ecr#ReplicationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The contents of the replication configuration for the registry.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#Reason": {
      "type": "string"
    },
    "com.amazonaws.ecr#Recommendation": {
      "type": "structure",
      "members": {
        "url": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The URL address to the CVE remediation recommendations.</p>"
          }
        },
        "text": {
          "target": "com.amazonaws.ecr#RecommendationText",
          "traits": {
            "smithy.api#documentation": "<p>The recommended course of action to remediate the finding.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the recommended course of action to remediate the finding.</p>"
      }
    },
    "com.amazonaws.ecr#RecommendationText": {
      "type": "string"
    },
    "com.amazonaws.ecr#RecordedPullTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#ReferenceUrlsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Url"
      }
    },
    "com.amazonaws.ecr#ReferencedImagesNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The manifest list is referencing an image that does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#Region": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 25
        },
        "smithy.api#pattern": "^[0-9a-z-]{2,25}$"
      }
    },
    "com.amazonaws.ecr#RegistryId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[0-9]{12}$"
      }
    },
    "com.amazonaws.ecr#RegistryPolicyNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The registry doesn't have an associated registry policy.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#RegistryPolicyText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10240
        }
      }
    },
    "com.amazonaws.ecr#RegistryScanningConfiguration": {
      "type": "structure",
      "members": {
        "scanType": {
          "target": "com.amazonaws.ecr#ScanType",
          "traits": {
            "smithy.api#documentation": "<p>The type of scanning configured for the registry.</p>"
          }
        },
        "rules": {
          "target": "com.amazonaws.ecr#RegistryScanningRuleList",
          "traits": {
            "smithy.api#documentation": "<p>The scanning rules associated with the registry.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The scanning configuration for a private registry.</p>"
      }
    },
    "com.amazonaws.ecr#RegistryScanningRule": {
      "type": "structure",
      "members": {
        "scanFrequency": {
          "target": "com.amazonaws.ecr#ScanFrequency",
          "traits": {
            "smithy.api#documentation": "<p>The frequency that scans are performed at for a private registry. When the\n                <code>ENHANCED</code> scan type is specified, the supported scan frequencies are\n                <code>CONTINUOUS_SCAN</code> and <code>SCAN_ON_PUSH</code>. When the\n                <code>BASIC</code> scan type is specified, the <code>SCAN_ON_PUSH</code> and\n                <code>MANUAL</code> scan frequencies are supported.</p>",
            "smithy.api#required": {}
          }
        },
        "repositoryFilters": {
          "target": "com.amazonaws.ecr#ScanningRepositoryFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The repository filters associated with the scanning configuration for a private\n            registry.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of a scanning rule for a private registry.</p>"
      }
    },
    "com.amazonaws.ecr#RegistryScanningRuleList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RegistryScanningRule"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2
        }
      }
    },
    "com.amazonaws.ecr#RelatedVulnerabilitiesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RelatedVulnerability"
      }
    },
    "com.amazonaws.ecr#RelatedVulnerability": {
      "type": "string"
    },
    "com.amazonaws.ecr#Release": {
      "type": "string"
    },
    "com.amazonaws.ecr#Remediation": {
      "type": "structure",
      "members": {
        "recommendation": {
          "target": "com.amazonaws.ecr#Recommendation",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains information about the recommended course of action to\n            remediate the finding.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information on how to remediate a finding.</p>"
      }
    },
    "com.amazonaws.ecr#ReplicationConfiguration": {
      "type": "structure",
      "members": {
        "rules": {
          "target": "com.amazonaws.ecr#ReplicationRuleList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects representing the replication destinations and repository filters\n            for a replication configuration.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The replication configuration for a registry.</p>"
      }
    },
    "com.amazonaws.ecr#ReplicationDestination": {
      "type": "structure",
      "members": {
        "region": {
          "target": "com.amazonaws.ecr#Region",
          "traits": {
            "smithy.api#documentation": "<p>The Region to replicate to.</p>",
            "smithy.api#required": {}
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID of the Amazon ECR private registry to replicate to. When configuring\n            cross-Region replication within your own registry, specify your own account ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An array of objects representing the destination for a replication rule.</p>"
      }
    },
    "com.amazonaws.ecr#ReplicationDestinationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ReplicationDestination"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 25
        }
      }
    },
    "com.amazonaws.ecr#ReplicationError": {
      "type": "string"
    },
    "com.amazonaws.ecr#ReplicationRule": {
      "type": "structure",
      "members": {
        "destinations": {
          "target": "com.amazonaws.ecr#ReplicationDestinationList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects representing the destination for a replication rule.</p>",
            "smithy.api#required": {}
          }
        },
        "repositoryFilters": {
          "target": "com.amazonaws.ecr#RepositoryFilterList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects representing the filters for a replication rule. Specifying a\n            repository filter for a replication rule provides a method for controlling which\n            repositories in a private registry are replicated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An array of objects representing the replication destinations and repository filters\n            for a replication configuration.</p>"
      }
    },
    "com.amazonaws.ecr#ReplicationRuleList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ReplicationRule"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.ecr#ReplicationStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "COMPLETE",
            "name": "COMPLETE"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          }
        ]
      }
    },
    "com.amazonaws.ecr#Repository": {
      "type": "structure",
      "members": {
        "repositoryArn": {
          "target": "com.amazonaws.ecr#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the\n    repository, Amazon Web Services account ID of the repository owner, repository namespace, and repository name.\n    For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "repositoryUri": {
          "target": "com.amazonaws.ecr#Url",
          "traits": {
            "smithy.api#documentation": "<p>The URI for the repository. You can use this URI for container image <code>push</code>\n            and <code>pull</code> operations.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecr#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, in JavaScript date format, when the repository was created.</p>"
          }
        },
        "imageTagMutability": {
          "target": "com.amazonaws.ecr#ImageTagMutability",
          "traits": {
            "smithy.api#documentation": "<p>The tag mutability setting for the repository.</p>"
          }
        },
        "imageScanningConfiguration": {
          "target": "com.amazonaws.ecr#ImageScanningConfiguration"
        },
        "encryptionConfiguration": {
          "target": "com.amazonaws.ecr#EncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The encryption configuration for the repository. This determines how the contents of\n            your repository are encrypted at rest.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing a repository.</p>"
      }
    },
    "com.amazonaws.ecr#RepositoryAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository already exists in the specified registry.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#RepositoryFilter": {
      "type": "structure",
      "members": {
        "filter": {
          "target": "com.amazonaws.ecr#RepositoryFilterValue",
          "traits": {
            "smithy.api#documentation": "<p>The repository filter details. When the <code>PREFIX_MATCH</code> filter type is\n            specified, this value is required and should be the repository name prefix to configure\n            replication for.</p>",
            "smithy.api#required": {}
          }
        },
        "filterType": {
          "target": "com.amazonaws.ecr#RepositoryFilterType",
          "traits": {
            "smithy.api#documentation": "<p>The repository filter type. The only supported value is <code>PREFIX_MATCH</code>,\n            which is a repository name prefix specified with the <code>filter</code>\n            parameter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The filter settings used with image replication. Specifying a repository filter to a\n            replication rule provides a method for controlling which repositories in a private\n            registry are replicated. If no repository filter is specified, all images in the\n            repository are replicated.</p>"
      }
    },
    "com.amazonaws.ecr#RepositoryFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RepositoryFilter"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#RepositoryFilterType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "PREFIX_MATCH",
            "name": "PREFIX_MATCH"
          }
        ]
      }
    },
    "com.amazonaws.ecr#RepositoryFilterValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 256
        },
        "smithy.api#pattern": "^(?:[a-z0-9]+(?:[._-][a-z0-9]*)*/)*[a-z0-9]*(?:[._-][a-z0-9]*)*$"
      }
    },
    "com.amazonaws.ecr#RepositoryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Repository"
      }
    },
    "com.amazonaws.ecr#RepositoryName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 256
        },
        "smithy.api#pattern": "^(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*$"
      }
    },
    "com.amazonaws.ecr#RepositoryNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RepositoryName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#RepositoryNotEmptyException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository contains images. To delete a repository that contains images,\n            you must force the deletion with the <code>force</code> parameter.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#RepositoryNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository could not be found. Check the spelling of the specified\n            repository and ensure that you are performing operations on the correct registry.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#RepositoryPolicyNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository and registry combination does not have an associated\n            repository policy.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#RepositoryPolicyText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10240
        }
      }
    },
    "com.amazonaws.ecr#RepositoryScanningConfiguration": {
      "type": "structure",
      "members": {
        "repositoryArn": {
          "target": "com.amazonaws.ecr#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the repository.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "scanOnPush": {
          "target": "com.amazonaws.ecr#ScanOnPushFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Whether or not scan on push is configured for the repository.</p>"
          }
        },
        "scanFrequency": {
          "target": "com.amazonaws.ecr#ScanFrequency",
          "traits": {
            "smithy.api#documentation": "<p>The scan frequency for the repository.</p>"
          }
        },
        "appliedScanFilters": {
          "target": "com.amazonaws.ecr#ScanningRepositoryFilterList",
          "traits": {
            "smithy.api#documentation": "<p>The scan filters applied to the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of the scanning configuration for a repository.</p>"
      }
    },
    "com.amazonaws.ecr#RepositoryScanningConfigurationFailure": {
      "type": "structure",
      "members": {
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecr#ScanningConfigurationFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The failure code.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.ecr#ScanningConfigurationFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the failure.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details about any failures associated with the scanning configuration of a\n            repository.</p>"
      }
    },
    "com.amazonaws.ecr#RepositoryScanningConfigurationFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RepositoryScanningConfigurationFailure"
      }
    },
    "com.amazonaws.ecr#RepositoryScanningConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RepositoryScanningConfiguration"
      }
    },
    "com.amazonaws.ecr#Resource": {
      "type": "structure",
      "members": {
        "details": {
          "target": "com.amazonaws.ecr#ResourceDetails",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details about the resource involved in a finding.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.ecr#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the resource.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ecr#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The tags attached to the resource.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.ecr#Type",
          "traits": {
            "smithy.api#documentation": "<p>The type of resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about the resource involved in a finding.</p>"
      }
    },
    "com.amazonaws.ecr#ResourceDetails": {
      "type": "structure",
      "members": {
        "awsEcrContainerImage": {
          "target": "com.amazonaws.ecr#AwsEcrContainerImageDetails",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details about the Amazon ECR container image involved in the\n            finding.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about the resource involved in the finding.</p>"
      }
    },
    "com.amazonaws.ecr#ResourceId": {
      "type": "string"
    },
    "com.amazonaws.ecr#ResourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Resource"
      }
    },
    "com.amazonaws.ecr#ScanFrequency": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SCAN_ON_PUSH",
            "name": "SCAN_ON_PUSH"
          },
          {
            "value": "CONTINUOUS_SCAN",
            "name": "CONTINUOUS_SCAN"
          },
          {
            "value": "MANUAL",
            "name": "MANUAL"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ScanNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image scan could not be found. Ensure that image scanning is enabled on\n            the repository and try again.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#ScanOnPushFlag": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ecr#ScanStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "IN_PROGRESS",
            "name": "IN_PROGRESS"
          },
          {
            "value": "COMPLETE",
            "name": "COMPLETE"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "UNSUPPORTED_IMAGE",
            "name": "UNSUPPORTED_IMAGE"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "SCAN_ELIGIBILITY_EXPIRED",
            "name": "SCAN_ELIGIBILITY_EXPIRED"
          },
          {
            "value": "FINDINGS_UNAVAILABLE",
            "name": "FINDINGS_UNAVAILABLE"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ScanStatusDescription": {
      "type": "string"
    },
    "com.amazonaws.ecr#ScanTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#ScanType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "BASIC",
            "name": "BASIC"
          },
          {
            "value": "ENHANCED",
            "name": "ENHANCED"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ScanningConfigurationFailureCode": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "REPOSITORY_NOT_FOUND",
            "name": "REPOSITORY_NOT_FOUND"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ScanningConfigurationFailureReason": {
      "type": "string"
    },
    "com.amazonaws.ecr#ScanningConfigurationRepositoryNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#RepositoryName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 25
        }
      }
    },
    "com.amazonaws.ecr#ScanningRepositoryFilter": {
      "type": "structure",
      "members": {
        "filter": {
          "target": "com.amazonaws.ecr#ScanningRepositoryFilterValue",
          "traits": {
            "smithy.api#documentation": "<p>The filter to use when scanning.</p>",
            "smithy.api#required": {}
          }
        },
        "filterType": {
          "target": "com.amazonaws.ecr#ScanningRepositoryFilterType",
          "traits": {
            "smithy.api#documentation": "<p>The type associated with the filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of a scanning repository filter. For more information on how to use\n            filters, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html#image-scanning-filters\">Using\n                filters</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#ScanningRepositoryFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#ScanningRepositoryFilter"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecr#ScanningRepositoryFilterType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "WILDCARD",
            "name": "WILDCARD"
          }
        ]
      }
    },
    "com.amazonaws.ecr#ScanningRepositoryFilterValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[a-z0-9*](?:[._\\-/a-z0-9*]?[a-z0-9*]+)*$"
      }
    },
    "com.amazonaws.ecr#Score": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.ecr#ScoreDetails": {
      "type": "structure",
      "members": {
        "cvss": {
          "target": "com.amazonaws.ecr#CvssScoreDetails",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains details about the CVSS score given to a finding.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the Amazon Inspector score given to a finding.</p>"
      }
    },
    "com.amazonaws.ecr#ScoringVector": {
      "type": "string"
    },
    "com.amazonaws.ecr#ServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>These errors are usually caused by a server-side issue.</p>",
        "smithy.api#error": "server"
      }
    },
    "com.amazonaws.ecr#SetRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#SetRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#SetRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Applies a repository policy to the specified repository to control access permissions.\n            For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html\">Amazon ECR Repository\n                policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#SetRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to receive the policy.</p>",
            "smithy.api#required": {}
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text to apply to the repository. For more information, see\n                <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html\">Amazon ECR repository\n                policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "com.amazonaws.ecr#ForceFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>If the policy you are attempting to set on a repository policy would prevent you from\n            setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental\n            repository lock outs.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#SetRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecr#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text applied to the repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#Severity": {
      "type": "string"
    },
    "com.amazonaws.ecr#SeverityCount": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ecr#Source": {
      "type": "string"
    },
    "com.amazonaws.ecr#SourceLayerHash": {
      "type": "string"
    },
    "com.amazonaws.ecr#StartImageScan": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#StartImageScanRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#StartImageScanResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#ImageNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#UnsupportedImageTypeException"
        },
        {
          "target": "com.amazonaws.ecr#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts an image vulnerability scan. An image scan can only be started once per 24\n            hours on an individual image. This limit includes if an image was scanned on initial\n            push. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html\">Image scanning</a> in the\n                <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecr#StartImageScanRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository in\n            which to start an image scan request. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that contains the images to scan.</p>",
            "smithy.api#required": {}
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier",
          "traits": {
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#StartImageScanResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecr#ImageIdentifier"
        },
        "imageScanStatus": {
          "target": "com.amazonaws.ecr#ImageScanStatus",
          "traits": {
            "smithy.api#documentation": "<p>The current state of the scan.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#StartLifecyclePolicyPreview": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#StartLifecyclePolicyPreviewRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#StartLifecyclePolicyPreviewResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#LifecyclePolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewInProgressException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a preview of a lifecycle policy for the specified repository. This allows you\n            to see the results before associating the lifecycle policy with the repository.</p>"
      }
    },
    "com.amazonaws.ecr#StartLifecyclePolicyPreviewRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry that contains the repository.\n            If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to be evaluated.</p>",
            "smithy.api#required": {}
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The policy to be evaluated against. If you do not specify a policy, the current policy\n            for the repository is used.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#StartLifecyclePolicyPreviewResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "lifecyclePolicyText": {
          "target": "com.amazonaws.ecr#LifecyclePolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.ecr#LifecyclePolicyPreviewStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the lifecycle policy preview request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#Status": {
      "type": "string"
    },
    "com.amazonaws.ecr#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.ecr#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label\n            that acts like a category for more specific tag values.</p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.ecr#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>A <code>value</code> acts as a descriptor within a tag category (key).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The metadata to apply to a resource to help you categorize and organize them. Each tag\n            consists of a key and a value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have\n            a maximum length of 256 characters.</p>"
      }
    },
    "com.amazonaws.ecr#TagKey": {
      "type": "string"
    },
    "com.amazonaws.ecr#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#TagKey"
      }
    },
    "com.amazonaws.ecr#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#Tag"
      }
    },
    "com.amazonaws.ecr#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds specified tags to a resource with the specified ARN. Existing tags on a resource\n            are not changed if they are not specified in the request parameters.</p>"
      }
    },
    "com.amazonaws.ecr#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecr#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the the resource to which to add tags. Currently, the only supported\n            resource is an Amazon ECR repository.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ecr#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the resource. A tag is an array of key-value pairs.\n            Tag keys can have a maximum character length of 128 characters, and tag values can have\n            a maximum length of 256 characters.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#TagStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "TAGGED",
            "name": "TAGGED"
          },
          {
            "value": "UNTAGGED",
            "name": "UNTAGGED"
          },
          {
            "value": "ANY",
            "name": "ANY"
          }
        ]
      }
    },
    "com.amazonaws.ecr#TagValue": {
      "type": "string"
    },
    "com.amazonaws.ecr#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.ecr#TagKey"
      },
      "value": {
        "target": "com.amazonaws.ecr#TagValue"
      }
    },
    "com.amazonaws.ecr#Title": {
      "type": "string"
    },
    "com.amazonaws.ecr#TooManyTagsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The list of tags on the repository is over the limit. The maximum number of tags that\n            can be applied to a repository is 50.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#Type": {
      "type": "string"
    },
    "com.amazonaws.ecr#UnsupportedImageTypeException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image is of a type that cannot be scanned.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#UnsupportedUpstreamRegistryException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified upstream registry isn't supported.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes specified tags from a resource.</p>"
      }
    },
    "com.amazonaws.ecr#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecr#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource from which to remove tags. Currently, the only supported\n            resource is an Amazon ECR repository.</p>",
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.ecr#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>The keys of the tags to be removed.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#UntagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.ecr#UploadId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      }
    },
    "com.amazonaws.ecr#UploadLayerPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecr#UploadLayerPartRequest"
      },
      "output": {
        "target": "com.amazonaws.ecr#UploadLayerPartResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecr#InvalidLayerPartException"
        },
        {
          "target": "com.amazonaws.ecr#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecr#KmsException"
        },
        {
          "target": "com.amazonaws.ecr#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecr#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecr#ServerException"
        },
        {
          "target": "com.amazonaws.ecr#UploadNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Uploads an image layer part to Amazon ECR.</p>\n        <p>When an image is pushed, each new image layer is uploaded in parts. The maximum size\n            of each image layer part can be 20971520 bytes (or about 20MB). The UploadLayerPart API\n            is called once per each new image layer part.</p>\n        <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by\n        customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecr#UploadLayerPartRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID associated with the registry to which you are uploading layer\n            parts. If you do not specify a registry, the default registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to which you are uploading layer parts.</p>",
            "smithy.api#required": {}
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to\n            associate with the layer part upload.</p>",
            "smithy.api#required": {}
          }
        },
        "partFirstByte": {
          "target": "com.amazonaws.ecr#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The position of the first byte of the layer part witin the overall image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "partLastByte": {
          "target": "com.amazonaws.ecr#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The position of the last byte of the layer part within the overall image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "layerPartBlob": {
          "target": "com.amazonaws.ecr#LayerPartBlob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded layer part payload.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.ecr#UploadLayerPartResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecr#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecr#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name associated with the request.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecr#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID associated with the request.</p>"
          }
        },
        "lastByteReceived": {
          "target": "com.amazonaws.ecr#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The integer value of the last byte received in the request.</p>"
          }
        }
      }
    },
    "com.amazonaws.ecr#UploadNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message associated with the exception.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The upload could not be found, or the specified upload ID is not valid for this\n            repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecr#Url": {
      "type": "string"
    },
    "com.amazonaws.ecr#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecr#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>There was an exception validating this request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.ecr#Version": {
      "type": "string"
    },
    "com.amazonaws.ecr#VulnerabilityId": {
      "type": "string"
    },
    "com.amazonaws.ecr#VulnerabilitySourceUpdateTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecr#VulnerablePackage": {
      "type": "structure",
      "members": {
        "arch": {
          "target": "com.amazonaws.ecr#Arch",
          "traits": {
            "smithy.api#documentation": "<p>The architecture of the vulnerable package.</p>"
          }
        },
        "epoch": {
          "target": "com.amazonaws.ecr#Epoch",
          "traits": {
            "smithy.api#documentation": "<p>The epoch of the vulnerable package.</p>"
          }
        },
        "filePath": {
          "target": "com.amazonaws.ecr#FilePath",
          "traits": {
            "smithy.api#documentation": "<p>The file path of the vulnerable package.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.ecr#VulnerablePackageName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the vulnerable package.</p>"
          }
        },
        "packageManager": {
          "target": "com.amazonaws.ecr#PackageManager",
          "traits": {
            "smithy.api#documentation": "<p>The package manager of the vulnerable package.</p>"
          }
        },
        "release": {
          "target": "com.amazonaws.ecr#Release",
          "traits": {
            "smithy.api#documentation": "<p>The release of the vulnerable package.</p>"
          }
        },
        "sourceLayerHash": {
          "target": "com.amazonaws.ecr#SourceLayerHash",
          "traits": {
            "smithy.api#documentation": "<p>The source layer hash of the vulnerable package.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.ecr#Version",
          "traits": {
            "smithy.api#documentation": "<p>The version of the vulnerable package.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information on the vulnerable package identified by a finding.</p>"
      }
    },
    "com.amazonaws.ecr#VulnerablePackageName": {
      "type": "string"
    },
    "com.amazonaws.ecr#VulnerablePackagesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecr#VulnerablePackage"
      }
    }
  }
}