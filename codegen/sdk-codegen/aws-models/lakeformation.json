{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.lakeformation#AWSLakeFormation": {
      "type": "service",
      "version": "2017-03-31",
      "operations": [
        {
          "target": "com.amazonaws.lakeformation#AddLFTagsToResource"
        },
        {
          "target": "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAML"
        },
        {
          "target": "com.amazonaws.lakeformation#BatchGrantPermissions"
        },
        {
          "target": "com.amazonaws.lakeformation#BatchRevokePermissions"
        },
        {
          "target": "com.amazonaws.lakeformation#CancelTransaction"
        },
        {
          "target": "com.amazonaws.lakeformation#CommitTransaction"
        },
        {
          "target": "com.amazonaws.lakeformation#CreateDataCellsFilter"
        },
        {
          "target": "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfiguration"
        },
        {
          "target": "com.amazonaws.lakeformation#CreateLakeFormationOptIn"
        },
        {
          "target": "com.amazonaws.lakeformation#CreateLFTag"
        },
        {
          "target": "com.amazonaws.lakeformation#DeleteDataCellsFilter"
        },
        {
          "target": "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfiguration"
        },
        {
          "target": "com.amazonaws.lakeformation#DeleteLakeFormationOptIn"
        },
        {
          "target": "com.amazonaws.lakeformation#DeleteLFTag"
        },
        {
          "target": "com.amazonaws.lakeformation#DeleteObjectsOnCancel"
        },
        {
          "target": "com.amazonaws.lakeformation#DeregisterResource"
        },
        {
          "target": "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfiguration"
        },
        {
          "target": "com.amazonaws.lakeformation#DescribeResource"
        },
        {
          "target": "com.amazonaws.lakeformation#DescribeTransaction"
        },
        {
          "target": "com.amazonaws.lakeformation#ExtendTransaction"
        },
        {
          "target": "com.amazonaws.lakeformation#GetDataCellsFilter"
        },
        {
          "target": "com.amazonaws.lakeformation#GetDataLakePrincipal"
        },
        {
          "target": "com.amazonaws.lakeformation#GetDataLakeSettings"
        },
        {
          "target": "com.amazonaws.lakeformation#GetEffectivePermissionsForPath"
        },
        {
          "target": "com.amazonaws.lakeformation#GetLFTag"
        },
        {
          "target": "com.amazonaws.lakeformation#GetQueryState"
        },
        {
          "target": "com.amazonaws.lakeformation#GetQueryStatistics"
        },
        {
          "target": "com.amazonaws.lakeformation#GetResourceLFTags"
        },
        {
          "target": "com.amazonaws.lakeformation#GetTableObjects"
        },
        {
          "target": "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentials"
        },
        {
          "target": "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentials"
        },
        {
          "target": "com.amazonaws.lakeformation#GetWorkUnitResults"
        },
        {
          "target": "com.amazonaws.lakeformation#GetWorkUnits"
        },
        {
          "target": "com.amazonaws.lakeformation#GrantPermissions"
        },
        {
          "target": "com.amazonaws.lakeformation#ListDataCellsFilter"
        },
        {
          "target": "com.amazonaws.lakeformation#ListLakeFormationOptIns"
        },
        {
          "target": "com.amazonaws.lakeformation#ListLFTags"
        },
        {
          "target": "com.amazonaws.lakeformation#ListPermissions"
        },
        {
          "target": "com.amazonaws.lakeformation#ListResources"
        },
        {
          "target": "com.amazonaws.lakeformation#ListTableStorageOptimizers"
        },
        {
          "target": "com.amazonaws.lakeformation#ListTransactions"
        },
        {
          "target": "com.amazonaws.lakeformation#PutDataLakeSettings"
        },
        {
          "target": "com.amazonaws.lakeformation#RegisterResource"
        },
        {
          "target": "com.amazonaws.lakeformation#RemoveLFTagsFromResource"
        },
        {
          "target": "com.amazonaws.lakeformation#RevokePermissions"
        },
        {
          "target": "com.amazonaws.lakeformation#SearchDatabasesByLFTags"
        },
        {
          "target": "com.amazonaws.lakeformation#SearchTablesByLFTags"
        },
        {
          "target": "com.amazonaws.lakeformation#StartQueryPlanning"
        },
        {
          "target": "com.amazonaws.lakeformation#StartTransaction"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateDataCellsFilter"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfiguration"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateLFTag"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateResource"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateTableObjects"
        },
        {
          "target": "com.amazonaws.lakeformation#UpdateTableStorageOptimizer"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "LakeFormation",
          "arnNamespace": "lakeformation",
          "cloudFormationName": "LakeFormation",
          "cloudTrailEventSource": "lakeformation.amazonaws.com",
          "endpointPrefix": "lakeformation"
        },
        "aws.auth#sigv4": {
          "name": "lakeformation"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<fullname>Lake Formation</fullname>\n         <p>Defines the public endpoint for the Lake Formation service.</p>",
        "smithy.api#title": "AWS Lake Formation",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://lakeformation-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://lakeformation-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://lakeformation.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://lakeformation.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-northeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://lakeformation.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.lakeformation#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Access to a resource was denied.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.lakeformation#AccessKeyIdString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#AddLFTagsToResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#AddLFTagsToResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#AddLFTagsToResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Attaches one or more LF-tags to an existing resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/AddLFTagsToResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#AddLFTagsToResourceRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The database, table, or column resource to which to attach an LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "LFTags": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>The LF-tags to attach to the resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#AddLFTagsToResourceResponse": {
      "type": "structure",
      "members": {
        "Failures": {
          "target": "com.amazonaws.lakeformation#LFTagErrors",
          "traits": {
            "smithy.api#documentation": "<p>A list of failures to tag the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#AddObjectInput": {
      "type": "structure",
      "members": {
        "Uri": {
          "target": "com.amazonaws.lakeformation#URI",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 location of the object.</p>",
            "smithy.api#required": {}
          }
        },
        "ETag": {
          "target": "com.amazonaws.lakeformation#ETagString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation and used to identify changes to the underlying data.</p>",
            "smithy.api#required": {}
          }
        },
        "Size": {
          "target": "com.amazonaws.lakeformation#ObjectSize",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The size of the Amazon S3 object in bytes.</p>",
            "smithy.api#required": {}
          }
        },
        "PartitionValues": {
          "target": "com.amazonaws.lakeformation#PartitionValuesList",
          "traits": {
            "smithy.api#documentation": "<p>A list of partition values for the object. A value must be specified for each partition key associated with the table.</p>\n         <p>The supported data types are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss\"), string and decimal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A new object to add to the governed table.</p>"
      }
    },
    "com.amazonaws.lakeformation#AdditionalContextMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lakeformation#ContextKey"
      },
      "value": {
        "target": "com.amazonaws.lakeformation#ContextValue"
      }
    },
    "com.amazonaws.lakeformation#AllRowsWildcard": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>A structure that you pass to indicate you want all rows in a filter. </p>"
      }
    },
    "com.amazonaws.lakeformation#AlreadyExistsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource to be created or added already exists.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#ApplicationArn": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ApplicationStatus": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAML": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAMLRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAMLResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Allows a caller to assume an IAM role decorated as the SAML user specified in the SAML assertion included in the request. This decoration allows Lake Formation to enforce access policies against the SAML users and groups.  This API operation requires SAML federation setup in the caller’s account as it can only be called with valid SAML assertions.\n      Lake Formation does not scope down the permission of the assumed role.  All permissions attached to the role via the SAML federation setup will be included in the role session.\n    </p>\n         <p>\n      This decorated role is expected to access data in Amazon S3 by getting temporary access from Lake Formation which is authorized via the virtual API <code>GetDataAccess</code>.  Therefore, all SAML roles that can be assumed via <code>AssumeDecoratedRoleWithSAML</code> must at a minimum include <code>lakeformation:GetDataAccess</code> in their role policies.  A typical IAM policy attached to such a role would look as follows:\n    </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/AssumeDecoratedRoleWithSAML",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAMLRequest": {
      "type": "structure",
      "members": {
        "SAMLAssertion": {
          "target": "com.amazonaws.lakeformation#SAMLAssertionString",
          "traits": {
            "smithy.api#documentation": "<p>A SAML assertion consisting of an assertion statement for the user who needs temporary credentials. This must match the SAML assertion that was issued to IAM. This must be Base64 encoded.</p>",
            "smithy.api#required": {}
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.lakeformation#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The role that represents an IAM principal whose scope down policy allows it to call credential vending APIs such as <code>GetTemporaryTableCredentials</code>. The caller must also have iam:PassRole permission on this role.  </p>",
            "smithy.api#required": {}
          }
        },
        "PrincipalArn": {
          "target": "com.amazonaws.lakeformation#IAMSAMLProviderArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.</p>",
            "smithy.api#required": {}
          }
        },
        "DurationSeconds": {
          "target": "com.amazonaws.lakeformation#CredentialTimeoutDurationSecondInteger",
          "traits": {
            "smithy.api#documentation": "<p>The time period, between 900 and 43,200 seconds, for the timeout of the temporary credentials.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#AssumeDecoratedRoleWithSAMLResponse": {
      "type": "structure",
      "members": {
        "AccessKeyId": {
          "target": "com.amazonaws.lakeformation#AccessKeyIdString",
          "traits": {
            "smithy.api#documentation": "<p>The access key ID for the temporary credentials. (The access key consists of an access key ID and a secret key).</p>"
          }
        },
        "SecretAccessKey": {
          "target": "com.amazonaws.lakeformation#SecretAccessKeyString",
          "traits": {
            "smithy.api#documentation": "<p>The secret key for the temporary credentials. (The access key consists of an access key ID and a secret key).</p>"
          }
        },
        "SessionToken": {
          "target": "com.amazonaws.lakeformation#SessionTokenString",
          "traits": {
            "smithy.api#documentation": "<p>The session token for the temporary credentials.</p>"
          }
        },
        "Expiration": {
          "target": "com.amazonaws.lakeformation#ExpirationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the temporary credentials expire.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#AuditContext": {
      "type": "structure",
      "members": {
        "AdditionalAuditContext": {
          "target": "com.amazonaws.lakeformation#AuditContextString",
          "traits": {
            "smithy.api#documentation": "<p>The filter engine can populate the 'AdditionalAuditContext' information with the request ID for you to track. This information will be displayed in CloudTrail log in your account.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure used to include auditing information on the privileged API. </p>"
      }
    },
    "com.amazonaws.lakeformation#AuditContextString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2048
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#AuthorizedSessionTagValueList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#NameString"
      }
    },
    "com.amazonaws.lakeformation#BatchGrantPermissions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#BatchGrantPermissionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#BatchGrantPermissionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Batch operation to grant permissions to the principal.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/BatchGrantPermissions",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#BatchGrantPermissionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Entries": {
          "target": "com.amazonaws.lakeformation#BatchPermissionsRequestEntryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of up to 20 entries for resource permissions to be granted by batch operation to the principal.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#BatchGrantPermissionsResponse": {
      "type": "structure",
      "members": {
        "Failures": {
          "target": "com.amazonaws.lakeformation#BatchPermissionsFailureList",
          "traits": {
            "smithy.api#documentation": "<p>A list of failures to grant permissions to the resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#BatchPermissionsFailureEntry": {
      "type": "structure",
      "members": {
        "RequestEntry": {
          "target": "com.amazonaws.lakeformation#BatchPermissionsRequestEntry",
          "traits": {
            "smithy.api#documentation": "<p>An identifier for an entry of the batch request.</p>"
          }
        },
        "Error": {
          "target": "com.amazonaws.lakeformation#ErrorDetail",
          "traits": {
            "smithy.api#documentation": "<p>An error message that applies to the failure of the entry.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of failures when performing a batch grant or batch revoke operation.</p>"
      }
    },
    "com.amazonaws.lakeformation#BatchPermissionsFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#BatchPermissionsFailureEntry"
      }
    },
    "com.amazonaws.lakeformation#BatchPermissionsRequestEntry": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.lakeformation#Identifier",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier for the batch permissions request entry.</p>",
            "smithy.api#required": {}
          }
        },
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The principal to be granted a permission.</p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The resource to which the principal is to be granted a permission.</p>"
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>The permissions to be granted.</p>"
          }
        },
        "PermissionsWithGrantOption": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Indicates if the option to pass permissions is granted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A permission to a resource granted by batch operation to the principal.</p>"
      }
    },
    "com.amazonaws.lakeformation#BatchPermissionsRequestEntryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#BatchPermissionsRequestEntry"
      }
    },
    "com.amazonaws.lakeformation#BatchRevokePermissions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#BatchRevokePermissionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#BatchRevokePermissionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Batch operation to revoke permissions from the principal.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/BatchRevokePermissions",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#BatchRevokePermissionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Entries": {
          "target": "com.amazonaws.lakeformation#BatchPermissionsRequestEntryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#BatchRevokePermissionsResponse": {
      "type": "structure",
      "members": {
        "Failures": {
          "target": "com.amazonaws.lakeformation#BatchPermissionsFailureList",
          "traits": {
            "smithy.api#documentation": "<p>A list of failures to revoke permissions to the resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#BooleanNullable": {
      "type": "boolean"
    },
    "com.amazonaws.lakeformation#CancelTransaction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CancelTransactionRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CancelTransactionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommitInProgressException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommittedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Attempts to cancel the specified transaction. Returns an exception if the transaction was previously committed.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CancelTransaction",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CancelTransactionRequest": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction to cancel.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CancelTransactionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#CatalogIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#CatalogResource": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>A structure for the catalog object.</p>"
      }
    },
    "com.amazonaws.lakeformation#ColumnLFTag": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of a column resource.</p>"
          }
        },
        "LFTags": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>The LF-tags attached to a column resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing the name of a column resource and the LF-tags attached to it.</p>"
      }
    },
    "com.amazonaws.lakeformation#ColumnLFTagsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#ColumnLFTag"
      }
    },
    "com.amazonaws.lakeformation#ColumnNames": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#NameString"
      }
    },
    "com.amazonaws.lakeformation#ColumnWildcard": {
      "type": "structure",
      "members": {
        "ExcludedColumnNames": {
          "target": "com.amazonaws.lakeformation#ColumnNames",
          "traits": {
            "smithy.api#documentation": "<p>Excludes column names. Any column with this name will be excluded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A wildcard object, consisting of an optional list of excluded column names or indexes.</p>"
      }
    },
    "com.amazonaws.lakeformation#CommitTransaction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CommitTransactionRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CommitTransactionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCanceledException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Attempts to commit the specified transaction. Returns an exception if the transaction was previously aborted. This API action is idempotent if called multiple times for the same transaction.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CommitTransaction",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CommitTransactionRequest": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction to commit.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CommitTransactionResponse": {
      "type": "structure",
      "members": {
        "TransactionStatus": {
          "target": "com.amazonaws.lakeformation#TransactionStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the transaction.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ComparisonOperator": {
      "type": "enum",
      "members": {
        "EQ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EQ"
          }
        },
        "NE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NE"
          }
        },
        "LE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LE"
          }
        },
        "LT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LT"
          }
        },
        "GE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GE"
          }
        },
        "GT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GT"
          }
        },
        "CONTAINS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONTAINS"
          }
        },
        "NOT_CONTAINS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NOT_CONTAINS"
          }
        },
        "BEGINS_WITH": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BEGINS_WITH"
          }
        },
        "IN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IN"
          }
        },
        "BETWEEN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BETWEEN"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#ConcurrentModificationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Two processes are trying to modify a resource simultaneously.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#ContextKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.lakeformation#ContextValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.lakeformation#CreateDataCellsFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CreateDataCellsFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CreateDataCellsFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#AlreadyExistsException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNumberLimitExceededException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a data cell filter to allow one to grant access to certain columns on certain rows.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateDataCellsFilter",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CreateDataCellsFilterRequest": {
      "type": "structure",
      "members": {
        "TableData": {
          "target": "com.amazonaws.lakeformation#DataCellsFilter",
          "traits": {
            "smithy.api#documentation": "<p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CreateDataCellsFilterResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLFTag": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CreateLFTagRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CreateLFTagResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNumberLimitExceededException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an LF-tag with the specified name and values.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateLFTag",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CreateLFTagRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "TagValues": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of possible values an attribute can take.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLFTagResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#AlreadyExistsException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an IAM Identity Center connection with Lake Formation to allow IAM Identity Center users and groups to access Data Catalog resources.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateLakeFormationIdentityCenterConfiguration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfigurationRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the\n         persistent metadata store. It contains database definitions, table definitions, view\n         definitions, and other control information to manage your Lake Formation\n         environment.</p>"
          }
        },
        "InstanceArn": {
          "target": "com.amazonaws.lakeformation#IdentityCenterInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the IAM Identity Center instance for which the operation will be executed.\n         For more information about ARNs, see Amazon Resource Names (ARNs) and Amazon Web Services Service\n         Namespaces in the Amazon Web Services General Reference.</p>"
          }
        },
        "ExternalFiltering": {
          "target": "com.amazonaws.lakeformation#ExternalFilteringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A list of the account IDs of Amazon Web Services accounts of third-party applications\n         that are allowed to access data managed by Lake Formation.</p>"
          }
        },
        "ShareRecipients": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Amazon Web Services account IDs and/or Amazon Web Services organization/organizational unit ARNs\n         that are allowed to access data managed by Lake Formation. </p>\n         <p>If the <code>ShareRecipients</code> list includes valid values, a resource share is created with the principals you want to have access to the resources.</p>\n         <p>If the <code>ShareRecipients</code> value is null or the list is empty, no resource share is created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationIdentityCenterConfigurationResponse": {
      "type": "structure",
      "members": {
        "ApplicationArn": {
          "target": "com.amazonaws.lakeformation#ApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lake Formation application integrated with IAM Identity Center.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationOptIn": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#CreateLakeFormationOptInRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#CreateLakeFormationOptInResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Enforce Lake Formation permissions for the given databases, tables, and principals.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/CreateLakeFormationOptIn",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationOptInRequest": {
      "type": "structure",
      "members": {
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#CreateLakeFormationOptInResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#CredentialTimeoutDurationSecondInteger": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 900,
          "max": 43200
        }
      }
    },
    "com.amazonaws.lakeformation#DataCellsFilter": {
      "type": "structure",
      "members": {
        "TableCatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the catalog to which the table belongs.</p>",
            "smithy.api#required": {}
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A database in the Glue Data Catalog.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A table in the database.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name given by the user to the data filter cell.</p>",
            "smithy.api#required": {}
          }
        },
        "RowFilter": {
          "target": "com.amazonaws.lakeformation#RowFilter",
          "traits": {
            "smithy.api#documentation": "<p>A PartiQL predicate.</p>"
          }
        },
        "ColumnNames": {
          "target": "com.amazonaws.lakeformation#ColumnNames",
          "traits": {
            "smithy.api#documentation": "<p>A list of column names and/or nested column attributes. When specifying nested attributes, use a qualified dot (.) delimited format such as \"address\".\"zip\". Nested attributes within this list may not exceed a depth of 5.</p>"
          }
        },
        "ColumnWildcard": {
          "target": "com.amazonaws.lakeformation#ColumnWildcard",
          "traits": {
            "smithy.api#documentation": "<p>A wildcard with exclusions.</p>\n         <p>You must specify either a <code>ColumnNames</code> list or the\n      <code>ColumnWildCard</code>. </p>"
          }
        },
        "VersionId": {
          "target": "com.amazonaws.lakeformation#VersionString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the data cells filter version.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure that describes certain columns on certain rows.</p>"
      }
    },
    "com.amazonaws.lakeformation#DataCellsFilterList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#DataCellsFilter"
      }
    },
    "com.amazonaws.lakeformation#DataCellsFilterResource": {
      "type": "structure",
      "members": {
        "TableCatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the catalog to which the table belongs.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A database in the Glue Data Catalog.</p>"
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the table.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data cells filter. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for a data cells filter resource. </p>"
      }
    },
    "com.amazonaws.lakeformation#DataLakePrincipal": {
      "type": "structure",
      "members": {
        "DataLakePrincipalIdentifier": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalString",
          "traits": {
            "smithy.api#documentation": "<p>An identifier for the Lake Formation principal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The Lake Formation principal. Supported principals are IAM users\n      or IAM roles.</p>"
      }
    },
    "com.amazonaws.lakeformation#DataLakePrincipalList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#DataLakePrincipal"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 30
        }
      }
    },
    "com.amazonaws.lakeformation#DataLakePrincipalString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.lakeformation#DataLakeResourceType": {
      "type": "enum",
      "members": {
        "CATALOG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CATALOG"
          }
        },
        "DATABASE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DATABASE"
          }
        },
        "TABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TABLE"
          }
        },
        "DATA_LOCATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DATA_LOCATION"
          }
        },
        "LF_TAG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LF_TAG"
          }
        },
        "LF_TAG_POLICY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LF_TAG_POLICY"
          }
        },
        "LF_TAG_POLICY_DATABASE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LF_TAG_POLICY_DATABASE"
          }
        },
        "LF_TAG_POLICY_TABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LF_TAG_POLICY_TABLE"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#DataLakeSettings": {
      "type": "structure",
      "members": {
        "DataLakeAdmins": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Lake Formation principals. Supported principals are IAM users or IAM roles.</p>"
          }
        },
        "ReadOnlyAdmins": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Lake Formation principals with only view access to the resources, without the ability to make changes. Supported principals are IAM users or IAM roles.</p>"
          }
        },
        "CreateDatabaseDefaultPermissions": {
          "target": "com.amazonaws.lakeformation#PrincipalPermissionsList",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether access control on newly created database is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\n         <p>A null value indicates access control by Lake Formation permissions. A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access control by IAM permissions. This is referred to as the setting \"Use only IAM access control,\" and is for backward compatibility with the Glue permission model implemented by IAM permissions.</p>\n         <p>The only permitted values are an empty array or an array that contains a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\">Changing the Default Security Settings for Your Data Lake</a>.</p>"
          }
        },
        "CreateTableDefaultPermissions": {
          "target": "com.amazonaws.lakeformation#PrincipalPermissionsList",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether access control on newly created table is managed by Lake Formation permissions or exclusively by IAM permissions.</p>\n         <p>A null value indicates access control by Lake Formation permissions. A value that assigns ALL to IAM_ALLOWED_PRINCIPALS indicates access control by IAM permissions. This is referred to as the setting \"Use only IAM access control,\" and is for backward compatibility with the Glue permission model implemented by IAM permissions.</p>\n         <p>The only permitted values are an empty array or an array that contains a single JSON object that grants ALL to IAM_ALLOWED_PRINCIPALS.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html\">Changing the Default Security Settings for Your Data Lake</a>.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.lakeformation#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map that provides an additional configuration on your data lake. CROSS_ACCOUNT_VERSION is the key you can configure in the Parameters field. Accepted values for the CrossAccountVersion key are 1, 2, 3, and 4.</p>"
          }
        },
        "TrustedResourceOwners": {
          "target": "com.amazonaws.lakeformation#TrustedResourceOwners",
          "traits": {
            "smithy.api#documentation": "<p>A list of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs). The user ARNs can be logged in the resource owner's CloudTrail log.</p>\n         <p>You may want to specify this property when you are in a high-trust boundary, such as the same team or company. </p>"
          }
        },
        "AllowExternalDataFiltering": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether to allow Amazon EMR clusters to access data managed by Lake Formation. </p>\n         <p>If true, you allow Amazon EMR clusters to access data in Amazon S3 locations that are registered with Lake Formation.</p>\n         <p>If false or null, no Amazon EMR clusters will be able to access data in Amazon S3 locations that are registered with Lake Formation.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/initial-LF-setup.html#external-data-filter\">(Optional) Allow external data filtering</a>.</p>"
          }
        },
        "AllowFullTableExternalDataAccess": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether to allow a third-party query engine to get data access credentials without session tags when a caller has full data access permissions.</p>"
          }
        },
        "ExternalDataFilteringAllowList": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.></p>"
          }
        },
        "AuthorizedSessionTagValueList": {
          "target": "com.amazonaws.lakeformation#AuthorizedSessionTagValueList",
          "traits": {
            "smithy.api#documentation": "<p>Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user's role while assuming it. Lake Formation will publish the acceptable key-value pair, for example key = \"LakeFormationTrustedCaller\" and value = \"TRUE\" and the third party integrator must properly tag the temporary security credentials that will be used to call Lake Formation's administrative APIs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.</p>"
      }
    },
    "com.amazonaws.lakeformation#DataLocationResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.</p>"
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that uniquely identifies the data location resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for a data location object where permissions are granted or revoked. </p>"
      }
    },
    "com.amazonaws.lakeformation#DatabaseLFTagsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#TaggedDatabase"
      }
    },
    "com.amazonaws.lakeformation#DatabaseResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, it is the account ID of the caller.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database resource. Unique to the Data Catalog.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the database object.</p>"
      }
    },
    "com.amazonaws.lakeformation#DateTime": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.lakeformation#DeleteDataCellsFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeleteDataCellsFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeleteDataCellsFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a data cell filter.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteDataCellsFilter",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeleteDataCellsFilterRequest": {
      "type": "structure",
      "members": {
        "TableCatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the catalog to which the table belongs.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A database in the Glue Data Catalog.</p>"
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A table in the database.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name given by the user to the data filter cell.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteDataCellsFilterResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLFTag": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeleteLFTagRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeleteLFTagResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified LF-tag given a key name. If the input parameter tag key was not found, then the operation will throw an exception. When you delete an LF-tag, the <code>LFTagPolicy</code> attached to the LF-tag becomes invalid. If the deleted LF-tag was still assigned to any resource, the tag policy attach to the deleted LF-tag will no longer be applied to the resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteLFTag",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeleteLFTagRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag to delete.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLFTagResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an IAM Identity Center connection with Lake Formation.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteLakeFormationIdentityCenterConfiguration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfigurationRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the\n         persistent metadata store. It contains database definitions, table definitions, view\n         definition, and other control information to manage your Lake Formation environment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationIdentityCenterConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationOptIn": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeleteLakeFormationOptInRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeleteLakeFormationOptInResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Remove the Lake Formation permissions enforcement of the given databases, tables, and principals.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteLakeFormationOptIn",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationOptInRequest": {
      "type": "structure",
      "members": {
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteLakeFormationOptInResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteObjectInput": {
      "type": "structure",
      "members": {
        "Uri": {
          "target": "com.amazonaws.lakeformation#URI",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 location of the object to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "ETag": {
          "target": "com.amazonaws.lakeformation#ETagString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation and used to identify changes to the underlying data.</p>"
          }
        },
        "PartitionValues": {
          "target": "com.amazonaws.lakeformation#PartitionValuesList",
          "traits": {
            "smithy.api#documentation": "<p>A list of partition values for the object. A value must be specified for each partition key associated with the governed table.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object to delete from the governed table.</p>"
      }
    },
    "com.amazonaws.lakeformation#DeleteObjectsOnCancel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeleteObjectsOnCancelRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeleteObjectsOnCancelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNotReadyException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCanceledException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommittedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>For a specific governed table, provides a list of Amazon S3 objects that will be written during the current transaction and that can be automatically deleted\n      if the transaction is canceled. Without this call, no Amazon S3 objects are automatically deleted when a transaction cancels.\n    </p>\n         <p>\n      The Glue ETL library function <code>write_dynamic_frame.from_catalog()</code> includes an option to automatically \n      call <code>DeleteObjectsOnCancel</code> before writes. For more information, see \n      <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/transactions-data-operations.html#rolling-back-writes\">Rolling Back Amazon S3 Writes</a>.\n    </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeleteObjectsOnCancel",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeleteObjectsOnCancelRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The Glue data catalog that contains the governed table. Defaults to the current account ID.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The database that contains the governed table.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the governed table.</p>",
            "smithy.api#required": {}
          }
        },
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>ID of the transaction that the writes occur in.</p>",
            "smithy.api#required": {}
          }
        },
        "Objects": {
          "target": "com.amazonaws.lakeformation#VirtualObjectList",
          "traits": {
            "smithy.api#documentation": "<p>A list of VirtualObject structures, which indicates the Amazon S3 objects to be deleted if the transaction cancels.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeleteObjectsOnCancelResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DeregisterResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DeregisterResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DeregisterResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deregisters the resource as managed by the Data Catalog.</p>\n         <p>When you deregister a path, Lake Formation removes the path from the inline policy attached to your service-linked role.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DeregisterResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DeregisterResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to deregister.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DeregisterResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the instance ARN and application ARN for the connection.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DescribeLakeFormationIdentityCenterConfiguration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfigurationRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeLakeFormationIdentityCenterConfigurationResponse": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.</p>"
          }
        },
        "InstanceArn": {
          "target": "com.amazonaws.lakeformation#IdentityCenterInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the connection.</p>"
          }
        },
        "ApplicationArn": {
          "target": "com.amazonaws.lakeformation#ApplicationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the Lake Formation application integrated with IAM Identity Center.</p>"
          }
        },
        "ExternalFiltering": {
          "target": "com.amazonaws.lakeformation#ExternalFilteringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Indicates if external filtering is enabled.</p>"
          }
        },
        "ShareRecipients": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Amazon Web Services account IDs or Amazon Web Services organization/organizational unit ARNs that\n         are allowed to access data managed by Lake Formation. </p>\n         <p>If the <code>ShareRecipients</code> list includes valid values, a resource share is created with the principals you want to have access to the resources as the <code>ShareRecipients</code>.</p>\n         <p>If the <code>ShareRecipients</code> value is null or the list is empty, no resource share is created.</p>"
          }
        },
        "ResourceShare": {
          "target": "com.amazonaws.lakeformation#RAMResourceShareArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the RAM share.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DescribeResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DescribeResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the current data access role for the given resource registered in Lake Formation.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DescribeResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DescribeResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The resource ARN.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeResourceResponse": {
      "type": "structure",
      "members": {
        "ResourceInfo": {
          "target": "com.amazonaws.lakeformation#ResourceInfo",
          "traits": {
            "smithy.api#documentation": "<p>A structure containing information about an Lake Formation resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeTransaction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#DescribeTransactionRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#DescribeTransactionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the details of a single transaction.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/DescribeTransaction",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#DescribeTransactionRequest": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction for which to return status.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#DescribeTransactionResponse": {
      "type": "structure",
      "members": {
        "TransactionDescription": {
          "target": "com.amazonaws.lakeformation#TransactionDescription",
          "traits": {
            "smithy.api#documentation": "<p>Returns a <code>TransactionDescription</code> object containing information about the transaction.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#DescriptionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2048
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#DetailsMap": {
      "type": "structure",
      "members": {
        "ResourceShare": {
          "target": "com.amazonaws.lakeformation#ResourceShareList",
          "traits": {
            "smithy.api#documentation": "<p>A resource share ARN for a catalog resource shared through RAM.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing the additional details to be returned in the <code>AdditionalDetails</code> attribute of <code>PrincipalResourcePermissions</code>.</p>\n         <p>If a catalog resource is shared through Resource Access Manager (RAM), then there will exist a corresponding RAM resource share ARN.</p>"
      }
    },
    "com.amazonaws.lakeformation#ETagString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}\\p{N}\\p{P}]*$"
      }
    },
    "com.amazonaws.lakeformation#EnableStatus": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#EntityNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A specified entity does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#ErrorDetail": {
      "type": "structure",
      "members": {
        "ErrorCode": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The code associated with this error.</p>"
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.lakeformation#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error.</p>"
      }
    },
    "com.amazonaws.lakeformation#ErrorMessageString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ExecutionStatistics": {
      "type": "structure",
      "members": {
        "AverageExecutionTimeMillis": {
          "target": "com.amazonaws.lakeformation#NumberOfMilliseconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The average time the request took to be executed.</p>"
          }
        },
        "DataScannedBytes": {
          "target": "com.amazonaws.lakeformation#NumberOfBytes",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The amount of data that was scanned in bytes.</p>"
          }
        },
        "WorkUnitsExecutedCount": {
          "target": "com.amazonaws.lakeformation#NumberOfItems",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The number of work units executed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Statistics related to the processing of a query statement.</p>"
      }
    },
    "com.amazonaws.lakeformation#ExpirationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.lakeformation#ExpiredException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error where the query request expired.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 410
      }
    },
    "com.amazonaws.lakeformation#Expression": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#LFTag"
      }
    },
    "com.amazonaws.lakeformation#ExtendTransaction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ExtendTransactionRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ExtendTransactionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCanceledException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommitInProgressException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommittedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Indicates to the service that the specified transaction is still active and should not be treated as idle and aborted.</p>\n         <p>Write transactions that remain idle for a long period are automatically aborted unless explicitly extended.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ExtendTransaction",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#ExtendTransactionRequest": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction to extend.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ExtendTransactionResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ExternalFilteringConfiguration": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.lakeformation#EnableStatus",
          "traits": {
            "smithy.api#documentation": "<p>Allows to enable or disable the third-party applications that are allowed to access data\n         managed by Lake Formation.</p>",
            "smithy.api#required": {}
          }
        },
        "AuthorizedTargets": {
          "target": "com.amazonaws.lakeformation#ScopeTargets",
          "traits": {
            "smithy.api#documentation": "<p>List of third-party application <code>ARNs</code> integrated with Lake Formation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration for enabling external data filtering for third-party applications to\n         access data managed by Lake Formation .</p>"
      }
    },
    "com.amazonaws.lakeformation#FieldNameString": {
      "type": "enum",
      "members": {
        "RESOURCE_ARN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RESOURCE_ARN"
          }
        },
        "ROLE_ARN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROLE_ARN"
          }
        },
        "LAST_MODIFIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAST_MODIFIED"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#FilterCondition": {
      "type": "structure",
      "members": {
        "Field": {
          "target": "com.amazonaws.lakeformation#FieldNameString",
          "traits": {
            "smithy.api#documentation": "<p>The field to filter in the filter condition.</p>"
          }
        },
        "ComparisonOperator": {
          "target": "com.amazonaws.lakeformation#ComparisonOperator",
          "traits": {
            "smithy.api#documentation": "<p>The comparison operator used in the filter condition.</p>"
          }
        },
        "StringValueList": {
          "target": "com.amazonaws.lakeformation#StringValueList",
          "traits": {
            "smithy.api#documentation": "<p>A string with values used in evaluating the filter condition.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This structure describes the filtering of columns in a table based on a filter condition.</p>"
      }
    },
    "com.amazonaws.lakeformation#FilterConditionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#FilterCondition"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.lakeformation#GetDataCellsFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetDataCellsFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetDataCellsFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a data cells filter.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetDataCellsFilter",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetDataCellsFilterRequest": {
      "type": "structure",
      "members": {
        "TableCatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the catalog to which the table belongs.</p>",
            "smithy.api#required": {}
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A database in the Glue Data Catalog.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>A table in the database.</p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name given by the user to the data filter cell.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetDataCellsFilterResponse": {
      "type": "structure",
      "members": {
        "DataCellsFilter": {
          "target": "com.amazonaws.lakeformation#DataCellsFilter",
          "traits": {
            "smithy.api#documentation": "<p>A structure that describes certain columns on certain rows.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetDataLakePrincipal": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetDataLakePrincipalRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetDataLakePrincipalResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the identity of the invoking principal.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetDataLakePrincipal",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetDataLakePrincipalRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetDataLakePrincipalResponse": {
      "type": "structure",
      "members": {
        "Identity": {
          "target": "com.amazonaws.lakeformation#IdentityString",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier of the invoking principal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetDataLakeSettings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetDataLakeSettingsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetDataLakeSettingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the list of the data lake administrators of a Lake Formation-managed data lake. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetDataLakeSettings",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetDataLakeSettingsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetDataLakeSettingsResponse": {
      "type": "structure",
      "members": {
        "DataLakeSettings": {
          "target": "com.amazonaws.lakeformation#DataLakeSettings",
          "traits": {
            "smithy.api#documentation": "<p>A structure representing a list of Lake Formation principals designated as data lake administrators.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetEffectivePermissionsForPath": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetEffectivePermissionsForPathRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetEffectivePermissionsForPathResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the Lake Formation permissions for a specified table or database resource located\n      at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not return databases and tables if the catalog is encrypted.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetEffectivePermissionsForPath",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#GetEffectivePermissionsForPathRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource for which you want to get permissions.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetEffectivePermissionsForPathResponse": {
      "type": "structure",
      "members": {
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PrincipalResourcePermissionsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the permissions for the specified table or database resource located at the path in Amazon S3.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetLFTag": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetLFTagRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetLFTagResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns an LF-tag definition.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetLFTag",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetLFTagRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetLFTagResponse": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>"
          }
        },
        "TagValues": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of possible values an attribute can take.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetQueryState": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetQueryStateRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetQueryStateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the state of a query previously submitted. Clients are expected to poll <code>GetQueryState</code> to monitor the current state of the planning before retrieving the work units. A query state is only visible to the principal that made the initial call to <code>StartQueryPlanning</code>.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "query-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetQueryState",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetQueryStateRequest": {
      "type": "structure",
      "members": {
        "QueryId": {
          "target": "com.amazonaws.lakeformation#GetQueryStateRequestQueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetQueryStateRequestQueryIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 36
        }
      }
    },
    "com.amazonaws.lakeformation#GetQueryStateResponse": {
      "type": "structure",
      "members": {
        "Error": {
          "target": "com.amazonaws.lakeformation#ErrorMessageString",
          "traits": {
            "smithy.api#documentation": "<p>An error message when the operation fails.</p>"
          }
        },
        "State": {
          "target": "com.amazonaws.lakeformation#QueryStateString",
          "traits": {
            "smithy.api#documentation": "<p>The state of a query previously submitted. The possible states are:</p>\n         <ul>\n            <li>\n               <p>PENDING: the query is pending.</p>\n            </li>\n            <li>\n               <p>WORKUNITS_AVAILABLE: some work units are ready for retrieval and execution.</p>\n            </li>\n            <li>\n               <p>FINISHED: the query planning finished successfully, and all work units are ready for retrieval and execution.</p>\n            </li>\n            <li>\n               <p>ERROR: an error occurred with the query, such as an invalid query ID or a backend error.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the output.</p>",
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetQueryStatistics": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetQueryStatisticsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetQueryStatisticsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ExpiredException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#StatisticsNotReadyYetException"
        },
        {
          "target": "com.amazonaws.lakeformation#ThrottledException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves statistics on the planning and execution of a query.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "query-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetQueryStatistics",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetQueryStatisticsRequest": {
      "type": "structure",
      "members": {
        "QueryId": {
          "target": "com.amazonaws.lakeformation#GetQueryStatisticsRequestQueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetQueryStatisticsRequestQueryIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 36
        }
      }
    },
    "com.amazonaws.lakeformation#GetQueryStatisticsResponse": {
      "type": "structure",
      "members": {
        "ExecutionStatistics": {
          "target": "com.amazonaws.lakeformation#ExecutionStatistics",
          "traits": {
            "smithy.api#documentation": "<p>An <code>ExecutionStatistics</code> structure containing execution statistics.</p>"
          }
        },
        "PlanningStatistics": {
          "target": "com.amazonaws.lakeformation#PlanningStatistics",
          "traits": {
            "smithy.api#documentation": "<p>A <code>PlanningStatistics</code> structure containing query planning statistics.</p>"
          }
        },
        "QuerySubmissionTime": {
          "target": "com.amazonaws.lakeformation#DateTime",
          "traits": {
            "smithy.api#documentation": "<p>The time that the query was submitted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetResourceLFTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetResourceLFTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetResourceLFTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#GlueEncryptionException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the LF-tags applied to a resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetResourceLFTags",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetResourceLFTagsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The database, table, or column resource for which you want to return LF-tags.</p>",
            "smithy.api#required": {}
          }
        },
        "ShowAssignedLFTags": {
          "target": "com.amazonaws.lakeformation#BooleanNullable",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether to show the assigned LF-tags.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetResourceLFTagsResponse": {
      "type": "structure",
      "members": {
        "LFTagOnDatabase": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags applied to a database resource.</p>"
          }
        },
        "LFTagsOnTable": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags applied to a table resource.</p>"
          }
        },
        "LFTagsOnColumns": {
          "target": "com.amazonaws.lakeformation#ColumnLFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags applied to a column resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetTableObjects": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetTableObjectsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetTableObjectsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNotReadyException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCanceledException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommittedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the set of Amazon S3 objects that make up the specified governed table. A transaction ID or timestamp can be specified for time-travel queries.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetTableObjects",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#GetTableObjectsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The catalog containing the governed table. Defaults to the caller’s account.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The database containing the governed table.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The governed table for which to retrieve objects.</p>",
            "smithy.api#required": {}
          }
        },
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction ID at which to read the governed table contents. If this transaction has aborted, an error is returned. If not set, defaults to the most recent committed transaction. Cannot be specified along with <code>QueryAsOfTime</code>.</p>"
          }
        },
        "QueryAsOfTime": {
          "target": "com.amazonaws.lakeformation#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time as of when to read the governed table contents. If not set, the most recent transaction commit time is used. Cannot be specified along with <code>TransactionId</code>.</p>"
          }
        },
        "PartitionPredicate": {
          "target": "com.amazonaws.lakeformation#PredicateString",
          "traits": {
            "smithy.api#documentation": "<p>A predicate to filter the objects returned based on the partition keys defined in the governed table.</p>\n         <ul>\n            <li>\n               <p>The comparison operators supported are: =, >, <, >=, <=</p>\n            </li>\n            <li>\n               <p>The logical operators supported are: AND</p>\n            </li>\n            <li>\n               <p>The data types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss\"), string and decimal.</p>\n            </li>\n         </ul>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how many values to return in a page.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#TokenString",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token if this is not the first call to retrieve these objects.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetTableObjectsResponse": {
      "type": "structure",
      "members": {
        "Objects": {
          "target": "com.amazonaws.lakeformation#PartitionedTableObjectsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of objects organized by partition keys.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#TokenString",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token indicating whether additional data is available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentials": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentialsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentialsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#PermissionTypeMismatchException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>This API is identical to <code>GetTemporaryTableCredentials</code> except that this is used when the target Data Catalog resource is of type Partition.  Lake Formation restricts the permission of the vended credentials with the same scope down policy which restricts access to a single Amazon S3 prefix.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetTemporaryGluePartitionCredentials",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentialsRequest": {
      "type": "structure",
      "members": {
        "TableArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the partitions' table.</p>",
            "smithy.api#required": {}
          }
        },
        "Partition": {
          "target": "com.amazonaws.lakeformation#PartitionValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of partition values identifying a single partition.</p>",
            "smithy.api#required": {}
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request based on the user having been granted a list of specified permissions on the requested resource(s).</p>"
          }
        },
        "DurationSeconds": {
          "target": "com.amazonaws.lakeformation#CredentialTimeoutDurationSecondInteger",
          "traits": {
            "smithy.api#documentation": "<p>The time period, between 900 and 21,600 seconds, for the timeout of the temporary credentials.</p>"
          }
        },
        "AuditContext": {
          "target": "com.amazonaws.lakeformation#AuditContext",
          "traits": {
            "smithy.api#documentation": "<p>A structure representing context to access a resource (column names, query ID, etc).</p>"
          }
        },
        "SupportedPermissionTypes": {
          "target": "com.amazonaws.lakeformation#PermissionTypeList",
          "traits": {
            "smithy.api#documentation": "<p>A list of supported permission types for the partition. Valid values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGluePartitionCredentialsResponse": {
      "type": "structure",
      "members": {
        "AccessKeyId": {
          "target": "com.amazonaws.lakeformation#AccessKeyIdString",
          "traits": {
            "smithy.api#documentation": "<p>The access key ID for the temporary credentials.</p>"
          }
        },
        "SecretAccessKey": {
          "target": "com.amazonaws.lakeformation#SecretAccessKeyString",
          "traits": {
            "smithy.api#documentation": "<p>The secret key for the temporary credentials.</p>"
          }
        },
        "SessionToken": {
          "target": "com.amazonaws.lakeformation#SessionTokenString",
          "traits": {
            "smithy.api#documentation": "<p>The session token for the temporary credentials.</p>"
          }
        },
        "Expiration": {
          "target": "com.amazonaws.lakeformation#ExpirationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the temporary credentials expire.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentials": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentialsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentialsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#PermissionTypeMismatchException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Allows a caller in a secure environment to assume a role with permission to access Amazon S3. In order to vend such credentials, Lake Formation assumes the role associated with a registered location, for example an Amazon S3 bucket, with a scope down policy which restricts the access to a single prefix.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetTemporaryGlueTableCredentials",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentialsRequest": {
      "type": "structure",
      "members": {
        "TableArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The ARN identifying a table in the Data Catalog for the temporary credentials request.</p>",
            "smithy.api#required": {}
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request based on the user having been granted a list of specified permissions on the requested resource(s).</p>"
          }
        },
        "DurationSeconds": {
          "target": "com.amazonaws.lakeformation#CredentialTimeoutDurationSecondInteger",
          "traits": {
            "smithy.api#documentation": "<p>The time period, between 900 and 21,600 seconds, for the timeout of the temporary credentials.</p>"
          }
        },
        "AuditContext": {
          "target": "com.amazonaws.lakeformation#AuditContext",
          "traits": {
            "smithy.api#documentation": "<p>A structure representing context to access a resource (column names, query ID, etc).</p>"
          }
        },
        "SupportedPermissionTypes": {
          "target": "com.amazonaws.lakeformation#PermissionTypeList",
          "traits": {
            "smithy.api#documentation": "<p>A list of supported permission types for the table. Valid values are <code>COLUMN_PERMISSION</code> and <code>CELL_FILTER_PERMISSION</code>.</p>"
          }
        },
        "S3Path": {
          "target": "com.amazonaws.lakeformation#PathString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 path for the table.</p>"
          }
        },
        "QuerySessionContext": {
          "target": "com.amazonaws.lakeformation#QuerySessionContext",
          "traits": {
            "smithy.api#documentation": "<p>A structure used as a protocol between query engines and Lake Formation or Glue. Contains both a Lake Formation generated authorization identifier and information from the request's authorization context.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetTemporaryGlueTableCredentialsResponse": {
      "type": "structure",
      "members": {
        "AccessKeyId": {
          "target": "com.amazonaws.lakeformation#AccessKeyIdString",
          "traits": {
            "smithy.api#documentation": "<p>The access key ID for the temporary credentials.</p>"
          }
        },
        "SecretAccessKey": {
          "target": "com.amazonaws.lakeformation#SecretAccessKeyString",
          "traits": {
            "smithy.api#documentation": "<p>The secret key for the temporary credentials.</p>"
          }
        },
        "SessionToken": {
          "target": "com.amazonaws.lakeformation#SessionTokenString",
          "traits": {
            "smithy.api#documentation": "<p>The session token for the temporary credentials.</p>"
          }
        },
        "Expiration": {
          "target": "com.amazonaws.lakeformation#ExpirationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the temporary credentials expire.</p>"
          }
        },
        "VendedS3Path": {
          "target": "com.amazonaws.lakeformation#PathStringList",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 path for the temporary credentials.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitResults": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetWorkUnitResultsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetWorkUnitResultsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ExpiredException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#ThrottledException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the work units resulting from the query. Work units can be executed in any order and in parallel. </p>",
        "smithy.api#endpoint": {
          "hostPrefix": "data-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetWorkUnitResults",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitResultsRequest": {
      "type": "structure",
      "members": {
        "QueryId": {
          "target": "com.amazonaws.lakeformation#GetWorkUnitResultsRequestQueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation for which to get results.</p>",
            "smithy.api#required": {}
          }
        },
        "WorkUnitId": {
          "target": "com.amazonaws.lakeformation#GetWorkUnitResultsRequestWorkUnitIdLong",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The work unit ID for which to get results. Value generated by enumerating <code>WorkUnitIdMin</code> to <code>WorkUnitIdMax</code> (inclusive) from the <code>WorkUnitRange</code> in the output of <code>GetWorkUnits</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "WorkUnitToken": {
          "target": "com.amazonaws.lakeformation#SyntheticGetWorkUnitResultsRequestWorkUnitTokenString",
          "traits": {
            "smithy.api#documentation": "<p>A work token used to query the execution service. Token output from <code>GetWorkUnits</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitResultsRequestQueryIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 36
        }
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitResultsRequestWorkUnitIdLong": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitResultsResponse": {
      "type": "structure",
      "members": {
        "ResultStream": {
          "target": "com.amazonaws.lakeformation#ResultStream",
          "traits": {
            "smithy.api#default": "",
            "smithy.api#documentation": "<p>Rows returned from the <code>GetWorkUnitResults</code> operation as a stream of Apache Arrow v1.0 messages.</p>",
            "smithy.api#httpPayload": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the output.</p>",
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnits": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GetWorkUnitsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GetWorkUnitsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ExpiredException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#WorkUnitsNotReadyYetException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the work units generated by the <code>StartQueryPlanning</code> operation.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "query-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GetWorkUnits",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "WorkUnitRanges",
          "pageSize": "PageSize"
        }
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is a continuation call.</p>"
          }
        },
        "PageSize": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The size of each page to get in the Amazon Web Services service call. This does not affect the number of items returned in the command's output. Setting a smaller page size results in more calls to the Amazon Web Services service, retrieving fewer items in each call. This can help prevent the Amazon Web Services service calls from timing out.</p>"
          }
        },
        "QueryId": {
          "target": "com.amazonaws.lakeformation#GetWorkUnitsRequestQueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitsRequestQueryIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 36
        }
      }
    },
    "com.amazonaws.lakeformation#GetWorkUnitsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>"
          }
        },
        "QueryId": {
          "target": "com.amazonaws.lakeformation#QueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation.</p>",
            "smithy.api#required": {}
          }
        },
        "WorkUnitRanges": {
          "target": "com.amazonaws.lakeformation#WorkUnitRangeList",
          "traits": {
            "smithy.api#documentation": "<p>A <code>WorkUnitRangeList</code> object that specifies the valid range of work unit IDs for querying the execution service.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the output.</p>",
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#GlueEncryptionException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An encryption operation failed.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#GrantPermissions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#GrantPermissionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#GrantPermissionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.</p>\n         <p>For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/GrantPermissions",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#GrantPermissionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The principal to be granted the permissions on the resource. Supported principals are IAM users or IAM roles, and they are defined by their principal type and their ARN.</p>\n         <p>Note that if you define a resource with a particular ARN, then later delete, and recreate a resource with that same ARN, the resource maintains the permissions already granted. </p>",
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The resource to which permissions are to be granted. Resources in Lake Formation are the Data Catalog, databases, and tables.</p>",
            "smithy.api#required": {}
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>The permissions granted to the principal on the resource. Lake Formation defines privileges to grant and revoke access to metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3. Lake Formation requires that each principal be authorized to perform a specific task on Lake Formation resources. </p>",
            "smithy.api#required": {}
          }
        },
        "PermissionsWithGrantOption": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Indicates a list of the granted permissions that the principal may pass to other users. These permissions may only be a subset of the permissions granted in the <code>Privileges</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#GrantPermissionsResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#HashString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#IAMRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws:iam::[0-9]*:role/"
      }
    },
    "com.amazonaws.lakeformation#IAMSAMLProviderArn": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^arn:aws:iam::[0-9]*:saml-provider/"
      }
    },
    "com.amazonaws.lakeformation#Identifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.lakeformation#IdentityCenterInstanceArn": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#IdentityString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#InternalServiceException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An internal service error occurred.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.lakeformation#InvalidInputException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input provided was not valid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lakeformation#KeyString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#LFTag": {
      "type": "structure",
      "members": {
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "TagValues": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of possible values an attribute can take.</p>\n         <p>The maximum number of values that can be defined for a LF-Tag is 1000. A single API call\n      supports 50 values. You can use multiple API calls to add more values.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'.</p>"
      }
    },
    "com.amazonaws.lakeformation#LFTagError": {
      "type": "structure",
      "members": {
        "LFTag": {
          "target": "com.amazonaws.lakeformation#LFTagPair",
          "traits": {
            "smithy.api#documentation": "<p>The key-name of the LF-tag.</p>"
          }
        },
        "Error": {
          "target": "com.amazonaws.lakeformation#ErrorDetail",
          "traits": {
            "smithy.api#documentation": "<p>An error that occurred with the attachment or detachment of the LF-tag.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing an error related to a <code>TagResource</code> or <code>UnTagResource</code> operation.</p>"
      }
    },
    "com.amazonaws.lakeformation#LFTagErrors": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#LFTagError"
      }
    },
    "com.amazonaws.lakeformation#LFTagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$"
      }
    },
    "com.amazonaws.lakeformation#LFTagKeyResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "TagValues": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of possible values an attribute can take.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing an LF-tag key and values for a resource.</p>"
      }
    },
    "com.amazonaws.lakeformation#LFTagPair": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "TagValues": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of possible values an attribute can take.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing an LF-tag key-value pair.</p>"
      }
    },
    "com.amazonaws.lakeformation#LFTagPolicyResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.lakeformation#ResourceType",
          "traits": {
            "smithy.api#documentation": "<p>The resource type for which the LF-tag policy applies.</p>",
            "smithy.api#required": {}
          }
        },
        "Expression": {
          "target": "com.amazonaws.lakeformation#Expression",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tag conditions that apply to the resource's LF-tag policy.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing a list of LF-tag conditions that apply to a resource's LF-tag policy.</p>"
      }
    },
    "com.amazonaws.lakeformation#LFTagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:\\*\\/=+\\-@%]*)$"
      }
    },
    "com.amazonaws.lakeformation#LFTagsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#LFTagPair"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.lakeformation#LakeFormationOptInsInfo": {
      "type": "structure",
      "members": {
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource"
        },
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal"
        },
        "LastModified": {
          "target": "com.amazonaws.lakeformation#LastModifiedTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The last modified date and time of the record.</p>"
          }
        },
        "LastUpdatedBy": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The user who updated the record.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A single principal-resource pair that has Lake Formation permissins enforced.</p>"
      }
    },
    "com.amazonaws.lakeformation#LakeFormationOptInsInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#LakeFormationOptInsInfo"
      }
    },
    "com.amazonaws.lakeformation#LastModifiedTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.lakeformation#ListDataCellsFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListDataCellsFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListDataCellsFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all the data cell filters on a table.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListDataCellsFilter",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "DataCellsFilters",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListDataCellsFilterRequest": {
      "type": "structure",
      "members": {
        "Table": {
          "target": "com.amazonaws.lakeformation#TableResource",
          "traits": {
            "smithy.api#documentation": "<p>A table in the Glue Data Catalog.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is a continuation call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum size of the response.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListDataCellsFilterResponse": {
      "type": "structure",
      "members": {
        "DataCellsFilters": {
          "target": "com.amazonaws.lakeformation#DataCellsFilterList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>DataCellFilter</code> structures.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if not all requested data cell filters have been returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListLFTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListLFTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListLFTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists LF-tags that the requester has permission to view. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListLFTags",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "LFTags",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListLFTagsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "ResourceShareType": {
          "target": "com.amazonaws.lakeformation#ResourceShareType",
          "traits": {
            "smithy.api#documentation": "<p>If resource share type is <code>ALL</code>, returns both in-account LF-tags and shared LF-tags that the requester has permission to view. If resource share type is <code>FOREIGN</code>, returns all share LF-tags that the requester can view. If no resource share type is passed, lists LF-tags in the given catalog ID that the requester has permission to view.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListLFTagsResponse": {
      "type": "structure",
      "members": {
        "LFTags": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags that the requested has permission to view.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, present if the current list segment is not the last.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListLakeFormationOptIns": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListLakeFormationOptInsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListLakeFormationOptInsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieve the current list of resources and principals that are opt in to enforce Lake Formation permissions.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListLakeFormationOptIns",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListLakeFormationOptInsRequest": {
      "type": "structure",
      "members": {
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal"
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>A structure for the resource.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListLakeFormationOptInsResponse": {
      "type": "structure",
      "members": {
        "LakeFormationOptInsInfoList": {
          "target": "com.amazonaws.lakeformation#LakeFormationOptInsInfoList",
          "traits": {
            "smithy.api#documentation": "<p>A list of principal-resource pairs that have Lake Formation permissins enforced.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListPermissions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListPermissionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListPermissionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of the principal permissions on the resource, filtered by the permissions of the caller. For example, if you are granted an ALTER permission, you are able to see only the principal permissions for ALTER.</p>\n         <p>This operation returns only those permissions that have been explicitly granted.</p>\n         <p>For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListPermissions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListPermissionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a principal to filter the permissions returned.</p>"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.lakeformation#DataLakeResourceType",
          "traits": {
            "smithy.api#documentation": "<p>Specifies a resource type to filter the permissions returned.</p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>A resource where you will get a list of the principal permissions.</p>\n         <p>This operation does not support getting privileges on a table with columns. Instead, call this operation on the table, and the operation returns the table and the table w columns.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        },
        "IncludeRelated": {
          "target": "com.amazonaws.lakeformation#TrueFalseString",
          "traits": {
            "smithy.api#documentation": "<p>Indicates that related permissions should be included in the results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListPermissionsResponse": {
      "type": "structure",
      "members": {
        "PrincipalResourcePermissions": {
          "target": "com.amazonaws.lakeformation#PrincipalResourcePermissionsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of principals and their permissions on the resource for the specified principal and resource types.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListResources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListResourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListResourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the resources registered to be managed by the Data Catalog.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListResources",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListResourcesRequest": {
      "type": "structure",
      "members": {
        "FilterConditionList": {
          "target": "com.amazonaws.lakeformation#FilterConditionList",
          "traits": {
            "smithy.api#documentation": "<p>Any applicable row-level and/or column-level filtering conditions for the resources.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of resource results.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve these resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListResourcesResponse": {
      "type": "structure",
      "members": {
        "ResourceInfoList": {
          "target": "com.amazonaws.lakeformation#ResourceInfoList",
          "traits": {
            "smithy.api#documentation": "<p>A summary of the data lake resources.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve these resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListTableStorageOptimizers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListTableStorageOptimizersRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListTableStorageOptimizersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the configuration of all storage optimizers associated with a specified table.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListTableStorageOptimizers",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListTableStorageOptimizersRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The Catalog ID of the table.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the database where the table is present.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the table.</p>",
            "smithy.api#required": {}
          }
        },
        "StorageOptimizerType": {
          "target": "com.amazonaws.lakeformation#OptimizerType",
          "traits": {
            "smithy.api#documentation": "<p>The specific type of storage optimizers to list. The supported value is <code>compaction</code>.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The number of storage optimizers to return on each call.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is a continuation call.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListTableStorageOptimizersResponse": {
      "type": "structure",
      "members": {
        "StorageOptimizerList": {
          "target": "com.amazonaws.lakeformation#StorageOptimizerList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the storage optimizers associated with a table.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token for paginating the returned list of tokens, returned if the current segment of the list is not the last.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ListTransactions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#ListTransactionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#ListTransactionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns metadata about transactions and their status. To prevent the response from growing indefinitely, only uncommitted transactions and those available for time-travel queries are returned.</p>\n         <p>This operation can help you identify uncommitted transactions or to get information about transactions.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ListTransactions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#ListTransactionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The catalog for which to list transactions. Defaults to the account ID of the caller.</p>"
          }
        },
        "StatusFilter": {
          "target": "com.amazonaws.lakeformation#TransactionStatusFilter",
          "traits": {
            "smithy.api#documentation": "<p> A filter indicating the status of transactions to return. Options are ALL | COMPLETED | COMMITTED | ABORTED | ACTIVE. The default is <code>ALL</code>.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#PageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of transactions to return in a single call.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#TokenString",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token if this is not the first call to retrieve transactions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#ListTransactionsResponse": {
      "type": "structure",
      "members": {
        "Transactions": {
          "target": "com.amazonaws.lakeformation#TransactionDescriptionList",
          "traits": {
            "smithy.api#documentation": "<p>A list of transactions. The record for each transaction is a <code>TransactionDescription</code> object.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.lakeformation#TokenString",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token indicating whether additional data is available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#MessageString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#NameString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#NullableBoolean": {
      "type": "boolean"
    },
    "com.amazonaws.lakeformation#NullableString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#NumberOfBytes": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.lakeformation#NumberOfItems": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.lakeformation#NumberOfMilliseconds": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.lakeformation#ObjectSize": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.lakeformation#OperationTimeoutException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation timed out.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#OptimizerType": {
      "type": "enum",
      "members": {
        "COMPACTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPACTION"
          }
        },
        "GARBAGE_COLLECTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GARBAGE_COLLECTION"
          }
        },
        "GENERIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#PageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.lakeformation#ParametersMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lakeformation#KeyString"
      },
      "value": {
        "target": "com.amazonaws.lakeformation#ParametersMapValue"
      }
    },
    "com.amazonaws.lakeformation#ParametersMapValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 512000
        }
      }
    },
    "com.amazonaws.lakeformation#PartitionObjects": {
      "type": "structure",
      "members": {
        "PartitionValues": {
          "target": "com.amazonaws.lakeformation#PartitionValuesList",
          "traits": {
            "smithy.api#documentation": "<p>A list of partition values.</p>"
          }
        },
        "Objects": {
          "target": "com.amazonaws.lakeformation#TableObjectList",
          "traits": {
            "smithy.api#documentation": "<p>A list of table objects</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing a list of partition values and table objects.</p>"
      }
    },
    "com.amazonaws.lakeformation#PartitionValueList": {
      "type": "structure",
      "members": {
        "Values": {
          "target": "com.amazonaws.lakeformation#ValueStringList",
          "traits": {
            "smithy.api#documentation": "<p>The list of partition values.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains a list of values defining partitions.</p>"
      }
    },
    "com.amazonaws.lakeformation#PartitionValueString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.lakeformation#PartitionValuesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PartitionValueString"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.lakeformation#PartitionedTableObjectsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PartitionObjects"
      }
    },
    "com.amazonaws.lakeformation#PathString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#PathStringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PathString"
      }
    },
    "com.amazonaws.lakeformation#Permission": {
      "type": "enum",
      "members": {
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        },
        "SELECT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SELECT"
          }
        },
        "ALTER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALTER"
          }
        },
        "DROP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DROP"
          }
        },
        "DELETE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE"
          }
        },
        "INSERT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INSERT"
          }
        },
        "DESCRIBE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DESCRIBE"
          }
        },
        "CREATE_DATABASE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_DATABASE"
          }
        },
        "CREATE_TABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_TABLE"
          }
        },
        "DATA_LOCATION_ACCESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DATA_LOCATION_ACCESS"
          }
        },
        "CREATE_LF_TAG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_LF_TAG"
          }
        },
        "ASSOCIATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ASSOCIATE"
          }
        },
        "GRANT_WITH_LF_TAG_EXPRESSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "GRANT_WITH_LF_TAG_EXPRESSION"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#PermissionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#Permission"
      }
    },
    "com.amazonaws.lakeformation#PermissionType": {
      "type": "enum",
      "members": {
        "COLUMN_PERMISSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COLUMN_PERMISSION"
          }
        },
        "CELL_FILTER_PERMISSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CELL_FILTER_PERMISSION"
          }
        },
        "NESTED_PERMISSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NESTED_PERMISSION"
          }
        },
        "NESTED_CELL_PERMISSION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NESTED_CELL_PERMISSION"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#PermissionTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PermissionType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.lakeformation#PermissionTypeMismatchException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The engine does not support filtering data based on the enforced permissions. For example, if you call the <code>GetTemporaryGlueTableCredentials</code> operation with <code>SupportedPermissionType</code> equal to <code>ColumnPermission</code>, but cell-level permissions exist on the table, this exception is thrown.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#PlanningStatistics": {
      "type": "structure",
      "members": {
        "EstimatedDataToScanBytes": {
          "target": "com.amazonaws.lakeformation#NumberOfBytes",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>An estimate of the data that was scanned in bytes.</p>"
          }
        },
        "PlanningTimeMillis": {
          "target": "com.amazonaws.lakeformation#NumberOfMilliseconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The time that it took to process the request.</p>"
          }
        },
        "QueueTimeMillis": {
          "target": "com.amazonaws.lakeformation#NumberOfMilliseconds",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The time the request was in queue to be processed.</p>"
          }
        },
        "WorkUnitsGeneratedCount": {
          "target": "com.amazonaws.lakeformation#NumberOfItems",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The number of work units generated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Statistics related to the processing of a query statement.</p>"
      }
    },
    "com.amazonaws.lakeformation#PredicateString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2048
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#PrincipalPermissions": {
      "type": "structure",
      "members": {
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The principal who is granted permissions.</p>"
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>The permissions that are granted to the principal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Permissions granted to a principal.</p>"
      }
    },
    "com.amazonaws.lakeformation#PrincipalPermissionsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PrincipalPermissions"
      }
    },
    "com.amazonaws.lakeformation#PrincipalResourcePermissions": {
      "type": "structure",
      "members": {
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The Data Lake principal to be granted or revoked permissions.</p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The resource where permissions are to be granted or revoked.</p>"
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>The permissions to be granted or revoked on the resource.</p>"
          }
        },
        "PermissionsWithGrantOption": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether to grant the ability to grant permissions (as a subset of permissions granted).</p>"
          }
        },
        "AdditionalDetails": {
          "target": "com.amazonaws.lakeformation#DetailsMap",
          "traits": {
            "smithy.api#documentation": "<p>This attribute can be used to return any additional details of <code>PrincipalResourcePermissions</code>. Currently returns only as a RAM resource share ARN.</p>"
          }
        },
        "LastUpdated": {
          "target": "com.amazonaws.lakeformation#LastModifiedTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the resource was last updated.</p>"
          }
        },
        "LastUpdatedBy": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The user who updated the record.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The permissions granted or revoked on a resource.</p>"
      }
    },
    "com.amazonaws.lakeformation#PrincipalResourcePermissionsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#PrincipalResourcePermissions"
      }
    },
    "com.amazonaws.lakeformation#PutDataLakeSettings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#PutDataLakeSettingsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#PutDataLakeSettingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets the list of data lake administrators who have admin privileges on all resources managed by Lake Formation. For more information on admin privileges, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html\">Granting Lake Formation Permissions</a>.</p>\n         <p>This API replaces the current list of data lake admins with the new list being passed. To add an admin, fetch the current list and add the new admin to that list and pass that list in this API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/PutDataLakeSettings",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#PutDataLakeSettingsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "DataLakeSettings": {
          "target": "com.amazonaws.lakeformation#DataLakeSettings",
          "traits": {
            "smithy.api#documentation": "<p>A structure representing a list of Lake Formation principals designated as data lake administrators.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#PutDataLakeSettingsResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#QueryIdString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#QueryParameterMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.lakeformation#QueryPlanningContext": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Data Catalog where the partition in question resides. If none is provided, the Amazon Web Services account ID is used by default.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#QueryPlanningContextDatabaseNameString",
          "traits": {
            "smithy.api#documentation": "<p>The database containing the table.</p>",
            "smithy.api#required": {}
          }
        },
        "QueryAsOfTime": {
          "target": "com.amazonaws.lakeformation#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time as of when to read the table contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with <code>TransactionId</code>.</p>"
          }
        },
        "QueryParameters": {
          "target": "com.amazonaws.lakeformation#QueryParameterMap",
          "traits": {
            "smithy.api#documentation": "<p>A map consisting of key-value pairs.</p>"
          }
        },
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction ID at which to read the table contents. If this transaction is not committed, the read will be treated as part of that transaction and will see its writes. If this transaction has aborted, an error will be returned. If not set, defaults to the most recent committed transaction. Cannot be specified along with <code>QueryAsOfTime</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing information about the query plan.</p>"
      }
    },
    "com.amazonaws.lakeformation#QueryPlanningContextDatabaseNameString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#QuerySessionContext": {
      "type": "structure",
      "members": {
        "QueryId": {
          "target": "com.amazonaws.lakeformation#HashString",
          "traits": {
            "smithy.api#documentation": "<p>A unique identifier generated by the query engine for the query.</p>"
          }
        },
        "QueryStartTime": {
          "target": "com.amazonaws.lakeformation#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>A timestamp provided by the query engine for when the query started.</p>"
          }
        },
        "ClusterId": {
          "target": "com.amazonaws.lakeformation#NullableString",
          "traits": {
            "smithy.api#documentation": "<p>An identifier string for the consumer cluster.</p>"
          }
        },
        "QueryAuthorizationId": {
          "target": "com.amazonaws.lakeformation#HashString",
          "traits": {
            "smithy.api#documentation": "<p>A cryptographically generated query identifier generated by Glue or Lake Formation.</p>"
          }
        },
        "AdditionalContext": {
          "target": "com.amazonaws.lakeformation#AdditionalContextMap",
          "traits": {
            "smithy.api#documentation": "<p>An opaque string-string map passed by the query engine.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure used as a protocol between query engines and Lake Formation or Glue. Contains both a Lake Formation generated authorization identifier and information from the request's authorization context.</p>"
      }
    },
    "com.amazonaws.lakeformation#QueryStateString": {
      "type": "enum",
      "members": {
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "WORKUNITS_AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WORKUNITS_AVAILABLE"
          }
        },
        "ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ERROR"
          }
        },
        "FINISHED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FINISHED"
          }
        },
        "EXPIRED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EXPIRED"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#RAMResourceShareArn": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#RegisterResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#RegisterResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#RegisterResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#AlreadyExistsException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNumberLimitExceededException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Registers the resource as managed by the Data Catalog.</p>\n         <p>To add or update data, Lake Formation needs read/write access to the chosen Amazon S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess service-linked role. When you register the first Amazon S3 path, the service-linked role and a new inline policy are created on your behalf. Lake Formation adds the first path to the inline policy and attaches it to the service-linked role. When you register subsequent paths, Lake Formation adds the path to the existing policy.</p>\n         <p>The following request registers a new location and gives Lake Formation permission to use the service-linked role to access that location.</p>\n         <p>\n            <code>ResourceArn = arn:aws:s3:::my-bucket\nUseServiceLinkedRole = true</code>\n         </p>\n         <p>If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the <code>RoleArn</code>:</p>\n         <p>\n            <code>arn:aws:iam::12345:role/my-data-access-role</code>\n         </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/RegisterResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#RegisterResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to register.</p>",
            "smithy.api#required": {}
          }
        },
        "UseServiceLinkedRole": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Designates an Identity and Access Management (IAM) service-linked role by registering this role with the Data Catalog. A service-linked role is a unique type of IAM role that is linked directly to Lake Formation.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html\">Using Service-Linked Roles for Lake Formation</a>.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.lakeformation#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the role that registers the resource.</p>"
          }
        },
        "WithFederation": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not the resource is a federated resource.</p>"
          }
        },
        "HybridAccessEnabled": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>\n    Specifies whether the data access of tables pointing to the location can be managed by both Lake Formation permissions as well as Amazon S3 bucket policies.\n  </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#RegisterResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#RemoveLFTagsFromResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#RemoveLFTagsFromResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#RemoveLFTagsFromResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#GlueEncryptionException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes an LF-tag from the resource. Only database, table, or tableWithColumns resource are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code> to specify column input.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/RemoveLFTagsFromResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#RemoveLFTagsFromResourceRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The database, table, or column resource where you want to remove an LF-tag.</p>",
            "smithy.api#required": {}
          }
        },
        "LFTags": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>The LF-tags to be removed from the resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#RemoveLFTagsFromResourceResponse": {
      "type": "structure",
      "members": {
        "Failures": {
          "target": "com.amazonaws.lakeformation#LFTagErrors",
          "traits": {
            "smithy.api#documentation": "<p>A list of failures to untag a resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#Resource": {
      "type": "structure",
      "members": {
        "Catalog": {
          "target": "com.amazonaws.lakeformation#CatalogResource",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Database": {
          "target": "com.amazonaws.lakeformation#DatabaseResource",
          "traits": {
            "smithy.api#documentation": "<p>The database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. </p>"
          }
        },
        "Table": {
          "target": "com.amazonaws.lakeformation#TableResource",
          "traits": {
            "smithy.api#documentation": "<p>The table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. </p>"
          }
        },
        "TableWithColumns": {
          "target": "com.amazonaws.lakeformation#TableWithColumnsResource",
          "traits": {
            "smithy.api#documentation": "<p>The table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3.</p>"
          }
        },
        "DataLocation": {
          "target": "com.amazonaws.lakeformation#DataLocationResource",
          "traits": {
            "smithy.api#documentation": "<p>The location of an Amazon S3 path where permissions are granted or revoked. </p>"
          }
        },
        "DataCellsFilter": {
          "target": "com.amazonaws.lakeformation#DataCellsFilterResource",
          "traits": {
            "smithy.api#documentation": "<p>A data cell filter.</p>"
          }
        },
        "LFTag": {
          "target": "com.amazonaws.lakeformation#LFTagKeyResource",
          "traits": {
            "smithy.api#documentation": "<p>The LF-tag key and values attached to a resource.</p>"
          }
        },
        "LFTagPolicy": {
          "target": "com.amazonaws.lakeformation#LFTagPolicyResource",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tag conditions that define a resource's LF-tag policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the resource.</p>"
      }
    },
    "com.amazonaws.lakeformation#ResourceArnString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ResourceInfo": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>"
          }
        },
        "RoleArn": {
          "target": "com.amazonaws.lakeformation#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM role that registered a resource.</p>"
          }
        },
        "LastModified": {
          "target": "com.amazonaws.lakeformation#LastModifiedTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the resource was last modified.</p>"
          }
        },
        "WithFederation": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not the resource is a federated resource.</p>"
          }
        },
        "HybridAccessEnabled": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>\n      Indicates whether the data access of tables pointing to the location can be managed by both Lake Formation permissions as well as Amazon S3 bucket policies.\n    </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure containing information about an Lake Formation resource.</p>"
      }
    },
    "com.amazonaws.lakeformation#ResourceInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#ResourceInfo"
      }
    },
    "com.amazonaws.lakeformation#ResourceNotReadyException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error related to a resource which is not ready for a transaction.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lakeformation#ResourceNumberLimitExceededException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the problem.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource numerical limit was exceeded.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.lakeformation#ResourceShareList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#RAMResourceShareArn"
      }
    },
    "com.amazonaws.lakeformation#ResourceShareType": {
      "type": "enum",
      "members": {
        "FOREIGN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FOREIGN"
          }
        },
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#ResourceType": {
      "type": "enum",
      "members": {
        "DATABASE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DATABASE"
          }
        },
        "TABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TABLE"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#Result": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ResultStream": {
      "type": "blob",
      "traits": {
        "smithy.api#streaming": {}
      }
    },
    "com.amazonaws.lakeformation#RevokePermissions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#RevokePermissionsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#RevokePermissionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Revokes permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/RevokePermissions",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#RevokePermissionsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Principal": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipal",
          "traits": {
            "smithy.api#documentation": "<p>The principal to be revoked permissions on the resource.</p>",
            "smithy.api#required": {}
          }
        },
        "Resource": {
          "target": "com.amazonaws.lakeformation#Resource",
          "traits": {
            "smithy.api#documentation": "<p>The resource to which permissions are to be revoked.</p>",
            "smithy.api#required": {}
          }
        },
        "Permissions": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>The permissions revoked to the principal on the resource. For information about permissions, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security\n      and Access Control to Metadata and Data</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "PermissionsWithGrantOption": {
          "target": "com.amazonaws.lakeformation#PermissionList",
          "traits": {
            "smithy.api#documentation": "<p>Indicates a list of permissions for which to revoke the grant option allowing the principal to pass permissions to other principals.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#RevokePermissionsResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#RowFilter": {
      "type": "structure",
      "members": {
        "FilterExpression": {
          "target": "com.amazonaws.lakeformation#PredicateString",
          "traits": {
            "smithy.api#documentation": "<p>A filter expression.</p>"
          }
        },
        "AllRowsWildcard": {
          "target": "com.amazonaws.lakeformation#AllRowsWildcard",
          "traits": {
            "smithy.api#documentation": "<p>A wildcard for all rows.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A PartiQL predicate.</p>"
      }
    },
    "com.amazonaws.lakeformation#SAMLAssertionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 100000
        }
      }
    },
    "com.amazonaws.lakeformation#ScopeTarget": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ScopeTargets": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#ScopeTarget"
      }
    },
    "com.amazonaws.lakeformation#SearchDatabasesByLFTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#SearchDatabasesByLFTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#SearchDatabasesByLFTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#GlueEncryptionException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>. This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>. Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find all resources where the given <code>TagConditions</code> are valid to verify whether the returned resources can be shared.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/SearchDatabasesByLFTags",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "DatabaseList",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#SearchDatabasesByLFTagsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#SearchPageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        },
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Expression": {
          "target": "com.amazonaws.lakeformation#Expression",
          "traits": {
            "smithy.api#documentation": "<p>A list of conditions (<code>LFTag</code> structures) to search for in database resources.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#SearchDatabasesByLFTagsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, present if the current list segment is not the last.</p>"
          }
        },
        "DatabaseList": {
          "target": "com.amazonaws.lakeformation#DatabaseLFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of databases that meet the LF-tag conditions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#SearchPageSize": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.lakeformation#SearchTablesByLFTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#SearchTablesByLFTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#SearchTablesByLFTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#GlueEncryptionException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s. This will be used by admins who want to grant user permissions on certain LF-tags. Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find all resources where the given <code>LFTag</code>s are valid to verify whether the returned resources can be shared.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/SearchTablesByLFTags",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "TableList",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.lakeformation#SearchTablesByLFTagsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, if this is not the first call to retrieve this list.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.lakeformation#SearchPageSize",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to return.</p>"
          }
        },
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "Expression": {
          "target": "com.amazonaws.lakeformation#Expression",
          "traits": {
            "smithy.api#documentation": "<p>A list of conditions (<code>LFTag</code> structures) to search for in table resources.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#SearchTablesByLFTagsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.lakeformation#Token",
          "traits": {
            "smithy.api#documentation": "<p>A continuation token, present if the current list segment is not the last. On the first run, if you include a not null (a value) token you can get empty pages.</p>"
          }
        },
        "TableList": {
          "target": "com.amazonaws.lakeformation#TableLFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of tables that meet the LF-tag conditions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#SecretAccessKeyString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#SessionTokenString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#StartQueryPlanning": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#StartQueryPlanningRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#StartQueryPlanningResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#ThrottledException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Submits a request to process a query statement.</p>\n         <p>This operation generates work units that can be retrieved with the <code>GetWorkUnits</code> operation as soon as the query state is WORKUNITS_AVAILABLE or FINISHED.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "query-"
        },
        "smithy.api#http": {
          "method": "POST",
          "uri": "/StartQueryPlanning",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#StartQueryPlanningRequest": {
      "type": "structure",
      "members": {
        "QueryPlanningContext": {
          "target": "com.amazonaws.lakeformation#QueryPlanningContext",
          "traits": {
            "smithy.api#documentation": "<p>A structure containing information about the query plan.</p>",
            "smithy.api#required": {}
          }
        },
        "QueryString": {
          "target": "com.amazonaws.lakeformation#SyntheticStartQueryPlanningRequestQueryString",
          "traits": {
            "smithy.api#documentation": "<p>A PartiQL query statement used as an input to the planner service.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#StartQueryPlanningResponse": {
      "type": "structure",
      "members": {
        "QueryId": {
          "target": "com.amazonaws.lakeformation#QueryIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the plan query operation can be used to fetch the actual work unit descriptors that are produced as the result of the operation. The ID is also used to get the query state and as an input to the <code>Execute</code> operation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the output.</p>",
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#StartTransaction": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#StartTransactionRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#StartTransactionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a new transaction and returns its transaction ID. Transaction IDs are opaque objects that you can use to identify a transaction.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/StartTransaction",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#StartTransactionRequest": {
      "type": "structure",
      "members": {
        "TransactionType": {
          "target": "com.amazonaws.lakeformation#TransactionType",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether this transaction should be read only or read and write. Writes made using a read-only transaction ID will be rejected. Read-only transactions do not need to be committed. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#StartTransactionResponse": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>An opaque identifier for the transaction.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#StatisticsNotReadyYetException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error related to statistics not being ready.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.lakeformation#StorageOptimizer": {
      "type": "structure",
      "members": {
        "StorageOptimizerType": {
          "target": "com.amazonaws.lakeformation#OptimizerType",
          "traits": {
            "smithy.api#documentation": "<p>The specific type of storage optimizer. The supported value is <code>compaction</code>.</p>"
          }
        },
        "Config": {
          "target": "com.amazonaws.lakeformation#StorageOptimizerConfig",
          "traits": {
            "smithy.api#documentation": "<p>A map of the storage optimizer configuration. Currently contains only one key-value pair: <code>is_enabled</code> indicates true or false for acceleration.</p>"
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message that contains information about any error (if present).</p>\n         <p>When an acceleration result has an enabled status, the error message is empty.</p>\n         <p>When an acceleration result has a disabled status, the message describes an error or simply indicates \"disabled by the user\".</p>"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message that contains information about any warnings (if present).</p>"
          }
        },
        "LastRunDetails": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>When an acceleration result has an enabled status, contains the details of the last job run.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure describing the configuration and details of a storage optimizer.</p>"
      }
    },
    "com.amazonaws.lakeformation#StorageOptimizerConfig": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lakeformation#StorageOptimizerConfigKey"
      },
      "value": {
        "target": "com.amazonaws.lakeformation#StorageOptimizerConfigValue"
      }
    },
    "com.amazonaws.lakeformation#StorageOptimizerConfigKey": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#StorageOptimizerConfigMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.lakeformation#OptimizerType"
      },
      "value": {
        "target": "com.amazonaws.lakeformation#StorageOptimizerConfig"
      }
    },
    "com.amazonaws.lakeformation#StorageOptimizerConfigValue": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#StorageOptimizerList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#StorageOptimizer"
      }
    },
    "com.amazonaws.lakeformation#StringValue": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#StringValueList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#StringValue"
      }
    },
    "com.amazonaws.lakeformation#SyntheticGetWorkUnitResultsRequestWorkUnitTokenString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lakeformation#SyntheticStartQueryPlanningRequestQueryString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.lakeformation#TableLFTagsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#TaggedTable"
      }
    },
    "com.amazonaws.lakeformation#TableObject": {
      "type": "structure",
      "members": {
        "Uri": {
          "target": "com.amazonaws.lakeformation#URI",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 location of the object.</p>"
          }
        },
        "ETag": {
          "target": "com.amazonaws.lakeformation#ETagString",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon S3 ETag of the object. Returned by <code>GetTableObjects</code> for validation and used to identify changes to the underlying data.</p>"
          }
        },
        "Size": {
          "target": "com.amazonaws.lakeformation#ObjectSize",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The size of the Amazon S3 object in bytes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the details of a governed table.</p>"
      }
    },
    "com.amazonaws.lakeformation#TableObjectList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#TableObject"
      }
    },
    "com.amazonaws.lakeformation#TableResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, it is the account ID of the caller.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database for the table. Unique to a Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. </p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the table.</p>"
          }
        },
        "TableWildcard": {
          "target": "com.amazonaws.lakeformation#TableWildcard",
          "traits": {
            "smithy.api#documentation": "<p>A wildcard object representing every table under a database.</p>\n         <p>At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code> is required.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. </p>"
      }
    },
    "com.amazonaws.lakeformation#TableWildcard": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p>A wildcard object representing every table under a database.</p>"
      }
    },
    "com.amazonaws.lakeformation#TableWithColumnsResource": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, it is the account ID of the caller.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database for the table with columns resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. </p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the table resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. </p>",
            "smithy.api#required": {}
          }
        },
        "ColumnNames": {
          "target": "com.amazonaws.lakeformation#ColumnNames",
          "traits": {
            "smithy.api#documentation": "<p>The list of column names for the table. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required.</p>"
          }
        },
        "ColumnWildcard": {
          "target": "com.amazonaws.lakeformation#ColumnWildcard",
          "traits": {
            "smithy.api#documentation": "<p>A wildcard specified by a <code>ColumnWildcard</code> object. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure for a table with columns object. This object is only used when granting a SELECT permission.</p>\n         <p>This object must take a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>, or <code>ColumnsWildcard</code>.</p>"
      }
    },
    "com.amazonaws.lakeformation#TagValueList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#LFTagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.lakeformation#TaggedDatabase": {
      "type": "structure",
      "members": {
        "Database": {
          "target": "com.amazonaws.lakeformation#DatabaseResource",
          "traits": {
            "smithy.api#documentation": "<p>A database that has LF-tags attached to it.</p>"
          }
        },
        "LFTags": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags attached to the database.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure describing a database resource with LF-tags.</p>"
      }
    },
    "com.amazonaws.lakeformation#TaggedTable": {
      "type": "structure",
      "members": {
        "Table": {
          "target": "com.amazonaws.lakeformation#TableResource",
          "traits": {
            "smithy.api#documentation": "<p>A table that has LF-tags attached to it.</p>"
          }
        },
        "LFTagOnDatabase": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags attached to the database where the table resides.</p>"
          }
        },
        "LFTagsOnTable": {
          "target": "com.amazonaws.lakeformation#LFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags attached to the table.</p>"
          }
        },
        "LFTagsOnColumns": {
          "target": "com.amazonaws.lakeformation#ColumnLFTagsList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tags attached to columns in the table.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure describing a table resource with LF-tags.</p>"
      }
    },
    "com.amazonaws.lakeformation#ThrottledException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error where the query request was throttled.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {
          "throttling": true
        }
      }
    },
    "com.amazonaws.lakeformation#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.lakeformation#Token": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#TokenString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 4096
        }
      }
    },
    "com.amazonaws.lakeformation#TransactionCanceledException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error related to a transaction that was cancelled.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lakeformation#TransactionCommitInProgressException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error related to a transaction commit that was in progress.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lakeformation#TransactionCommittedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error where the specified transaction has already been committed and cannot be used for <code>UpdateTableObjects</code>.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.lakeformation#TransactionDescription": {
      "type": "structure",
      "members": {
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the transaction.</p>"
          }
        },
        "TransactionStatus": {
          "target": "com.amazonaws.lakeformation#TransactionStatus",
          "traits": {
            "smithy.api#documentation": "<p>A status of ACTIVE, COMMITTED, or ABORTED.</p>"
          }
        },
        "TransactionStartTime": {
          "target": "com.amazonaws.lakeformation#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the transaction started.</p>"
          }
        },
        "TransactionEndTime": {
          "target": "com.amazonaws.lakeformation#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time when the transaction committed or aborted, if it is not currently active.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure that contains information about a transaction.</p>"
      }
    },
    "com.amazonaws.lakeformation#TransactionDescriptionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#TransactionDescription"
      }
    },
    "com.amazonaws.lakeformation#TransactionIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\p{L}\\p{N}\\p{P}]*$"
      }
    },
    "com.amazonaws.lakeformation#TransactionStatus": {
      "type": "enum",
      "members": {
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "COMMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMMITTED"
          }
        },
        "ABORTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ABORTED"
          }
        },
        "COMMIT_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMMIT_IN_PROGRESS"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#TransactionStatusFilter": {
      "type": "enum",
      "members": {
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "COMMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMMITTED"
          }
        },
        "ABORTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ABORTED"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#TransactionType": {
      "type": "enum",
      "members": {
        "READ_AND_WRITE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READ_AND_WRITE"
          }
        },
        "READ_ONLY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READ_ONLY"
          }
        }
      }
    },
    "com.amazonaws.lakeformation#TrueFalseString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#TrustedResourceOwners": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#CatalogIdString"
      }
    },
    "com.amazonaws.lakeformation#URI": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#UpdateDataCellsFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateDataCellsFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateDataCellsFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a data cell filter.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateDataCellsFilter",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateDataCellsFilterRequest": {
      "type": "structure",
      "members": {
        "TableData": {
          "target": "com.amazonaws.lakeformation#DataCellsFilter",
          "traits": {
            "smithy.api#documentation": "<p>A <code>DataCellsFilter</code> structure containing information about the data cells filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateDataCellsFilterResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateLFTag": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateLFTagRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateLFTagResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the list of possible values for the specified LF-tag key. If the LF-tag does not exist, the operation throws an EntityNotFoundException. The values in the delete key values will be deleted from list of possible values. If any value in the delete key values is attached to a resource, then API errors out with a 400 Exception - \"Update not allowed\". Untag the attribute before deleting the LF-tag key's value. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateLFTag",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateLFTagRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. </p>"
          }
        },
        "TagKey": {
          "target": "com.amazonaws.lakeformation#LFTagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key-name for the LF-tag for which to add or delete values.</p>",
            "smithy.api#required": {}
          }
        },
        "TagValuesToDelete": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tag values to delete from the LF-tag.</p>"
          }
        },
        "TagValuesToAdd": {
          "target": "com.amazonaws.lakeformation#TagValueList",
          "traits": {
            "smithy.api#documentation": "<p>A list of LF-tag values to add from the LF-tag.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateLFTagResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the IAM Identity Center connection parameters.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateLakeFormationIdentityCenterConfiguration",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfigurationRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the\n         persistent metadata store. It contains database definitions, table definitions, view\n         definitions, and other control information to manage your Lake Formation\n         environment.</p>"
          }
        },
        "ShareRecipients": {
          "target": "com.amazonaws.lakeformation#DataLakePrincipalList",
          "traits": {
            "smithy.api#documentation": "<p>A list of Amazon Web Services account IDs or Amazon Web Services organization/organizational unit ARNs that\n         are allowed to access to access data managed by Lake Formation. </p>\n         <p>If the <code>ShareRecipients</code> list includes valid values, then the resource share is updated with the principals you want to have access to the resources.</p>\n         <p>If the <code>ShareRecipients</code> value is null, both the list of share recipients and\n         the resource share remain unchanged.</p>\n         <p>If the <code>ShareRecipients</code> value is an empty list, then the existing share\n         recipients list will be cleared, and the resource share will be deleted.</p>"
          }
        },
        "ApplicationStatus": {
          "target": "com.amazonaws.lakeformation#ApplicationStatus",
          "traits": {
            "smithy.api#documentation": "<p>Allows to enable or disable the IAM Identity Center connection.</p>"
          }
        },
        "ExternalFiltering": {
          "target": "com.amazonaws.lakeformation#ExternalFilteringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>A list of the account IDs of Amazon Web Services accounts of third-party applications\n         that are allowed to access data managed by Lake Formation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateLakeFormationIdentityCenterConfigurationResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the data access role used for vending access to the given (registered) resource in Lake Formation. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateResource",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateResourceRequest": {
      "type": "structure",
      "members": {
        "RoleArn": {
          "target": "com.amazonaws.lakeformation#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The new role to use for the given resource registered in Lake Formation.</p>",
            "smithy.api#required": {}
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.lakeformation#ResourceArnString",
          "traits": {
            "smithy.api#documentation": "<p>The resource ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "WithFederation": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not the resource is a federated resource.</p>"
          }
        },
        "HybridAccessEnabled": {
          "target": "com.amazonaws.lakeformation#NullableBoolean",
          "traits": {
            "smithy.api#documentation": "<p>\n      Specifies whether the data access of tables pointing to the location can be managed by both Lake Formation permissions as well as Amazon S3 bucket policies.\n    </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateTableObjects": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateTableObjectsRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateTableObjectsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#ConcurrentModificationException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        },
        {
          "target": "com.amazonaws.lakeformation#OperationTimeoutException"
        },
        {
          "target": "com.amazonaws.lakeformation#ResourceNotReadyException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCanceledException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommitInProgressException"
        },
        {
          "target": "com.amazonaws.lakeformation#TransactionCommittedException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the manifest of Amazon S3 objects that make up the specified governed table.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateTableObjects",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateTableObjectsRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The catalog containing the governed table to update. Defaults to the caller’s account ID.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The database containing the governed table to update.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The governed table to update.</p>",
            "smithy.api#required": {}
          }
        },
        "TransactionId": {
          "target": "com.amazonaws.lakeformation#TransactionIdString",
          "traits": {
            "smithy.api#documentation": "<p>The transaction at which to do the write.</p>"
          }
        },
        "WriteOperations": {
          "target": "com.amazonaws.lakeformation#WriteOperationList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <code>WriteOperation</code> objects that define an object to add to or delete from the manifest for a governed table.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateTableObjectsResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateTableStorageOptimizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.lakeformation#UpdateTableStorageOptimizerRequest"
      },
      "output": {
        "target": "com.amazonaws.lakeformation#UpdateTableStorageOptimizerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.lakeformation#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.lakeformation#EntityNotFoundException"
        },
        {
          "target": "com.amazonaws.lakeformation#InternalServiceException"
        },
        {
          "target": "com.amazonaws.lakeformation#InvalidInputException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the configuration of the storage optimizers for a table.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/UpdateTableStorageOptimizer",
          "code": 200
        }
      }
    },
    "com.amazonaws.lakeformation#UpdateTableStorageOptimizerRequest": {
      "type": "structure",
      "members": {
        "CatalogId": {
          "target": "com.amazonaws.lakeformation#CatalogIdString",
          "traits": {
            "smithy.api#documentation": "<p>The Catalog ID of the table.</p>"
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the database where the table is present.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.lakeformation#NameString",
          "traits": {
            "smithy.api#documentation": "<p>Name of the table for which to enable the storage optimizer.</p>",
            "smithy.api#required": {}
          }
        },
        "StorageOptimizerConfig": {
          "target": "com.amazonaws.lakeformation#StorageOptimizerConfigMap",
          "traits": {
            "smithy.api#documentation": "<p>Name of the table for which to enable the storage optimizer.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.lakeformation#UpdateTableStorageOptimizerResponse": {
      "type": "structure",
      "members": {
        "Result": {
          "target": "com.amazonaws.lakeformation#Result",
          "traits": {
            "smithy.api#documentation": "<p>A response indicating the success of failure of the operation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.lakeformation#ValueString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#ValueStringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#ValueString"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.lakeformation#VersionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*$"
      }
    },
    "com.amazonaws.lakeformation#VirtualObject": {
      "type": "structure",
      "members": {
        "Uri": {
          "target": "com.amazonaws.lakeformation#URI",
          "traits": {
            "smithy.api#documentation": "<p>The path to the Amazon S3 object. Must start with s3://</p>",
            "smithy.api#required": {}
          }
        },
        "ETag": {
          "target": "com.amazonaws.lakeformation#ETagString",
          "traits": {
            "smithy.api#documentation": "<p>The ETag of the Amazon S3 object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that defines an Amazon S3 object to be deleted if a transaction cancels, provided that \n      <code>VirtualPut</code> was called before writing the object.</p>"
      }
    },
    "com.amazonaws.lakeformation#VirtualObjectList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#VirtualObject"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.lakeformation#WorkUnitIdLong": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.lakeformation#WorkUnitRange": {
      "type": "structure",
      "members": {
        "WorkUnitIdMax": {
          "target": "com.amazonaws.lakeformation#WorkUnitIdLong",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Defines the maximum work unit ID in the range. The maximum value is inclusive.</p>",
            "smithy.api#required": {}
          }
        },
        "WorkUnitIdMin": {
          "target": "com.amazonaws.lakeformation#WorkUnitIdLong",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Defines the minimum work unit ID in the range.</p>",
            "smithy.api#required": {}
          }
        },
        "WorkUnitToken": {
          "target": "com.amazonaws.lakeformation#WorkUnitTokenString",
          "traits": {
            "smithy.api#documentation": "<p>A work token used to query the execution service.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Defines the valid range of work unit IDs for querying the execution service.</p>"
      }
    },
    "com.amazonaws.lakeformation#WorkUnitRangeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#WorkUnitRange"
      }
    },
    "com.amazonaws.lakeformation#WorkUnitTokenString": {
      "type": "string"
    },
    "com.amazonaws.lakeformation#WorkUnitsNotReadyYetException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.lakeformation#MessageString",
          "traits": {
            "smithy.api#documentation": "<p>A message describing the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains details about an error related to work units not being ready.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.lakeformation#WriteOperation": {
      "type": "structure",
      "members": {
        "AddObject": {
          "target": "com.amazonaws.lakeformation#AddObjectInput",
          "traits": {
            "smithy.api#documentation": "<p>A new object to add to the governed table.</p>"
          }
        },
        "DeleteObject": {
          "target": "com.amazonaws.lakeformation#DeleteObjectInput",
          "traits": {
            "smithy.api#documentation": "<p>An object to delete from the governed table.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Defines an object to add to or delete from a governed table.</p>"
      }
    },
    "com.amazonaws.lakeformation#WriteOperationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.lakeformation#WriteOperation"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    }
  }
}
