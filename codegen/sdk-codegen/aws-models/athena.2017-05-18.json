{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.athena#AmazonAthena": {
      "type": "service",
      "version": "2017-05-18",
      "operations": [
        {
          "target": "com.amazonaws.athena#BatchGetNamedQuery"
        },
        {
          "target": "com.amazonaws.athena#BatchGetQueryExecution"
        },
        {
          "target": "com.amazonaws.athena#CreateDataCatalog"
        },
        {
          "target": "com.amazonaws.athena#CreateNamedQuery"
        },
        {
          "target": "com.amazonaws.athena#CreateWorkGroup"
        },
        {
          "target": "com.amazonaws.athena#DeleteDataCatalog"
        },
        {
          "target": "com.amazonaws.athena#DeleteNamedQuery"
        },
        {
          "target": "com.amazonaws.athena#DeleteWorkGroup"
        },
        {
          "target": "com.amazonaws.athena#GetDatabase"
        },
        {
          "target": "com.amazonaws.athena#GetDataCatalog"
        },
        {
          "target": "com.amazonaws.athena#GetNamedQuery"
        },
        {
          "target": "com.amazonaws.athena#GetQueryExecution"
        },
        {
          "target": "com.amazonaws.athena#GetQueryResults"
        },
        {
          "target": "com.amazonaws.athena#GetTableMetadata"
        },
        {
          "target": "com.amazonaws.athena#GetWorkGroup"
        },
        {
          "target": "com.amazonaws.athena#ListDatabases"
        },
        {
          "target": "com.amazonaws.athena#ListDataCatalogs"
        },
        {
          "target": "com.amazonaws.athena#ListNamedQueries"
        },
        {
          "target": "com.amazonaws.athena#ListQueryExecutions"
        },
        {
          "target": "com.amazonaws.athena#ListTableMetadata"
        },
        {
          "target": "com.amazonaws.athena#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.athena#ListWorkGroups"
        },
        {
          "target": "com.amazonaws.athena#StartQueryExecution"
        },
        {
          "target": "com.amazonaws.athena#StopQueryExecution"
        },
        {
          "target": "com.amazonaws.athena#TagResource"
        },
        {
          "target": "com.amazonaws.athena#UntagResource"
        },
        {
          "target": "com.amazonaws.athena#UpdateDataCatalog"
        },
        {
          "target": "com.amazonaws.athena#UpdateWorkGroup"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "Athena",
          "arnNamespace": "athena",
          "cloudFormationName": "Athena",
          "cloudTrailEventSource": "athena.amazonaws.com",
          "endpointPrefix": "athena"
        },
        "aws.auth#sigv4": {
          "name": "athena"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<p>Amazon Athena is an interactive query service that lets you use standard SQL to\n            analyze data directly in Amazon S3. You can point Athena at your data in Amazon S3 and\n            run ad-hoc queries and get results in seconds. Athena is serverless, so there is no\n            infrastructure to set up or manage. You pay only for the queries you run. Athena scales\n            automatically—executing queries in parallel—so results are fast, even with large\n            datasets and complex queries. For more information, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/what-is.html\">What is Amazon\n                Athena</a> in the <i>Amazon Athena User Guide</i>.</p>\n        <p>If you connect to Athena using the JDBC driver, use version 1.1.0 of the driver or\n            later with the Amazon Athena API. Earlier version drivers do not support the API. For\n            more information and to download the driver, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html\">Accessing\n                Amazon Athena with JDBC</a>.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#title": "Amazon Athena"
      }
    },
    "com.amazonaws.athena#AmazonResourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        }
      }
    },
    "com.amazonaws.athena#BatchGetNamedQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#BatchGetNamedQueryInput"
      },
      "output": {
        "target": "com.amazonaws.athena#BatchGetNamedQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the details of a single named query or a list of up to 50 queries, which you\n            provide as an array of query ID strings. Requires you to have access to the workgroup in\n            which the queries were saved. Use <a>ListNamedQueriesInput</a> to get the\n            list of named query IDs in the specified workgroup. If information could not be\n            retrieved for a submitted query ID, information about the query ID submitted is listed\n            under <a>UnprocessedNamedQueryId</a>. Named queries differ from executed\n            queries. Use <a>BatchGetQueryExecutionInput</a> to get details about each\n            unique query execution, and <a>ListQueryExecutionsInput</a> to get a list of\n            query execution IDs.</p>"
      }
    },
    "com.amazonaws.athena#BatchGetNamedQueryInput": {
      "type": "structure",
      "members": {
        "NamedQueryIds": {
          "target": "com.amazonaws.athena#NamedQueryIdList",
          "traits": {
            "smithy.api#documentation": "<p>An array of query IDs.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#BatchGetNamedQueryOutput": {
      "type": "structure",
      "members": {
        "NamedQueries": {
          "target": "com.amazonaws.athena#NamedQueryList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the named query IDs submitted.</p>"
          }
        },
        "UnprocessedNamedQueryIds": {
          "target": "com.amazonaws.athena#UnprocessedNamedQueryIdList",
          "traits": {
            "smithy.api#documentation": "<p>Information about provided query IDs.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#BatchGetQueryExecution": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#BatchGetQueryExecutionInput"
      },
      "output": {
        "target": "com.amazonaws.athena#BatchGetQueryExecutionOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the details of a single query execution or a list of up to 50 query\n            executions, which you provide as an array of query execution ID strings. Requires you to\n            have access to the workgroup in which the queries ran. To get a list of query execution\n            IDs, use <a>ListQueryExecutionsInput$WorkGroup</a>. Query executions differ\n            from named (saved) queries. Use <a>BatchGetNamedQueryInput</a> to get details\n            about named queries.</p>"
      }
    },
    "com.amazonaws.athena#BatchGetQueryExecutionInput": {
      "type": "structure",
      "members": {
        "QueryExecutionIds": {
          "target": "com.amazonaws.athena#QueryExecutionIdList",
          "traits": {
            "smithy.api#documentation": "<p>An array of query execution IDs.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#BatchGetQueryExecutionOutput": {
      "type": "structure",
      "members": {
        "QueryExecutions": {
          "target": "com.amazonaws.athena#QueryExecutionList",
          "traits": {
            "smithy.api#documentation": "<p>Information about a query execution.</p>"
          }
        },
        "UnprocessedQueryExecutionIds": {
          "target": "com.amazonaws.athena#UnprocessedQueryExecutionIdList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the query executions that failed to run.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#Boolean": {
      "type": "boolean"
    },
    "com.amazonaws.athena#BoxedBoolean": {
      "type": "boolean",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.athena#BytesScannedCutoffValue": {
      "type": "long",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 10000000
        }
      }
    },
    "com.amazonaws.athena#CatalogNameString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.athena#Column": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the column.</p>",
            "smithy.api#required": {}
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#TypeString",
          "traits": {
            "smithy.api#documentation": "<p>The data type of the column.</p>"
          }
        },
        "Comment": {
          "target": "com.amazonaws.athena#CommentString",
          "traits": {
            "smithy.api#documentation": "<p>Optional information about the column.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains metadata for a column in a table.</p>"
      }
    },
    "com.amazonaws.athena#ColumnInfo": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The catalog to which the query results belong.</p>"
          }
        },
        "SchemaName": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The schema name (database name) to which the query results belong.</p>"
          }
        },
        "TableName": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The table name for the query results.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the column.</p>",
            "smithy.api#required": {}
          }
        },
        "Label": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>A column label.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The data type of the column.</p>",
            "smithy.api#required": {}
          }
        },
        "Precision": {
          "target": "com.amazonaws.athena#Integer",
          "traits": {
            "smithy.api#documentation": "<p>For <code>DECIMAL</code> data types, specifies the total number of digits, up to 38.\n            For performance reasons, we recommend up to 18 digits.</p>"
          }
        },
        "Scale": {
          "target": "com.amazonaws.athena#Integer",
          "traits": {
            "smithy.api#documentation": "<p>For <code>DECIMAL</code> data types, specifies the total number of digits in the\n            fractional part of the value. Defaults to 0.</p>"
          }
        },
        "Nullable": {
          "target": "com.amazonaws.athena#ColumnNullable",
          "traits": {
            "smithy.api#documentation": "<p>Indicates the column's nullable status.</p>"
          }
        },
        "CaseSensitive": {
          "target": "com.amazonaws.athena#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether values in the column are case-sensitive.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the columns in a query execution result.</p>"
      }
    },
    "com.amazonaws.athena#ColumnInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#ColumnInfo"
      }
    },
    "com.amazonaws.athena#ColumnList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#Column"
      }
    },
    "com.amazonaws.athena#ColumnNullable": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NOT_NULL",
            "name": "NOT_NULL"
          },
          {
            "value": "NULLABLE",
            "name": "NULLABLE"
          },
          {
            "value": "UNKNOWN",
            "name": "UNKNOWN"
          }
        ]
      }
    },
    "com.amazonaws.athena#CommentString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.athena#CreateDataCatalog": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#CreateDataCatalogInput"
      },
      "output": {
        "target": "com.amazonaws.athena#CreateDataCatalogOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates (registers) a data catalog with the specified name and properties. Catalogs\n            created are visible to all users of the same AWS account.</p>"
      }
    },
    "com.amazonaws.athena#CreateDataCatalogInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog to create. The catalog name must be unique for the AWS\n            account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen\n            characters.</p>",
            "smithy.api#required": {}
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#DataCatalogType",
          "traits": {
            "smithy.api#documentation": "<p>The type of data catalog to create: <code>LAMBDA</code> for a federated catalog,\n                <code>GLUE</code> for AWS Glue Catalog, or <code>HIVE</code> for an external hive\n            metastore.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>A description of the data catalog to be created.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.athena#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Lambda function or functions to use for creating the data catalog. This\n            is a mapping whose values depend on the catalog type. </p>\n        <ul>\n            <li>\n                <p>For the <code>HIVE</code> data catalog type, use the following syntax. The\n                        <code>metadata-function</code> parameter is required. <code>The\n                        sdk-version</code> parameter is optional and defaults to the currently\n                    supported version.</p>\n                <p>\n                  <code>metadata-function=<i>lambda_arn</i>,\n                            sdk-version=<i>version_number</i>\n                  </code>\n               </p>\n            </li>\n            <li>\n                <p>For the <code>LAMBDA</code> data catalog type, use one of the following sets\n                    of required parameters, but not both.</p>\n                <ul>\n                  <li>\n                        <p>If you have one Lambda function that processes metadata and another\n                            for reading the actual data, use the following syntax. Both parameters\n                            are required.</p>\n                        <p>\n                        <code>metadata-function=<i>lambda_arn</i>,\n                                    record-function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n                  <li>\n                        <p> If you have a composite Lambda function that processes both metadata\n                            and data, use the following syntax to specify your Lambda\n                            function.</p>\n                        <p>\n                        <code>function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>The <code>GLUE</code> type has no parameters.</p>\n            </li>\n         </ul>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.athena#TagList",
          "traits": {
            "smithy.api#documentation": "<p>A list of comma separated tags to add to the data catalog that is created.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#CreateDataCatalogOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#CreateNamedQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#CreateNamedQueryInput"
      },
      "output": {
        "target": "com.amazonaws.athena#CreateNamedQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a named query in the specified workgroup. Requires that you have access to the\n            workgroup.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.athena#CreateNamedQueryInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The query name.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The query description.</p>"
          }
        },
        "Database": {
          "target": "com.amazonaws.athena#DatabaseString",
          "traits": {
            "smithy.api#documentation": "<p>The database to which the query belongs.</p>",
            "smithy.api#required": {}
          }
        },
        "QueryString": {
          "target": "com.amazonaws.athena#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The contents of the query with all query statements.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientRequestToken": {
          "target": "com.amazonaws.athena#IdempotencyToken",
          "traits": {
            "smithy.api#documentation": "<p>A unique case-sensitive string used to ensure the request to create the query is\n            idempotent (executes only once). If another <code>CreateNamedQuery</code> request is\n            received, the same response is returned and another query is not created. If a parameter\n            has changed, for example, the <code>QueryString</code>, an error is returned.</p>\n        <important>\n            <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for\n                Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS\n                CLI, you must provide this token or the action will fail.</p>\n        </important>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup in which the named query is being created.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#CreateNamedQueryOutput": {
      "type": "structure",
      "members": {
        "NamedQueryId": {
          "target": "com.amazonaws.athena#NamedQueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#CreateWorkGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#CreateWorkGroupInput"
      },
      "output": {
        "target": "com.amazonaws.athena#CreateWorkGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a workgroup with the specified name.</p>"
      }
    },
    "com.amazonaws.athena#CreateWorkGroupInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup name.</p>",
            "smithy.api#required": {}
          }
        },
        "Configuration": {
          "target": "com.amazonaws.athena#WorkGroupConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for the workgroup, which includes the location in Amazon S3 where\n            query results are stored, the encryption configuration, if any, used for encrypting\n            query results, whether the Amazon CloudWatch Metrics are enabled for the workgroup, the\n            limit for the amount of bytes scanned (cutoff) per query, if it is specified, and\n            whether workgroup's settings (specified with EnforceWorkGroupConfiguration) in the\n            WorkGroupConfiguration override client-side settings. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#WorkGroupDescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup description.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.athena#TagList",
          "traits": {
            "smithy.api#documentation": "<p>A list of comma separated tags to add to the workgroup that is created.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#CreateWorkGroupOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#DataCatalog": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog. The catalog name must be unique for the AWS account and\n            can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>An optional description of the data catalog.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#DataCatalogType",
          "traits": {
            "smithy.api#documentation": "<p>The type of data catalog: <code>LAMBDA</code> for a federated catalog,\n                <code>GLUE</code> for AWS Glue Catalog, or <code>HIVE</code> for an external hive\n            metastore.</p>",
            "smithy.api#required": {}
          }
        },
        "Parameters": {
          "target": "com.amazonaws.athena#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Lambda function or functions to use for the data catalog. This is a\n            mapping whose values depend on the catalog type. </p>\n        <ul>\n            <li>\n                <p>For the <code>HIVE</code> data catalog type, use the following syntax. The\n                        <code>metadata-function</code> parameter is required. <code>The\n                        sdk-version</code> parameter is optional and defaults to the currently\n                    supported version.</p>\n                <p>\n                  <code>metadata-function=<i>lambda_arn</i>,\n                            sdk-version=<i>version_number</i>\n                  </code>\n               </p>\n            </li>\n            <li>\n                <p>For the <code>LAMBDA</code> data catalog type, use one of the following sets\n                    of required parameters, but not both.</p>\n                <ul>\n                  <li>\n                        <p>If you have one Lambda function that processes metadata and another\n                            for reading the actual data, use the following syntax. Both parameters\n                            are required.</p>\n                        <p>\n                        <code>metadata-function=<i>lambda_arn</i>,\n                                    record-function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n                  <li>\n                        <p> If you have a composite Lambda function that processes both metadata\n                            and data, use the following syntax to specify your Lambda\n                            function.</p>\n                        <p>\n                        <code>function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>The <code>GLUE</code> type has no parameters.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains information about a data catalog in an AWS account.</p>"
      }
    },
    "com.amazonaws.athena#DataCatalogSummary": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#DataCatalogType",
          "traits": {
            "smithy.api#documentation": "<p>The data catalog type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The summary information for the data catalog, which includes its name and type.</p>"
      }
    },
    "com.amazonaws.athena#DataCatalogSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#DataCatalogSummary"
      }
    },
    "com.amazonaws.athena#DataCatalogType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LAMBDA",
            "name": "LAMBDA"
          },
          {
            "value": "GLUE",
            "name": "GLUE"
          },
          {
            "value": "HIVE",
            "name": "HIVE"
          }
        ]
      }
    },
    "com.amazonaws.athena#Database": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>An optional description of the database.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.athena#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of custom key/value pairs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains metadata information for a database in a data catalog.</p>"
      }
    },
    "com.amazonaws.athena#DatabaseList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#Database"
      }
    },
    "com.amazonaws.athena#DatabaseString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.athena#Date": {
      "type": "timestamp"
    },
    "com.amazonaws.athena#Datum": {
      "type": "structure",
      "members": {
        "VarCharValue": {
          "target": "com.amazonaws.athena#datumString",
          "traits": {
            "smithy.api#documentation": "<p>The value of the datum.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A piece of data (a field in the table).</p>"
      }
    },
    "com.amazonaws.athena#DeleteDataCatalog": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#DeleteDataCatalogInput"
      },
      "output": {
        "target": "com.amazonaws.athena#DeleteDataCatalogOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a data catalog.</p>"
      }
    },
    "com.amazonaws.athena#DeleteDataCatalogInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog to delete.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#DeleteDataCatalogOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#DeleteNamedQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#DeleteNamedQueryInput"
      },
      "output": {
        "target": "com.amazonaws.athena#DeleteNamedQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the named query if you have access to the workgroup in which the query was\n            saved.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.athena#DeleteNamedQueryInput": {
      "type": "structure",
      "members": {
        "NamedQueryId": {
          "target": "com.amazonaws.athena#NamedQueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query to delete.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#DeleteNamedQueryOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#DeleteWorkGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#DeleteWorkGroupInput"
      },
      "output": {
        "target": "com.amazonaws.athena#DeleteWorkGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the workgroup with the specified name. The primary workgroup cannot be\n            deleted.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.athena#DeleteWorkGroupInput": {
      "type": "structure",
      "members": {
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The unique name of the workgroup to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "RecursiveDeleteOption": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>The option to delete the workgroup and its contents even if the workgroup contains any\n            named queries.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#DeleteWorkGroupOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#DescriptionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.athena#EncryptionConfiguration": {
      "type": "structure",
      "members": {
        "EncryptionOption": {
          "target": "com.amazonaws.athena#EncryptionOption",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys\n                (<code>SSE-S3</code>), server-side encryption with KMS-managed keys\n                (<code>SSE-KMS</code>), or client-side encryption with KMS-managed keys (CSE-KMS) is\n            used.</p>\n        <p>If a query runs in a workgroup and the workgroup overrides client-side settings, then\n            the workgroup's setting for encryption is used. It specifies whether query results must\n            be encrypted, for all queries that run in this workgroup. </p>",
            "smithy.api#required": {}
          }
        },
        "KmsKey": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>For <code>SSE-KMS</code> and <code>CSE-KMS</code>, this is the KMS key ARN or\n            ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>If query results are encrypted in Amazon S3, indicates the encryption option used (for\n            example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information.</p>"
      }
    },
    "com.amazonaws.athena#EncryptionOption": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SSE_S3",
            "name": "SSE_S3"
          },
          {
            "value": "SSE_KMS",
            "name": "SSE_KMS"
          },
          {
            "value": "CSE_KMS",
            "name": "CSE_KMS"
          }
        ]
      }
    },
    "com.amazonaws.athena#ErrorCode": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The error code returned when the query execution failed to process, or when the\n            processing request for the named query failed.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.athena#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.athena#ExpressionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.athena#GetDataCatalog": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetDataCatalogInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetDataCatalogOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the specified data catalog.</p>"
      }
    },
    "com.amazonaws.athena#GetDataCatalogInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog to return.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetDataCatalogOutput": {
      "type": "structure",
      "members": {
        "DataCatalog": {
          "target": "com.amazonaws.athena#DataCatalog",
          "traits": {
            "smithy.api#documentation": "<p>The data catalog returned.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetDatabase": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetDatabaseInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetDatabaseOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#MetadataException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a database object for the specfied database and data catalog.</p>"
      }
    },
    "com.amazonaws.athena#GetDatabaseInput": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog that contains the database to return.</p>",
            "smithy.api#required": {}
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database to return.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetDatabaseOutput": {
      "type": "structure",
      "members": {
        "Database": {
          "target": "com.amazonaws.athena#Database",
          "traits": {
            "smithy.api#documentation": "<p>The database returned.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetNamedQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetNamedQueryInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetNamedQueryOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about a single query. Requires that you have access to the\n            workgroup in which the query was saved.</p>"
      }
    },
    "com.amazonaws.athena#GetNamedQueryInput": {
      "type": "structure",
      "members": {
        "NamedQueryId": {
          "target": "com.amazonaws.athena#NamedQueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query. Use <a>ListNamedQueries</a> to get query\n            IDs.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetNamedQueryOutput": {
      "type": "structure",
      "members": {
        "NamedQuery": {
          "target": "com.amazonaws.athena#NamedQuery",
          "traits": {
            "smithy.api#documentation": "<p>Information about the query.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetQueryExecution": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetQueryExecutionInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetQueryExecutionOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about a single execution of a query if you have access to the\n            workgroup in which the query ran. Each time a query executes, information about the\n            query execution is saved with a unique ID.</p>"
      }
    },
    "com.amazonaws.athena#GetQueryExecutionInput": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query execution.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetQueryExecutionOutput": {
      "type": "structure",
      "members": {
        "QueryExecution": {
          "target": "com.amazonaws.athena#QueryExecution",
          "traits": {
            "smithy.api#documentation": "<p>Information about the query execution.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetQueryResults": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetQueryResultsInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetQueryResultsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Streams the results of a single query execution specified by\n                <code>QueryExecutionId</code> from the Athena query results location in Amazon S3.\n            For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query Results</a> in the <i>Amazon\n                Athena User Guide</i>. This request does not execute the query but returns\n            results. Use <a>StartQueryExecution</a> to run a query.</p>\n        <p>To stream query results successfully, the IAM principal with permission to call\n                <code>GetQueryResults</code> also must have permissions to the Amazon S3\n                <code>GetObject</code> action for the Athena query results location.</p>\n        <important>\n            <p>IAM principals with permission to the Amazon S3 <code>GetObject</code> action for\n                the query results location are able to retrieve query results from Amazon S3 even if\n                permission to the <code>GetQueryResults</code> action is denied. To restrict user or\n                role access, ensure that Amazon S3 permissions to the Athena query location are\n                denied.</p>\n        </important>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#GetQueryResultsInput": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query execution.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxQueryResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results (rows) to return in this request.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetQueryResultsOutput": {
      "type": "structure",
      "members": {
        "UpdateCount": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of rows inserted with a CREATE TABLE AS SELECT statement. </p>"
          }
        },
        "ResultSet": {
          "target": "com.amazonaws.athena#ResultSet",
          "traits": {
            "smithy.api#documentation": "<p>The results of the query execution.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetTableMetadata": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetTableMetadataInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetTableMetadataOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#MetadataException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns table metadata for the specified catalog, database, and table.</p>"
      }
    },
    "com.amazonaws.athena#GetTableMetadataInput": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog that contains the database and table metadata to\n            return.</p>",
            "smithy.api#required": {}
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database that contains the table metadata to return.</p>",
            "smithy.api#required": {}
          }
        },
        "TableName": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the table for which metadata is returned.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetTableMetadataOutput": {
      "type": "structure",
      "members": {
        "TableMetadata": {
          "target": "com.amazonaws.athena#TableMetadata",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains table metadata.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#GetWorkGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#GetWorkGroupInput"
      },
      "output": {
        "target": "com.amazonaws.athena#GetWorkGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about the workgroup with the specified name.</p>"
      }
    },
    "com.amazonaws.athena#GetWorkGroupInput": {
      "type": "structure",
      "members": {
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#GetWorkGroupOutput": {
      "type": "structure",
      "members": {
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroup",
          "traits": {
            "smithy.api#documentation": "<p>Information about the workgroup.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#IdempotencyToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 32,
          "max": 128
        }
      }
    },
    "com.amazonaws.athena#Integer": {
      "type": "integer"
    },
    "com.amazonaws.athena#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.athena#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates a platform issue, which may be due to a transient condition or\n            outage.</p>",
        "smithy.api#error": "server"
      }
    },
    "com.amazonaws.athena#InvalidRequestException": {
      "type": "structure",
      "members": {
        "AthenaErrorCode": {
          "target": "com.amazonaws.athena#ErrorCode"
        },
        "Message": {
          "target": "com.amazonaws.athena#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates that something is wrong with the input to the request. For example, a\n            required parameter may be missing or out of range.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.athena#KeyString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.athena#ListDataCatalogs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListDataCatalogsInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListDataCatalogsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the data catalogs in the current AWS account.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "DataCatalogsSummary",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListDataCatalogsInput": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the NextToken\n            from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxDataCatalogsCount",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the maximum number of data catalogs to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListDataCatalogsOutput": {
      "type": "structure",
      "members": {
        "DataCatalogsSummary": {
          "target": "com.amazonaws.athena#DataCatalogSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A summary list of data catalogs.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the NextToken\n            from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListDatabases": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListDatabasesInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListDatabasesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#MetadataException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the databases in the specified data catalog.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "DatabaseList",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListDatabasesInput": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog that contains the databases to return.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxDatabasesCount",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the maximum number of results to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListDatabasesOutput": {
      "type": "structure",
      "members": {
        "DatabaseList": {
          "target": "com.amazonaws.athena#DatabaseList",
          "traits": {
            "smithy.api#documentation": "<p>A list of databases from a data catalog.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the NextToken\n            from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListNamedQueries": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListNamedQueriesInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListNamedQueriesOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Provides a list of available query IDs only for queries saved in the specified\n            workgroup. Requires that you have access to the specified workgroup. If a workgroup is\n            not specified, lists the saved queries for the primary workgroup.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListNamedQueriesInput": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxNamedQueriesCount",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of queries to return in this request.</p>"
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup from which the named queries are being returned. If a\n            workgroup is not specified, the saved queries for the primary workgroup are\n            returned.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListNamedQueriesOutput": {
      "type": "structure",
      "members": {
        "NamedQueryIds": {
          "target": "com.amazonaws.athena#NamedQueryIdList",
          "traits": {
            "smithy.api#documentation": "<p>The list of unique query IDs.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListQueryExecutions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListQueryExecutionsInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListQueryExecutionsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Provides a list of available query execution IDs for the queries in the specified\n            workgroup. If a workgroup is not specified, returns a list of query execution IDs for\n            the primary workgroup. Requires you to have access to the workgroup in which the queries\n            ran.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListQueryExecutionsInput": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxQueryExecutionsCount",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of query executions to return in this request.</p>"
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup from which queries are being returned. If a workgroup is not\n            specified, a list of available query execution IDs for the queries in the primary\n            workgroup is returned.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListQueryExecutionsOutput": {
      "type": "structure",
      "members": {
        "QueryExecutionIds": {
          "target": "com.amazonaws.athena#QueryExecutionIdList",
          "traits": {
            "smithy.api#documentation": "<p>The unique IDs of each query execution as an array of strings.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token to be used by the next request if this request is truncated.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListTableMetadata": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListTableMetadataInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListTableMetadataOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#MetadataException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the metadata for the tables in the specified data catalog database.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "TableMetadataList",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListTableMetadataInput": {
      "type": "structure",
      "members": {
        "CatalogName": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog for which table metadata should be returned.</p>",
            "smithy.api#required": {}
          }
        },
        "DatabaseName": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database for which table metadata should be returned.</p>",
            "smithy.api#required": {}
          }
        },
        "Expression": {
          "target": "com.amazonaws.athena#ExpressionString",
          "traits": {
            "smithy.api#documentation": "<p>A regex filter that pattern-matches table names. If no expression is supplied,\n            metadata for all tables are listed.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the NextToken\n            from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxTableMetadataCount",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the maximum number of results to return.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListTableMetadataOutput": {
      "type": "structure",
      "members": {
        "TableMetadataList": {
          "target": "com.amazonaws.athena#TableMetadataList",
          "traits": {
            "smithy.api#documentation": "<p>A list of table metadata.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the NextToken\n            from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListTagsForResourceInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListTagsForResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the tags associated with an Athena workgroup or data catalog resource.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Tags",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListTagsForResourceInput": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.athena#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>Lists the tags for the resource with the specified ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no additional results for\n            this request, where the request lists the tags for the resource with the specified\n            ARN.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxTagsCount",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of results to be returned per request that lists the tags for the\n            resource.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListTagsForResourceOutput": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.athena#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The list of tags associated with the specified resource.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token to be used by the next request if this request is truncated.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListWorkGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#ListWorkGroupsInput"
      },
      "output": {
        "target": "com.amazonaws.athena#ListWorkGroupsOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists available workgroups for the account.</p>",
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.athena#ListWorkGroupsInput": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.athena#MaxWorkGroupsCount",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of workgroups to return in this request.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#ListWorkGroupsOutput": {
      "type": "structure",
      "members": {
        "WorkGroups": {
          "target": "com.amazonaws.athena#WorkGroupsList",
          "traits": {
            "smithy.api#documentation": "<p>The list of workgroups, including their names, descriptions, creation times, and\n            states.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.athena#Token",
          "traits": {
            "smithy.api#documentation": "<p>A token generated by the Athena service that specifies where to continue pagination if\n            a previous request was truncated. To obtain the next set of pages, pass in the\n                <code>NextToken</code> from the response object of the previous page call.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#Long": {
      "type": "long",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.athena#MaxDataCatalogsCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 2,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MaxDatabasesCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MaxNamedQueriesCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MaxQueryExecutionsCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MaxQueryResults": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.athena#MaxTableMetadataCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MaxTagsCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 75
        }
      }
    },
    "com.amazonaws.athena#MaxWorkGroupsCount": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#MetadataException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.athena#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An exception that Athena received when it called a custom metastore. Occurs if the\n            error is not caused by user input (<code>InvalidRequestException</code>) or from the\n            Athena platform (<code>InternalServerException</code>). For example, if a user-created\n            Lambda function is missing permissions, the Lambda <code>4XX</code> exception is\n            returned in a <code>MetadataException</code>.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.athena#NameString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.athena#NamedQuery": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The query name.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The query description.</p>"
          }
        },
        "Database": {
          "target": "com.amazonaws.athena#DatabaseString",
          "traits": {
            "smithy.api#documentation": "<p>The database to which the query belongs.</p>",
            "smithy.api#required": {}
          }
        },
        "QueryString": {
          "target": "com.amazonaws.athena#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The SQL query statements that comprise the query.</p>",
            "smithy.api#required": {}
          }
        },
        "NamedQueryId": {
          "target": "com.amazonaws.athena#NamedQueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the query.</p>"
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup that contains the named query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A query, where <code>QueryString</code> is the list of SQL query statements that\n            comprise the query.</p>"
      }
    },
    "com.amazonaws.athena#NamedQueryId": {
      "type": "string"
    },
    "com.amazonaws.athena#NamedQueryIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#NamedQueryId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#NamedQueryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#NamedQuery"
      }
    },
    "com.amazonaws.athena#ParametersMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.athena#KeyString"
      },
      "value": {
        "target": "com.amazonaws.athena#ParametersMapValue"
      }
    },
    "com.amazonaws.athena#ParametersMapValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 51200
        }
      }
    },
    "com.amazonaws.athena#QueryExecution": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for each query execution.</p>"
          }
        },
        "Query": {
          "target": "com.amazonaws.athena#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The SQL query statements which the query execution ran.</p>"
          }
        },
        "StatementType": {
          "target": "com.amazonaws.athena#StatementType",
          "traits": {
            "smithy.api#documentation": "<p>The type of query statement that was run. <code>DDL</code> indicates DDL query\n            statements. <code>DML</code> indicates DML (Data Manipulation Language) query\n            statements, such as <code>CREATE TABLE AS SELECT</code>. <code>UTILITY</code> indicates\n            query statements other than DDL and DML, such as <code>SHOW CREATE TABLE</code>, or\n                <code>DESCRIBE <table></code>.</p>"
          }
        },
        "ResultConfiguration": {
          "target": "com.amazonaws.athena#ResultConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The location in Amazon S3 where query results were stored and the encryption option,\n            if any, used for query results. These are known as \"client-side settings\". If workgroup\n            settings override client-side settings, then the query uses the location for the query\n            results and the encryption configuration that are specified for the workgroup.</p>"
          }
        },
        "QueryExecutionContext": {
          "target": "com.amazonaws.athena#QueryExecutionContext",
          "traits": {
            "smithy.api#documentation": "<p>The database in which the query execution occurred.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.athena#QueryExecutionStatus",
          "traits": {
            "smithy.api#documentation": "<p>The completion date, current state, submission time, and state change reason (if\n            applicable) for the query execution.</p>"
          }
        },
        "Statistics": {
          "target": "com.amazonaws.athena#QueryExecutionStatistics",
          "traits": {
            "smithy.api#documentation": "<p>Query execution statistics, such as the amount of data scanned, the amount of time\n            that the query took to process, and the type of statement that was run.</p>"
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup in which the query ran.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a single instance of a query execution.</p>"
      }
    },
    "com.amazonaws.athena#QueryExecutionContext": {
      "type": "structure",
      "members": {
        "Database": {
          "target": "com.amazonaws.athena#DatabaseString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the database used in the query execution.</p>"
          }
        },
        "Catalog": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog used in the query execution.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The database and data catalog context in which the query execution occurs.</p>"
      }
    },
    "com.amazonaws.athena#QueryExecutionId": {
      "type": "string"
    },
    "com.amazonaws.athena#QueryExecutionIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#QueryExecutionId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#QueryExecutionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#QueryExecution"
      }
    },
    "com.amazonaws.athena#QueryExecutionState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "QUEUED",
            "name": "QUEUED"
          },
          {
            "value": "RUNNING",
            "name": "RUNNING"
          },
          {
            "value": "SUCCEEDED",
            "name": "SUCCEEDED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          }
        ]
      }
    },
    "com.amazonaws.athena#QueryExecutionStatistics": {
      "type": "structure",
      "members": {
        "EngineExecutionTimeInMillis": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds that the query took to execute.</p>"
          }
        },
        "DataScannedInBytes": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of bytes in the data that was queried.</p>"
          }
        },
        "DataManifestLocation": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The location and file name of a data manifest file. The manifest file is saved to the\n            Athena query results location in Amazon S3. The manifest file tracks files that the\n            query wrote to Amazon S3. If the query fails, the manifest file also tracks files that\n            the query intended to write. The manifest is useful for identifying orphaned files\n            resulting from a failed query. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Working with Query Results, Output Files, and\n                Query History</a> in the <i>Amazon Athena User Guide</i>.</p>"
          }
        },
        "TotalExecutionTimeInMillis": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds that Athena took to run the query.</p>"
          }
        },
        "QueryQueueTimeInMillis": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds that the query was in your query queue waiting for\n            resources. Note that if transient errors occur, Athena might automatically add the query\n            back to the queue.</p>"
          }
        },
        "QueryPlanningTimeInMillis": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds that Athena took to plan the query processing flow. This\n            includes the time spent retrieving table partitions from the data source. Note that\n            because the query engine performs the query planning, query planning time is a subset of\n            engine processing time.</p>"
          }
        },
        "ServiceProcessingTimeInMillis": {
          "target": "com.amazonaws.athena#Long",
          "traits": {
            "smithy.api#documentation": "<p>The number of milliseconds that Athena took to finalize and publish the query results\n            after the query engine finished running the query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The amount of data scanned during the query execution and the amount of time that it\n            took to execute, and the type of statement that was run.</p>"
      }
    },
    "com.amazonaws.athena#QueryExecutionStatus": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.athena#QueryExecutionState",
          "traits": {
            "smithy.api#documentation": "<p>The state of query execution. <code>QUEUED</code> indicates that the query has been\n            submitted to the service, and Athena will execute the query as soon as resources are\n            available. <code>RUNNING</code> indicates that the query is in execution phase.\n                <code>SUCCEEDED</code> indicates that the query completed without errors.\n                <code>FAILED</code> indicates that the query experienced an error and did not\n            complete processing. <code>CANCELLED</code> indicates that a user input interrupted\n            query execution.</p>\n        <note>\n            <p>Athena automatically retries your queries in cases of certain transient errors. As\n                a result, you may see the query state transition from <code>RUNNING</code> or\n                    <code>FAILED</code> to <code>QUEUED</code>. </p>\n        </note>"
          }
        },
        "StateChangeReason": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>Further detail about the status of the query.</p>"
          }
        },
        "SubmissionDateTime": {
          "target": "com.amazonaws.athena#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the query was submitted.</p>"
          }
        },
        "CompletionDateTime": {
          "target": "com.amazonaws.athena#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the query completed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The completion date, current state, submission time, and state change reason (if\n            applicable) for the query execution.</p>"
      }
    },
    "com.amazonaws.athena#QueryString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 262144
        }
      }
    },
    "com.amazonaws.athena#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.athena#ErrorMessage"
        },
        "ResourceName": {
          "target": "com.amazonaws.athena#AmazonResourceName"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource, such as a workgroup, was not found.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.athena#ResultConfiguration": {
      "type": "structure",
      "members": {
        "OutputLocation": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The location in Amazon S3 where your query results are stored, such as\n                <code>s3://path/to/query/bucket/</code>. To run the query, you must specify the\n            query results location using one of the ways: either for individual queries using either\n            this setting (client-side), or in the workgroup, using <a>WorkGroupConfiguration</a>. If none of them is set, Athena issues an error\n            that no output location is provided. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query Results</a>. If\n            workgroup settings override client-side settings, then the query uses the settings\n            specified for the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
          }
        },
        "EncryptionConfiguration": {
          "target": "com.amazonaws.athena#EncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>If query results are encrypted in Amazon S3, indicates the encryption option used (for\n            example, <code>SSE-KMS</code> or <code>CSE-KMS</code>) and key information. This is a\n            client-side setting. If workgroup settings override client-side settings, then the query\n            uses the encryption configuration that is specified for the workgroup, and also uses the\n            location for storing query results specified in the workgroup. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a> and <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The location in Amazon S3 where query results are stored and the encryption option, if\n            any, used for query results. These are known as \"client-side settings\". If workgroup\n            settings override client-side settings, then the query uses the workgroup\n            settings.</p>"
      }
    },
    "com.amazonaws.athena#ResultConfigurationUpdates": {
      "type": "structure",
      "members": {
        "OutputLocation": {
          "target": "com.amazonaws.athena#String",
          "traits": {
            "smithy.api#documentation": "<p>The location in Amazon S3 where your query results are stored, such as\n                <code>s3://path/to/query/bucket/</code>. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query Results</a> If\n            workgroup settings override client-side settings, then the query uses the location for\n            the query results and the encryption configuration that are specified for the workgroup.\n            The \"workgroup settings override\" is specified in EnforceWorkGroupConfiguration\n            (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
          }
        },
        "RemoveOutputLocation": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to \"true\", indicates that the previously-specified query results location (also\n            known as a client-side setting) for queries in this workgroup should be ignored and set\n            to null. If set to \"false\" or not set, and a value is present in the OutputLocation in\n            ResultConfigurationUpdates (the client-side setting), the OutputLocation in the\n            workgroup's ResultConfiguration will be updated with the new value. For more\n            information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override\n                Client-Side Settings</a>.</p>"
          }
        },
        "EncryptionConfiguration": {
          "target": "com.amazonaws.athena#EncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The encryption configuration for the query results.</p>"
          }
        },
        "RemoveEncryptionConfiguration": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to \"true\", indicates that the previously-specified encryption configuration\n            (also known as the client-side setting) for queries in this workgroup should be ignored\n            and set to null. If set to \"false\" or not set, and a value is present in the\n            EncryptionConfiguration in ResultConfigurationUpdates (the client-side setting), the\n            EncryptionConfiguration in the workgroup's ResultConfiguration will be updated with the\n            new value. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override\n                Client-Side Settings</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The information about the updates in the query results, such as output location and\n            encryption configuration for the query results.</p>"
      }
    },
    "com.amazonaws.athena#ResultSet": {
      "type": "structure",
      "members": {
        "Rows": {
          "target": "com.amazonaws.athena#RowList",
          "traits": {
            "smithy.api#documentation": "<p>The rows in the table.</p>"
          }
        },
        "ResultSetMetadata": {
          "target": "com.amazonaws.athena#ResultSetMetadata",
          "traits": {
            "smithy.api#documentation": "<p>The metadata that describes the column structure and data types of a table of query\n            results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The metadata and rows that comprise a query result set. The metadata describes the\n            column structure and data types. To return a <code>ResultSet</code> object, use <a>GetQueryResults</a>.</p>"
      }
    },
    "com.amazonaws.athena#ResultSetMetadata": {
      "type": "structure",
      "members": {
        "ColumnInfo": {
          "target": "com.amazonaws.athena#ColumnInfoList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the columns returned in a query result metadata.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The metadata that describes the column structure and data types of a table of query\n            results. To return a <code>ResultSetMetadata</code> object, use <a>GetQueryResults</a>.</p>"
      }
    },
    "com.amazonaws.athena#Row": {
      "type": "structure",
      "members": {
        "Data": {
          "target": "com.amazonaws.athena#datumList",
          "traits": {
            "smithy.api#documentation": "<p>The data that populates a row in a query result table.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The rows that comprise a query result table.</p>"
      }
    },
    "com.amazonaws.athena#RowList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#Row"
      }
    },
    "com.amazonaws.athena#StartQueryExecution": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#StartQueryExecutionInput"
      },
      "output": {
        "target": "com.amazonaws.athena#StartQueryExecutionOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Runs the SQL query statements contained in the <code>Query</code>. Requires you to\n            have access to the workgroup in which the query ran. Running queries against an external\n            catalog requires <a>GetDataCatalog</a> permission to the catalog. For code\n            samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.athena#StartQueryExecutionInput": {
      "type": "structure",
      "members": {
        "QueryString": {
          "target": "com.amazonaws.athena#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The SQL query statements to be executed.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientRequestToken": {
          "target": "com.amazonaws.athena#IdempotencyToken",
          "traits": {
            "smithy.api#documentation": "<p>A unique case-sensitive string used to ensure the request to create the query is\n            idempotent (executes only once). If another <code>StartQueryExecution</code> request is\n            received, the same response is returned and another query is not created. If a parameter\n            has changed, for example, the <code>QueryString</code>, an error is returned.</p>\n        <important>\n            <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for\n                Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS\n                CLI, you must provide this token or the action will fail.</p>\n        </important>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "QueryExecutionContext": {
          "target": "com.amazonaws.athena#QueryExecutionContext",
          "traits": {
            "smithy.api#documentation": "<p>The database within which the query executes.</p>"
          }
        },
        "ResultConfiguration": {
          "target": "com.amazonaws.athena#ResultConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Specifies information about where and how to save the results of the query execution.\n            If the query runs in a workgroup, then workgroup's settings may override query settings.\n            This affects the query results location. The workgroup settings override is specified in\n            EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
          }
        },
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup in which the query is being started.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#StartQueryExecutionOutput": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query that ran as a result of this request.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#StatementType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DDL",
            "name": "DDL"
          },
          {
            "value": "DML",
            "name": "DML"
          },
          {
            "value": "UTILITY",
            "name": "UTILITY"
          }
        ]
      }
    },
    "com.amazonaws.athena#StopQueryExecution": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#StopQueryExecutionInput"
      },
      "output": {
        "target": "com.amazonaws.athena#StopQueryExecutionOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Stops a query execution. Requires you to have access to the workgroup in which the\n            query ran.</p>\n        <p>For code samples using the AWS SDK for Java, see <a href=\"http://docs.aws.amazon.com/athena/latest/ug/code-samples.html\">Examples and\n                Code Samples</a> in the <i>Amazon Athena User Guide</i>.</p>",
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.athena#StopQueryExecutionInput": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query execution to stop.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#StopQueryExecutionOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#String": {
      "type": "string"
    },
    "com.amazonaws.athena#TableMetadata": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#NameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the table.</p>",
            "smithy.api#required": {}
          }
        },
        "CreateTime": {
          "target": "com.amazonaws.athena#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time that the table was created.</p>"
          }
        },
        "LastAccessTime": {
          "target": "com.amazonaws.athena#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The last time the table was accessed.</p>"
          }
        },
        "TableType": {
          "target": "com.amazonaws.athena#TableTypeString",
          "traits": {
            "smithy.api#documentation": "<p>The type of table. In Athena, only <code>EXTERNAL_TABLE</code> is supported.</p>"
          }
        },
        "Columns": {
          "target": "com.amazonaws.athena#ColumnList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the columns in the table.</p>"
          }
        },
        "PartitionKeys": {
          "target": "com.amazonaws.athena#ColumnList",
          "traits": {
            "smithy.api#documentation": "<p>A list of the partition keys in the table.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.athena#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of custom key/value pairs for table properties.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains metadata for a table.</p>"
      }
    },
    "com.amazonaws.athena#TableMetadataList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#TableMetadata"
      }
    },
    "com.amazonaws.athena#TableTypeString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.athena#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.athena#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>A tag key. The tag key length is from 1 to 128 Unicode characters in UTF-8. You can\n            use letters and numbers representable in UTF-8, and the following characters: + - = . _\n            : / @. Tag keys are case-sensitive and must be unique per resource. </p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.athena#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>A tag value. The tag value length is from 0 to 256 Unicode characters in UTF-8. You\n            can use letters and numbers representable in UTF-8, and the following characters: + - =\n            . _ : / @. Tag values are case-sensitive. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A label that you assign to a resource. In Athena, a resource can be a workgroup or\n            data catalog. Each tag consists of a key and an optional value, both of which you\n            define. For example, you can use tags to categorize Athena workgroups or data catalogs\n            by purpose, owner, or environment. Use a consistent set of tag keys to make it easier to\n            search and filter workgroups or data catalogs in your account. For best practices, see\n                <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">Tagging Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode\n            characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use\n            letters and numbers representable in UTF-8, and the following characters: + - = . _ : /\n            @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you\n            specify more than one tag, separate them by commas. </p>"
      }
    },
    "com.amazonaws.athena#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.athena#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#TagKey"
      }
    },
    "com.amazonaws.athena#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#Tag"
      }
    },
    "com.amazonaws.athena#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#TagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.athena#TagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds one or more tags to an Athena resource. A tag is a label that you assign to a\n            resource. In Athena, a resource can be a workgroup or data catalog. Each tag consists of\n            a key and an optional value, both of which you define. For example, you can use tags to\n            categorize Athena workgroups or data catalogs by purpose, owner, or environment. Use a\n            consistent set of tag keys to make it easier to search and filter workgroups or data\n            catalogs in your account. For best practices, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">Tagging Best Practices</a>. Tag keys can be from 1 to 128 UTF-8 Unicode\n            characters, and tag values can be from 0 to 256 UTF-8 Unicode characters. Tags can use\n            letters and numbers representable in UTF-8, and the following characters: + - = . _ : /\n            @. Tag keys and values are case-sensitive. Tag keys must be unique per resource. If you\n            specify more than one tag, separate them by commas.</p>"
      }
    },
    "com.amazonaws.athena#TagResourceInput": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.athena#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ARN of the Athena resource (workgroup or data catalog) to which tags are\n            to be added.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.athena#TagList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of one or more tags, separated by commas, to be added to an Athena\n            workgroup or data catalog resource.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#TagResourceOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.athena#ThrottleReason": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The reason for the query throttling, for example, when it exceeds the concurrent query\n            limit.</p>",
        "smithy.api#enum": [
          {
            "value": "CONCURRENT_QUERY_LIMIT_EXCEEDED",
            "name": "CONCURRENT_QUERY_LIMIT_EXCEEDED"
          }
        ]
      }
    },
    "com.amazonaws.athena#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.athena#Token": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.athena#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.athena#ErrorMessage"
        },
        "Reason": {
          "target": "com.amazonaws.athena#ThrottleReason"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates that the request was throttled.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.athena#TypeString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 4096
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.athena#UnprocessedNamedQueryId": {
      "type": "structure",
      "members": {
        "NamedQueryId": {
          "target": "com.amazonaws.athena#NamedQueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the named query.</p>"
          }
        },
        "ErrorCode": {
          "target": "com.amazonaws.athena#ErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>The error code returned when the processing request for the named query failed, if\n            applicable.</p>"
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.athena#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message returned when the processing request for the named query failed, if\n            applicable.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a named query ID that could not be processed.</p>"
      }
    },
    "com.amazonaws.athena#UnprocessedNamedQueryIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#UnprocessedNamedQueryId"
      }
    },
    "com.amazonaws.athena#UnprocessedQueryExecutionId": {
      "type": "structure",
      "members": {
        "QueryExecutionId": {
          "target": "com.amazonaws.athena#QueryExecutionId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier of the query execution.</p>"
          }
        },
        "ErrorCode": {
          "target": "com.amazonaws.athena#ErrorCode",
          "traits": {
            "smithy.api#documentation": "<p>The error code returned when the query execution failed to process, if\n            applicable.</p>"
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.athena#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "<p>The error message returned when the query execution failed to process, if\n            applicable.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Describes a query execution that failed to process.</p>"
      }
    },
    "com.amazonaws.athena#UnprocessedQueryExecutionIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#UnprocessedQueryExecutionId"
      }
    },
    "com.amazonaws.athena#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#UntagResourceInput"
      },
      "output": {
        "target": "com.amazonaws.athena#UntagResourceOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.athena#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes one or more tags from a data catalog or workgroup resource.</p>"
      }
    },
    "com.amazonaws.athena#UntagResourceInput": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.athena#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the ARN of the resource from which tags are to be removed.</p>",
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.athena#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>A comma-separated list of one or more tag keys whose tags are to be removed from the\n            specified resource.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.athena#UntagResourceOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#UpdateDataCatalog": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#UpdateDataCatalogInput"
      },
      "output": {
        "target": "com.amazonaws.athena#UpdateDataCatalogOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the data catalog that has the specified name.</p>"
      }
    },
    "com.amazonaws.athena#UpdateDataCatalogInput": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#CatalogNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the data catalog to update. The catalog name must be unique for the AWS\n            account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen\n            characters.</p>",
            "smithy.api#required": {}
          }
        },
        "Type": {
          "target": "com.amazonaws.athena#DataCatalogType",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the type of data catalog to update. Specify <code>LAMBDA</code> for a\n            federated catalog, <code>GLUE</code> for AWS Glue Catalog, or <code>HIVE</code> for an\n            external hive metastore.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#DescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>New or modified text that describes the data catalog.</p>"
          }
        },
        "Parameters": {
          "target": "com.amazonaws.athena#ParametersMap",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the Lambda function or functions to use for updating the data catalog. This\n            is a mapping whose values depend on the catalog type. </p>\n        <ul>\n            <li>\n                <p>For the <code>HIVE</code> data catalog type, use the following syntax. The\n                        <code>metadata-function</code> parameter is required. <code>The\n                        sdk-version</code> parameter is optional and defaults to the currently\n                    supported version.</p>\n                <p>\n                  <code>metadata-function=<i>lambda_arn</i>,\n                            sdk-version=<i>version_number</i>\n                  </code>\n               </p>\n            </li>\n            <li>\n                <p>For the <code>LAMBDA</code> data catalog type, use one of the following sets\n                    of required parameters, but not both.</p>\n                <ul>\n                  <li>\n                        <p>If you have one Lambda function that processes metadata and another\n                            for reading the actual data, use the following syntax. Both parameters\n                            are required.</p>\n                        <p>\n                        <code>metadata-function=<i>lambda_arn</i>,\n                                    record-function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n                  <li>\n                        <p> If you have a composite Lambda function that processes both metadata\n                            and data, use the following syntax to specify your Lambda\n                            function.</p>\n                        <p>\n                        <code>function=<i>lambda_arn</i>\n                        </code>\n                     </p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>The <code>GLUE</code> type has no parameters.</p>\n            </li>\n         </ul>"
          }
        }
      }
    },
    "com.amazonaws.athena#UpdateDataCatalogOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#UpdateWorkGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.athena#UpdateWorkGroupInput"
      },
      "output": {
        "target": "com.amazonaws.athena#UpdateWorkGroupOutput"
      },
      "errors": [
        {
          "target": "com.amazonaws.athena#InternalServerException"
        },
        {
          "target": "com.amazonaws.athena#InvalidRequestException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the workgroup with the specified name. The workgroup's name cannot be\n            changed.</p>"
      }
    },
    "com.amazonaws.athena#UpdateWorkGroupInput": {
      "type": "structure",
      "members": {
        "WorkGroup": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The specified workgroup that will be updated.</p>",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#WorkGroupDescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup description.</p>"
          }
        },
        "ConfigurationUpdates": {
          "target": "com.amazonaws.athena#WorkGroupConfigurationUpdates",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup configuration that will be updated for the given workgroup.</p>"
          }
        },
        "State": {
          "target": "com.amazonaws.athena#WorkGroupState",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup state that will be updated for the given workgroup.</p>"
          }
        }
      }
    },
    "com.amazonaws.athena#UpdateWorkGroupOutput": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.athena#WorkGroup": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup name.</p>",
            "smithy.api#required": {}
          }
        },
        "State": {
          "target": "com.amazonaws.athena#WorkGroupState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the workgroup: ENABLED or DISABLED.</p>"
          }
        },
        "Configuration": {
          "target": "com.amazonaws.athena#WorkGroupConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the workgroup, which includes the location in Amazon S3 where\n            query results are stored, the encryption configuration, if any, used for query results;\n            whether the Amazon CloudWatch Metrics are enabled for the workgroup; whether workgroup\n            settings override client-side settings; and the data usage limits for the amount of data\n            scanned per query or per workgroup. The workgroup settings override is specified in\n            EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#WorkGroupDescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup description.</p>"
          }
        },
        "CreationTime": {
          "target": "com.amazonaws.athena#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time the workgroup was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A workgroup, which contains a name, description, creation time, state, and other\n            configuration, listed under <a>WorkGroup$Configuration</a>. Each workgroup\n            enables you to isolate queries for you or your group of users from other queries in the\n            same account, to configure the query results location and the encryption configuration\n            (known as workgroup settings), to enable sending query metrics to Amazon CloudWatch, and\n            to establish per-query data usage control limits for all queries in a workgroup. The\n            workgroup settings override is specified in EnforceWorkGroupConfiguration (true/false)\n            in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>"
      }
    },
    "com.amazonaws.athena#WorkGroupConfiguration": {
      "type": "structure",
      "members": {
        "ResultConfiguration": {
          "target": "com.amazonaws.athena#ResultConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for the workgroup, which includes the location in Amazon S3 where\n            query results are stored and the encryption option, if any, used for query results. To\n            run the query, you must specify the query results location using one of the ways: either\n            in the workgroup using this setting, or for individual queries (client-side), using\n                <a>ResultConfiguration$OutputLocation</a>. If none of them is set, Athena\n            issues an error that no output location is provided. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/querying.html\">Query\n            Results</a>.</p>"
          }
        },
        "EnforceWorkGroupConfiguration": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to \"true\", the settings for the workgroup override client-side settings. If set\n            to \"false\", client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>"
          }
        },
        "PublishCloudWatchMetricsEnabled": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates that the Amazon CloudWatch metrics are enabled for the workgroup.</p>"
          }
        },
        "BytesScannedCutoffPerQuery": {
          "target": "com.amazonaws.athena#BytesScannedCutoffValue",
          "traits": {
            "smithy.api#documentation": "<p>The upper data usage limit (cutoff) for the amount of bytes a single query in a\n            workgroup is allowed to scan.</p>"
          }
        },
        "RequesterPaysEnabled": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to <code>true</code>, allows members assigned to a workgroup to reference\n            Amazon S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup\n            members cannot query data from Requester Pays buckets, and queries that retrieve data\n            from Requester Pays buckets cause an error. The default is <code>false</code>. For more\n            information about Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html\">Requester Pays Buckets</a>\n            in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration of the workgroup, which includes the location in Amazon S3 where\n            query results are stored, the encryption option, if any, used for query results, whether\n            the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup\n            settings override query settings, and the data usage limits for the amount of data\n            scanned per query or per workgroup. The workgroup settings override is specified in\n            EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>. </p>"
      }
    },
    "com.amazonaws.athena#WorkGroupConfigurationUpdates": {
      "type": "structure",
      "members": {
        "EnforceWorkGroupConfiguration": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to \"true\", the settings for the workgroup override client-side settings. If set\n            to \"false\" client-side settings are used. For more information, see <a href=\"https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html\">Workgroup Settings Override Client-Side Settings</a>.</p>"
          }
        },
        "ResultConfigurationUpdates": {
          "target": "com.amazonaws.athena#ResultConfigurationUpdates",
          "traits": {
            "smithy.api#documentation": "<p>The result configuration information about the queries in this workgroup that will be\n            updated. Includes the updated results location and an updated option for encrypting\n            query results.</p>"
          }
        },
        "PublishCloudWatchMetricsEnabled": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether this workgroup enables publishing metrics to Amazon\n            CloudWatch.</p>"
          }
        },
        "BytesScannedCutoffPerQuery": {
          "target": "com.amazonaws.athena#BytesScannedCutoffValue",
          "traits": {
            "smithy.api#documentation": "<p>The upper limit (cutoff) for the amount of bytes a single query in a workgroup is\n            allowed to scan.</p>"
          }
        },
        "RemoveBytesScannedCutoffPerQuery": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>Indicates that the data usage control limit per query is removed. <a>WorkGroupConfiguration$BytesScannedCutoffPerQuery</a>\n         </p>"
          }
        },
        "RequesterPaysEnabled": {
          "target": "com.amazonaws.athena#BoxedBoolean",
          "traits": {
            "smithy.api#documentation": "<p>If set to <code>true</code>, allows members assigned to a workgroup to specify Amazon\n            S3 Requester Pays buckets in queries. If set to <code>false</code>, workgroup members\n            cannot query data from Requester Pays buckets, and queries that retrieve data from\n            Requester Pays buckets cause an error. The default is <code>false</code>. For more\n            information about Requester Pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html\">Requester Pays Buckets</a>\n            in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration information that will be updated for this workgroup, which includes\n            the location in Amazon S3 where query results are stored, the encryption option, if any,\n            used for query results, whether the Amazon CloudWatch Metrics are enabled for the\n            workgroup, whether the workgroup settings override the client-side settings, and the\n            data usage limit for the amount of bytes scanned per query, if it is specified.</p>"
      }
    },
    "com.amazonaws.athena#WorkGroupDescriptionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.athena#WorkGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "[a-zA-Z0-9._-]{1,128}"
      }
    },
    "com.amazonaws.athena#WorkGroupState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ENABLED",
            "name": "ENABLED"
          },
          {
            "value": "DISABLED",
            "name": "DISABLED"
          }
        ]
      }
    },
    "com.amazonaws.athena#WorkGroupSummary": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.athena#WorkGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the workgroup.</p>"
          }
        },
        "State": {
          "target": "com.amazonaws.athena#WorkGroupState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the workgroup.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.athena#WorkGroupDescriptionString",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup description.</p>"
          }
        },
        "CreationTime": {
          "target": "com.amazonaws.athena#Date",
          "traits": {
            "smithy.api#documentation": "<p>The workgroup creation date and time.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The summary information for the workgroup, which includes its name, state,\n            description, and the date and time it was created.</p>"
      }
    },
    "com.amazonaws.athena#WorkGroupsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#WorkGroupSummary"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.athena#datumList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.athena#Datum"
      }
    },
    "com.amazonaws.athena#datumString": {
      "type": "string"
    }
  }
}
