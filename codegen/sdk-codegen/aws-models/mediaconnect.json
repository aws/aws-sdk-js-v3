{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.mediaconnect#AddBridgeFlowSourceRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Number (ARN) of the flow to use as a source of this bridge. </p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "FlowVpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC interface attachment to use for this source. </p>",
            "smithy.api#jsonName": "flowVpcInterfaceAttachment"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the flow source. This name is used to reference the source and must be unique among sources in this bridge. </p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Add a flow source to an existing bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeNetworkOutputRequest": {
      "type": "structure",
      "members": {
        "IpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output IP Address. </p>",
            "smithy.api#jsonName": "ipAddress",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output name. This name is used to reference the output and must be unique among outputs in this bridge. </p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output's gateway network name. </p>",
            "smithy.api#jsonName": "networkName",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output port. </p>",
            "smithy.api#jsonName": "port",
            "smithy.api#required": {}
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        },
        "Ttl": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output TTL. </p>",
            "smithy.api#jsonName": "ttl",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Add a network output to an existing bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeNetworkSourceRequest": {
      "type": "structure",
      "members": {
        "MulticastIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source multicast IP.</p>",
            "smithy.api#jsonName": "multicastIp",
            "smithy.api#required": {}
          }
        },
        "MulticastSourceSettings": {
          "target": "com.amazonaws.mediaconnect#MulticastSourceSettings",
          "traits": {
            "smithy.api#documentation": "<p> The settings related to the multicast source. </p>",
            "smithy.api#jsonName": "multicastSourceSettings"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the network source. This name is used to reference the source and must be unique among sources in this bridge.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source's gateway network name.</p>",
            "smithy.api#jsonName": "networkName",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source port.</p>",
            "smithy.api#jsonName": "port",
            "smithy.api#required": {}
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Add a network source to an existing bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeOutputRequest": {
      "type": "structure",
      "members": {
        "NetworkOutput": {
          "target": "com.amazonaws.mediaconnect#AddBridgeNetworkOutputRequest",
          "traits": {
            "smithy.api#documentation": "<p> The network output of the bridge. A network output is delivered to your premises. </p>",
            "smithy.api#jsonName": "networkOutput"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Add outputs to the specified bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeOutputs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddBridgeOutputsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddBridgeOutputsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds outputs to an existing bridge.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/bridges/{BridgeArn}/outputs",
          "code": 202
        }
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeOutputsRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfAddBridgeOutputRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The outputs that you want to add to this bridge.</p>",
            "smithy.api#jsonName": "outputs",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeOutputsResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge that you added outputs to.</p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfBridgeOutput",
          "traits": {
            "smithy.api#documentation": "<p> The outputs that you added to this bridge.</p>",
            "smithy.api#jsonName": "outputs"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeSourceRequest": {
      "type": "structure",
      "members": {
        "FlowSource": {
          "target": "com.amazonaws.mediaconnect#AddBridgeFlowSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The source of the flow. </p>",
            "smithy.api#jsonName": "flowSource"
          }
        },
        "NetworkSource": {
          "target": "com.amazonaws.mediaconnect#AddBridgeNetworkSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The source of the network. </p>",
            "smithy.api#jsonName": "networkSource"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Add an output to a bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeSources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddBridgeSourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddBridgeSourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds sources to an existing bridge.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/bridges/{BridgeArn}/sources",
          "code": 202
        }
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeSourcesRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfAddBridgeSourceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The sources that you want to add to this bridge.</p>",
            "smithy.api#jsonName": "sources",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddBridgeSourcesResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge that you added sources to.</p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfBridgeSource",
          "traits": {
            "smithy.api#documentation": "<p> The sources that you added to this bridge.</p>",
            "smithy.api#jsonName": "sources"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddEgressGatewayBridgeRequest": {
      "type": "structure",
      "members": {
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The maximum expected bitrate (in bps) of the egress bridge.</p>",
            "smithy.api#jsonName": "maxBitrate",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddFlowMediaStreams": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddFlowMediaStreamsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddFlowMediaStreamsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds media streams to an existing flow. After you add a media stream to a flow, you can associate it with a source and/or an output that uses the ST 2110 JPEG XS or CDI protocol.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/{FlowArn}/mediaStreams",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#AddFlowMediaStreamsRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "MediaStreams": {
          "target": "com.amazonaws.mediaconnect#__listOfAddMediaStreamRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The media streams that you want to add to the flow.</p>",
            "smithy.api#jsonName": "mediaStreams",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowMediaStreamsResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that you added media streams to.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "MediaStreams": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStream",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that you added to the flow.</p>",
            "smithy.api#jsonName": "mediaStreams"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowOutputs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddFlowOutputsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddFlowOutputsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#AddFlowOutputs420Exception"
        },
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds outputs to an existing flow. You can create up to 50 outputs per flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/{FlowArn}/outputs",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#AddFlowOutputs420Exception": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Exception raised by Elemental MediaConnect when adding the flow output. See the error message for the operation for more information on the cause of this exception. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.mediaconnect#AddFlowOutputsRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to add outputs to.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfAddOutputRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A list of outputs that you want to add to the flow.</p>",
            "smithy.api#jsonName": "outputs",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowOutputsResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that these outputs were added to.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfOutput",
          "traits": {
            "smithy.api#documentation": "<p> The details of the newly added outputs.</p>",
            "smithy.api#jsonName": "outputs"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowSources": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddFlowSourcesRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddFlowSourcesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds sources to a flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/{FlowArn}/source",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#AddFlowSourcesRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfSetSourceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A list of sources that you want to add to the flow.</p>",
            "smithy.api#jsonName": "sources",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowSourcesResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that these sources were added to.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfSource",
          "traits": {
            "smithy.api#documentation": "<p> The details of the newly added sources.</p>",
            "smithy.api#jsonName": "sources"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowVpcInterfaces": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#AddFlowVpcInterfacesRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#AddFlowVpcInterfacesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Adds VPC interfaces to a flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/{FlowArn}/vpcInterfaces",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#AddFlowVpcInterfacesRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "VpcInterfaces": {
          "target": "com.amazonaws.mediaconnect#__listOfVpcInterfaceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A list of VPC interfaces that you want to add to the flow.</p>",
            "smithy.api#jsonName": "vpcInterfaces",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#AddFlowVpcInterfacesResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that these VPC interfaces were added to.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "VpcInterfaces": {
          "target": "com.amazonaws.mediaconnect#__listOfVpcInterface",
          "traits": {
            "smithy.api#documentation": "<p> The details of the newly added VPC interfaces.</p>",
            "smithy.api#jsonName": "vpcInterfaces"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#AddIngressGatewayBridgeRequest": {
      "type": "structure",
      "members": {
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The maximum expected bitrate (in bps) of the ingress bridge. </p>",
            "smithy.api#jsonName": "maxBitrate",
            "smithy.api#required": {}
          }
        },
        "MaxOutputs": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The maximum number of expected outputs on the ingress bridge. </p>",
            "smithy.api#jsonName": "maxOutputs",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddMaintenance": {
      "type": "structure",
      "members": {
        "MaintenanceDay": {
          "target": "com.amazonaws.mediaconnect#MaintenanceDay",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A day of a week when the maintenance will happen. </p>",
            "smithy.api#jsonName": "maintenanceDay",
            "smithy.api#required": {}
          }
        },
        "MaintenanceStartHour": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> UTC time when the maintenance will happen. </p> <p>Use 24-hour HH:MM format. </p> <p>Minutes must be 00. </p> <p>Example: 13:00. </p> <p>The default value is 02:00.</p>",
            "smithy.api#jsonName": "maintenanceStartHour",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Create a maintenance setting for a flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#AddMediaStreamRequest": {
      "type": "structure",
      "members": {
        "Attributes": {
          "target": "com.amazonaws.mediaconnect#MediaStreamAttributesRequest",
          "traits": {
            "smithy.api#documentation": "<p> The attributes that you want to assign to the new media stream.</p>",
            "smithy.api#jsonName": "attributes"
          }
        },
        "ClockRate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The sample rate (in Hz) for the stream. If the media stream type is video or ancillary data, set this value to 90000. If the media stream type is audio, set this value to either 48000 or 96000.</p>",
            "smithy.api#jsonName": "clockRate"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description that can help you quickly identify what your media stream is used for.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "MediaStreamId": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A unique identifier for the media stream. </p>",
            "smithy.api#jsonName": "mediaStreamId",
            "smithy.api#required": {}
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A name that helps you distinguish one media stream from another.</p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        },
        "MediaStreamType": {
          "target": "com.amazonaws.mediaconnect#MediaStreamType",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of media stream.</p>",
            "smithy.api#jsonName": "mediaStreamType",
            "smithy.api#required": {}
          }
        },
        "VideoFormat": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The resolution of the video.</p>",
            "smithy.api#jsonName": "videoFormat"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The media stream that you want to add to the flow. </p>"
      }
    },
    "com.amazonaws.mediaconnect#AddOutputRequest": {
      "type": "structure",
      "members": {
        "CidrAllowList": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#documentation": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "cidrAllowList"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the output. This description appears only on the Audit Manager console and will not be seen by the end user.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address from which video will be sent to output destinations.</p>",
            "smithy.api#jsonName": "destination"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key). Allowable encryption types: static-key.</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "MaxLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
            "smithy.api#jsonName": "maxLatency"
          }
        },
        "MediaStreamOutputConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamOutputConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that are associated with the output, and the parameters for those associations.</p>",
            "smithy.api#jsonName": "mediaStreamOutputConfigurations"
          }
        },
        "MinLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
            "smithy.api#jsonName": "minLatency"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the output. This value must be unique within the current flow.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port to use when content is distributed to this output.</p>",
            "smithy.api#jsonName": "port"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The protocol to use for the output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        },
        "RemoteId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The remote ID for the Zixi-pull output stream.</p>",
            "smithy.api#jsonName": "remoteId"
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SmoothingLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
            "smithy.api#jsonName": "smoothingLatency"
          }
        },
        "StreamId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
            "smithy.api#jsonName": "streamId"
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this output.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        },
        "OutputStatus": {
          "target": "com.amazonaws.mediaconnect#OutputStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether the new output should be enabled or disabled as soon as it is created. If you don't specify the outputStatus field in your request, MediaConnect sets it to ENABLED.</p>",
            "smithy.api#jsonName": "outputStatus"
          }
        },
        "NdiSpeedHqQuality": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
            "smithy.api#jsonName": "ndiSpeedHqQuality"
          }
        },
        "NdiProgramName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
            "smithy.api#jsonName": "ndiProgramName"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A request to add an output to a flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#Algorithm": {
      "type": "enum",
      "members": {
        "aes128": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "aes128",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "aes192": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "aes192",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "aes256": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "aes256",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#AudioMonitoringSetting": {
      "type": "structure",
      "members": {
        "SilentAudio": {
          "target": "com.amazonaws.mediaconnect#SilentAudio",
          "traits": {
            "smithy.api#documentation": "<p> Detects periods of silence. </p>",
            "smithy.api#jsonName": "silentAudio"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Specifies the configuration for audio stream metrics monitoring.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BadRequestException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This exception is thrown if the request contains a semantic error. The precise meaning depends on the API, and is documented in the error message. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.mediaconnect#BlackFrames": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.mediaconnect#State",
          "traits": {
            "smithy.api#documentation": "<p> Indicates whether the <code>BlackFrames</code> metric is enabled or disabled..</p>",
            "smithy.api#jsonName": "state"
          }
        },
        "ThresholdSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Specifies the number of consecutive seconds of black frames that triggers an event or alert.</p>",
            "smithy.api#jsonName": "thresholdSeconds"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Configures settings for the <code>BlackFrames</code> metric.</p>"
      }
    },
    "com.amazonaws.mediaconnect#Bridge": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Number (ARN) of the bridge.</p>",
            "smithy.api#jsonName": "bridgeArn",
            "smithy.api#required": {}
          }
        },
        "BridgeMessages": {
          "target": "com.amazonaws.mediaconnect#__listOfMessageDetail",
          "traits": {
            "smithy.api#documentation": "<p> Messages with details about the bridge. </p>",
            "smithy.api#jsonName": "bridgeMessages"
          }
        },
        "BridgeState": {
          "target": "com.amazonaws.mediaconnect#BridgeState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The state of the bridge. </p>",
            "smithy.api#jsonName": "bridgeState",
            "smithy.api#required": {}
          }
        },
        "EgressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#EgressGatewayBridge",
          "traits": {
            "smithy.api#documentation": "<p> An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>",
            "smithy.api#jsonName": "egressGatewayBridge"
          }
        },
        "IngressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#IngressGatewayBridge",
          "traits": {
            "smithy.api#documentation": "<p> An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>",
            "smithy.api#jsonName": "ingressGatewayBridge"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the bridge.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfBridgeOutput",
          "traits": {
            "smithy.api#documentation": "<p> The outputs on this bridge.</p>",
            "smithy.api#jsonName": "outputs"
          }
        },
        "PlacementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The placement Amazon Resource Number (ARN) of the bridge.</p>",
            "smithy.api#jsonName": "placementArn",
            "smithy.api#required": {}
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#FailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source failover. </p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfBridgeSource",
          "traits": {
            "smithy.api#documentation": "<p> The sources on this bridge.</p>",
            "smithy.api#jsonName": "sources"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A Bridge is the connection between your data center's Instances and the Amazon Web Services cloud. A bridge can be used to send video from the Amazon Web Services cloud to your data center or from your data center to the Amazon Web Services cloud.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::Bridge",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#BridgeResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#BridgeFlowOutput": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Number (ARN) of the cloud flow.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#required": {}
          }
        },
        "FlowSourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Number (ARN) of the flow source.</p>",
            "smithy.api#jsonName": "flowSourceArn",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the bridge's output.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The output of the bridge. A flow output is delivered to the Amazon Web Services cloud. </p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeFlowSource": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the cloud flow used as a source of this bridge.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#required": {}
          }
        },
        "FlowVpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this source.</p>",
            "smithy.api#jsonName": "flowVpcInterfaceAttachment"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the flow source.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "OutputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Number (ARN) of the output.</p>",
            "smithy.api#jsonName": "outputArn"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The source of the bridge. A flow source originates in MediaConnect as an existing cloud flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeNetworkOutput": {
      "type": "structure",
      "members": {
        "IpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output IP address.</p>",
            "smithy.api#jsonName": "ipAddress",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output name.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output's gateway network name.</p>",
            "smithy.api#jsonName": "networkName",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output's port.</p>",
            "smithy.api#jsonName": "port",
            "smithy.api#required": {}
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        },
        "Ttl": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network output TTL.</p>",
            "smithy.api#jsonName": "ttl",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The output of the bridge. A network output is delivered to your premises.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeNetworkSource": {
      "type": "structure",
      "members": {
        "MulticastIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source multicast IP.</p>",
            "smithy.api#jsonName": "multicastIp",
            "smithy.api#required": {}
          }
        },
        "MulticastSourceSettings": {
          "target": "com.amazonaws.mediaconnect#MulticastSourceSettings",
          "traits": {
            "smithy.api#documentation": "<p>The settings related to the multicast source. </p>",
            "smithy.api#jsonName": "multicastSourceSettings"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the network source.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source's gateway network name.</p>",
            "smithy.api#jsonName": "networkName",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source port.</p>",
            "smithy.api#jsonName": "port",
            "smithy.api#required": {}
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The network source protocol.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The source of the bridge. A network source originates at your premises.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeOutput": {
      "type": "structure",
      "members": {
        "FlowOutput": {
          "target": "com.amazonaws.mediaconnect#BridgeFlowOutput",
          "traits": {
            "smithy.api#documentation": "<p> The output of the associated flow. </p>",
            "smithy.api#jsonName": "flowOutput"
          }
        },
        "NetworkOutput": {
          "target": "com.amazonaws.mediaconnect#BridgeNetworkOutput",
          "traits": {
            "smithy.api#documentation": "<p> The network output for the bridge. </p>",
            "smithy.api#jsonName": "networkOutput"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The output of the bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgePlacement": {
      "type": "enum",
      "members": {
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "LOCKED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LOCKED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#BridgeResource": {
      "type": "resource",
      "identifiers": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn"
        }
      },
      "create": {
        "target": "com.amazonaws.mediaconnect#CreateBridge"
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeBridge"
      },
      "update": {
        "target": "com.amazonaws.mediaconnect#UpdateBridge"
      },
      "delete": {
        "target": "com.amazonaws.mediaconnect#DeleteBridge"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListBridges"
      },
      "operations": [
        {
          "target": "com.amazonaws.mediaconnect#AddBridgeOutputs"
        },
        {
          "target": "com.amazonaws.mediaconnect#AddBridgeSources"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveBridgeOutput"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveBridgeSource"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeOutput"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeSource"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeState"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "{BridgeArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "bridge"
        }
      }
    },
    "com.amazonaws.mediaconnect#BridgeSource": {
      "type": "structure",
      "members": {
        "FlowSource": {
          "target": "com.amazonaws.mediaconnect#BridgeFlowSource",
          "traits": {
            "smithy.api#documentation": "<p> The source of the associated flow. </p>",
            "smithy.api#jsonName": "flowSource"
          }
        },
        "NetworkSource": {
          "target": "com.amazonaws.mediaconnect#BridgeNetworkSource",
          "traits": {
            "smithy.api#documentation": "<p> The network source for the bridge. </p>",
            "smithy.api#jsonName": "networkSource"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The bridge's source.</p>"
      }
    },
    "com.amazonaws.mediaconnect#BridgeState": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "STANDBY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDBY"
          }
        },
        "STARTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STARTING"
          }
        },
        "DEPLOYING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEPLOYING"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "STOPPING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOPPING"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "START_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "START_FAILED"
          }
        },
        "START_PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "START_PENDING"
          }
        },
        "STOP_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOP_FAILED"
          }
        },
        "UPDATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATING"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Colorimetry": {
      "type": "enum",
      "members": {
        "BT601": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT601"
          }
        },
        "BT709": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT709"
          }
        },
        "BT2020": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT2020"
          }
        },
        "BT2100": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT2100"
          }
        },
        "ST2065_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ST2065-1"
          }
        },
        "ST2065_3": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ST2065-3"
          }
        },
        "XYZ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "XYZ"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested operation would cause a conflict with the current state of a service resource associated with the request. Resolve the conflict before retrying this request. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.mediaconnect#ConnectionStatus": {
      "type": "enum",
      "members": {
        "CONNECTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CONNECTED"
          }
        },
        "DISCONNECTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISCONNECTED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ContentQualityAnalysisState": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#CreateBridge": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#CreateBridgeRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#CreateBridgeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#CreateBridge420Exception"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Creates a new bridge. The request must include one source.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/bridges",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#CreateBridge420Exception": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Exception raised by Elemental MediaConnect when creating the bridge. See the error message for the operation for more information on the cause of this exception. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.mediaconnect#CreateBridgeRequest": {
      "type": "structure",
      "members": {
        "EgressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#AddEgressGatewayBridgeRequest",
          "traits": {
            "smithy.api#documentation": "<p>An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>",
            "smithy.api#jsonName": "egressGatewayBridge"
          }
        },
        "IngressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#AddIngressGatewayBridgeRequest",
          "traits": {
            "smithy.api#documentation": "<p>An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>",
            "smithy.api#jsonName": "ingressGatewayBridge"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the bridge. This name can not be modified after the bridge is created.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfAddBridgeOutputRequest",
          "traits": {
            "smithy.api#documentation": "<p> The outputs that you want to add to this bridge.</p>",
            "smithy.api#jsonName": "outputs"
          }
        },
        "PlacementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The bridge placement Amazon Resource Number (ARN).</p>",
            "smithy.api#jsonName": "placementArn",
            "smithy.api#required": {}
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#FailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source failover.</p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfAddBridgeSourceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The sources that you want to add to this bridge.</p>",
            "smithy.api#jsonName": "sources",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#CreateBridgeResponse": {
      "type": "structure",
      "members": {
        "Bridge": {
          "target": "com.amazonaws.mediaconnect#Bridge",
          "traits": {
            "smithy.api#documentation": "<p> The name of the bridge that was created.</p>",
            "smithy.api#jsonName": "bridge"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#CreateFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#CreateFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#CreateFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#CreateFlow420Exception"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Creates a new flow. The request must include one source. The request optionally can include outputs (up to 50) and entitlements (up to 50).</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#CreateFlow420Exception": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Exception raised by Elemental MediaConnect when creating the flow. See the error message for the operation for more information on the cause of this exception. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.mediaconnect#CreateFlowRequest": {
      "type": "structure",
      "members": {
        "AvailabilityZone": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current Amazon Web Services Region.</p>",
            "smithy.api#jsonName": "availabilityZone"
          }
        },
        "Entitlements": {
          "target": "com.amazonaws.mediaconnect#__listOfGrantEntitlementRequest",
          "traits": {
            "smithy.api#documentation": "<p> The entitlements that you want to grant on a flow.</p>",
            "smithy.api#jsonName": "entitlements"
          }
        },
        "MediaStreams": {
          "target": "com.amazonaws.mediaconnect#__listOfAddMediaStreamRequest",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that you want to add to the flow. You can associate these media streams with sources and outputs on the flow.</p>",
            "smithy.api#jsonName": "mediaStreams"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the flow.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfAddOutputRequest",
          "traits": {
            "smithy.api#documentation": "<p> The outputs that you want to add to this flow.</p>",
            "smithy.api#jsonName": "outputs"
          }
        },
        "Source": {
          "target": "com.amazonaws.mediaconnect#SetSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The settings for the source that you want to use for the new flow. </p>",
            "smithy.api#jsonName": "source"
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#FailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source failover. </p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfSetSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p>The sources that are assigned to the flow. </p>",
            "smithy.api#jsonName": "sources"
          }
        },
        "VpcInterfaces": {
          "target": "com.amazonaws.mediaconnect#__listOfVpcInterfaceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The VPC interfaces you want on the flow.</p>",
            "smithy.api#jsonName": "vpcInterfaces"
          }
        },
        "Maintenance": {
          "target": "com.amazonaws.mediaconnect#AddMaintenance",
          "traits": {
            "smithy.api#documentation": "<p> The maintenance settings you want to use for the flow. </p>",
            "smithy.api#jsonName": "maintenance"
          }
        },
        "SourceMonitoringConfig": {
          "target": "com.amazonaws.mediaconnect#MonitoringConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source monitoring. </p>",
            "smithy.api#jsonName": "sourceMonitoringConfig"
          }
        },
        "FlowSize": {
          "target": "com.amazonaws.mediaconnect#FlowSize",
          "traits": {
            "smithy.api#documentation": "<p> Determines the processing capacity and feature set of the flow. Set this optional parameter to <code>LARGE</code> if you want to enable NDI outputs on the flow. </p>",
            "smithy.api#jsonName": "flowSize"
          }
        },
        "NdiConfig": {
          "target": "com.amazonaws.mediaconnect#NdiConfig",
          "traits": {
            "smithy.api#documentation": "<p> Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
            "smithy.api#jsonName": "ndiConfig"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#CreateFlowResponse": {
      "type": "structure",
      "members": {
        "Flow": {
          "target": "com.amazonaws.mediaconnect#Flow",
          "traits": {
            "smithy.api#documentation": "<p> The flow that you created. </p>",
            "smithy.api#jsonName": "flow"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#CreateGateway": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#CreateGatewayRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#CreateGatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#CreateGateway420Exception"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Creates a new gateway. The request must include at least one network (up to four).</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/gateways",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#CreateGateway420Exception": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Exception raised by Elemental MediaConnect when creating the gateway. See the error message for the operation for more information on the cause of this exception. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.mediaconnect#CreateGatewayRequest": {
      "type": "structure",
      "members": {
        "EgressCidrBlocks": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The range of IP addresses that are allowed to contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "egressCidrBlocks",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the gateway. This name can not be modified after the gateway is created.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Networks": {
          "target": "com.amazonaws.mediaconnect#__listOfGatewayNetwork",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The list of networks that you want to add to the gateway.</p>",
            "smithy.api#jsonName": "networks",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#CreateGatewayResponse": {
      "type": "structure",
      "members": {
        "Gateway": {
          "target": "com.amazonaws.mediaconnect#Gateway",
          "traits": {
            "smithy.api#documentation": "<p> The gateway that you created. </p>",
            "smithy.api#jsonName": "gateway"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteBridge": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DeleteBridgeRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DeleteBridgeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Deletes a bridge. Before you can delete a bridge, you must stop the bridge.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/bridges/{BridgeArn}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteBridgeRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteBridgeResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the deleted bridge.</p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DeleteFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DeleteFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Deletes a flow. Before you can delete a flow, you must stop the flow.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteFlowRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteFlowResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that was deleted.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Status": {
          "target": "com.amazonaws.mediaconnect#Status",
          "traits": {
            "smithy.api#documentation": "<p> The status of the flow when the <code>DeleteFlow</code> process begins.</p>",
            "smithy.api#jsonName": "status"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteGateway": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DeleteGatewayRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DeleteGatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Deletes a gateway. Before you can delete a gateway, you must deregister its instances and delete its bridges.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/gateways/{GatewayArn}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteGatewayRequest": {
      "type": "structure",
      "members": {
        "GatewayArn": {
          "target": "com.amazonaws.mediaconnect#GatewayArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway that you want to delete.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:gateway:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DeleteGatewayResponse": {
      "type": "structure",
      "members": {
        "GatewayArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the gateway that was deleted.</p>",
            "smithy.api#jsonName": "gatewayArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DeregisterGatewayInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DeregisterGatewayInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DeregisterGatewayInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Deregisters an instance. Before you deregister an instance, all bridges running on the instance must be stopped. If you want to deregister an instance without stopping the bridges, you must use the --force option.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/gateway-instances/{GatewayInstanceArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#DeregisterGatewayInstanceRequest": {
      "type": "structure",
      "members": {
        "Force": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p> Force the deregistration of an instance. Force will deregister an instance, even if there are bridges running on it.</p>",
            "smithy.api#httpQuery": "force"
          }
        },
        "GatewayInstanceArn": {
          "target": "com.amazonaws.mediaconnect#GatewayInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway that contains the instance that you want to deregister.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:gateway:.+:instance:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DeregisterGatewayInstanceResponse": {
      "type": "structure",
      "members": {
        "GatewayInstanceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the instance.</p>",
            "smithy.api#jsonName": "gatewayInstanceArn"
          }
        },
        "InstanceState": {
          "target": "com.amazonaws.mediaconnect#InstanceState",
          "traits": {
            "smithy.api#documentation": "<p> The status of the instance.</p>",
            "smithy.api#jsonName": "instanceState"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeBridge": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeBridgeRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeBridgeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of a bridge.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/bridges/{BridgeArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeBridgeRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to describe.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeBridgeResponse": {
      "type": "structure",
      "members": {
        "Bridge": {
          "target": "com.amazonaws.mediaconnect#Bridge",
          "traits": {
            "smithy.api#documentation": "<p>The bridge that you requested a description of. </p>",
            "smithy.api#jsonName": "bridge"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of a flow. The response includes the flow Amazon Resource Name (ARN), name, and Availability Zone, as well as details about the source, outputs, and entitlements.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/flows/{FlowArn}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "FlowActive": {
            "documentation": "Wait until a flow is active",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "ACTIVE",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "STARTING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "UPDATING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "InternalServerErrorException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "ServiceUnavailableException"
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "STANDBY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "ERROR",
                    "comparator": "stringEquals"
                  }
                }
              }
            ],
            "minDelay": 3
          },
          "FlowDeleted": {
            "documentation": "Wait until a flow is deleted",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "errorType": "NotFoundException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "DELETING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "InternalServerErrorException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "ServiceUnavailableException"
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "ERROR",
                    "comparator": "stringEquals"
                  }
                }
              }
            ],
            "minDelay": 3
          },
          "FlowStandby": {
            "documentation": "Wait until a flow is in standby mode",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "STANDBY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "STOPPING",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "InternalServerErrorException"
                }
              },
              {
                "state": "retry",
                "matcher": {
                  "errorType": "ServiceUnavailableException"
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "Flow.Status",
                    "expected": "ERROR",
                    "comparator": "stringEquals"
                  }
                }
              }
            ],
            "minDelay": 3
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that you want to describe.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowResponse": {
      "type": "structure",
      "members": {
        "Flow": {
          "target": "com.amazonaws.mediaconnect#Flow",
          "traits": {
            "smithy.api#documentation": "<p>The flow that you requested a description of. </p>",
            "smithy.api#jsonName": "flow"
          }
        },
        "Messages": {
          "target": "com.amazonaws.mediaconnect#Messages",
          "traits": {
            "smithy.api#documentation": "<p> Any errors that apply currently to the flow. If there are no errors, MediaConnect will not include this field in the response. </p>",
            "smithy.api#jsonName": "messages"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceMetadata": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowSourceMetadataRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowSourceMetadataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> The <code>DescribeFlowSourceMetadata</code> API is used to view information about the flow's source transport stream and programs. This API displays status messages about the flow's source as well as details about the program's video, audio, and other data. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/flows/{FlowArn}/source-metadata",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceMetadataRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceMetadataResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that DescribeFlowSourceMetadata was performed on.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Messages": {
          "target": "com.amazonaws.mediaconnect#__listOfMessageDetail",
          "traits": {
            "smithy.api#documentation": "<p> Provides a status code and message regarding issues found with the flow source metadata.</p>",
            "smithy.api#jsonName": "messages"
          }
        },
        "Timestamp": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p> The timestamp of the most recent change in metadata for this flow’s source.</p>",
            "smithy.api#jsonName": "timestamp",
            "smithy.api#timestampFormat": "date-time"
          }
        },
        "TransportMediaInfo": {
          "target": "com.amazonaws.mediaconnect#TransportMediaInfo",
          "traits": {
            "smithy.api#documentation": "<p> Information about the flow's transport media. </p>",
            "smithy.api#jsonName": "transportMediaInfo"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnail": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnailRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnailResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Describes the thumbnail for the flow source. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/flows/{FlowArn}/source-thumbnail",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnailRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnailResponse": {
      "type": "structure",
      "members": {
        "ThumbnailDetails": {
          "target": "com.amazonaws.mediaconnect#ThumbnailDetails",
          "traits": {
            "smithy.api#documentation": "<p>The details of the thumbnail, including thumbnail base64 string, timecode and the time when thumbnail was generated. </p>",
            "smithy.api#jsonName": "thumbnailDetails"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGateway": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeGatewayRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeGatewayResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of a gateway. The response includes the gateway Amazon Resource Name (ARN), name, and CIDR blocks, as well as details about the networks.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/gateways/{GatewayArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGatewayInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeGatewayInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeGatewayInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of an instance. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/gateway-instances/{GatewayInstanceArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGatewayInstanceRequest": {
      "type": "structure",
      "members": {
        "GatewayInstanceArn": {
          "target": "com.amazonaws.mediaconnect#GatewayInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway instance that you want to describe.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:gateway:.+:instance:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGatewayInstanceResponse": {
      "type": "structure",
      "members": {
        "GatewayInstance": {
          "target": "com.amazonaws.mediaconnect#GatewayInstance",
          "traits": {
            "smithy.api#documentation": "<p>The gateway instance that you requested a description of. </p>",
            "smithy.api#jsonName": "gatewayInstance"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGatewayRequest": {
      "type": "structure",
      "members": {
        "GatewayArn": {
          "target": "com.amazonaws.mediaconnect#GatewayArn",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the gateway that you want to describe.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:gateway:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeGatewayResponse": {
      "type": "structure",
      "members": {
        "Gateway": {
          "target": "com.amazonaws.mediaconnect#Gateway",
          "traits": {
            "smithy.api#documentation": "<p>The gateway that you wanted to describe. </p>",
            "smithy.api#jsonName": "gateway"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeOffering": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeOfferingRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeOfferingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of an offering. The response includes the offering description, duration, outbound bandwidth, price, and Amazon Resource Name (ARN).</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/offerings/{OfferingArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeOfferingRequest": {
      "type": "structure",
      "members": {
        "OfferingArn": {
          "target": "com.amazonaws.mediaconnect#OfferingArn",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the offering.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeOfferingResponse": {
      "type": "structure",
      "members": {
        "Offering": {
          "target": "com.amazonaws.mediaconnect#Offering",
          "traits": {
            "smithy.api#documentation": "<p>The offering that you requested a description of. </p>",
            "smithy.api#jsonName": "offering"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeReservation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#DescribeReservationRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#DescribeReservationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays the details of a reservation. The response includes the reservation name, state, start date and time, and the details of the offering that make up the rest of the reservation (such as price, duration, and outbound bandwidth).</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/reservations/{ReservationArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeReservationRequest": {
      "type": "structure",
      "members": {
        "ReservationArn": {
          "target": "com.amazonaws.mediaconnect#ReservationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the offering. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#DescribeReservationResponse": {
      "type": "structure",
      "members": {
        "Reservation": {
          "target": "com.amazonaws.mediaconnect#Reservation",
          "traits": {
            "smithy.api#documentation": "<p> A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate. </p>",
            "smithy.api#jsonName": "reservation"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#DesiredState": {
      "type": "enum",
      "members": {
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "STANDBY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDBY"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#DestinationConfiguration": {
      "type": "structure",
      "members": {
        "DestinationIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The IP address where you want MediaConnect to send contents of the media stream.</p>",
            "smithy.api#jsonName": "destinationIp",
            "smithy.api#required": {}
          }
        },
        "DestinationPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The port that you want MediaConnect to use when it distributes the media stream to the output.</p>",
            "smithy.api#jsonName": "destinationPort",
            "smithy.api#required": {}
          }
        },
        "Interface": {
          "target": "com.amazonaws.mediaconnect#Interface",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The VPC interface that you want to use for the media stream associated with the output.</p>",
            "smithy.api#jsonName": "interface",
            "smithy.api#required": {}
          }
        },
        "OutboundIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The IP address that the receiver requires in order to establish a connection with the flow. This value is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the CDI or ST 2110 JPEG XS or protocol. </p>",
            "smithy.api#jsonName": "outboundIp",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The transport parameters that you want to associate with an outbound media stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#DestinationConfigurationRequest": {
      "type": "structure",
      "members": {
        "DestinationIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The IP address where you want MediaConnect to send contents of the media stream.</p>",
            "smithy.api#jsonName": "destinationIp",
            "smithy.api#required": {}
          }
        },
        "DestinationPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The port that you want MediaConnect to use when it distributes the media stream to the output.</p>",
            "smithy.api#jsonName": "destinationPort",
            "smithy.api#required": {}
          }
        },
        "Interface": {
          "target": "com.amazonaws.mediaconnect#InterfaceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The VPC interface that you want to use for the media stream associated with the output.</p>",
            "smithy.api#jsonName": "interface",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The definition of a media stream that you want to associate with the output. </p>"
      }
    },
    "com.amazonaws.mediaconnect#DurationUnits": {
      "type": "enum",
      "members": {
        "MONTHS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MONTHS"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#EgressGatewayBridge": {
      "type": "structure",
      "members": {
        "InstanceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ID of the instance running this bridge.</p>",
            "smithy.api#jsonName": "instanceId"
          }
        },
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The maximum expected bitrate (in bps) of the egress bridge.</p>",
            "smithy.api#jsonName": "maxBitrate",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Create a bridge with the egress bridge type. An egress bridge is a cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>"
      }
    },
    "com.amazonaws.mediaconnect#EncoderProfile": {
      "type": "enum",
      "members": {
        "main": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "main",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "high": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "high",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#EncodingName": {
      "type": "enum",
      "members": {
        "jxsv": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "jxsv",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "raw": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "raw",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "smpte291": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "smpte291",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "pcm": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "pcm",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#EncodingParameters": {
      "type": "structure",
      "members": {
        "CompressionFactor": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.</p>",
            "smithy.api#jsonName": "compressionFactor",
            "smithy.api#required": {}
          }
        },
        "EncoderProfile": {
          "target": "com.amazonaws.mediaconnect#EncoderProfile",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.</p>",
            "smithy.api#jsonName": "encoderProfile",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.</p>"
      }
    },
    "com.amazonaws.mediaconnect#EncodingParametersRequest": {
      "type": "structure",
      "members": {
        "CompressionFactor": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A value that is used to calculate compression for an output. The bitrate of the output is calculated as follows: Output bitrate = (1 / compressionFactor) * (source bitrate) This property only applies to outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol. Valid values are floating point numbers in the range of 3.0 to 10.0, inclusive.</p>",
            "smithy.api#jsonName": "compressionFactor",
            "smithy.api#required": {}
          }
        },
        "EncoderProfile": {
          "target": "com.amazonaws.mediaconnect#EncoderProfile",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, if at least one source on the flow uses the CDI protocol.</p>",
            "smithy.api#jsonName": "encoderProfile",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source.</p>"
      }
    },
    "com.amazonaws.mediaconnect#Encryption": {
      "type": "structure",
      "members": {
        "Algorithm": {
          "target": "com.amazonaws.mediaconnect#Algorithm",
          "traits": {
            "smithy.api#documentation": "<p> The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).</p>",
            "smithy.api#jsonName": "algorithm"
          }
        },
        "ConstantInitializationVector": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "constantInitializationVector"
          }
        },
        "DeviceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "deviceId"
          }
        },
        "KeyType": {
          "target": "com.amazonaws.mediaconnect#KeyType",
          "traits": {
            "smithy.api#documentation": "<p> The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>",
            "smithy.api#jsonName": "keyType"
          }
        },
        "Region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Web Services Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "region"
          }
        },
        "ResourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "resourceId"
          }
        },
        "RoleArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the role that you created during setup (when you set up MediaConnect as a trusted entity).</p>",
            "smithy.api#jsonName": "roleArn",
            "smithy.api#required": {}
          }
        },
        "SecretArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the secret that you created in Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.</p>",
            "smithy.api#jsonName": "secretArn"
          }
        },
        "Url": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "url"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the encryption of the flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#Entitlement": {
      "type": "structure",
      "members": {
        "DataTransferSubscriberFeePercent": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
            "smithy.api#jsonName": "dataTransferSubscriberFeePercent"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the entitlement.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of encryption that will be used on the output that is associated with this entitlement.</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the entitlement. </p>",
            "smithy.api#jsonName": "entitlementArn",
            "smithy.api#required": {}
          }
        },
        "EntitlementStatus": {
          "target": "com.amazonaws.mediaconnect#EntitlementStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether the entitlement is enabled. </p>",
            "smithy.api#jsonName": "entitlementStatus"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the entitlement. </p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Subscribers": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source. </p>",
            "smithy.api#jsonName": "subscribers",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for a flow entitlement.</p>"
      }
    },
    "com.amazonaws.mediaconnect#EntitlementStatus": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#FailoverConfig": {
      "type": "structure",
      "members": {
        "FailoverMode": {
          "target": "com.amazonaws.mediaconnect#FailoverMode",
          "traits": {
            "smithy.api#documentation": "<p> The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.</p>",
            "smithy.api#jsonName": "failoverMode"
          }
        },
        "RecoveryWindow": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Search window time to look for dash-7 packets.</p>",
            "smithy.api#jsonName": "recoveryWindow"
          }
        },
        "SourcePriority": {
          "target": "com.amazonaws.mediaconnect#SourcePriority",
          "traits": {
            "smithy.api#documentation": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.</p>",
            "smithy.api#jsonName": "sourcePriority"
          }
        },
        "State": {
          "target": "com.amazonaws.mediaconnect#State",
          "traits": {
            "smithy.api#documentation": "<p>The state of source failover on the flow. If the state is inactive, the flow can have only one source. If the state is active, the flow can have one or two sources. </p>",
            "smithy.api#jsonName": "state"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for source failover.</p>"
      }
    },
    "com.amazonaws.mediaconnect#FailoverMode": {
      "type": "enum",
      "members": {
        "MERGE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MERGE"
          }
        },
        "FAILOVER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILOVER"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Flow": {
      "type": "structure",
      "members": {
        "AvailabilityZone": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current Amazon Web Services Region.</p>",
            "smithy.api#jsonName": "availabilityZone",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the flow. This value is not used or seen outside of the current MediaConnect account.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "EgressIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address from which video will be sent to output destinations.</p>",
            "smithy.api#jsonName": "egressIp"
          }
        },
        "Entitlements": {
          "target": "com.amazonaws.mediaconnect#__listOfEntitlement",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The entitlements in this flow.</p>",
            "smithy.api#jsonName": "entitlements",
            "smithy.api#required": {}
          }
        },
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#required": {}
          }
        },
        "MediaStreams": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStream",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that are associated with the flow. After you associate a media stream with a source, you can also associate it with outputs on the flow.</p>",
            "smithy.api#jsonName": "mediaStreams"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the flow.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Outputs": {
          "target": "com.amazonaws.mediaconnect#__listOfOutput",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The outputs in this flow.</p>",
            "smithy.api#jsonName": "outputs",
            "smithy.api#required": {}
          }
        },
        "Source": {
          "target": "com.amazonaws.mediaconnect#Source",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The source for the flow. </p>",
            "smithy.api#jsonName": "source",
            "smithy.api#required": {}
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#FailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for the source failover. </p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        },
        "Sources": {
          "target": "com.amazonaws.mediaconnect#__listOfSource",
          "traits": {
            "smithy.api#documentation": "<p>The settings for the sources that are assigned to the flow. </p>",
            "smithy.api#jsonName": "sources"
          }
        },
        "Status": {
          "target": "com.amazonaws.mediaconnect#Status",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The current status of the flow.</p>",
            "smithy.api#jsonName": "status",
            "smithy.api#required": {}
          }
        },
        "VpcInterfaces": {
          "target": "com.amazonaws.mediaconnect#__listOfVpcInterface",
          "traits": {
            "smithy.api#documentation": "<p> The VPC Interfaces for this flow.</p>",
            "smithy.api#jsonName": "vpcInterfaces"
          }
        },
        "Maintenance": {
          "target": "com.amazonaws.mediaconnect#Maintenance",
          "traits": {
            "smithy.api#documentation": "<p> The maintenance settings for the flow. </p>",
            "smithy.api#jsonName": "maintenance"
          }
        },
        "SourceMonitoringConfig": {
          "target": "com.amazonaws.mediaconnect#MonitoringConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source monitoring. </p>",
            "smithy.api#jsonName": "sourceMonitoringConfig"
          }
        },
        "FlowSize": {
          "target": "com.amazonaws.mediaconnect#FlowSize",
          "traits": {
            "smithy.api#documentation": "<p> Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow. </p>",
            "smithy.api#jsonName": "flowSize"
          }
        },
        "NdiConfig": {
          "target": "com.amazonaws.mediaconnect#NdiConfig",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
            "smithy.api#jsonName": "ndiConfig"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for a flow, including its source, outputs, and entitlements.</p>"
      }
    },
    "com.amazonaws.mediaconnect#FlowArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::Flow",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#FlowResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#FlowResource": {
      "type": "resource",
      "identifiers": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn"
        }
      },
      "create": {
        "target": "com.amazonaws.mediaconnect#CreateFlow"
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeFlow"
      },
      "update": {
        "target": "com.amazonaws.mediaconnect#UpdateFlow"
      },
      "delete": {
        "target": "com.amazonaws.mediaconnect#DeleteFlow"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListFlows"
      },
      "operations": [
        {
          "target": "com.amazonaws.mediaconnect#AddFlowMediaStreams"
        },
        {
          "target": "com.amazonaws.mediaconnect#AddFlowOutputs"
        },
        {
          "target": "com.amazonaws.mediaconnect#AddFlowSources"
        },
        {
          "target": "com.amazonaws.mediaconnect#AddFlowVpcInterfaces"
        },
        {
          "target": "com.amazonaws.mediaconnect#DescribeFlowSourceMetadata"
        },
        {
          "target": "com.amazonaws.mediaconnect#DescribeFlowSourceThumbnail"
        },
        {
          "target": "com.amazonaws.mediaconnect#GrantFlowEntitlements"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveFlowMediaStream"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveFlowOutput"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveFlowSource"
        },
        {
          "target": "com.amazonaws.mediaconnect#RemoveFlowVpcInterface"
        },
        {
          "target": "com.amazonaws.mediaconnect#RevokeFlowEntitlement"
        },
        {
          "target": "com.amazonaws.mediaconnect#StartFlow"
        },
        {
          "target": "com.amazonaws.mediaconnect#StopFlow"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateFlowEntitlement"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateFlowMediaStream"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateFlowOutput"
        },
        {
          "target": "com.amazonaws.mediaconnect#UpdateFlowSource"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "{FlowArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "flow"
        }
      }
    },
    "com.amazonaws.mediaconnect#FlowSize": {
      "type": "enum",
      "members": {
        "MEDIUM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MEDIUM"
          }
        },
        "LARGE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LARGE"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Fmtp": {
      "type": "structure",
      "members": {
        "ChannelOrder": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The format of the audio channel. </p>",
            "smithy.api#jsonName": "channelOrder"
          }
        },
        "Colorimetry": {
          "target": "com.amazonaws.mediaconnect#Colorimetry",
          "traits": {
            "smithy.api#documentation": "<p>The format used for the representation of color. </p>",
            "smithy.api#jsonName": "colorimetry"
          }
        },
        "ExactFramerate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The frame rate for the video stream, in frames/second. For example: 60000/1001. </p>",
            "smithy.api#jsonName": "exactFramerate"
          }
        },
        "Par": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The pixel aspect ratio (PAR) of the video. </p>",
            "smithy.api#jsonName": "par"
          }
        },
        "Range": {
          "target": "com.amazonaws.mediaconnect#Range",
          "traits": {
            "smithy.api#documentation": "<p>The encoding range of the video. </p>",
            "smithy.api#jsonName": "range"
          }
        },
        "ScanMode": {
          "target": "com.amazonaws.mediaconnect#ScanMode",
          "traits": {
            "smithy.api#documentation": "<p>The type of compression that was used to smooth the video’s appearance. </p>",
            "smithy.api#jsonName": "scanMode"
          }
        },
        "Tcs": {
          "target": "com.amazonaws.mediaconnect#Tcs",
          "traits": {
            "smithy.api#documentation": "<p>The transfer characteristic system (TCS) that is used in the video. </p>",
            "smithy.api#jsonName": "tcs"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A set of parameters that define the media stream. </p>"
      }
    },
    "com.amazonaws.mediaconnect#FmtpRequest": {
      "type": "structure",
      "members": {
        "ChannelOrder": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The format of the audio channel.</p>",
            "smithy.api#jsonName": "channelOrder"
          }
        },
        "Colorimetry": {
          "target": "com.amazonaws.mediaconnect#Colorimetry",
          "traits": {
            "smithy.api#documentation": "<p> The format that is used for the representation of color.</p>",
            "smithy.api#jsonName": "colorimetry"
          }
        },
        "ExactFramerate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The frame rate for the video stream, in frames/second. For example: 60000/1001. If you specify a whole number, MediaConnect uses a ratio of N/1. For example, if you specify 60, MediaConnect uses 60/1 as the <code>exactFramerate</code>.</p>",
            "smithy.api#jsonName": "exactFramerate"
          }
        },
        "Par": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The pixel aspect ratio (PAR) of the video.</p>",
            "smithy.api#jsonName": "par"
          }
        },
        "Range": {
          "target": "com.amazonaws.mediaconnect#Range",
          "traits": {
            "smithy.api#documentation": "<p> The encoding range of the video.</p>",
            "smithy.api#jsonName": "range"
          }
        },
        "ScanMode": {
          "target": "com.amazonaws.mediaconnect#ScanMode",
          "traits": {
            "smithy.api#documentation": "<p> The type of compression that was used to smooth the video’s appearance.</p>",
            "smithy.api#jsonName": "scanMode"
          }
        },
        "Tcs": {
          "target": "com.amazonaws.mediaconnect#Tcs",
          "traits": {
            "smithy.api#documentation": "<p> The transfer characteristic system (TCS) that is used in the video.</p>",
            "smithy.api#jsonName": "tcs"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings that you want to use to define the media stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ForbiddenException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.mediaconnect#FrameResolution": {
      "type": "structure",
      "members": {
        "FrameHeight": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The number of pixels in the height of the video frame.</p>",
            "smithy.api#jsonName": "frameHeight",
            "smithy.api#required": {}
          }
        },
        "FrameWidth": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The number of pixels in the width of the video frame.</p>",
            "smithy.api#jsonName": "frameWidth",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The frame resolution used by the video stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#FrozenFrames": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.mediaconnect#State",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the <code>FrozenFrames</code> metric is enabled or disabled.</p>",
            "smithy.api#jsonName": "state"
          }
        },
        "ThresholdSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Specifies the number of consecutive seconds of a static image that triggers an event or alert.</p>",
            "smithy.api#jsonName": "thresholdSeconds"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Configures settings for the <code>FrozenFrames</code> metric.</p>"
      }
    },
    "com.amazonaws.mediaconnect#Gateway": {
      "type": "structure",
      "members": {
        "EgressCidrBlocks": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "egressCidrBlocks",
            "smithy.api#required": {}
          }
        },
        "GatewayArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
            "smithy.api#jsonName": "gatewayArn",
            "smithy.api#required": {}
          }
        },
        "GatewayMessages": {
          "target": "com.amazonaws.mediaconnect#__listOfMessageDetail",
          "traits": {
            "smithy.api#documentation": "<p>Messages with information about the gateway. </p>",
            "smithy.api#jsonName": "gatewayMessages"
          }
        },
        "GatewayState": {
          "target": "com.amazonaws.mediaconnect#GatewayState",
          "traits": {
            "smithy.api#documentation": "<p> The current status of the gateway.</p>",
            "smithy.api#jsonName": "gatewayState"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the gateway. This name can not be modified after the gateway is created.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Networks": {
          "target": "com.amazonaws.mediaconnect#__listOfGatewayNetwork",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The list of networks in the gateway.</p>",
            "smithy.api#jsonName": "networks",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The settings for a gateway, including its networks. </p>"
      }
    },
    "com.amazonaws.mediaconnect#GatewayArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::Gateway",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#GatewayResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#GatewayBridgeSource": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the bridge feeding this flow.</p>",
            "smithy.api#jsonName": "bridgeArn",
            "smithy.api#required": {}
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this bridge source.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#GatewayInstance": {
      "type": "structure",
      "members": {
        "BridgePlacement": {
          "target": "com.amazonaws.mediaconnect#BridgePlacement",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be deployed to this instance. </p>",
            "smithy.api#jsonName": "bridgePlacement",
            "smithy.api#required": {}
          }
        },
        "ConnectionStatus": {
          "target": "com.amazonaws.mediaconnect#ConnectionStatus",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The connection state of the instance. </p>",
            "smithy.api#jsonName": "connectionStatus",
            "smithy.api#required": {}
          }
        },
        "GatewayArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the instance. </p>",
            "smithy.api#jsonName": "gatewayArn",
            "smithy.api#required": {}
          }
        },
        "GatewayInstanceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The ARN of the gateway. </p>",
            "smithy.api#jsonName": "gatewayInstanceArn",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The instance ID generated by the SSM install. This will begin with \"mi-\". </p>",
            "smithy.api#jsonName": "instanceId",
            "smithy.api#required": {}
          }
        },
        "InstanceMessages": {
          "target": "com.amazonaws.mediaconnect#__listOfMessageDetail",
          "traits": {
            "smithy.api#documentation": "<p> Messages with information about the gateway. </p>",
            "smithy.api#jsonName": "instanceMessages"
          }
        },
        "InstanceState": {
          "target": "com.amazonaws.mediaconnect#InstanceState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The status of the instance. </p>",
            "smithy.api#jsonName": "instanceState",
            "smithy.api#required": {}
          }
        },
        "RunningBridgeCount": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The running bridge count. </p>",
            "smithy.api#jsonName": "runningBridgeCount",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for an instance in a gateway.</p>"
      }
    },
    "com.amazonaws.mediaconnect#GatewayInstanceArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::GatewayInstance",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#GatewayInstanceResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#GatewayInstanceResource": {
      "type": "resource",
      "identifiers": {
        "GatewayInstanceArn": {
          "target": "com.amazonaws.mediaconnect#GatewayInstanceArn"
        }
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeGatewayInstance"
      },
      "update": {
        "target": "com.amazonaws.mediaconnect#UpdateGatewayInstance"
      },
      "delete": {
        "target": "com.amazonaws.mediaconnect#DeregisterGatewayInstance"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListGatewayInstances"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{GatewayInstanceArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "gatewayInstance"
        }
      }
    },
    "com.amazonaws.mediaconnect#GatewayNetwork": {
      "type": "structure",
      "members": {
        "CidrBlock": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>A unique IP address range to use for this network. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. </p>",
            "smithy.api#jsonName": "cidrBlock",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The name of the network. This name is used to reference the network and must be unique among networks in this gateway. </p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The network settings for a gateway. </p>"
      }
    },
    "com.amazonaws.mediaconnect#GatewayResource": {
      "type": "resource",
      "identifiers": {
        "GatewayArn": {
          "target": "com.amazonaws.mediaconnect#GatewayArn"
        }
      },
      "create": {
        "target": "com.amazonaws.mediaconnect#CreateGateway"
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeGateway"
      },
      "delete": {
        "target": "com.amazonaws.mediaconnect#DeleteGateway"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListGateways"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{GatewayArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "gateway"
        }
      }
    },
    "com.amazonaws.mediaconnect#GatewayState": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "UPDATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATING"
          }
        },
        "ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ERROR"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#GrantEntitlementRequest": {
      "type": "structure",
      "members": {
        "DataTransferSubscriberFeePercent": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
            "smithy.api#jsonName": "dataTransferSubscriberFeePercent"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the entitlement. This description appears only on the MediaConnect console and will not be seen by the subscriber or end user. </p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of encryption that will be used on the output that is associated with this entitlement. Allowable encryption types: static-key, speke.</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "EntitlementStatus": {
          "target": "com.amazonaws.mediaconnect#EntitlementStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether the new entitlement should be enabled or disabled as soon as it is created. If you don’t specify the entitlementStatus field in your request, MediaConnect sets it to ENABLED.</p>",
            "smithy.api#jsonName": "entitlementStatus"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the entitlement. This value must be unique within the current flow.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Subscribers": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flows using your content as the source.</p>",
            "smithy.api#jsonName": "subscribers",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The entitlements that you want to grant on a flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#GrantFlowEntitlements": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#GrantFlowEntitlementsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#GrantFlowEntitlementsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#GrantFlowEntitlements420Exception"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Grants entitlements to an existing flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/{FlowArn}/entitlements",
          "code": 200
        }
      }
    },
    "com.amazonaws.mediaconnect#GrantFlowEntitlements420Exception": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Exception raised by Elemental MediaConnect when granting the entitlement. See the error message for the operation for more information on the cause of this exception. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 420
      }
    },
    "com.amazonaws.mediaconnect#GrantFlowEntitlementsRequest": {
      "type": "structure",
      "members": {
        "Entitlements": {
          "target": "com.amazonaws.mediaconnect#__listOfGrantEntitlementRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The list of entitlements that you want to grant.</p>",
            "smithy.api#jsonName": "entitlements",
            "smithy.api#required": {}
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to grant entitlements on.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#GrantFlowEntitlementsResponse": {
      "type": "structure",
      "members": {
        "Entitlements": {
          "target": "com.amazonaws.mediaconnect#__listOfEntitlement",
          "traits": {
            "smithy.api#documentation": "<p> The entitlements that were just granted.</p>",
            "smithy.api#jsonName": "entitlements"
          }
        },
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that these entitlements were granted to.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#IngressGatewayBridge": {
      "type": "structure",
      "members": {
        "InstanceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the instance running this bridge. </p>",
            "smithy.api#jsonName": "instanceId"
          }
        },
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The maximum expected bitrate (in bps) of the ingress bridge. </p>",
            "smithy.api#jsonName": "maxBitrate",
            "smithy.api#required": {}
          }
        },
        "MaxOutputs": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The maximum number of outputs on the ingress bridge. </p>",
            "smithy.api#jsonName": "maxOutputs",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Create a bridge with the ingress bridge type. An ingress bridge is a ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>"
      }
    },
    "com.amazonaws.mediaconnect#InputConfiguration": {
      "type": "structure",
      "members": {
        "InputIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The IP address that the flow listens on for incoming content for a media stream.</p>",
            "smithy.api#jsonName": "inputIp",
            "smithy.api#required": {}
          }
        },
        "InputPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The port that the flow listens on for an incoming media stream.</p>",
            "smithy.api#jsonName": "inputPort",
            "smithy.api#required": {}
          }
        },
        "Interface": {
          "target": "com.amazonaws.mediaconnect#Interface",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The VPC interface where the media stream comes in from.</p>",
            "smithy.api#jsonName": "interface",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The transport parameters that are associated with an incoming media stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#InputConfigurationRequest": {
      "type": "structure",
      "members": {
        "InputPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The port that you want the flow to listen on for an incoming media stream.</p>",
            "smithy.api#jsonName": "inputPort",
            "smithy.api#required": {}
          }
        },
        "Interface": {
          "target": "com.amazonaws.mediaconnect#InterfaceRequest",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The VPC interface that you want to use for the incoming media stream.</p>",
            "smithy.api#jsonName": "interface",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The transport parameters that you want to associate with an incoming media stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#InstanceState": {
      "type": "enum",
      "members": {
        "REGISTERING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REGISTERING"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "DEREGISTERING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEREGISTERING"
          }
        },
        "DEREGISTERED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEREGISTERED"
          }
        },
        "REGISTRATION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REGISTRATION_ERROR"
          }
        },
        "DEREGISTRATION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEREGISTRATION_ERROR"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Interface": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the VPC interface.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The VPC interface that is used for the media stream associated with the source or output.</p>"
      }
    },
    "com.amazonaws.mediaconnect#InterfaceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the VPC interface.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The VPC interface that you want to designate where the media stream is coming from or going to.</p>"
      }
    },
    "com.amazonaws.mediaconnect#InternalServerErrorException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The server encountered an internal error and is unable to complete the request. </p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.mediaconnect#KeyType": {
      "type": "enum",
      "members": {
        "speke": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "speke",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "static_key": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "static-key",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "srt_password": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "srt-password",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ListBridges": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListBridgesRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListBridgesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of bridges that are associated with this account and an optionally specified Amazon Resource Name (ARN). This request returns a paginated result.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/bridges",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Bridges",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListBridgesRequest": {
      "type": "structure",
      "members": {
        "FilterArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Filter the list results to display only the bridges associated with the selected ARN.</p>",
            "smithy.api#httpQuery": "filterArn"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListBridges</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListBridgesResponse": {
      "type": "structure",
      "members": {
        "Bridges": {
          "target": "com.amazonaws.mediaconnect#__listOfListedBridge",
          "traits": {
            "smithy.api#documentation": "<p> A list of bridge summaries.</p>",
            "smithy.api#jsonName": "bridges"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListBridges</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListBridges</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListEntitlements": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListEntitlementsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListEntitlementsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of all entitlements that have been granted to this account. This request returns 20 results per page.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/entitlements",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Entitlements",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListEntitlementsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListEntitlements</code> request with set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 20 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListEntitlements</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListEntitlements</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListEntitlementsResponse": {
      "type": "structure",
      "members": {
        "Entitlements": {
          "target": "com.amazonaws.mediaconnect#__listOfListedEntitlement",
          "traits": {
            "smithy.api#documentation": "<p>A list of entitlements that have been granted to you from other Amazon Web Services accounts. </p>",
            "smithy.api#jsonName": "entitlements"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a ListEntitlements request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a NextToken value. To see the next batch of results, you can submit the <code>ListEntitlements</code> request a second time and specify the <code>NextToken</code> value. </p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListFlows": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListFlowsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListFlowsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of flows that are associated with this account. This request returns a paginated result.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/flows",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Flows",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListFlowsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListFlows</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListFlowsResponse": {
      "type": "structure",
      "members": {
        "Flows": {
          "target": "com.amazonaws.mediaconnect#__listOfListedFlow",
          "traits": {
            "smithy.api#documentation": "<p> A list of flow summaries.</p>",
            "smithy.api#jsonName": "flows"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListFlows</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListFlows</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGatewayInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListGatewayInstancesRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListGatewayInstancesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of instances associated with the Amazon Web Services account. This request returns a paginated result. You can use the filterArn property to display only the instances associated with the selected Gateway Amazon Resource Name (ARN).</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/gateway-instances",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Instances",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGatewayInstancesRequest": {
      "type": "structure",
      "members": {
        "FilterArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Filter the list results to display only the instances associated with the selected Gateway ARN.</p>",
            "smithy.api#httpQuery": "filterArn"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a ListInstances request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListInstances</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGatewayInstancesResponse": {
      "type": "structure",
      "members": {
        "Instances": {
          "target": "com.amazonaws.mediaconnect#__listOfListedGatewayInstance",
          "traits": {
            "smithy.api#documentation": "<p> A list of instance summaries.</p>",
            "smithy.api#jsonName": "instances"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListInstances</code> request with MaxResults set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListInstances</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGateways": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListGatewaysRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListGatewaysResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of gateways that are associated with this account. This request returns a paginated result.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/gateways",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Gateways",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGatewaysRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListGateways</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListGatewaysResponse": {
      "type": "structure",
      "members": {
        "Gateways": {
          "target": "com.amazonaws.mediaconnect#__listOfListedGateway",
          "traits": {
            "smithy.api#documentation": "<p> A list of gateway summaries.</p>",
            "smithy.api#jsonName": "gateways"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListGateways</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListGateways</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListOfferings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListOfferingsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListOfferingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of all offerings that are available to this account in the current Amazon Web Services Region. If you have an active reservation (which means you've purchased an offering that has already started and hasn't expired yet), your account isn't eligible for other offerings.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/offerings",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Offerings",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListOfferingsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a <code>NextToken</code> value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListOfferingsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListOfferings</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Offerings": {
          "target": "com.amazonaws.mediaconnect#__listOfOffering",
          "traits": {
            "smithy.api#documentation": "<p> A list of offerings that are available to this account in the current Amazon Web Services Region.</p>",
            "smithy.api#jsonName": "offerings"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListReservations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListReservationsRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListReservationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Displays a list of all reservations that have been purchased by this account in the current Amazon Web Services Region. This list includes all reservations in all states (such as active and expired).</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v1/reservations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "items": "Reservations",
          "pageSize": "MaxResults"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListReservationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.mediaconnect#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of results to return per API request. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. Although 20 items match your request, the service returns no more than the first 5 items. (The service also returns a NextToken value that you can use to fetch the next batch of results.) </p> <p>The service might return fewer results than the <code>MaxResults</code> value. If <code>MaxResults</code> is not included in the request, the service defaults to pagination with a maximum of 10 results per page.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListOfferings</code> request a second time and specify the <code>NextToken</code> value. </p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListReservationsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The token that identifies the batch of results that you want to see. </p> <p>For example, you submit a <code>ListReservations</code> request with <code>MaxResults</code> set at 5. The service returns the first batch of results (up to 5) and a <code>NextToken</code> value. To see the next batch of results, you can submit the <code>ListReservations</code> request a second time and specify the <code>NextToken</code> value.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Reservations": {
          "target": "com.amazonaws.mediaconnect#__listOfReservation",
          "traits": {
            "smithy.api#documentation": "<p> A list of all reservations that have been purchased by this account in the current Amazon Web Services Region. </p>",
            "smithy.api#jsonName": "reservations"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> List all tags on a MediaConnect resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{ResourceArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.mediaconnect#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource for which to list the tags.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.mediaconnect#__mapOfString",
          "traits": {
            "smithy.api#documentation": "<p> A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
            "smithy.api#jsonName": "tags"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ListedBridge": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the bridge.</p>",
            "smithy.api#jsonName": "bridgeArn",
            "smithy.api#required": {}
          }
        },
        "BridgeState": {
          "target": "com.amazonaws.mediaconnect#BridgeState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The state of the bridge. </p>",
            "smithy.api#jsonName": "bridgeState",
            "smithy.api#required": {}
          }
        },
        "BridgeType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of the bridge.</p>",
            "smithy.api#jsonName": "bridgeType",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the bridge.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "PlacementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the gateway associated with the bridge.</p>",
            "smithy.api#jsonName": "placementArn",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Displays details of the selected bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ListedEntitlement": {
      "type": "structure",
      "members": {
        "DataTransferSubscriberFeePercent": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
            "smithy.api#jsonName": "dataTransferSubscriberFeePercent"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the entitlement.</p>",
            "smithy.api#jsonName": "entitlementArn",
            "smithy.api#required": {}
          }
        },
        "EntitlementName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the entitlement.</p>",
            "smithy.api#jsonName": "entitlementName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> An entitlement that has been granted to you from other Amazon Web Services accounts.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ListedFlow": {
      "type": "structure",
      "members": {
        "AvailabilityZone": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Availability Zone that the flow was created in.</p>",
            "smithy.api#jsonName": "availabilityZone",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A description of the flow.</p>",
            "smithy.api#jsonName": "description",
            "smithy.api#required": {}
          }
        },
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the flow.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the flow.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "SourceType": {
          "target": "com.amazonaws.mediaconnect#SourceType",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of source. This value is either owned (originated somewhere other than an MediaConnect flow owned by another Amazon Web Services account) or entitled (originated at a MediaConnect flow owned by another Amazon Web Services account).</p>",
            "smithy.api#jsonName": "sourceType",
            "smithy.api#required": {}
          }
        },
        "Status": {
          "target": "com.amazonaws.mediaconnect#Status",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The current status of the flow.</p>",
            "smithy.api#jsonName": "status",
            "smithy.api#required": {}
          }
        },
        "Maintenance": {
          "target": "com.amazonaws.mediaconnect#Maintenance",
          "traits": {
            "smithy.api#documentation": "<p> The maintenance settings for the flow. </p>",
            "smithy.api#jsonName": "maintenance"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A summary of a flow, including its ARN, Availability Zone, and source type.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ListedGateway": {
      "type": "structure",
      "members": {
        "GatewayArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
            "smithy.api#jsonName": "gatewayArn",
            "smithy.api#required": {}
          }
        },
        "GatewayState": {
          "target": "com.amazonaws.mediaconnect#GatewayState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The status of the gateway.</p>",
            "smithy.api#jsonName": "gatewayState",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the gateway.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A summary of a gateway, including its name, ARN, and status.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ListedGatewayInstance": {
      "type": "structure",
      "members": {
        "GatewayArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the gateway.</p>",
            "smithy.api#jsonName": "gatewayArn",
            "smithy.api#required": {}
          }
        },
        "GatewayInstanceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the instance.</p>",
            "smithy.api#jsonName": "gatewayInstanceArn",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The managed instance ID generated by the SSM install. This will begin with \"mi-\".</p>",
            "smithy.api#jsonName": "instanceId",
            "smithy.api#required": {}
          }
        },
        "InstanceState": {
          "target": "com.amazonaws.mediaconnect#InstanceState",
          "traits": {
            "smithy.api#documentation": "<p> The status of the instance.</p>",
            "smithy.api#jsonName": "instanceState"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A summary of an instance. </p>"
      }
    },
    "com.amazonaws.mediaconnect#Maintenance": {
      "type": "structure",
      "members": {
        "MaintenanceDay": {
          "target": "com.amazonaws.mediaconnect#MaintenanceDay",
          "traits": {
            "smithy.api#documentation": "<p> A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.</p>",
            "smithy.api#jsonName": "maintenanceDay"
          }
        },
        "MaintenanceDeadline": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Maintenance has to be performed before this deadline in ISO UTC format. Example: 2021-01-30T08:30:00Z.</p>",
            "smithy.api#jsonName": "maintenanceDeadline"
          }
        },
        "MaintenanceScheduledDate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A scheduled date in ISO UTC format when the maintenance will happen. Use YYYY-MM-DD format. Example: 2021-01-30.</p>",
            "smithy.api#jsonName": "maintenanceScheduledDate"
          }
        },
        "MaintenanceStartHour": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.</p>",
            "smithy.api#jsonName": "maintenanceStartHour"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The maintenance setting of a flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#MaintenanceDay": {
      "type": "enum",
      "members": {
        "Monday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Monday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Tuesday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Tuesday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Wednesday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Wednesday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Thursday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Thursday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Friday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Friday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Saturday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Saturday",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "Sunday": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Sunday",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.mediaconnect#MediaConnect": {
      "type": "service",
      "version": "2018-11-14",
      "operations": [
        {
          "target": "com.amazonaws.mediaconnect#ListEntitlements"
        },
        {
          "target": "com.amazonaws.mediaconnect#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#TagResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.mediaconnect#BridgeResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#FlowResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#GatewayInstanceResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#GatewayResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#OfferingResource"
        },
        {
          "target": "com.amazonaws.mediaconnect#ReservationResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "MediaConnect",
          "arnNamespace": "mediaconnect"
        },
        "aws.auth#sigv4": {
          "name": "mediaconnect"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "maxAge": 86400
        },
        "smithy.api#documentation": "<p>Welcome to the Elemental MediaConnect API reference. </p> <p>MediaConnect is a service that lets you ingest live video content into the cloud and distribute it to destinations all over the world, both inside and outside the Amazon Web Services cloud. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types that are supported by MediaConnect. </p> <p>Use the following links to get started with the MediaConnect API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/API_Operations.html\">Actions</a>: An alphabetical list of all MediaConnect API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/API_Types.html\">Data types</a>: An alphabetical list of all MediaConnect data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/CommonParameters.html\">Common parameters</a>: Parameters that all operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/mediaconnect/latest/api/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul>",
        "smithy.api#title": "AWS MediaConnect",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://mediaconnect-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://mediaconnect-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://mediaconnect.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://mediaconnect.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://mediaconnect.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.mediaconnect#MediaStream": {
      "type": "structure",
      "members": {
        "Attributes": {
          "target": "com.amazonaws.mediaconnect#MediaStreamAttributes",
          "traits": {
            "smithy.api#documentation": "<p> Attributes that are related to the media stream.</p>",
            "smithy.api#jsonName": "attributes"
          }
        },
        "ClockRate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The sample rate for the stream. This value is measured in Hz.</p>",
            "smithy.api#jsonName": "clockRate"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description that can help you quickly identify what your media stream is used for.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Fmt": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.</p>",
            "smithy.api#jsonName": "fmt",
            "smithy.api#required": {}
          }
        },
        "MediaStreamId": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A unique identifier for the media stream. </p>",
            "smithy.api#jsonName": "mediaStreamId",
            "smithy.api#required": {}
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A name that helps you distinguish one media stream from another. </p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        },
        "MediaStreamType": {
          "target": "com.amazonaws.mediaconnect#MediaStreamType",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of media stream. </p>",
            "smithy.api#jsonName": "mediaStreamType",
            "smithy.api#required": {}
          }
        },
        "VideoFormat": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The resolution of the video. </p>",
            "smithy.api#jsonName": "videoFormat"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A media stream represents one component of your content, such as video, audio, or ancillary data. After you add a media stream to your flow, you can associate it with sources and outputs that use the ST 2110 JPEG XS or CDI protocol. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamAttributes": {
      "type": "structure",
      "members": {
        "Fmtp": {
          "target": "com.amazonaws.mediaconnect#Fmtp",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The settings that you want to use to define the media stream. </p>",
            "smithy.api#jsonName": "fmtp",
            "smithy.api#required": {}
          }
        },
        "Lang": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The audio language, in a format that is recognized by the receiver. </p>",
            "smithy.api#jsonName": "lang"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Attributes that are related to the media stream. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamAttributesRequest": {
      "type": "structure",
      "members": {
        "Fmtp": {
          "target": "com.amazonaws.mediaconnect#FmtpRequest",
          "traits": {
            "smithy.api#documentation": "<p>The settings that you want to use to define the media stream. </p>",
            "smithy.api#jsonName": "fmtp"
          }
        },
        "Lang": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The audio language, in a format that is recognized by the receiver. </p>",
            "smithy.api#jsonName": "lang"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Attributes that are related to the media stream. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamOutputConfiguration": {
      "type": "structure",
      "members": {
        "DestinationConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfDestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> The transport parameters that are associated with each outbound media stream.</p>",
            "smithy.api#jsonName": "destinationConfigurations"
          }
        },
        "EncodingName": {
          "target": "com.amazonaws.mediaconnect#EncodingName",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.</p>",
            "smithy.api#jsonName": "encodingName",
            "smithy.api#required": {}
          }
        },
        "EncodingParameters": {
          "target": "com.amazonaws.mediaconnect#EncodingParameters",
          "traits": {
            "smithy.api#documentation": "<p>A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source. </p>",
            "smithy.api#jsonName": "encodingParameters"
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the media stream.</p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The media stream that is associated with the output, and the parameters for that association.</p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamOutputConfigurationRequest": {
      "type": "structure",
      "members": {
        "DestinationConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfDestinationConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that you want to associate with the output. </p>",
            "smithy.api#jsonName": "destinationConfigurations"
          }
        },
        "EncodingName": {
          "target": "com.amazonaws.mediaconnect#EncodingName",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The format that will be used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.</p>",
            "smithy.api#jsonName": "encodingName",
            "smithy.api#required": {}
          }
        },
        "EncodingParameters": {
          "target": "com.amazonaws.mediaconnect#EncodingParametersRequest",
          "traits": {
            "smithy.api#documentation": "<p> A collection of parameters that determine how MediaConnect will convert the content. These fields only apply to outputs on flows that have a CDI source. </p>",
            "smithy.api#jsonName": "encodingParameters"
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the media stream that is associated with the output.</p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The media stream that you want to associate with the output, and the parameters for that association.</p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamSourceConfiguration": {
      "type": "structure",
      "members": {
        "EncodingName": {
          "target": "com.amazonaws.mediaconnect#EncodingName",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv. </p>",
            "smithy.api#jsonName": "encodingName",
            "smithy.api#required": {}
          }
        },
        "InputConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfInputConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The media streams that you want to associate with the source. </p>",
            "smithy.api#jsonName": "inputConfigurations"
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>A name that helps you distinguish one media stream from another. </p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The media stream that is associated with the source, and the parameters for that association. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamSourceConfigurationRequest": {
      "type": "structure",
      "members": {
        "EncodingName": {
          "target": "com.amazonaws.mediaconnect#EncodingName",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv. </p>",
            "smithy.api#jsonName": "encodingName",
            "smithy.api#required": {}
          }
        },
        "InputConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfInputConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p>The media streams that you want to associate with the source. </p>",
            "smithy.api#jsonName": "inputConfigurations"
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The name of the media stream. </p>",
            "smithy.api#jsonName": "mediaStreamName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The media stream that you want to associate with the source, and the parameters for that association. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MediaStreamType": {
      "type": "enum",
      "members": {
        "video": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "video",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "audio": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "audio",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "ancillary_data": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ancillary-data",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#MessageDetail": {
      "type": "structure",
      "members": {
        "Code": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The error code.</p>",
            "smithy.api#jsonName": "code",
            "smithy.api#required": {}
          }
        },
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The specific error message that MediaConnect returns to help you understand the reason that the request did not succeed.</p>",
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        },
        "ResourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the resource.</p>",
            "smithy.api#jsonName": "resourceName"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of an error message. </p>"
      }
    },
    "com.amazonaws.mediaconnect#Messages": {
      "type": "structure",
      "members": {
        "Errors": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A list of errors that might have been generated from processes on this flow.</p>",
            "smithy.api#jsonName": "errors",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Messages that provide the state of the flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#MonitoringConfig": {
      "type": "structure",
      "members": {
        "ThumbnailState": {
          "target": "com.amazonaws.mediaconnect#ThumbnailState",
          "traits": {
            "smithy.api#documentation": "<p> Indicates whether thumbnails are enabled or disabled.</p>",
            "smithy.api#jsonName": "thumbnailState"
          }
        },
        "AudioMonitoringSettings": {
          "target": "com.amazonaws.mediaconnect#__listOfAudioMonitoringSetting",
          "traits": {
            "smithy.api#documentation": "<p> Contains the settings for audio stream metrics monitoring.</p>",
            "smithy.api#jsonName": "audioMonitoringSettings"
          }
        },
        "ContentQualityAnalysisState": {
          "target": "com.amazonaws.mediaconnect#ContentQualityAnalysisState",
          "traits": {
            "smithy.api#documentation": "<p> Indicates whether content quality analysis is enabled or disabled.</p>",
            "smithy.api#jsonName": "contentQualityAnalysisState"
          }
        },
        "VideoMonitoringSettings": {
          "target": "com.amazonaws.mediaconnect#__listOfVideoMonitoringSetting",
          "traits": {
            "smithy.api#documentation": "<p> Contains the settings for video stream metrics monitoring.</p>",
            "smithy.api#jsonName": "videoMonitoringSettings"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for source monitoring. </p>"
      }
    },
    "com.amazonaws.mediaconnect#MulticastSourceSettings": {
      "type": "structure",
      "members": {
        "MulticastSourceIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address of the source for source-specific multicast (SSM).</p>",
            "smithy.api#jsonName": "multicastSourceIp"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings related to the multicast source. </p>"
      }
    },
    "com.amazonaws.mediaconnect#NdiConfig": {
      "type": "structure",
      "members": {
        "NdiState": {
          "target": "com.amazonaws.mediaconnect#NdiState",
          "traits": {
            "smithy.api#documentation": "<p>A setting that controls whether NDI outputs can be used in the flow. Must be ENABLED to add NDI outputs. Default is DISABLED. </p>",
            "smithy.api#jsonName": "ndiState"
          }
        },
        "MachineName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A prefix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect generates a unique 12-character ID as the prefix. </p>",
            "smithy.api#jsonName": "machineName"
          }
        },
        "NdiDiscoveryServers": {
          "target": "com.amazonaws.mediaconnect#__listOfNdiDiscoveryServerConfig",
          "traits": {
            "smithy.api#documentation": "<p>A list of up to three NDI discovery server configurations. While not required by the API, this configuration is necessary for NDI functionality to work properly. </p>",
            "smithy.api#jsonName": "ndiDiscoveryServers"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>"
      }
    },
    "com.amazonaws.mediaconnect#NdiDiscoveryServerConfig": {
      "type": "structure",
      "members": {
        "DiscoveryServerAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The unique network address of the NDI discovery server. </p>",
            "smithy.api#jsonName": "discoveryServerAddress",
            "smithy.api#required": {}
          }
        },
        "DiscoveryServerPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The port for the NDI discovery server. Defaults to 5959 if a custom port isn't specified. </p>",
            "smithy.api#jsonName": "discoveryServerPort"
          }
        },
        "VpcInterfaceAdapter": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The identifier for the Virtual Private Cloud (VPC) network interface used by the flow. </p>",
            "smithy.api#jsonName": "vpcInterfaceAdapter",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the configuration settings for individual NDI discovery servers. A maximum of 3 servers is allowed. </p>"
      }
    },
    "com.amazonaws.mediaconnect#NdiState": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#NetworkInterfaceType": {
      "type": "enum",
      "members": {
        "ena": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ena",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "efa": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "efa",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#NotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>One or more of the resources in the request does not exist in the system. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.mediaconnect#Offering": {
      "type": "structure",
      "members": {
        "CurrencyCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of currency that is used for billing. The currencyCode used for all reservations is US dollars.</p>",
            "smithy.api#jsonName": "currencyCode",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The length of time that your reservation would be active.</p>",
            "smithy.api#jsonName": "duration",
            "smithy.api#required": {}
          }
        },
        "DurationUnits": {
          "target": "com.amazonaws.mediaconnect#DurationUnits",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The unit of measurement for the duration of the offering.</p>",
            "smithy.api#jsonName": "durationUnits",
            "smithy.api#required": {}
          }
        },
        "OfferingArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.</p>",
            "smithy.api#jsonName": "offeringArn",
            "smithy.api#required": {}
          }
        },
        "OfferingDescription": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A description of the offering.</p>",
            "smithy.api#jsonName": "offeringDescription",
            "smithy.api#required": {}
          }
        },
        "PricePerUnit": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The cost of a single unit. This value, in combination with priceUnits, makes up the rate.</p>",
            "smithy.api#jsonName": "pricePerUnit",
            "smithy.api#required": {}
          }
        },
        "PriceUnits": {
          "target": "com.amazonaws.mediaconnect#PriceUnits",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate.</p>",
            "smithy.api#jsonName": "priceUnits",
            "smithy.api#required": {}
          }
        },
        "ResourceSpecification": {
          "target": "com.amazonaws.mediaconnect#ResourceSpecification",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering.</p>",
            "smithy.api#jsonName": "resourceSpecification",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A savings plan that reserves a certain amount of outbound bandwidth usage at a discounted rate each month over a period of time. </p>"
      }
    },
    "com.amazonaws.mediaconnect#OfferingArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::Offering",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#OfferingResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#OfferingResource": {
      "type": "resource",
      "identifiers": {
        "OfferingArn": {
          "target": "com.amazonaws.mediaconnect#OfferingArn"
        }
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeOffering"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListOfferings"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{OfferingArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "offering"
        }
      }
    },
    "com.amazonaws.mediaconnect#Output": {
      "type": "structure",
      "members": {
        "DataTransferSubscriberFeePercent": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
            "smithy.api#jsonName": "dataTransferSubscriberFeePercent"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the output.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The address where you want to send the output.</p>",
            "smithy.api#jsonName": "destination"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the entitlement on the originator''s flow. This value is relevant only on entitled flows.</p>",
            "smithy.api#jsonName": "entitlementArn"
          }
        },
        "ListenerAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the receiver requires in order to establish a connection with the flow. For public networking, the ListenerAddress is represented by the elastic IP address of the flow. For private networking, the ListenerAddress is represented by the elastic network interface IP address of the VPC. This field applies only to outputs that use the Zixi pull or SRT listener protocol.</p>",
            "smithy.api#jsonName": "listenerAddress"
          }
        },
        "MediaLiveInputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The input ARN of the MediaLive channel. This parameter is relevant only for outputs that were added by creating a MediaLive input.</p>",
            "smithy.api#jsonName": "mediaLiveInputArn"
          }
        },
        "MediaStreamOutputConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamOutputConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> The configuration for each media stream that is associated with the output.</p>",
            "smithy.api#jsonName": "mediaStreamOutputConfigurations"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the output. This value must be unique within the current flow.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "OutputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the output.</p>",
            "smithy.api#jsonName": "outputArn",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port to use when content is distributed to this output.</p>",
            "smithy.api#jsonName": "port"
          }
        },
        "Transport": {
          "target": "com.amazonaws.mediaconnect#Transport",
          "traits": {
            "smithy.api#documentation": "<p> Attributes related to the transport stream that are used in the output.</p>",
            "smithy.api#jsonName": "transport"
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this output.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        },
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge added to this output.</p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "BridgePorts": {
          "target": "com.amazonaws.mediaconnect#__listOfInteger",
          "traits": {
            "smithy.api#documentation": "<p> The bridge output ports currently in use.</p>",
            "smithy.api#jsonName": "bridgePorts"
          }
        },
        "OutputStatus": {
          "target": "com.amazonaws.mediaconnect#OutputStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether the output is transmitting data or not.</p>",
            "smithy.api#jsonName": "outputStatus"
          }
        },
        "PeerIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The IP address of the device that is currently receiving content from this output.</p> <note> <ul> <li> <p>For outputs that use protocols where you specify the destination (such as SRT Caller or Zixi Push), this value matches the configured destination address.</p> </li> <li> <p>For outputs that use listener protocols (such as SRT Listener), this value shows the address of the connected receiver. </p> </li> <li> <p>Peer IP addresses aren't available for entitlements, managed MediaLive outputs, NDI outputs, and CDI/ST2110 outputs. </p> </li> <li> <p>The peer IP address might not be visible for flows that haven't been started yet, or flows that were started before May 2025. In these cases, restart your flow to see the peer IP address.</p> </li> </ul> </note>",
            "smithy.api#jsonName": "peerIpAddress"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The settings for an output. </p>"
      }
    },
    "com.amazonaws.mediaconnect#OutputStatus": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#PriceUnits": {
      "type": "enum",
      "members": {
        "HOURLY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HOURLY"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Protocol": {
      "type": "enum",
      "members": {
        "zixi_push": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "zixi-push",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "rtp_fec": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "rtp-fec",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "rtp": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "rtp",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "zixi_pull": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "zixi-pull",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "rist": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "rist",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "st2110_jpegxs": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "st2110-jpegxs",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "cdi": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "cdi",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "srt_listener": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "srt-listener",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "srt_caller": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "srt-caller",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "fujitsu_qos": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "fujitsu-qos",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "udp": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "udp",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "ndi_speed_hq": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ndi-speed-hq",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#PurchaseOffering": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#PurchaseOfferingRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#PurchaseOfferingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Submits a request to purchase an offering. If you already have an active reservation, you can't purchase another offering.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/offerings/{OfferingArn}",
          "code": 201
        }
      }
    },
    "com.amazonaws.mediaconnect#PurchaseOfferingRequest": {
      "type": "structure",
      "members": {
        "OfferingArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the offering.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ReservationName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name that you want to use for the reservation.</p>",
            "smithy.api#jsonName": "reservationName",
            "smithy.api#required": {}
          }
        },
        "Start": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The date and time that you want the reservation to begin, in Coordinated Universal Time (UTC). </p> <p>You can specify any date and time between 12:00am on the first day of the current month to the current time on today's date, inclusive. Specify the start in a 24-hour notation. Use the following format: <code>YYYY-MM-DDTHH:mm:SSZ</code>, where <code>T</code> and <code>Z</code> are literal characters. For example, to specify 11:30pm on March 5, 2020, enter <code>2020-03-05T23:30:00Z</code>.</p>",
            "smithy.api#jsonName": "start",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#PurchaseOfferingResponse": {
      "type": "structure",
      "members": {
        "Reservation": {
          "target": "com.amazonaws.mediaconnect#Reservation",
          "traits": {
            "smithy.api#documentation": "<p>The details of the reservation that you just created when you purchased the offering. </p>",
            "smithy.api#jsonName": "reservation"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#Range": {
      "type": "enum",
      "members": {
        "NARROW": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NARROW"
          }
        },
        "FULL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FULL"
          }
        },
        "FULLPROTECT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FULLPROTECT"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeOutput": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveBridgeOutputRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveBridgeOutputResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes an output from a bridge.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/bridges/{BridgeArn}/outputs/{OutputName}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeOutputRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "OutputName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the bridge output that you want to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeOutputResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge from which the output was removed. </p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "OutputName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the bridge output that was removed. </p>",
            "smithy.api#jsonName": "outputName"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveBridgeSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveBridgeSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes a source from a bridge.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/bridges/{BridgeArn}/sources/{SourceName}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeSourceRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "SourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the bridge source that you want to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveBridgeSourceResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge from which the source was removed. </p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "SourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the bridge source that was removed. </p>",
            "smithy.api#jsonName": "sourceName"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowMediaStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowMediaStreamRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowMediaStreamResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes a media stream from a flow. This action is only available if the media stream is not associated with a source or output.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}/mediaStreams/{MediaStreamName}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowMediaStreamRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the media stream that you want to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowMediaStreamResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that was updated.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the media stream that was removed.</p>",
            "smithy.api#jsonName": "mediaStreamName"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowOutput": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowOutputRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowOutputResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes an output from an existing flow. This request can be made only on an output that does not have an entitlement associated with it. If the output has an entitlement, you must revoke the entitlement instead. When an entitlement is revoked from a flow, the service automatically removes the associated output.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}/outputs/{OutputArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowOutputRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove an output from.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "OutputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the output that you want to remove. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:output:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowOutputResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that the output was removed from. </p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "OutputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the output that was removed. </p>",
            "smithy.api#jsonName": "outputArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes a source from an existing flow. This request can be made only if there is more than one source on the flow. </p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}/source/{SourceArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowSourceRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove a source from.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "SourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the source that you want to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:source:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowSourceResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that the source was removed from. </p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "SourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the source that was removed. </p>",
            "smithy.api#jsonName": "sourceArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowVpcInterface": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowVpcInterfaceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RemoveFlowVpcInterfaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Removes a VPC Interface from an existing flow. This request can be made only on a VPC interface that does not have a Source or Output associated with it. If the VPC interface is referenced by a Source or Output, you must first delete or update the Source or Output to no longer reference the VPC interface.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}/vpcInterfaces/{VpcInterfaceName}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowVpcInterfaceRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to remove a VPC interface from.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface that you want to remove.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RemoveFlowVpcInterfaceResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that is associated with the VPC interface you removed.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "NonDeletedNetworkInterfaceIds": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#documentation": "<p> IDs of network interfaces associated with the removed VPC interface that MediaConnect was unable to remove.</p>",
            "smithy.api#jsonName": "nonDeletedNetworkInterfaceIds"
          }
        },
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface that was removed.</p>",
            "smithy.api#jsonName": "vpcInterfaceName"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#Reservation": {
      "type": "structure",
      "members": {
        "CurrencyCode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of currency that is used for billing. The currencyCode used for your reservation is US dollars.</p>",
            "smithy.api#jsonName": "currencyCode",
            "smithy.api#required": {}
          }
        },
        "Duration": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The length of time that this reservation is active. MediaConnect defines this value in the offering.</p>",
            "smithy.api#jsonName": "duration",
            "smithy.api#required": {}
          }
        },
        "DurationUnits": {
          "target": "com.amazonaws.mediaconnect#DurationUnits",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The unit of measurement for the duration of the reservation. MediaConnect defines this value in the offering.</p>",
            "smithy.api#jsonName": "durationUnits",
            "smithy.api#required": {}
          }
        },
        "End": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The day and time that this reservation expires. This value is calculated based on the start date and time that you set and the offering's duration.</p>",
            "smithy.api#jsonName": "end",
            "smithy.api#required": {}
          }
        },
        "OfferingArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the offering.</p>",
            "smithy.api#jsonName": "offeringArn",
            "smithy.api#required": {}
          }
        },
        "OfferingDescription": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A description of the offering. MediaConnect defines this value in the offering.</p>",
            "smithy.api#jsonName": "offeringDescription",
            "smithy.api#required": {}
          }
        },
        "PricePerUnit": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The cost of a single unit. This value, in combination with priceUnits, makes up the rate. MediaConnect defines this value in the offering.</p>",
            "smithy.api#jsonName": "pricePerUnit",
            "smithy.api#required": {}
          }
        },
        "PriceUnits": {
          "target": "com.amazonaws.mediaconnect#PriceUnits",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The unit of measurement that is used for billing. This value, in combination with pricePerUnit, makes up the rate. MediaConnect defines this value in the offering.</p>",
            "smithy.api#jsonName": "priceUnits",
            "smithy.api#required": {}
          }
        },
        "ReservationArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that MediaConnect assigns to the reservation when you purchase an offering.</p>",
            "smithy.api#jsonName": "reservationArn",
            "smithy.api#required": {}
          }
        },
        "ReservationName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name that you assigned to the reservation when you purchased the offering.</p>",
            "smithy.api#jsonName": "reservationName",
            "smithy.api#required": {}
          }
        },
        "ReservationState": {
          "target": "com.amazonaws.mediaconnect#ReservationState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The status of your reservation.</p>",
            "smithy.api#jsonName": "reservationState",
            "smithy.api#required": {}
          }
        },
        "ResourceSpecification": {
          "target": "com.amazonaws.mediaconnect#ResourceSpecification",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A definition of the amount of outbound bandwidth that you would be reserving if you purchase the offering. MediaConnect defines the values that make up the resourceSpecification in the offering.</p>",
            "smithy.api#jsonName": "resourceSpecification",
            "smithy.api#required": {}
          }
        },
        "Start": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The day and time that the reservation becomes active. You set this value when you purchase the offering.</p>",
            "smithy.api#jsonName": "start",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A pricing agreement for a discounted rate for a specific outbound bandwidth that your MediaConnect account will use each month over a specific time period. The discounted rate in the reservation applies to outbound bandwidth for all flows from your account until your account reaches the amount of bandwidth in your reservation. If you use more outbound bandwidth than the agreed upon amount in a single month, the overage is charged at the on-demand rate.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ReservationArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::MediaConnect::Reservation",
          "service": "com.amazonaws.mediaconnect#MediaConnect",
          "resource": "com.amazonaws.mediaconnect#ReservationResource"
        }
      }
    },
    "com.amazonaws.mediaconnect#ReservationResource": {
      "type": "resource",
      "identifiers": {
        "ReservationArn": {
          "target": "com.amazonaws.mediaconnect#ReservationArn"
        }
      },
      "create": {
        "target": "com.amazonaws.mediaconnect#PurchaseOffering"
      },
      "read": {
        "target": "com.amazonaws.mediaconnect#DescribeReservation"
      },
      "list": {
        "target": "com.amazonaws.mediaconnect#ListReservations"
      },
      "traits": {
        "aws.api#arn": {
          "template": "{ReservationArn}",
          "resourceDelimiter": ":",
          "absolute": true
        },
        "aws.iam#iamResource": {
          "name": "reservation"
        }
      }
    },
    "com.amazonaws.mediaconnect#ReservationState": {
      "type": "enum",
      "members": {
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "EXPIRED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EXPIRED"
          }
        },
        "PROCESSING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PROCESSING"
          }
        },
        "CANCELED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ResourceSpecification": {
      "type": "structure",
      "members": {
        "ReservedBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The amount of outbound bandwidth that is discounted in the offering.</p>",
            "smithy.api#jsonName": "reservedBitrate"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.mediaconnect#ResourceType",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of resource and the unit that is being billed for.</p>",
            "smithy.api#jsonName": "resourceType",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A definition of what is being billed for, including the type and amount.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ResourceType": {
      "type": "enum",
      "members": {
        "Mbps_Outbound_Bandwidth": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Mbps_Outbound_Bandwidth",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#RevokeFlowEntitlement": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#RevokeFlowEntitlementRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#RevokeFlowEntitlementResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Revokes an entitlement from a flow. Once an entitlement is revoked, the content becomes unavailable to the subscriber and the associated output is removed.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v1/flows/{FlowArn}/entitlements/{EntitlementArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#RevokeFlowEntitlementRequest": {
      "type": "structure",
      "members": {
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the entitlement that you want to revoke.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:entitlement:.+$",
            "smithy.api#required": {}
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The flow that you want to revoke an entitlement from.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#RevokeFlowEntitlementResponse": {
      "type": "structure",
      "members": {
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the entitlement that was revoked.</p>",
            "smithy.api#jsonName": "entitlementArn"
          }
        },
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that the entitlement was revoked from.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#ScanMode": {
      "type": "enum",
      "members": {
        "progressive": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "progressive",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "interlace": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "interlace",
            "smithy.api#suppress": ["EnumShape"]
          }
        },
        "progressive_segmented_frame": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "progressive-segmented-frame",
            "smithy.api#suppress": ["EnumShape"]
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ServiceUnavailableException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service is currently unavailable or busy. </p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 503,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.mediaconnect#SetGatewayBridgeSourceRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the bridge feeding this flow.</p>",
            "smithy.api#jsonName": "bridgeArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this bridge source.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#SetSourceRequest": {
      "type": "structure",
      "members": {
        "Decryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of encryption that is used on the content ingested from this source. Allowable encryption types: static-key.</p>",
            "smithy.api#jsonName": "decryption"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description for the source. This value is not used or seen outside of the current MediaConnect account.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the entitlement that allows you to subscribe to this flow. The entitlement is set by the flow originator, and the ARN is generated as part of the originator's flow.</p>",
            "smithy.api#jsonName": "entitlementArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:entitlement:.+$"
          }
        },
        "IngestPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow will be listening on for incoming content.</p>",
            "smithy.api#jsonName": "ingestPort"
          }
        },
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC streams.</p>",
            "smithy.api#jsonName": "maxBitrate"
          }
        },
        "MaxLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
            "smithy.api#jsonName": "maxLatency"
          }
        },
        "MaxSyncBuffer": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The size of the buffer (in milliseconds) to use to sync incoming source data.</p>",
            "smithy.api#jsonName": "maxSyncBuffer"
          }
        },
        "MediaStreamSourceConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamSourceConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that are associated with the source, and the parameters for those associations.</p>",
            "smithy.api#jsonName": "mediaStreamSourceConfigurations"
          }
        },
        "MinLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
            "smithy.api#jsonName": "minLatency"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the source.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#documentation": "<p> The protocol that is used by the source.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol"
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SenderIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderIpAddress"
          }
        },
        "SourceListenerAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Source IP or domain name for SRT-caller protocol.</p>",
            "smithy.api#jsonName": "sourceListenerAddress"
          }
        },
        "SourceListenerPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Source port for SRT-caller protocol.</p>",
            "smithy.api#jsonName": "sourceListenerPort"
          }
        },
        "StreamId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
            "smithy.api#jsonName": "streamId"
          }
        },
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface to use for this source.</p>",
            "smithy.api#jsonName": "vpcInterfaceName"
          }
        },
        "WhitelistCidr": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "whitelistCidr"
          }
        },
        "GatewayBridgeSource": {
          "target": "com.amazonaws.mediaconnect#SetGatewayBridgeSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>",
            "smithy.api#jsonName": "gatewayBridgeSource"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for the source of the flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#SilentAudio": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.mediaconnect#State",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the <code>SilentAudio</code> metric is enabled or disabled. </p>",
            "smithy.api#jsonName": "state"
          }
        },
        "ThresholdSeconds": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the number of consecutive seconds of silence that triggers an event or alert. </p>",
            "smithy.api#jsonName": "thresholdSeconds"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configures settings for the <code>SilentAudio</code> metric. </p>"
      }
    },
    "com.amazonaws.mediaconnect#Source": {
      "type": "structure",
      "members": {
        "DataTransferSubscriberFeePercent": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Percentage from 0-100 of the data transfer cost to be billed to the subscriber.</p>",
            "smithy.api#jsonName": "dataTransferSubscriberFeePercent"
          }
        },
        "Decryption": {
          "target": "com.amazonaws.mediaconnect#Encryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of encryption that is used on the content ingested from this source.</p>",
            "smithy.api#jsonName": "decryption"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description for the source. This value is not used or seen outside of the current MediaConnect account.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the entitlement that allows you to subscribe to content that comes from another Amazon Web Services account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.</p>",
            "smithy.api#jsonName": "entitlementArn"
          }
        },
        "IngestIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the flow will be listening on for incoming content.</p>",
            "smithy.api#jsonName": "ingestIp"
          }
        },
        "IngestPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow will be listening on for incoming content.</p>",
            "smithy.api#jsonName": "ingestPort"
          }
        },
        "MediaStreamSourceConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamSourceConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that are associated with the source, and the parameters for those associations.</p>",
            "smithy.api#jsonName": "mediaStreamSourceConfigurations"
          }
        },
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The name of the source.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SenderIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderIpAddress"
          }
        },
        "SourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the source.</p>",
            "smithy.api#jsonName": "sourceArn",
            "smithy.api#required": {}
          }
        },
        "Transport": {
          "target": "com.amazonaws.mediaconnect#Transport",
          "traits": {
            "smithy.api#documentation": "<p> Attributes related to the transport stream that are used in the source.</p>",
            "smithy.api#jsonName": "transport"
          }
        },
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface that is used for this source.</p>",
            "smithy.api#jsonName": "vpcInterfaceName"
          }
        },
        "WhitelistCidr": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "whitelistCidr"
          }
        },
        "GatewayBridgeSource": {
          "target": "com.amazonaws.mediaconnect#GatewayBridgeSource",
          "traits": {
            "smithy.api#documentation": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>",
            "smithy.api#jsonName": "gatewayBridgeSource"
          }
        },
        "PeerIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The IP address of the device that is currently sending content to this source. </p> <note> <ul> <li> <p>For sources that use protocols where you specify the origin (such as SRT Caller), this value matches the configured origin address. </p> </li> <li> <p>For sources that use listener protocols (such as SRT Listener or RTP), this value shows the address of the connected sender. </p> </li> <li> <p>Peer IP addresses aren't available for entitlements and CDI/ST2110 sources.</p> </li> <li> <p>The peer IP address might not be visible for flows that haven't been started yet, or flows that were started before May 2025. In these cases, restart your flow to see the peer IP address.</p> </li> </ul> </note>",
            "smithy.api#jsonName": "peerIpAddress"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for the source of the flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#SourcePriority": {
      "type": "structure",
      "members": {
        "PrimarySource": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the source you choose as the primary source for this flow.</p>",
            "smithy.api#jsonName": "primarySource"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams. </p>"
      }
    },
    "com.amazonaws.mediaconnect#SourceType": {
      "type": "enum",
      "members": {
        "OWNED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "OWNED"
          }
        },
        "ENTITLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENTITLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#StartFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#StartFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#StartFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Starts a flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/start/{FlowArn}",
          "code": 202
        }
      }
    },
    "com.amazonaws.mediaconnect#StartFlowRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to start.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#StartFlowResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that you started.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Status": {
          "target": "com.amazonaws.mediaconnect#Status",
          "traits": {
            "smithy.api#documentation": "<p> The status of the flow when the <code>StartFlow</code> process begins.</p>",
            "smithy.api#jsonName": "status"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#State": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#Status": {
      "type": "enum",
      "members": {
        "STANDBY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STANDBY"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "UPDATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATING"
          }
        },
        "DELETING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETING"
          }
        },
        "STARTING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STARTING"
          }
        },
        "STOPPING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOPPING"
          }
        },
        "ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ERROR"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#StopFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#StopFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#StopFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Stops a flow.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v1/flows/stop/{FlowArn}",
          "code": 202
        }
      }
    },
    "com.amazonaws.mediaconnect#StopFlowRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to stop.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#StopFlowResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that you stopped.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Status": {
          "target": "com.amazonaws.mediaconnect#Status",
          "traits": {
            "smithy.api#documentation": "<p> The status of the flow when the <code>StopFlow</code> process begins.</p>",
            "smithy.api#jsonName": "status"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#TagResourceRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are deleted as well.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{ResourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.mediaconnect#TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource to which to add tags.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.mediaconnect#__mapOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A map from tag keys to values. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
            "smithy.api#jsonName": "tags",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#Tcs": {
      "type": "enum",
      "members": {
        "SDR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SDR"
          }
        },
        "PQ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PQ"
          }
        },
        "HLG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HLG"
          }
        },
        "LINEAR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LINEAR"
          }
        },
        "BT2100LINPQ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT2100LINPQ"
          }
        },
        "BT2100LINHLG": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BT2100LINHLG"
          }
        },
        "ST2065_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ST2065-1"
          }
        },
        "ST428_1": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ST428-1"
          }
        },
        "DENSITY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DENSITY"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#ThumbnailDetails": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The ARN of the flow that DescribeFlowSourceThumbnail was performed on.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#required": {}
          }
        },
        "Thumbnail": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Thumbnail Base64 string. </p>",
            "smithy.api#jsonName": "thumbnail"
          }
        },
        "ThumbnailMessages": {
          "target": "com.amazonaws.mediaconnect#__listOfMessageDetail",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> Status code and messages about the flow source thumbnail.</p>",
            "smithy.api#jsonName": "thumbnailMessages",
            "smithy.api#required": {}
          }
        },
        "Timecode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Timecode of thumbnail.</p>",
            "smithy.api#jsonName": "timecode"
          }
        },
        "Timestamp": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p> The timestamp of when thumbnail was generated.</p>",
            "smithy.api#jsonName": "timestamp",
            "smithy.api#timestampFormat": "date-time"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The details of the thumbnail, including thumbnail base64 string, timecode and the time when thumbnail was generated.</p>"
      }
    },
    "com.amazonaws.mediaconnect#ThumbnailState": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.mediaconnect#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#jsonName": "message",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was denied due to request throttling. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.mediaconnect#Transport": {
      "type": "structure",
      "members": {
        "CidrAllowList": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#documentation": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16</p>",
            "smithy.api#jsonName": "cidrAllowList"
          }
        },
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The smoothing max bitrate (in bps) for RIST, RTP, and RTP-FEC streams.</p>",
            "smithy.api#jsonName": "maxBitrate"
          }
        },
        "MaxLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
            "smithy.api#jsonName": "maxLatency"
          }
        },
        "MaxSyncBuffer": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The size of the buffer (in milliseconds) to use to sync incoming source data.</p>",
            "smithy.api#jsonName": "maxSyncBuffer"
          }
        },
        "MinLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
            "smithy.api#jsonName": "minLatency"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The protocol that is used by the source or output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol",
            "smithy.api#required": {}
          }
        },
        "RemoteId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The remote ID for the Zixi-pull stream.</p>",
            "smithy.api#jsonName": "remoteId"
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SenderIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderIpAddress"
          }
        },
        "SmoothingLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
            "smithy.api#jsonName": "smoothingLatency"
          }
        },
        "SourceListenerAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Source IP or domain name for SRT-caller protocol.</p>",
            "smithy.api#jsonName": "sourceListenerAddress"
          }
        },
        "SourceListenerPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Source port for SRT-caller protocol.</p>",
            "smithy.api#jsonName": "sourceListenerPort"
          }
        },
        "StreamId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
            "smithy.api#jsonName": "streamId"
          }
        },
        "NdiSpeedHqQuality": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
            "smithy.api#jsonName": "ndiSpeedHqQuality"
          }
        },
        "NdiProgramName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
            "smithy.api#jsonName": "ndiProgramName"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Attributes related to the transport stream that are used in a source or output.</p>"
      }
    },
    "com.amazonaws.mediaconnect#TransportMediaInfo": {
      "type": "structure",
      "members": {
        "Programs": {
          "target": "com.amazonaws.mediaconnect#__listOfTransportStreamProgram",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The list of transport stream programs in the current flow's source.</p>",
            "smithy.api#jsonName": "programs",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The metadata of the transport stream in the current flow's source.</p>"
      }
    },
    "com.amazonaws.mediaconnect#TransportStream": {
      "type": "structure",
      "members": {
        "Channels": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The number of channels in the audio stream.</p>",
            "smithy.api#jsonName": "channels"
          }
        },
        "Codec": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The codec used by the stream.</p>",
            "smithy.api#jsonName": "codec"
          }
        },
        "FrameRate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The frame rate used by the video stream.</p>",
            "smithy.api#jsonName": "frameRate"
          }
        },
        "FrameResolution": {
          "target": "com.amazonaws.mediaconnect#FrameResolution",
          "traits": {
            "smithy.api#documentation": "<p>The frame resolution used by the video stream. </p>",
            "smithy.api#jsonName": "frameResolution"
          }
        },
        "Pid": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Packet ID (PID) as it is reported in the Program Map Table.</p>",
            "smithy.api#jsonName": "pid",
            "smithy.api#required": {}
          }
        },
        "SampleRate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The sample rate used by the audio stream.</p>",
            "smithy.api#jsonName": "sampleRate"
          }
        },
        "SampleSize": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The sample bit size used by the audio stream.</p>",
            "smithy.api#jsonName": "sampleSize"
          }
        },
        "StreamType": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Stream Type as it is reported in the Program Map Table.</p>",
            "smithy.api#jsonName": "streamType",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The metadata of an elementary transport stream.</p>"
      }
    },
    "com.amazonaws.mediaconnect#TransportStreamProgram": {
      "type": "structure",
      "members": {
        "PcrPid": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The Program Clock Reference (PCR) Packet ID (PID) as it is reported in the Program Association Table.</p>",
            "smithy.api#jsonName": "pcrPid",
            "smithy.api#required": {}
          }
        },
        "ProgramName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The program name as it is reported in the Program Association Table.</p>",
            "smithy.api#jsonName": "programName"
          }
        },
        "ProgramNumber": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The program number as it is reported in the Program Association Table.</p>",
            "smithy.api#jsonName": "programNumber",
            "smithy.api#required": {}
          }
        },
        "ProgramPid": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The program Packet ID (PID) as it is reported in the Program Association Table.</p>",
            "smithy.api#jsonName": "programPid",
            "smithy.api#required": {}
          }
        },
        "Streams": {
          "target": "com.amazonaws.mediaconnect#__listOfTransportStream",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The list of elementary transport streams in the program. The list includes video, audio, and data streams.</p>",
            "smithy.api#jsonName": "streams",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The metadata of a single transport stream program.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UntagResourceRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Deletes specified tags from a resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{ResourceArn}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the resource that you want to untag. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The keys of the tags to be removed. </p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridge": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates the bridge.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/bridges/{BridgeArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeFlowSourceRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) that identifies the MediaConnect resource from which to delete tags.</p>",
            "smithy.api#jsonName": "flowArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$"
          }
        },
        "FlowVpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC interface attachment to use for this source. </p>",
            "smithy.api#jsonName": "flowVpcInterfaceAttachment"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Update the flow source of the bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeNetworkOutputRequest": {
      "type": "structure",
      "members": {
        "IpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The network output IP Address. </p>",
            "smithy.api#jsonName": "ipAddress"
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The network output's gateway network name. </p>",
            "smithy.api#jsonName": "networkName"
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The network output port. </p>",
            "smithy.api#jsonName": "port"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#documentation": "<p>The network output protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol"
          }
        },
        "Ttl": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The network output TTL. </p>",
            "smithy.api#jsonName": "ttl"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Update an existing network output. </p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeNetworkSourceRequest": {
      "type": "structure",
      "members": {
        "MulticastIp": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The network source multicast IP.</p>",
            "smithy.api#jsonName": "multicastIp"
          }
        },
        "MulticastSourceSettings": {
          "target": "com.amazonaws.mediaconnect#MulticastSourceSettings",
          "traits": {
            "smithy.api#documentation": "<p>The settings related to the multicast source. </p>",
            "smithy.api#jsonName": "multicastSourceSettings"
          }
        },
        "NetworkName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The network source's gateway network name. </p>",
            "smithy.api#jsonName": "networkName"
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The network source port. </p>",
            "smithy.api#jsonName": "port"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#documentation": "<p>The network source protocol. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Update the network source of the bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeOutput": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeOutputRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeOutputResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an existing bridge output.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/bridges/{BridgeArn}/outputs/{OutputName}",
          "code": 202
        },
        "smithy.api#idempotent": {},
        "smithy.api#suppress": ["OperationNameAmbiguity"]
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeOutputRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "NetworkOutput": {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeNetworkOutputRequest",
          "traits": {
            "smithy.api#documentation": "<p> The network of the bridge output. </p>",
            "smithy.api#jsonName": "networkOutput"
          }
        },
        "OutputName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> Tname of the output that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeOutputResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge that was updated. </p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "Output": {
          "target": "com.amazonaws.mediaconnect#BridgeOutput",
          "traits": {
            "smithy.api#documentation": "<p> The bridge output that was updated. </p>",
            "smithy.api#jsonName": "output"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> TheAmazon Resource Name (ARN) of the bridge that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "EgressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#UpdateEgressGatewayBridgeRequest",
          "traits": {
            "smithy.api#documentation": "<p> A cloud-to-ground bridge. The content comes from an existing MediaConnect flow and is delivered to your premises. </p>",
            "smithy.api#jsonName": "egressGatewayBridge"
          }
        },
        "IngressGatewayBridge": {
          "target": "com.amazonaws.mediaconnect#UpdateIngressGatewayBridgeRequest",
          "traits": {
            "smithy.api#documentation": "<p> A ground-to-cloud bridge. The content originates at your premises and is delivered to the cloud. </p>",
            "smithy.api#jsonName": "ingressGatewayBridge"
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#UpdateFailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source failover. </p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeResponse": {
      "type": "structure",
      "members": {
        "Bridge": {
          "target": "com.amazonaws.mediaconnect#Bridge",
          "traits": {
            "smithy.api#documentation": "<p> The bridge that was updated. </p>",
            "smithy.api#jsonName": "bridge"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an existing bridge source.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/bridges/{BridgeArn}/sources/{SourceName}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeSourceRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "FlowSource": {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeFlowSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The name of the flow that you want to update.</p>",
            "smithy.api#jsonName": "flowSource"
          }
        },
        "NetworkSource": {
          "target": "com.amazonaws.mediaconnect#UpdateBridgeNetworkSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p> The network for the bridge source. </p>",
            "smithy.api#jsonName": "networkSource"
          }
        },
        "SourceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the source that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeSourceResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the updated bridge source. </p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "Source": {
          "target": "com.amazonaws.mediaconnect#BridgeSource",
          "traits": {
            "smithy.api#documentation": "<p> The updated bridge source. </p>",
            "smithy.api#jsonName": "source"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeState": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeStateRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateBridgeStateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates the bridge state. </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/bridges/{BridgeArn}/state",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeStateRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "com.amazonaws.mediaconnect#BridgeArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the bridge that you want to update the state of. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$",
            "smithy.api#required": {}
          }
        },
        "DesiredState": {
          "target": "com.amazonaws.mediaconnect#DesiredState",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The desired state for the bridge. </p>",
            "smithy.api#jsonName": "desiredState",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateBridgeStateResponse": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the updated bridge. </p>",
            "smithy.api#jsonName": "bridgeArn"
          }
        },
        "DesiredState": {
          "target": "com.amazonaws.mediaconnect#DesiredState",
          "traits": {
            "smithy.api#documentation": "<p> The new state of the bridge. </p>",
            "smithy.api#jsonName": "desiredState"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateEgressGatewayBridgeRequest": {
      "type": "structure",
      "members": {
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum expected bitrate (in bps). </p>",
            "smithy.api#jsonName": "maxBitrate"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Update an existing egress-type bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateEncryption": {
      "type": "structure",
      "members": {
        "Algorithm": {
          "target": "com.amazonaws.mediaconnect#Algorithm",
          "traits": {
            "smithy.api#documentation": "<p> The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).</p>",
            "smithy.api#jsonName": "algorithm"
          }
        },
        "ConstantInitializationVector": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "constantInitializationVector"
          }
        },
        "DeviceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "deviceId"
          }
        },
        "KeyType": {
          "target": "com.amazonaws.mediaconnect#KeyType",
          "traits": {
            "smithy.api#documentation": "<p> The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).</p>",
            "smithy.api#jsonName": "keyType"
          }
        },
        "Region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Web Services Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "region"
          }
        },
        "ResourceId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption. </p>",
            "smithy.api#jsonName": "resourceId"
          }
        },
        "RoleArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the role that you created during setup (when you set up MediaConnect as a trusted entity).</p>",
            "smithy.api#jsonName": "roleArn"
          }
        },
        "SecretArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the secret that you created in Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.</p>",
            "smithy.api#jsonName": "secretArn"
          }
        },
        "Url": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.</p>",
            "smithy.api#jsonName": "url"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Information about the encryption of the flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateFailoverConfig": {
      "type": "structure",
      "members": {
        "FailoverMode": {
          "target": "com.amazonaws.mediaconnect#FailoverMode",
          "traits": {
            "smithy.api#documentation": "<p> The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.</p>",
            "smithy.api#jsonName": "failoverMode"
          }
        },
        "RecoveryWindow": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> Recovery window time to look for dash-7 packets.</p>",
            "smithy.api#jsonName": "recoveryWindow"
          }
        },
        "SourcePriority": {
          "target": "com.amazonaws.mediaconnect#SourcePriority",
          "traits": {
            "smithy.api#documentation": "<p> The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.</p>",
            "smithy.api#jsonName": "sourcePriority"
          }
        },
        "State": {
          "target": "com.amazonaws.mediaconnect#State",
          "traits": {
            "smithy.api#documentation": "<p>The state of source failover on the flow. If the state is inactive, the flow can have only one source. If the state is active, the flow can have one or two sources. </p>",
            "smithy.api#jsonName": "state"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for source failover.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlow": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an existing flow.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/flows/{FlowArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowEntitlement": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowEntitlementRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowEntitlementResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an entitlement. You can change an entitlement's description, subscribers, and encryption. If you change the subscribers, the service will remove the outputs that are are used by the subscribers that are removed.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/flows/{FlowArn}/entitlements/{EntitlementArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowEntitlementRequest": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the entitlement. This description appears only on the MediaConnect console and will not be seen by the subscriber or end user.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#UpdateEncryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of encryption that will be used on the output associated with this entitlement. Allowable encryption types: static-key, speke.</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the entitlement that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:entitlement:.+$",
            "smithy.api#required": {}
          }
        },
        "EntitlementStatus": {
          "target": "com.amazonaws.mediaconnect#EntitlementStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether you want to enable the entitlement to allow access, or disable it to stop streaming content to the subscriber’s flow temporarily. If you don’t specify the <code>entitlementStatus</code> field in your request, MediaConnect leaves the value unchanged.</p>",
            "smithy.api#jsonName": "entitlementStatus"
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that is associated with the entitlement that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "Subscribers": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Web Services account IDs that you want to share your content with. The receiving accounts (subscribers) will be allowed to create their own flow using your content as the source.</p>",
            "smithy.api#jsonName": "subscribers"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowEntitlementResponse": {
      "type": "structure",
      "members": {
        "Entitlement": {
          "target": "com.amazonaws.mediaconnect#Entitlement",
          "traits": {
            "smithy.api#documentation": "<p> The new configuration of the entitlement that you updated.</p>",
            "smithy.api#jsonName": "entitlement"
          }
        },
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that this entitlement was granted on.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowMediaStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowMediaStreamRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowMediaStreamResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an existing media stream.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/flows/{FlowArn}/mediaStreams/{MediaStreamName}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowMediaStreamRequest": {
      "type": "structure",
      "members": {
        "Attributes": {
          "target": "com.amazonaws.mediaconnect#MediaStreamAttributesRequest",
          "traits": {
            "smithy.api#documentation": "<p> The attributes that you want to assign to the media stream.</p>",
            "smithy.api#jsonName": "attributes"
          }
        },
        "ClockRate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The sample rate for the stream. This value in measured in kHz. </p>",
            "smithy.api#jsonName": "clockRate"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A description that can help you quickly identify what your media stream is used for. </p>",
            "smithy.api#jsonName": "description"
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that is associated with the media stream that you updated.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "MediaStreamName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The media stream that you updated.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MediaStreamType": {
          "target": "com.amazonaws.mediaconnect#MediaStreamType",
          "traits": {
            "smithy.api#documentation": "<p>The type of media stream. </p>",
            "smithy.api#jsonName": "mediaStreamType"
          }
        },
        "VideoFormat": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The resolution of the video. </p>",
            "smithy.api#jsonName": "videoFormat"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowMediaStreamResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the flow that is associated with the media stream that you updated. </p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "MediaStream": {
          "target": "com.amazonaws.mediaconnect#MediaStream",
          "traits": {
            "smithy.api#documentation": "<p>The media stream that you updated. </p>",
            "smithy.api#jsonName": "mediaStream"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowOutput": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowOutputRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowOutputResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates an existing flow output.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/flows/{FlowArn}/outputs/{OutputArn}",
          "code": 202
        },
        "smithy.api#idempotent": {},
        "smithy.api#suppress": ["OperationNameAmbiguity"]
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowOutputRequest": {
      "type": "structure",
      "members": {
        "CidrAllowList": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#documentation": "<p> The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.</p>",
            "smithy.api#jsonName": "cidrAllowList"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A description of the output. This description appears only on the MediaConnect console and will not be seen by the end user.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Destination": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address where you want to send the output.</p>",
            "smithy.api#jsonName": "destination"
          }
        },
        "Encryption": {
          "target": "com.amazonaws.mediaconnect#UpdateEncryption",
          "traits": {
            "smithy.api#documentation": "<p> The type of key used for the encryption. If no <code>keyType</code> is provided, the service will use the default setting (static-key). Allowable encryption types: static-key.</p>",
            "smithy.api#jsonName": "encryption"
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that is associated with the output that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "MaxLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.</p>",
            "smithy.api#jsonName": "maxLatency"
          }
        },
        "MediaStreamOutputConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamOutputConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p> The media streams that are associated with the output, and the parameters for those associations.</p>",
            "smithy.api#jsonName": "mediaStreamOutputConfigurations"
          }
        },
        "MinLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency.</p>",
            "smithy.api#jsonName": "minLatency"
          }
        },
        "OutputArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the output that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:output:.+$",
            "smithy.api#required": {}
          }
        },
        "Port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port to use when content is distributed to this output.</p>",
            "smithy.api#jsonName": "port"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#documentation": "<p> The protocol to use for the output.</p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol"
          }
        },
        "RemoteId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The remote ID for the Zixi-pull stream.</p>",
            "smithy.api#jsonName": "remoteId"
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The port that the flow uses to send outbound requests to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SenderIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The IP address that the flow communicates with to initiate connection with the sender.</p>",
            "smithy.api#jsonName": "senderIpAddress"
          }
        },
        "SmoothingLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.</p>",
            "smithy.api#jsonName": "smoothingLatency"
          }
        },
        "StreamId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams.</p>",
            "smithy.api#jsonName": "streamId"
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this output.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        },
        "OutputStatus": {
          "target": "com.amazonaws.mediaconnect#OutputStatus",
          "traits": {
            "smithy.api#documentation": "<p> An indication of whether the output should transmit data or not. If you don't specify the <code>outputStatus</code> field in your request, MediaConnect leaves the value unchanged.</p>",
            "smithy.api#jsonName": "outputStatus"
          }
        },
        "NdiProgramName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A suffix for the names of the NDI sources that the flow creates. If a custom name isn't specified, MediaConnect uses the output name. </p>",
            "smithy.api#jsonName": "ndiProgramName"
          }
        },
        "NdiSpeedHqQuality": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A quality setting for the NDI Speed HQ encoder. </p>",
            "smithy.api#jsonName": "ndiSpeedHqQuality"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowOutputResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that is associated with the updated output.</p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Output": {
          "target": "com.amazonaws.mediaconnect#Output",
          "traits": {
            "smithy.api#documentation": "<p> The new settings of the output that you updated.</p>",
            "smithy.api#jsonName": "output"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowRequest": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The Amazon Resource Name (ARN) of the flow that you want to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "SourceFailoverConfig": {
          "target": "com.amazonaws.mediaconnect#UpdateFailoverConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source failover. </p>",
            "smithy.api#jsonName": "sourceFailoverConfig"
          }
        },
        "Maintenance": {
          "target": "com.amazonaws.mediaconnect#UpdateMaintenance",
          "traits": {
            "smithy.api#documentation": "<p> The maintenance setting of the flow. </p>",
            "smithy.api#jsonName": "maintenance"
          }
        },
        "SourceMonitoringConfig": {
          "target": "com.amazonaws.mediaconnect#MonitoringConfig",
          "traits": {
            "smithy.api#documentation": "<p> The settings for source monitoring. </p>",
            "smithy.api#jsonName": "sourceMonitoringConfig"
          }
        },
        "NdiConfig": {
          "target": "com.amazonaws.mediaconnect#NdiConfig",
          "traits": {
            "smithy.api#documentation": "<p> Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs. </p>",
            "smithy.api#jsonName": "ndiConfig"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowResponse": {
      "type": "structure",
      "members": {
        "Flow": {
          "target": "com.amazonaws.mediaconnect#Flow",
          "traits": {
            "smithy.api#documentation": "<p> The updated flow. </p>",
            "smithy.api#jsonName": "flow"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowSource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowSourceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateFlowSourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Updates the source of a flow.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/flows/{FlowArn}/source/{SourceArn}",
          "code": 202
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowSourceRequest": {
      "type": "structure",
      "members": {
        "Decryption": {
          "target": "com.amazonaws.mediaconnect#UpdateEncryption",
          "traits": {
            "smithy.api#documentation": "<p>The type of encryption that is used on the content ingested from the source. </p>",
            "smithy.api#jsonName": "decryption"
          }
        },
        "Description": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>A description of the source. This description is not visible outside of the current Amazon Web Services account. </p>",
            "smithy.api#jsonName": "description"
          }
        },
        "EntitlementArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the entitlement that allows you to subscribe to the flow. The entitlement is set by the content originator, and the ARN is generated as part of the originator's flow. </p>",
            "smithy.api#jsonName": "entitlementArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:entitlement:.+$"
          }
        },
        "FlowArn": {
          "target": "com.amazonaws.mediaconnect#FlowArn",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the flow that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:flow:.+$",
            "smithy.api#required": {}
          }
        },
        "IngestPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The port that the flow listens on for incoming content. If the protocol of the source is Zixi, the port must be set to 2088. </p>",
            "smithy.api#jsonName": "ingestPort"
          }
        },
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum bitrate for RIST, RTP, and RTP-FEC streams. </p>",
            "smithy.api#jsonName": "maxBitrate"
          }
        },
        "MaxLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams. </p>",
            "smithy.api#jsonName": "maxLatency"
          }
        },
        "MaxSyncBuffer": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The size of the buffer (in milliseconds) to use to sync incoming source data. </p>",
            "smithy.api#jsonName": "maxSyncBuffer"
          }
        },
        "MediaStreamSourceConfigurations": {
          "target": "com.amazonaws.mediaconnect#__listOfMediaStreamSourceConfigurationRequest",
          "traits": {
            "smithy.api#documentation": "<p>The media stream that is associated with the source, and the parameters for that association. </p>",
            "smithy.api#jsonName": "mediaStreamSourceConfigurations"
          }
        },
        "MinLatency": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The minimum latency in milliseconds for SRT-based streams. In streams that use the SRT protocol, this value that you set on your MediaConnect source or output represents the minimal potential latency of that connection. The latency of the stream is set to the highest number between the sender’s minimum latency and the receiver’s minimum latency. </p>",
            "smithy.api#jsonName": "minLatency"
          }
        },
        "Protocol": {
          "target": "com.amazonaws.mediaconnect#Protocol",
          "traits": {
            "smithy.api#documentation": "<p>The protocol that the source uses to deliver the content to MediaConnect. </p> <note> <p>Elemental MediaConnect no longer supports the Fujitsu QoS protocol. This reference is maintained for legacy purposes only.</p> </note>",
            "smithy.api#jsonName": "protocol"
          }
        },
        "SenderControlPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>The port that the flow uses to send outbound requests to initiate connection with the sender. </p>",
            "smithy.api#jsonName": "senderControlPort"
          }
        },
        "SenderIpAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The IP address that the flow communicates with to initiate connection with the sender. </p>",
            "smithy.api#jsonName": "senderIpAddress"
          }
        },
        "SourceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the source that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:source:.+$",
            "smithy.api#required": {}
          }
        },
        "SourceListenerAddress": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The source IP or domain name for SRT-caller protocol. </p>",
            "smithy.api#jsonName": "sourceListenerAddress"
          }
        },
        "SourceListenerPort": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Source port for SRT-caller protocol. </p>",
            "smithy.api#jsonName": "sourceListenerPort"
          }
        },
        "StreamId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The stream ID that you want to use for this transport. This parameter applies only to Zixi and SRT caller-based streams. </p>",
            "smithy.api#jsonName": "streamId"
          }
        },
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC interface that you want to send your output to.</p>",
            "smithy.api#jsonName": "vpcInterfaceName"
          }
        },
        "WhitelistCidr": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The range of IP addresses that are allowed to contribute content to your source. Format the IP addresses as a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. </p>",
            "smithy.api#jsonName": "whitelistCidr"
          }
        },
        "GatewayBridgeSource": {
          "target": "com.amazonaws.mediaconnect#UpdateGatewayBridgeSourceRequest",
          "traits": {
            "smithy.api#documentation": "<p>The source configuration for cloud flows receiving a stream from a bridge. </p>",
            "smithy.api#jsonName": "gatewayBridgeSource"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateFlowSourceResponse": {
      "type": "structure",
      "members": {
        "FlowArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the flow that you was updated. </p>",
            "smithy.api#jsonName": "flowArn"
          }
        },
        "Source": {
          "target": "com.amazonaws.mediaconnect#Source",
          "traits": {
            "smithy.api#documentation": "<p>The details of the sources that are assigned to the flow. </p>",
            "smithy.api#jsonName": "source"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateGatewayBridgeSourceRequest": {
      "type": "structure",
      "members": {
        "BridgeArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The ARN of the bridge feeding this flow.</p>",
            "smithy.api#jsonName": "bridgeArn",
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:bridge:.+$"
          }
        },
        "VpcInterfaceAttachment": {
          "target": "com.amazonaws.mediaconnect#VpcInterfaceAttachment",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface attachment to use for this bridge source.</p>",
            "smithy.api#jsonName": "vpcInterfaceAttachment"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The source configuration for cloud flows receiving a stream from a bridge.</p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateGatewayInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.mediaconnect#UpdateGatewayInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.mediaconnect#UpdateGatewayInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.mediaconnect#BadRequestException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ConflictException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ForbiddenException"
        },
        {
          "target": "com.amazonaws.mediaconnect#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.mediaconnect#NotFoundException"
        },
        {
          "target": "com.amazonaws.mediaconnect#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.mediaconnect#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing gateway instance. </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v1/gateway-instances/{GatewayInstanceArn}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateGatewayInstanceRequest": {
      "type": "structure",
      "members": {
        "BridgePlacement": {
          "target": "com.amazonaws.mediaconnect#BridgePlacement",
          "traits": {
            "smithy.api#documentation": "<p>The state of the instance. <code>ACTIVE</code> or <code>INACTIVE</code>. </p>",
            "smithy.api#jsonName": "bridgePlacement"
          }
        },
        "GatewayInstanceArn": {
          "target": "com.amazonaws.mediaconnect#GatewayInstanceArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the gateway instance that you want to update. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#pattern": "^arn:.+:mediaconnect.+:gateway:.+:instance:.+$",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateGatewayInstanceResponse": {
      "type": "structure",
      "members": {
        "BridgePlacement": {
          "target": "com.amazonaws.mediaconnect#BridgePlacement",
          "traits": {
            "smithy.api#documentation": "<p>The state of the instance. <code>ACTIVE</code> or <code>INACTIVE</code>. </p>",
            "smithy.api#jsonName": "bridgePlacement"
          }
        },
        "GatewayInstanceArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the instance that was updated. </p>",
            "smithy.api#jsonName": "gatewayInstanceArn"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.mediaconnect#UpdateIngressGatewayBridgeRequest": {
      "type": "structure",
      "members": {
        "MaxBitrate": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum expected bitrate (in bps).</p>",
            "smithy.api#jsonName": "maxBitrate"
          }
        },
        "MaxOutputs": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of expected outputs.</p>",
            "smithy.api#jsonName": "maxOutputs"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Update an existing ingress-type bridge. </p>"
      }
    },
    "com.amazonaws.mediaconnect#UpdateMaintenance": {
      "type": "structure",
      "members": {
        "MaintenanceDay": {
          "target": "com.amazonaws.mediaconnect#MaintenanceDay",
          "traits": {
            "smithy.api#documentation": "<p> A day of a week when the maintenance will happen.</p>",
            "smithy.api#jsonName": "maintenanceDay"
          }
        },
        "MaintenanceScheduledDate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> A scheduled date in ISO UTC format when the maintenance will happen. Use YYYY-MM-DD format. Example: 2021-01-30.</p>",
            "smithy.api#jsonName": "maintenanceScheduledDate"
          }
        },
        "MaintenanceStartHour": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.</p>",
            "smithy.api#jsonName": "maintenanceStartHour"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Update maintenance setting for a flow.</p>"
      }
    },
    "com.amazonaws.mediaconnect#VideoMonitoringSetting": {
      "type": "structure",
      "members": {
        "BlackFrames": {
          "target": "com.amazonaws.mediaconnect#BlackFrames",
          "traits": {
            "smithy.api#documentation": "<p>Detects video frames that are black. </p>",
            "smithy.api#jsonName": "blackFrames"
          }
        },
        "FrozenFrames": {
          "target": "com.amazonaws.mediaconnect#FrozenFrames",
          "traits": {
            "smithy.api#documentation": "<p>Detects video frames that have not changed. </p>",
            "smithy.api#jsonName": "frozenFrames"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies the configuration for video stream metrics monitoring.</p>"
      }
    },
    "com.amazonaws.mediaconnect#VpcInterface": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> Immutable and has to be a unique against other VpcInterfaces in this Flow.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkInterfaceIds": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> IDs of the network interfaces created in customer's account by MediaConnect.</p>",
            "smithy.api#jsonName": "networkInterfaceIds",
            "smithy.api#required": {}
          }
        },
        "NetworkInterfaceType": {
          "target": "com.amazonaws.mediaconnect#NetworkInterfaceType",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The type of network interface.</p>",
            "smithy.api#jsonName": "networkInterfaceType",
            "smithy.api#required": {}
          }
        },
        "RoleArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> A role Arn MediaConnect can assume to create ENIs in your account.</p>",
            "smithy.api#jsonName": "roleArn",
            "smithy.api#required": {}
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> Security Group IDs to be used on ENI.</p>",
            "smithy.api#jsonName": "securityGroupIds",
            "smithy.api#required": {}
          }
        },
        "SubnetId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> Subnet must be in the AZ of the Flow. </p>",
            "smithy.api#jsonName": "subnetId",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for a VPC source.</p>"
      }
    },
    "com.amazonaws.mediaconnect#VpcInterfaceAttachment": {
      "type": "structure",
      "members": {
        "VpcInterfaceName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p> The name of the VPC interface to use for this resource.</p>",
            "smithy.api#jsonName": "vpcInterfaceName"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> The settings for attaching a VPC interface to an resource. </p>"
      }
    },
    "com.amazonaws.mediaconnect#VpcInterfaceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The name for the VPC interface. This name must be unique within the flow. </p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "NetworkInterfaceType": {
          "target": "com.amazonaws.mediaconnect#NetworkInterfaceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of network interface. </p>",
            "smithy.api#jsonName": "networkInterfaceType"
          }
        },
        "RoleArn": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the role that you created when you set up MediaConnect as a trusted service. </p>",
            "smithy.api#jsonName": "roleArn",
            "smithy.api#required": {}
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.mediaconnect#__listOfString",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p>A virtual firewall to control inbound and outbound traffic. </p>",
            "smithy.api#jsonName": "securityGroupIds",
            "smithy.api#required": {}
          }
        },
        "SubnetId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#clientOptional": {},
            "smithy.api#documentation": "<p> The subnet IDs that you want to use for your VPC interface. A range of IP addresses in your VPC. When you create your VPC, you specify a range of IPv4 addresses for the VPC in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16. This is the primary CIDR block for your VPC. When you create a subnet for your VPC, you specify the CIDR block for the subnet, which is a subset of the VPC CIDR block. The subnets that you use across all VPC interfaces on the flow must be in the same Availability Zone as the flow. </p>",
            "smithy.api#jsonName": "subnetId",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of the VPC interfaces that you want to add to the flow. </p>"
      }
    },
    "com.amazonaws.mediaconnect#__listOfAddBridgeOutputRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#AddBridgeOutputRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfAddBridgeSourceRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#AddBridgeSourceRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfAddMediaStreamRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#AddMediaStreamRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfAddOutputRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#AddOutputRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfAudioMonitoringSetting": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#AudioMonitoringSetting"
      }
    },
    "com.amazonaws.mediaconnect#__listOfBridgeOutput": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#BridgeOutput"
      }
    },
    "com.amazonaws.mediaconnect#__listOfBridgeSource": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#BridgeSource"
      }
    },
    "com.amazonaws.mediaconnect#__listOfDestinationConfiguration": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#DestinationConfiguration"
      }
    },
    "com.amazonaws.mediaconnect#__listOfDestinationConfigurationRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#DestinationConfigurationRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfEntitlement": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#Entitlement"
      }
    },
    "com.amazonaws.mediaconnect#__listOfGatewayNetwork": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#GatewayNetwork"
      }
    },
    "com.amazonaws.mediaconnect#__listOfGrantEntitlementRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#GrantEntitlementRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfInputConfiguration": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#InputConfiguration"
      }
    },
    "com.amazonaws.mediaconnect#__listOfInputConfigurationRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#InputConfigurationRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfInteger": {
      "type": "list",
      "member": {
        "target": "smithy.api#Integer"
      }
    },
    "com.amazonaws.mediaconnect#__listOfListedBridge": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#ListedBridge"
      }
    },
    "com.amazonaws.mediaconnect#__listOfListedEntitlement": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#ListedEntitlement"
      }
    },
    "com.amazonaws.mediaconnect#__listOfListedFlow": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#ListedFlow"
      }
    },
    "com.amazonaws.mediaconnect#__listOfListedGateway": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#ListedGateway"
      }
    },
    "com.amazonaws.mediaconnect#__listOfListedGatewayInstance": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#ListedGatewayInstance"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMediaStream": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MediaStream"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMediaStreamOutputConfiguration": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MediaStreamOutputConfiguration"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMediaStreamOutputConfigurationRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MediaStreamOutputConfigurationRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMediaStreamSourceConfiguration": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MediaStreamSourceConfiguration"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMediaStreamSourceConfigurationRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MediaStreamSourceConfigurationRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfMessageDetail": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#MessageDetail"
      }
    },
    "com.amazonaws.mediaconnect#__listOfNdiDiscoveryServerConfig": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#NdiDiscoveryServerConfig"
      }
    },
    "com.amazonaws.mediaconnect#__listOfOffering": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#Offering"
      }
    },
    "com.amazonaws.mediaconnect#__listOfOutput": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#Output"
      }
    },
    "com.amazonaws.mediaconnect#__listOfReservation": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#Reservation"
      }
    },
    "com.amazonaws.mediaconnect#__listOfSetSourceRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#SetSourceRequest"
      }
    },
    "com.amazonaws.mediaconnect#__listOfSource": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#Source"
      }
    },
    "com.amazonaws.mediaconnect#__listOfString": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.mediaconnect#__listOfTransportStream": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#TransportStream"
      }
    },
    "com.amazonaws.mediaconnect#__listOfTransportStreamProgram": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#TransportStreamProgram"
      }
    },
    "com.amazonaws.mediaconnect#__listOfVideoMonitoringSetting": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#VideoMonitoringSetting"
      }
    },
    "com.amazonaws.mediaconnect#__listOfVpcInterface": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#VpcInterface"
      }
    },
    "com.amazonaws.mediaconnect#__listOfVpcInterfaceRequest": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.mediaconnect#VpcInterfaceRequest"
      }
    },
    "com.amazonaws.mediaconnect#__mapOfString": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#String"
      }
    }
  }
}
