{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.cloudwatchlogs#AccessPolicy": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#AccountId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 12,
          "max": 12
        },
        "smithy.api#pattern": "^\\d{12}$"
      }
    },
    "com.amazonaws.cloudwatchlogs#AccountIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#AccountId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#AccountPolicies": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#AccountPolicy"
      }
    },
    "com.amazonaws.cloudwatchlogs#AccountPolicy": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the account policy.</p>"
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#AccountPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The policy document for this account policy.</p>\n         <p>The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.</p>"
          }
        },
        "lastUpdatedTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that this policy was most recently updated.</p>"
          }
        },
        "policyType": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyType",
          "traits": {
            "smithy.api#documentation": "<p>The type of policy for this account policy.</p>"
          }
        },
        "scope": {
          "target": "com.amazonaws.cloudwatchlogs#Scope",
          "traits": {
            "smithy.api#documentation": "<p>The scope of the account policy.</p>"
          }
        },
        "accountId": {
          "target": "com.amazonaws.cloudwatchlogs#AccountId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that the policy applies to.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A structure that contains information about one CloudWatch Logs account policy.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#AccountPolicyDocument": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#AmazonResourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        },
        "smithy.api#pattern": "^[\\w+=/:,.@-]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#Arn": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#AssociateKmsKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#AssociateKmsKeyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Associates the specified KMS key with either one log group in the account, or with all stored\n      CloudWatch Logs query insights results in the account.</p>\n         <p>When you use <code>AssociateKmsKey</code>, you specify either the <code>logGroupName</code> parameter\n    or the <code>resourceIdentifier</code> parameter. You can't specify both of those parameters in the same operation.</p>\n         <ul>\n            <li>\n               <p>Specify the <code>logGroupName</code> parameter to cause all log events stored in the log group to\n    be encrypted with that key. Only the log events ingested after the key is associated are encrypted with that key.</p>\n               <p>Associating a KMS key with a log group overrides any existing\n      associations between the log group and a KMS key. After a KMS key is associated with a log group, all newly ingested data for the log group is encrypted\n      using the KMS key. This association is stored as long as the data encrypted\n      with the KMS key is still within CloudWatch Logs. This enables CloudWatch Logs to decrypt this data whenever it is requested.</p>\n               <p>Associating\n    a key with a log group does not cause the results of queries of that log group to be encrypted with that key. To have query\n    results encrypted with a KMS key, you must use an <code>AssociateKmsKey</code> operation with the <code>resourceIdentifier</code>\n    parameter that specifies a <code>query-result</code> resource. </p>\n            </li>\n            <li>\n               <p>Specify the <code>resourceIdentifier</code> parameter with a <code>query-result</code> resource, \n     to use that key to encrypt the stored results of all future \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>\n      operations in the account. The response from a \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html\">GetQueryResults</a>\n      operation will still return\n    the query results in plain text.</p>\n               <p>Even if you have not associated a key with your query results, the query results are encrypted when stored,\n      using the default CloudWatch Logs method.</p>\n               <p>If you run a query from a monitoring account that queries logs in a source account, the\n          query results key from the monitoring account, if any, is used.</p>\n            </li>\n         </ul>\n         <important>\n            <p>If you delete the key that is used to encrypt log events or log group query results,\n    then all the associated stored log events or query results that were encrypted with that key \n    will be unencryptable and unusable.</p>\n         </important>\n         <note>\n            <p>CloudWatch Logs supports only symmetric KMS keys. Do not use an associate\n        an asymmetric KMS key with your log group or query results. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using\n          Symmetric and Asymmetric Keys</a>.</p>\n         </note>\n         <p>It can take up to 5 minutes for this operation to take effect.</p>\n         <p>If you attempt to associate a KMS key with a log group but the KMS key does not exist or the KMS key is disabled, you receive an\n        <code>InvalidParameterException</code> error. </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#AssociateKmsKeyRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>\n         <p>In your <code>AssociateKmsKey</code> operation,\n      you must specify either the <code>resourceIdentifier</code> parameter or the <code>logGroup</code> parameter, \n      but you can't specify both.</p>"
          }
        },
        "kmsKeyId": {
          "target": "com.amazonaws.cloudwatchlogs#KmsKeyId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the KMS key to use when encrypting log\n      data. This must be a symmetric KMS key. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource Names</a> and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric\n        Keys</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "resourceIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#ResourceIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the target for this operation. You must specify one of the following:</p>\n         <ul>\n            <li>\n               <p>Specify the following ARN to have future <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html\">GetQueryResults</a>\n        operations in this account encrypt the results\n        with the specified KMS key. Replace\n        <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.</p>\n               <p>\n                  <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code>\n               </p>\n            </li>\n            <li>\n               <p>Specify the ARN of a log group to have CloudWatch Logs use the KMS key\n        to encrypt log events that are ingested and stored by that log group. The log group ARN must be in \n        the following format. Replace\n        <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.</p>\n               <p>\n                  <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i>\n                  </code>\n               </p>\n            </li>\n         </ul>\n         <p>In your <code>AssociateKmsKey</code> operation,\n        you must specify either the <code>resourceIdentifier</code> parameter or the <code>logGroup</code> parameter, \n        but you can't specify both.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#CancelExportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#CancelExportTaskRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidOperationException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels the specified export task.</p>\n         <p>The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#CancelExportTaskRequest": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the export task.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#ClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 36,
          "max": 128
        },
        "smithy.api#pattern": "^\\S{36,128}$"
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateExportTask": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#CreateExportTaskRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#CreateExportTaskResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an export task so that you can efficiently export data from a log group to an\n      Amazon S3 bucket. When you perform a <code>CreateExportTask</code> operation, you must use\n      credentials that have permission to write to the S3 bucket that you specify as the\n      destination.</p>\n         <p>Exporting log data to S3 buckets that are encrypted by KMS is supported.\n      Exporting log data to Amazon S3 buckets that have S3 Object Lock enabled with a\n      retention period is also supported.</p>\n         <p>Exporting to S3 buckets that are encrypted with AES-256 is supported. </p>\n         <p>This is an asynchronous call. If all the required information is provided, this \n      operation initiates an export task and responds with the ID of the task. After the task has started,\n      you can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeExportTasks.html\">DescribeExportTasks</a> to get the status of the export task. Each account can\n      only have one active (<code>RUNNING</code> or <code>PENDING</code>) export task at a time.\n      To cancel an export task, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CancelExportTask.html\">CancelExportTask</a>.</p>\n         <p>You can export logs from multiple log groups or multiple time ranges to the same S3\n      bucket. To separate log data for each export task, specify a prefix to be used as the Amazon\n      S3 key prefix for all exported objects.</p>\n         <note>\n            <p>Time-based sorting on chunks of log data inside an exported file is not guaranteed. You can\n        sort the exported log field data by using Linux utilities.</p>\n         </note>"
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateExportTaskRequest": {
      "type": "structure",
      "members": {
        "taskName": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the export task.</p>"
          }
        },
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "logStreamNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>Export only log streams that match the provided prefix. If you don't\n      specify a value, no prefix filter is applied.</p>"
          }
        },
        "from": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start time of the range for the request, expressed as the number of milliseconds\n      after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp earlier than this time\n      are not exported.</p>",
            "smithy.api#required": {}
          }
        },
        "to": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end time of the range for the request, expressed as the number of milliseconds\n      after <code>Jan 1, 1970 00:00:00 UTC</code>. Events with a timestamp later than this time are\n      not exported.</p>\n         <p>You must specify a time that is not earlier than when this log group was created.</p>",
            "smithy.api#required": {}
          }
        },
        "destination": {
          "target": "com.amazonaws.cloudwatchlogs#ExportDestinationBucket",
          "traits": {
            "smithy.api#documentation": "<p>The name of S3 bucket for the exported log data. The bucket must be in the same Amazon Web Services Region.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationPrefix": {
          "target": "com.amazonaws.cloudwatchlogs#ExportDestinationPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The prefix used as the start of the key for every object exported. If you don't\n      specify a value, the default is <code>exportedlogs</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateExportTaskResponse": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the export task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateLogGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#CreateLogGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a log group with the specified name. You can create up to 1,000,000 log groups per Region per account.</p>\n         <p>You must use the following guidelines when naming a log group:</p>\n         <ul>\n            <li>\n               <p>Log group names must be unique within a Region for an Amazon Web Services\n          account.</p>\n            </li>\n            <li>\n               <p>Log group names can be between 1 and 512 characters long.</p>\n            </li>\n            <li>\n               <p>Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), \n          '/' (forward slash), '.' (period), and '#' (number sign)</p>\n            </li>\n         </ul>\n         <p>When you create a log group, by default the log events in the log group do not expire.\n      To set a retention policy so that events expire and are deleted after a specified time, use\n        <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html\">PutRetentionPolicy</a>.</p>\n         <p>If you associate an KMS key with the log group, ingested data is\n      encrypted using the KMS key. This association is stored as long as the data\n      encrypted with the KMS key is still within CloudWatch Logs. This enables\n        CloudWatch Logs to decrypt this data whenever it is requested.</p>\n         <p>If you attempt to associate a KMS key with the log group but the KMS key does not exist or the KMS key is disabled, you receive an\n        <code>InvalidParameterException</code> error. </p>\n         <important>\n            <p>CloudWatch Logs supports only symmetric KMS keys. Do not associate an\n        asymmetric KMS key with your log group. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using\n          Symmetric and Asymmetric Keys</a>.</p>\n         </important>"
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateLogGroupRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyId": {
          "target": "com.amazonaws.cloudwatchlogs#KmsKeyId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the KMS key to use when encrypting log\n      data. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource\n        Names</a>.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The key-value pairs to use for the tags.</p>\n         <p>You can grant users access to certain log groups while preventing them from accessing other log groups.\n      To do so, tag your groups and use IAM policies that refer to those tags. To assign tags when \n      you create a log group, you must have either the <code>logs:TagResource</code> or <code>logs:TagLogGroup</code>\n      permission. For more information about tagging, see \n      <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>.\n      For more information about using tags to control access, see \n      <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Controlling access to Amazon Web Services resources using tags</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateLogStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#CreateLogStreamRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a log stream for the specified log group. A log stream is a sequence of log events\n      that originate from a single source, such as an application instance or a resource that is \n      being monitored.</p>\n         <p>There is no limit on the number of log streams that you can create for a log group. There is a limit \n    of 50 TPS on <code>CreateLogStream</code> operations, after which transactions are throttled.</p>\n         <p>You must use the following guidelines when naming a log stream:</p>\n         <ul>\n            <li>\n               <p>Log stream names must be unique within the log group.</p>\n            </li>\n            <li>\n               <p>Log stream names can be between 1 and 512 characters long.</p>\n            </li>\n            <li>\n               <p>Don't use ':' (colon) or '*' (asterisk) characters.</p>\n            </li>\n         </ul>"
      }
    },
    "com.amazonaws.cloudwatchlogs#CreateLogStreamRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException": {
      "type": "structure",
      "members": {
        "expectedSequenceToken": {
          "target": "com.amazonaws.cloudwatchlogs#SequenceToken"
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The event was already logged.</p>\n         <important>\n            <p>\n               <code>PutLogEvents</code>\n      actions are now always accepted and never return\n      <code>DataAlreadyAcceptedException</code> regardless of whether a given batch of log events\n      has already been accepted. </p>\n         </important>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#DataProtectionPolicyDocument": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#DataProtectionStatus": {
      "type": "enum",
      "members": {
        "ACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVATED"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "ARCHIVED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ARCHIVED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#Days": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "<p>The number of days to retain the log events in the specified log group.\n      Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653.</p>\n         <p>To set a log group so that its log events do not expire, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html\">DeleteRetentionPolicy</a>. </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DefaultValue": {
      "type": "double"
    },
    "com.amazonaws.cloudwatchlogs#DeleteAccountPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteAccountPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a CloudWatch Logs account policy.</p>\n         <p>To use this operation, you must be signed on with the <code>logs:DeleteDataProtectionPolicy</code> and \n      <code>logs:DeleteAccountPolicy</code> permissions.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteAccountPolicyRequest": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the policy to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "policyType": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyType",
          "traits": {
            "smithy.api#documentation": "<p>The type of policy to delete. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteDataProtectionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteDataProtectionPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the data protection policy from the specified log group. </p>\n         <p>For more information about data protection policies, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html\">PutDataProtectionPolicy</a>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteDataProtectionPolicyRequest": {
      "type": "structure",
      "members": {
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The name or ARN of the log group that you want to delete the data protection policy for.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteDestinationRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified destination, and eventually disables all the\n      subscription filters that publish to it. This operation does not delete the \n      physical resource encapsulated by the destination.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteDestinationRequest": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteLogGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteLogGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified log group and permanently deletes all the archived\n      log events associated with the log group.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteLogGroupRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteLogStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteLogStreamRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified log stream and permanently deletes all the archived log events associated\n      with the log stream.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteLogStreamRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteMetricFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteMetricFilterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified metric filter.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteMetricFilterRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the metric filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteQueryDefinition": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteQueryDefinitionRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteQueryDefinitionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a saved CloudWatch Logs Insights query definition. \n      A query definition contains details about a saved CloudWatch Logs Insights query.</p>\n         <p>Each <code>DeleteQueryDefinition</code> operation can delete one query definition.</p>\n         <p>You must have the <code>logs:DeleteQueryDefinition</code> permission to be able to perform\n      this operation.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteQueryDefinitionRequest": {
      "type": "structure",
      "members": {
        "queryDefinitionId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the query definition that you want to delete. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the\n      IDs of your saved query definitions.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteQueryDefinitionResponse": {
      "type": "structure",
      "members": {
        "success": {
          "target": "com.amazonaws.cloudwatchlogs#Success",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>A value of TRUE indicates that the operation succeeded. FALSE indicates that the operation\n      failed.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteResourcePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteResourcePolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a resource policy from this account. This revokes \n    the access of the identities in that policy to put log events to this account.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteResourcePolicyRequest": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the policy to be revoked. This parameter is required.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteRetentionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteRetentionPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified retention policy.</p>\n         <p>Log events do not expire if they belong to log groups without a retention policy.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteRetentionPolicyRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteSubscriptionFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DeleteSubscriptionFilterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the specified subscription filter.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DeleteSubscriptionFilterRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the subscription filter.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#Descending": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#DescribeAccountPolicies": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeAccountPoliciesRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeAccountPoliciesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of all CloudWatch Logs account policies in the account.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeAccountPoliciesRequest": {
      "type": "structure",
      "members": {
        "policyType": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyType",
          "traits": {
            "smithy.api#documentation": "<p>Use this parameter to limit the returned policies to only the policies that match the policy type that you\n      specify. Currently, the only valid value is <code>DATA_PROTECTION_POLICY</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>Use this parameter to limit the returned policies to only the policy with the name that you specify.</p>"
          }
        },
        "accountIdentifiers": {
          "target": "com.amazonaws.cloudwatchlogs#AccountIds",
          "traits": {
            "smithy.api#documentation": "<p>If you are using an account that is set up as a monitoring account for CloudWatch unified cross-account\n      observability, you can use this to specify the account ID of a source account. If you do, \n      the operation returns the account policy for the specified account. Currently, you can specify only\n    one account ID in this parameter.</p>\n         <p>If you\n    omit this parameter, only the policy in the current account is returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeAccountPoliciesResponse": {
      "type": "structure",
      "members": {
        "accountPolicies": {
          "target": "com.amazonaws.cloudwatchlogs#AccountPolicies",
          "traits": {
            "smithy.api#documentation": "<p>An array of structures that contain information about the CloudWatch Logs account policies that match \n    the specified filters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeDestinations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeDestinationsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeDestinationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists all your destinations. The results are ASCII-sorted by destination name.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "destinations",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeDestinationsRequest": {
      "type": "structure",
      "members": {
        "DestinationNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default maximum value of \n      50 items is used.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeDestinationsResponse": {
      "type": "structure",
      "members": {
        "destinations": {
          "target": "com.amazonaws.cloudwatchlogs#Destinations",
          "traits": {
            "smithy.api#documentation": "<p>The destinations.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeExportTasks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeExportTasksRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeExportTasksResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the specified export tasks. You can list all your export tasks or filter \n      the results based on task ID or task status.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeExportTasksRequest": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the export task. Specifying a task ID filters the results to one or zero\n      export tasks.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code of the export task. Specifying a status code filters the results to zero or more export tasks.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeExportTasksResponse": {
      "type": "structure",
      "members": {
        "exportTasks": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTasks",
          "traits": {
            "smithy.api#documentation": "<p>The export tasks.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLimit": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeLogGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeLogGroupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the specified log groups. You can list all your log groups or filter the results by prefix.\n      The results are ASCII-sorted by log group name.</p>\n         <p>CloudWatch Logs doesn’t support IAM policies that control access to the <code>DescribeLogGroups</code> action by using the \n      <code>aws:ResourceTag/<i>key-name</i>\n            </code> condition key. Other CloudWatch Logs actions\n      do support the use of the <code>aws:ResourceTag/<i>key-name</i>\n            </code> condition key to control access.\n      For more information about using tags to control access, see \n      <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Controlling access to Amazon Web Services resources using tags</a>.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and \n    view data from the linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "logGroups",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogGroupsRequest": {
      "type": "structure",
      "members": {
        "accountIdentifiers": {
          "target": "com.amazonaws.cloudwatchlogs#AccountIds",
          "traits": {
            "smithy.api#documentation": "<p>When <code>includeLinkedAccounts</code> is set to <code>True</code>, use this parameter to\n      specify the list of accounts to search. You can specify as many as 20 account IDs in the array.  </p>"
          }
        },
        "logGroupNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The prefix to match.</p>\n         <note>\n            <p>\n               <code>logGroupNamePrefix</code> and <code>logGroupNamePattern</code> are mutually exclusive. \n        Only one \n        of these parameters can be passed.\n      </p>\n         </note>"
          }
        },
        "logGroupNamePattern": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupNamePattern",
          "traits": {
            "smithy.api#documentation": "<p>If you specify a string for this parameter, the operation returns only log groups that have names\nthat match the string based on a case-sensitive substring search. For example, if you specify <code>Foo</code>, log groups\nnamed <code>FooBar</code>, <code>aws/Foo</code>, and <code>GroupFoo</code> would match, but <code>foo</code>, \n<code>F/o/o</code> and <code>Froo</code> would not match.</p>\n         <p>If you specify <code>logGroupNamePattern</code> in your request, then only\n        <code>arn</code>, <code>creationTime</code>, and <code>logGroupName</code>\n        are included in the response. </p>\n         <note>\n            <p>\n               <code>logGroupNamePattern</code> and <code>logGroupNamePrefix</code> are mutually exclusive. \n        Only one \n        of these parameters can be passed.\n      </p>\n         </note>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>"
          }
        },
        "includeLinkedAccounts": {
          "target": "com.amazonaws.cloudwatchlogs#IncludeLinkedAccounts",
          "traits": {
            "smithy.api#documentation": "<p>If you are using a monitoring account, set this to <code>True</code> to have the operation\n      return log groups in \n      the accounts listed in <code>accountIdentifiers</code>.</p>\n         <p>If this parameter is set to <code>true</code> and <code>accountIdentifiers</code>\n\n      contains a null value, the operation returns all log groups in the monitoring account\n      and all log groups in all source accounts that are linked to the monitoring account. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogGroupsResponse": {
      "type": "structure",
      "members": {
        "logGroups": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroups",
          "traits": {
            "smithy.api#documentation": "<p>The log groups.</p>\n         <p>If the <code>retentionInDays</code> value is not included for a log group, then that log\n      group's events do not expire.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogStreams": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeLogStreamsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeLogStreamsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the log streams for the specified log group. \n      You can list all the log streams or filter the results by prefix.\n      You can also control how the results are ordered.</p>\n         <p>You can specify the log group to search by using either <code>logGroupIdentifier</code> or <code>logGroupName</code>.\n      You must include one of these two parameters, but you can't include both.\n    </p>\n         <p>This operation has a limit of five transactions per second, after which transactions are throttled.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and \n      view data from the linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "logStreams",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogStreamsRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify either the name or ARN of the log group to view. If the log group is in a source account\n    and you are using a monitoring account, you must use the log group ARN.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logStreamNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The prefix to match.</p>\n         <p>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this\n      parameter.</p>"
          }
        },
        "orderBy": {
          "target": "com.amazonaws.cloudwatchlogs#OrderBy",
          "traits": {
            "smithy.api#documentation": "<p>If the value is <code>LogStreamName</code>, the results are ordered by log stream name.\n      If the value is <code>LastEventTime</code>, the results are ordered by the event time. \n      The default value is <code>LogStreamName</code>.</p>\n         <p>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code> parameter.</p>\n         <p>\n            <code>lastEventTimestamp</code> represents the time of the most recent log event in the\n      log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>. <code>lastEventTimestamp</code> updates on an\n      eventual consistency basis. It typically updates in less than an hour from ingestion, but in\n      rare situations might take longer.</p>"
          }
        },
        "descending": {
          "target": "com.amazonaws.cloudwatchlogs#Descending",
          "traits": {
            "smithy.api#documentation": "<p>If the value is true, results are returned in descending order. \n      If the value is to false, results are returned in ascending order.\n      The default value is false.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeLogStreamsResponse": {
      "type": "structure",
      "members": {
        "logStreams": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreams",
          "traits": {
            "smithy.api#documentation": "<p>The log streams.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeMetricFilters": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeMetricFiltersRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeMetricFiltersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the specified metric filters. You can list all of the metric filters or filter\n      the results by log name, prefix, metric name, or metric namespace. The results are\n      ASCII-sorted by filter name.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "metricFilters",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeMetricFiltersRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>"
          }
        },
        "filterNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The prefix to match. CloudWatch Logs uses the value that you set here only if you also\n      include the <code>logGroupName</code> parameter in your request.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>"
          }
        },
        "metricName": {
          "target": "com.amazonaws.cloudwatchlogs#MetricName",
          "traits": {
            "smithy.api#documentation": "<p>Filters results to include only those with the specified metric name. If you include this parameter in your request, you \n    must also include the <code>metricNamespace</code> parameter.</p>"
          }
        },
        "metricNamespace": {
          "target": "com.amazonaws.cloudwatchlogs#MetricNamespace",
          "traits": {
            "smithy.api#documentation": "<p>Filters results to include only those in the specified namespace. If you include this parameter in your request, you \n    must also include the <code>metricName</code> parameter.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeMetricFiltersResponse": {
      "type": "structure",
      "members": {
        "metricFilters": {
          "target": "com.amazonaws.cloudwatchlogs#MetricFilters",
          "traits": {
            "smithy.api#documentation": "<p>The metric filters.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueries": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeQueriesRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeQueriesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or have\n      been run recently in this account. You can request all queries or limit it to queries of a\n      specific log group or queries with a certain status.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueriesMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueriesRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>Limits the returned queries to only those for the specified log group.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.cloudwatchlogs#QueryStatus",
          "traits": {
            "smithy.api#documentation": "<p>Limits the returned queries to only those that have the specified status. Valid values are <code>Cancelled</code>, \n      <code>Complete</code>, <code>Failed</code>, <code>Running</code>, and <code>Scheduled</code>.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeQueriesMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Limits the number of returned queries to the specified number.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueriesResponse": {
      "type": "structure",
      "members": {
        "queries": {
          "target": "com.amazonaws.cloudwatchlogs#QueryInfoList",
          "traits": {
            "smithy.api#documentation": "<p>The list of queries that match the request.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitionsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>This operation returns a paginated list of your saved CloudWatch Logs Insights query definitions.</p>\n         <p>You can use the <code>queryDefinitionNamePrefix</code> parameter to limit the results to only the\n      query definitions that have names that start with a certain string.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitionsRequest": {
      "type": "structure",
      "members": {
        "queryDefinitionNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionName",
          "traits": {
            "smithy.api#documentation": "<p>Use this parameter to filter your results to only the query definitions that have names that start with the prefix you specify.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.cloudwatchlogs#QueryListMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Limits the number of returned query definitions to the specified number.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitionsResponse": {
      "type": "structure",
      "members": {
        "queryDefinitions": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionList",
          "traits": {
            "smithy.api#documentation": "<p>The list of query definitions that match your request.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeResourcePolicies": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeResourcePoliciesRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeResourcePoliciesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the resource policies in this account.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeResourcePoliciesRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of resource policies to be displayed with one call of this API.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeResourcePoliciesResponse": {
      "type": "structure",
      "members": {
        "resourcePolicies": {
          "target": "com.amazonaws.cloudwatchlogs#ResourcePolicies",
          "traits": {
            "smithy.api#documentation": "<p>The resource policies that exist in this account.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFilters": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFiltersRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFiltersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the subscription filters for the specified log group. You can list all the subscription filters or filter the results by prefix.\n      The results are ASCII-sorted by filter name.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "subscriptionFilters",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFiltersRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "filterNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFiltersResponse": {
      "type": "structure",
      "members": {
        "subscriptionFilters": {
          "target": "com.amazonaws.cloudwatchlogs#SubscriptionFilters",
          "traits": {
            "smithy.api#documentation": "<p>The subscription filters.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#Destination": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the destination.</p>"
          }
        },
        "targetArn": {
          "target": "com.amazonaws.cloudwatchlogs#TargetArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the physical target where the log events are\n      delivered (for example, a Kinesis stream).</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.cloudwatchlogs#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>A role for impersonation, used when delivering log events to the target.</p>"
          }
        },
        "accessPolicy": {
          "target": "com.amazonaws.cloudwatchlogs#AccessPolicy",
          "traits": {
            "smithy.api#documentation": "<p>An IAM policy document that governs which Amazon Web Services accounts can create subscription filters\n      against this destination.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.cloudwatchlogs#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of this destination.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the destination, expressed as the number of milliseconds after Jan\n      1, 1970 00:00:00 UTC.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a cross-account destination that receives subscription log events.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DestinationArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DestinationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[^:*]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#Destinations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#Destination"
      }
    },
    "com.amazonaws.cloudwatchlogs#Dimensions": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.cloudwatchlogs#DimensionsKey"
      },
      "value": {
        "target": "com.amazonaws.cloudwatchlogs#DimensionsValue"
      }
    },
    "com.amazonaws.cloudwatchlogs#DimensionsKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DimensionsValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#DisassociateKmsKey": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#DisassociateKmsKeyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Disassociates the specified KMS key from the specified log\n      group or from all CloudWatch Logs Insights query results in the account.</p>\n         <p>When you use <code>DisassociateKmsKey</code>, you specify either the <code>logGroupName</code> parameter\n      or the <code>resourceIdentifier</code> parameter. You can't specify both of those parameters in the same operation.</p>\n         <ul>\n            <li>\n               <p>Specify the <code>logGroupName</code> parameter to stop using the KMS key\n          to encrypt future log events ingested and stored in the log group. Instead, they will be\n          encrypted with the default CloudWatch Logs method. The log events that were ingested\n          while the key was associated with the log group are still encrypted with that key.\n          Therefore, CloudWatch Logs will need permissions for the key whenever that data is\n          accessed.</p>\n            </li>\n            <li>\n               <p>Specify the <code>resourceIdentifier</code> parameter with the <code>query-result</code>\n          resource to stop using the KMS key to encrypt the results of all\n          future <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>\n          operations in the account. They will instead be encrypted with the default CloudWatch Logs method. The results from queries that ran while the key was associated with\n          the account are still encrypted with that key. Therefore, CloudWatch Logs will need\n          permissions for the key whenever that data is accessed.</p>\n            </li>\n         </ul>\n         <p>It can take up to 5 minutes for this operation to take effect.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#DisassociateKmsKeyRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>\n         <p>In your <code>DisassociateKmsKey</code> operation,\n      you must specify either the <code>resourceIdentifier</code> parameter or the <code>logGroup</code> parameter, \n      but you can't specify both.</p>"
          }
        },
        "resourceIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#ResourceIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the target for this operation. You must specify one of the following:</p>\n         <ul>\n            <li>\n               <p>Specify the ARN of a log group to stop having CloudWatch Logs use the KMS key\n        to encrypt log events that are ingested and stored by that log group. After you run this operation, CloudWatch Logs\n        encrypts ingested log events with the default CloudWatch Logs method. The log group ARN must be in \n        the following format. Replace\n        <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.</p>\n               <p>\n                  <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:log-group:<i>LOG_GROUP_NAME</i>\n                  </code>\n               </p>\n            </li>\n            <li>\n               <p>Specify the following ARN to stop using this key to encrypt the results of future <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>\n        operations in this account. Replace\n        <i>REGION</i> and <i>ACCOUNT_ID</i> with your Region and account ID.</p>\n               <p>\n                  <code>arn:aws:logs:<i>REGION</i>:<i>ACCOUNT_ID</i>:query-result:*</code>\n               </p>\n            </li>\n         </ul>\n         <p>In your <code>DisssociateKmsKey</code> operation,\n      you must specify either the <code>resourceIdentifier</code> parameter or the <code>logGroup</code> parameter, \n      but you can't specify both.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#Distribution": {
      "type": "enum",
      "members": {
        "Random": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Random"
          }
        },
        "ByLogStream": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ByLogStream"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The method used to distribute log data to the destination, which can be either\n      random or grouped by log stream.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#EncryptionKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#EventId": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#EventMessage": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#EventNumber": {
      "type": "long",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.cloudwatchlogs#EventsLimit": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 10000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportDestinationBucket": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportDestinationPrefix": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#ExportTask": {
      "type": "structure",
      "members": {
        "taskId": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the export task.</p>"
          }
        },
        "taskName": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the export task.</p>"
          }
        },
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group from which logs data was exported.</p>"
          }
        },
        "from": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start time, expressed as the number of milliseconds after <code>Jan 1, 1970\n        00:00:00 UTC</code>. Events with a timestamp before this time are not exported.</p>"
          }
        },
        "to": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end time, expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00\n        UTC</code>. Events with a timestamp later than this time are not exported.</p>"
          }
        },
        "destination": {
          "target": "com.amazonaws.cloudwatchlogs#ExportDestinationBucket",
          "traits": {
            "smithy.api#documentation": "<p>The name of the S3 bucket to which the log data was exported.</p>"
          }
        },
        "destinationPrefix": {
          "target": "com.amazonaws.cloudwatchlogs#ExportDestinationPrefix",
          "traits": {
            "smithy.api#documentation": "<p>The prefix that was used as the start of Amazon S3 key for every object exported.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the export task.</p>"
          }
        },
        "executionInfo": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskExecutionInfo",
          "traits": {
            "smithy.api#documentation": "<p>Execution information about the export task.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an export task.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskExecutionInfo": {
      "type": "structure",
      "members": {
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the export task, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        },
        "completionTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The completion time of the export task, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the status of an export task.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskStatus": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code of the export task.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#ExportTaskStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The status message related to the status code.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the status of an export task.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskStatusCode": {
      "type": "enum",
      "members": {
        "CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLED"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "PENDING_CANCEL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING_CANCEL"
          }
        },
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ExportTaskStatusMessage": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#ExportTasks": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#ExportTask"
      }
    },
    "com.amazonaws.cloudwatchlogs#ExtractedValues": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.cloudwatchlogs#Token"
      },
      "value": {
        "target": "com.amazonaws.cloudwatchlogs#Value"
      }
    },
    "com.amazonaws.cloudwatchlogs#Field": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#FilterCount": {
      "type": "integer"
    },
    "com.amazonaws.cloudwatchlogs#FilterLogEvents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#FilterLogEventsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#FilterLogEventsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists log events from the specified log group. You can list all the log events or filter the results\n      using a filter pattern, a time range, and the name of the log stream.</p>\n         <p>You must have the <code>logs:FilterLogEvents</code> permission to perform this operation.</p>\n         <p>You can specify the log group to search by using either <code>logGroupIdentifier</code> or <code>logGroupName</code>.\n      You must include one of these two parameters, but you can't include both.\n    </p>\n         <p>By default, this operation returns as many log events as can fit in 1 MB (up to 10,000\n      log events) or all the events found within the specified time range. If the results include a\n      token, that means there are more log events available. You can get additional results by\n      specifying the token in a subsequent call. This operation can return empty results while there\n      are more log events available through the token.</p>\n         <p>The returned log events are sorted by event timestamp, the timestamp when the event was ingested\n    by CloudWatch Logs, and the ID of the <code>PutLogEvents</code> request.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and \n      view data from the linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#FilterLogEventsRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group to search.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify either the name or ARN of the log group to view log events from. If the log group is in a source account\n      and you are using a monitoring account, you must use the log group ARN.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logStreamNames": {
          "target": "com.amazonaws.cloudwatchlogs#InputLogStreamNames",
          "traits": {
            "smithy.api#documentation": "<p>Filters the results to only logs from the log streams in this list.</p>\n         <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, the action\n      returns an <code>InvalidParameterException</code> error.</p>"
          }
        },
        "logStreamNamePrefix": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>Filters the results to include only events from log streams that have names starting with this prefix.</p>\n         <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, but the value for\n      <code>logStreamNamePrefix</code> does not match any log stream names specified in <code>logStreamNames</code>, the action\n    returns an <code>InvalidParameterException</code> error.</p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start of the time range, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>. Events with a timestamp before this time are not\n      returned.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end of the time range, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>. Events with a timestamp later than this time are not\n      returned.</p>"
          }
        },
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern",
          "traits": {
            "smithy.api#documentation": "<p>The filter pattern to use. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html\">Filter and Pattern Syntax</a>.</p>\n         <p>If not provided, all the events are matched.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of events to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#EventsLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of events to return. The default is 10,000 events.</p>"
          }
        },
        "interleaved": {
          "target": "com.amazonaws.cloudwatchlogs#Interleaved",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Starting on June 17, 2019, this parameter will be ignored and the value will be assumed to be true. The response from this operation will always interleave events from multiple log streams within a log group."
            },
            "smithy.api#documentation": "<p>If the value is true, the operation attempts to provide responses that contain events\n      from multiple log streams within the log group, interleaved in a single response. If the value\n      is false, all the matched log events in the first log stream are searched first, then those in\n      the next log stream, and so on.</p>\n         <p>\n            <b>Important</b> As of June 17, 2019, this parameter is\n      ignored and the value is assumed to be true. The response from this operation always\n      interleaves events from multiple log streams within a log group.</p>"
          }
        },
        "unmask": {
          "target": "com.amazonaws.cloudwatchlogs#Unmask",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specify <code>true</code> to display the log event fields with all sensitive data unmasked and visible.\n      The default is <code>false</code>.</p>\n         <p>To use this operation with this parameter, you must be signed into an account with the <code>logs:Unmask</code>\n      permission.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#FilterLogEventsResponse": {
      "type": "structure",
      "members": {
        "events": {
          "target": "com.amazonaws.cloudwatchlogs#FilteredLogEvents",
          "traits": {
            "smithy.api#documentation": "<p>The matched events.</p>"
          }
        },
        "searchedLogStreams": {
          "target": "com.amazonaws.cloudwatchlogs#SearchedLogStreams",
          "traits": {
            "smithy.api#documentation": "<p>\n            <b>Important</b> As of May 15, 2020, this parameter is no longer\n      supported. This parameter returns an empty list.</p>\n         <p>Indicates which log streams have been searched and whether each has been searched completely.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token to use when requesting the next set of items. The token expires after 24 hours.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#FilterName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[^:*]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#FilterPattern": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n      event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n      use the filter pattern to specify what to look for in the log event message.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#FilteredLogEvent": {
      "type": "structure",
      "members": {
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream to which this event belongs.</p>"
          }
        },
        "timestamp": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the event occurred, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#EventMessage",
          "traits": {
            "smithy.api#documentation": "<p>The data contained in the log event.</p>"
          }
        },
        "ingestionTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the event was ingested, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        },
        "eventId": {
          "target": "com.amazonaws.cloudwatchlogs#EventId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the event.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a matched event.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#FilteredLogEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#FilteredLogEvent"
      }
    },
    "com.amazonaws.cloudwatchlogs#ForceUpdate": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns information about a log group data protection policy.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicyRequest": {
      "type": "structure",
      "members": {
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The name or ARN of the log group that contains the data protection policy that you want to see.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicyResponse": {
      "type": "structure",
      "members": {
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The log group name or ARN that you specified in your request.</p>"
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#DataProtectionPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The data protection policy document for this log group.</p>"
          }
        },
        "lastUpdatedTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that this policy was most recently updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogEvents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogEventsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogEventsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists log events from the specified log stream. You can list all of the log events or\n      filter using a time range.</p>\n         <p>By default, this operation returns as many log events as can fit in a response size of 1MB (up to 10,000 log events). \n      You can get additional log events by specifying one of the tokens in a subsequent call.\n      This operation can return empty results while there are more log events available through the token.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and \n      view data from the linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>\n         <p>You can specify the log group to search by using either <code>logGroupIdentifier</code> or <code>logGroupName</code>.\n      You must include one of these two parameters, but you can't include both.\n    </p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextForwardToken",
          "items": "events",
          "pageSize": "limit"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogEventsRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify either the name or ARN of the log group to view events from. If the log group is in a source account\n      and you are using a monitoring account, you must use the log group ARN.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start of the time range, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>. Events with a timestamp equal to this time or later than this time\n      are included. Events with a timestamp earlier than this time are not included.</p>"
          }
        },
        "endTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end of the time range, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>. Events with a timestamp equal to or later than this time are not\n      included.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items to return. (You received this token from a previous call.)</p>"
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#EventsLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of log events returned. If you don't specify a limit, the default is\n      as many log events as can fit in a response size of 1 MB (up to 10,000 log events).</p>"
          }
        },
        "startFromHead": {
          "target": "com.amazonaws.cloudwatchlogs#StartFromHead",
          "traits": {
            "smithy.api#documentation": "<p>If the value is true, the earliest log events are returned first.\n      If the value is false, the latest log events are returned first.\n      The default value is false.</p>\n         <p>If you are using a previous <code>nextForwardToken</code> value as the <code>nextToken</code> in this operation, \n      you must specify <code>true</code> for <code>startFromHead</code>.</p>"
          }
        },
        "unmask": {
          "target": "com.amazonaws.cloudwatchlogs#Unmask",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specify <code>true</code> to display the log event fields with all sensitive data unmasked and visible.\n      The default is <code>false</code>.</p>\n         <p>To use this operation with this parameter, you must be signed into an account with the <code>logs:Unmask</code>\n      permission.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogEventsResponse": {
      "type": "structure",
      "members": {
        "events": {
          "target": "com.amazonaws.cloudwatchlogs#OutputLogEvents",
          "traits": {
            "smithy.api#documentation": "<p>The events.</p>"
          }
        },
        "nextForwardToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items in the forward direction. The token expires after\n      24 hours. If you have reached the end of the stream, it returns the same token you passed\n      in.</p>"
          }
        },
        "nextBackwardToken": {
          "target": "com.amazonaws.cloudwatchlogs#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of items in the backward direction. The token expires after\n      24 hours. This token is not null. If you have reached the end of the stream, it returns the\n      same token you passed in.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogGroupFields": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogGroupFieldsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogGroupFieldsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of the fields that are included in log events in the specified log group.\n      Includes the percentage of log events that contain each field. The search is limited to a time\n      period that you specify.</p>\n         <p>You can specify the log group to search by using either <code>logGroupIdentifier</code> or <code>logGroupName</code>.\n      You must specify one of these parameters, but you can't specify both.\n    </p>\n         <p>In the results, fields that start with <code>@</code> are fields generated by CloudWatch\n      Logs. For example, <code>@timestamp</code> is the timestamp of each log event. For more\n      information about the fields that are generated by CloudWatch logs, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported\n        Logs and Discovered Fields</a>.</p>\n         <p>The response results are sorted by the frequency percentage, starting \n    with the highest percentage.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account and \n      view data from the linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogGroupFieldsRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group to search.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        },
        "time": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time to set as the center of the query. If you specify <code>time</code>, the 8 minutes before and\n      8 minutes after this time are searched. If you omit <code>time</code>, the most recent 15 minutes\n      up to the current time are searched.</p>\n         <p>The <code>time</code> value is specified as epoch time, which is the number of seconds\n      since <code>January 1, 1970, 00:00:00 UTC</code>.</p>"
          }
        },
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify either the name or ARN of the log group to view. If the log group is in a source account and\n    you are using a monitoring account, you must specify the ARN.</p>\n         <note>\n            <p>\n        You must include either <code>logGroupIdentifier</code> or <code>logGroupName</code>, but not \n        both.\n      </p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogGroupFieldsResponse": {
      "type": "structure",
      "members": {
        "logGroupFields": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupFieldList",
          "traits": {
            "smithy.api#documentation": "<p>The array of fields found in the query. Each object in the array contains the name of the\n      field, along with the percentage of time it appeared in the log events that were\n      queried.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogRecord": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogRecordRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#GetLogRecordResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves all of the fields and values of a single log event. All fields are retrieved,\n      even if the original query that produced the <code>logRecordPointer</code> retrieved only a\n      subset of fields. Fields are returned as field name/field value pairs.</p>\n         <p>The full unparsed log event is returned within <code>@message</code>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogRecordRequest": {
      "type": "structure",
      "members": {
        "logRecordPointer": {
          "target": "com.amazonaws.cloudwatchlogs#LogRecordPointer",
          "traits": {
            "smithy.api#documentation": "<p>The pointer corresponding to the log event record you want to retrieve. You get this from\n      the response of a <code>GetQueryResults</code> operation. In that response, the value of the\n        <code>@ptr</code> field for a log event is the value to use as <code>logRecordPointer</code>\n      to retrieve that complete log event record.</p>",
            "smithy.api#required": {}
          }
        },
        "unmask": {
          "target": "com.amazonaws.cloudwatchlogs#Unmask",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Specify <code>true</code> to display the log event fields with all sensitive data unmasked and visible.\n      The default is <code>false</code>.</p>\n         <p>To use this operation with this parameter, you must be signed into an account with the <code>logs:Unmask</code>\n      permission.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetLogRecordResponse": {
      "type": "structure",
      "members": {
        "logRecord": {
          "target": "com.amazonaws.cloudwatchlogs#LogRecord",
          "traits": {
            "smithy.api#documentation": "<p>The requested log event, as a JSON string.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetQueryResults": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#GetQueryResultsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#GetQueryResultsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the results from the specified query.</p>\n         <p>Only the fields requested in the query are returned, along with a <code>@ptr</code>\n      field, which is the identifier for the log record. You can use the value of <code>@ptr</code>\n      in a <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogRecord.html\">GetLogRecord</a>\n      operation to get the full log record.</p>\n         <p>\n            <code>GetQueryResults</code> does not start running a query. To run a query, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a>.</p>\n         <p>If the value of the <code>Status</code> field in the output is <code>Running</code>, this operation \n      returns only partial results. If you see a value of <code>Scheduled</code> or <code>Running</code> for the status, \n      you can retry the operation later to see the final results. </p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a monitoring account to start \n      queries in linked source accounts. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch cross-account observability</a>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#GetQueryResultsRequest": {
      "type": "structure",
      "members": {
        "queryId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID number of the query.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#GetQueryResultsResponse": {
      "type": "structure",
      "members": {
        "results": {
          "target": "com.amazonaws.cloudwatchlogs#QueryResults",
          "traits": {
            "smithy.api#documentation": "<p>The log events that matched the query criteria during the most recent time it ran.</p>\n         <p>The <code>results</code> value is an array of arrays. Each log event is one object in the\n      top-level array. Each of these log event objects is an array of\n        <code>field</code>/<code>value</code> pairs.</p>"
          }
        },
        "statistics": {
          "target": "com.amazonaws.cloudwatchlogs#QueryStatistics",
          "traits": {
            "smithy.api#documentation": "<p>Includes the number of log events scanned by the query, the number of log events that\n      matched the query criteria, and the total number of bytes in the scanned log events. These\n      values reflect the full raw results of the query.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.cloudwatchlogs#QueryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the most recent running of the query. Possible values are <code>Cancelled</code>, \n      <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, \n      <code>Timeout</code>, and <code>Unknown</code>.</p>\n         <p>Queries time out after 60 minutes of runtime. To avoid having your queries time out,\n      reduce the time range being searched or partition your query into a number of queries.</p>"
          }
        },
        "encryptionKey": {
          "target": "com.amazonaws.cloudwatchlogs#EncryptionKey",
          "traits": {
            "smithy.api#documentation": "<p>If you associated an KMS key with the CloudWatch Logs Insights\n      query results in this account, this field displays the ARN of the key that's used to encrypt\n      the query results when <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a> stores\n      them.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#IncludeLinkedAccounts": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#InheritedProperties": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#InheritedProperty"
      }
    },
    "com.amazonaws.cloudwatchlogs#InheritedProperty": {
      "type": "enum",
      "members": {
        "ACCOUNT_DATA_PROTECTION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACCOUNT_DATA_PROTECTION"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#InputLogEvent": {
      "type": "structure",
      "members": {
        "timestamp": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the event occurred, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#EventMessage",
          "traits": {
            "smithy.api#documentation": "<p>The raw event message. Each log event can be no larger than 256 KB.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a log event, which is a record of activity that was recorded \n      by the application or resource being monitored.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#InputLogEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#InputLogEvent"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#InputLogStreamNames": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogStreamName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#Interleaved": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#InvalidOperationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation is not valid on the specified resource.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#InvalidParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A parameter is specified incorrectly.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException": {
      "type": "structure",
      "members": {
        "expectedSequenceToken": {
          "target": "com.amazonaws.cloudwatchlogs#SequenceToken"
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The sequence token is not valid. You can get the correct sequence token in \n      the <code>expectedSequenceToken</code> field in the <code>InvalidSequenceTokenException</code>\n    message. </p>\n         <important>\n            <p>\n               <code>PutLogEvents</code>\n      actions are now always accepted and never return\n      <code>InvalidSequenceTokenException</code> regardless of receiving an invalid sequence token. </p>\n         </important>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#KmsKeyId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#LimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You have reached the maximum number of resources that can be created.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays the tags associated with a CloudWatch Logs resource. Currently, log groups \n      and destinations support tagging.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.cloudwatchlogs#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the  resource that you want to view tags for.</p>\n         <p>The ARN format of a log group is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>\n            </code>\n         </p>\n         <p>The ARN format of a destination is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>\n            </code>\n         </p>\n         <p>For more information about ARN format, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html\">CloudWatch Logs \n      resources and operations</a>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The list of tags associated with the requested resource.></p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsLogGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#ListTagsLogGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#ListTagsLogGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API ListTagsForResource"
        },
        "smithy.api#documentation": "<important>\n            <p>The ListTagsLogGroup operation is on the path to deprecation. We recommend that you use \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html\">ListTagsForResource</a> instead.</p>\n         </important>\n         <p>Lists the tags for the specified log group.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsLogGroupRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API model ListTagsForResourceRequest and ListTagsForResourceResponse"
        },
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#ListTagsLogGroupResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The tags for the log group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API model ListTagsForResourceRequest and ListTagsForResourceResponse"
        },
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#LogEventIndex": {
      "type": "integer"
    },
    "com.amazonaws.cloudwatchlogs#LogGroup": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the log group, expressed as the number of milliseconds after Jan\n      1, 1970 00:00:00 UTC.</p>"
          }
        },
        "retentionInDays": {
          "target": "com.amazonaws.cloudwatchlogs#Days"
        },
        "metricFilterCount": {
          "target": "com.amazonaws.cloudwatchlogs#FilterCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of metric filters.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.cloudwatchlogs#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the log group.</p>"
          }
        },
        "storedBytes": {
          "target": "com.amazonaws.cloudwatchlogs#StoredBytes",
          "traits": {
            "smithy.api#documentation": "<p>The number of bytes stored.</p>"
          }
        },
        "kmsKeyId": {
          "target": "com.amazonaws.cloudwatchlogs#KmsKeyId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the KMS key to use when\n      encrypting log data.</p>"
          }
        },
        "dataProtectionStatus": {
          "target": "com.amazonaws.cloudwatchlogs#DataProtectionStatus",
          "traits": {
            "smithy.api#documentation": "<p>Displays whether this log group has a protection policy, or whether it had one in the past. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html\">PutDataProtectionPolicy</a>.</p>"
          }
        },
        "inheritedProperties": {
          "target": "com.amazonaws.cloudwatchlogs#InheritedProperties",
          "traits": {
            "smithy.api#documentation": "<p>Displays all the properties that this log group has inherited from account-level \n    settings.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a log group.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupField": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.cloudwatchlogs#Field",
          "traits": {
            "smithy.api#documentation": "<p>The name of a log field.</p>"
          }
        },
        "percent": {
          "target": "com.amazonaws.cloudwatchlogs#Percentage",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The percentage of log events queried that contained the field.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The fields contained in log events found by a <code>GetLogGroupFields</code> operation,\n      along with the percentage of queried log events in which each field appears.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupFieldList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogGroupField"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^[\\w#+=/:,.@-]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupIdentifiers": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[\\.\\-_/#A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupNamePattern": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 512
        },
        "smithy.api#pattern": "^[\\.\\-_/#A-Za-z0-9]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroupNames": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogGroupName"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogGroups": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogGroup"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogRecord": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.cloudwatchlogs#Field"
      },
      "value": {
        "target": "com.amazonaws.cloudwatchlogs#Value"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogRecordPointer": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#LogStream": {
      "type": "structure",
      "members": {
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the stream, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        },
        "firstEventTimestamp": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time of the first event, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>.</p>"
          }
        },
        "lastEventTimestamp": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time of the most recent log event in the log stream in CloudWatch Logs. This number\n      is expressed as the number of milliseconds after <code>Jan 1, 1970 00:00:00 UTC</code>. The\n        <code>lastEventTime</code> value updates on an eventual consistency basis. It typically\n      updates in less than an hour from ingestion, but in rare situations might take\n      longer.</p>"
          }
        },
        "lastIngestionTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ingestion time, expressed as the number of milliseconds after <code>Jan 1, 1970\n      00:00:00 UTC</code> The <code>lastIngestionTime</code> value updates on an eventual consistency basis. It \n      typically updates in less than an hour after ingestion, but in rare situations might take longer.</p>"
          }
        },
        "uploadSequenceToken": {
          "target": "com.amazonaws.cloudwatchlogs#SequenceToken",
          "traits": {
            "smithy.api#documentation": "<p>The sequence token.</p>\n         <important>\n            <p>The sequence token is now ignored in \n      <code>PutLogEvents</code>\n      actions. <code>PutLogEvents</code> actions are always accepted regardless of receiving an invalid sequence token. \n    You don't need to obtain <code>uploadSequenceToken</code> to use a <code>PutLogEvents</code> action.</p>\n         </important>"
          }
        },
        "arn": {
          "target": "com.amazonaws.cloudwatchlogs#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the log stream.</p>"
          }
        },
        "storedBytes": {
          "target": "com.amazonaws.cloudwatchlogs#StoredBytes",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Starting on June 17, 2019, this parameter will be deprecated for log streams, and will be reported as zero. This change applies only to log streams. The storedBytes parameter for log groups is not affected."
            },
            "smithy.api#documentation": "<p>The number of bytes stored.</p>\n         <p>\n            <b>Important:</b> As of June 17, 2019, this parameter is no\n      longer supported for log streams, and is always reported as zero. This change applies only to\n      log streams. The <code>storedBytes</code> parameter for log groups is not affected.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a log stream, which is a sequence of log events from \n      a single emitter of logs.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogStreamName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[^:*]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#LogStreamSearchedCompletely": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#LogStreams": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#LogStream"
      }
    },
    "com.amazonaws.cloudwatchlogs#Logs_20140328": {
      "type": "service",
      "version": "2014-03-28",
      "operations": [
        {
          "target": "com.amazonaws.cloudwatchlogs#AssociateKmsKey"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#CancelExportTask"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#CreateExportTask"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#CreateLogGroup"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#CreateLogStream"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteAccountPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteDataProtectionPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteDestination"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteLogGroup"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteLogStream"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteMetricFilter"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteQueryDefinition"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteResourcePolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteRetentionPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DeleteSubscriptionFilter"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeAccountPolicies"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeDestinations"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeExportTasks"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLogGroups"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeLogStreams"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeMetricFilters"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeQueries"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeQueryDefinitions"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeResourcePolicies"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DescribeSubscriptionFilters"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#DisassociateKmsKey"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#FilterLogEvents"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#GetDataProtectionPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#GetLogEvents"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#GetLogGroupFields"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#GetLogRecord"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#GetQueryResults"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ListTagsLogGroup"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutAccountPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutDestination"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutDestinationPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutLogEvents"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutMetricFilter"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutQueryDefinition"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutResourcePolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutRetentionPolicy"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#PutSubscriptionFilter"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#StartQuery"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#StopQuery"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#TagLogGroup"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#TagResource"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#TestMetricFilter"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#UntagLogGroup"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#UntagResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "CloudWatch Logs",
          "arnNamespace": "logs",
          "cloudFormationName": "Logs",
          "cloudTrailEventSource": "cloudwatchlogs.amazonaws.com",
          "docId": "logs-2014-03-28",
          "endpointPrefix": "logs"
        },
        "aws.auth#sigv4": {
          "name": "logs"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<p>You can use Amazon CloudWatch Logs to monitor, store, and access your log files from\n      EC2 instances, CloudTrail, and other sources. You can then retrieve the associated\n      log data from CloudWatch Logs using the CloudWatch console. Alternatively, you can use\n      CloudWatch Logs commands in the Amazon Web Services CLI, CloudWatch Logs API, or CloudWatch\n      Logs SDK.</p>\n         <p>You can use CloudWatch Logs to:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Monitor logs from EC2 instances in real time</b>: You\n          can use CloudWatch Logs to monitor applications and systems using log data. For example,\n          CloudWatch Logs can track the number of errors that occur in your application logs. Then,\n          it can send you a notification whenever the rate of errors exceeds a threshold that you\n          specify. CloudWatch Logs uses your log data for monitoring so no code changes are\n          required. For example, you can monitor application logs for specific literal terms (such\n          as \"NullReferenceException\"). You can also count the number of occurrences of a literal\n          term at a particular position in log data (such as \"404\" status codes in an Apache access\n          log). When the term you are searching for is found, CloudWatch Logs reports the data to a\n          CloudWatch metric that you specify.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Monitor CloudTrail logged events</b>: You can\n          create alarms in CloudWatch and receive notifications of particular API activity as\n          captured by CloudTrail. You can use the notification to perform troubleshooting.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Archive log data</b>: You can use CloudWatch Logs to\n          store your log data in highly durable storage. You can change the log retention setting so\n          that any log events earlier than this setting are automatically deleted. The CloudWatch\n          Logs agent helps to quickly send both rotated and non-rotated log data off of a host and\n          into the log service. You can then access the raw log data when you need it.</p>\n            </li>\n         </ul>",
        "smithy.api#title": "Amazon CloudWatch Logs",
        "smithy.api#xmlNamespace": {
          "uri": "http://monitoring.amazonaws.com/doc/2014-03-28/"
        },
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://logs-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "us-gov-east-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://logs.us-gov-east-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    {
                                      "ref": "Region"
                                    },
                                    "us-gov-west-1"
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://logs.us-gov-west-1.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://logs-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://logs.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://logs.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-northeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ap-southeast-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-iso-west-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://logs-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#MalformedQueryException": {
      "type": "structure",
      "members": {
        "queryCompileError": {
          "target": "com.amazonaws.cloudwatchlogs#QueryCompileError"
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The query string is not valid. Details about this error are displayed in a \n      <code>QueryCompileError</code> object. For more information, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html\">QueryCompileError</a>.</p>\n         <p>For more information about valid query syntax, see\n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#Message": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#MetricFilter": {
      "type": "structure",
      "members": {
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the metric filter.</p>"
          }
        },
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern"
        },
        "metricTransformations": {
          "target": "com.amazonaws.cloudwatchlogs#MetricTransformations",
          "traits": {
            "smithy.api#documentation": "<p>The metric transformations.</p>"
          }
        },
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the metric filter, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        },
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Metric filters express how CloudWatch Logs would extract metric observations \n      from ingested log events and transform them into metric data in a CloudWatch metric.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricFilterMatchRecord": {
      "type": "structure",
      "members": {
        "eventNumber": {
          "target": "com.amazonaws.cloudwatchlogs#EventNumber",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The event number.</p>"
          }
        },
        "eventMessage": {
          "target": "com.amazonaws.cloudwatchlogs#EventMessage",
          "traits": {
            "smithy.api#documentation": "<p>The raw event data.</p>"
          }
        },
        "extractedValues": {
          "target": "com.amazonaws.cloudwatchlogs#ExtractedValues",
          "traits": {
            "smithy.api#documentation": "<p>The values extracted from the event data by the filter.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a matched event.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricFilterMatches": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#MetricFilterMatchRecord"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#MetricFilter"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricName": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The name of the CloudWatch metric to which the monitored log information should be\n      published. For example, you might publish to a metric named ErrorCount.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 255
        },
        "smithy.api#pattern": "^[^:*$]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricNamespace": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        },
        "smithy.api#pattern": "^[^:*$]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricTransformation": {
      "type": "structure",
      "members": {
        "metricName": {
          "target": "com.amazonaws.cloudwatchlogs#MetricName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the CloudWatch metric.</p>",
            "smithy.api#required": {}
          }
        },
        "metricNamespace": {
          "target": "com.amazonaws.cloudwatchlogs#MetricNamespace",
          "traits": {
            "smithy.api#documentation": "<p>A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics\n      that are similar. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace\">Namespaces</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "metricValue": {
          "target": "com.amazonaws.cloudwatchlogs#MetricValue",
          "traits": {
            "smithy.api#documentation": "<p>The value to publish to the CloudWatch metric when a filter pattern matches a log event.</p>",
            "smithy.api#required": {}
          }
        },
        "defaultValue": {
          "target": "com.amazonaws.cloudwatchlogs#DefaultValue",
          "traits": {
            "smithy.api#documentation": "<p>(Optional) The value to emit when a filter pattern does not match a log event. \n      This value can be null.</p>"
          }
        },
        "dimensions": {
          "target": "com.amazonaws.cloudwatchlogs#Dimensions",
          "traits": {
            "smithy.api#documentation": "<p>The fields to use as dimensions for the metric. One metric filter can include\n    as many as three dimensions.</p>\n         <important>\n            <p>Metrics extracted from log events are charged as custom metrics.\n      To prevent unexpected high charges, do not specify high-cardinality fields such as \n      <code>IPAddress</code> or <code>requestID</code> as dimensions. Each different value \n      found for \n      a dimension is treated as a separate metric and accrues charges as a separate custom metric.\n    </p>\n            <p>CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your\n        specified dimensions within a certain amount of time. This helps to prevent accidental high\n        charges.</p>\n            <p>You can also set up a billing alarm to alert you if your charges are higher than \n        expected. For more information, \n        see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html\">\n          Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.\n       </p>\n         </important>"
          }
        },
        "unit": {
          "target": "com.amazonaws.cloudwatchlogs#StandardUnit",
          "traits": {
            "smithy.api#documentation": "<p>The unit to assign to the metric. If you omit this, the unit is set as <code>None</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Indicates how to transform ingested log events to metric data in a CloudWatch\n      metric.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricTransformations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#MetricTransformation"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#MetricValue": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The value to publish to the CloudWatch metric. For example, if you're counting the\n      occurrences of a term like <code>Error</code>, the value is <code>1</code> for each\n      occurrence. If you're counting the bytes transferred, the value is the value in the log\n      event.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The token for the next set of items to return. The token expires after 24 hours.</p>",
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#OperationAbortedException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Multiple concurrent requests to update the same resource were in conflict.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#OrderBy": {
      "type": "enum",
      "members": {
        "LogStreamName": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LogStreamName"
          }
        },
        "LastEventTime": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LastEventTime"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#OutputLogEvent": {
      "type": "structure",
      "members": {
        "timestamp": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the event occurred, expressed as the number of milliseconds after <code>Jan 1,\n        1970 00:00:00 UTC</code>.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#EventMessage",
          "traits": {
            "smithy.api#documentation": "<p>The data contained in the log event.</p>"
          }
        },
        "ingestionTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the event was ingested, expressed as the number of milliseconds after\n        <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a log event.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#OutputLogEvents": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#OutputLogEvent"
      }
    },
    "com.amazonaws.cloudwatchlogs#Percentage": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#PolicyDocument": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5120
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#PolicyName": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#PolicyType": {
      "type": "enum",
      "members": {
        "DATA_PROTECTION_POLICY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DATA_PROTECTION_POLICY"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#PutAccountPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutAccountPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutAccountPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an account-level data protection policy that applies to all log groups in the account. A data protection policy can help safeguard sensitive \n      data that's ingested by your log groups by auditing and masking the sensitive log data. Each account can have only\n    one account-level policy.</p>\n         <important>\n            <p>Sensitive data is detected and masked when it is ingested into a log group. When you set a \n      data protection policy, log events ingested into the log groups before that time are not masked.</p>\n         </important>\n         <p>If you use <code>PutAccountPolicy</code> to create a data protection policy for your whole account, it applies to both existing log groups\n    and all log groups that are created later in this account. The account policy is applied to existing log groups\n    with eventual consistency. It might take up to 5 minutes before sensitive data in existing log groups begins to be masked.</p>\n         <p>By default, when a user views a log event that includes masked data, the sensitive data is replaced by asterisks.\n      A user who has the <code>logs:Unmask</code> permission can use a \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html\">GetLogEvents</a> or \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html\">FilterLogEvents</a>\n      operation with the <code>unmask</code> parameter set to <code>true</code> to view the unmasked \n      log events. Users with the <code>logs:Unmask</code> can also view unmasked data in the CloudWatch Logs\n      console by running a CloudWatch Logs Insights query with the <code>unmask</code> query command.</p>\n         <p>For more information, including a list of types of data that can be audited and masked, see\n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html\">Protect sensitive log data with masking</a>.</p>\n         <p>To use the <code>PutAccountPolicy</code> operation, you must be signed on with the <code>logs:PutDataProtectionPolicy</code>\n    and <code>logs:PutAccountPolicy</code> permissions.</p>\n         <p>The <code>PutAccountPolicy</code> operation applies to all log groups in the account. You can also use \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDataProtectionPolicy.html\">PutDataProtectionPolicy</a>\n      to create a data protection policy that applies to just one log group. \n      If a log group has its own data protection policy and \n      the account also has an account-level data protection policy, then the two policies are cumulative. Any sensitive term\n      specified in either policy is masked.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutAccountPolicyRequest": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the policy. This must be unique within the account.</p>",
            "smithy.api#required": {}
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#AccountPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>Specify the data protection policy, in JSON.</p>\n         <p>This policy must include two JSON blocks:</p>\n         <ul>\n            <li>\n               <p>The first block must include both a <code>DataIdentifer</code> array and an \n        <code>Operation</code> property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists the types of sensitive data that\n        you want to mask. For more information about the available options, see \n        <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html\">Types of data that you can mask</a>.</p>\n               <p>The <code>Operation</code> property with an <code>Audit</code> action is required to find the \n          sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>\n          object. You can optionally use that <code>FindingsDestination</code> object to list one or more \n          destinations to send audit findings to. If you specify destinations such as log groups, \n          Kinesis Data Firehose streams, and S3 buckets, they must already exist.</p>\n            </li>\n            <li>\n               <p>The second block must include both a <code>DataIdentifer</code> array and an\n        <code>Operation</code> property with an <code>Deidentify</code> action. The\n        <code>DataIdentifer</code> array must exactly match the <code>DataIdentifer</code> array\n        in the first block of the policy.</p>\n               <p>The <code>Operation</code> property with the <code>Deidentify</code> action is what actually masks the \n          data, and it must \n          contain the <code>\n            \"MaskConfig\": {}</code> object. The <code>\n              \"MaskConfig\": {}</code> object must be empty.</p>\n            </li>\n         </ul>\n         <p>For an example data protection policy, see the <b>Examples</b> section on this page.</p>\n         <important>\n            <p>The contents of the two <code>DataIdentifer</code> arrays must match exactly.</p>\n         </important>\n         <p>In addition to the two JSON blocks, the <code>policyDocument</code> can also include <code>Name</code>,\n    <code>Description</code>, and <code>Version</code> fields. The <code>Name</code> is different than the \n      operation's <code>policyName</code> parameter, and is used as a dimension when\n    CloudWatch Logs reports audit findings metrics to CloudWatch.</p>\n         <p>The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.</p>",
            "smithy.api#required": {}
          }
        },
        "policyType": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyType",
          "traits": {
            "smithy.api#documentation": "<p>Currently the only valid value for this parameter is <code>DATA_PROTECTION_POLICY</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "scope": {
          "target": "com.amazonaws.cloudwatchlogs#Scope",
          "traits": {
            "smithy.api#documentation": "<p>Currently the only valid value for this parameter is <code>ALL</code>, which specifies that the data \n      protection policy applies to all log groups in the account. If you omit this parameter, the default\n    of <code>ALL</code> is used.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutAccountPolicyResponse": {
      "type": "structure",
      "members": {
        "accountPolicy": {
          "target": "com.amazonaws.cloudwatchlogs#AccountPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The account policy that you created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a data protection policy for the specified log group. A data protection policy can help safeguard sensitive \n      data that's ingested by the log group by auditing and masking the sensitive log data.</p>\n         <important>\n            <p>Sensitive data is detected and masked when it is ingested into the log group. When you set a \n      data protection policy, log events ingested into the log group before that time are not masked.</p>\n         </important>\n         <p>By default, when a user views a log event that includes masked data, the sensitive data is replaced by asterisks.\n      A user who has the <code>logs:Unmask</code> permission can use a \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html\">GetLogEvents</a> or \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_FilterLogEvents.html\">FilterLogEvents</a>\n      operation with the <code>unmask</code> parameter set to <code>true</code> to view the unmasked \n      log events. Users with the <code>logs:Unmask</code> can also view unmasked data in the CloudWatch Logs\n      console by running a CloudWatch Logs Insights query with the <code>unmask</code> query command.</p>\n         <p>For more information, including a list of types of data that can be audited and masked, see\n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html\">Protect sensitive log data with masking</a>.</p>\n         <p>The <code>PutDataProtectionPolicy</code> operation applies to only the specified log group. You can also use \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutAccountPolicy.html\">PutAccountPolicy</a>\n      to create an account-level data protection policy that applies to all log groups in the account, \n    including both existing log groups and log groups that are created level. If a log group has its own data protection policy and \n    the account also has an account-level data protection policy, then the two policies are cumulative. Any sensitive term\n    specified in either policy is masked.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicyRequest": {
      "type": "structure",
      "members": {
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>Specify either the log group name or log group ARN.</p>",
            "smithy.api#required": {}
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#DataProtectionPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>Specify the data protection policy, in JSON.</p>\n         <p>This policy must include two JSON blocks:</p>\n         <ul>\n            <li>\n               <p>The first block must include both a <code>DataIdentifer</code> array and an \n        <code>Operation</code> property with an <code>Audit</code> action. The <code>DataIdentifer</code> array lists the types of sensitive data that\n        you want to mask. For more information about the available options, see \n        <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-types.html\">Types of data that you can mask</a>.</p>\n               <p>The <code>Operation</code> property with an <code>Audit</code> action is required to find the \n          sensitive data terms. This <code>Audit</code> action must contain a <code>FindingsDestination</code>\n          object. You can optionally use that <code>FindingsDestination</code> object to list one or more \n          destinations to send audit findings to. If you specify destinations such as log groups, \n          Kinesis Data Firehose streams, and S3 buckets, they must already exist.</p>\n            </li>\n            <li>\n               <p>The second block must include both a <code>DataIdentifer</code> array and an\n            <code>Operation</code> property with an <code>Deidentify</code> action. The\n            <code>DataIdentifer</code> array must exactly match the <code>DataIdentifer</code> array\n          in the first block of the policy.</p>\n               <p>The <code>Operation</code> property with the <code>Deidentify</code> action is what actually masks the \n        data, and it must \n        contain the <code>\n          \"MaskConfig\": {}</code> object. The <code>\n            \"MaskConfig\": {}</code> object must be empty.</p>\n            </li>\n         </ul>\n         <p>For an example data protection policy, see the <b>Examples</b> section on this page.</p>\n         <important>\n            <p>The contents of the two <code>DataIdentifer</code> arrays must match exactly.</p>\n         </important>\n         <p>In addition to the two JSON blocks, the <code>policyDocument</code> can also include <code>Name</code>,\n      <code>Description</code>, and <code>Version</code> fields. The <code>Name</code> is used as a dimension when\n      CloudWatch Logs reports audit findings metrics to CloudWatch.</p>\n         <p>The JSON specified in <code>policyDocument</code> can be up to 30,720 characters.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDataProtectionPolicyResponse": {
      "type": "structure",
      "members": {
        "logGroupIdentifier": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The log group name or ARN that you specified in your request.</p>"
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#DataProtectionPolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The data protection policy used for this log group.</p>"
          }
        },
        "lastUpdatedTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that this policy was most recently updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDestination": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutDestinationRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutDestinationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates a destination. This operation is used only to create destinations for cross-account subscriptions.</p>\n         <p>A destination encapsulates a physical resource (such as an Amazon Kinesis stream). With\n      a destination, you can subscribe to a real-time stream of log events for a different account,\n      ingested using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n         <p>Through an access policy, a destination controls what is written to it.\n      By default, <code>PutDestination</code> does not set any access policy with the destination,\n      which means a cross-account user cannot call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutSubscriptionFilter.html\">PutSubscriptionFilter</a> against\n      this destination. To enable this, the destination owner must call <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html\">PutDestinationPolicy</a> after <code>PutDestination</code>.</p>\n         <p>To perform a <code>PutDestination</code> operation, you must also have the \n    <code>iam:PassRole</code> permission.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDestinationPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutDestinationPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates an access policy associated with an existing\n      destination. An access policy is an <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html\">IAM policy document</a> that is used\n      to authorize claims to register a subscription filter against a given destination.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDestinationPolicyRequest": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>A name for an existing destination.</p>",
            "smithy.api#required": {}
          }
        },
        "accessPolicy": {
          "target": "com.amazonaws.cloudwatchlogs#AccessPolicy",
          "traits": {
            "smithy.api#documentation": "<p>An IAM policy document that authorizes cross-account users to deliver their log events\n      to the associated destination. This can be up to 5120 bytes.</p>",
            "smithy.api#required": {}
          }
        },
        "forceUpdate": {
          "target": "com.amazonaws.cloudwatchlogs#ForceUpdate",
          "traits": {
            "smithy.api#documentation": "<p>Specify true if you are updating an existing destination policy to grant permission to\n      an organization ID instead of granting permission to individual Amazon Web Services accounts. Before\n    you update a destination policy this way, you must first update the subscription\n    filters in the accounts that send logs to this destination. If you do not, the subscription\n    filters might stop working. By specifying <code>true</code>\n      for <code>forceUpdate</code>, you are affirming that you have already updated the subscription \n      filters.\n    For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Cross-Account-Log_Subscription-Update.html\">\n      Updating an existing cross-account subscription</a>\n         </p>\n         <p>If you omit this parameter, the default of <code>false</code> is used.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDestinationRequest": {
      "type": "structure",
      "members": {
        "destinationName": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the destination.</p>",
            "smithy.api#required": {}
          }
        },
        "targetArn": {
          "target": "com.amazonaws.cloudwatchlogs#TargetArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of an Amazon Kinesis stream to which to deliver matching log events.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.cloudwatchlogs#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon\n      Kinesis <code>PutRecord</code> operation on the destination stream.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>An optional list of key-value pairs to associate with the resource.</p>\n         <p>For more information about tagging, see \n      <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutDestinationResponse": {
      "type": "structure",
      "members": {
        "destination": {
          "target": "com.amazonaws.cloudwatchlogs#Destination",
          "traits": {
            "smithy.api#documentation": "<p>The destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutLogEvents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutLogEventsRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutLogEventsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#DataAlreadyAcceptedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidSequenceTokenException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#UnrecognizedClientException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Uploads a batch of log events to the specified log stream.</p>\n         <important>\n            <p>The sequence token is now ignored in <code>PutLogEvents</code>\n      actions. <code>PutLogEvents</code>\n      actions are always accepted and never return <code>InvalidSequenceTokenException</code> or\n      <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid. You can use\n      parallel <code>PutLogEvents</code> actions on the same log stream. </p>\n         </important>\n         <p>The batch of events must satisfy the following constraints:</p>\n         <ul>\n            <li>\n               <p>The maximum batch size is 1,048,576 bytes. This size is calculated as the sum of\n          all event messages in UTF-8, plus 26 bytes for each log event.</p>\n            </li>\n            <li>\n               <p>None of the log events in the batch can be more than 2 hours in the future.</p>\n            </li>\n            <li>\n               <p>None of the log events in the batch can be more than 14 days in the past. Also,\n          none of the log events can be from earlier than the retention period of the log\n          group.</p>\n            </li>\n            <li>\n               <p>The log events in the batch must be in chronological order by their timestamp. The\n          timestamp is the time that the event occurred, expressed as the number of milliseconds\n          after <code>Jan 1, 1970 00:00:00 UTC</code>. (In Amazon Web Services Tools for PowerShell\n          and the Amazon Web Services SDK for .NET, the timestamp is specified in .NET format:\n            <code>yyyy-mm-ddThh:mm:ss</code>. For example, <code>2017-09-15T13:45:30</code>.) </p>\n            </li>\n            <li>\n               <p>A batch of log events in a single request cannot span more than 24 hours. Otherwise, the operation fails.</p>\n            </li>\n            <li>\n               <p>Each log event can be no larger than 256 KB.</p>\n            </li>\n            <li>\n               <p>The maximum number of log events in a batch is 10,000.</p>\n            </li>\n            <li>\n               <important>\n                  <p>The quota of five requests per second per log stream\n          has been removed. Instead, <code>PutLogEvents</code> actions are throttled based on a \n        per-second per-account quota. You can request an increase to the per-second throttling\n        quota by using the Service Quotas service.</p>\n               </important>\n            </li>\n         </ul>\n         <p>If a call to <code>PutLogEvents</code> returns \"UnrecognizedClientException\" the most\n      likely cause is a non-valid Amazon Web Services access key ID or secret key. </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutLogEventsRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>",
            "smithy.api#required": {}
          }
        },
        "logEvents": {
          "target": "com.amazonaws.cloudwatchlogs#InputLogEvents",
          "traits": {
            "smithy.api#documentation": "<p>The log events.</p>",
            "smithy.api#required": {}
          }
        },
        "sequenceToken": {
          "target": "com.amazonaws.cloudwatchlogs#SequenceToken",
          "traits": {
            "smithy.api#documentation": "<p>The sequence token obtained from the response of the previous <code>PutLogEvents</code>\n      call.</p>\n         <important>\n            <p>The <code>sequenceToken</code> parameter is now ignored in <code>PutLogEvents</code>\n      actions. <code>PutLogEvents</code>\n      actions are now accepted and never return <code>InvalidSequenceTokenException</code> or\n      <code>DataAlreadyAcceptedException</code> even if the sequence token is not valid.</p>\n         </important>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutLogEventsResponse": {
      "type": "structure",
      "members": {
        "nextSequenceToken": {
          "target": "com.amazonaws.cloudwatchlogs#SequenceToken",
          "traits": {
            "smithy.api#documentation": "<p>The next sequence token.</p>\n         <important>\n            <p>This field has been deprecated.</p>\n            <p>The sequence token is now ignored in <code>PutLogEvents</code>\n        actions. <code>PutLogEvents</code>\n        actions are always accepted even if the sequence token is not valid. You can use\n        parallel <code>PutLogEvents</code> actions on the same log stream and you do not need\n      to wait for the response of a previous <code>PutLogEvents</code> action to obtain \n      the <code>nextSequenceToken</code> value.</p>\n         </important>"
          }
        },
        "rejectedLogEventsInfo": {
          "target": "com.amazonaws.cloudwatchlogs#RejectedLogEventsInfo",
          "traits": {
            "smithy.api#documentation": "<p>The rejected events.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutMetricFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutMetricFilterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates a metric filter and associates it with the specified log group. With\n      metric filters, you can configure rules to extract metric data from log events ingested\n      through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>.</p>\n         <p>The maximum number of metric filters that can be associated with a log group is\n      100.</p>\n         <p>When you create a metric filter, you can also optionally assign a unit and dimensions\n    to the metric that is created.</p>\n         <important>\n            <p>Metrics extracted from log events are charged as custom metrics.\n      To prevent unexpected high charges, do not specify high-cardinality fields such as \n      <code>IPAddress</code> or <code>requestID</code> as dimensions. Each different value \n      found for \n      a dimension is treated as a separate metric and accrues charges as a separate custom metric.\n    </p>\n            <p>CloudWatch Logs might disable a metric filter if it generates 1,000 different name/value pairs for\n        your specified dimensions within one hour.</p>\n            <p>You can also set up a billing alarm to alert you if your charges are higher than \n        expected. For more information, \n        see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html\">\n          Creating a Billing Alarm to Monitor Your Estimated Amazon Web Services Charges</a>.\n      </p>\n         </important>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutMetricFilterRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the metric filter.</p>",
            "smithy.api#required": {}
          }
        },
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern",
          "traits": {
            "smithy.api#documentation": "<p>A filter pattern for extracting metric data out of ingested log events.</p>",
            "smithy.api#required": {}
          }
        },
        "metricTransformations": {
          "target": "com.amazonaws.cloudwatchlogs#MetricTransformations",
          "traits": {
            "smithy.api#documentation": "<p>A collection of information that defines how metric data gets emitted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutQueryDefinition": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutQueryDefinitionRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutQueryDefinitionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates a query definition for CloudWatch Logs Insights. For \n      more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html\">Analyzing Log Data with CloudWatch Logs Insights</a>.</p>\n         <p>To update a query definition, specify its <code>queryDefinitionId</code> in your request.\n      The values of <code>name</code>, <code>queryString</code>, and <code>logGroupNames</code> are\n      changed to the values that you specify in your update operation. No current values are\n      retained from the current query definition. For example, imagine updating a current query\n      definition that includes log groups. If you don't specify the <code>logGroupNames</code>\n      parameter in your update operation, the query definition changes to contain no log\n      groups.</p>\n         <p>You must have the <code>logs:PutQueryDefinition</code> permission to be able to perform\n    this operation.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutQueryDefinitionRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the query definition. If you are saving numerous query definitions, we\n      recommend that you name them. This way, you can find the ones you want by using the first part\n      of the name as a filter in the <code>queryDefinitionNamePrefix</code> parameter of <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "queryDefinitionId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>If you are updating a query definition, use this parameter to specify the ID of the query\n      definition that you want to update. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the IDs of your saved query\n      definitions.</p>\n         <p>If you are creating a query definition, do not specify this parameter. CloudWatch\n      generates a unique ID for the new query definition and include it in the response to this\n      operation.</p>"
          }
        },
        "logGroupNames": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupNames",
          "traits": {
            "smithy.api#documentation": "<p>Use this parameter to include specific log groups as part of your query definition.</p>\n         <p>If you are updating a query definition and you omit this parameter, then the updated\n      definition will contain no log groups.</p>"
          }
        },
        "queryString": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionString",
          "traits": {
            "smithy.api#documentation": "<p>The query string to use for this definition. \n      For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.cloudwatchlogs#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Used as an idempotency token, to avoid returning an exception if the service receives the same request twice because of a network\n    error.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutQueryDefinitionResponse": {
      "type": "structure",
      "members": {
        "queryDefinitionId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the query definition.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutResourcePolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutResourcePolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#PutResourcePolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates a resource policy allowing other Amazon Web Services services to put log events to\n      this account, such as Amazon Route 53. An account can have up to 10 resource policies per Amazon Web Services\n      Region.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutResourcePolicyRequest": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>Name of the new policy. This parameter is required.</p>"
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>Details of the new policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string.\n    This parameter is required.</p>\n         <p>The following example creates a resource policy enabling the Route 53 service to put\n      DNS query logs in to the specified log group. Replace <code>\"logArn\"</code> with the ARN of \n      your CloudWatch Logs resource, such as a log group or log stream.</p>\n         <p>CloudWatch Logs also supports <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourcearn\">aws:SourceArn</a>\n      and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-sourceaccount\">aws:SourceAccount</a>\ncondition context keys.</p>\n         <p>In the example resource policy, you would replace the value of <code>SourceArn</code> with\n      the resource making the call from Route 53 to CloudWatch Logs. You would also\n      replace the value of <code>SourceAccount</code> with the Amazon Web Services account ID making\n      that call.</p>\n         <p></p>\n         <p>\n            <code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n           \"Sid\": \"Route53LogsToCloudWatchLogs\",\n           \"Effect\": \"Allow\",\n           \"Principal\": {\n               \"Service\": [\n                   \"route53.amazonaws.com\"\n                ]\n            },\n           \"Action\": \"logs:PutLogEvents\",\n           \"Resource\": \"logArn\",\n           \"Condition\": {\n               \"ArnLike\": {\n                   \"aws:SourceArn\": \"myRoute53ResourceArn\"\n                },\n               \"StringEquals\": {\n                   \"aws:SourceAccount\": \"myAwsAccountId\"\n               }\n            }\n        }\n      ]\n}</code>\n         </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutResourcePolicyResponse": {
      "type": "structure",
      "members": {
        "resourcePolicy": {
          "target": "com.amazonaws.cloudwatchlogs#ResourcePolicy",
          "traits": {
            "smithy.api#documentation": "<p>The new policy.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutRetentionPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutRetentionPolicyRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Sets the retention of the specified log group. With a retention policy, you can\n      configure the number of days for which to retain log events in the specified log\n      group.</p>\n         <note>\n            <p>CloudWatch Logs doesn’t immediately delete log events when they reach their retention\n        setting. It typically takes up to 72 hours after that before log events are deleted, but in\n        rare situations might take longer.</p>\n            <p>To illustrate, imagine that you change a log group to have a longer retention setting\n        when it contains log events that are past the expiration date, but haven’t been deleted.\n        Those log events will take up to 72 hours to be deleted after the new retention date is\n        reached. To make sure that log data is deleted permanently, keep a log group at its lower\n        retention setting until 72 hours after the previous retention period ends. Alternatively,\n        wait to change the retention setting until you confirm that the earlier log events are\n        deleted. </p>\n            <p>When log events reach their retention setting they are marked for deletion. After\n        they are marked for deletion, they do not add to your archival storage costs anymore, even if \n        they are not actually deleted until later. These log events marked for deletion are also not \n        included when you use an API to retrieve the <code>storedBytes</code> value to see how many bytes a log group is storing.</p>\n         </note>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutRetentionPolicyRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "retentionInDays": {
          "target": "com.amazonaws.cloudwatchlogs#Days",
          "traits": {
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#PutSubscriptionFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#PutSubscriptionFilterRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#OperationAbortedException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates a subscription filter and associates it with the specified log\n      group. With subscription filters, you can subscribe to a real-time stream of log events\n      ingested through <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\">PutLogEvents</a>\n      and have them delivered to a specific destination. When log events are sent to the receiving\n      service, they are Base64 encoded and compressed with the GZIP format.</p>\n         <p>The following destinations are supported for subscription filters:</p>\n         <ul>\n            <li>\n               <p>An Amazon Kinesis data stream belonging to the same account as the subscription\n          filter, for same-account delivery.</p>\n            </li>\n            <li>\n               <p>A logical destination created with <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestination.html\">PutDestination</a> that belongs to a different account, for cross-account delivery.\n          We currently support Kinesis Data Streams and Kinesis Data Firehose as logical destinations.</p>\n            </li>\n            <li>\n               <p>An Amazon Kinesis Data Firehose delivery stream that belongs to the same account as\n          the subscription filter, for same-account delivery.</p>\n            </li>\n            <li>\n               <p>An Lambda function that belongs to the same account as the\n          subscription filter, for same-account delivery.</p>\n            </li>\n         </ul>\n         <p>Each log group can have up to two subscription filters associated with it. If you are\n      updating an existing filter, you must specify the correct name in <code>filterName</code>.\n      </p>\n         <p>To perform a <code>PutSubscriptionFilter</code> operation for any destination except a Lambda function, \n    you must also have the \n      <code>iam:PassRole</code> permission.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#PutSubscriptionFilterRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>A name for the subscription filter. If you are updating an existing filter, you must\n      specify the correct name in <code>filterName</code>. To find the name of the filter currently\n      associated with a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html\">DescribeSubscriptionFilters</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern",
          "traits": {
            "smithy.api#documentation": "<p>A filter pattern for subscribing to a filtered stream of log events.</p>",
            "smithy.api#required": {}
          }
        },
        "destinationArn": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the destination to deliver matching log events to. Currently, the supported\n      destinations are:</p>\n         <ul>\n            <li>\n               <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,\n          for same-account delivery.</p>\n            </li>\n            <li>\n               <p>A logical destination (specified using an ARN) belonging to a different account, \n          for cross-account delivery.</p>\n               <p>If you're setting up a cross-account subscription, the destination must have an IAM\n          policy associated with it. The IAM policy must allow the sender to send logs to the\n          destination. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html\">PutDestinationPolicy</a>.</p>\n            </li>\n            <li>\n               <p>A Kinesis Data Firehose delivery stream belonging to the same account as the\n          subscription filter, for same-account delivery.</p>\n            </li>\n            <li>\n               <p>A Lambda function belonging to the same account as the subscription filter,\n          for same-account delivery.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.cloudwatchlogs#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log\n      events to the destination stream. You don't need to provide the ARN when you are working with\n      a logical destination for cross-account delivery.</p>"
          }
        },
        "distribution": {
          "target": "com.amazonaws.cloudwatchlogs#Distribution",
          "traits": {
            "smithy.api#documentation": "<p>The method used to distribute log data to the destination. By default, log data is\n      grouped by log stream, but the grouping can be set to random for a more even distribution.\n      This property is only applicable when the destination is an Amazon Kinesis data stream. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryCharOffset": {
      "type": "integer"
    },
    "com.amazonaws.cloudwatchlogs#QueryCompileError": {
      "type": "structure",
      "members": {
        "location": {
          "target": "com.amazonaws.cloudwatchlogs#QueryCompileErrorLocation",
          "traits": {
            "smithy.api#documentation": "<p>Reserved.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message",
          "traits": {
            "smithy.api#documentation": "<p>Reserved.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Reserved.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryCompileErrorLocation": {
      "type": "structure",
      "members": {
        "startCharOffset": {
          "target": "com.amazonaws.cloudwatchlogs#QueryCharOffset",
          "traits": {
            "smithy.api#documentation": "<p>Reserved.</p>"
          }
        },
        "endCharOffset": {
          "target": "com.amazonaws.cloudwatchlogs#QueryCharOffset",
          "traits": {
            "smithy.api#documentation": "<p>Reserved.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Reserved.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryDefinition": {
      "type": "structure",
      "members": {
        "queryDefinitionId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query definition.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the query definition.</p>"
          }
        },
        "queryString": {
          "target": "com.amazonaws.cloudwatchlogs#QueryDefinitionString",
          "traits": {
            "smithy.api#documentation": "<p>The query string to use for this definition.\n      For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>"
          }
        },
        "lastModified": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date that the query definition was most recently modified.</p>"
          }
        },
        "logGroupNames": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupNames",
          "traits": {
            "smithy.api#documentation": "<p>If this query definition contains a list of log groups that it is limited to, that list appears here.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This structure contains details about a saved CloudWatch Logs Insights query definition.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryDefinitionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#QueryDefinition"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryDefinitionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryDefinitionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryInfo": {
      "type": "structure",
      "members": {
        "queryId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID number of this query.</p>"
          }
        },
        "queryString": {
          "target": "com.amazonaws.cloudwatchlogs#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The query string used in this query.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.cloudwatchlogs#QueryStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of this query. Possible values are <code>Cancelled</code>,\n      <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, and <code>Unknown</code>.</p>"
          }
        },
        "createTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that this query was created.</p>"
          }
        },
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group scanned by this query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about one CloudWatch Logs Insights query that matches the request in a <code>DescribeQueries</code> operation. </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryInfoList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#QueryInfo"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryListMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryResults": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#ResultRows"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryStatistics": {
      "type": "structure",
      "members": {
        "recordsMatched": {
          "target": "com.amazonaws.cloudwatchlogs#StatsValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The number of log events that matched the query string.</p>"
          }
        },
        "recordsScanned": {
          "target": "com.amazonaws.cloudwatchlogs#StatsValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The total number of log events scanned during the query.</p>"
          }
        },
        "bytesScanned": {
          "target": "com.amazonaws.cloudwatchlogs#StatsValue",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The total number of bytes in the log events scanned during the query.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains the number of log events scanned by the query, the number of log events that matched the \n      query criteria, and the total number of bytes in the log events that were scanned.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryStatus": {
      "type": "enum",
      "members": {
        "Scheduled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Scheduled"
          }
        },
        "Running": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Running"
          }
        },
        "Complete": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Complete"
          }
        },
        "Failed": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Failed"
          }
        },
        "Cancelled": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Cancelled"
          }
        },
        "Timeout": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Timeout"
          }
        },
        "Unknown": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Unknown"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#QueryString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10000
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#RejectedLogEventsInfo": {
      "type": "structure",
      "members": {
        "tooNewLogEventStartIndex": {
          "target": "com.amazonaws.cloudwatchlogs#LogEventIndex",
          "traits": {
            "smithy.api#documentation": "<p>The log events that are too new.</p>"
          }
        },
        "tooOldLogEventEndIndex": {
          "target": "com.amazonaws.cloudwatchlogs#LogEventIndex",
          "traits": {
            "smithy.api#documentation": "<p>The log events that are dated too far in the past.</p>"
          }
        },
        "expiredLogEventEndIndex": {
          "target": "com.amazonaws.cloudwatchlogs#LogEventIndex",
          "traits": {
            "smithy.api#documentation": "<p>The expired log events.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the rejected events.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResourceAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource already exists.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResourceIdentifier": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "^[\\w+=/:,.@\\-\\*]*$"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource does not exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResourcePolicies": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#ResourcePolicy"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResourcePolicy": {
      "type": "structure",
      "members": {
        "policyName": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the resource policy.</p>"
          }
        },
        "policyDocument": {
          "target": "com.amazonaws.cloudwatchlogs#PolicyDocument",
          "traits": {
            "smithy.api#documentation": "<p>The details of the policy.</p>"
          }
        },
        "lastUpdatedTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Timestamp showing when this policy was last updated, expressed as the number of\n      milliseconds after <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A policy enabling one or more entities to put logs to a log group in this account.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResultField": {
      "type": "structure",
      "members": {
        "field": {
          "target": "com.amazonaws.cloudwatchlogs#Field",
          "traits": {
            "smithy.api#documentation": "<p>The log event field.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.cloudwatchlogs#Value",
          "traits": {
            "smithy.api#documentation": "<p>The value of this field.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Contains one field from one log event returned by a CloudWatch Logs Insights query, along with the value of that field.</p>\n         <p>For more information about the fields that are \n      generated by CloudWatch logs, see \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported Logs and Discovered Fields</a>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#ResultRows": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#ResultField"
      }
    },
    "com.amazonaws.cloudwatchlogs#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#Scope": {
      "type": "enum",
      "members": {
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#SearchedLogStream": {
      "type": "structure",
      "members": {
        "logStreamName": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log stream.</p>"
          }
        },
        "searchedCompletely": {
          "target": "com.amazonaws.cloudwatchlogs#LogStreamSearchedCompletely",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether all the events in this log stream were searched.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the search status of a log stream.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#SearchedLogStreams": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#SearchedLogStream"
      }
    },
    "com.amazonaws.cloudwatchlogs#SequenceToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#ServiceUnavailableException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service cannot complete the request.</p>",
        "smithy.api#error": "server"
      }
    },
    "com.amazonaws.cloudwatchlogs#StandardUnit": {
      "type": "enum",
      "members": {
        "Seconds": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Seconds"
          }
        },
        "Microseconds": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Microseconds"
          }
        },
        "Milliseconds": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Milliseconds"
          }
        },
        "Bytes": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Bytes"
          }
        },
        "Kilobytes": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Kilobytes"
          }
        },
        "Megabytes": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Megabytes"
          }
        },
        "Gigabytes": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Gigabytes"
          }
        },
        "Terabytes": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Terabytes"
          }
        },
        "Bits": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Bits"
          }
        },
        "Kilobits": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Kilobits"
          }
        },
        "Megabits": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Megabits"
          }
        },
        "Gigabits": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Gigabits"
          }
        },
        "Terabits": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Terabits"
          }
        },
        "Percent": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Percent"
          }
        },
        "Count": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Count"
          }
        },
        "BytesSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Bytes/Second"
          }
        },
        "KilobytesSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Kilobytes/Second"
          }
        },
        "MegabytesSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Megabytes/Second"
          }
        },
        "GigabytesSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Gigabytes/Second"
          }
        },
        "TerabytesSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Terabytes/Second"
          }
        },
        "BitsSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Bits/Second"
          }
        },
        "KilobitsSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Kilobits/Second"
          }
        },
        "MegabitsSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Megabits/Second"
          }
        },
        "GigabitsSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Gigabits/Second"
          }
        },
        "TerabitsSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Terabits/Second"
          }
        },
        "CountSecond": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "Count/Second"
          }
        },
        "None": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "None"
          }
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#StartFromHead": {
      "type": "boolean"
    },
    "com.amazonaws.cloudwatchlogs#StartQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#StartQueryRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#StartQueryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#LimitExceededException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#MalformedQueryException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Schedules a query of a log group using CloudWatch Logs Insights. You specify the log group\n      and time range to query and the query string to use.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n         <p>After you run a query using <code>StartQuery</code>, the query results are stored by CloudWatch Logs. \n      You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetQueryResults.html\">GetQueryResults</a> to retrieve\n      the results of a query, using the <code>queryId</code> that <code>StartQuery</code> returns.\n    </p>\n         <p>If you have associated a KMS key with the query results in this account, \n    then \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_StartQuery.html\">StartQuery</a> uses that key to \n      encrypt the results when it stores them. If no key is associated with query results, the query results are \n    encrypted with the default CloudWatch Logs encryption method.</p>\n         <p>Queries time out after 60 minutes of runtime. If your queries are timing out, reduce the\n      time range being searched or partition your query into a number of queries.</p>\n         <p>If you are using CloudWatch cross-account observability, you can use this operation in a\n      monitoring account to start a query in a linked source account. For more information, see\n        <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html\">CloudWatch\n        cross-account observability</a>. For a cross-account <code>StartQuery</code> operation,\n      the query definition must be defined in the monitoring account.</p>\n         <p>You can have up to 30 concurrent CloudWatch Logs insights queries, including queries\n      that have been added to dashboards. </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#StartQueryRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The log group on which to perform the query.</p>\n         <note>\n            <p>A <code>StartQuery</code> operation must include exactly one of the following\n        parameters: <code>logGroupName</code>, <code>logGroupNames</code>, or\n          <code>logGroupIdentifiers</code>. </p>\n         </note>"
          }
        },
        "logGroupNames": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupNames",
          "traits": {
            "smithy.api#documentation": "<p>The list of log groups to be queried. You can include up to 50 log groups.</p>\n         <note>\n            <p>A <code>StartQuery</code> operation must include exactly one of the following\n        parameters: <code>logGroupName</code>, <code>logGroupNames</code>, or\n          <code>logGroupIdentifiers</code>. </p>\n         </note>"
          }
        },
        "logGroupIdentifiers": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupIdentifiers",
          "traits": {
            "smithy.api#documentation": "<p>The list of log groups to query. You can include up to 50 log groups.</p>\n         <p>You can specify them by the log group name or ARN. If a log group that you're querying is\n      in a source account and you're using a monitoring account, you must specify the ARN of the log\n      group here. The query definition must also be defined in the monitoring account.</p>\n         <p>If you specify an ARN, the ARN can't end with an asterisk (*).</p>\n         <p>A <code>StartQuery</code> operation must include exactly one of the following parameters:\n        <code>logGroupName</code>, <code>logGroupNames</code>, or <code>logGroupIdentifiers</code>. </p>"
          }
        },
        "startTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The beginning of the time range to query. The range is inclusive, so the specified start\n      time is included in the query. Specified as epoch time, the number of seconds since\n        <code>January 1, 1970, 00:00:00 UTC</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "endTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end of the time range to query. The range is inclusive, so the specified end time is\n      included in the query. Specified as epoch time, the number of seconds since <code>January 1,\n        1970, 00:00:00 UTC</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "queryString": {
          "target": "com.amazonaws.cloudwatchlogs#QueryString",
          "traits": {
            "smithy.api#documentation": "<p>The query string to use.\n      For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "limit": {
          "target": "com.amazonaws.cloudwatchlogs#EventsLimit",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of log events to return in the query. If the query string uses the <code>fields</code> command,\n    only the specified fields and their values are returned. The default is 1000.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#StartQueryResponse": {
      "type": "structure",
      "members": {
        "queryId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The unique ID of the query. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#StatsValue": {
      "type": "double",
      "traits": {
        "smithy.api#default": 0
      }
    },
    "com.amazonaws.cloudwatchlogs#StopQuery": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#StopQueryRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#StopQueryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Stops a CloudWatch Logs Insights query that is in progress. If the query has already ended, the operation\n    returns an error indicating that the specified query is not running.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#StopQueryRequest": {
      "type": "structure",
      "members": {
        "queryId": {
          "target": "com.amazonaws.cloudwatchlogs#QueryId",
          "traits": {
            "smithy.api#documentation": "<p>The ID number of the query to stop. To find this ID number, use\n        <code>DescribeQueries</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#StopQueryResponse": {
      "type": "structure",
      "members": {
        "success": {
          "target": "com.amazonaws.cloudwatchlogs#Success",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>This is true if the query was stopped by the <code>StopQuery</code> operation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#StoredBytes": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#SubscriptionFilter": {
      "type": "structure",
      "members": {
        "filterName": {
          "target": "com.amazonaws.cloudwatchlogs#FilterName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the subscription filter.</p>"
          }
        },
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>"
          }
        },
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern"
        },
        "destinationArn": {
          "target": "com.amazonaws.cloudwatchlogs#DestinationArn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the destination.</p>"
          }
        },
        "roleArn": {
          "target": "com.amazonaws.cloudwatchlogs#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p></p>"
          }
        },
        "distribution": {
          "target": "com.amazonaws.cloudwatchlogs#Distribution"
        },
        "creationTime": {
          "target": "com.amazonaws.cloudwatchlogs#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The creation time of the subscription filter, expressed as the number of milliseconds\n      after <code>Jan 1, 1970 00:00:00 UTC</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a subscription filter.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#SubscriptionFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#SubscriptionFilter"
      }
    },
    "com.amazonaws.cloudwatchlogs#Success": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.cloudwatchlogs#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$"
      }
    },
    "com.amazonaws.cloudwatchlogs#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#TagLogGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#TagLogGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API TagResource"
        },
        "smithy.api#documentation": "<important>\n            <p>The TagLogGroup operation is on the path to deprecation. We recommend that you use \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html\">TagResource</a> instead.</p>\n         </important>\n         <p>Adds or updates the specified tags for the specified log group.</p>\n         <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html\">ListTagsForResource</a>.\n      To remove tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html\">UntagResource</a>.</p>\n         <p>For more information about tags, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html#log-group-tagging\">Tag Log Groups in Amazon CloudWatch Logs</a>\n      in the <i>Amazon CloudWatch Logs User Guide</i>.</p>\n         <p>CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified tags to \n      log groups using the <code>aws:Resource/<i>key-name</i>\n            </code> or <code>aws:TagKeys</code> condition keys. \n      For more information about using tags to control access, see \n      <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html\">Controlling access to Amazon Web Services resources using tags</a>.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#TagLogGroupRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The key-value pairs to use for the tags.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API model TagResourceRequest"
        },
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#TagResourceRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource. \n        Currently, the only CloudWatch Logs resources that \n        can be tagged are log groups and destinations. </p>\n         <p>Tags can help you organize and categorize your resources. You can also use them to scope user\n        permissions by granting a user\n        permission to access or change only resources with certain tag values.</p>\n         <p>Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.</p>\n         <p>You can use the <code>TagResource</code> action with a resource that already has tags. If you specify a new tag key for the alarm, \n        this tag is appended to the list of tags associated\n        with the alarm. If you specify a tag key that is already associated with the alarm, the new tag value that you specify replaces\n        the previous value for that tag.</p>\n         <p>You can associate as many as 50 tags with a CloudWatch Logs resource.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.cloudwatchlogs#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the  resource that you're adding tags to.</p>\n         <p>The ARN format of a log group is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>\n            </code>\n         </p>\n         <p>The ARN format of a destination is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>\n            </code>\n         </p>\n         <p>For more information about ARN format, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html\">CloudWatch Logs \n      resources and operations</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The list of key-value pairs to associate with the resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"
      }
    },
    "com.amazonaws.cloudwatchlogs#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.cloudwatchlogs#TagKey"
      },
      "value": {
        "target": "com.amazonaws.cloudwatchlogs#TagValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#TargetArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#TestEventMessages": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.cloudwatchlogs#EventMessage"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#TestMetricFilter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#TestMetricFilterRequest"
      },
      "output": {
        "target": "com.amazonaws.cloudwatchlogs#TestMetricFilterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Tests the filter pattern of a metric filter against a sample of log event messages. You\n      can use this operation to validate the correctness of a metric filter pattern.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#TestMetricFilterRequest": {
      "type": "structure",
      "members": {
        "filterPattern": {
          "target": "com.amazonaws.cloudwatchlogs#FilterPattern",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "logEventMessages": {
          "target": "com.amazonaws.cloudwatchlogs#TestEventMessages",
          "traits": {
            "smithy.api#documentation": "<p>The log event messages to test.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#TestMetricFilterResponse": {
      "type": "structure",
      "members": {
        "matches": {
          "target": "com.amazonaws.cloudwatchlogs#MetricFilterMatches",
          "traits": {
            "smithy.api#documentation": "<p>The matched events.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#Timestamp": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.cloudwatchlogs#Token": {
      "type": "string"
    },
    "com.amazonaws.cloudwatchlogs#TooManyTagsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        },
        "resourceName": {
          "target": "com.amazonaws.cloudwatchlogs#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A resource can have no more than 50 tags.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.cloudwatchlogs#Unmask": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.cloudwatchlogs#UnrecognizedClientException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.cloudwatchlogs#Message"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The most likely cause is an Amazon Web Services access key ID or secret key that's not\n      valid.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.cloudwatchlogs#UntagLogGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#UntagLogGroupRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API UntagResource"
        },
        "smithy.api#documentation": "<important>\n            <p>The UntagLogGroup operation is on the path to deprecation. We recommend that you use \n      <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_UntagResource.html\">UntagResource</a> instead.</p>\n         </important>\n         <p>Removes the specified tags from the specified log group.</p>\n         <p>To list the tags for a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_ListTagsForResource.html\">ListTagsForResource</a>.\n      To add tags, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_TagResource.html\">TagResource</a>.</p>\n         <p>CloudWatch Logs doesn’t support IAM policies that prevent users from assigning specified tags to \n      log groups using the <code>aws:Resource/<i>key-name</i>\n            </code> or <code>aws:TagKeys</code> condition keys. \n     </p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#UntagLogGroupRequest": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.cloudwatchlogs#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.cloudwatchlogs#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tag keys. The corresponding tags are removed from the log group.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#deprecated": {
          "message": "Please use the generic tagging API model UntagResourceRequest"
        },
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.cloudwatchlogs#UntagResourceRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.cloudwatchlogs#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.cloudwatchlogs#ServiceUnavailableException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes one or more tags from the specified resource.</p>"
      }
    },
    "com.amazonaws.cloudwatchlogs#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.cloudwatchlogs#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the CloudWatch Logs resource that you're removing tags from.</p>\n         <p>The ARN format of a log group is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:log-group:<i>log-group-name</i>\n            </code>\n         </p>\n         <p>The ARN format of a destination is \n      <code>arn:aws:logs:<i>Region</i>:<i>account-id</i>:destination:<i>destination-name</i>\n            </code>\n         </p>\n         <p>For more information about ARN format, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html\">CloudWatch Logs \n      resources and operations</a>.</p>",
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.cloudwatchlogs#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>The list of tag keys to remove from the resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.cloudwatchlogs#Value": {
      "type": "string"
    }
  }
}
