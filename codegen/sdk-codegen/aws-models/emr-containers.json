{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.emrcontainers#ACMCertArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 44,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):acm:.+:(\\d{12}):certificate/.+$"
      }
    },
    "com.amazonaws.emrcontainers#AwsChicagoWebService": {
      "type": "service",
      "version": "2020-10-01",
      "operations": [
        {
          "target": "com.amazonaws.emrcontainers#CancelJobRun"
        },
        {
          "target": "com.amazonaws.emrcontainers#CreateJobTemplate"
        },
        {
          "target": "com.amazonaws.emrcontainers#CreateManagedEndpoint"
        },
        {
          "target": "com.amazonaws.emrcontainers#CreateVirtualCluster"
        },
        {
          "target": "com.amazonaws.emrcontainers#DeleteJobTemplate"
        },
        {
          "target": "com.amazonaws.emrcontainers#DeleteManagedEndpoint"
        },
        {
          "target": "com.amazonaws.emrcontainers#DeleteVirtualCluster"
        },
        {
          "target": "com.amazonaws.emrcontainers#DescribeJobRun"
        },
        {
          "target": "com.amazonaws.emrcontainers#DescribeJobTemplate"
        },
        {
          "target": "com.amazonaws.emrcontainers#DescribeManagedEndpoint"
        },
        {
          "target": "com.amazonaws.emrcontainers#DescribeVirtualCluster"
        },
        {
          "target": "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentials"
        },
        {
          "target": "com.amazonaws.emrcontainers#ListJobRuns"
        },
        {
          "target": "com.amazonaws.emrcontainers#ListJobTemplates"
        },
        {
          "target": "com.amazonaws.emrcontainers#ListManagedEndpoints"
        },
        {
          "target": "com.amazonaws.emrcontainers#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.emrcontainers#ListVirtualClusters"
        },
        {
          "target": "com.amazonaws.emrcontainers#StartJobRun"
        },
        {
          "target": "com.amazonaws.emrcontainers#TagResource"
        },
        {
          "target": "com.amazonaws.emrcontainers#UntagResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "EMR containers",
          "arnNamespace": "emr-containers",
          "cloudFormationName": "EMRcontainers",
          "cloudTrailEventSource": "emrcontainers.amazonaws.com",
          "endpointPrefix": "emr-containers"
        },
        "aws.auth#sigv4": {
          "name": "emr-containers"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>Amazon EMR on EKS provides a deployment option for Amazon EMR that allows\n         you to run open-source big data frameworks on Amazon Elastic Kubernetes Service (Amazon EKS).\n         With this deployment option, you can focus on running analytics workloads while Amazon EMR on EKS builds, configures, and manages containers for open-source applications.\n         For more information about Amazon EMR on EKS concepts and tasks, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/emr-eks.html\">What is\n            shared id=\"EMR-EKS\"/></a>.</p>\n         <p>\n            <i>Amazon EMR containers</i> is the API name for Amazon EMR on EKS. The <code>emr-containers</code> prefix is used in the following\n         scenarios: </p>\n         <ul>\n            <li>\n               <p>It is the prefix in the CLI commands for Amazon EMR on EKS. For example,\n                  <code>aws emr-containers start-job-run</code>.</p>\n            </li>\n            <li>\n               <p>It is the prefix before IAM policy actions for Amazon EMR on EKS. For\n               example, <code>\"Action\": [ \"emr-containers:StartJobRun\"]</code>. For more\n               information, see <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions\">Policy actions for Amazon EMR on EKS</a>.</p>\n            </li>\n            <li>\n               <p>It is the prefix used in Amazon EMR on EKS service endpoints. For example,\n                  <code>emr-containers.us-east-2.amazonaws.com</code>. For more information, see\n                  <a href=\"https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/service-quotas.html#service-endpoints\">Amazon EMR on EKSService Endpoints</a>.</p>\n            </li>\n         </ul>",
        "smithy.api#title": "Amazon EMR Containers",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://emr-containers-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://emr-containers-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://emr-containers.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://emr-containers.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://emr-containers.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.emrcontainers#Base64Encoded": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 5000
        },
        "smithy.api#pattern": "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
      }
    },
    "com.amazonaws.emrcontainers#CancelJobRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#CancelJobRunRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#CancelJobRunResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or\n         SparkSQL query, that you submit to Amazon EMR on EKS.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/virtualclusters/{virtualClusterId}/jobruns/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#CancelJobRunRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job run to cancel.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster for which the job run will be canceled.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#CancelJobRunResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the ID of the cancelled job run.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the virtual cluster ID for which the job run is cancelled.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#Certificate": {
      "type": "structure",
      "members": {
        "certificateArn": {
          "target": "com.amazonaws.emrcontainers#ACMCertArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the certificate generated for managed endpoint.</p>"
          }
        },
        "certificateData": {
          "target": "com.amazonaws.emrcontainers#Base64Encoded",
          "traits": {
            "smithy.api#documentation": "<p>The base64 encoded PEM certificate data generated for managed endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The entity representing certificate data generated for managed endpoint.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#CloudWatchMonitoringConfiguration": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.emrcontainers#LogGroupName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the log group for log publishing.</p>",
            "smithy.api#required": {}
          }
        },
        "logStreamNamePrefix": {
          "target": "com.amazonaws.emrcontainers#String256",
          "traits": {
            "smithy.api#documentation": "<p>The specified name prefix for log streams.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration for CloudWatch monitoring. You can configure your jobs to send log\n         information to CloudWatch Logs.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ClusterId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "^[0-9A-Za-z][A-Za-z0-9\\-_]*$"
      }
    },
    "com.amazonaws.emrcontainers#Configuration": {
      "type": "structure",
      "members": {
        "classification": {
          "target": "com.amazonaws.emrcontainers#String1024",
          "traits": {
            "smithy.api#documentation": "<p>The classification within a configuration.</p>",
            "smithy.api#required": {}
          }
        },
        "properties": {
          "target": "com.amazonaws.emrcontainers#SensitivePropertiesMap",
          "traits": {
            "smithy.api#documentation": "<p>A set of properties specified within a configuration classification.</p>"
          }
        },
        "configurations": {
          "target": "com.amazonaws.emrcontainers#ConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>A list of additional configurations to apply within a configuration object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration specification to be used when provisioning virtual clusters, which can\n         include configurations for applications and software bundled with Amazon EMR on EKS. A\n         configuration consists of a classification, properties, and optional nested configurations.\n         A classification refers to an application-specific configuration file. Properties are the\n         settings you want to change in that file.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ConfigurationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#Configuration"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.emrcontainers#ConfigurationOverrides": {
      "type": "structure",
      "members": {
        "applicationConfiguration": {
          "target": "com.amazonaws.emrcontainers#ConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p>The configurations for the application running by the job run. </p>"
          }
        },
        "monitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#MonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configurations for monitoring.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration specification to be used to override existing configurations.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ContainerInfo": {
      "type": "union",
      "members": {
        "eksInfo": {
          "target": "com.amazonaws.emrcontainers#EksInfo",
          "traits": {
            "smithy.api#documentation": "<p>The information about the Amazon EKS cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The information about the container used for a job run or a managed endpoint.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ContainerLogRotationConfiguration": {
      "type": "structure",
      "members": {
        "rotationSize": {
          "target": "com.amazonaws.emrcontainers#RotationSize",
          "traits": {
            "smithy.api#documentation": "<p>The file size at which to rotate logs. Minimum of 2KB, Maximum of 2GB.</p>",
            "smithy.api#required": {}
          }
        },
        "maxFilesToKeep": {
          "target": "com.amazonaws.emrcontainers#MaxFilesToKeep",
          "traits": {
            "smithy.api#documentation": "<p>The number of files to keep in container after rotation.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The settings for container log rotation.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ContainerProvider": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.emrcontainers#ContainerProviderType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the container provider. Amazon EKS is the only supported type as of\n         now.</p>",
            "smithy.api#required": {}
          }
        },
        "id": {
          "target": "com.amazonaws.emrcontainers#ClusterId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the container cluster.</p>",
            "smithy.api#required": {}
          }
        },
        "info": {
          "target": "com.amazonaws.emrcontainers#ContainerInfo",
          "traits": {
            "smithy.api#documentation": "<p>The information about the container cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The information about the container provider.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ContainerProviderType": {
      "type": "enum",
      "members": {
        "EKS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EKS"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#CreateJobTemplate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#CreateJobTemplateRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#CreateJobTemplateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a job template. Job template stores values of StartJobRun API request in a\n         template and can be used to start a job run. Job template allows two use cases: avoid\n         repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun\n         API request.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/jobtemplates",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#CreateJobTemplateRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The specified name of the job template.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client token of the job template.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "jobTemplateData": {
          "target": "com.amazonaws.emrcontainers#JobTemplateData",
          "traits": {
            "smithy.api#documentation": "<p>The job template data which holds values of StartJobRun API request.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags that are associated with the job template.</p>"
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.emrcontainers#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The KMS key ARN used to encrypt the job template.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#CreateJobTemplateResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output display the created job template ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the name of the created job template.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#JobTemplateArn",
          "traits": {
            "smithy.api#documentation": "<p>This output display the ARN of the created job template.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the date and time when the job template was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#CreateManagedEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#CreateManagedEndpointRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#CreateManagedEndpointResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a managed endpoint. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can\n         communicate with your virtual cluster.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/virtualclusters/{virtualClusterId}/endpoints",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#CreateManagedEndpointRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the managed endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster for which a managed endpoint is created.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "type": {
          "target": "com.amazonaws.emrcontainers#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the managed endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "releaseLabel": {
          "target": "com.amazonaws.emrcontainers#ReleaseLabel",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon EMR release version.</p>",
            "smithy.api#required": {}
          }
        },
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the execution role.</p>",
            "smithy.api#required": {}
          }
        },
        "certificateArn": {
          "target": "com.amazonaws.emrcontainers#ACMCertArn",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Customer provided certificate-arn is deprecated and would be removed in future."
            },
            "smithy.api#documentation": "<p>The certificate ARN provided by users for the managed endpoint. This field is under\n         deprecation and will be removed in future releases.</p>"
          }
        },
        "configurationOverrides": {
          "target": "com.amazonaws.emrcontainers#ConfigurationOverrides",
          "traits": {
            "smithy.api#documentation": "<p>The configuration settings that will be used to override existing configurations.</p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client idempotency token for this create call.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags of the managed endpoint. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#CreateManagedEndpointResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the ID of the managed endpoint.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the name of the managed endpoint.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#EndpointArn",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the ARN of the managed endpoint.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output contains the ID of the virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#CreateVirtualCluster": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#CreateVirtualClusterRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#CreateVirtualClusterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any\n         additional resource in your system. A single virtual cluster maps to a single Kubernetes\n         namespace. Given this relationship, you can model virtual clusters the same way you model\n         Kubernetes namespaces to meet your requirements.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/virtualclusters",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#CreateVirtualClusterRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The specified name of the virtual cluster.</p>",
            "smithy.api#required": {}
          }
        },
        "containerProvider": {
          "target": "com.amazonaws.emrcontainers#ContainerProvider",
          "traits": {
            "smithy.api#documentation": "<p>The container provider of the virtual cluster.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client token of the virtual cluster.</p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to the virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#CreateVirtualClusterResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output contains the virtual cluster ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>This output contains the name of the virtual cluster.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#VirtualClusterArn",
          "traits": {
            "smithy.api#documentation": "<p>This output contains the ARN of virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#CredentialType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^.*\\S.*$"
      }
    },
    "com.amazonaws.emrcontainers#Credentials": {
      "type": "union",
      "members": {
        "token": {
          "target": "com.amazonaws.emrcontainers#Token",
          "traits": {
            "smithy.api#documentation": "<p>The actual session token being returned.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The structure containing the session token being returned.</p>"
      }
    },
    "com.amazonaws.emrcontainers#Date": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.emrcontainers#DeleteJobTemplate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DeleteJobTemplateRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DeleteJobTemplateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a job template. Job template stores values of StartJobRun API request in a\n         template and can be used to start a job run. Job template allows two use cases: avoid\n         repeating recurring StartJobRun API request values, enforcing certain values in StartJobRun\n         API request.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/jobtemplates/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DeleteJobTemplateRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job template that will be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DeleteJobTemplateResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output contains the ID of the job template that was deleted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DeleteManagedEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DeleteManagedEndpointRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DeleteManagedEndpointResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a managed endpoint. A managed endpoint is a gateway that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can\n         communicate with your virtual cluster.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/virtualclusters/{virtualClusterId}/endpoints/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DeleteManagedEndpointRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the managed endpoint.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the endpoint's virtual cluster.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DeleteManagedEndpointResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output displays the ID of the managed endpoint.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The output displays the ID of the endpoint's virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DeleteVirtualCluster": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DeleteVirtualClusterRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DeleteVirtualClusterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a virtual cluster. Virtual cluster is a managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual clusters. They do not consume any\n         additional resource in your system. A single virtual cluster maps to a single Kubernetes\n         namespace. Given this relationship, you can model virtual clusters the same way you model\n         Kubernetes namespaces to meet your requirements.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/virtualclusters/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DeleteVirtualClusterRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster that will be deleted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DeleteVirtualClusterResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output contains the ID of the virtual cluster that will be deleted. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DescribeJobRunRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DescribeJobRunResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays detailed information about a job run. A job run is a unit of work, such as a\n         Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters/{virtualClusterId}/jobruns/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobRunRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job run request. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster for which the job run is submitted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobRunResponse": {
      "type": "structure",
      "members": {
        "jobRun": {
          "target": "com.amazonaws.emrcontainers#JobRun",
          "traits": {
            "smithy.api#documentation": "<p>The output displays information about a job run.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobTemplate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DescribeJobTemplateRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DescribeJobTemplateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays detailed information about a specified job template. Job template stores values\n         of StartJobRun API request in a template and can be used to start a job run. Job template\n         allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing\n         certain values in StartJobRun API request.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/jobtemplates/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobTemplateRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job template that will be described.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeJobTemplateResponse": {
      "type": "structure",
      "members": {
        "jobTemplate": {
          "target": "com.amazonaws.emrcontainers#JobTemplate",
          "traits": {
            "smithy.api#documentation": "<p>This output displays information about the specified job template.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeManagedEndpoint": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DescribeManagedEndpointRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DescribeManagedEndpointResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays detailed information about a managed endpoint. A managed endpoint is a gateway\n         that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters/{virtualClusterId}/endpoints/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DescribeManagedEndpointRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output displays ID of the managed endpoint.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the endpoint's virtual cluster.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeManagedEndpointResponse": {
      "type": "structure",
      "members": {
        "endpoint": {
          "target": "com.amazonaws.emrcontainers#Endpoint",
          "traits": {
            "smithy.api#documentation": "<p>This output displays information about a managed endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeVirtualCluster": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#DescribeVirtualClusterRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#DescribeVirtualClusterResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Displays detailed information about a specified virtual cluster. Virtual cluster is a\n         managed entity on Amazon EMR on EKS. You can create, describe, list and delete virtual\n         clusters. They do not consume any additional resource in your system. A single virtual\n         cluster maps to a single Kubernetes namespace. Given this relationship, you can model\n         virtual clusters the same way you model Kubernetes namespaces to meet your\n         requirements.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters/{id}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#DescribeVirtualClusterRequest": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster that will be described.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#DescribeVirtualClusterResponse": {
      "type": "structure",
      "members": {
        "virtualCluster": {
          "target": "com.amazonaws.emrcontainers#VirtualCluster",
          "traits": {
            "smithy.api#documentation": "<p>This output displays information about the specified virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#EksInfo": {
      "type": "structure",
      "members": {
        "namespace": {
          "target": "com.amazonaws.emrcontainers#KubernetesNamespace",
          "traits": {
            "smithy.api#documentation": "<p>The namespaces of the Amazon EKS cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The information about the Amazon EKS cluster.</p>"
      }
    },
    "com.amazonaws.emrcontainers#Endpoint": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the endpoint.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the endpoint.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#EndpointArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the endpoint.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the endpoint's virtual cluster.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.emrcontainers#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the endpoint.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.emrcontainers#EndpointState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the endpoint.</p>"
          }
        },
        "releaseLabel": {
          "target": "com.amazonaws.emrcontainers#ReleaseLabel",
          "traits": {
            "smithy.api#documentation": "<p>The EMR release version to be used for the endpoint.</p>"
          }
        },
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The execution role ARN of the endpoint.</p>"
          }
        },
        "certificateArn": {
          "target": "com.amazonaws.emrcontainers#ACMCertArn",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Customer provided certificate-arn is deprecated and would be removed in future."
            },
            "smithy.api#documentation": "<p>The certificate ARN of the endpoint. This field is under deprecation and will be removed\n         in future.</p>"
          }
        },
        "certificateAuthority": {
          "target": "com.amazonaws.emrcontainers#Certificate",
          "traits": {
            "smithy.api#documentation": "<p>The certificate generated by emr control plane on customer behalf to secure the managed\n         endpoint.</p>"
          }
        },
        "configurationOverrides": {
          "target": "com.amazonaws.emrcontainers#ConfigurationOverrides",
          "traits": {
            "smithy.api#documentation": "<p>The configuration settings that are used to override existing configurations for\n         endpoints.</p>"
          }
        },
        "serverUrl": {
          "target": "com.amazonaws.emrcontainers#UriString",
          "traits": {
            "smithy.api#documentation": "<p>The server URL of the endpoint.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the endpoint was created.</p>"
          }
        },
        "securityGroup": {
          "target": "com.amazonaws.emrcontainers#String256",
          "traits": {
            "smithy.api#documentation": "<p>The security group configuration of the endpoint. </p>"
          }
        },
        "subnetIds": {
          "target": "com.amazonaws.emrcontainers#SubnetIds",
          "traits": {
            "smithy.api#documentation": "<p>The subnet IDs of the endpoint. </p>"
          }
        },
        "stateDetails": {
          "target": "com.amazonaws.emrcontainers#String256",
          "traits": {
            "smithy.api#documentation": "<p> Additional details of the endpoint state. </p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.emrcontainers#FailureReason",
          "traits": {
            "smithy.api#documentation": "<p> The reasons why the endpoint has failed. </p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags of the endpoint. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This entity represents the endpoint that is managed by Amazon EMR on EKS.</p>"
      }
    },
    "com.amazonaws.emrcontainers#EndpointArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 60,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\\d{12}):\\/virtualclusters\\/[0-9a-zA-Z]+\\/endpoints\\/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.emrcontainers#EndpointState": {
      "type": "enum",
      "members": {
        "CREATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATING"
          }
        },
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "TERMINATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TERMINATING"
          }
        },
        "TERMINATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TERMINATED"
          }
        },
        "TERMINATED_WITH_ERRORS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TERMINATED_WITH_ERRORS"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#EndpointStates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#EndpointState"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.emrcontainers#EndpointType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#EndpointTypes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#EndpointType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.emrcontainers#Endpoints": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#Endpoint"
      }
    },
    "com.amazonaws.emrcontainers#EntryPointArgument": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10280
        },
        "smithy.api#pattern": "\\S",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#EntryPointArguments": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#EntryPointArgument"
      }
    },
    "com.amazonaws.emrcontainers#EntryPointPath": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "\\S",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#FailureReason": {
      "type": "enum",
      "members": {
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "USER_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "USER_ERROR"
          }
        },
        "VALIDATION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_ERROR"
          }
        },
        "CLUSTER_UNAVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CLUSTER_UNAVAILABLE"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentials": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentialsRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentialsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#RequestThrottledException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Generate a session token to connect to a managed endpoint. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/virtualclusters/{virtualClusterIdentifier}/endpoints/{endpointIdentifier}/credentials",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentialsRequest": {
      "type": "structure",
      "members": {
        "endpointIdentifier": {
          "target": "com.amazonaws.emrcontainers#String2048",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the managed endpoint for which the request is submitted. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "virtualClusterIdentifier": {
          "target": "com.amazonaws.emrcontainers#String2048",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the Virtual Cluster which the Managed Endpoint belongs to. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM Execution Role ARN that will be used by the job run. </p>",
            "smithy.api#required": {}
          }
        },
        "credentialType": {
          "target": "com.amazonaws.emrcontainers#CredentialType",
          "traits": {
            "smithy.api#documentation": "<p>Type of the token requested. Currently supported and default value of this field is\n         “TOKEN.”</p>",
            "smithy.api#required": {}
          }
        },
        "durationInSeconds": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>Duration in seconds for which the session token is valid. The default duration is 15\n         minutes and the maximum is 12 hours.</p>"
          }
        },
        "logContext": {
          "target": "com.amazonaws.emrcontainers#LogContext",
          "traits": {
            "smithy.api#documentation": "<p>String identifier used to separate sections of the execution logs uploaded to S3.</p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client idempotency token of the job run request.</p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#GetManagedEndpointSessionCredentialsResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the session token returned.</p>"
          }
        },
        "credentials": {
          "target": "com.amazonaws.emrcontainers#Credentials",
          "traits": {
            "smithy.api#documentation": "<p>The structure containing the session credentials.</p>"
          }
        },
        "expiresAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the session token will expire.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#IAMRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)$"
      }
    },
    "com.amazonaws.emrcontainers#InternalServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.emrcontainers#String1024"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This is an internal server exception.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.emrcontainers#JavaInteger": {
      "type": "integer"
    },
    "com.amazonaws.emrcontainers#JobArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 60,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\\d{12}):\\/virtualclusters\\/[0-9a-zA-Z]+\\/jobruns\\/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.emrcontainers#JobDriver": {
      "type": "structure",
      "members": {
        "sparkSubmitJobDriver": {
          "target": "com.amazonaws.emrcontainers#SparkSubmitJobDriver",
          "traits": {
            "smithy.api#documentation": "<p>The job driver parameters specified for spark submit.</p>"
          }
        },
        "sparkSqlJobDriver": {
          "target": "com.amazonaws.emrcontainers#SparkSqlJobDriver",
          "traits": {
            "smithy.api#documentation": "<p>The job driver for job type.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specify the driver that the job runs on. Exactly one of the two available job drivers is\n         required, either sparkSqlJobDriver or sparkSubmitJobDriver.</p>"
      }
    },
    "com.amazonaws.emrcontainers#JobRun": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job run.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the job run.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job run's virtual cluster.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of job run.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.emrcontainers#JobRunState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the job run. </p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client token used to start a job run.</p>"
          }
        },
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The execution role ARN of the job run.</p>"
          }
        },
        "releaseLabel": {
          "target": "com.amazonaws.emrcontainers#ReleaseLabel",
          "traits": {
            "smithy.api#documentation": "<p>The release version of Amazon EMR.</p>"
          }
        },
        "configurationOverrides": {
          "target": "com.amazonaws.emrcontainers#ConfigurationOverrides",
          "traits": {
            "smithy.api#documentation": "<p>The configuration settings that are used to override default configuration.</p>"
          }
        },
        "jobDriver": {
          "target": "com.amazonaws.emrcontainers#JobDriver",
          "traits": {
            "smithy.api#documentation": "<p>Parameters of job driver for the job run.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the job run was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.emrcontainers#RequestIdentityUserArn",
          "traits": {
            "smithy.api#documentation": "<p>The user who created the job run.</p>"
          }
        },
        "finishedAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the job run has finished.</p>"
          }
        },
        "stateDetails": {
          "target": "com.amazonaws.emrcontainers#String256",
          "traits": {
            "smithy.api#documentation": "<p>Additional details of the job run state.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.emrcontainers#FailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reasons why the job run has failed.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The assigned tags of the job run.</p>"
          }
        },
        "retryPolicyConfiguration": {
          "target": "com.amazonaws.emrcontainers#RetryPolicyConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the retry policy that the job runs on.</p>"
          }
        },
        "retryPolicyExecution": {
          "target": "com.amazonaws.emrcontainers#RetryPolicyExecution",
          "traits": {
            "smithy.api#documentation": "<p>The current status of the retry policy executed on the job.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This entity describes a job run. A job run is a unit of work, such as a Spark jar,\n         PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS. </p>"
      }
    },
    "com.amazonaws.emrcontainers#JobRunState": {
      "type": "enum",
      "members": {
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "SUBMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUBMITTED"
          }
        },
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        },
        "FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAILED"
          }
        },
        "CANCELLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCELLED"
          }
        },
        "CANCEL_PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CANCEL_PENDING"
          }
        },
        "COMPLETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPLETED"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#JobRunStates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#JobRunState"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.emrcontainers#JobRuns": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#JobRun"
      }
    },
    "com.amazonaws.emrcontainers#JobTemplate": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the job template.</p>"
          }
        },
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the job template.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#JobTemplateArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the job template.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p> The date and time when the job template was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.emrcontainers#RequestIdentityUserArn",
          "traits": {
            "smithy.api#documentation": "<p> The user who created the job template.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to the job template.</p>"
          }
        },
        "jobTemplateData": {
          "target": "com.amazonaws.emrcontainers#JobTemplateData",
          "traits": {
            "smithy.api#documentation": "<p>The job template data which holds values of StartJobRun API request.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.emrcontainers#KmsKeyArn",
          "traits": {
            "smithy.api#documentation": "<p> The KMS key ARN used to encrypt the job template.</p>"
          }
        },
        "decryptionError": {
          "target": "com.amazonaws.emrcontainers#String2048",
          "traits": {
            "smithy.api#documentation": "<p>The error message in case the decryption of job template fails.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This entity describes a job template. Job template stores values of StartJobRun API\n         request in a template and can be used to start a job run. Job template allows two use\n         cases: avoid repeating recurring StartJobRun API request values, enforcing certain values\n         in StartJobRun API request.</p>"
      }
    },
    "com.amazonaws.emrcontainers#JobTemplateArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 60,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\\d{12}):\\/jobtemplates\\/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.emrcontainers#JobTemplateData": {
      "type": "structure",
      "members": {
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#ParametricIAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The execution role ARN of the job run.</p>",
            "smithy.api#required": {}
          }
        },
        "releaseLabel": {
          "target": "com.amazonaws.emrcontainers#ParametricReleaseLabel",
          "traits": {
            "smithy.api#documentation": "<p> The release version of Amazon EMR.</p>",
            "smithy.api#required": {}
          }
        },
        "configurationOverrides": {
          "target": "com.amazonaws.emrcontainers#ParametricConfigurationOverrides",
          "traits": {
            "smithy.api#documentation": "<p> The configuration settings that are used to override defaults configuration.</p>"
          }
        },
        "jobDriver": {
          "target": "com.amazonaws.emrcontainers#JobDriver",
          "traits": {
            "smithy.api#required": {}
          }
        },
        "parameterConfiguration": {
          "target": "com.amazonaws.emrcontainers#TemplateParameterConfigurationMap",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of parameters existing in the job template.</p>"
          }
        },
        "jobTags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to jobs started using the job template.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The values of StartJobRun API requests used in job runs started using the job\n         template.</p>"
      }
    },
    "com.amazonaws.emrcontainers#JobTemplates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#JobTemplate"
      }
    },
    "com.amazonaws.emrcontainers#KmsKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 2048
        },
        "smithy.api#pattern": "^(arn:(aws[a-zA-Z0-9-]*):kms:.+:(\\d{12})?:key\\/[(0-9a-zA-Z)-?]+|\\$\\{[a-zA-Z]\\w*\\})$"
      }
    },
    "com.amazonaws.emrcontainers#KubernetesNamespace": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 63
        },
        "smithy.api#pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
      }
    },
    "com.amazonaws.emrcontainers#ListJobRuns": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#ListJobRunsRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#ListJobRunsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists job runs based on a set of parameters. A job run is a unit of work, such as a\n         Spark jar, PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters/{virtualClusterId}/jobruns",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "jobRuns",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.emrcontainers#ListJobRunsRequest": {
      "type": "structure",
      "members": {
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster for which to list the job run. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "createdBefore": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time before which the job runs were submitted.</p>",
            "smithy.api#httpQuery": "createdBefore"
          }
        },
        "createdAfter": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time after which the job runs were submitted.</p>",
            "smithy.api#httpQuery": "createdAfter"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the job run.</p>",
            "smithy.api#httpQuery": "name"
          }
        },
        "states": {
          "target": "com.amazonaws.emrcontainers#JobRunStates",
          "traits": {
            "smithy.api#documentation": "<p>The states of the job run.</p>",
            "smithy.api#httpQuery": "states"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of job runs that can be listed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of job runs to return.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#ListJobRunsResponse": {
      "type": "structure",
      "members": {
        "jobRuns": {
          "target": "com.amazonaws.emrcontainers#JobRuns",
          "traits": {
            "smithy.api#documentation": "<p>This output lists information about the specified job runs.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the token for the next set of job runs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#ListJobTemplates": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#ListJobTemplatesRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#ListJobTemplatesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists job templates based on a set of parameters. Job template stores values of\n         StartJobRun API request in a template and can be used to start a job run. Job template\n         allows two use cases: avoid repeating recurring StartJobRun API request values, enforcing\n         certain values in StartJobRun API request.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/jobtemplates",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "templates",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.emrcontainers#ListJobTemplatesRequest": {
      "type": "structure",
      "members": {
        "createdAfter": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time after which the job templates were created.</p>",
            "smithy.api#httpQuery": "createdAfter"
          }
        },
        "createdBefore": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p> The date and time before which the job templates were created.</p>",
            "smithy.api#httpQuery": "createdBefore"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p> The maximum number of job templates that can be listed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> The token for the next set of job templates to return.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#ListJobTemplatesResponse": {
      "type": "structure",
      "members": {
        "templates": {
          "target": "com.amazonaws.emrcontainers#JobTemplates",
          "traits": {
            "smithy.api#documentation": "<p>This output lists information about the specified job templates.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> This output displays the token for the next set of job templates.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#ListManagedEndpoints": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#ListManagedEndpointsRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#ListManagedEndpointsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists managed endpoints based on a set of parameters. A managed endpoint is a gateway\n         that connects Amazon EMR Studio to Amazon EMR on EKS so that Amazon EMR Studio can communicate with your virtual cluster.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters/{virtualClusterId}/endpoints",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "endpoints",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.emrcontainers#ListManagedEndpointsRequest": {
      "type": "structure",
      "members": {
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "createdBefore": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time before which the endpoints are created.</p>",
            "smithy.api#httpQuery": "createdBefore"
          }
        },
        "createdAfter": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p> The date and time after which the endpoints are created.</p>",
            "smithy.api#httpQuery": "createdAfter"
          }
        },
        "types": {
          "target": "com.amazonaws.emrcontainers#EndpointTypes",
          "traits": {
            "smithy.api#documentation": "<p>The types of the managed endpoints.</p>",
            "smithy.api#httpQuery": "types"
          }
        },
        "states": {
          "target": "com.amazonaws.emrcontainers#EndpointStates",
          "traits": {
            "smithy.api#documentation": "<p>The states of the managed endpoints.</p>",
            "smithy.api#httpQuery": "states"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of managed endpoints that can be listed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> The token for the next set of managed endpoints to return. </p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#ListManagedEndpointsResponse": {
      "type": "structure",
      "members": {
        "endpoints": {
          "target": "com.amazonaws.emrcontainers#Endpoints",
          "traits": {
            "smithy.api#documentation": "<p>The managed endpoints to be listed.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p> The token for the next set of endpoints to return. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists the tags assigned to the resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.emrcontainers#RsiArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of tagged resources.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to resources.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#ListVirtualClusters": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#ListVirtualClustersRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#ListVirtualClustersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists information about the specified virtual cluster. Virtual cluster is a managed\n         entity on Amazon EMR on EKS. You can create, describe, list and delete virtual\n         clusters. They do not consume any additional resource in your system. A single virtual\n         cluster maps to a single Kubernetes namespace. Given this relationship, you can model\n         virtual clusters the same way you model Kubernetes namespaces to meet your\n         requirements.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/virtualclusters",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "virtualClusters",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.emrcontainers#ListVirtualClustersRequest": {
      "type": "structure",
      "members": {
        "containerProviderId": {
          "target": "com.amazonaws.emrcontainers#String1024",
          "traits": {
            "smithy.api#documentation": "<p>The container provider ID of the virtual cluster.</p>",
            "smithy.api#httpQuery": "containerProviderId"
          }
        },
        "containerProviderType": {
          "target": "com.amazonaws.emrcontainers#ContainerProviderType",
          "traits": {
            "smithy.api#documentation": "<p>The container provider type of the virtual cluster. Amazon EKS is the only\n         supported type as of now.</p>",
            "smithy.api#httpQuery": "containerProviderType"
          }
        },
        "createdAfter": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time after which the virtual clusters are created.</p>",
            "smithy.api#httpQuery": "createdAfter"
          }
        },
        "createdBefore": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time before which the virtual clusters are created.</p>",
            "smithy.api#httpQuery": "createdBefore"
          }
        },
        "states": {
          "target": "com.amazonaws.emrcontainers#VirtualClusterStates",
          "traits": {
            "smithy.api#documentation": "<p>The states of the requested virtual clusters.</p>",
            "smithy.api#httpQuery": "states"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of virtual clusters that can be listed.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of virtual clusters to return. </p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#ListVirtualClustersResponse": {
      "type": "structure",
      "members": {
        "virtualClusters": {
          "target": "com.amazonaws.emrcontainers#VirtualClusters",
          "traits": {
            "smithy.api#documentation": "<p>This output lists the specified virtual clusters.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.emrcontainers#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the token for the next set of virtual clusters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#LogContext": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 63
        },
        "smithy.api#pattern": "^((?!.*-s3alias)(?!xn--.*)[a-z0-9][-a-z0-9.]*)?[a-z0-9]$"
      }
    },
    "com.amazonaws.emrcontainers#LogGroupName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[\\.\\-_/#A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.emrcontainers#MaxFilesToKeep": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.emrcontainers#MonitoringConfiguration": {
      "type": "structure",
      "members": {
        "persistentAppUI": {
          "target": "com.amazonaws.emrcontainers#PersistentAppUI",
          "traits": {
            "smithy.api#documentation": "<p>Monitoring configurations for the persistent application UI. </p>"
          }
        },
        "cloudWatchMonitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#CloudWatchMonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Monitoring configurations for CloudWatch.</p>"
          }
        },
        "s3MonitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#S3MonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Amazon S3 configuration for monitoring log publishing.</p>"
          }
        },
        "containerLogRotationConfiguration": {
          "target": "com.amazonaws.emrcontainers#ContainerLogRotationConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Enable or disable container log rotation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration setting for monitoring.</p>"
      }
    },
    "com.amazonaws.emrcontainers#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#ParametricCloudWatchMonitoringConfiguration": {
      "type": "structure",
      "members": {
        "logGroupName": {
          "target": "com.amazonaws.emrcontainers#TemplateParameter",
          "traits": {
            "smithy.api#documentation": "<p> The name of the log group for log publishing.</p>"
          }
        },
        "logStreamNamePrefix": {
          "target": "com.amazonaws.emrcontainers#String256",
          "traits": {
            "smithy.api#documentation": "<p> The specified name prefix for log streams.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A configuration for CloudWatch monitoring. You can configure your jobs to send log\n         information to CloudWatch Logs. This data type allows job template parameters to be\n         specified within.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ParametricConfigurationOverrides": {
      "type": "structure",
      "members": {
        "applicationConfiguration": {
          "target": "com.amazonaws.emrcontainers#ConfigurationList",
          "traits": {
            "smithy.api#documentation": "<p> The configurations for the application running by the job run.</p>"
          }
        },
        "monitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#ParametricMonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> The configurations for monitoring. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> A configuration specification to be used to override existing configurations. This data\n         type allows job template parameters to be specified within.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ParametricIAMRoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 2048
        },
        "smithy.api#pattern": "^(^arn:(aws[a-zA-Z0-9-]*):iam::(\\d{12})?:(role((\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F))[\\w+=,.@-]+)$)|([\\.\\-_\\#A-Za-z0-9\\$\\{\\}]+)$"
      }
    },
    "com.amazonaws.emrcontainers#ParametricMonitoringConfiguration": {
      "type": "structure",
      "members": {
        "persistentAppUI": {
          "target": "com.amazonaws.emrcontainers#TemplateParameter",
          "traits": {
            "smithy.api#documentation": "<p> Monitoring configurations for the persistent application UI.</p>"
          }
        },
        "cloudWatchMonitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#ParametricCloudWatchMonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> Monitoring configurations for CloudWatch.</p>"
          }
        },
        "s3MonitoringConfiguration": {
          "target": "com.amazonaws.emrcontainers#ParametricS3MonitoringConfiguration",
          "traits": {
            "smithy.api#documentation": "<p> Amazon S3 configuration for monitoring log publishing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Configuration setting for monitoring. This data type allows job template parameters to\n         be specified within.</p>"
      }
    },
    "com.amazonaws.emrcontainers#ParametricReleaseLabel": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^([\\.\\-_/A-Za-z0-9]+|\\$\\{[a-zA-Z]\\w*\\})$"
      }
    },
    "com.amazonaws.emrcontainers#ParametricS3MonitoringConfiguration": {
      "type": "structure",
      "members": {
        "logUri": {
          "target": "com.amazonaws.emrcontainers#UriString",
          "traits": {
            "smithy.api#documentation": "<p>Amazon S3 destination URI for log publishing.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Amazon S3 configuration for monitoring log publishing. You can configure your jobs to\n         send log information to Amazon S3. This data type allows job template parameters to be\n         specified within.</p>"
      }
    },
    "com.amazonaws.emrcontainers#PersistentAppUI": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#ReleaseLabel": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[\\.\\-_/A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.emrcontainers#RequestIdentityUserArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):(iam|sts)::(\\d{12})?:[\\w/+=,.@-]+$"
      }
    },
    "com.amazonaws.emrcontainers#RequestThrottledException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.emrcontainers#String1024"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request throttled.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.emrcontainers#ResourceIdString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9a-z]+$"
      }
    },
    "com.amazonaws.emrcontainers#ResourceNameString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[\\.\\-_/#A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.emrcontainers#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.emrcontainers#String1024"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.emrcontainers#RetryPolicyConfiguration": {
      "type": "structure",
      "members": {
        "maxAttempts": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of attempts on the job's driver.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration of the retry policy that the job runs on.</p>"
      }
    },
    "com.amazonaws.emrcontainers#RetryPolicyExecution": {
      "type": "structure",
      "members": {
        "currentAttemptCount": {
          "target": "com.amazonaws.emrcontainers#JavaInteger",
          "traits": {
            "smithy.api#documentation": "<p>The current number of attempts made on the driver of the job.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The current status of the retry policy executed on the job.</p>"
      }
    },
    "com.amazonaws.emrcontainers#RotationSize": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 12
        },
        "smithy.api#pattern": "^\\d+(\\.\\d+)?[KMG][Bb]?$"
      }
    },
    "com.amazonaws.emrcontainers#RsiArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 60,
          "max": 500
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\\d{12}):/virtualclusters/.+$"
      }
    },
    "com.amazonaws.emrcontainers#S3MonitoringConfiguration": {
      "type": "structure",
      "members": {
        "logUri": {
          "target": "com.amazonaws.emrcontainers#UriString",
          "traits": {
            "smithy.api#documentation": "<p>Amazon S3 destination URI for log publishing.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p> Amazon S3 configuration for monitoring log publishing. You can configure your jobs to\n         send log information to Amazon S3.</p>"
      }
    },
    "com.amazonaws.emrcontainers#SensitivePropertiesMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.emrcontainers#String1024"
      },
      "value": {
        "target": "com.amazonaws.emrcontainers#String1024"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#SparkSqlJobDriver": {
      "type": "structure",
      "members": {
        "entryPoint": {
          "target": "com.amazonaws.emrcontainers#EntryPointPath",
          "traits": {
            "smithy.api#documentation": "<p>The SQL file to be executed.</p>"
          }
        },
        "sparkSqlParameters": {
          "target": "com.amazonaws.emrcontainers#SparkSqlParameters",
          "traits": {
            "smithy.api#documentation": "<p>The Spark parameters to be included in the Spark SQL command.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The job driver for job type.</p>"
      }
    },
    "com.amazonaws.emrcontainers#SparkSqlParameters": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 102400
        },
        "smithy.api#pattern": "\\S",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#SparkSubmitJobDriver": {
      "type": "structure",
      "members": {
        "entryPoint": {
          "target": "com.amazonaws.emrcontainers#EntryPointPath",
          "traits": {
            "smithy.api#documentation": "<p>The entry point of job application.</p>",
            "smithy.api#required": {}
          }
        },
        "entryPointArguments": {
          "target": "com.amazonaws.emrcontainers#EntryPointArguments",
          "traits": {
            "smithy.api#documentation": "<p>The arguments for job application.</p>"
          }
        },
        "sparkSubmitParameters": {
          "target": "com.amazonaws.emrcontainers#SparkSubmitParameters",
          "traits": {
            "smithy.api#documentation": "<p>The Spark submit parameters that are used for job runs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The information about job driver for Spark submit.</p>"
      }
    },
    "com.amazonaws.emrcontainers#SparkSubmitParameters": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 102400
        },
        "smithy.api#pattern": "\\S",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#StartJobRun": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#StartJobRunRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#StartJobRunResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Starts a job run. A job run is a unit of work, such as a Spark jar, PySpark script, or\n         SparkSQL query, that you submit to Amazon EMR on EKS.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/virtualclusters/{virtualClusterId}/jobruns",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#StartJobRunRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the job run.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The virtual cluster ID for which the job run request is submitted.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.emrcontainers#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>The client idempotency token of the job run request. </p>",
            "smithy.api#idempotencyToken": {},
            "smithy.api#required": {}
          }
        },
        "executionRoleArn": {
          "target": "com.amazonaws.emrcontainers#IAMRoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The execution role ARN for the job run.</p>"
          }
        },
        "releaseLabel": {
          "target": "com.amazonaws.emrcontainers#ReleaseLabel",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon EMR release version to use for the job run.</p>"
          }
        },
        "jobDriver": {
          "target": "com.amazonaws.emrcontainers#JobDriver",
          "traits": {
            "smithy.api#documentation": "<p>The job driver for the job run.</p>"
          }
        },
        "configurationOverrides": {
          "target": "com.amazonaws.emrcontainers#ConfigurationOverrides",
          "traits": {
            "smithy.api#documentation": "<p>The configuration overrides for the job run.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to job runs.</p>"
          }
        },
        "jobTemplateId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The job template ID to be used to start the job run.</p>"
          }
        },
        "jobTemplateParameters": {
          "target": "com.amazonaws.emrcontainers#TemplateParameterInputMap",
          "traits": {
            "smithy.api#documentation": "<p>The values of job template parameters to start a job run.</p>"
          }
        },
        "retryPolicyConfiguration": {
          "target": "com.amazonaws.emrcontainers#RetryPolicyConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The retry policy configuration for the job run.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#StartJobRunResponse": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the started job run ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the name of the started job run.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#JobArn",
          "traits": {
            "smithy.api#documentation": "<p>This output lists the ARN of job run.</p>"
          }
        },
        "virtualClusterId": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>This output displays the virtual cluster ID for which the job run was submitted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#String1024": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#String128": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#String2048": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#String256": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#StringEmpty256": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "\\S"
      }
    },
    "com.amazonaws.emrcontainers#SubnetIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#String256"
      }
    },
    "com.amazonaws.emrcontainers#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#String128"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.emrcontainers#TagMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.emrcontainers#String128"
      },
      "value": {
        "target": "com.amazonaws.emrcontainers#StringEmpty256"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.emrcontainers#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Assigns tags to resources. A tag is a label that you assign to an Amazon Web Services\n         resource. Each tag consists of a key and an optional value, both of which you define. Tags\n         enable you to categorize your Amazon Web Services resources by attributes such as purpose,\n         owner, or environment. When you have many resources of the same type, you can quickly\n         identify a specific resource based on the tags you've assigned to it. For example, you can\n         define a set of tags for your Amazon EMR on EKS clusters to help you track each\n         cluster's owner and stack level. We recommend that you devise a consistent set of tag keys\n         for each resource type. You can then search and filter the resources based on the tags that\n         you add.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.emrcontainers#RsiArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of resources.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The tags assigned to resources.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameter": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[\\.\\-_/#A-Za-z0-9\\$\\{\\}]+$"
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameterConfiguration": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.emrcontainers#TemplateParameterDataType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the job template parameter. Allowed values are: ‘STRING’, ‘NUMBER’.</p>"
          }
        },
        "defaultValue": {
          "target": "com.amazonaws.emrcontainers#String1024",
          "traits": {
            "smithy.api#documentation": "<p>The default value for the job template parameter.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration of a job template parameter.</p>"
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameterConfigurationMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.emrcontainers#TemplateParameterName"
      },
      "value": {
        "target": "com.amazonaws.emrcontainers#TemplateParameterConfiguration"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameterDataType": {
      "type": "enum",
      "members": {
        "NUMBER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NUMBER"
          }
        },
        "STRING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STRING"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameterInputMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.emrcontainers#TemplateParameterName"
      },
      "value": {
        "target": "com.amazonaws.emrcontainers#String1024"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.emrcontainers#TemplateParameterName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^[\\.\\-_\\#A-Za-z0-9]+$"
      }
    },
    "com.amazonaws.emrcontainers#Token": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#pattern": "^.*\\S.*$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.emrcontainers#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.emrcontainers#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.emrcontainers#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.emrcontainers#InternalServerException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.emrcontainers#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes tags from resources.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.emrcontainers#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.emrcontainers#RsiArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of resources.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.emrcontainers#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>The tag keys of the resources.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.emrcontainers#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.emrcontainers#UriString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10280
        },
        "smithy.api#pattern": "^[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDBFF-\\uDC00\\uDFFF\\r\\n\\t]*$"
      }
    },
    "com.amazonaws.emrcontainers#ValidationException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.emrcontainers#String1024"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>There are invalid parameters in the client request.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.emrcontainers#VirtualCluster": {
      "type": "structure",
      "members": {
        "id": {
          "target": "com.amazonaws.emrcontainers#ResourceIdString",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the virtual cluster.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.emrcontainers#ResourceNameString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the virtual cluster.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.emrcontainers#VirtualClusterArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the virtual cluster.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.emrcontainers#VirtualClusterState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the virtual cluster.</p>"
          }
        },
        "containerProvider": {
          "target": "com.amazonaws.emrcontainers#ContainerProvider",
          "traits": {
            "smithy.api#documentation": "<p>The container provider of the virtual cluster.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.emrcontainers#Date",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the virtual cluster is created.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.emrcontainers#TagMap",
          "traits": {
            "smithy.api#documentation": "<p>The assigned tags of the virtual cluster.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>This entity describes a virtual cluster. A virtual cluster is a Kubernetes namespace\n         that Amazon EMR is registered with. Amazon EMR uses virtual clusters to run\n         jobs and host endpoints. Multiple virtual clusters can be backed by the same physical\n         cluster. However, each virtual cluster maps to one namespace on an Amazon EKS\n         cluster. Virtual clusters do not create any active resources that contribute to your bill\n         or that require lifecycle management outside the service.</p>"
      }
    },
    "com.amazonaws.emrcontainers#VirtualClusterArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 60,
          "max": 1024
        },
        "smithy.api#pattern": "^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\\d{12}):\\/virtualclusters\\/[0-9a-zA-Z]+$"
      }
    },
    "com.amazonaws.emrcontainers#VirtualClusterState": {
      "type": "enum",
      "members": {
        "RUNNING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RUNNING"
          }
        },
        "TERMINATING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TERMINATING"
          }
        },
        "TERMINATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TERMINATED"
          }
        },
        "ARRESTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ARRESTED"
          }
        }
      }
    },
    "com.amazonaws.emrcontainers#VirtualClusterStates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#VirtualClusterState"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.emrcontainers#VirtualClusters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.emrcontainers#VirtualCluster"
      }
    }
  }
}
