{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.apigatewayv2#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#jsonName": "message"
          }
        }
      },
      "traits": {
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.apigatewayv2#AccessLogSettings": {
      "type": "structure",
      "members": {
        "DestinationArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the CloudWatch Logs log group to receive access logs.</p>",
            "smithy.api#jsonName": "destinationArn"
          }
        },
        "Format": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>A single line format of the access logs of data, as specified by selected $context variables. The format must include at least $context.requestId.</p>",
            "smithy.api#jsonName": "format"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Settings for logging access in a stage.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#Api": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType",
            "smithy.api#required": {}
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression",
            "smithy.api#required": {}
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an API.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#ApiGatewayV2": {
      "type": "service",
      "version": "2018-11-29",
      "operations": [
        {
          "target": "com.amazonaws.apigatewayv2#CreateApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateApiMapping"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateAuthorizer"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateDeployment"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateDomainName"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateIntegration"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateModel"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateRoute"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateRouteResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateStage"
        },
        {
          "target": "com.amazonaws.apigatewayv2#CreateVpcLink"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteAccessLogSettings"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteApiMapping"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteAuthorizer"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteCorsConfiguration"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteDeployment"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteDomainName"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteIntegration"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteModel"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteRoute"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteRouteRequestParameter"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteRouteResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteRouteSettings"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteStage"
        },
        {
          "target": "com.amazonaws.apigatewayv2#DeleteVpcLink"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ExportApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetApiMapping"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetApiMappings"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetApis"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetAuthorizer"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetAuthorizers"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetDeployment"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetDeployments"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetDomainName"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetDomainNames"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetIntegration"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetIntegrationResponses"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetIntegrations"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetModel"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetModels"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetModelTemplate"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetRoute"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetRouteResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetRouteResponses"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetRoutes"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetStage"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetStages"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetTags"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetVpcLink"
        },
        {
          "target": "com.amazonaws.apigatewayv2#GetVpcLinks"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ImportApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ReimportApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TagResource"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UntagResource"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateApi"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateApiMapping"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateAuthorizer"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateDeployment"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateDomainName"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateIntegration"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateIntegrationResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateModel"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateRoute"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateRouteResponse"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateStage"
        },
        {
          "target": "com.amazonaws.apigatewayv2#UpdateVpcLink"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "ApiGatewayV2",
          "arnNamespace": "apigateway",
          "cloudFormationName": "ApiGatewayV2",
          "cloudTrailEventSource": "apigatewayv2.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "apigateway"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>Amazon API Gateway V2</p>",
        "smithy.api#title": "AmazonApiGatewayV2"
      }
    },
    "com.amazonaws.apigatewayv2#ApiMapping": {
      "type": "structure",
      "members": {
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#jsonName": "apiMappingId"
          }
        },
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage",
            "smithy.api#required": {}
          }
        },
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping key.</p>",
            "smithy.api#jsonName": "apiMappingKey"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an API mapping.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents an Amazon Resource Name (ARN).</p>"
      }
    },
    "com.amazonaws.apigatewayv2#AuthorizationScopes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64"
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#AuthorizationType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
        "smithy.api#enum": [
          {
            "value": "NONE",
            "name": "NONE"
          },
          {
            "value": "AWS_IAM",
            "name": "AWS_IAM"
          },
          {
            "value": "CUSTOM",
            "name": "CUSTOM"
          },
          {
            "value": "JWT",
            "name": "JWT"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#Authorizer": {
      "type": "structure",
      "members": {
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). ForREQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The validation expression does not apply to the REQUEST authorizer.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT) from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource"
          }
        },
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an authorizer.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#AuthorizerType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
        "smithy.api#enum": [
          {
            "value": "REQUEST",
            "name": "REQUEST"
          },
          {
            "value": "JWT",
            "name": "JWT"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#BadRequestException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the error encountered.</p>",
            "smithy.api#jsonName": "message"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request is not valid, for example, the input is incomplete or incorrect. See the accompanying error message for details.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.apigatewayv2#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the error encountered.</p>",
            "smithy.api#jsonName": "message"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested operation would cause a conflict with the current state of a service resource associated with the request. Resolve the conflict before retrying this request. See the accompanying error message for details.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.apigatewayv2#ConnectionType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents a connection type.</p>",
        "smithy.api#enum": [
          {
            "value": "INTERNET",
            "name": "INTERNET"
          },
          {
            "value": "VPC_LINK",
            "name": "VPC_LINK"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#ContentHandlingStrategy": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.</p>",
        "smithy.api#enum": [
          {
            "value": "CONVERT_TO_BINARY",
            "name": "CONVERT_TO_BINARY"
          },
          {
            "value": "CONVERT_TO_TEXT",
            "name": "CONVERT_TO_TEXT"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#Cors": {
      "type": "structure",
      "members": {
        "AllowCredentials": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether credentials are included in the CORS request. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "allowCredentials"
          }
        },
        "AllowHeaders": {
          "target": "com.amazonaws.apigatewayv2#CorsHeaderList",
          "traits": {
            "smithy.api#documentation": "<p>Represents a collection of allowed headers. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "allowHeaders"
          }
        },
        "AllowOrigins": {
          "target": "com.amazonaws.apigatewayv2#CorsOriginList",
          "traits": {
            "smithy.api#documentation": "<p>Represents a collection of allowed origins. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "allowOrigins"
          }
        },
        "ExposeHeaders": {
          "target": "com.amazonaws.apigatewayv2#CorsHeaderList",
          "traits": {
            "smithy.api#documentation": "<p>Represents a collection of exposed headers. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "exposeHeaders"
          }
        },
        "MaxAge": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetweenMinus1And86400",
          "traits": {
            "smithy.api#documentation": "<p>The number of seconds that the browser should cache preflight request results. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "maxAge"
          }
        },
        "AllowMethods": {
          "target": "com.amazonaws.apigatewayv2#CorsMethodList",
          "traits": {
            "smithy.api#documentation": "<p>Represents a collection of allowed HTTP methods. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "allowMethods"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a CORS configuration. Supported only for HTTP APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html\">Configuring CORS</a> for more information.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CorsHeaderList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of allowed headers. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CorsMethodList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64"
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of methods. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CorsOriginList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of origins. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an Api resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateApiMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateApiMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateApiMappingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an API mapping.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/domainnames/{DomainName}/apimappings",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateApiMappingRequest": {
      "type": "structure",
      "members": {
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "The API mapping key.",
            "smithy.api#jsonName": "apiMappingKey"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage",
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new ApiMapping resource to represent an API mapping.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateApiMappingResponse": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#jsonName": "apiMappingId"
          }
        },
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage"
          }
        },
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping key.</p>",
            "smithy.api#jsonName": "apiMappingKey"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateApiRequest": {
      "type": "structure",
      "members": {
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html\">Configuring CORS</a> for more information.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. It specifies the credentials required for the integration, if any. For a Lambda integration, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null. Currently, this property is not used for HTTP integrations. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType",
            "smithy.api#required": {}
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes. For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. If you don't specify a routeKey, a default route of $default is created. The $default route acts as a catch-all for any request made to your API, for a particular stage. The $default route key can't be modified. You can add routes after creating the API, and you can update the route keys of additional routes. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Api resource to represent an API.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateApiResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateAuthorizerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an Authorizer for an API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/authorizers",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateAuthorizerRequest": {
      "type": "structure",
      "members": {
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType",
            "smithy.api#required": {}
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). For REQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT )from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource",
            "smithy.api#required": {}
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>This parameter is not used.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Authorizer resource to represent an authorizer.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateAuthorizerResponse": {
      "type": "structure",
      "members": {
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType"
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The validation expression does not apply to the REQUEST authorizer.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        },
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT) from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource"
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). ForREQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateDeploymentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a Deployment for an API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/deployments",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateDeploymentRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the Stage resource for the Deployment resource to create.</p>",
            "smithy.api#jsonName": "stageName"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment resource.</p>",
            "smithy.api#jsonName": "description"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Deployment resource to represent a deployment.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateDeploymentResponse": {
      "type": "structure",
      "members": {
        "AutoDeployed": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a deployment was automatically released.</p>",
            "smithy.api#jsonName": "autoDeployed"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the deployment.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "DeploymentStatus": {
          "target": "com.amazonaws.apigatewayv2#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the deployment: PENDING, FAILED, or SUCCEEDED.</p>",
            "smithy.api#jsonName": "deploymentStatus"
          }
        },
        "DeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>May contain additional feedback on the status of an API deployment.</p>",
            "smithy.api#jsonName": "deploymentStatusMessage"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the Deployment resource was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateDomainNameResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a domain name.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/domainnames",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateDomainNameRequest": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags associated with a domain name.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#jsonName": "domainName",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new DomainName resource to represent a domain name.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateDomainNameResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags associated with a domain name.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>The name of the DomainName resource.</p>",
            "smithy.api#jsonName": "domainName"
          }
        },
        "ApiMappingSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping selection expression.</p>",
            "smithy.api#jsonName": "apiMappingSelectionExpression"
          }
        },
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateIntegrationResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an Integration.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/integrations",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegrationRequest": {
      "type": "structure",
      "members": {
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfigInput",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the integration.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration. For HTTP API private integrations, use an HTTP_PROXY integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType",
            "smithy.api#required": {}
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Integration resource to represent an integration.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateIntegrationResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an IntegrationResponses.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where {name} is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where {name} is a valid and unique response header name and {JSON-expression} is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey",
            "smithy.api#required": {}
          }
        },
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new IntegrationResponse resource to represent an integration response.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegrationResponseResponse": {
      "type": "structure",
      "members": {
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expressions for the integration response.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#jsonName": "integrationResponseId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateIntegrationResult": {
      "type": "structure",
      "members": {
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of an integration.</p>",
            "smithy.api#jsonName": "integrationId"
          }
        },
        "IntegrationResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The integration response selection expression for the integration. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-integration-response-selection-expressions\">Integration Response Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "integrationResponseSelectionExpression"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an integration is managed by API Gateway. If you created an API using using quick create, the resulting integration is managed by API Gateway. You can update a managed integration, but you can't delete it.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfig",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>Represents the description of an integration.</p>",
            "smithy.api#jsonName": "description"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateModelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a Model for an API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/models",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateModelRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be alphanumeric.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Model.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateModelResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be alphanumeric.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        },
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The model identifier.</p>",
            "smithy.api#jsonName": "modelId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateRoute": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateRouteRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateRouteResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a Route for an API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/routes",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateRouteRequest": {
      "type": "structure",
      "members": {
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey",
            "smithy.api#required": {}
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>The authorization scopes supported by this route.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Route resource to represent a route.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateRouteResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateRouteResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateRouteResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a RouteResponse for a Route.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/routeresponses",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateRouteResponseRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route response key.</p>",
            "smithy.api#jsonName": "routeResponseKey",
            "smithy.api#required": {}
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The route response parameters.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The response models for the route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new RouteResponse resource to represent a route response.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateRouteResponseResponse": {
      "type": "structure",
      "members": {
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response models of a route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response parameters of a route response.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>Represents the route response key of a route response.</p>",
            "smithy.api#jsonName": "routeResponseKey"
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of a route response.</p>",
            "smithy.api#jsonName": "routeResponseId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateRouteResult": {
      "type": "structure",
      "members": {
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for this route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        },
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#jsonName": "routeId"
          }
        },
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a Stage for an API.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/apis/{ApiId}/stages",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateStageRequest": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the API stage.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage.</p>",
            "smithy.api#jsonName": "stageName",
            "smithy.api#required": {}
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a Stage. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The deployment identifier of the API stage.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        },
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>The default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage, by routeKey.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Stage resource to represent a stage.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateStageResponse": {
      "type": "structure",
      "members": {
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage, by routeKey.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a stage is managed by API Gateway. If you created an API using quick create, the $default stage is managed by API Gateway. You can't modify the $default stage.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the stage.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a stage resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage.</p>",
            "smithy.api#jsonName": "stageName"
          }
        },
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>Default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "LastDeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the status of the last deployment of a stage. Supported only for stages with autoDeploy enabled.</p>",
            "smithy.api#jsonName": "lastDeploymentStatusMessage"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Deployment that the Stage is associated with. Can't be updated if autoDeploy is enabled.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "LastUpdatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was last updated.</p>",
            "smithy.api#jsonName": "lastUpdatedDate"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#CreateVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#CreateVpcLinkResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a VPC link.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/vpclinks",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#CreateVpcLinkRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.apigatewayv2#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>",
            "smithy.api#jsonName": "securityGroupIds"
          }
        },
        "SubnetIds": {
          "target": "com.amazonaws.apigatewayv2#SubnetIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>",
            "smithy.api#jsonName": "subnetIds",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A list of tags.</p>",
            "smithy.api#jsonName": "tags"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a VPC link</p>"
      }
    },
    "com.amazonaws.apigatewayv2#CreateVpcLinkResponse": {
      "type": "structure",
      "members": {
        "VpcLinkStatus": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatus"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.apigatewayv2#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>",
            "smithy.api#jsonName": "securityGroupIds"
          }
        },
        "VpcLinkStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>A message summarizing the cause of the status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatusMessage"
          }
        },
        "SubnetIds": {
          "target": "com.amazonaws.apigatewayv2#SubnetIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>",
            "smithy.api#jsonName": "subnetIds"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the VPC link.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "VpcLinkVersion": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkVersion"
          }
        },
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkId"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the VPC link was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteAccessLogSettings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteAccessLogSettingsRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the AccessLogSettings for a Stage. To disable access logging for a Stage, delete its AccessLogSettings.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/stages/{StageName}/accesslogsettings",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteAccessLogSettingsRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteApiRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an Api resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteApiMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteApiMappingRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an API mapping.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteApiMappingRequest": {
      "type": "structure",
      "members": {
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteApiRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteAuthorizerRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an Authorizer.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/authorizers/{AuthorizerId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteAuthorizerRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteCorsConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteCorsConfigurationRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a CORS configuration.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/cors",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteCorsConfigurationRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteDeploymentRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Deployment.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/deployments/{DeploymentId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteDeploymentRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The deployment ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteDomainNameRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a domain name.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/domainnames/{DomainName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteDomainNameRequest": {
      "type": "structure",
      "members": {
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteIntegrationRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an Integration.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteIntegrationRequest": {
      "type": "structure",
      "members": {
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteIntegrationResponseRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an IntegrationResponses.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteModelRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Model.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/models/{ModelId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteModelRequest": {
      "type": "structure",
      "members": {
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The model ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRoute": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteRouteRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Route.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteRequestParameter": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteRouteRequestParameterRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a route request parameter.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/requestparameters/{RequestParameterKey}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteRequestParameterRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RequestParameterKey": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route request parameter key.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteRouteResponseRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a RouteResponse.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteResponseRequest": {
      "type": "structure",
      "members": {
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteSettings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteRouteSettingsRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the RouteSettings for a stage.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/stages/{StageName}/routesettings/{RouteKey}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteRouteSettingsRequest": {
      "type": "structure",
      "members": {
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route key.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteStageRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Stage.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/apis/{ApiId}/stages/{StageName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteStageRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#DeleteVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#DeleteVpcLinkResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a VPC link.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/vpclinks/{VpcLinkId}",
          "code": 202
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteVpcLinkRequest": {
      "type": "structure",
      "members": {
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#DeleteVpcLinkResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.apigatewayv2#Deployment": {
      "type": "structure",
      "members": {
        "DeploymentStatus": {
          "target": "com.amazonaws.apigatewayv2#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the deployment: PENDING, FAILED, or SUCCEEDED.</p>",
            "smithy.api#jsonName": "deploymentStatus"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "DeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>May contain additional feedback on the status of an API deployment.</p>",
            "smithy.api#jsonName": "deploymentStatusMessage"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the deployment.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "AutoDeployed": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a deployment was automatically released.</p>",
            "smithy.api#jsonName": "autoDeployed"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the Deployment resource was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An immutable representation of an API that can be called by users. A Deployment must be associated with a Stage for it to be callable over the internet.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#DeploymentStatus": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents a deployment status.</p>",
        "smithy.api#enum": [
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "DEPLOYED",
            "name": "DEPLOYED"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#DomainName": {
      "type": "structure",
      "members": {
        "ApiMappingSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping selection expression.</p>",
            "smithy.api#jsonName": "apiMappingSelectionExpression"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>The name of the DomainName resource.</p>",
            "smithy.api#jsonName": "domainName",
            "smithy.api#required": {}
          }
        },
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags associated with a domain name.</p>",
            "smithy.api#jsonName": "tags"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a domain name.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#DomainNameConfiguration": {
      "type": "structure",
      "members": {
        "ApiGatewayDomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>A domain name for the API.</p>",
            "smithy.api#jsonName": "apiGatewayDomainName"
          }
        },
        "EndpointType": {
          "target": "com.amazonaws.apigatewayv2#EndpointType",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint type.</p>",
            "smithy.api#jsonName": "endpointType"
          }
        },
        "CertificateName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The user-friendly name of the certificate that will be used by the edge-optimized endpoint for this domain name.</p>",
            "smithy.api#jsonName": "certificateName"
          }
        },
        "DomainNameStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>An optional text message containing detailed information about status of the domain name migration.</p>",
            "smithy.api#jsonName": "domainNameStatusMessage"
          }
        },
        "CertificateArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>An AWS-managed certificate that will be used by the edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>",
            "smithy.api#jsonName": "certificateArn"
          }
        },
        "DomainNameStatus": {
          "target": "com.amazonaws.apigatewayv2#DomainNameStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.</p>",
            "smithy.api#jsonName": "domainNameStatus"
          }
        },
        "CertificateUploadDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded.</p>",
            "smithy.api#jsonName": "certificateUploadDate"
          }
        },
        "HostedZoneId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Route 53 Hosted Zone ID of the endpoint.</p>",
            "smithy.api#jsonName": "hostedZoneId"
          }
        },
        "SecurityPolicy": {
          "target": "com.amazonaws.apigatewayv2#SecurityPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.</p>",
            "smithy.api#jsonName": "securityPolicy"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The domain name configuration.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#DomainNameConfigurations": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#DomainNameConfiguration"
      },
      "traits": {
        "smithy.api#documentation": "<p>The domain name configurations.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#DomainNameStatus": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.</p>",
        "smithy.api#enum": [
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "UPDATING",
            "name": "UPDATING"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#EndpointType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents an endpoint type.</p>",
        "smithy.api#enum": [
          {
            "value": "REGIONAL",
            "name": "REGIONAL"
          },
          {
            "value": "EDGE",
            "name": "EDGE"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#ExportApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#ExportApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#ExportApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/exports/{Specification}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#ExportApiRequest": {
      "type": "structure",
      "members": {
        "OutputType": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The output type of the exported definition file. Valid values are JSON and YAML.</p>",
            "smithy.api#httpQuery": "outputType",
            "smithy.api#required": {}
          }
        },
        "ExportVersion": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is 1.0.</p>",
            "smithy.api#httpQuery": "exportVersion"
          }
        },
        "Specification": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The version of the API specification to use. OAS30, for OpenAPI 3.0, is the only supported value.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IncludeExtensions": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether to include <a href=\"https://docs.aws.amazon.com//apigateway/latest/developerguide/api-gateway-swagger-extensions.html\">API Gateway extensions</a> in the exported API definition. API Gateway extensions are included by default.</p>",
            "smithy.api#httpQuery": "includeExtensions"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported.</p>",
            "smithy.api#httpQuery": "stageName"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#ExportApiResponse": {
      "type": "structure",
      "members": {
        "body": {
          "target": "com.amazonaws.apigatewayv2#ExportedApi",
          "traits": {
            "smithy.api#httpPayload": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#ExportedApi": {
      "type": "blob",
      "traits": {
        "smithy.api#documentation": "<p>Represents an exported definition of an API in a particular output format, for example, YAML. The API is serialized to the requested specification, for example, OpenAPI 3.0.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#GetApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets an Api resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetApiMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetApiMappingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets an API mapping.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMappingRequest": {
      "type": "structure",
      "members": {
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMappingResponse": {
      "type": "structure",
      "members": {
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#jsonName": "apiMappingId"
          }
        },
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage"
          }
        },
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping key.</p>",
            "smithy.api#jsonName": "apiMappingKey"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMappings": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetApiMappingsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetApiMappingsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets API mappings.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/domainnames/{DomainName}/apimappings",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMappingsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiMappingsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfApiMapping",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApiResponse": {
      "type": "structure",
      "members": {
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApis": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetApisRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetApisResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a collection of Api resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApisRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetApisResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfApi",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetAuthorizerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets an Authorizer.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/authorizers/{AuthorizerId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizerRequest": {
      "type": "structure",
      "members": {
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizerResponse": {
      "type": "structure",
      "members": {
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType"
          }
        },
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT) from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The validation expression does not apply to the REQUEST authorizer.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). ForREQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetAuthorizersRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetAuthorizersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Authorizers for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/authorizers",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizersRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetAuthorizersResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfAuthorizer",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetDeploymentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a Deployment.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/deployments/{DeploymentId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeploymentRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The deployment ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeploymentResponse": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "DeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>May contain additional feedback on the status of an API deployment.</p>",
            "smithy.api#jsonName": "deploymentStatusMessage"
          }
        },
        "DeploymentStatus": {
          "target": "com.amazonaws.apigatewayv2#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the deployment: PENDING, FAILED, or SUCCEEDED.</p>",
            "smithy.api#jsonName": "deploymentStatus"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the deployment.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "AutoDeployed": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a deployment was automatically released.</p>",
            "smithy.api#jsonName": "autoDeployed"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the Deployment resource was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeployments": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetDeploymentsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetDeploymentsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Deployments for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/deployments",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeploymentsRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDeploymentsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfDeployment",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetDomainNameResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a domain name.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/domainnames/{DomainName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainNameRequest": {
      "type": "structure",
      "members": {
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainNameResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags associated with a domain name.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "ApiMappingSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping selection expression.</p>",
            "smithy.api#jsonName": "apiMappingSelectionExpression"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>The name of the DomainName resource.</p>",
            "smithy.api#jsonName": "domainName"
          }
        },
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainNames": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetDomainNamesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetDomainNamesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the domain names for an AWS account.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/domainnames",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainNamesRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetDomainNamesResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfDomainName",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets an Integration.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets an IntegrationResponses.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponseResponse": {
      "type": "structure",
      "members": {
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#jsonName": "integrationResponseId"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expressions for the integration response.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey"
          }
        },
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponses": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationResponsesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationResponsesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the IntegrationResponses for an Integration.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponsesRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResponsesResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfIntegrationResponse",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationResult": {
      "type": "structure",
      "members": {
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfig",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an integration is managed by API Gateway. If you created an API using using quick create, the resulting integration is managed by API Gateway. You can update a managed integration, but you can't delete it.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of an integration.</p>",
            "smithy.api#jsonName": "integrationId"
          }
        },
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        },
        "IntegrationResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The integration response selection expression for the integration. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-integration-response-selection-expressions\">Integration Response Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "integrationResponseSelectionExpression"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>Represents the description of an integration.</p>",
            "smithy.api#jsonName": "description"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetIntegrationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Integrations for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/integrations",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationsRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetIntegrationsResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfIntegration",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetModelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a Model.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/models/{ModelId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The model ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be alphanumeric.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema"
          }
        },
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The model identifier.</p>",
            "smithy.api#jsonName": "modelId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelTemplate": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetModelTemplateRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetModelTemplateResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a model template.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/models/{ModelId}/template",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelTemplateRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The model ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelTemplateResponse": {
      "type": "structure",
      "members": {
        "Value": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The template value.</p>",
            "smithy.api#jsonName": "value"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModels": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetModelsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetModelsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Models for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/models",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelsRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetModelsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfModel",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRoute": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetRouteRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetRouteResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a Route.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteRequest": {
      "type": "structure",
      "members": {
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetRouteResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetRouteResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a RouteResponse.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponseRequest": {
      "type": "structure",
      "members": {
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponseResponse": {
      "type": "structure",
      "members": {
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of a route response.</p>",
            "smithy.api#jsonName": "routeResponseId"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response parameters of a route response.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>Represents the route response key of a route response.</p>",
            "smithy.api#jsonName": "routeResponseKey"
          }
        },
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response models of a route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponses": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetRouteResponsesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetRouteResponsesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the RouteResponses for a Route.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/routeresponses",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponsesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResponsesResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfRouteResponse",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRouteResult": {
      "type": "structure",
      "members": {
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for this route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#jsonName": "routeId"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRoutes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetRoutesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetRoutesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Routes for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/routes",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRoutesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetRoutesResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfRoute",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a Stage.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/stages/{StageName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStageRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStageResponse": {
      "type": "structure",
      "members": {
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a stage is managed by API Gateway. If you created an API using quick create, the $default stage is managed by API Gateway. You can't modify the $default stage.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "LastUpdatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was last updated.</p>",
            "smithy.api#jsonName": "lastUpdatedDate"
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a stage resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage.</p>",
            "smithy.api#jsonName": "stageName"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Deployment that the Stage is associated with. Can't be updated if autoDeploy is enabled.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage, by routeKey.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        },
        "LastDeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the status of the last deployment of a stage. Supported only for stages with autoDeploy enabled.</p>",
            "smithy.api#jsonName": "lastDeploymentStatusMessage"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>Default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the stage.</p>",
            "smithy.api#jsonName": "description"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetStagesRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetStagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the Stages for an API.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/apis/{ApiId}/stages",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStagesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetStagesResponse": {
      "type": "structure",
      "members": {
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfStage",
          "traits": {
            "smithy.api#documentation": "<p>The elements from this collection.</p>",
            "smithy.api#jsonName": "items"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a collection of Tag resources.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/tags/{ResourceArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetTagsRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The resource ARN for the tag.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetTagsResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#jsonName": "tags"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetVpcLinkResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a VPC link.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/vpclinks/{VpcLinkId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLinkRequest": {
      "type": "structure",
      "members": {
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLinkResponse": {
      "type": "structure",
      "members": {
        "SubnetIds": {
          "target": "com.amazonaws.apigatewayv2#SubnetIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>",
            "smithy.api#jsonName": "subnetIds"
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.apigatewayv2#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>",
            "smithy.api#jsonName": "securityGroupIds"
          }
        },
        "VpcLinkVersion": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkVersion"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkId"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the VPC link was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the VPC link.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "VpcLinkStatus": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatus"
          }
        },
        "VpcLinkStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>A message summarizing the cause of the status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatusMessage"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLinks": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#GetVpcLinksRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#GetVpcLinksResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets a collection of VPC links.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/v2/vpclinks",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLinksRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of elements to be returned for this resource.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#GetVpcLinksResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.apigatewayv2#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>",
            "smithy.api#jsonName": "nextToken"
          }
        },
        "Items": {
          "target": "com.amazonaws.apigatewayv2#__listOfVpcLink",
          "traits": {
            "smithy.api#documentation": "<p>A collection of VPC links.</p>",
            "smithy.api#jsonName": "items"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#Id": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The identifier.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#IdentitySourceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "traits": {
        "smithy.api#documentation": "<p>The identity source for which authorization is requested. For the REQUEST authorizer, this is required when authorization caching is enabled. The value is a comma-separated string of one or more mapping expressions of the specified request parameters. For example, if an Auth header, a Name query string parameter are defined as identity sources, this value is $method.request.header.Auth, $method.request.querystring.Name. These parameters will be used to derive the authorization caching key and to perform runtime validation of the REQUEST authorizer by verifying all of the identity-related request parameters are present, not null and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function, otherwise, it returns a 401 Unauthorized response without calling the Lambda function. The valid value is a string of comma-separated mapping expressions of the specified request parameters. When the authorization caching is not enabled, this property is optional.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#ImportApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#ImportApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#ImportApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Imports an API.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v2/apis",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#ImportApiRequest": {
      "type": "structure",
      "members": {
        "Basepath": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html\">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>",
            "smithy.api#httpQuery": "basepath"
          }
        },
        "Body": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The OpenAPI definition. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "body",
            "smithy.api#required": {}
          }
        },
        "FailOnWarnings": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>",
            "smithy.api#httpQuery": "failOnWarnings"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.apigatewayv2#ImportApiResponse": {
      "type": "structure",
      "members": {
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "<p>An integer with a value between [0-3600].</p>",
        "smithy.api#range": {
          "min": 0,
          "max": 3600
        }
      }
    },
    "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "<p>An integer with a value between [50-30000].</p>",
        "smithy.api#range": {
          "min": 50,
          "max": 30000
        }
      }
    },
    "com.amazonaws.apigatewayv2#IntegerWithLengthBetweenMinus1And86400": {
      "type": "integer",
      "traits": {
        "smithy.api#documentation": "<p>An integer with a value between -1 and 86400. Supported only for HTTP APIs.</p>",
        "smithy.api#range": {
          "min": -1,
          "max": 86400
        }
      }
    },
    "com.amazonaws.apigatewayv2#Integration": {
      "type": "structure",
      "members": {
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfig",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "IntegrationResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The integration response selection expression for the integration. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-integration-response-selection-expressions\">Integration Response Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "integrationResponseSelectionExpression"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an integration is managed by API Gateway. If you created an API using using quick create, the resulting integration is managed by API Gateway. You can update a managed integration, but you can't delete it.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>Represents the description of an integration.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of an integration.</p>",
            "smithy.api#jsonName": "integrationId"
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an integration.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#IntegrationParameters": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512"
      },
      "traits": {
        "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#IntegrationResponse": {
      "type": "structure",
      "members": {
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expressions for the integration response.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey",
            "smithy.api#required": {}
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#jsonName": "integrationResponseId"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an integration response.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#IntegrationType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents an API method integration type.</p>",
        "smithy.api#enum": [
          {
            "value": "AWS",
            "name": "AWS"
          },
          {
            "value": "HTTP",
            "name": "HTTP"
          },
          {
            "value": "MOCK",
            "name": "MOCK"
          },
          {
            "value": "HTTP_PROXY",
            "name": "HTTP_PROXY"
          },
          {
            "value": "AWS_PROXY",
            "name": "AWS_PROXY"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#JWTConfiguration": {
      "type": "structure",
      "members": {
        "Audience": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list. See <a href=\"https://tools.ietf.org/html/rfc7519#section-4.1.3\">RFC 7519</a>. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "audience"
          }
        },
        "Issuer": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The base domain of the identity provider that issues JSON Web Tokens. For example, an Amazon Cognito user pool has the following format: https://cognito-idp.<replaceable>{region}</replaceable>.amazonaws.com/<replaceable>{userPoolId}</replaceable>\n               . Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "issuer"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#LoggingLevel": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The logging level.</p>",
        "smithy.api#enum": [
          {
            "value": "ERROR",
            "name": "ERROR"
          },
          {
            "value": "INFO",
            "name": "INFO"
          },
          {
            "value": "OFF",
            "name": "OFF"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#Model": {
      "type": "structure",
      "members": {
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The model identifier.</p>",
            "smithy.api#jsonName": "modelId"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be alphanumeric.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a data model for an API. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\">Create Models and Mapping Templates for Request and Response Mappings</a>.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The next page of elements from this collection. Not valid for the last element of the collection.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#NotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the error encountered.</p>",
            "smithy.api#jsonName": "message"
          }
        },
        "ResourceType": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The resource type.</p>",
            "smithy.api#jsonName": "resourceType"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource specified in the request was not found. See the message field for more information.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.apigatewayv2#ParameterConstraints": {
      "type": "structure",
      "members": {
        "Required": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not the parameter is required.</p>",
            "smithy.api#jsonName": "required"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Validation constraints imposed on parameters of a request (path, query string, headers).</p>"
      }
    },
    "com.amazonaws.apigatewayv2#PassthroughBehavior": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.</p>",
        "smithy.api#enum": [
          {
            "value": "WHEN_NO_MATCH",
            "name": "WHEN_NO_MATCH"
          },
          {
            "value": "NEVER",
            "name": "NEVER"
          },
          {
            "value": "WHEN_NO_TEMPLATES",
            "name": "WHEN_NO_TEMPLATES"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#ProtocolType": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "Represents a protocol type.",
        "smithy.api#enum": [
          {
            "value": "WEBSOCKET",
            "name": "WEBSOCKET"
          },
          {
            "value": "HTTP",
            "name": "HTTP"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#ReimportApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#ReimportApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#ReimportApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Puts an Api resource.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/v2/apis/{ApiId}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#ReimportApiRequest": {
      "type": "structure",
      "members": {
        "Body": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The OpenAPI definition. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "body",
            "smithy.api#required": {}
          }
        },
        "Basepath": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how to interpret the base path of the API during import. Valid values are ignore, prepend, and split. The default value is ignore. To learn more, see <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api-basePath.html\">Set the OpenAPI basePath Property</a>. Supported only for HTTP APIs.</p>",
            "smithy.api#httpQuery": "basepath"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "FailOnWarnings": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether to rollback the API creation when a warning is encountered. By default, API creation continues if a warning is encountered.</p>",
            "smithy.api#httpQuery": "failOnWarnings"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p></p>"
      }
    },
    "com.amazonaws.apigatewayv2#ReimportApiResponse": {
      "type": "structure",
      "members": {
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType"
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#Route": {
      "type": "structure",
      "members": {
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for this route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        },
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey",
            "smithy.api#required": {}
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#jsonName": "routeId"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a route.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#RouteModels": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128"
      },
      "traits": {
        "smithy.api#documentation": "<p>The route models.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#RouteParameters": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#ParameterConstraints"
      },
      "traits": {
        "smithy.api#documentation": "<p>The route parameters.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#RouteResponse": {
      "type": "structure",
      "members": {
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of a route response.</p>",
            "smithy.api#jsonName": "routeResponseId"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response models of a route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>Represents the route response key of a route response.</p>",
            "smithy.api#jsonName": "routeResponseKey",
            "smithy.api#required": {}
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response parameters of a route response.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a route response.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#RouteSettings": {
      "type": "structure",
      "members": {
        "DetailedMetricsEnabled": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether detailed metrics are enabled.</p>",
            "smithy.api#jsonName": "detailedMetricsEnabled"
          }
        },
        "ThrottlingBurstLimit": {
          "target": "com.amazonaws.apigatewayv2#__integer",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the throttling burst limit.</p>",
            "smithy.api#jsonName": "throttlingBurstLimit"
          }
        },
        "DataTraceEnabled": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether (true) or not (false) data trace logging is enabled for this route. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "dataTraceEnabled"
          }
        },
        "LoggingLevel": {
          "target": "com.amazonaws.apigatewayv2#LoggingLevel",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "loggingLevel"
          }
        },
        "ThrottlingRateLimit": {
          "target": "com.amazonaws.apigatewayv2#__double",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the throttling rate limit.</p>",
            "smithy.api#jsonName": "throttlingRateLimit"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of route settings.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#RouteSettingsMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#RouteSettings"
      },
      "traits": {
        "smithy.api#documentation": "<p>The route settings map.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#SecurityGroupIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#SecurityPolicy": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.</p>",
        "smithy.api#enum": [
          {
            "value": "TLS_1_0",
            "name": "TLS_1_0"
          },
          {
            "value": "TLS_1_2",
            "name": "TLS_1_2"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#SelectionExpression": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>An expression used to extract information at runtime. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for more information.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#SelectionKey": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#Stage": {
      "type": "structure",
      "members": {
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>Default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        },
        "LastDeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the status of the last deployment of a stage. Supported only for stages with autoDeploy enabled.</p>",
            "smithy.api#jsonName": "lastDeploymentStatusMessage"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage.</p>",
            "smithy.api#jsonName": "stageName",
            "smithy.api#required": {}
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a stage resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "LastUpdatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was last updated.</p>",
            "smithy.api#jsonName": "lastUpdatedDate"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a stage is managed by API Gateway. If you created an API using quick create, the $default stage is managed by API Gateway. You can't modify the $default stage.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage, by routeKey.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Deployment that the Stage is associated with. Can't be updated if autoDeploy is enabled.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the stage.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents an API stage.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StageVariablesMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And2048"
      },
      "traits": {
        "smithy.api#documentation": "<p>The stage variable map.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [0-1024].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween0And2048": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [0-2048].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [0-32768].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [1-1024].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [1-128].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1600": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [0-1600].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [1-256].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [1-512].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string with a length between [1-64].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#SubnetIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Tag resource to represent a tag.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/v2/tags/{ResourceArn}",
          "code": 201
        }
      }
    },
    "com.amazonaws.apigatewayv2#TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceArn": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The resource ARN for the tag.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Creates a new Tag resource to represent a tag.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.apigatewayv2#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1600"
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a collection of tags associated with the resource.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TemplateMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.apigatewayv2#__string"
      },
      "value": {
        "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K"
      },
      "traits": {
        "smithy.api#documentation": "<p>A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TlsConfig": {
      "type": "structure",
      "members": {
        "ServerNameToVerify": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.</p>",
            "smithy.api#jsonName": "serverNameToVerify"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TlsConfigInput": {
      "type": "structure",
      "members": {
        "ServerNameToVerify": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.</p>",
            "smithy.api#jsonName": "serverNameToVerify"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#TooManyRequestsException": {
      "type": "structure",
      "members": {
        "LimitType": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The limit type.</p>",
            "smithy.api#jsonName": "limitType"
          }
        },
        "Message": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the error encountered.</p>",
            "smithy.api#jsonName": "message"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A limit has been exceeded. See the accompanying error message for details.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.apigatewayv2#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UntagResourceRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a Tag.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/v2/tags/{ResourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.apigatewayv2#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "TagKeys": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The Tag keys to delete</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        },
        "ResourceArn": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The resource ARN for the tag.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApi": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateApiRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateApiResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an Api resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApiMapping": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateApiMappingRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateApiMappingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>The API mapping.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/domainnames/{DomainName}/apimappings/{ApiMappingId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApiMappingRequest": {
      "type": "structure",
      "members": {
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping key.</p>",
            "smithy.api#jsonName": "apiMappingKey"
          }
        },
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an ApiMapping.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApiMappingResponse": {
      "type": "structure",
      "members": {
        "Stage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The API stage.</p>",
            "smithy.api#jsonName": "stage"
          }
        },
        "ApiMappingId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping identifier.</p>",
            "smithy.api#jsonName": "apiMappingId"
          }
        },
        "ApiMappingKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping key.</p>",
            "smithy.api#jsonName": "apiMappingKey"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#jsonName": "apiId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApiRequest": {
      "type": "structure",
      "members": {
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. It specifies the credentials required for the integration, if any. For a Lambda integration, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null. Currently, this property is not used for HTTP integrations. If provided, this value replaces the credentials associated with the quick create integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. If not specified, the route created using quick create is kept. Otherwise, this value replaces the route key of the quick create route. Additional routes may still be added after the API is updated. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>This property is part of quick create. For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. The value provided updates the integration URI and integration type. You can update a quick-created target, but you can't remove it from an API. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an Api.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateApiResponse": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the API.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ImportInfo": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The validation information during API import. This may include particular properties of your OpenAPI definition which are ignored during import. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "importInfo"
          }
        },
        "RouteSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeSelectionExpression"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of tags associated with the API.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "ApiKeySelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>An API key selection expression. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\">API Key Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "apiKeySelectionExpression"
          }
        },
        "CorsConfiguration": {
          "target": "com.amazonaws.apigatewayv2#Cors",
          "traits": {
            "smithy.api#documentation": "<p>A CORS configuration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "corsConfiguration"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The API ID.</p>",
            "smithy.api#jsonName": "apiId"
          }
        },
        "Version": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>A version identifier for the API.</p>",
            "smithy.api#jsonName": "version"
          }
        },
        "Warnings": {
          "target": "com.amazonaws.apigatewayv2#__listOf__string",
          "traits": {
            "smithy.api#documentation": "<p>The warning messages reported when failonwarnings is turned on during API import.</p>",
            "smithy.api#jsonName": "warnings"
          }
        },
        "ApiEndpoint": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The URI of the API, of the form {api-id}.execute-api.{region}.amazonaws.com. The stage name is typically appended to this URI to form a complete path to a deployed API stage.</p>",
            "smithy.api#jsonName": "apiEndpoint"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the API was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "ProtocolType": {
          "target": "com.amazonaws.apigatewayv2#ProtocolType",
          "traits": {
            "smithy.api#documentation": "<p>The API protocol.</p>",
            "smithy.api#jsonName": "protocolType"
          }
        },
        "DisableSchemaValidation": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Avoid validating models when creating a deployment. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "disableSchemaValidation"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the API.</p>",
            "smithy.api#jsonName": "name"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateAuthorizer": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateAuthorizerRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateAuthorizerResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an Authorizer.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/authorizers/{AuthorizerId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateAuthorizerRequest": {
      "type": "structure",
      "members": {
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT) from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). For REQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>This parameter is not used.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an Authorizer.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateAuthorizerResponse": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the authorizer.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "JwtConfiguration": {
          "target": "com.amazonaws.apigatewayv2#JWTConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "jwtConfiguration"
          }
        },
        "IdentitySource": {
          "target": "com.amazonaws.apigatewayv2#IdentitySourceList",
          "traits": {
            "smithy.api#documentation": "<p>The identity source for which authorization is requested.</p> <p>For a REQUEST authorizer, this is optional. The value is a set of one or more mapping expressions of the specified request parameters. Currently, the identity source can be headers, query string parameters, stage variables, and context parameters. For example, if an Auth header and a Name query string parameter are defined as identity sources, this value is route.request.header.Auth, route.request.querystring.Name. These parameters will be used to perform runtime validation for Lambda-based authorizers by verifying all of the identity-related request parameters are present in the request, not null, and non-empty. Only when this is true does the authorizer invoke the authorizer Lambda function. Otherwise, it returns a 401 Unauthorized response without calling the Lambda function.</p> <p>For JWT, a single entry that specifies where to extract the JSON Web Token (JWT) from inbound requests. Currently only header-based and query parameter-based selections are supported, for example \"$request.header.Authorization\".</p>",
            "smithy.api#jsonName": "identitySource"
          }
        },
        "AuthorizerType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizerType",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer type. For WebSocket APIs, specify REQUEST for a Lambda function using incoming request parameters. For HTTP APIs, specify JWT to use JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizerType"
          }
        },
        "IdentityValidationExpression": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The validation expression does not apply to the REQUEST authorizer.</p>",
            "smithy.api#jsonName": "identityValidationExpression"
          }
        },
        "AuthorizerResultTtlInSeconds": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween0And3600",
          "traits": {
            "smithy.api#documentation": "<p>Authorizer caching is not currently supported. Don't specify this value for authorizers.</p>",
            "smithy.api#jsonName": "authorizerResultTtlInSeconds"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer identifier.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "AuthorizerUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>The authorizer's Uniform Resource Identifier (URI). ForREQUEST authorizers, this must be a well-formed Lambda function URI, for example, arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:<replaceable>{account_id}</replaceable>:function:<replaceable>{lambda_function_name}</replaceable>/invocations. In general, the URI has this form: arn:aws:apigateway:<replaceable>{region}</replaceable>:lambda:path/<replaceable>{service_api}</replaceable>\n               , where <replaceable></replaceable>{region} is the same as the region hosting the Lambda function, path indicates that the remaining substring in the URI should be treated as the path to the resource, including the initial /. For Lambda functions, this is usually of the form /2015-03-31/functions/[FunctionARN]/invocations. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerUri"
          }
        },
        "AuthorizerCredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer. To specify an IAM role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To use resource-based permissions on the Lambda function, specify null. Supported only for REQUEST authorizers.</p>",
            "smithy.api#jsonName": "authorizerCredentialsArn"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDeployment": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateDeploymentRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateDeploymentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a Deployment.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/deployments/{DeploymentId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDeploymentRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment resource.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The deployment ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a Deployment.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDeploymentResponse": {
      "type": "structure",
      "members": {
        "DeploymentStatus": {
          "target": "com.amazonaws.apigatewayv2#DeploymentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the deployment: PENDING, FAILED, or SUCCEEDED.</p>",
            "smithy.api#jsonName": "deploymentStatus"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the deployment.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "AutoDeployed": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a deployment was automatically released.</p>",
            "smithy.api#jsonName": "autoDeployed"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The date and time when the Deployment resource was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "DeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>May contain additional feedback on the status of an API deployment.</p>",
            "smithy.api#jsonName": "deploymentStatusMessage"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier for the deployment.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDomainName": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateDomainNameRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateDomainNameResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a domain name.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/domainnames/{DomainName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDomainNameRequest": {
      "type": "structure",
      "members": {
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        },
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The domain name.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a DomainName.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateDomainNameResponse": {
      "type": "structure",
      "members": {
        "DomainName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And512",
          "traits": {
            "smithy.api#documentation": "<p>The name of the DomainName resource.</p>",
            "smithy.api#jsonName": "domainName"
          }
        },
        "ApiMappingSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The API mapping selection expression.</p>",
            "smithy.api#jsonName": "apiMappingSelectionExpression"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags associated with a domain name.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "DomainNameConfigurations": {
          "target": "com.amazonaws.apigatewayv2#DomainNameConfigurations",
          "traits": {
            "smithy.api#documentation": "<p>The domain name configurations.</p>",
            "smithy.api#jsonName": "domainNameConfigurations"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateIntegrationRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateIntegrationResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an Integration.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegrationRequest": {
      "type": "structure",
      "members": {
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration. For HTTP API private integrations, use an HTTP_PROXY integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfigInput",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the integration</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an Integration.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegrationResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateIntegrationResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateIntegrationResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an IntegrationResponses.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/integrations/{IntegrationId}/integrationresponses/{IntegrationResponseId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegrationResponseRequest": {
      "type": "structure",
      "members": {
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.<replaceable>{name}</replaceable>\n               , where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.<replaceable>{name}</replaceable>\n                or integration.response.body.<replaceable>{JSON-expression}</replaceable>\n               , where \n                  <replaceable>{name}</replaceable>\n                is a valid and unique response header name and \n                  <replaceable>{JSON-expression}</replaceable>\n                is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates an IntegrationResponses.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegrationResponseResponse": {
      "type": "structure",
      "members": {
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expressions for the integration response.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "ResponseTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>The collection of response templates for the integration response as a string-to-string map of key-value pairs. Response templates are represented as a key/value map, with a content-type as the key and a template as the value.</p>",
            "smithy.api#jsonName": "responseTemplates"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying response parameters that are passed to the method response from the backend. The key is a method response header parameter name and the mapped value is an integration response header value, a static value enclosed within a pair of single quotes, or a JSON expression from the integration response body. The mapping key must match the pattern of method.response.header.{name}, where name is a valid and unique header name. The mapped non-static value must match the pattern of integration.response.header.{name} or integration.response.body.{JSON-expression}, where name is a valid and unique response header name and JSON-expression is a valid JSON expression without the $ prefix.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "IntegrationResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The integration response key.</p>",
            "smithy.api#jsonName": "integrationResponseKey"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "IntegrationResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The integration response ID.</p>",
            "smithy.api#jsonName": "integrationResponseId"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateIntegrationResult": {
      "type": "structure",
      "members": {
        "IntegrationResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The integration response selection expression for the integration. Supported only for WebSocket APIs. See <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-integration-response-selection-expressions\">Integration Response Selection Expressions</a>.</p>",
            "smithy.api#jsonName": "integrationResponseSelectionExpression"
          }
        },
        "ContentHandlingStrategy": {
          "target": "com.amazonaws.apigatewayv2#ContentHandlingStrategy",
          "traits": {
            "smithy.api#documentation": "<p>Supported only for WebSocket APIs. Specifies how to handle response payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:</p> <p>CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.</p> <p>CONVERT_TO_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.</p> <p>If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.</p>",
            "smithy.api#jsonName": "contentHandlingStrategy"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#IntegrationParameters",
          "traits": {
            "smithy.api#documentation": "<p>A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>\n               , where \n                  <replaceable>{location}</replaceable>\n                is querystring, path, or header; and \n                  <replaceable>{name}</replaceable>\n                must be a valid and unique method request parameter name. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "TemplateSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The template selection expression for the integration. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "templateSelectionExpression"
          }
        },
        "IntegrationId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of an integration.</p>",
            "smithy.api#jsonName": "integrationId"
          }
        },
        "IntegrationMethod": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the integration's HTTP method type.</p>",
            "smithy.api#jsonName": "integrationMethod"
          }
        },
        "IntegrationUri": {
          "target": "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048",
          "traits": {
            "smithy.api#documentation": "<p>For a Lambda integration, specify the URI of a Lambda function.</p> <p>For an HTTP integration, specify a fully-qualified URL.</p> <p>For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service. If you specify the ARN of an AWS Cloud Map service, API Gateway uses DiscoverInstances to identify resources. You can use query parameters to target specific resources. To learn more, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a>. For private integrations, all resources must be owned by the same AWS account.</p>",
            "smithy.api#jsonName": "integrationUri"
          }
        },
        "ConnectionId": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And1024",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link for a private integration. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "connectionId"
          }
        },
        "PassthroughBehavior": {
          "target": "com.amazonaws.apigatewayv2#PassthroughBehavior",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.</p> <p>WHEN_NO_MATCH passes the request body for unmapped content types through to the integration backend without transformation.</p> <p>NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.</p> <p>WHEN_NO_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.</p>",
            "smithy.api#jsonName": "passthroughBehavior"
          }
        },
        "RequestTemplates": {
          "target": "com.amazonaws.apigatewayv2#TemplateMap",
          "traits": {
            "smithy.api#documentation": "<p>Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestTemplates"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an integration is managed by API Gateway. If you created an API using using quick create, the resulting integration is managed by API Gateway. You can update a managed integration, but you can't delete it.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "TlsConfig": {
          "target": "com.amazonaws.apigatewayv2#TlsConfig",
          "traits": {
            "smithy.api#documentation": "<p>The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.</p>",
            "smithy.api#jsonName": "tlsConfig"
          }
        },
        "PayloadFormatVersion": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the format of the payload sent to an integration. Required for HTTP APIs.</p>",
            "smithy.api#jsonName": "payloadFormatVersion"
          }
        },
        "TimeoutInMillis": {
          "target": "com.amazonaws.apigatewayv2#IntegerWithLengthBetween50And30000",
          "traits": {
            "smithy.api#documentation": "<p>Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs. The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.</p>",
            "smithy.api#jsonName": "timeoutInMillis"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>Represents the description of an integration.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ConnectionType": {
          "target": "com.amazonaws.apigatewayv2#ConnectionType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the network connection to the integration endpoint. Specify INTERNET for connections through the public routable internet or VPC_LINK for private connections between API Gateway and resources in a VPC. The default value is INTERNET.</p>",
            "smithy.api#jsonName": "connectionType"
          }
        },
        "CredentialsArn": {
          "target": "com.amazonaws.apigatewayv2#Arn",
          "traits": {
            "smithy.api#documentation": "<p>Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.</p>",
            "smithy.api#jsonName": "credentialsArn"
          }
        },
        "IntegrationType": {
          "target": "com.amazonaws.apigatewayv2#IntegrationType",
          "traits": {
            "smithy.api#documentation": "<p>The integration type of an integration. One of the following:</p> <p>AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration. Supported only for WebSocket APIs.</p> <p>AWS_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.</p> <p>HTTP: for integrating the route or method request with an HTTP endpoint. This integration is also referred to as the HTTP custom integration. Supported only for WebSocket APIs.</p> <p>HTTP_PROXY: for integrating the route or method request with an HTTP endpoint, with the client request passed through as-is. This is also referred to as HTTP proxy integration.</p> <p>MOCK: for integrating the route or method request with API Gateway as a \"loopback\" endpoint without invoking any backend. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "integrationType"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateModel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateModelRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateModelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a Model.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/models/{ModelId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateModelRequest": {
      "type": "structure",
      "members": {
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The model ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a Model.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateModelResponse": {
      "type": "structure",
      "members": {
        "ModelId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The model identifier.</p>",
            "smithy.api#jsonName": "modelId"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the model. Must be alphanumeric.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "Schema": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And32K",
          "traits": {
            "smithy.api#documentation": "<p>The schema for the model. For application/json models, this should be JSON schema draft 4 model.</p>",
            "smithy.api#jsonName": "schema"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the model.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ContentType": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And256",
          "traits": {
            "smithy.api#documentation": "<p>The content-type for the model, for example, \"application/json\".</p>",
            "smithy.api#jsonName": "contentType"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRoute": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateRouteRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateRouteResult"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a Route.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRouteRequest": {
      "type": "structure",
      "members": {
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>The authorization scopes supported by this route.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        },
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a Route.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRouteResponse": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateRouteResponseRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateRouteResponseResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a RouteResponse.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/routes/{RouteId}/routeresponses/{RouteResponseId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRouteResponseRequest": {
      "type": "structure",
      "members": {
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The route response parameters.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route response ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route response key.</p>",
            "smithy.api#jsonName": "routeResponseKey"
          }
        },
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The response models for the route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a RouteResponse.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRouteResponseResponse": {
      "type": "structure",
      "members": {
        "ResponseModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response models of a route response.</p>",
            "smithy.api#jsonName": "responseModels"
          }
        },
        "RouteResponseKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>Represents the route response key of a route response.</p>",
            "smithy.api#jsonName": "routeResponseKey"
          }
        },
        "ResponseParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>Represents the response parameters of a route response.</p>",
            "smithy.api#jsonName": "responseParameters"
          }
        },
        "RouteResponseId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>Represents the identifier of a route response.</p>",
            "smithy.api#jsonName": "routeResponseId"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>Represents the model selection expression of a route response. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateRouteResult": {
      "type": "structure",
      "members": {
        "AuthorizationType": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationType",
          "traits": {
            "smithy.api#documentation": "<p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.</p>",
            "smithy.api#jsonName": "authorizationType"
          }
        },
        "RequestParameters": {
          "target": "com.amazonaws.apigatewayv2#RouteParameters",
          "traits": {
            "smithy.api#documentation": "<p>The request parameters for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestParameters"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "AuthorizationScopes": {
          "target": "com.amazonaws.apigatewayv2#AuthorizationScopes",
          "traits": {
            "smithy.api#documentation": "<p>A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.</p>",
            "smithy.api#jsonName": "authorizationScopes"
          }
        },
        "RouteResponseSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "routeResponseSelectionExpression"
          }
        },
        "RouteKey": {
          "target": "com.amazonaws.apigatewayv2#SelectionKey",
          "traits": {
            "smithy.api#documentation": "<p>The route key for the route.</p>",
            "smithy.api#jsonName": "routeKey"
          }
        },
        "ApiKeyRequired": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether an API key is required for this route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "apiKeyRequired"
          }
        },
        "RouteId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The route ID.</p>",
            "smithy.api#jsonName": "routeId"
          }
        },
        "ModelSelectionExpression": {
          "target": "com.amazonaws.apigatewayv2#SelectionExpression",
          "traits": {
            "smithy.api#documentation": "<p>The model selection expression for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "modelSelectionExpression"
          }
        },
        "AuthorizerId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>",
            "smithy.api#jsonName": "authorizerId"
          }
        },
        "OperationName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And64",
          "traits": {
            "smithy.api#documentation": "<p>The operation name for the route.</p>",
            "smithy.api#jsonName": "operationName"
          }
        },
        "Target": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The target for the route.</p>",
            "smithy.api#jsonName": "target"
          }
        },
        "RequestModels": {
          "target": "com.amazonaws.apigatewayv2#RouteModels",
          "traits": {
            "smithy.api#documentation": "<p>The request models for the route. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "requestModels"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateStage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateStageRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateStageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#ConflictException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a Stage.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/apis/{ApiId}/stages/{StageName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateStageRequest": {
      "type": "structure",
      "members": {
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        },
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        },
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>The default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The stage name. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a Stage. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The deployment identifier for the API stage. Can't be updated if autoDeploy is enabled.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description for the API stage.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The API identifier.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a Stage.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateStageResponse": {
      "type": "structure",
      "members": {
        "AutoDeploy": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>",
            "smithy.api#jsonName": "autoDeploy"
          }
        },
        "LastUpdatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was last updated.</p>",
            "smithy.api#jsonName": "lastUpdatedDate"
          }
        },
        "RouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettingsMap",
          "traits": {
            "smithy.api#documentation": "<p>Route settings for the stage, by routeKey.</p>",
            "smithy.api#jsonName": "routeSettings"
          }
        },
        "Description": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>The description of the stage.</p>",
            "smithy.api#jsonName": "description"
          }
        },
        "ApiGatewayManaged": {
          "target": "com.amazonaws.apigatewayv2#__boolean",
          "traits": {
            "smithy.api#documentation": "<p>Specifies whether a stage is managed by API Gateway. If you created an API using quick create, the $default stage is managed by API Gateway. You can't modify the $default stage.</p>",
            "smithy.api#jsonName": "apiGatewayManaged"
          }
        },
        "StageName": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the stage.</p>",
            "smithy.api#jsonName": "stageName"
          }
        },
        "StageVariables": {
          "target": "com.amazonaws.apigatewayv2#StageVariablesMap",
          "traits": {
            "smithy.api#documentation": "<p>A map that defines the stage variables for a stage resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>",
            "smithy.api#jsonName": "stageVariables"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>The collection of tags. Each tag element is associated with a given resource.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "AccessLogSettings": {
          "target": "com.amazonaws.apigatewayv2#AccessLogSettings",
          "traits": {
            "smithy.api#documentation": "<p>Settings for logging access in this stage.</p>",
            "smithy.api#jsonName": "accessLogSettings"
          }
        },
        "ClientCertificateId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>",
            "smithy.api#jsonName": "clientCertificateId"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the stage was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "DeploymentId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The identifier of the Deployment that the Stage is associated with. Can't be updated if autoDeploy is enabled.</p>",
            "smithy.api#jsonName": "deploymentId"
          }
        },
        "DefaultRouteSettings": {
          "target": "com.amazonaws.apigatewayv2#RouteSettings",
          "traits": {
            "smithy.api#documentation": "<p>Default route settings for the stage.</p>",
            "smithy.api#jsonName": "defaultRouteSettings"
          }
        },
        "LastDeploymentStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>Describes the status of the last deployment of a stage. Supported only for stages with autoDeploy enabled.</p>",
            "smithy.api#jsonName": "lastDeploymentStatusMessage"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateVpcLink": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.apigatewayv2#UpdateVpcLinkRequest"
      },
      "output": {
        "target": "com.amazonaws.apigatewayv2#UpdateVpcLinkResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.apigatewayv2#BadRequestException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#NotFoundException"
        },
        {
          "target": "com.amazonaws.apigatewayv2#TooManyRequestsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a VPC link.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/v2/vpclinks/{VpcLinkId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.apigatewayv2#UpdateVpcLinkRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#__string",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updates a VPC link.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#UpdateVpcLinkResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the VPC link.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "VpcLinkStatus": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatus"
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the VPC link was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkId"
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name"
          }
        },
        "VpcLinkVersion": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkVersion"
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.apigatewayv2#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>",
            "smithy.api#jsonName": "securityGroupIds"
          }
        },
        "SubnetIds": {
          "target": "com.amazonaws.apigatewayv2#SubnetIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>",
            "smithy.api#jsonName": "subnetIds"
          }
        },
        "VpcLinkStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>A message summarizing the cause of the status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatusMessage"
          }
        }
      }
    },
    "com.amazonaws.apigatewayv2#UriWithLengthBetween1And2048": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A string representation of a URI with a length between [1-2048].</p>"
      }
    },
    "com.amazonaws.apigatewayv2#VpcLink": {
      "type": "structure",
      "members": {
        "VpcLinkId": {
          "target": "com.amazonaws.apigatewayv2#Id",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkId",
            "smithy.api#required": {}
          }
        },
        "CreatedDate": {
          "target": "com.amazonaws.apigatewayv2#__timestampIso8601",
          "traits": {
            "smithy.api#documentation": "<p>The timestamp when the VPC link was created.</p>",
            "smithy.api#jsonName": "createdDate"
          }
        },
        "VpcLinkVersion": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkVersion"
          }
        },
        "VpcLinkStatusMessage": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween0And1024",
          "traits": {
            "smithy.api#documentation": "<p>A message summarizing the cause of the status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatusMessage"
          }
        },
        "Tags": {
          "target": "com.amazonaws.apigatewayv2#Tags",
          "traits": {
            "smithy.api#documentation": "<p>Tags for the VPC link.</p>",
            "smithy.api#jsonName": "tags"
          }
        },
        "SubnetIds": {
          "target": "com.amazonaws.apigatewayv2#SubnetIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnet IDs to include in the VPC link.</p>",
            "smithy.api#jsonName": "subnetIds",
            "smithy.api#required": {}
          }
        },
        "SecurityGroupIds": {
          "target": "com.amazonaws.apigatewayv2#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of security group IDs for the VPC link.</p>",
            "smithy.api#jsonName": "securityGroupIds",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.apigatewayv2#StringWithLengthBetween1And128",
          "traits": {
            "smithy.api#documentation": "<p>The name of the VPC link.</p>",
            "smithy.api#jsonName": "name",
            "smithy.api#required": {}
          }
        },
        "VpcLinkStatus": {
          "target": "com.amazonaws.apigatewayv2#VpcLinkStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the VPC link.</p>",
            "smithy.api#jsonName": "vpcLinkStatus"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a VPC link.</p>"
      }
    },
    "com.amazonaws.apigatewayv2#VpcLinkStatus": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The status of the VPC link.</p>",
        "smithy.api#enum": [
          {
            "value": "PENDING",
            "name": "PENDING"
          },
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "DELETING",
            "name": "DELETING"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "INACTIVE",
            "name": "INACTIVE"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#VpcLinkVersion": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The version of the VPC link.</p>",
        "smithy.api#enum": [
          {
            "value": "V2",
            "name": "V2"
          }
        ]
      }
    },
    "com.amazonaws.apigatewayv2#__boolean": {
      "type": "boolean"
    },
    "com.amazonaws.apigatewayv2#__double": {
      "type": "double"
    },
    "com.amazonaws.apigatewayv2#__integer": {
      "type": "integer"
    },
    "com.amazonaws.apigatewayv2#__listOfApi": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Api"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfApiMapping": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#ApiMapping"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfAuthorizer": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Authorizer"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfDeployment": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Deployment"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfDomainName": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#DomainName"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfIntegration": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Integration"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfIntegrationResponse": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#IntegrationResponse"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfModel": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Model"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfRoute": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Route"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfRouteResponse": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#RouteResponse"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfStage": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#Stage"
      }
    },
    "com.amazonaws.apigatewayv2#__listOfVpcLink": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#VpcLink"
      }
    },
    "com.amazonaws.apigatewayv2#__listOf__string": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.apigatewayv2#__string"
      }
    },
    "com.amazonaws.apigatewayv2#__string": {
      "type": "string"
    },
    "com.amazonaws.apigatewayv2#__timestampIso8601": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    }
  }
}
