{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.servicediscovery#AmazonResourceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1011
        }
      }
    },
    "com.amazonaws.servicediscovery#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.servicediscovery#AttrKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        },
        "smithy.api#pattern": "^[a-zA-Z0-9!-~]+$"
      }
    },
    "com.amazonaws.servicediscovery#AttrValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^([a-zA-Z0-9!-~][ \\ta-zA-Z0-9!-~]*){0,1}[a-zA-Z0-9!-~]{0,1}$"
      }
    },
    "com.amazonaws.servicediscovery#Attributes": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.servicediscovery#AttrKey"
      },
      "value": {
        "target": "com.amazonaws.servicediscovery#AttrValue"
      }
    },
    "com.amazonaws.servicediscovery#Code": {
      "type": "string"
    },
    "com.amazonaws.servicediscovery#CreateHttpNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#CreateHttpNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#CreateHttpNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceAlreadyExists"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an HTTP namespace. Service instances registered using an HTTP namespace can be discovered using a\n    <code>DiscoverInstances</code> request but can't be discovered using DNS.</p>\n         <p>For the current quota on the number of namespaces that you can create using the same Amazon Web Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map\n    quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
        "smithy.api#examples": [
          {
            "title": "CreateHttpNamespace example",
            "documentation": "This example creates an HTTP namespace.",
            "input": {
              "CreatorRequestId": "example-creator-request-id-0001",
              "Name": "example-http.com",
              "Description": "Example.com AWS Cloud Map HTTP Namespace"
            },
            "output": {
              "OperationId": "httpvoqozuhfet5kzxoxg-a-response-example"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#CreateHttpNamespaceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceNameHttp",
          "traits": {
            "smithy.api#documentation": "<p>The name that you want to assign to this namespace.</p>",
            "smithy.api#required": {}
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>CreateHttpNamespace</code>\n   requests to be retried without the risk of running the operation twice. <code>CreatorRequestId</code> can be any\n   unique string (for example, a date/time stamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the namespace.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the namespace. Each tag consists of a key and an optional value that you define.\n   Tags keys can be up to 128 characters in length, and tag values can be up to 256\n                               characters in length.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#CreateHttpNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#CreatePrivateDnsNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#CreatePrivateDnsNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#CreatePrivateDnsNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceAlreadyExists"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a private namespace based on DNS, which is visible only inside a specified Amazon VPC. The\n   namespace defines your service naming scheme. For example, if you name your namespace <code>example.com</code>\n   and name your service <code>backend</code>, the resulting DNS name for the service is\n    <code>backend.example.com</code>. Service instances that are registered using a private DNS namespace can be\n   discovered using either a <code>DiscoverInstances</code> request or using DNS. For the current quota on the\n   number of namespaces that you can create using the same Amazon Web Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the\n    <i>Cloud Map Developer Guide</i>.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Create private DNS namespace",
            "documentation": "Example: Create private DNS namespace",
            "input": {
              "Name": "example.com",
              "Vpc": "vpc-1c56417b",
              "CreatorRequestId": "eedd6892-50f3-41b2-8af9-611d6e1d1a8c"
            },
            "output": {
              "OperationId": "gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#CreatePrivateDnsNamespaceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceNamePrivate",
          "traits": {
            "smithy.api#documentation": "<p>The name that you want to assign to this namespace. When you create a private DNS namespace, Cloud Map\n   automatically creates an Amazon RouteÂ 53 private hosted zone that has the same name as the namespace.</p>",
            "smithy.api#required": {}
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>CreatePrivateDnsNamespace</code>\n   requests to be retried without the risk of running the operation twice. <code>CreatorRequestId</code> can be any\n   unique string (for example, a date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the namespace.</p>"
          }
        },
        "Vpc": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the Amazon VPC that you want to associate the namespace with.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the namespace. Each tag consists of a key and an optional value that you define.\n   Tags keys can be up to 128 characters in length, and tag values can be up to 256\n                               characters in length.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#PrivateDnsNamespaceProperties",
          "traits": {
            "smithy.api#documentation": "<p>Properties for the private DNS\n   namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#CreatePrivateDnsNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#CreatePublicDnsNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#CreatePublicDnsNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#CreatePublicDnsNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceAlreadyExists"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a public namespace based on DNS, which is visible on the internet. The namespace defines your\n   service naming scheme. For example, if you name your namespace <code>example.com</code> and name your service\n    <code>backend</code>, the resulting DNS name for the service is <code>backend.example.com</code>. You can\n   discover instances that were registered with a public DNS namespace by using either a\n    <code>DiscoverInstances</code> request or using DNS. For the current quota on the number of namespaces that you\n   can create using the same Amazon Web Services account, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map quotas</a> in the\n    <i>Cloud Map Developer Guide</i>.</p>\n         <important>\n            <p>The <code>CreatePublicDnsNamespace</code> API operation is not supported in the Amazon Web Services GovCloud (US)\n    Regions.</p>\n         </important>",
        "smithy.api#examples": [
          {
            "title": "CreatePublicDnsNamespace example",
            "documentation": "This example creates a public namespace based on DNS.",
            "input": {
              "CreatorRequestId": "example-creator-request-id-0003",
              "Name": "example-public-dns.com",
              "Description": "Example.com AWS Cloud Map Public DNS Namespace"
            },
            "output": {
              "OperationId": "dns2voqozuhfet5kzxoxg-a-response-example"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#CreatePublicDnsNamespaceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceNamePublic",
          "traits": {
            "smithy.api#documentation": "<p>The name that you want to assign to this namespace.</p>\n         <note>\n            <p>Do not include sensitive information in the name. The name is publicly available using DNS queries.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>CreatePublicDnsNamespace</code>\n   requests to be retried without the risk of running the operation twice. <code>CreatorRequestId</code> can be any\n   unique string (for example, a date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the namespace.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the namespace. Each tag consists of a key and an optional value that you define.\n   Tags keys can be up to 128 characters in length, and tag values can be up to 256\n                               characters in length.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#PublicDnsNamespaceProperties",
          "traits": {
            "smithy.api#documentation": "<p>Properties for the public DNS\n   namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#CreatePublicDnsNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully. To get the status of the\n   operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#CreateService": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#CreateServiceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#CreateServiceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceAlreadyExists"
        },
        {
          "target": "com.amazonaws.servicediscovery#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a service. This action defines the configuration for the following entities:</p>\n         <ul>\n            <li>\n               <p>For public and private DNS namespaces, one of the following combinations of DNS records in\n     Amazon RouteÂ 53:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>A</code>\n                     </p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>AAAA</code>\n                     </p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>A</code> and <code>AAAA</code>\n                     </p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>SRV</code>\n                     </p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>CNAME</code>\n                     </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>Optionally, a health check</p>\n            </li>\n         </ul>\n         <p>After you create the service, you can submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request, and Cloud Map uses the\n   values in the configuration to create the specified entities.</p>\n         <p>For the current quota on the number of instances that you can register using the same namespace and using\n   the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map\n    quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Create service",
            "documentation": "Example: Create service",
            "input": {
              "Name": "myservice",
              "NamespaceId": "ns-ylexjili4cdxy3xm",
              "DnsConfig": {
                "NamespaceId": "ns-ylexjili4cdxy3xm",
                "RoutingPolicy": "MULTIVALUE",
                "DnsRecords": [
                  {
                    "Type": "A",
                    "TTL": 60
                  }
                ]
              },
              "CreatorRequestId": "567c1193-6b00-4308-bd57-ad38a8822d25"
            },
            "output": {
              "Service": {
                "Arn": "arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita",
                "CreateDate": 1.587081768334e9,
                "CreatorRequestId": "567c1193-6b00-4308-bd57-ad38a8822d25",
                "DnsConfig": {
                  "DnsRecords": [
                    {
                      "TTL": 60,
                      "Type": "A"
                    }
                  ],
                  "NamespaceId": "ns-ylexjili4cdxy3xm",
                  "RoutingPolicy": "MULTIVALUE"
                },
                "Id": "srv-p5zdwlg5uvvzjita",
                "Name": "myservice",
                "NamespaceId": "ns-ylexjili4cdxy3xm"
              }
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#CreateServiceRequest": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name that you want to assign to the service.</p>\n         <note>\n            <p>Do not include sensitive information in the name if the namespace is discoverable by public DNS\n    queries.</p>\n         </note>\n         <p>If you want Cloud Map to create an <code>SRV</code> record when you register an instance and you're using\n   a system that requires a specific <code>SRV</code> format, such as <a href=\"http://www.haproxy.org/\">HAProxy</a>, specify the following for <code>Name</code>:</p>\n         <ul>\n            <li>\n               <p>Start the name with an underscore (_), such as <code>_exampleservice</code>.</p>\n            </li>\n            <li>\n               <p>End the name with <i>._protocol</i>, such as <code>._tcp</code>.</p>\n            </li>\n         </ul>\n         <p>When you register an instance, Cloud Map creates an <code>SRV</code> record and assigns a name to the\n   record by concatenating the service name and the namespace name (for example,</p>\n         <p>\n            <code>_exampleservice._tcp.example.com</code>).</p>\n         <note>\n            <p>For services that are accessible by DNS queries, you can't create multiple services with names that differ\n    only by case (such as EXAMPLE and example). Otherwise, these services have the same DNS name and can't be\n    distinguished. However, if you use a namespace that's only accessible by API calls, then you can create\n    services that with names that differ only by case.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "NamespaceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that you want to use to create the service. The namespace ID must be specified, but\n   it can be specified either here or in the <code>DnsConfig</code> object.</p>"
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>CreateService</code> requests to\n   be retried without the risk of running the operation twice. <code>CreatorRequestId</code> can be any unique\n   string (for example, a date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the service.</p>"
          }
        },
        "DnsConfig": {
          "target": "com.amazonaws.servicediscovery#DnsConfig",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the Amazon RouteÂ 53 records that you want Cloud Map to create\n   when you register an instance. </p>"
          }
        },
        "HealthCheckConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckConfig",
          "traits": {
            "smithy.api#documentation": "<p>\n            <i>Public DNS and HTTP namespaces only.</i> A complex type that contains settings for an\n   optional RouteÂ 53 health check. If you specify settings for a health check, Cloud Map associates the health check\n   with all the RouteÂ 53 DNS records that you specify in <code>DnsConfig</code>.</p>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>\n         <p>For information about the charges for health checks, see <a href=\"http://aws.amazon.com/cloud-map/pricing/\">Cloud Map Pricing</a>.</p>"
          }
        },
        "HealthCheckCustomConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckCustomConfig",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about an optional custom health check.</p>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>\n         <p>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration from an existing\n   service.</p>"
          }
        },
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the service. Each tag consists of a key and an optional value that you define.\n   Tags keys can be up to 128 characters in length, and tag values can be up to 256\n                               characters in length.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#ServiceTypeOption",
          "traits": {
            "smithy.api#documentation": "<p>If present, specifies that the service instances are only discoverable using the\n    <code>DiscoverInstances</code> API operation. No DNS records is registered for the service instances. The only\n   valid value is <code>HTTP</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#CreateServiceResponse": {
      "type": "structure",
      "members": {
        "Service": {
          "target": "com.amazonaws.servicediscovery#Service",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the new service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#CustomHealthNotFound": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The health check for the instance that's specified by <code>ServiceId</code> and <code>InstanceId</code>\n   isn't a custom health check. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#CustomHealthStatus": {
      "type": "enum",
      "members": {
        "HEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HEALTHY"
          }
        },
        "UNHEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNHEALTHY"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#DeleteNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DeleteNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DeleteNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a namespace from the current account. If the namespace still contains one or more services, the\n   request fails.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Delete namespace",
            "documentation": "Example: Delete namespace",
            "input": {
              "Id": "ns-ylexjili4cdxy3xm"
            },
            "output": {
              "OperationId": "gv4g5meo7ndmeh4fqskygvk23d2fijwa-k98y6drk"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DeleteNamespaceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that you want to delete.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DeleteNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DeleteService": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DeleteServiceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DeleteServiceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a specified service and all associated service attributes. If the service still contains one or more registered instances, the request\n   fails.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Delete service",
            "documentation": "Example: Delete service",
            "input": {
              "Id": "srv-p5zdwlg5uvvzjita"
            },
            "output": {}
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DeleteServiceAttributes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DeleteServiceAttributesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DeleteServiceAttributesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes specific attributes associated with a service.</p>",
        "smithy.api#examples": [
          {
            "title": "DeleteServiceAttributes example",
            "documentation": "Example: Delete service attribute by providing attribute key and service ID",
            "input": {
              "Attributes": ["port"],
              "ServiceId": "srv-e4anhexample0004"
            },
            "output": {}
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DeleteServiceAttributesRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service from which the attributes will be deleted.</p>",
            "smithy.api#required": {}
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#ServiceAttributeKeyList",
          "traits": {
            "smithy.api#documentation": "<p>A list of keys corresponding to each attribute that you want to delete.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DeleteServiceAttributesResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DeleteServiceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to delete.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DeleteServiceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DeregisterInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DeregisterInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DeregisterInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InstanceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the Amazon RouteÂ 53 DNS records and health check, if any, that Cloud Map created for the specified\n   instance.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Deregister a service instance",
            "documentation": "Example: Deregister a service instance",
            "input": {
              "ServiceId": "srv-p5zdwlg5uvvzjita",
              "InstanceId": "myservice-53"
            },
            "output": {
              "OperationId": "4yejorelbukcjzpnr6tlmrghsjwpngf4-k98rnaiq"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DeregisterInstanceRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that the instance is associated with.</p>",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The value that you specified for <code>Id</code> in the <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DeregisterInstanceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DiscoverInstancesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DiscoverInstancesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#RequestLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Discovers registered instances for a specified namespace and service. You can use\n    <code>DiscoverInstances</code> to discover instances for any type of namespace. <code>DiscoverInstances</code>\n   returns a randomized list of instances allowing customers to distribute traffic evenly across instances. For\n   public and private DNS namespaces, you can also use DNS queries to discover instances.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "data-"
        },
        "smithy.api#examples": [
          {
            "title": "Example: Discover registered instances",
            "documentation": "Example: Discover registered instances",
            "input": {
              "NamespaceName": "example.com",
              "ServiceName": "myservice",
              "MaxResults": 10,
              "HealthStatus": "ALL"
            },
            "output": {
              "Instances": [
                {
                  "Attributes": {
                    "AWS_INSTANCE_IPV4": "172.2.1.3",
                    "AWS_INSTANCE_PORT": "808"
                  },
                  "HealthStatus": "UNKNOWN",
                  "InstanceId": "myservice-53",
                  "NamespaceName": "example.com",
                  "ServiceName": "myservice"
                }
              ]
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstancesRequest": {
      "type": "structure",
      "members": {
        "NamespaceName": {
          "target": "com.amazonaws.servicediscovery#NamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The <code>HttpName</code> name of the namespace. It's found in the <code>HttpProperties</code> member of\n   the <code>Properties</code> member of the namespace. In most cases, <code>Name</code> and <code>HttpName</code>\n   match. However, if you reuse <code>Name</code> for namespace creation, a generated hash is added to\n   <code>HttpName</code> to distinguish the two.</p>",
            "smithy.api#required": {}
          }
        },
        "ServiceName": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the service that you specified when you registered the instance.</p>",
            "smithy.api#required": {}
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#DiscoverMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of instances that you want Cloud Map to return in the response to a\n    <code>DiscoverInstances</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map\n   returns up to 100 instances.</p>"
          }
        },
        "QueryParameters": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>Filters to scope the results based on custom attributes for the instance (for example, <code>{version=v1,\n    az=1a}</code>). Only instances that match all the specified key-value pairs are returned.</p>"
          }
        },
        "OptionalParameters": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>Opportunistic filters to scope the results based on custom attributes. If there are instances that match\n   both the filters specified in both the <code>QueryParameters</code> parameter and this parameter, all of these\n   instances are returned. Otherwise, the filters are ignored, and only instances that match the filters that are\n   specified in the <code>QueryParameters</code> parameter are returned.</p>"
          }
        },
        "HealthStatus": {
          "target": "com.amazonaws.servicediscovery#HealthStatusFilter",
          "traits": {
            "smithy.api#documentation": "<p>The health status of the instances that you want to discover. This parameter is ignored for services that\n   don't have a health check configured, and\n   all\n   instances are returned.</p>\n         <dl>\n            <dt>HEALTHY</dt>\n            <dd>\n               <p>Returns healthy instances.</p>\n            </dd>\n            <dt>UNHEALTHY</dt>\n            <dd>\n               <p>Returns unhealthy instances.</p>\n            </dd>\n            <dt>ALL</dt>\n            <dd>\n               <p>Returns all instances.</p>\n            </dd>\n            <dt>HEALTHY_OR_ELSE_ALL</dt>\n            <dd>\n               <p>Returns healthy instances, unless none are reporting a healthy state. In that case, return all\n      instances. This is also called failing open.</p>\n            </dd>\n         </dl>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstancesResponse": {
      "type": "structure",
      "members": {
        "Instances": {
          "target": "com.amazonaws.servicediscovery#HttpInstanceSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains one <code>HttpInstanceSummary</code> for each registered instance.</p>"
          }
        },
        "InstancesRevision": {
          "target": "com.amazonaws.servicediscovery#Revision",
          "traits": {
            "smithy.api#documentation": "<p>The increasing revision associated to the response Instances list. If a new instance is registered or\n   deregistered, the <code>InstancesRevision</code> updates. The health status updates don't update\n    <code>InstancesRevision</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstancesRevision": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#DiscoverInstancesRevisionRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#DiscoverInstancesRevisionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#RequestLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Discovers the increasing revision associated with an instance.</p>",
        "smithy.api#endpoint": {
          "hostPrefix": "data-"
        },
        "smithy.api#examples": [
          {
            "title": "To discover the revision for a registered instance",
            "documentation": "The following example discovers the revision ID for a registered instance.",
            "input": {
              "NamespaceName": "example-namespace",
              "ServiceName": "example-service"
            },
            "output": {
              "InstancesRevision": 123456
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstancesRevisionRequest": {
      "type": "structure",
      "members": {
        "NamespaceName": {
          "target": "com.amazonaws.servicediscovery#NamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The <code>HttpName</code> name of the namespace. It's found in the <code>HttpProperties</code> member of\n   the <code>Properties</code> member of the namespace.</p>",
            "smithy.api#required": {}
          }
        },
        "ServiceName": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the service that you specified when you registered the instance.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#DiscoverInstancesRevisionResponse": {
      "type": "structure",
      "members": {
        "InstancesRevision": {
          "target": "com.amazonaws.servicediscovery#Revision",
          "traits": {
            "smithy.api#documentation": "<p>The increasing revision associated to the response Instances list. If a new instance is registered or\n   deregistered, the <code>InstancesRevision</code> updates. The health status updates don't update\n    <code>InstancesRevision</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#DiscoverMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.servicediscovery#DnsConfig": {
      "type": "structure",
      "members": {
        "NamespaceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Top level attribute in request should be used to reference namespace-id"
            },
            "smithy.api#documentation": "<p>\n            <i>Use\n    NamespaceId in <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_Service.html\">Service</a>\n    instead.</i>\n         </p>\n         <p>The ID of the namespace to use for DNS configuration.</p>"
          }
        },
        "RoutingPolicy": {
          "target": "com.amazonaws.servicediscovery#RoutingPolicy",
          "traits": {
            "smithy.api#documentation": "<p>The routing policy that you want to apply to all RouteÂ 53 DNS records that Cloud Map creates when you\n   register an instance and specify this service.</p>\n         <note>\n            <p>If you want to use this service to register instances that create alias records, specify\n     <code>WEIGHTED</code> for the routing policy.</p>\n         </note>\n         <p>You can specify the following values:</p>\n         <dl>\n            <dt>MULTIVALUE</dt>\n            <dd>\n               <p>If you define a health check for the service and the health check is healthy, RouteÂ 53 returns the\n      applicable value for up to eight instances.</p>\n               <p>For example, suppose that the service includes configurations for one <code>A</code> record and a health\n      check. You use the service to register 10 instances. RouteÂ 53 responds to DNS queries with IP addresses for up\n      to eight healthy instances. If fewer than eight instances are healthy, RouteÂ 53 responds to every DNS query with\n      the IP addresses for all of the healthy instances.</p>\n               <p>If you don't define a health check for the service, RouteÂ 53 assumes that all instances are healthy and\n      returns the values for up to eight instances.</p>\n               <p>For more information about the multivalue routing policy, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-multivalue\">Multivalue Answer\n       Routing</a> in the <i>RouteÂ 53 Developer Guide</i>.</p>\n            </dd>\n            <dt>WEIGHTED</dt>\n            <dd>\n               <p>RouteÂ 53 returns the applicable value from one randomly selected instance from among the instances that you\n      registered using the same service. Currently, all records have the same weight, so you can't route more or\n      less traffic to any instances.</p>\n               <p>For example, suppose that the service includes configurations for one <code>A</code> record and a health\n      check. You use the service to register 10 instances. RouteÂ 53 responds to DNS queries with the IP address for\n      one randomly selected instance from among the healthy instances. If no instances are healthy, RouteÂ 53 responds\n      to DNS queries as if all of the instances were healthy.</p>\n               <p>If you don't define a health check for the service, RouteÂ 53 assumes that all instances are healthy and\n      returns the applicable value for one randomly selected instance.</p>\n               <p>For more information about the weighted routing policy, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted\">Weighted Routing</a> in\n      the <i>RouteÂ 53 Developer Guide</i>.</p>\n            </dd>\n         </dl>"
          }
        },
        "DnsRecords": {
          "target": "com.amazonaws.servicediscovery#DnsRecordList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains one <code>DnsRecord</code> object for each RouteÂ 53 DNS record that you want Cloud Map\n   to create when you register an instance.</p>\n         <important>\n            <p>The record type of a service specified in a <code>DnsRecord</code> object can't be updated. To change a record type, you need to delete the service and recreate it with a new\n    <code>DnsConfig</code>.</p>\n         </important>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about the Amazon RouteÂ 53 DNS records that you want Cloud Map to create\n   when you register an instance.</p>"
      }
    },
    "com.amazonaws.servicediscovery#DnsConfigChange": {
      "type": "structure",
      "members": {
        "DnsRecords": {
          "target": "com.amazonaws.servicediscovery#DnsRecordList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains one <code>DnsRecord</code> object for each RouteÂ 53 record that you want Cloud Map to\n   create when you register an instance.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about changes to the RouteÂ 53 DNS records that Cloud Map creates\n   when you register an instance.</p>"
      }
    },
    "com.amazonaws.servicediscovery#DnsProperties": {
      "type": "structure",
      "members": {
        "HostedZoneId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for the RouteÂ 53 hosted zone that Cloud Map creates when you create a namespace.</p>"
          }
        },
        "SOA": {
          "target": "com.amazonaws.servicediscovery#SOA",
          "traits": {
            "smithy.api#documentation": "<p>Start of Authority (SOA) record for the hosted zone.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains the ID for the RouteÂ 53 hosted zone that Cloud Map creates when you create a\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#DnsRecord": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.servicediscovery#RecordType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the resource, which indicates the type of value that RouteÂ 53 returns in response to DNS queries.\n   You can specify values for <code>Type</code> in the following combinations:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>\n                     <code>A</code>\n                  </b>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>AAAA</code>\n                  </b>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>A</code>\n                  </b> and <b>\n                     <code>AAAA</code>\n                  </b>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>SRV</code>\n                  </b>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <b>\n                     <code>CNAME</code>\n                  </b>\n               </p>\n            </li>\n         </ul>\n         <p>If you want Cloud Map to create a RouteÂ 53 alias record when you register an instance, specify <code>A</code>\n   or <code>AAAA</code> for <code>Type</code>.</p>\n         <p>You specify other settings, such as the IP address for <code>A</code> and <code>AAAA</code> records, when\n   you register an instance. For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a>.</p>\n         <p>The following values are supported:</p>\n         <dl>\n            <dt>A</dt>\n            <dd>\n               <p>RouteÂ 53 returns the IP address of the resource in IPv4 format, such as 192.0.2.44.</p>\n            </dd>\n            <dt>AAAA</dt>\n            <dd>\n               <p>RouteÂ 53 returns the IP address of the resource in IPv6 format, such as\n      2001:0db8:85a3:0000:0000:abcd:0001:2345.</p>\n            </dd>\n            <dt>CNAME</dt>\n            <dd>\n               <p>RouteÂ 53 returns the domain name of the resource, such as www.example.com. Note the following:</p>\n               <ul>\n                  <li>\n                     <p>You specify the domain name that you want to route traffic to when you register an instance. For more\n        information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#cloudmap-RegisterInstance-request-Attributes\">Attributes</a> in the topic <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a>.</p>\n                  </li>\n                  <li>\n                     <p>You must specify <code>WEIGHTED</code> for the value of <code>RoutingPolicy</code>.</p>\n                  </li>\n                  <li>\n                     <p>You can't specify both <code>CNAME</code> for <code>Type</code> and settings for\n         <code>HealthCheckConfig</code>. If you do, the request will fail with an <code>InvalidInput</code>\n        error.</p>\n                  </li>\n               </ul>\n            </dd>\n            <dt>SRV</dt>\n            <dd>\n               <p>RouteÂ 53 returns the value for an <code>SRV</code> record. The value for an <code>SRV</code> record uses\n      the following values:</p>\n               <p>\n                  <code>priority weight port service-hostname</code>\n               </p>\n               <p>Note the following about the values:</p>\n               <ul>\n                  <li>\n                     <p>The values of <code>priority</code> and <code>weight</code> are both set to <code>1</code> and can't\n        be changed. </p>\n                  </li>\n                  <li>\n                     <p>The value of <code>port</code> comes from the value that you specify for the\n         <code>AWS_INSTANCE_PORT</code> attribute when you submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request.</p>\n                  </li>\n                  <li>\n                     <p>The value of <code>service-hostname</code> is a concatenation of the following values:</p>\n                     <ul>\n                        <li>\n                           <p>The value that you specify for <code>InstanceId</code> when you register an instance.</p>\n                        </li>\n                        <li>\n                           <p>The name of the service.</p>\n                        </li>\n                        <li>\n                           <p>The name of the namespace. </p>\n                        </li>\n                     </ul>\n                     <p>For example, if the value of <code>InstanceId</code> is <code>test</code>, the name of the service is\n         <code>backend</code>, and the name of the namespace is <code>example.com</code>, the value of\n         <code>service-hostname</code> is the following:</p>\n                     <p>\n                        <code>test.backend.example.com</code>\n                     </p>\n                  </li>\n               </ul>\n               <p>If you specify settings for an <code>SRV</code> record, note the following:</p>\n               <ul>\n                  <li>\n                     <p>If you specify values for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>, or both in\n        the <code>RegisterInstance</code> request, Cloud Map automatically creates <code>A</code> and/or\n         <code>AAAA</code> records that have the same name as the value of <code>service-hostname</code> in the\n         <code>SRV</code> record. You can ignore these records.</p>\n                  </li>\n                  <li>\n                     <p>If you're using a system that requires a specific <code>SRV</code> format, such as HAProxy, see the\n         <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html#cloudmap-CreateService-request-Name\">Name</a> element\n        in the documentation about <code>CreateService</code> for information about how to specify the correct name\n        format.</p>\n                  </li>\n               </ul>\n            </dd>\n         </dl>",
            "smithy.api#required": {}
          }
        },
        "TTL": {
          "target": "com.amazonaws.servicediscovery#RecordTTL",
          "traits": {
            "smithy.api#documentation": "<p>The amount of time, in seconds, that you want DNS resolvers to cache the settings for this record.</p>\n         <note>\n            <p>Alias records don't include a TTL because RouteÂ 53 uses the TTL for the Amazon Web Services resource that an alias record\n    routes traffic to. If you include the <code>AWS_ALIAS_DNS_NAME</code> attribute when you submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html\">RegisterInstance</a> request,\n    the <code>TTL</code> value is ignored. Always specify a TTL for the service; you can use a service to register\n    instances that create either alias or non-alias records.</p>\n         </note>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about the RouteÂ 53 DNS records that you want Cloud Map to create\n   when you register an instance.</p>"
      }
    },
    "com.amazonaws.servicediscovery#DnsRecordList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#DnsRecord"
      }
    },
    "com.amazonaws.servicediscovery#DuplicateRequest": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        },
        "DuplicateOperationId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the operation that's already in progress.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation is already in progress.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.servicediscovery#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.servicediscovery#FailureThreshold": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.servicediscovery#FilterCondition": {
      "type": "enum",
      "members": {
        "EQ": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "EQ"
          }
        },
        "IN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "IN"
          }
        },
        "BETWEEN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BETWEEN"
          }
        },
        "BEGINS_WITH": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "BEGINS_WITH"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#FilterValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        }
      }
    },
    "com.amazonaws.servicediscovery#FilterValues": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#FilterValue",
        "traits": {
          "smithy.api#xmlName": "item"
        }
      }
    },
    "com.amazonaws.servicediscovery#GetInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InstanceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a specified instance.</p>",
        "smithy.api#examples": [
          {
            "title": "GetInstance example",
            "documentation": "This example gets information about a specified instance.",
            "input": {
              "InstanceId": "i-abcd1234",
              "ServiceId": "srv-e4anhexample0004"
            },
            "output": {
              "Instance": {
                "Id": "i-abcd1234",
                "Attributes": {
                  "AWS_INSTANCE_IPV4": "192.0.2.44",
                  "AWS_INSTANCE_PORT": "80",
                  "color": "green",
                  "region": "us-west-2",
                  "stage": "beta"
                }
              }
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#GetInstanceRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that the instance is associated with.</p>",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the instance that you want to get information about.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetInstanceResponse": {
      "type": "structure",
      "members": {
        "Instance": {
          "target": "com.amazonaws.servicediscovery#Instance",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about a specified instance.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#GetInstancesHealthStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetInstancesHealthStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetInstancesHealthStatusResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InstanceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the current health status (<code>Healthy</code>, <code>Unhealthy</code>, or <code>Unknown</code>) of\n   one or more instances that are associated with a specified service.</p>\n         <note>\n            <p>There's a brief delay between when you register an instance and when the health status for the instance is\n    available. </p>\n         </note>",
        "smithy.api#examples": [
          {
            "title": "GetInstancesHealthStatus example",
            "documentation": "This example gets the current health status of one or more instances that are associate with a specified service.",
            "input": {
              "ServiceId": "srv-e4anhexample0004"
            },
            "output": {
              "Status": {
                "i-abcd1234": "HEALTHY",
                "i-abcd1235": "UNHEALTHY"
              }
            }
          }
        ],
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.servicediscovery#GetInstancesHealthStatusRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that the instance is associated with.</p>",
            "smithy.api#required": {}
          }
        },
        "Instances": {
          "target": "com.amazonaws.servicediscovery#InstanceIdList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains the IDs of all the instances that you want to get the health status for.</p>\n         <p>If you omit <code>Instances</code>, Cloud Map returns the health status for all the instances that are\n   associated with the specified service.</p>\n         <note>\n            <p>To get the IDs for the instances that you've registered by using a specified service, submit a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListInstances.html\">ListInstances</a> request.</p>\n         </note>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of instances that you want Cloud Map to return in the response to a\n    <code>GetInstancesHealthStatus</code> request. If you don't specify a value for <code>MaxResults</code>,\n   Cloud Map returns up to 100 instances.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>For the first <code>GetInstancesHealthStatus</code> request, omit this value.</p>\n         <p>If more than <code>MaxResults</code> instances match the specified criteria, you can submit another\n    <code>GetInstancesHealthStatus</code> request to get the next group of results. Specify the value of\n    <code>NextToken</code> from the previous response in the next request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetInstancesHealthStatusResponse": {
      "type": "structure",
      "members": {
        "Status": {
          "target": "com.amazonaws.servicediscovery#InstanceHealthStatusMap",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains the IDs and the health status of the instances that you specified in the\n    <code>GetInstancesHealthStatus</code> request.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If more than <code>MaxResults</code> instances match the specified criteria, you can submit another\n    <code>GetInstancesHealthStatus</code> request to get the next group of results. Specify the value of\n    <code>NextToken</code> from the previous response in the next request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#GetNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about a namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#GetNamespaceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that you want to get information about.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetNamespaceResponse": {
      "type": "structure",
      "members": {
        "Namespace": {
          "target": "com.amazonaws.servicediscovery#Namespace",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the specified namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#GetOperation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetOperationRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetOperationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#OperationNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets information about any operation that returns an operation ID in the response, such as a\n    <code>CreateHttpNamespace</code> request.</p>\n         <note>\n            <p>To get a list of operations that match specified criteria, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html\">ListOperations</a>.</p>\n         </note>",
        "smithy.api#examples": [
          {
            "title": "Example: Get operation result",
            "documentation": "Example: Get operation result",
            "input": {
              "OperationId": "gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd"
            },
            "output": {
              "Operation": {
                "CreateDate": 1.587055860121e9,
                "Id": "gv4g5meo7ndmeh4fqskygvk23d2fijwa-k9302yzd",
                "Status": "SUCCESS",
                "Targets": {
                  "NAMESPACE": "ns-ylexjili4cdxy3xm"
                },
                "Type": "CREATE_NAMESPACE",
                "UpdateDate": 1.587055900469e9
              }
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#GetOperationRequest": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the operation that you want to get more information about.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetOperationResponse": {
      "type": "structure",
      "members": {
        "Operation": {
          "target": "com.amazonaws.servicediscovery#Operation",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the operation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#GetService": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetServiceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetServiceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Gets the settings for a specified service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#GetServiceAttributes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#GetServiceAttributesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#GetServiceAttributesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the attributes associated with a specified service.</p>",
        "smithy.api#examples": [
          {
            "title": "GetServiceAttributes Example",
            "documentation": "This example gets the attributes for a specified service.",
            "input": {
              "ServiceId": "srv-e4anhexample0004"
            },
            "output": {
              "ServiceAttributes": {
                "Attributes": {
                  "port": "80"
                },
                "ServiceArn": "arn:aws:servicediscovery:us-west-2:123456789012:service/srv-e4anhexample0004"
              }
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#GetServiceAttributesRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to get attributes for.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetServiceAttributesResponse": {
      "type": "structure",
      "members": {
        "ServiceAttributes": {
          "target": "com.amazonaws.servicediscovery#ServiceAttributes",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains the service ARN and a list of attribute key-value pairs associated with the service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#GetServiceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to get settings for.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#GetServiceResponse": {
      "type": "structure",
      "members": {
        "Service": {
          "target": "com.amazonaws.servicediscovery#Service",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#HealthCheckConfig": {
      "type": "structure",
      "members": {
        "Type": {
          "target": "com.amazonaws.servicediscovery#HealthCheckType",
          "traits": {
            "smithy.api#documentation": "<p>The type of health check that you want to create, which indicates how RouteÂ 53 determines whether an endpoint\n   is healthy.</p>\n         <important>\n            <p>You can't change the value of <code>Type</code> after you create a health check.</p>\n         </important>\n         <p>You can create the following types of health checks:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>HTTP</b>: RouteÂ 53 tries to establish a TCP connection. If successful, RouteÂ 53\n     submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.</p>\n            </li>\n            <li>\n               <p>\n                  <b>HTTPS</b>: RouteÂ 53 tries to establish a TCP connection. If successful, RouteÂ 53\n     submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.</p>\n               <important>\n                  <p>If you specify HTTPS for the value of <code>Type</code>, the endpoint must support TLS v1.0 or\n      later.</p>\n               </important>\n            </li>\n            <li>\n               <p>\n                  <b>TCP</b>: RouteÂ 53 tries to establish a TCP connection.</p>\n               <p>If you specify <code>TCP</code> for <code>Type</code>, don't specify a value for\n      <code>ResourcePath</code>.</p>\n            </li>\n         </ul>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html\">How RouteÂ 53 Determines\n    Whether an Endpoint Is Healthy</a> in the <i>RouteÂ 53 Developer Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "ResourcePath": {
          "target": "com.amazonaws.servicediscovery#ResourcePath",
          "traits": {
            "smithy.api#documentation": "<p>The path that you want RouteÂ 53 to request when performing health checks. The path can be any value that your\n   endpoint returns an HTTP status code of a 2xx or 3xx format for when the endpoint is healthy. An example file is\n    <code>/docs/route53-health-check.html</code>. RouteÂ 53 automatically adds the DNS name for the service. If you\n   don't specify a value for <code>ResourcePath</code>, the default value is <code>/</code>.</p>\n         <p>If you specify <code>TCP</code> for <code>Type</code>, you must <i>not</i> specify a value\n   for <code>ResourcePath</code>.</p>"
          }
        },
        "FailureThreshold": {
          "target": "com.amazonaws.servicediscovery#FailureThreshold",
          "traits": {
            "smithy.api#documentation": "<p>The number of consecutive health checks that an endpoint must pass or fail for RouteÂ 53 to change the current\n   status of the endpoint from unhealthy to healthy or the other way around. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html\">How\n    RouteÂ 53 Determines Whether an Endpoint Is Healthy</a> in the <i>RouteÂ 53 Developer Guide</i>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n            <i>Public DNS and HTTP namespaces only.</i> A complex type that contains settings for an\n   optional health check. If you specify settings for a health check, Cloud Map associates the health check with\n   the records that you specify in <code>DnsConfig</code>.</p>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>\n         <p>Health checks are basic RouteÂ 53 health checks that monitor an Amazon Web Services endpoint. For information\n   about pricing for health checks, see <a href=\"http://aws.amazon.com/route53/pricing/\">Amazon RouteÂ 53\n   Pricing</a>.</p>\n         <p>Note the following about configuring health checks.</p>\n         <dl>\n            <dt>A and AAAA records</dt>\n            <dd>\n               <p>If <code>DnsConfig</code> includes configurations for both <code>A</code> and <code>AAAA</code> records,\n      Cloud Map creates a health check that uses the IPv4 address to check the health of the resource. If the\n      endpoint tthat's specified by the IPv4 address is unhealthy, RouteÂ 53 considers both the <code>A</code> and\n       <code>AAAA</code> records to be unhealthy. </p>\n            </dd>\n            <dt>CNAME records</dt>\n            <dd>\n               <p>You can't specify settings for <code>HealthCheckConfig</code> when the <code>DNSConfig</code> includes\n       <code>CNAME</code> for the value of <code>Type</code>. If you do, the <code>CreateService</code> request\n      will fail with an <code>InvalidInput</code> error.</p>\n            </dd>\n            <dt>Request interval</dt>\n            <dd>\n               <p>A RouteÂ 53 health checker in each health-checking Amazon Web Services Region sends a health check request to an endpoint\n      every 30 seconds. On average, your endpoint receives a health check request about every two seconds. However,\n      health checkers don't coordinate with one another. Therefore, you might sometimes see several requests in one\n      second that's followed by a few seconds with no health checks at all.</p>\n            </dd>\n            <dt>Health checking regions</dt>\n            <dd>\n               <p>Health checkers perform checks from all RouteÂ 53 health-checking Regions. For a list of the current\n      Regions, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-Regions\">Regions</a>.</p>\n            </dd>\n            <dt>Alias records</dt>\n            <dd>\n               <p>When you register an instance, if you include the <code>AWS_ALIAS_DNS_NAME</code> attribute, Cloud Map\n      creates a RouteÂ 53 alias record. Note the following:</p>\n               <ul>\n                  <li>\n                     <p>RouteÂ 53 automatically sets <code>EvaluateTargetHealth</code> to true for alias records. When\n         <code>EvaluateTargetHealth</code> is true, the alias record inherits the health of the referenced Amazon Web Services\n        resource. such as an ELB load balancer. For more information, see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html#Route53-Type-AliasTarget-EvaluateTargetHealth\">EvaluateTargetHealth</a>.</p>\n                  </li>\n                  <li>\n                     <p>If you include <code>HealthCheckConfig</code> and then use the service to register an instance that\n        creates an alias record, RouteÂ 53 doesn't create the health check.</p>\n                  </li>\n               </ul>\n            </dd>\n            <dt>Charges for health checks</dt>\n            <dd>\n               <p>Health checks are basic RouteÂ 53 health checks that monitor an Amazon Web Services endpoint. For information about\n      pricing for health checks, see <a href=\"http://aws.amazon.com/route53/pricing/\">Amazon RouteÂ 53\n      Pricing</a>.</p>\n            </dd>\n         </dl>"
      }
    },
    "com.amazonaws.servicediscovery#HealthCheckCustomConfig": {
      "type": "structure",
      "members": {
        "FailureThreshold": {
          "target": "com.amazonaws.servicediscovery#FailureThreshold",
          "traits": {
            "smithy.api#deprecated": {
              "message": "Configurable FailureThreshold of HealthCheckCustomConfig is deprecated.  It will always have value 1."
            },
            "smithy.api#documentation": "<important>\n            <p>This parameter is no longer supported and is always set to 1. Cloud Map waits for approximately 30 seconds\n    after receiving an <code>UpdateInstanceCustomHealthStatus</code> request before changing the status of the\n    service instance.</p>\n         </important>\n         <p>The number of 30-second intervals that you want Cloud Map to wait after receiving an\n    <code>UpdateInstanceCustomHealthStatus</code> request before it changes the health status of a service\n   instance.</p>\n         <p>Sending a second or subsequent <code>UpdateInstanceCustomHealthStatus</code> request with the same value\n   before 30 seconds has passed doesn't accelerate the change. Cloud Map still waits <code>30</code> seconds after the\n   first request to make the change.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about an optional custom health check. A custom health check,\n   which requires that you use a third-party health checker to evaluate the health of your resources, is useful in\n   the following circumstances:</p>\n         <ul>\n            <li>\n               <p>You can't use a health check that's defined by <code>HealthCheckConfig</code> because the resource isn't\n     available over the internet. For example, you can use a custom health check when the instance is in an Amazon\n     VPC. (To check the health of resources in a VPC, the health checker must also be in the VPC.)</p>\n            </li>\n            <li>\n               <p>You want to use a third-party health checker regardless of where your resources are located.</p>\n            </li>\n         </ul>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>\n         <p>To change the status of a custom health check, submit an <code>UpdateInstanceCustomHealthStatus</code>\n   request. Cloud Map doesn't monitor the status of the resource, it just keeps a record of the status specified in\n   the most recent <code>UpdateInstanceCustomHealthStatus</code> request.</p>\n         <p>Here's how custom health checks work:</p>\n         <ol>\n            <li>\n               <p>You create a service.</p>\n            </li>\n            <li>\n               <p>You register an instance.</p>\n            </li>\n            <li>\n               <p>You configure a third-party health checker to monitor the resource that's associated with the new\n     instance. </p>\n               <note>\n                  <p>Cloud Map doesn't check the health of the resource directly. </p>\n               </note>\n            </li>\n            <li>\n               <p>The third-party health-checker determines that the resource is unhealthy and notifies your\n     application.</p>\n            </li>\n            <li>\n               <p>Your application submits an <code>UpdateInstanceCustomHealthStatus</code> request.</p>\n            </li>\n            <li>\n               <p>Cloud Map waits for 30 seconds.</p>\n            </li>\n            <li>\n               <p>If another <code>UpdateInstanceCustomHealthStatus</code> request doesn't arrive during that time to\n     change the status back to healthy, Cloud Map stops routing traffic to the resource.</p>\n            </li>\n         </ol>"
      }
    },
    "com.amazonaws.servicediscovery#HealthCheckType": {
      "type": "enum",
      "members": {
        "HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP"
          }
        },
        "HTTPS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTPS"
          }
        },
        "TCP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TCP"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#HealthStatus": {
      "type": "enum",
      "members": {
        "HEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HEALTHY"
          }
        },
        "UNHEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNHEALTHY"
          }
        },
        "UNKNOWN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNKNOWN"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#HealthStatusFilter": {
      "type": "enum",
      "members": {
        "HEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HEALTHY"
          }
        },
        "UNHEALTHY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNHEALTHY"
          }
        },
        "ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ALL"
          }
        },
        "HEALTHY_OR_ELSE_ALL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HEALTHY_OR_ELSE_ALL"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#HttpInstanceSummary": {
      "type": "structure",
      "members": {
        "InstanceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of an instance that matches the values that you specified in the request.</p>"
          }
        },
        "NamespaceName": {
          "target": "com.amazonaws.servicediscovery#NamespaceNameHttp",
          "traits": {
            "smithy.api#documentation": "<p>\n            <code></code>\n            <code></code>\n            <code></code>\n         </p>\n         <p>The <code>HttpName</code> name of the namespace. It's found in the <code>HttpProperties</code> member of\n   the <code>Properties</code> member of the namespace.</p>"
          }
        },
        "ServiceName": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the service that you specified when you registered the instance.</p>"
          }
        },
        "HealthStatus": {
          "target": "com.amazonaws.servicediscovery#HealthStatus",
          "traits": {
            "smithy.api#documentation": "<p>If you configured health checking in the service, the current health status of the service instance.</p>"
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>If you included any attributes when you registered the instance, the values of those attributes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>In a response to a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DiscoverInstances.html\">DiscoverInstances</a> request, <code>HttpInstanceSummary</code> contains information about one instance\n   that matches the values that you specified in the request.</p>"
      }
    },
    "com.amazonaws.servicediscovery#HttpInstanceSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#HttpInstanceSummary"
      }
    },
    "com.amazonaws.servicediscovery#HttpNamespaceChange": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>An updated description for the HTTP\n   namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated properties for the HTTP\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#HttpProperties": {
      "type": "structure",
      "members": {
        "HttpName": {
          "target": "com.amazonaws.servicediscovery#NamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of an HTTP namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains the name of an HTTP namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#Instance": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>An identifier that you want to associate with the instance. Note the following:</p>\n         <ul>\n            <li>\n               <p>If the service that's specified by <code>ServiceId</code> includes settings for an <code>SRV</code>\n     record, the value of <code>InstanceId</code> is automatically included as part of the value for the\n      <code>SRV</code> record. For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DnsRecord.html#cloudmap-Type-DnsRecord-Type\">DnsRecord > Type</a>.</p>\n            </li>\n            <li>\n               <p>You can use this value to update an existing instance.</p>\n            </li>\n            <li>\n               <p>To register a new instance, you must specify a value that's unique among instances that you register by\n     using the same service. </p>\n            </li>\n            <li>\n               <p>If you specify an existing <code>InstanceId</code> and <code>ServiceId</code>, Cloud Map updates the\n     existing DNS records. If there's also an existing health check, Cloud Map deletes the old health check and\n     creates a new one. </p>\n               <note>\n                  <p>The health check isn't deleted immediately, so it will still appear for a while if you submit a\n       <code>ListHealthChecks</code> request, for example.</p>\n               </note>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>RegisterInstance</code> requests\n   to be retried without the risk of executing the operation twice. You must use a unique\n    <code>CreatorRequestId</code> string every time you submit a <code>RegisterInstance</code> request if you're\n   registering additional instances for the same namespace and service. <code>CreatorRequestId</code> can be any\n   unique string (for example, a date/time stamp).</p>"
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>A string map that contains the following information for the service that you specify in\n    <code>ServiceId</code>:</p>\n         <ul>\n            <li>\n               <p>The attributes that apply to the records that are defined in the service. </p>\n            </li>\n            <li>\n               <p>For each attribute, the applicable value.</p>\n            </li>\n         </ul>\n         <note>\n            <p>Do not include sensitive information in the attributes if the namespace is discoverable by public DNS\n    queries.</p>\n         </note>\n         <p>Supported attribute keys include the following:</p>\n         <dl>\n            <dt>AWS_ALIAS_DNS_NAME</dt>\n            <dd>\n               <p>If you want Cloud Map to create a RouteÂ 53 alias record that routes traffic to an Elastic Load Balancing load balancer,\n      specify the DNS name that's associated with the load balancer. For information about how to get the DNS name,\n      see <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html#Route53-Type-AliasTarget-DNSName\">AliasTarget->DNSName</a> in the <i>RouteÂ 53 API Reference</i>.</p>\n               <p>Note the following:</p>\n               <ul>\n                  <li>\n                     <p>The configuration for the service that's specified by <code>ServiceId</code> must include settings for\n        an <code>A</code> record, an <code>AAAA</code> record, or both.</p>\n                  </li>\n                  <li>\n                     <p>In the service that's specified by <code>ServiceId</code>, the value of <code>RoutingPolicy</code>\n        must be <code>WEIGHTED</code>.</p>\n                  </li>\n                  <li>\n                     <p>If the service that's specified by <code>ServiceId</code> includes <code>HealthCheckConfig</code>\n        settings, Cloud Map creates the health check, but it won't associate the health check with the alias\n        record.</p>\n                  </li>\n                  <li>\n                     <p>Auto naming currently doesn't support creating alias records that route traffic to Amazon Web Services resources\n        other than ELB load balancers.</p>\n                  </li>\n                  <li>\n                     <p>If you specify a value for <code>AWS_ALIAS_DNS_NAME</code>, don't specify values for any of the\n         <code>AWS_INSTANCE</code> attributes.</p>\n                  </li>\n               </ul>\n            </dd>\n            <dt>AWS_EC2_INSTANCE_ID</dt>\n            <dd>\n               <p>\n                  <i>HTTP namespaces only.</i> The Amazon EC2 instance ID for the instance. The\n       <code>AWS_INSTANCE_IPV4</code> attribute contains the primary private IPv4 address.</p>\n            </dd>\n            <dt>AWS_INIT_HEALTH_STATUS</dt>\n            <dd>\n               <p>If the service configuration includes <code>HealthCheckCustomConfig</code>, you can optionally use\n       <code>AWS_INIT_HEALTH_STATUS</code> to specify the initial status of the custom health check,\n       <code>HEALTHY</code> or <code>UNHEALTHY</code>. If you don't specify a value for\n       <code>AWS_INIT_HEALTH_STATUS</code>, the initial status is <code>HEALTHY</code>.</p>\n            </dd>\n            <dt>AWS_INSTANCE_CNAME</dt>\n            <dd>\n               <p>If the service configuration includes a <code>CNAME</code> record, the domain name that you want RouteÂ 53\n      to return in response to DNS queries (for example, <code>example.com</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>CNAME</code> record.</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV4</dt>\n            <dd>\n               <p>If the service configuration includes an <code>A</code> record, the IPv4 address that you want RouteÂ 53 to\n      return in response to DNS queries (for example, <code>192.0.2.44</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>A</code> record. If the service includes settings for an <code>SRV</code> record, you must specify a\n      value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>, or both.</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV6</dt>\n            <dd>\n               <p>If the service configuration includes an <code>AAAA</code> record, the IPv6 address that you want RouteÂ 53\n      to return in response to DNS queries (for example,\n      <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>AAAA</code> record. If the service includes settings for an <code>SRV</code> record, you must specify\n      a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>, or both.</p>\n            </dd>\n            <dt>AWS_INSTANCE_PORT</dt>\n            <dd>\n               <p>If the service includes an <code>SRV</code> record, the value that you want RouteÂ 53 to return for the\n      port.</p>\n               <p>If the service includes <code>HealthCheckConfig</code>, the port on the endpoint that you want RouteÂ 53 to\n      send requests to. </p>\n               <p>This value is required if you specified settings for an <code>SRV</code> record or a RouteÂ 53 health check\n      when you created the service.</p>\n            </dd>\n         </dl>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about an instance that Cloud Map creates when you submit a\n    <code>RegisterInstance</code> request.</p>"
      }
    },
    "com.amazonaws.servicediscovery#InstanceHealthStatusMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.servicediscovery#ResourceId"
      },
      "value": {
        "target": "com.amazonaws.servicediscovery#HealthStatus"
      }
    },
    "com.amazonaws.servicediscovery#InstanceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^[0-9a-zA-Z_/:.@-]+$"
      }
    },
    "com.amazonaws.servicediscovery#InstanceIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#ResourceId",
        "traits": {
          "smithy.api#xmlName": "InstanceId"
        }
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.servicediscovery#InstanceNotFound": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No instance exists with the specified ID, or the instance was recently registered, and information about\n   the instance hasn't propagated yet.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#InstanceSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for an instance that you created by using a specified service.</p>"
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>A string map that contains the following information:</p>\n         <ul>\n            <li>\n               <p>The attributes that are associated with the instance. </p>\n            </li>\n            <li>\n               <p>For each attribute, the applicable value.</p>\n            </li>\n         </ul>\n         <p>Supported attribute keys include the following:</p>\n         <dl>\n            <dt>AWS_ALIAS_DNS_NAME</dt>\n            <dd>\n               <p>For an alias record that routes traffic to an Elastic Load Balancing load balancer, the DNS name that's associated with\n      the load balancer. </p>\n            </dd>\n            <dt>AWS_EC2_INSTANCE_ID (HTTP namespaces only)</dt>\n            <dd>\n               <p>The Amazon EC2 instance ID for the instance. When the <code>AWS_EC2_INSTANCE_ID</code> attribute is\n      specified, then the <code>AWS_INSTANCE_IPV4</code> attribute contains the primary private IPv4\n      address.</p>\n            </dd>\n            <dt>AWS_INIT_HEALTH_STATUS</dt>\n            <dd>\n               <p>If the service configuration includes <code>HealthCheckCustomConfig</code>, you can optionally use\n       <code>AWS_INIT_HEALTH_STATUS</code> to specify the initial status of the custom health check,\n       <code>HEALTHY</code> or <code>UNHEALTHY</code>. If you don't specify a value for\n       <code>AWS_INIT_HEALTH_STATUS</code>, the initial status is <code>HEALTHY</code>.</p>\n            </dd>\n            <dt>AWS_INSTANCE_CNAME</dt>\n            <dd>\n               <p>For a <code>CNAME</code> record, the domain name that RouteÂ 53 returns in response to DNS queries (for\n      example, <code>example.com</code>).</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV4</dt>\n            <dd>\n               <p>For an <code>A</code> record, the IPv4 address that RouteÂ 53 returns in response to DNS queries (for\n      example, <code>192.0.2.44</code>).</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV6</dt>\n            <dd>\n               <p>For an <code>AAAA</code> record, the IPv6 address that RouteÂ 53 returns in response to DNS queries (for\n      example, <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\n            </dd>\n            <dt>AWS_INSTANCE_PORT</dt>\n            <dd>\n               <p>For an <code>SRV</code> record, the value that RouteÂ 53 returns for the port. In addition, if the service\n      includes <code>HealthCheckConfig</code>, the port on the endpoint that RouteÂ 53 sends requests to.</p>\n            </dd>\n         </dl>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about the instances that you registered by using a specified\n   service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#InstanceSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#InstanceSummary",
        "traits": {
          "smithy.api#xmlName": "InstanceSummary"
        }
      }
    },
    "com.amazonaws.servicediscovery#InvalidInput": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>One or more specified values aren't valid. For example, a required value might be missing, a numeric value\n   might be outside the allowed range, or a string value might exceed length constraints.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#ListInstances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#ListInstancesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#ListInstancesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists summary information about the instances that you registered by using a specified service.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: List service instances",
            "documentation": "Example: List service instances",
            "input": {
              "ServiceId": "srv-qzpwvt2tfqcegapy"
            },
            "output": {
              "Instances": [
                {
                  "Attributes": {
                    "AWS_INSTANCE_IPV4": "172.2.1.3",
                    "AWS_INSTANCE_PORT": "808"
                  },
                  "Id": "i-06bdabbae60f65a4e"
                }
              ]
            }
          }
        ],
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.servicediscovery#ListInstancesRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to list instances for.</p>",
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>For the first <code>ListInstances</code> request, omit this value.</p>\n         <p>If more than <code>MaxResults</code> instances match the specified criteria, you can submit another\n    <code>ListInstances</code> request to get the next group of results. Specify the value of\n    <code>NextToken</code> from the previous response in the next request.</p>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of instances that you want Cloud Map to return in the response to a\n    <code>ListInstances</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map\n   returns up to 100 instances.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#ListInstancesResponse": {
      "type": "structure",
      "members": {
        "Instances": {
          "target": "com.amazonaws.servicediscovery#InstanceSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>Summary information about the instances that are associated with the specified service.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If more than <code>MaxResults</code> instances match the specified criteria, you can submit another\n    <code>ListInstances</code> request to get the next group of results. Specify the value of\n    <code>NextToken</code> from the previous response in the next request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#ListNamespaces": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#ListNamespacesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#ListNamespacesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists summary information about the namespaces that were created by the current Amazon Web Services account.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: List namespaces",
            "documentation": "Example: List namespaces",
            "output": {
              "Namespaces": [
                {
                  "Arn": "arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-a3ccy2e7e3a7rile",
                  "CreateDate": 1.585354387357e9,
                  "Id": "ns-a3ccy2e7e3a7rile",
                  "Name": "local",
                  "Properties": {
                    "DnsProperties": {
                      "HostedZoneId": "Z06752353VBUDTC32S84S"
                    },
                    "HttpProperties": {
                      "HttpName": "local"
                    }
                  },
                  "Type": "DNS_PRIVATE"
                },
                {
                  "Arn": "arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-pocfyjtrsmwtvcxx",
                  "CreateDate": 1.586468974698e9,
                  "Description": "My second namespace",
                  "Id": "ns-pocfyjtrsmwtvcxx",
                  "Name": "My-second-namespace",
                  "Properties": {
                    "DnsProperties": {},
                    "HttpProperties": {
                      "HttpName": "My-second-namespace"
                    }
                  },
                  "Type": "HTTP"
                },
                {
                  "Arn": "arn:aws:servicediscovery:us-west-2:123456789012:namespace/ns-ylexjili4cdxy3xm",
                  "CreateDate": 1.587055896798e9,
                  "Id": "ns-ylexjili4cdxy3xm",
                  "Name": "example.com",
                  "Properties": {
                    "DnsProperties": {
                      "HostedZoneId": "Z09983722P0QME1B3KC8I"
                    },
                    "HttpProperties": {
                      "HttpName": "example.com"
                    }
                  },
                  "Type": "DNS_PRIVATE"
                }
              ]
            }
          }
        ],
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.servicediscovery#ListNamespacesRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>For the first <code>ListNamespaces</code> request, omit this value.</p>\n         <p>If the response contains <code>NextToken</code>, submit another <code>ListNamespaces</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> namespaces and then filters them based on the specified criteria.\n    It's possible that no namespaces in the first <code>MaxResults</code> namespaces matched the specified criteria\n    but that subsequent groups of <code>MaxResults</code> namespaces do contain namespaces that match the\n    criteria.</p>\n         </note>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of namespaces that you want Cloud Map to return in the response to a\n    <code>ListNamespaces</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map\n   returns up to 100 namespaces.</p>"
          }
        },
        "Filters": {
          "target": "com.amazonaws.servicediscovery#NamespaceFilters",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains specifications for the namespaces that you want to list.</p>\n         <p>If you specify more than one filter, a namespace must match all filters to be returned by\n    <code>ListNamespaces</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#ListNamespacesResponse": {
      "type": "structure",
      "members": {
        "Namespaces": {
          "target": "com.amazonaws.servicediscovery#NamespaceSummariesList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains one <code>NamespaceSummary</code> object for each namespace that matches the\n   specified filter criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If the response contains <code>NextToken</code>, submit another <code>ListNamespaces</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> namespaces and then filters them based on the specified criteria.\n    It's possible that no namespaces in the first <code>MaxResults</code> namespaces matched the specified criteria\n    but that subsequent groups of <code>MaxResults</code> namespaces do contain namespaces that match the\n    criteria.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#ListOperations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#ListOperationsRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#ListOperationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists operations that match the criteria that you specify.</p>",
        "smithy.api#examples": [
          {
            "title": "ListOperations Example",
            "documentation": "This example gets the operations that have a STATUS of either PENDING or SUCCESS.",
            "input": {
              "Filters": [
                {
                  "Name": "STATUS",
                  "Condition": "IN",
                  "Values": ["PENDING", "SUCCESS"]
                }
              ]
            },
            "output": {
              "Operations": [
                {
                  "Id": "76yy8ovhpdz0plmjzbsnqgnrqvpv2qdt-kexample",
                  "Status": "SUCCESS"
                },
                {
                  "Id": "prysnyzpji3u2ciy45nke83x2zanl7yk-dexample",
                  "Status": "SUCCESS"
                },
                {
                  "Id": "ko4ekftir7kzlbechsh7xvcdgcpk66gh-7example",
                  "Status": "PENDING"
                }
              ]
            }
          }
        ],
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.servicediscovery#ListOperationsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>For the first <code>ListOperations</code> request, omit this value.</p>\n         <p>If the response contains <code>NextToken</code>, submit another <code>ListOperations</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> operations and then filters them based on the specified criteria.\n    It's possible that no operations in the first <code>MaxResults</code> operations matched the specified criteria\n    but that subsequent groups of <code>MaxResults</code> operations do contain operations that match the\n    criteria.</p>\n         </note>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of items that you want Cloud Map to return in the response to a\n    <code>ListOperations</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map\n   returns up to 100 operations.</p>"
          }
        },
        "Filters": {
          "target": "com.amazonaws.servicediscovery#OperationFilters",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains specifications for the operations that you want to list, for example,\n   operations that you started between a specified start date and end date.</p>\n         <p>If you specify more than one filter, an operation must match all filters to be returned by\n    <code>ListOperations</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#ListOperationsResponse": {
      "type": "structure",
      "members": {
        "Operations": {
          "target": "com.amazonaws.servicediscovery#OperationSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>Summary information about the operations that match the specified criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If the response contains <code>NextToken</code>, submit another <code>ListOperations</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> operations and then filters them based on the specified criteria.\n    It's possible that no operations in the first <code>MaxResults</code> operations matched the specified criteria\n    but that subsequent groups of <code>MaxResults</code> operations do contain operations that match the\n    criteria.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#ListServices": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#ListServicesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#ListServicesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists summary information for all the services that are associated with one or more\n   namespaces.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: List services",
            "documentation": "Example: List services",
            "output": {
              "Services": [
                {
                  "Arn": "arn:aws:servicediscovery:us-west-2:123456789012:service/srv-p5zdwlg5uvvzjita",
                  "CreateDate": 1.587081768334e9,
                  "DnsConfig": {
                    "DnsRecords": [
                      {
                        "TTL": 60,
                        "Type": "A"
                      }
                    ],
                    "RoutingPolicy": "MULTIVALUE"
                  },
                  "Id": "srv-p5zdwlg5uvvzjita",
                  "Name": "myservice"
                }
              ]
            }
          }
        ],
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.servicediscovery#ListServicesRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>For the first <code>ListServices</code> request, omit this value.</p>\n         <p>If the response contains <code>NextToken</code>, submit another <code>ListServices</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> services and then filters them based on the specified criteria.\n    It's possible that no services in the first <code>MaxResults</code> services matched the specified criteria but\n    that subsequent groups of <code>MaxResults</code> services do contain services that match the criteria.</p>\n         </note>"
          }
        },
        "MaxResults": {
          "target": "com.amazonaws.servicediscovery#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of services that you want Cloud Map to return in the response to a\n    <code>ListServices</code> request. If you don't specify a value for <code>MaxResults</code>, Cloud Map returns\n   up to 100 services.</p>"
          }
        },
        "Filters": {
          "target": "com.amazonaws.servicediscovery#ServiceFilters",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains specifications for the namespaces that you want to list services for. </p>\n         <p>If you specify more than one filter, an operation must match all filters to be returned by\n    <code>ListServices</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#ListServicesResponse": {
      "type": "structure",
      "members": {
        "Services": {
          "target": "com.amazonaws.servicediscovery#ServiceSummariesList",
          "traits": {
            "smithy.api#documentation": "<p>An array that contains one <code>ServiceSummary</code> object for each service that matches the specified\n   filter criteria.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.servicediscovery#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>If the response contains <code>NextToken</code>, submit another <code>ListServices</code> request to get\n   the next group of results. Specify the value of <code>NextToken</code> from the previous response in the next\n   request.</p>\n         <note>\n            <p>Cloud Map gets <code>MaxResults</code> services and then filters them based on the specified criteria.\n    It's possible that no services in the first <code>MaxResults</code> services matched the specified criteria but\n    that subsequent groups of <code>MaxResults</code> services do contain services that match the criteria.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Lists tags for the specified resource.</p>",
        "smithy.api#examples": [
          {
            "title": "ListTagsForResource example",
            "documentation": "This example lists the tags of a resource.",
            "input": {
              "ResourceARN": "arn:aws:servicediscovery:us-east-1:123456789012:namespace/ns-ylexjili4cdxy3xm"
            },
            "output": {
              "Tags": [
                {
                  "Key": "Project",
                  "Value": "Zeta"
                },
                {
                  "Key": "Department",
                  "Value": "Engineering"
                }
              ]
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.servicediscovery#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags that are assigned to the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.servicediscovery#Message": {
      "type": "string"
    },
    "com.amazonaws.servicediscovery#Namespace": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of a namespace.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.servicediscovery#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace when you create it.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the namespace, such as <code>example.com</code>.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#NamespaceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the namespace. The methods for discovering instances depends on the value that you\n   specify:</p>\n         <dl>\n            <dt>HTTP</dt>\n            <dd>\n               <p>Instances can be discovered only programmatically, using the Cloud Map <code>DiscoverInstances</code>\n      API.</p>\n            </dd>\n            <dt>DNS_PUBLIC</dt>\n            <dd>\n               <p>Instances can be discovered using public DNS queries and using the <code>DiscoverInstances</code>\n      API.</p>\n            </dd>\n            <dt>DNS_PRIVATE</dt>\n            <dd>\n               <p>Instances can be discovered using DNS queries in VPCs and using the <code>DiscoverInstances</code>\n      API.</p>\n            </dd>\n         </dl>"
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description that you specify for the namespace when you create it.</p>"
          }
        },
        "ServiceCount": {
          "target": "com.amazonaws.servicediscovery#ResourceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of services that are associated with the namespace.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#NamespaceProperties",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information that's specific to the type of the namespace.</p>"
          }
        },
        "CreateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date that the namespace was created, in Unix date/time format and Coordinated Universal Time (UTC). The\n   value of <code>CreateDate</code> is accurate to milliseconds. For example, the value <code>1516925490.087</code>\n   represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk\n   of running an operation twice. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about a specified namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceAlreadyExists": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The <code>CreatorRequestId</code> that was used to create the namespace.</p>"
          }
        },
        "NamespaceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the existing namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The namespace that you're trying to create already exists.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#NamespaceFilter": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceFilterName",
          "traits": {
            "smithy.api#documentation": "<p>Specify the namespaces that you want to get using one of the following.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>TYPE</code>: Gets the namespaces of the specified type.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NAME</code>: Gets the namespaces with the specified name.</p>\n            </li>\n            <li>\n               <p>\n                  <code>HTTP_NAME</code>: Gets the namespaces with the specified HTTP name.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "Values": {
          "target": "com.amazonaws.servicediscovery#FilterValues",
          "traits": {
            "smithy.api#documentation": "<p>Specify the values that are applicable to the value that you specify for <code>Name</code>.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>TYPE</code>: Specify <code>HTTP</code>, <code>DNS_PUBLIC</code>, or\n     <code>DNS_PRIVATE</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NAME</code>: Specify the name of the namespace, which is found in\n     <code>Namespace.Name</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <code>HTTP_NAME</code>: Specify the HTTP name of the namespace, which is found in\n      <code>Namespace.Properties.HttpProperties.HttpName</code>.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "Condition": {
          "target": "com.amazonaws.servicediscovery#FilterCondition",
          "traits": {
            "smithy.api#documentation": "<p>Specify the operator that you want to use to determine whether a namespace matches the specified value.\n   Valid values for <code>Condition</code> are one of the following.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>EQ</code>: When you specify <code>EQ</code> for <code>Condition</code>, you can specify only one\n     value. <code>EQ</code> is supported for <code>TYPE</code>, <code>NAME</code>, and <code>HTTP_NAME</code>.\n      <code>EQ</code> is the default condition and can be omitted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BEGINS_WITH</code>: When you specify <code>BEGINS_WITH</code> for <code>Condition</code>, you can\n     specify only one value. <code>BEGINS_WITH</code> is supported for <code>TYPE</code>, <code>NAME</code>, and\n      <code>HTTP_NAME</code>.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that identifies the namespaces that you want to list. You can choose to list public or\n   private namespaces.</p>"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceFilterName": {
      "type": "enum",
      "members": {
        "TYPE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TYPE"
          }
        },
        "NAME": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NAME"
          }
        },
        "HTTP_NAME": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP_NAME"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#NamespaceFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#NamespaceFilter",
        "traits": {
          "smithy.api#xmlName": "item"
        }
      }
    },
    "com.amazonaws.servicediscovery#NamespaceName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^[!-~]{1,1024}$"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceNameHttp": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        },
        "smithy.api#pattern": "^[!-~]{1,1024}$"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceNamePrivate": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 253
        },
        "smithy.api#pattern": "^[!-~]{1,253}$"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceNamePublic": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 253
        },
        "smithy.api#pattern": "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?$"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceNotFound": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No namespace exists with the specified ID.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#NamespaceProperties": {
      "type": "structure",
      "members": {
        "DnsProperties": {
          "target": "com.amazonaws.servicediscovery#DnsProperties",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains the ID for the RouteÂ 53 hosted zone that Cloud Map creates when you create a\n   namespace.</p>"
          }
        },
        "HttpProperties": {
          "target": "com.amazonaws.servicediscovery#HttpProperties",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains the name of an HTTP namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information that's specific to the namespace type.</p>"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceSummariesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#NamespaceSummary"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.servicediscovery#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that Cloud Map assigns to the namespace when you create it.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.servicediscovery#NamespaceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the namespace. When you create a namespace, Cloud Map automatically creates a RouteÂ 53 hosted\n   zone that has the same name as the namespace.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#NamespaceType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the namespace, either public or private.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the namespace.</p>"
          }
        },
        "ServiceCount": {
          "target": "com.amazonaws.servicediscovery#ResourceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of services that were created using the namespace.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#NamespaceProperties",
          "traits": {
            "smithy.api#documentation": "<p>The properties of the namespace.</p>"
          }
        },
        "CreateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the namespace was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about a namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#NamespaceType": {
      "type": "enum",
      "members": {
        "DNS_PUBLIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DNS_PUBLIC"
          }
        },
        "DNS_PRIVATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DNS_PRIVATE"
          }
        },
        "HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 4096
        }
      }
    },
    "com.amazonaws.servicediscovery#Operation": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the operation that you want to get information about.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#OperationType",
          "traits": {
            "smithy.api#documentation": "<p>The name of the operation that's associated with the specified ID.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.servicediscovery#OperationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the operation. Values include the following:</p>\n         <dl>\n            <dt>SUBMITTED</dt>\n            <dd>\n               <p>This is the initial state that occurs immediately after you submit a request.</p>\n            </dd>\n            <dt>PENDING</dt>\n            <dd>\n               <p>Cloud Map is performing the operation.</p>\n            </dd>\n            <dt>SUCCESS</dt>\n            <dd>\n               <p>The operation succeeded.</p>\n            </dd>\n            <dt>FAIL</dt>\n            <dd>\n               <p>The operation failed. For the failure reason, see <code>ErrorMessage</code>.</p>\n            </dd>\n         </dl>"
          }
        },
        "ErrorMessage": {
          "target": "com.amazonaws.servicediscovery#Message",
          "traits": {
            "smithy.api#documentation": "<p>If the value of <code>Status</code> is <code>FAIL</code>, the reason that the operation failed.</p>"
          }
        },
        "ErrorCode": {
          "target": "com.amazonaws.servicediscovery#Code",
          "traits": {
            "smithy.api#documentation": "<p>The code associated with <code>ErrorMessage</code>. Values for <code>ErrorCode</code> include the\n   following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ACCESS_DENIED</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>CANNOT_CREATE_HOSTED_ZONE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>EXPIRED_TOKEN</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>HOSTED_ZONE_NOT_FOUND</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>INTERNAL_FAILURE</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>INVALID_CHANGE_BATCH</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>THROTTLED_REQUEST</code>\n               </p>\n            </li>\n         </ul>"
          }
        },
        "CreateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the request was submitted, in Unix date/time format and Coordinated Universal Time\n   (UTC). The value of <code>CreateDate</code> is accurate to milliseconds. For example, the value\n    <code>1516925490.087</code> represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
          }
        },
        "UpdateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the value of <code>Status</code> changed to the current value, in Unix date/time\n   format and Coordinated Universal Time (UTC). The value of <code>UpdateDate</code> is accurate to milliseconds.\n   For example, the value <code>1516925490.087</code> represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
          }
        },
        "Targets": {
          "target": "com.amazonaws.servicediscovery#OperationTargetsMap",
          "traits": {
            "smithy.api#documentation": "<p>The name of the target entity that's associated with the operation:</p>\n         <dl>\n            <dt>NAMESPACE</dt>\n            <dd>\n               <p>The namespace ID is returned in the <code>ResourceId</code> property.</p>\n            </dd>\n            <dt>SERVICE</dt>\n            <dd>\n               <p>The service ID is returned in the <code>ResourceId</code> property.</p>\n            </dd>\n            <dt>INSTANCE</dt>\n            <dd>\n               <p>The instance ID is returned in the <code>ResourceId</code> property.</p>\n            </dd>\n         </dl>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about a specified operation.</p>"
      }
    },
    "com.amazonaws.servicediscovery#OperationFilter": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#OperationFilterName",
          "traits": {
            "smithy.api#documentation": "<p>Specify the operations that you want to get:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>NAMESPACE_ID</b>: Gets operations related to specified namespaces.</p>\n            </li>\n            <li>\n               <p>\n                  <b>SERVICE_ID</b>: Gets operations related to specified services.</p>\n            </li>\n            <li>\n               <p>\n                  <b>STATUS</b>: Gets operations based on the status of the operations:\n      <code>SUBMITTED</code>, <code>PENDING</code>, <code>SUCCEED</code>, or <code>FAIL</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>TYPE</b>: Gets specified types of operation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>UPDATE_DATE</b>: Gets operations that changed status during a specified\n     date/time range. </p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "Values": {
          "target": "com.amazonaws.servicediscovery#FilterValues",
          "traits": {
            "smithy.api#documentation": "<p>Specify values that are applicable to the value that you specify for <code>Name</code>: </p>\n         <ul>\n            <li>\n               <p>\n                  <b>NAMESPACE_ID</b>: Specify one namespace ID.</p>\n            </li>\n            <li>\n               <p>\n                  <b>SERVICE_ID</b>: Specify one service ID.</p>\n            </li>\n            <li>\n               <p>\n                  <b>STATUS</b>: Specify one or more statuses: <code>SUBMITTED</code>,\n      <code>PENDING</code>, <code>SUCCEED</code>, or <code>FAIL</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>TYPE</b>: Specify one or more of the following types:\n      <code>CREATE_NAMESPACE</code>, <code>DELETE_NAMESPACE</code>, <code>UPDATE_SERVICE</code>,\n      <code>REGISTER_INSTANCE</code>, or <code>DEREGISTER_INSTANCE</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>UPDATE_DATE</b>: Specify a start date and an end date in Unix date/time\n     format and Coordinated Universal Time (UTC). The start date must be the first value.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "Condition": {
          "target": "com.amazonaws.servicediscovery#FilterCondition",
          "traits": {
            "smithy.api#documentation": "<p>The operator that you want to use to determine whether an operation matches the specified value. Valid\n   values for condition include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>EQ</code>: When you specify <code>EQ</code> for the condition, you can specify only one value.\n      <code>EQ</code> is supported for <code>NAMESPACE_ID</code>, <code>SERVICE_ID</code>, <code>STATUS</code>, and\n      <code>TYPE</code>. <code>EQ</code> is the default condition and can be omitted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN</code>: When you specify <code>IN</code> for the condition, you can specify a list of one or\n     more values. <code>IN</code> is supported for <code>STATUS</code> and <code>TYPE</code>. An operation must\n     match one of the specified values to be returned in the response.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BETWEEN</code>: Specify a start date and an end date in Unix date/time format and Coordinated\n     Universal Time (UTC). The start date must be the first value. <code>BETWEEN</code> is supported for\n      <code>UPDATE_DATE</code>. </p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that lets you select the operations that you want to list.</p>"
      }
    },
    "com.amazonaws.servicediscovery#OperationFilterName": {
      "type": "enum",
      "members": {
        "NAMESPACE_ID": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NAMESPACE_ID"
          }
        },
        "SERVICE_ID": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SERVICE_ID"
          }
        },
        "STATUS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STATUS"
          }
        },
        "TYPE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "TYPE"
          }
        },
        "UPDATE_DATE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_DATE"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#OperationFilter",
        "traits": {
          "smithy.api#xmlName": "item"
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationNotFound": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No operation exists with the specified ID.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#OperationStatus": {
      "type": "enum",
      "members": {
        "SUBMITTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUBMITTED"
          }
        },
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "SUCCESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SUCCESS"
          }
        },
        "FAIL": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "FAIL"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID for an operation.</p>"
          }
        },
        "Status": {
          "target": "com.amazonaws.servicediscovery#OperationStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the operation. Values include the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>SUBMITTED</b>: This is the initial state immediately after you submit a\n     request.</p>\n            </li>\n            <li>\n               <p>\n                  <b>PENDING</b>: Cloud Map is performing the operation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>SUCCESS</b>: The operation succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <b>FAIL</b>: The operation failed. For the failure reason, see\n      <code>ErrorMessage</code>.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about an operation that matches the criteria that you specified in\n   a <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html\">ListOperations</a>\n   request.</p>"
      }
    },
    "com.amazonaws.servicediscovery#OperationSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#OperationSummary",
        "traits": {
          "smithy.api#xmlName": "OperationSummary"
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationTargetType": {
      "type": "enum",
      "members": {
        "NAMESPACE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NAMESPACE"
          }
        },
        "SERVICE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SERVICE"
          }
        },
        "INSTANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INSTANCE"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#OperationTargetsMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.servicediscovery#OperationTargetType"
      },
      "value": {
        "target": "com.amazonaws.servicediscovery#ResourceId"
      }
    },
    "com.amazonaws.servicediscovery#OperationType": {
      "type": "enum",
      "members": {
        "CREATE_NAMESPACE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_NAMESPACE"
          }
        },
        "DELETE_NAMESPACE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_NAMESPACE"
          }
        },
        "UPDATE_NAMESPACE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_NAMESPACE"
          }
        },
        "UPDATE_SERVICE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_SERVICE"
          }
        },
        "REGISTER_INSTANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REGISTER_INSTANCE"
          }
        },
        "DEREGISTER_INSTANCE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEREGISTER_INSTANCE"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#PrivateDnsNamespaceChange": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>An updated description for the\n   private DNS namespace.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#PrivateDnsNamespacePropertiesChange",
          "traits": {
            "smithy.api#documentation": "<p>Properties to be updated in the\n   private DNS namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated properties for the private\n   DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PrivateDnsNamespaceProperties": {
      "type": "structure",
      "members": {
        "DnsProperties": {
          "target": "com.amazonaws.servicediscovery#PrivateDnsPropertiesMutable",
          "traits": {
            "smithy.api#documentation": "<p>DNS properties for the private DNS\n   namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>DNS properties for the private DNS\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PrivateDnsNamespacePropertiesChange": {
      "type": "structure",
      "members": {
        "DnsProperties": {
          "target": "com.amazonaws.servicediscovery#PrivateDnsPropertiesMutableChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated DNS properties for the\n   private DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated properties for the private\n   DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PrivateDnsPropertiesMutable": {
      "type": "structure",
      "members": {
        "SOA": {
          "target": "com.amazonaws.servicediscovery#SOA",
          "traits": {
            "smithy.api#documentation": "<p>Fields for the Start of Authority\n   (SOA) record for the hosted zone for the private DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>DNS properties for the private DNS\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PrivateDnsPropertiesMutableChange": {
      "type": "structure",
      "members": {
        "SOA": {
          "target": "com.amazonaws.servicediscovery#SOAChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated fields for the Start of\n   Authority (SOA) record for the hosted zone for the private DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated DNS properties for the\n   private DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PublicDnsNamespaceChange": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>An updated description for the\n   public DNS namespace.</p>"
          }
        },
        "Properties": {
          "target": "com.amazonaws.servicediscovery#PublicDnsNamespacePropertiesChange",
          "traits": {
            "smithy.api#documentation": "<p>Properties to be updated in the\n   public DNS namespace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated properties for the public\n   DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PublicDnsNamespaceProperties": {
      "type": "structure",
      "members": {
        "DnsProperties": {
          "target": "com.amazonaws.servicediscovery#PublicDnsPropertiesMutable",
          "traits": {
            "smithy.api#documentation": "<p>DNS properties for the public DNS\n   namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>DNS properties for the public DNS\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PublicDnsNamespacePropertiesChange": {
      "type": "structure",
      "members": {
        "DnsProperties": {
          "target": "com.amazonaws.servicediscovery#PublicDnsPropertiesMutableChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated DNS properties for the\n   hosted zone for the public DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated properties for the public\n   DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PublicDnsPropertiesMutable": {
      "type": "structure",
      "members": {
        "SOA": {
          "target": "com.amazonaws.servicediscovery#SOA",
          "traits": {
            "smithy.api#documentation": "<p>Start of Authority (SOA) record for\n   the hosted zone for the public DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>DNS properties for the public DNS\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#PublicDnsPropertiesMutableChange": {
      "type": "structure",
      "members": {
        "SOA": {
          "target": "com.amazonaws.servicediscovery#SOAChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated fields for the Start of\n   Authority (SOA) record for the hosted zone for the public DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated DNS properties for the\n   public DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#RecordTTL": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 2147483647
        }
      }
    },
    "com.amazonaws.servicediscovery#RecordType": {
      "type": "enum",
      "members": {
        "SRV": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SRV"
          }
        },
        "A": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "A"
          }
        },
        "AAAA": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AAAA"
          }
        },
        "CNAME": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CNAME"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#RegisterInstance": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#RegisterInstanceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#RegisterInstanceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceLimitExceeded"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates one or more records and, optionally, creates a health check based on the settings in a\n   specified service. When you submit a <code>RegisterInstance</code> request, the following occurs:</p>\n         <ul>\n            <li>\n               <p>For each DNS record that you define in the service that's specified by <code>ServiceId</code>, a record\n     is created or updated in the hosted zone that's associated with the corresponding namespace.</p>\n            </li>\n            <li>\n               <p>If the service includes <code>HealthCheckConfig</code>, a health check is created based on the settings\n     in the health check configuration.</p>\n            </li>\n            <li>\n               <p>The health check, if any, is associated with each of the new or updated records.</p>\n            </li>\n         </ul>\n         <important>\n            <p>One <code>RegisterInstance</code> request must complete before you can submit another request and specify\n    the same service ID and instance ID.</p>\n         </important>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html\">CreateService</a>.</p>\n         <p>When Cloud Map receives a DNS query for the specified DNS name, it returns the applicable value:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>If the health check is healthy</b>: returns all the records</p>\n            </li>\n            <li>\n               <p>\n                  <b>If the health check is unhealthy</b>: returns the applicable value for the\n     last healthy instance</p>\n            </li>\n            <li>\n               <p>\n                  <b>If you didn't specify a health check configuration</b>: returns all the\n     records</p>\n            </li>\n         </ul>\n         <p>For the current quota on the number of instances that you can register using the same namespace and using\n   the same service, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html\">Cloud Map\n    quotas</a> in the <i>Cloud Map Developer Guide</i>.</p>",
        "smithy.api#examples": [
          {
            "title": "Example: Register Instance",
            "documentation": "Example: Register Instance",
            "input": {
              "ServiceId": "srv-p5zdwlg5uvvzjita",
              "InstanceId": "myservice-53",
              "Attributes": {
                "AWS_INSTANCE_IPV4": "172.2.1.3",
                "AWS_INSTANCE_PORT": "808"
              },
              "CreatorRequestId": "7a48a98a-72e6-4849-bfa7-1a458e030d7b"
            },
            "output": {
              "OperationId": "4yejorelbukcjzpnr6tlmrghsjwpngf4-k95yg2u7"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#RegisterInstanceRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to use for settings for the instance.</p>",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "com.amazonaws.servicediscovery#InstanceId",
          "traits": {
            "smithy.api#documentation": "<p>An identifier that you want to associate with the instance. Note the following:</p>\n         <ul>\n            <li>\n               <p>If the service that's specified by <code>ServiceId</code> includes settings for an <code>SRV</code>\n     record, the value of <code>InstanceId</code> is automatically included as part of the value for the\n      <code>SRV</code> record. For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_DnsRecord.html#cloudmap-Type-DnsRecord-Type\">DnsRecord > Type</a>.</p>\n            </li>\n            <li>\n               <p>You can use this value to update an existing instance.</p>\n            </li>\n            <li>\n               <p>To register a new instance, you must specify a value that's unique among instances that you register by\n     using the same service. </p>\n            </li>\n            <li>\n               <p>If you specify an existing <code>InstanceId</code> and <code>ServiceId</code>, Cloud Map updates the\n     existing DNS records, if any. If there's also an existing health check, Cloud Map deletes the old health\n     check and creates a new one. </p>\n               <note>\n                  <p>The health check isn't deleted immediately, so it will still appear for a while if you submit a\n       <code>ListHealthChecks</code> request, for example.</p>\n               </note>\n            </li>\n         </ul>\n         <note>\n            <p>Do not include sensitive information in <code>InstanceId</code> if the namespace is discoverable by public\n    DNS queries and any <code>Type</code> member of <code>DnsRecord</code> for the service contains\n     <code>SRV</code> because the <code>InstanceId</code> is discoverable by public DNS queries.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed <code>RegisterInstance</code> requests\n   to be retried without the risk of executing the operation twice. You must use a unique\n    <code>CreatorRequestId</code> string every time you submit a <code>RegisterInstance</code> request if you're\n   registering additional instances for the same namespace and service. <code>CreatorRequestId</code> can be any\n   unique string (for example, a date/time stamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#Attributes",
          "traits": {
            "smithy.api#documentation": "<p>A string map that contains the following information for the service that you specify in\n    <code>ServiceId</code>:</p>\n         <ul>\n            <li>\n               <p>The attributes that apply to the records that are defined in the service. </p>\n            </li>\n            <li>\n               <p>For each attribute, the applicable value.</p>\n            </li>\n         </ul>\n         <important>\n            <p>Do not include sensitive information in the attributes if the namespace is discoverable by public DNS\n    queries.</p>\n         </important>\n         <p>The following are the supported attribute keys.</p>\n         <dl>\n            <dt>AWS_ALIAS_DNS_NAME</dt>\n            <dd>\n               <p>If you want Cloud Map to create an Amazon RouteÂ 53 alias record that routes traffic to an Elastic Load Balancing load\n      balancer, specify the DNS name that's associated with the load balancer. For information about how to get the\n      DNS name, see \"DNSName\" in the topic <a href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html\">AliasTarget</a> in the\n       <i>RouteÂ 53 API Reference</i>.</p>\n               <p>Note the following:</p>\n               <ul>\n                  <li>\n                     <p>The configuration for the service that's specified by <code>ServiceId</code> must include settings for\n        an <code>A</code> record, an <code>AAAA</code> record, or both.</p>\n                  </li>\n                  <li>\n                     <p>In the service that's specified by <code>ServiceId</code>, the value of <code>RoutingPolicy</code>\n        must be <code>WEIGHTED</code>.</p>\n                  </li>\n                  <li>\n                     <p>If the service that's specified by <code>ServiceId</code> includes <code>HealthCheckConfig</code>\n        settings, Cloud Map will create the RouteÂ 53 health check, but it doesn't associate the health check with the\n        alias record.</p>\n                  </li>\n                  <li>\n                     <p>Cloud Map currently doesn't support creating alias records that route traffic to Amazon Web Services\n        resources other than Elastic Load Balancing load balancers.</p>\n                  </li>\n                  <li>\n                     <p>If you specify a value for <code>AWS_ALIAS_DNS_NAME</code>, don't specify values for any of the\n         <code>AWS_INSTANCE</code> attributes.</p>\n                  </li>\n                  <li>\n                     <p>The <code>AWS_ALIAS_DNS_NAME</code> is not supported in the GovCloud (US) Regions.</p>\n                  </li>\n               </ul>\n            </dd>\n            <dt>AWS_EC2_INSTANCE_ID</dt>\n            <dd>\n               <p>\n                  <i>HTTP namespaces only.</i> The Amazon EC2 instance ID for the instance. If the\n       <code>AWS_EC2_INSTANCE_ID</code> attribute is specified, then the only other attribute that can be specified\n      is <code>AWS_INIT_HEALTH_STATUS</code>. When the <code>AWS_EC2_INSTANCE_ID</code> attribute is specified,\n      then the <code>AWS_INSTANCE_IPV4</code> attribute will be filled out with the primary private IPv4\n      address.</p>\n            </dd>\n            <dt>AWS_INIT_HEALTH_STATUS</dt>\n            <dd>\n               <p>If the service configuration includes <code>HealthCheckCustomConfig</code>, you can optionally use\n       <code>AWS_INIT_HEALTH_STATUS</code> to specify the initial status of the custom health check,\n       <code>HEALTHY</code> or <code>UNHEALTHY</code>. If you don't specify a value for\n       <code>AWS_INIT_HEALTH_STATUS</code>, the initial status is <code>HEALTHY</code>.</p>\n            </dd>\n            <dt>AWS_INSTANCE_CNAME</dt>\n            <dd>\n               <p>If the service configuration includes a <code>CNAME</code> record, the domain name that you want RouteÂ 53\n      to return in response to DNS queries (for example, <code>example.com</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>CNAME</code> record.</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV4</dt>\n            <dd>\n               <p>If the service configuration includes an <code>A</code> record, the IPv4 address that you want RouteÂ 53 to\n      return in response to DNS queries (for example, <code>192.0.2.44</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>A</code> record. If the service includes settings for an <code>SRV</code> record, you must specify a\n      value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>, or both.</p>\n            </dd>\n            <dt>AWS_INSTANCE_IPV6</dt>\n            <dd>\n               <p>If the service configuration includes an <code>AAAA</code> record, the IPv6 address that you want RouteÂ 53\n      to return in response to DNS queries (for example,\n      <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>).</p>\n               <p>This value is required if the service specified by <code>ServiceId</code> includes settings for an\n       <code>AAAA</code> record. If the service includes settings for an <code>SRV</code> record, you must specify\n      a value for <code>AWS_INSTANCE_IPV4</code>, <code>AWS_INSTANCE_IPV6</code>, or both.</p>\n            </dd>\n            <dt>AWS_INSTANCE_PORT</dt>\n            <dd>\n               <p>If the service includes an <code>SRV</code> record, the value that you want RouteÂ 53 to return for the\n      port.</p>\n               <p>If the service includes <code>HealthCheckConfig</code>, the port on the endpoint that you want RouteÂ 53 to\n      send requests to. </p>\n               <p>This value is required if you specified settings for an <code>SRV</code> record or a RouteÂ 53 health check\n      when you created the service.</p>\n            </dd>\n            <dt>Custom attributes</dt>\n            <dd>\n               <p>You can add up to 30 custom attributes. For each key-value pair, the maximum length of the attribute\n      name is 255 characters, and the maximum length of the attribute value is 1,024 characters. The total size of\n      all provided attributes (sum of all keys and values) must not exceed 5,000 characters.</p>\n            </dd>\n         </dl>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#RegisterInstanceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#RequestLimitExceeded": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation can't be completed because you've reached the quota for the number of requests. For more\n   information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/dg/throttling.html\">Cloud Map API request\n    throttling quota</a> in the <i>Cloud Map Developer Guide</i>.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.servicediscovery#ResourceCount": {
      "type": "integer"
    },
    "com.amazonaws.servicediscovery#ResourceDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.servicediscovery#ResourceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        }
      }
    },
    "com.amazonaws.servicediscovery#ResourceInUse": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource can't be deleted because it contains other resources. For example, you can't delete\n   a service that contains any instances.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.servicediscovery#ResourceLimitExceeded": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource can't be created because you've reached the quota on the number of resources.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation can't be completed because the resource was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#ResourcePath": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.servicediscovery#Revision": {
      "type": "long"
    },
    "com.amazonaws.servicediscovery#Route53AutoNaming_v20170314": {
      "type": "service",
      "version": "2017-03-14",
      "operations": [
        {
          "target": "com.amazonaws.servicediscovery#CreateHttpNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#CreatePrivateDnsNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#CreatePublicDnsNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#CreateService"
        },
        {
          "target": "com.amazonaws.servicediscovery#DeleteNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#DeleteService"
        },
        {
          "target": "com.amazonaws.servicediscovery#DeleteServiceAttributes"
        },
        {
          "target": "com.amazonaws.servicediscovery#DeregisterInstance"
        },
        {
          "target": "com.amazonaws.servicediscovery#DiscoverInstances"
        },
        {
          "target": "com.amazonaws.servicediscovery#DiscoverInstancesRevision"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetInstance"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetInstancesHealthStatus"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetOperation"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetService"
        },
        {
          "target": "com.amazonaws.servicediscovery#GetServiceAttributes"
        },
        {
          "target": "com.amazonaws.servicediscovery#ListInstances"
        },
        {
          "target": "com.amazonaws.servicediscovery#ListNamespaces"
        },
        {
          "target": "com.amazonaws.servicediscovery#ListOperations"
        },
        {
          "target": "com.amazonaws.servicediscovery#ListServices"
        },
        {
          "target": "com.amazonaws.servicediscovery#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.servicediscovery#RegisterInstance"
        },
        {
          "target": "com.amazonaws.servicediscovery#TagResource"
        },
        {
          "target": "com.amazonaws.servicediscovery#UntagResource"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdateHttpNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdateInstanceCustomHealthStatus"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdatePublicDnsNamespace"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdateService"
        },
        {
          "target": "com.amazonaws.servicediscovery#UpdateServiceAttributes"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "ServiceDiscovery",
          "arnNamespace": "servicediscovery",
          "cloudFormationName": "ServiceDiscovery",
          "cloudTrailEventSource": "servicediscovery.amazonaws.com",
          "endpointPrefix": "servicediscovery"
        },
        "aws.auth#sigv4": {
          "name": "servicediscovery"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<fullname>Cloud Map</fullname>\n         <p>With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice\n   applications run in. When an instance becomes available, you can call the Cloud Map API to register the\n   instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and\n   an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service\n   receive an answer that contains up to eight healthy records. </p>",
        "smithy.api#title": "AWS Cloud Map",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://servicediscovery-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://servicediscovery-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://servicediscovery.{Region}.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws-cn",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://servicediscovery.{Region}.amazonaws.com.cn",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [
                                {
                                  "fn": "stringEquals",
                                  "argv": [
                                    "aws-us-gov",
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "name"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "endpoint": {
                                "url": "https://servicediscovery.{Region}.amazonaws.com",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            },
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://servicediscovery.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://servicediscovery.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-southeast-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "ca-central-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-3 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.eu-west-3.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-3",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-northwest-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.cn-northwest-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-northwest-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-west-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-gov-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-west-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://servicediscovery.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.servicediscovery#RoutingPolicy": {
      "type": "enum",
      "members": {
        "MULTIVALUE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MULTIVALUE"
          }
        },
        "WEIGHTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WEIGHTED"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#SOA": {
      "type": "structure",
      "members": {
        "TTL": {
          "target": "com.amazonaws.servicediscovery#RecordTTL",
          "traits": {
            "smithy.api#documentation": "<p>The time to live (TTL) for purposes\n   of negative caching.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Start of Authority (SOA) properties\n   for a public or private DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#SOAChange": {
      "type": "structure",
      "members": {
        "TTL": {
          "target": "com.amazonaws.servicediscovery#RecordTTL",
          "traits": {
            "smithy.api#documentation": "<p>The updated time to live (TTL) for\n   purposes of negative caching.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Updated Start of Authority (SOA)\n   properties for a public or private DNS namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#Service": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID that Cloud Map assigned to the service when you created it.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.servicediscovery#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that Cloud Map assigns to the service when you create it.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the service.</p>"
          }
        },
        "NamespaceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that was used to create the service.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description of the service.</p>"
          }
        },
        "InstanceCount": {
          "target": "com.amazonaws.servicediscovery#ResourceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances that are currently associated with the service. Instances that were previously\n   associated with the service but that are deleted aren't included in the count. The count might not reflect\n   pending registrations and deregistrations.</p>"
          }
        },
        "DnsConfig": {
          "target": "com.amazonaws.servicediscovery#DnsConfig",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about the RouteÂ 53 DNS records that you want Cloud Map to create\n   when you register an instance.</p>\n         <important>\n            <p>The record types of a service can only be changed by deleting the service and recreating it with a new\n     <code>Dnsconfig</code>.</p>\n         </important>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#ServiceType",
          "traits": {
            "smithy.api#documentation": "<p>Describes the systems that can be used to discover the service instances.</p>\n         <dl>\n            <dt>DNS_HTTP</dt>\n            <dd>\n               <p>The service instances can be discovered using either DNS queries or the <code>DiscoverInstances</code>\n      API operation.</p>\n            </dd>\n            <dt>HTTP</dt>\n            <dd>\n               <p>The service instances can only be discovered using the <code>DiscoverInstances</code> API\n      operation.</p>\n            </dd>\n            <dt>DNS</dt>\n            <dd>\n               <p>Reserved.</p>\n            </dd>\n         </dl>"
          }
        },
        "HealthCheckConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckConfig",
          "traits": {
            "smithy.api#documentation": "<p>\n            <i>Public DNS and HTTP namespaces only.</i> A complex type that contains settings for an\n   optional health check. If you specify settings for a health check, Cloud Map associates the health check with\n   the records that you specify in <code>DnsConfig</code>.</p>\n         <p>For information about the charges for health checks, see <a href=\"http://aws.amazon.com/route53/pricing/\">Amazon RouteÂ 53 Pricing</a>.</p>"
          }
        },
        "HealthCheckCustomConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckCustomConfig",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains information about an optional custom health check.</p>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>"
          }
        },
        "CreateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the service was created, in Unix format and Coordinated Universal Time (UTC). The\n   value of <code>CreateDate</code> is accurate to milliseconds. For example, the value <code>1516925490.087</code>\n   represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
          }
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the request and that allows failed requests to be retried without the risk\n   of running the operation twice. <code>CreatorRequestId</code> can be any unique string (for example, a\n   date/timestamp).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about the specified service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#ServiceAlreadyExists": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        },
        "CreatorRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The <code>CreatorRequestId</code> that was used to create the service.</p>"
          }
        },
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the existing service.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The service can't be created because a service with the same name already exists.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributeKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributeKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#ServiceAttributeKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 30
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributeValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributes": {
      "type": "structure",
      "members": {
        "ServiceArn": {
          "target": "com.amazonaws.servicediscovery#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of the service that the attributes are associated with.</p>"
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#ServiceAttributesMap",
          "traits": {
            "smithy.api#documentation": "<p>A string map that contains the following information for the service that you specify in\n   <code>ServiceArn</code>:</p>\n         <ul>\n            <li>\n               <p>The attributes that apply to the service. </p>\n            </li>\n            <li>\n               <p>For each attribute, the applicable value.</p>\n            </li>\n         </ul>\n         <p>You can specify a total of 30 attributes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about attributes associated with a specific service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributesLimitExceededException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The attribute can't be added to the service because you've exceeded the quota for the number of attributes you can add to a service.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#ServiceAttributesMap": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.servicediscovery#ServiceAttributeKey"
      },
      "value": {
        "target": "com.amazonaws.servicediscovery#ServiceAttributeValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 30
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceChange": {
      "type": "structure",
      "members": {
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>A description for the service.</p>"
          }
        },
        "DnsConfig": {
          "target": "com.amazonaws.servicediscovery#DnsConfigChange",
          "traits": {
            "smithy.api#documentation": "<p>Information about the RouteÂ 53 DNS records that you want Cloud Map to create when you register an\n   instance.</p>"
          }
        },
        "HealthCheckConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckConfig",
          "traits": {
            "smithy.api#documentation": "<p>\n            <i>Public DNS and HTTP namespaces only.</i> Settings for an optional health check. If you\n   specify settings for a health check, Cloud Map associates the health check with the records that you specify in\n    <code>DnsConfig</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains changes to an existing service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#ServiceFilter": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.servicediscovery#ServiceFilterName",
          "traits": {
            "smithy.api#documentation": "<p>Specify <code>NAMESPACE_ID</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "Values": {
          "target": "com.amazonaws.servicediscovery#FilterValues",
          "traits": {
            "smithy.api#documentation": "<p>The values that are applicable to the value that you specify for <code>Condition</code> to filter the list\n   of services.</p>",
            "smithy.api#required": {}
          }
        },
        "Condition": {
          "target": "com.amazonaws.servicediscovery#FilterCondition",
          "traits": {
            "smithy.api#documentation": "<p>The operator that you want to use to determine whether a service is returned by <code>ListServices</code>.\n   Valid values for <code>Condition</code> include the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>EQ</code>: When you specify <code>EQ</code>, specify one namespace ID for <code>Values</code>.\n      <code>EQ</code> is the default condition and can be omitted.</p>\n            </li>\n         </ul>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that lets you specify the namespaces that you want to list services for.</p>"
      }
    },
    "com.amazonaws.servicediscovery#ServiceFilterName": {
      "type": "enum",
      "members": {
        "NAMESPACE_ID": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NAMESPACE_ID"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#ServiceFilter",
        "traits": {
          "smithy.api#xmlName": "item"
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^((?=^.{1,127}$)^([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9])(\\.([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9]))*$)|(^\\.$)$"
      }
    },
    "com.amazonaws.servicediscovery#ServiceNotFound": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>No service exists with the specified ID.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.servicediscovery#ServiceSummariesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#ServiceSummary"
      }
    },
    "com.amazonaws.servicediscovery#ServiceSummary": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID that Cloud Map assigned to the service when you created it.</p>"
          }
        },
        "Arn": {
          "target": "com.amazonaws.servicediscovery#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that Cloud Map assigns to the service when you create it.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.servicediscovery#ServiceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the service.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.servicediscovery#ServiceType",
          "traits": {
            "smithy.api#documentation": "<p>Describes the systems that can be used to discover the service instances.</p>\n         <dl>\n            <dt>DNS_HTTP</dt>\n            <dd>\n               <p>The service instances can be discovered using either DNS queries or the <code>DiscoverInstances</code>\n      API operation.</p>\n            </dd>\n            <dt>HTTP</dt>\n            <dd>\n               <p>The service instances can only be discovered using the <code>DiscoverInstances</code> API\n      operation.</p>\n            </dd>\n            <dt>DNS</dt>\n            <dd>\n               <p>Reserved.</p>\n            </dd>\n         </dl>"
          }
        },
        "Description": {
          "target": "com.amazonaws.servicediscovery#ResourceDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description that you specify when you create the service.</p>"
          }
        },
        "InstanceCount": {
          "target": "com.amazonaws.servicediscovery#ResourceCount",
          "traits": {
            "smithy.api#documentation": "<p>The number of instances that are currently associated with the service. Instances that were previously\n   associated with the service but that are deleted aren't included in the count. The count might not reflect\n   pending registrations and deregistrations.</p>"
          }
        },
        "DnsConfig": {
          "target": "com.amazonaws.servicediscovery#DnsConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the RouteÂ 53 DNS records that you want Cloud Map to create when you register an\n   instance.</p>"
          }
        },
        "HealthCheckConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckConfig",
          "traits": {
            "smithy.api#documentation": "<p>\n            <i>Public DNS and HTTP namespaces only.</i> Settings for an optional health check. If you\n   specify settings for a health check, Cloud Map associates the health check with the records that you specify in\n    <code>DnsConfig</code>.</p>"
          }
        },
        "HealthCheckCustomConfig": {
          "target": "com.amazonaws.servicediscovery#HealthCheckCustomConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about an optional custom health check. A custom health check, which requires that you use a\n   third-party health checker to evaluate the health of your resources, is useful in the following\n   circumstances:</p>\n         <ul>\n            <li>\n               <p>You can't use a health check that's defined by <code>HealthCheckConfig</code> because the resource isn't\n     available over the internet. For example, you can use a custom health check when the instance is in an Amazon\n     VPC. (To check the health of resources in a VPC, the health checker must also be in the VPC.)</p>\n            </li>\n            <li>\n               <p>You want to use a third-party health checker regardless of where your resources are located.</p>\n            </li>\n         </ul>\n         <important>\n            <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code>\n    or <code>HealthCheckConfig</code> but not both.</p>\n         </important>"
          }
        },
        "CreateDate": {
          "target": "com.amazonaws.servicediscovery#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time that the service was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A complex type that contains information about a specified service.</p>"
      }
    },
    "com.amazonaws.servicediscovery#ServiceType": {
      "type": "enum",
      "members": {
        "HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP"
          }
        },
        "DNS_HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DNS_HTTP"
          }
        },
        "DNS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DNS"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#ServiceTypeOption": {
      "type": "enum",
      "members": {
        "HTTP": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "HTTP"
          }
        }
      }
    },
    "com.amazonaws.servicediscovery#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.servicediscovery#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>The key identifier, or name, of the tag.</p>",
            "smithy.api#required": {}
          }
        },
        "Value": {
          "target": "com.amazonaws.servicediscovery#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>The string value that's associated with the key of the tag. You can set the value of a tag to an empty\n   string, but you can't set the value of a tag to null.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A custom key-value pair that's associated with a resource.</p>"
      }
    },
    "com.amazonaws.servicediscovery#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.servicediscovery#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.servicediscovery#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.servicediscovery#Tag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.servicediscovery#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.servicediscovery#TooManyTagsException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Adds one or more tags to the specified resource.</p>",
        "smithy.api#examples": [
          {
            "title": "TagResource example",
            "documentation": "This example adds \"Department\" and \"Project\" tags to a resource.",
            "input": {
              "ResourceARN": "arn:aws:servicediscovery:us-east-1:123456789012:namespace/ns-ylexjili4cdxy3xm",
              "Tags": [
                {
                  "Key": "Department",
                  "Value": "Engineering"
                },
                {
                  "Key": "Project",
                  "Value": "Zeta"
                }
              ]
            },
            "output": {}
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#TagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.servicediscovery#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</p>",
            "smithy.api#required": {}
          }
        },
        "Tags": {
          "target": "com.amazonaws.servicediscovery#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the specified resource. Specifying the tag key is required. You can set the value of a\n   tag to an empty string, but you can't set the value of a tag to null.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.servicediscovery#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.servicediscovery#TooManyTagsException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.servicediscovery#ErrorMessage"
        },
        "ResourceName": {
          "target": "com.amazonaws.servicediscovery#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The list of tags on the resource is over the quota. The maximum number of tags that can be applied to a\n   resource is 50.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.servicediscovery#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes one or more tags from the specified resource.</p>",
        "smithy.api#examples": [
          {
            "title": "UntagResource example",
            "documentation": "This example removes the \"Department\" and \"Project\" tags from a resource.",
            "input": {
              "ResourceARN": "arn:aws:servicediscovery:us-east-1:123456789012:namespace/ns-ylexjili4cdxy3xm",
              "TagKeys": ["Project", "Department"]
            },
            "output": {}
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "ResourceARN": {
          "target": "com.amazonaws.servicediscovery#AmazonResourceName",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to retrieve tags for.</p>",
            "smithy.api#required": {}
          }
        },
        "TagKeys": {
          "target": "com.amazonaws.servicediscovery#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>The tag keys to remove from the specified resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateHttpNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdateHttpNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UpdateHttpNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an HTTP\n   namespace.</p>",
        "smithy.api#examples": [
          {
            "title": "To update a HTTP namespace",
            "documentation": "The following example updates the description of a HTTP namespace.",
            "input": {
              "Id": "ns-vh4nbmEXAMPLE",
              "Namespace": {
                "Description": "The updated namespace description."
              }
            },
            "output": {
              "OperationId": "ft52xe2koxhoeormaceymagglsdjyvEXAMPLE"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UpdateHttpNamespaceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that you\n   want to update.</p>",
            "smithy.api#required": {}
          }
        },
        "UpdaterRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the\n   request and that allows failed <code>UpdateHttpNamespace</code> requests to be retried without the risk of\n   running the operation twice. <code>UpdaterRequestId</code> can be any unique string (for example, a\n   date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Namespace": {
          "target": "com.amazonaws.servicediscovery#HttpNamespaceChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated properties for the the HTTP\n   namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateHttpNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateInstanceCustomHealthStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdateInstanceCustomHealthStatusRequest"
      },
      "output": {
        "target": "smithy.api#Unit"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#CustomHealthNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#InstanceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Submits a request to change the health status of a custom health check to healthy or unhealthy.</p>\n         <p>You can use <code>UpdateInstanceCustomHealthStatus</code> to change the status only for custom health\n   checks, which you define using <code>HealthCheckCustomConfig</code> when you create a service. You can't use it\n   to change the status for RouteÂ 53 health checks, which you define using <code>HealthCheckConfig</code>.</p>\n         <p>For more information, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html\">HealthCheckCustomConfig</a>.</p>",
        "smithy.api#examples": [
          {
            "title": "UpdateInstanceCustomHealthStatus Example",
            "documentation": "This example submits a request to change the health status of an instance associated with a service with a custom health check to HEALTHY.",
            "input": {
              "InstanceId": "i-abcd1234",
              "ServiceId": "srv-e4anhexample0004",
              "Status": "HEALTHY"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UpdateInstanceCustomHealthStatusRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that includes the configuration for the custom health check that you want to change\n   the status for.</p>",
            "smithy.api#required": {}
          }
        },
        "InstanceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the instance that you want to change the health status for.</p>",
            "smithy.api#required": {}
          }
        },
        "Status": {
          "target": "com.amazonaws.servicediscovery#CustomHealthStatus",
          "traits": {
            "smithy.api#documentation": "<p>The new status of the instance, <code>HEALTHY</code> or <code>UNHEALTHY</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a private DNS\n   namespace.</p>",
        "smithy.api#examples": [
          {
            "title": "To update a private DNS namespace",
            "documentation": "The following example updates the description of a private DNS namespace.",
            "input": {
              "Id": "ns-bk3aEXAMPLE",
              "UpdaterRequestId": "",
              "Namespace": {
                "Description": "The updated namespace description."
              }
            },
            "output": {
              "OperationId": "ft52xe2koxhoeormaceymagglsdjyvEXAMPLE"
            }
          },
          {
            "title": "To update a public DNS namespace",
            "documentation": "The following example updates the description of a public DNS namespace.",
            "input": {
              "Id": "ns-bk3aEXAMPLE",
              "UpdaterRequestId": "",
              "Namespace": {
                "Description": "The updated namespace description."
              }
            },
            "output": {
              "OperationId": "ft52xe2koxhoeormaceymagglsdjEXAMPLE"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespaceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace that you\n   want to update.</p>",
            "smithy.api#required": {}
          }
        },
        "UpdaterRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the\n   request and that allows failed <code>UpdatePrivateDnsNamespace</code> requests to be retried without the risk of\n   running the operation twice. <code>UpdaterRequestId</code> can be any unique string (for example, a\n   date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Namespace": {
          "target": "com.amazonaws.servicediscovery#PrivateDnsNamespaceChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated properties for the private\n   DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdatePrivateDnsNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdatePublicDnsNamespace": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdatePublicDnsNamespaceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UpdatePublicDnsNamespaceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#NamespaceNotFound"
        },
        {
          "target": "com.amazonaws.servicediscovery#ResourceInUse"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a public DNS\n   namespace.</p>"
      }
    },
    "com.amazonaws.servicediscovery#UpdatePublicDnsNamespaceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the namespace being\n   updated.</p>",
            "smithy.api#required": {}
          }
        },
        "UpdaterRequestId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>A unique string that identifies the\n   request and that allows failed <code>UpdatePublicDnsNamespace</code> requests to be retried without the risk of\n   running the operation twice. <code>UpdaterRequestId</code> can be any unique string (for example, a\n   date/timestamp).</p>",
            "smithy.api#idempotencyToken": {}
          }
        },
        "Namespace": {
          "target": "com.amazonaws.servicediscovery#PublicDnsNamespaceChange",
          "traits": {
            "smithy.api#documentation": "<p>Updated properties for the public\n   DNS namespace.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdatePublicDnsNamespaceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateService": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdateServiceRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UpdateServiceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#DuplicateRequest"
        },
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Submits a request to perform the following operations:</p>\n         <ul>\n            <li>\n               <p>Update the TTL setting for existing <code>DnsRecords</code> configurations</p>\n            </li>\n            <li>\n               <p>Add, update, or delete <code>HealthCheckConfig</code> for a specified service</p>\n               <note>\n                  <p>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration.</p>\n               </note>\n            </li>\n         </ul>\n         <p>For public and private DNS namespaces, note the following:</p>\n         <ul>\n            <li>\n               <p>If you omit any existing <code>DnsRecords</code> or <code>HealthCheckConfig</code> configurations from an\n      <code>UpdateService</code> request, the configurations are deleted from the service.</p>\n            </li>\n            <li>\n               <p>If you omit an existing <code>HealthCheckCustomConfig</code> configuration from an\n      <code>UpdateService</code> request, the configuration isn't deleted from the service.</p>\n            </li>\n         </ul>\n         <p>When you update settings for a service, Cloud Map also updates the corresponding settings in all the\n   records and health checks that were created by using the specified service.</p>",
        "smithy.api#examples": [
          {
            "title": "UpdateService Example",
            "documentation": "This example submits a request to replace the DnsConfig and HealthCheckConfig settings of a specified service.",
            "input": {
              "Id": "srv-e4anhexample0004",
              "Service": {
                "HealthCheckConfig": {
                  "Type": "HTTP",
                  "ResourcePath": "/",
                  "FailureThreshold": 2
                },
                "DnsConfig": {
                  "DnsRecords": [
                    {
                      "Type": "A",
                      "TTL": 60
                    }
                  ]
                }
              }
            },
            "output": {
              "OperationId": "m35hsdrkxwjffm3xef4bxyy6vc3ewakx-jdn3y5g5"
            }
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UpdateServiceAttributes": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.servicediscovery#UpdateServiceAttributesRequest"
      },
      "output": {
        "target": "com.amazonaws.servicediscovery#UpdateServiceAttributesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.servicediscovery#InvalidInput"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceAttributesLimitExceededException"
        },
        {
          "target": "com.amazonaws.servicediscovery#ServiceNotFound"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Submits a request to update a specified service to add service-level attributes.</p>",
        "smithy.api#examples": [
          {
            "title": "UpdateServiceAttributes Example",
            "documentation": "This example submits a request to update the specified service to add a port attribute with the value 80.",
            "input": {
              "ServiceId": "srv-e4anhexample0004",
              "Attributes": {
                "port": "80"
              }
            },
            "output": {}
          }
        ]
      }
    },
    "com.amazonaws.servicediscovery#UpdateServiceAttributesRequest": {
      "type": "structure",
      "members": {
        "ServiceId": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to update.</p>",
            "smithy.api#required": {}
          }
        },
        "Attributes": {
          "target": "com.amazonaws.servicediscovery#ServiceAttributesMap",
          "traits": {
            "smithy.api#documentation": "<p>A string map that contains attribute key-value pairs.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateServiceAttributesResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateServiceRequest": {
      "type": "structure",
      "members": {
        "Id": {
          "target": "com.amazonaws.servicediscovery#ResourceId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the service that you want to update.</p>",
            "smithy.api#required": {}
          }
        },
        "Service": {
          "target": "com.amazonaws.servicediscovery#ServiceChange",
          "traits": {
            "smithy.api#documentation": "<p>A complex type that contains the new settings for the service. You can specify a maximum of 30 attributes (key-value pairs).</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.servicediscovery#UpdateServiceResponse": {
      "type": "structure",
      "members": {
        "OperationId": {
          "target": "com.amazonaws.servicediscovery#OperationId",
          "traits": {
            "smithy.api#documentation": "<p>A value that you can use to determine whether the request completed successfully.\n                                To get the status of the operation, see <a href=\"https://docs.aws.amazon.com/cloud-map/latest/api/API_GetOperation.html\">GetOperation</a>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    }
  }
}
