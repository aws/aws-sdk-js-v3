{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.nimble#AcceptEulas": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#AcceptEulasRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#AcceptEulasResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to accept EULAs",
        "smithy.api#documentation": "<p>Accept EULAs.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/eula-acceptances",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#AcceptEulasRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "eulaIds": {
          "target": "com.amazonaws.nimble#EulaIdList",
          "traits": {
            "smithy.api#documentation": "<p>The EULA ID.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#AcceptEulasResponse": {
      "type": "structure",
      "members": {
        "eulaAcceptances": {
          "target": "com.amazonaws.nimble#EulaAcceptanceList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of EULA acceptances.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#AccessDeniedException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You are not authorized to perform this operation. Check your IAM\n            policies, and ensure that you are using the correct access keys.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryComputerAttribute": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.nimble#ActiveDirectoryComputerAttributeName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the LDAP attribute.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.nimble#ActiveDirectoryComputerAttributeValue",
          "traits": {
            "smithy.api#documentation": "<p>The value for the LDAP attribute.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An LDAP attribute of an Active Directory computer account, in the form of a name:value\n            pair.</p>"
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryComputerAttributeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#ActiveDirectoryComputerAttribute"
      },
      "traits": {
        "smithy.api#documentation": "<p>A collection of LDAP attributes to apply to Active Directory computer accounts that\n            are created for streaming sessions.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 50
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryComputerAttributeName": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The name for the LDAP attribute.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 40
        }
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryComputerAttributeValue": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The value for the LDAP attribute.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryConfiguration": {
      "type": "structure",
      "members": {
        "computerAttributes": {
          "target": "com.amazonaws.nimble#ActiveDirectoryComputerAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of custom attributes for an Active Directory computer.</p>"
          }
        },
        "directoryId": {
          "target": "com.amazonaws.nimble#DirectoryId",
          "traits": {
            "smithy.api#documentation": "<p>The directory ID of the Directory Service for Microsoft Active Directory to access using this studio\n            component.</p>"
          }
        },
        "organizationalUnitDistinguishedName": {
          "target": "com.amazonaws.nimble#ActiveDirectoryOrganizationalUnitDistinguishedName",
          "traits": {
            "smithy.api#documentation": "<p>The distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for a Directory Service for Microsoft Active Directory studio resource.</p>"
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryDnsIpAddress": {
      "type": "string"
    },
    "com.amazonaws.nimble#ActiveDirectoryDnsIpAddressList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#ActiveDirectoryDnsIpAddress"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.nimble#ActiveDirectoryOrganizationalUnitDistinguishedName": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The fully-qualified distinguished name of the organizational unit to place the\n            computer account in.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 2000
        }
      }
    },
    "com.amazonaws.nimble#AutomaticTerminationMode": {
      "type": "enum",
      "members": {
        "DEACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEACTIVATED"
          }
        },
        "ACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVATED"
          }
        }
      }
    },
    "com.amazonaws.nimble#ClientToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.nimble#ComputeFarmConfiguration": {
      "type": "structure",
      "members": {
        "activeDirectoryUser": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The name of an Active Directory user that is used on ComputeFarm worker\n            instances.</p>"
          }
        },
        "endpoint": {
          "target": "com.amazonaws.nimble#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint of the ComputeFarm that is accessed by the studio component\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for a render farm that is associated with a studio resource.</p>"
      }
    },
    "com.amazonaws.nimble#ConflictException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Another operation is in progress. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.nimble#CreateLaunchProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateLaunchProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateLaunchProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a launch profile",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "ec2:CreateNetworkInterface",
          "ec2:RunInstances",
          "ec2:DescribeSubnets",
          "ec2:DescribeRouteTables",
          "ec2:DescribeNetworkAcls",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeNatGateways"
        ],
        "smithy.api#documentation": "<p>Create a launch profile.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#CreateLaunchProfileRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#LaunchProfileDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "ec2SubnetIds": {
          "target": "com.amazonaws.nimble#EC2SubnetIdList",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from.\n            These subnets must support the specified instance types. </p>",
            "smithy.api#required": {}
          }
        },
        "launchProfileProtocolVersions": {
          "target": "com.amazonaws.nimble#LaunchProfileProtocolVersionList",
          "traits": {
            "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#LaunchProfileName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "streamConfiguration": {
          "target": "com.amazonaws.nimble#StreamConfigurationCreate",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A configuration for a streaming session.</p>",
            "smithy.api#required": {}
          }
        },
        "studioComponentIds": {
          "target": "com.amazonaws.nimble#LaunchProfileStudioComponentIdList",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource"
          }
        ]
      }
    },
    "com.amazonaws.nimble#CreateLaunchProfileResponse": {
      "type": "structure",
      "members": {
        "launchProfile": {
          "target": "com.amazonaws.nimble#LaunchProfile",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#CreateStreamingImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateStreamingImageRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateStreamingImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a streaming image",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "ec2:ModifyInstanceAttribute",
          "ec2:ModifySnapshotAttribute",
          "ec2:RegisterImage",
          "ec2:DescribeImages",
          "ec2:DescribeSnapshots"
        ],
        "smithy.api#documentation": "<p>Creates a streaming image resource in a studio.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/streaming-images",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#CreateStreamingImageRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StreamingImageDescription",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the streaming image.</p>"
          }
        },
        "ec2ImageId": {
          "target": "com.amazonaws.nimble#EC2ImageId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of an EC2 machine image with which to create this streaming image.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StreamingImageName",
          "traits": {
            "smithy.api#documentation": "<p>A friendly name for a streaming image resource.</p>",
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource"
          }
        ]
      }
    },
    "com.amazonaws.nimble#CreateStreamingImageResponse": {
      "type": "structure",
      "members": {
        "streamingImage": {
          "target": "com.amazonaws.nimble#StreamingImage",
          "traits": {
            "smithy.api#documentation": "<p>The streaming image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#CreateStreamingSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateStreamingSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateStreamingSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a streaming session",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "ec2:CreateNetworkInterface",
          "ec2:CreateNetworkInterfacePermission",
          "nimble:GetLaunchProfileInitialization",
          "nimble:GetLaunchProfile",
          "nimble:ListEulaAcceptances"
        ],
        "smithy.api#documentation": "<p>Creates a streaming session in a studio.</p>\n        <p>After invoking this operation, you must poll GetStreamingSession until the streaming\n            session is in the <code>READY</code> state.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#CreateStreamingSessionRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "ec2InstanceType": {
          "target": "com.amazonaws.nimble#StreamingInstanceType",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 Instance type used for the streaming session.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#required": {}
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that owns the streaming session. The user that owns the\n            session will be logging into the session and interacting with the virtual\n            workstation.</p>"
          }
        },
        "streamingImageId": {
          "target": "com.amazonaws.nimble#StreamingImageId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the streaming image.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#LaunchProfileResource"
          }
        ]
      }
    },
    "com.amazonaws.nimble#CreateStreamingSessionResponse": {
      "type": "structure",
      "members": {
        "session": {
          "target": "com.amazonaws.nimble#StreamingSession",
          "traits": {
            "smithy.api#documentation": "<p>The session.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#CreateStreamingSessionStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateStreamingSessionStreamRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateStreamingSessionStreamResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a streaming session stream",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Creates a streaming session stream for a streaming session.</p>\n        <p>After invoking this API, invoke GetStreamingSessionStream with the returned streamId\n            to poll the resource until it is in the <code>READY</code> state.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#CreateStreamingSessionStreamRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "expirationInSeconds": {
          "target": "com.amazonaws.nimble#StreamingSessionStreamExpirationInSeconds",
          "traits": {
            "smithy.api#default": 120,
            "smithy.api#documentation": "<p>The expiration time in seconds.</p>"
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StreamingSessionResource"
          }
        ]
      }
    },
    "com.amazonaws.nimble#CreateStreamingSessionStreamResponse": {
      "type": "structure",
      "members": {
        "stream": {
          "target": "com.amazonaws.nimble#StreamingSessionStream",
          "traits": {
            "smithy.api#documentation": "<p>The stream.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#CreateStudio": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateStudioRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateStudioResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a studio",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": ["sso:CreateManagedApplicationInstance", "iam:PassRole"],
        "smithy.api#documentation": "<p>Create a new studio.</p>\n        <p>When creating a studio, two IAM roles must be provided: the admin role\n            and the user role. These roles are assumed by your users when they log in to the Nimble Studio portal.</p>\n        <p>The user role must have the <code>AmazonNimbleStudio-StudioUser</code> managed policy\n            attached for the portal to function properly.</p>\n        <p>The admin role must have the <code>AmazonNimbleStudio-StudioAdmin</code> managed\n            policy attached for the portal to function properly.</p>\n        <p>You may optionally specify a KMS key in the\n            <code>StudioEncryptionConfiguration</code>.</p>\n        <p>In Nimble Studio, resource names, descriptions, initialization scripts, and other\n            data you provide are always encrypted at rest using an KMS key. By default, this key is\n            owned by Amazon Web Services and managed on your behalf. You may provide your own KMS key\n            when calling <code>CreateStudio</code> to encrypt this data using a key you own and\n            manage.</p>\n        <p>When providing an KMS key during studio creation, Nimble Studio creates KMS\n            grants in your account to provide your studio user and admin roles access to these KMS\n            keys.</p>\n        <p>If you delete this grant, the studio will no longer be accessible to your portal\n            users.</p>\n        <p>If you delete the studio KMS key, your studio will no longer be accessible.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#CreateStudioComponent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#CreateStudioComponentRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#CreateStudioComponentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to create a studio component. A studio component designates a network resource to which a launch profile will provide access",
        "aws.iam#conditionKeys": ["aws:TagKeys", "aws:RequestTag/${TagKey}"],
        "aws.iam#requiredActions": [
          "ec2:DescribeSecurityGroups",
          "fsx:DescribeFileSystems",
          "ds:DescribeDirectories",
          "iam:PassRole"
        ],
        "smithy.api#documentation": "<p>Creates a studio component resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/studio-components",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#CreateStudioComponentRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "configuration": {
          "target": "com.amazonaws.nimble#StudioComponentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the studio component, based on component type.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StudioComponentDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "ec2SecurityGroupIds": {
          "target": "com.amazonaws.nimble#StudioComponentSecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 security groups that control access to the studio component.</p>"
          }
        },
        "initializationScripts": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptList",
          "traits": {
            "smithy.api#documentation": "<p>Initialization scripts for studio components.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the studio component.</p>",
            "smithy.api#required": {}
          }
        },
        "scriptParameters": {
          "target": "com.amazonaws.nimble#StudioComponentScriptParameterKeyValueList",
          "traits": {
            "smithy.api#documentation": "<p>Parameters for the studio component scripts.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "subtype": {
          "target": "com.amazonaws.nimble#StudioComponentSubtype",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The specific subtype of a studio component.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.nimble#StudioComponentType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the studio component.</p>",
            "smithy.api#required": {}
          }
        },
        "secureInitializationRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to Studio Component when the system initialization\n            script runs which give the studio component access to Amazon Web Services resources when\n            the system initialization script runs.</p>"
          }
        },
        "runtimeRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to a Studio Component that gives the studio\n            component access to Amazon Web Services resources at anytime while the instance is\n            running. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource"
          }
        ]
      }
    },
    "com.amazonaws.nimble#CreateStudioComponentResponse": {
      "type": "structure",
      "members": {
        "studioComponent": {
          "target": "com.amazonaws.nimble#StudioComponent",
          "traits": {
            "smithy.api#documentation": "<p>Information about the studio component.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#CreateStudioRequest": {
      "type": "structure",
      "members": {
        "adminRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM role that studio admins will assume when logging in to the\n                Nimble Studio portal.</p>",
            "smithy.api#required": {}
          }
        },
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "displayName": {
          "target": "com.amazonaws.nimble#StudioDisplayName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A friendly name for the studio.</p>",
            "smithy.api#required": {}
          }
        },
        "studioEncryptionConfiguration": {
          "target": "com.amazonaws.nimble#StudioEncryptionConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The studio encryption configuration.</p>"
          }
        },
        "studioName": {
          "target": "com.amazonaws.nimble#StudioName",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The studio name that is used in the URL of the Nimble Studio portal when accessed\n            by Nimble Studio users.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "userRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The IAM role that studio users will assume when logging in to the\n                Nimble Studio portal.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#CreateStudioResponse": {
      "type": "structure",
      "members": {
        "studio": {
          "target": "com.amazonaws.nimble#Studio",
          "traits": {
            "smithy.api#documentation": "<p>Information about a studio.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteLaunchProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteLaunchProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a launch profile",
        "smithy.api#documentation": "<p>Permanently delete a launch profile.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfileMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteLaunchProfileMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteLaunchProfileMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a launch profile member",
        "smithy.api#documentation": "<p>Delete a user from launch profile membership.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfileMemberRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfileMemberResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfileRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteLaunchProfileResponse": {
      "type": "structure",
      "members": {
        "launchProfile": {
          "target": "com.amazonaws.nimble#LaunchProfile",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteStreamingImageRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteStreamingImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a streaming image",
        "aws.iam#requiredActions": [
          "ec2:ModifyInstanceAttribute",
          "ec2:ModifySnapshotAttribute",
          "ec2:DeregisterImage",
          "ec2:DeleteSnapshot"
        ],
        "smithy.api#documentation": "<p>Delete streaming image.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingImageRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "streamingImageId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming image ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingImageResponse": {
      "type": "structure",
      "members": {
        "streamingImage": {
          "target": "com.amazonaws.nimble#StreamingImage",
          "traits": {
            "smithy.api#documentation": "<p>The streaming image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteStreamingSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteStreamingSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a streaming session",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "aws.iam#requiredActions": ["ec2:DeleteNetworkInterface"],
        "smithy.api#documentation": "<p>Deletes streaming session resource.</p>\n        <p>After invoking this operation, use GetStreamingSession to poll the resource until it\n            transitions to a <code>DELETED</code> state.</p>\n        <p>A streaming session will count against your streaming session quota until it is marked\n                <code>DELETED</code>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingSessionRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteStreamingSessionResponse": {
      "type": "structure",
      "members": {
        "session": {
          "target": "com.amazonaws.nimble#StreamingSession",
          "traits": {
            "smithy.api#documentation": "<p>The session.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudio": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteStudioRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteStudioResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a studio",
        "aws.iam#requiredActions": ["sso:DeleteManagedApplicationInstance"],
        "smithy.api#documentation": "<p>Delete a studio resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioComponent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteStudioComponentRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteStudioComponentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a studio component",
        "smithy.api#documentation": "<p>Deletes a studio component resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioComponentRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio component ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioComponentResponse": {
      "type": "structure",
      "members": {
        "studioComponent": {
          "target": "com.amazonaws.nimble#StudioComponent",
          "traits": {
            "smithy.api#documentation": "<p>Information about the studio component.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#DeleteStudioMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#DeleteStudioMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a studio member",
        "smithy.api#documentation": "<p>Delete a user from studio membership.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/studios/{studioId}/membership/{principalId}",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioMemberRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioMemberResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#DeleteStudioResponse": {
      "type": "structure",
      "members": {
        "studio": {
          "target": "com.amazonaws.nimble#Studio",
          "traits": {
            "smithy.api#documentation": "<p>Information about a studio.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#DirectoryId": {
      "type": "string"
    },
    "com.amazonaws.nimble#EC2ImageId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^ami-[0-9A-z]+$"
      }
    },
    "com.amazonaws.nimble#EC2SubnetId": {
      "type": "string"
    },
    "com.amazonaws.nimble#EC2SubnetIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#EC2SubnetId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 6
        }
      }
    },
    "com.amazonaws.nimble#Eula": {
      "type": "structure",
      "members": {
        "content": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The EULA content.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "eulaId": {
          "target": "com.amazonaws.nimble#EulaId",
          "traits": {
            "smithy.api#documentation": "<p>The EULA ID.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#EulaName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the EULA.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a EULA resource.</p>"
      }
    },
    "com.amazonaws.nimble#EulaAcceptance": {
      "type": "structure",
      "members": {
        "acceptedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the EULA was accepted.</p>"
          }
        },
        "acceptedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the person who accepted the EULA.</p>"
          }
        },
        "accepteeId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the acceptee.</p>"
          }
        },
        "eulaAcceptanceId": {
          "target": "com.amazonaws.nimble#EulaAcceptanceId",
          "traits": {
            "smithy.api#documentation": "<p>The EULA acceptance ID.</p>"
          }
        },
        "eulaId": {
          "target": "com.amazonaws.nimble#EulaId",
          "traits": {
            "smithy.api#documentation": "<p>The EULA ID.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The acceptance of a EULA, required to use Amazon-provided streaming images.</p>"
      }
    },
    "com.amazonaws.nimble#EulaAcceptanceId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The EULA acceptance ID.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 22
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.nimble#EulaAcceptanceList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#EulaAcceptance"
      }
    },
    "com.amazonaws.nimble#EulaAcceptanceResource": {
      "type": "resource",
      "identifiers": {
        "eulaAcceptanceId": {
          "target": "com.amazonaws.nimble#EulaAcceptanceId"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#AcceptEulas"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListEulaAcceptances"
      },
      "traits": {
        "aws.api#arn": {
          "template": "eula-acceptance/{eulaAcceptanceId}"
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "nimble:studioId"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "eula-acceptance"
        },
        "smithy.api#documentation": "Represents the acceptance of a EULA, specific to a studio"
      }
    },
    "com.amazonaws.nimble#EulaId": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>Represents a EULA resource.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 22
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.nimble#EulaIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#String"
      }
    },
    "com.amazonaws.nimble#EulaList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#Eula"
      }
    },
    "com.amazonaws.nimble#EulaName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        }
      }
    },
    "com.amazonaws.nimble#EulaResource": {
      "type": "resource",
      "identifiers": {
        "eulaId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "read": {
        "target": "com.amazonaws.nimble#GetEula"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListEulas"
      },
      "traits": {
        "aws.api#arn": {
          "template": "eula/{eulaId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}", "aws:RequestTag/${TagKey}", "aws:TagKeys"],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "eula"
        },
        "smithy.api#documentation": "Represents a EULA that is required to be accepted before the use of certain streaming images"
      }
    },
    "com.amazonaws.nimble#ExceptionContext": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.nimble#String"
      },
      "value": {
        "target": "com.amazonaws.nimble#String"
      },
      "traits": {
        "smithy.api#documentation": "<p>ExceptionContext is a set of key-value pairs that provide you with more information\n            about the error that occurred. For example, when the service returns a 404\n            ResourceNotFound error, ExceptionContext will contain the key `resourceId` with the\n            value of resource that was not found.</p>\n        <p>\n            <code>ExceptionContext</code> allows scripts and other programmatic clients to provide\n            better error handling.</p>"
      }
    },
    "com.amazonaws.nimble#GetEula": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetEulaRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetEulaResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a EULA",
        "smithy.api#documentation": "<p>Get EULA.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/eulas/{eulaId}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetEulaRequest": {
      "type": "structure",
      "members": {
        "eulaId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The EULA ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetEulaResponse": {
      "type": "structure",
      "members": {
        "eula": {
          "target": "com.amazonaws.nimble#Eula",
          "traits": {
            "smithy.api#documentation": "<p>The EULA.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetLaunchProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetLaunchProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a launch profile",
        "smithy.api#documentation": "<p>Get a launch profile.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "LaunchProfileReady": {
            "documentation": "Wait until a LaunchProfile is Ready. Use this after invoking CreateLaunchProfile or UpdateLaunchProfile",
            "minDelay": 5,
            "maxDelay": 750,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "launchProfile.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "launchProfile.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "launchProfile.state",
                    "expected": "UPDATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "LaunchProfileDeleted": {
            "documentation": "Wait until a LaunchProfile is Deleted. Use this after invoking DeleteLaunchProfile",
            "minDelay": 5,
            "maxDelay": 750,
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "launchProfile.state",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "launchProfile.state",
                    "expected": "DELETE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileDetails": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetLaunchProfileDetailsRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetLaunchProfileDetailsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a launch profile's details, which includes the summary of studio components and streaming images used by the launch profile",
        "smithy.api#documentation": "<p>Launch profile details include the launch profile resource and summary information of\n            resources that are used by, or available to, the launch profile. This includes the name\n            and description of all studio components used by the launch profiles, and the name and\n            description of streaming images that can be used with this launch profile.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileDetailsRequest": {
      "type": "structure",
      "members": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileDetailsResponse": {
      "type": "structure",
      "members": {
        "launchProfile": {
          "target": "com.amazonaws.nimble#LaunchProfile",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile.</p>"
          }
        },
        "streamingImages": {
          "target": "com.amazonaws.nimble#StreamingImageList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of streaming images.</p>"
          }
        },
        "studioComponentSummaries": {
          "target": "com.amazonaws.nimble#StudioComponentSummaryList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of studio component summaries.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileInitialization": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetLaunchProfileInitializationRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetLaunchProfileInitializationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a launch profile initialization. A launch profile initialization is a dereferenced version of a launch profile, including attached studio component connection information",
        "aws.iam#requiredActions": ["ec2:DescribeSecurityGroups", "fsx:DescribeFileSystems", "ds:DescribeDirectories"],
        "smithy.api#documentation": "<p>Get a launch profile initialization.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileInitializationRequest": {
      "type": "structure",
      "members": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "launchProfileProtocolVersions": {
          "target": "com.amazonaws.nimble#StringList",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile protocol versions supported by the client.</p>",
            "smithy.api#httpQuery": "launchProfileProtocolVersions",
            "smithy.api#required": {}
          }
        },
        "launchPurpose": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The launch purpose.</p>",
            "smithy.api#httpQuery": "launchPurpose",
            "smithy.api#required": {}
          }
        },
        "platform": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The platform where this Launch Profile will be used, either Windows or Linux.</p>",
            "smithy.api#httpQuery": "platform",
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileInitializationResponse": {
      "type": "structure",
      "members": {
        "launchProfileInitialization": {
          "target": "com.amazonaws.nimble#LaunchProfileInitialization",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile initialization.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetLaunchProfileMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetLaunchProfileMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a launch profile member",
        "smithy.api#documentation": "<p>Get a user persona in launch profile membership.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileMemberRequest": {
      "type": "structure",
      "members": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileMemberResponse": {
      "type": "structure",
      "members": {
        "member": {
          "target": "com.amazonaws.nimble#LaunchProfileMembership",
          "traits": {
            "smithy.api#documentation": "<p>The member.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileRequest": {
      "type": "structure",
      "members": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetLaunchProfileResponse": {
      "type": "structure",
      "members": {
        "launchProfile": {
          "target": "com.amazonaws.nimble#LaunchProfile",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The launch profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStreamingImageRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStreamingImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a streaming image",
        "smithy.api#documentation": "<p>Get streaming image.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "StreamingImageReady": {
            "documentation": "Wait until a StreamingImage is Ready. Use this after invoking CreateStreamingImage or UpdateStreamingImage",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "streamingImage.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "streamingImage.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "streamingImage.state",
                    "expected": "UPDATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "StreamingImageDeleted": {
            "documentation": "Wait until a StreamingImage Deleted. Use this after invoking DeleteStreamingImage",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "streamingImage.state",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "streamingImage.state",
                    "expected": "DELETE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetStreamingImageRequest": {
      "type": "structure",
      "members": {
        "streamingImageId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming image ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingImageResponse": {
      "type": "structure",
      "members": {
        "streamingImage": {
          "target": "com.amazonaws.nimble#StreamingImage",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The streaming image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStreamingSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStreamingSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a streaming session",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Gets StreamingSession resource.</p>\n        <p>Invoke this operation to poll for a streaming session state while creating or deleting\n            a session.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "StreamingSessionReady": {
            "minDelay": 10,
            "maxDelay": 1800,
            "documentation": "Wait until a StreamingSession is ready. Use this after invoking CreateStreamingSession, StartStreamingSession",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "START_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "StreamingSessionStopped": {
            "minDelay": 5,
            "maxDelay": 900,
            "documentation": "Wait until a StreamingSessionStopped. Use this after invoking StopStreamingSession",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "STOPPED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "STOP_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "StreamingSessionDeleted": {
            "minDelay": 5,
            "maxDelay": 900,
            "documentation": "Wait until a StreamingSessionDeleted. Use this after invoking DeleteStreamingSession",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "session.state",
                    "expected": "DELETE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionBackup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStreamingSessionBackupRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStreamingSessionBackupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a streaming session backup",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Gets <code>StreamingSessionBackup</code> resource.</p>\n        <p>Invoke this operation to poll for a streaming session backup while stopping a\n            streaming session.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-session-backups/{backupId}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionBackupRequest": {
      "type": "structure",
      "members": {
        "backupId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the backup.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionBackupResponse": {
      "type": "structure",
      "members": {
        "streamingSessionBackup": {
          "target": "com.amazonaws.nimble#StreamingSessionBackup",
          "traits": {
            "smithy.api#documentation": "<p>Information about the streaming session backup.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionRequest": {
      "type": "structure",
      "members": {
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionResponse": {
      "type": "structure",
      "members": {
        "session": {
          "target": "com.amazonaws.nimble#StreamingSession",
          "traits": {
            "smithy.api#documentation": "<p>The session.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionStream": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStreamingSessionStreamRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStreamingSessionStreamResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a streaming session",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Gets a StreamingSessionStream for a streaming session.</p>\n        <p>Invoke this operation to poll the resource after invoking\n                <code>CreateStreamingSessionStream</code>.</p>\n        <p>After the <code>StreamingSessionStream</code> changes to the <code>READY</code> state,\n            the url property will contain a stream to be used with the DCV streaming client.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "StreamingSessionStreamReady": {
            "minDelay": 5,
            "maxDelay": 150,
            "documentation": "Wait until a StreamingSessionStream is ready. Use this after invoking CreateStreamingSessionStream",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "stream.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "stream.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionStreamRequest": {
      "type": "structure",
      "members": {
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "streamId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session stream ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStreamingSessionStreamResponse": {
      "type": "structure",
      "members": {
        "stream": {
          "target": "com.amazonaws.nimble#StreamingSessionStream",
          "traits": {
            "smithy.api#documentation": "<p>The stream.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStudio": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStudioRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStudioResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a studio",
        "smithy.api#documentation": "<p>Get a studio resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "StudioReady": {
            "documentation": "Wait until a Studio is Ready. Use this after invoking CreateStudio, UpdateStudio, or StartStudioSSOConfigurationRepair",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "studio.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studio.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studio.state",
                    "expected": "UPDATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "StudioDeleted": {
            "documentation": "Wait until a Studio is Deleted. Use this after invoking DeleteStudio.",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "studio.state",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studio.state",
                    "expected": "DELETE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetStudioComponent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStudioComponentRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStudioComponentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to get a studio component",
        "smithy.api#documentation": "<p>Gets a studio component resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}",
          "code": 200
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "StudioComponentReady": {
            "documentation": "Wait until a StudioComponent is Ready. Use this after invoking CreateStudioComponent or UpdateStudioComponent",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "studioComponent.state",
                    "expected": "READY",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studioComponent.state",
                    "expected": "CREATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studioComponent.state",
                    "expected": "UPDATE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          },
          "StudioComponentDeleted": {
            "minDelay": 1,
            "maxDelay": 120,
            "documentation": "Wait until a StudioComponent Deleted. Use this after invoking DeleteStudioComponent",
            "acceptors": [
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "studioComponent.state",
                    "expected": "DELETED",
                    "comparator": "stringEquals"
                  }
                }
              },
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "studioComponent.state",
                    "expected": "DELETE_FAILED",
                    "comparator": "stringEquals"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.nimble#GetStudioComponentRequest": {
      "type": "structure",
      "members": {
        "studioComponentId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio component ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStudioComponentResponse": {
      "type": "structure",
      "members": {
        "studioComponent": {
          "target": "com.amazonaws.nimble#StudioComponent",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Information about the studio component.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStudioMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#GetStudioMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#GetStudioMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to delete a studio member",
        "smithy.api#documentation": "<p>Get a user's membership in a studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/membership/{principalId}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#GetStudioMemberRequest": {
      "type": "structure",
      "members": {
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStudioMemberResponse": {
      "type": "structure",
      "members": {
        "member": {
          "target": "com.amazonaws.nimble#StudioMembership",
          "traits": {
            "smithy.api#documentation": "<p>The member.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#GetStudioRequest": {
      "type": "structure",
      "members": {
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#GetStudioResponse": {
      "type": "structure",
      "members": {
        "studio": {
          "target": "com.amazonaws.nimble#Studio",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Information about a studio.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#InternalServerErrorException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An internal error has occurred. Please retry your request.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.nimble#LaunchProfile": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The user ID of the user that created the launch profile.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#LaunchProfileDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A human-readable description of the launch profile.</p>"
          }
        },
        "ec2SubnetIds": {
          "target": "com.amazonaws.nimble#EC2SubnetIdList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Unique identifiers for a collection of EC2 subnets.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#LaunchProfileId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>"
          }
        },
        "launchProfileProtocolVersions": {
          "target": "com.amazonaws.nimble#LaunchProfileProtocolVersionList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#LaunchProfileName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A friendly name for the launch profile.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#LaunchProfileState",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The current state.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#LaunchProfileStatusCode",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status code.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status message for the launch profile.</p>"
          }
        },
        "streamConfiguration": {
          "target": "com.amazonaws.nimble#StreamConfiguration",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A configuration for a streaming session.</p>"
          }
        },
        "studioComponentIds": {
          "target": "com.amazonaws.nimble#LaunchProfileStudioComponentIdList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        },
        "updatedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The user ID of the user that most recently updated the resource.</p>"
          }
        },
        "validationResults": {
          "target": "com.amazonaws.nimble#ValidationResults",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The list of the latest validation results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A launch profile controls your artist workforceâ€™s access to studio components, like\n            compute farms, shared file systems, managed file systems, and license server\n            configurations, as well as instance types and Amazon Machine Images (AMIs). </p>\n        <p>Studio administrators create launch profiles in the Nimble Studio console.\n            Artists can use their launch profiles to launch an instance from the Nimble Studio\n            portal. Each userâ€™s launch profile defines how they can launch a streaming session. By\n            default, studio admins can use all launch profiles.</p>"
      }
    },
    "com.amazonaws.nimble#LaunchProfileDescription": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A human-readable description of the launch profile.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#LaunchProfileId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 22
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.nimble#LaunchProfileInitialization": {
      "type": "structure",
      "members": {
        "activeDirectory": {
          "target": "com.amazonaws.nimble#LaunchProfileInitializationActiveDirectory",
          "traits": {
            "smithy.api#documentation": "<p>A <code>LaunchProfileInitializationActiveDirectory</code> resource.</p>"
          }
        },
        "ec2SecurityGroupIds": {
          "target": "com.amazonaws.nimble#LaunchProfileSecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 security groups that control access to the studio component.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#LaunchProfileId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>"
          }
        },
        "launchProfileProtocolVersion": {
          "target": "com.amazonaws.nimble#LaunchProfileProtocolVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
          }
        },
        "launchPurpose": {
          "target": "com.amazonaws.nimble#LaunchPurpose",
          "traits": {
            "smithy.api#documentation": "<p>The launch purpose.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#LaunchProfileName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the launch profile.</p>"
          }
        },
        "platform": {
          "target": "com.amazonaws.nimble#LaunchProfilePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The platform of the launch platform, either Windows or Linux.</p>"
          }
        },
        "systemInitializationScripts": {
          "target": "com.amazonaws.nimble#LaunchProfileInitializationScriptList",
          "traits": {
            "smithy.api#documentation": "<p>The system initializtion scripts.</p>"
          }
        },
        "userInitializationScripts": {
          "target": "com.amazonaws.nimble#LaunchProfileInitializationScriptList",
          "traits": {
            "smithy.api#documentation": "<p>The user initializtion scripts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A launch profile initialization contains information required for a workstation or\n            server to connect to a launch profile.</p>\n        <p>This includes scripts, endpoints, security groups, subnets, and other\n            configuration.</p>"
      }
    },
    "com.amazonaws.nimble#LaunchProfileInitializationActiveDirectory": {
      "type": "structure",
      "members": {
        "computerAttributes": {
          "target": "com.amazonaws.nimble#ActiveDirectoryComputerAttributeList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of custom attributes for an Active Directory computer.</p>"
          }
        },
        "directoryId": {
          "target": "com.amazonaws.nimble#DirectoryId",
          "traits": {
            "smithy.api#documentation": "<p>The directory ID of the Directory Service for Microsoft Active Directory to access using this launch\n            profile.</p>"
          }
        },
        "directoryName": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The directory name.</p>"
          }
        },
        "dnsIpAddresses": {
          "target": "com.amazonaws.nimble#ActiveDirectoryDnsIpAddressList",
          "traits": {
            "smithy.api#documentation": "<p>The DNS IP address.</p>"
          }
        },
        "organizationalUnitDistinguishedName": {
          "target": "com.amazonaws.nimble#ActiveDirectoryOrganizationalUnitDistinguishedName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the organizational unit distinguished name.</p>"
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#StudioComponentId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a studio component resource.</p>"
          }
        },
        "studioComponentName": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the studio component.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The launch profile initialization Active Directory contains information required for\n            the launch profile to connect to the Active Directory.</p>"
      }
    },
    "com.amazonaws.nimble#LaunchProfileInitializationScript": {
      "type": "structure",
      "members": {
        "script": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptContent",
          "traits": {
            "smithy.api#documentation": "<p>The initialization script.</p>"
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#StudioComponentId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a studio component resource.</p>"
          }
        },
        "studioComponentName": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the studio component.</p>"
          }
        },
        "secureInitializationRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>An IAM role attached to Studio Component when the system initialization\n            script runs which give the studio component access to Amazon Web Services resources when\n            the system initialization script runs.</p>"
          }
        },
        "runtimeRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>An IAM role attached to a Studio Component that gives the studio\n            component access to Amazon Web Services resources at anytime while the instance is\n            running. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The launch profile initialization script is used when start streaming session\n            runs.</p>"
      }
    },
    "com.amazonaws.nimble#LaunchProfileInitializationScriptList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#LaunchProfileInitializationScript"
      }
    },
    "com.amazonaws.nimble#LaunchProfileList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#LaunchProfile"
      }
    },
    "com.amazonaws.nimble#LaunchProfileMembership": {
      "type": "structure",
      "members": {
        "identityStoreId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the identity store.</p>"
          }
        },
        "persona": {
          "target": "com.amazonaws.nimble#LaunchProfilePersona",
          "traits": {
            "smithy.api#documentation": "<p>The persona.</p>"
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID.</p>"
          }
        },
        "sid": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Active Directory Security Identifier for this user, if available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Studio admins can use launch profile membership to delegate launch profile access to\n            studio users in the Nimble Studio portal without writing or maintaining complex\n                IAM policies. A launch profile member is a user association from your\n            studio identity source who is granted permissions to a launch profile.</p>\n        <p>A launch profile member (type USER) provides the following permissions to that launch\n            profile:</p>\n        <ul>\n            <li>\n                <p>GetLaunchProfile</p>\n            </li>\n            <li>\n                <p>GetLaunchProfileInitialization</p>\n            </li>\n            <li>\n                <p>GetLaunchProfileMembers</p>\n            </li>\n            <li>\n                <p>GetLaunchProfileMember</p>\n            </li>\n            <li>\n                <p>CreateStreamingSession</p>\n            </li>\n            <li>\n                <p>GetLaunchProfileDetails</p>\n            </li>\n         </ul>"
      }
    },
    "com.amazonaws.nimble#LaunchProfileMembershipList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#LaunchProfileMembership"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#LaunchProfilePersona": {
      "type": "enum",
      "members": {
        "USER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "USER"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfilePlatform": {
      "type": "enum",
      "members": {
        "LINUX": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LINUX"
          }
        },
        "WINDOWS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "WINDOWS"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileProtocolVersion": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 10
        },
        "smithy.api#pattern": "^2021\\-03\\-31$"
      }
    },
    "com.amazonaws.nimble#LaunchProfileProtocolVersionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#LaunchProfileProtocolVersion"
      }
    },
    "com.amazonaws.nimble#LaunchProfileResource": {
      "type": "resource",
      "identifiers": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#CreateLaunchProfile"
      },
      "read": {
        "target": "com.amazonaws.nimble#GetLaunchProfile"
      },
      "update": {
        "target": "com.amazonaws.nimble#UpdateLaunchProfile"
      },
      "delete": {
        "target": "com.amazonaws.nimble#DeleteLaunchProfile"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListLaunchProfiles"
      },
      "operations": [
        {
          "target": "com.amazonaws.nimble#DeleteLaunchProfileMember"
        },
        {
          "target": "com.amazonaws.nimble#GetLaunchProfileDetails"
        },
        {
          "target": "com.amazonaws.nimble#GetLaunchProfileInitialization"
        },
        {
          "target": "com.amazonaws.nimble#GetLaunchProfileMember"
        },
        {
          "target": "com.amazonaws.nimble#ListLaunchProfileMembers"
        },
        {
          "target": "com.amazonaws.nimble#PutLaunchProfileMembers"
        },
        {
          "target": "com.amazonaws.nimble#UpdateLaunchProfileMember"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "launch-profile/{launchProfileId}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "LaunchProfile",
          "additionalSchemas": ["com.amazonaws.nimble#LaunchProfile"]
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "nimble:studioId"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "launch-profile"
        },
        "smithy.api#documentation": "Represents a launch profile which delegates access to a collection of studio components to studio users",
        "smithy.api#externalDocumentation": {
          "CFNSourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio"
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileSecurityGroupIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#SecurityGroupId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileState": {
      "type": "enum",
      "members": {
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_IN_PROGRESS"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "UPDATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_FAILED"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileStateList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#LaunchProfileState"
      }
    },
    "com.amazonaws.nimble#LaunchProfileStatusCode": {
      "type": "enum",
      "members": {
        "LAUNCH_PROFILE_CREATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_CREATED"
          }
        },
        "LAUNCH_PROFILE_UPDATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_UPDATED"
          }
        },
        "LAUNCH_PROFILE_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_DELETED"
          }
        },
        "LAUNCH_PROFILE_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_CREATE_IN_PROGRESS"
          }
        },
        "LAUNCH_PROFILE_UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_UPDATE_IN_PROGRESS"
          }
        },
        "LAUNCH_PROFILE_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_DELETE_IN_PROGRESS"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "STREAMING_IMAGE_NOT_FOUND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_NOT_FOUND"
          }
        },
        "STREAMING_IMAGE_NOT_READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_NOT_READY"
          }
        },
        "LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED"
          }
        },
        "ENCRYPTION_KEY_ACCESS_DENIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_ACCESS_DENIED"
          }
        },
        "ENCRYPTION_KEY_NOT_FOUND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_NOT_FOUND"
          }
        },
        "INVALID_SUBNETS_PROVIDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INVALID_SUBNETS_PROVIDED"
          }
        },
        "INVALID_INSTANCE_TYPES_PROVIDED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INVALID_INSTANCE_TYPES_PROVIDED"
          }
        },
        "INVALID_SUBNETS_COMBINATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INVALID_SUBNETS_COMBINATION"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileStudioComponentIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#String"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileValidationState": {
      "type": "enum",
      "members": {
        "VALIDATION_NOT_STARTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_NOT_STARTED"
          }
        },
        "VALIDATION_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_IN_PROGRESS"
          }
        },
        "VALIDATION_SUCCESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_SUCCESS"
          }
        },
        "VALIDATION_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED"
          }
        },
        "VALIDATION_FAILED_INTERNAL_SERVER_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileValidationStatusCode": {
      "type": "enum",
      "members": {
        "VALIDATION_NOT_STARTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_NOT_STARTED"
          }
        },
        "VALIDATION_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_IN_PROGRESS"
          }
        },
        "VALIDATION_SUCCESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_SUCCESS"
          }
        },
        "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION"
          }
        },
        "VALIDATION_FAILED_SUBNET_NOT_FOUND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_SUBNET_NOT_FOUND"
          }
        },
        "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION"
          }
        },
        "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY"
          }
        },
        "VALIDATION_FAILED_UNAUTHORIZED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_UNAUTHORIZED"
          }
        },
        "VALIDATION_FAILED_INTERNAL_SERVER_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATION_FAILED_INTERNAL_SERVER_ERROR"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchProfileValidationStatusMessage": {
      "type": "string"
    },
    "com.amazonaws.nimble#LaunchProfileValidationType": {
      "type": "enum",
      "members": {
        "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT"
          }
        },
        "VALIDATE_SUBNET_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATE_SUBNET_ASSOCIATION"
          }
        },
        "VALIDATE_NETWORK_ACL_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATE_NETWORK_ACL_ASSOCIATION"
          }
        },
        "VALIDATE_SECURITY_GROUP_ASSOCIATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "VALIDATE_SECURITY_GROUP_ASSOCIATION"
          }
        }
      }
    },
    "com.amazonaws.nimble#LaunchPurpose": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The launch purpose.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#pattern": "^[A-Z0-9_]+$"
      }
    },
    "com.amazonaws.nimble#LicenseServiceConfiguration": {
      "type": "structure",
      "members": {
        "endpoint": {
          "target": "com.amazonaws.nimble#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint of the license service that is accessed by the studio component\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for a license service that is associated with a studio\n            resource.</p>"
      }
    },
    "com.amazonaws.nimble#LinuxMountPoint": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 128
        },
        "smithy.api#pattern": "^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#ListEulaAcceptances": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListEulaAcceptancesRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListEulaAcceptancesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list EULA acceptances",
        "smithy.api#documentation": "<p>List EULA acceptances.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/eula-acceptances",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "eulaAcceptances"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListEulaAcceptancesRequest": {
      "type": "structure",
      "members": {
        "eulaIds": {
          "target": "com.amazonaws.nimble#StringList",
          "traits": {
            "smithy.api#documentation": "<p>The list of EULA IDs that have been previously accepted.</p>",
            "smithy.api#httpQuery": "eulaIds"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListEulaAcceptancesResponse": {
      "type": "structure",
      "members": {
        "eulaAcceptances": {
          "target": "com.amazonaws.nimble#EulaAcceptanceList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of EULA acceptances.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListEulas": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListEulasRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListEulasResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list EULAs",
        "smithy.api#documentation": "<p>List EULAs.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/eulas",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "eulas"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListEulasRequest": {
      "type": "structure",
      "members": {
        "eulaIds": {
          "target": "com.amazonaws.nimble#StringList",
          "traits": {
            "smithy.api#documentation": "<p>The list of EULA IDs that should be returned</p>",
            "smithy.api#httpQuery": "eulaIds"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListEulasResponse": {
      "type": "structure",
      "members": {
        "eulas": {
          "target": "com.amazonaws.nimble#EulaList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of EULA resources.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfileMembers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListLaunchProfileMembersRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListLaunchProfileMembersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list launch profile members",
        "smithy.api#documentation": "<p>Get all users in a given launch profile membership.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "members"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfileMembersRequest": {
      "type": "structure",
      "members": {
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "maxResults": {
          "target": "com.amazonaws.nimble#MaxResults",
          "traits": {
            "smithy.api#default": 100,
            "smithy.api#documentation": "<p>The max number of results to return in the response.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfileMembersResponse": {
      "type": "structure",
      "members": {
        "members": {
          "target": "com.amazonaws.nimble#LaunchProfileMembershipList",
          "traits": {
            "smithy.api#documentation": "<p>A list of members.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfiles": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListLaunchProfilesRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListLaunchProfilesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list launch profiles",
        "aws.iam#conditionKeys": ["nimble:principalId", "nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>List all the launch profiles a studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "launchProfiles"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfilesRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.nimble#MaxResults",
          "traits": {
            "smithy.api#default": 100,
            "smithy.api#documentation": "<p>The max number of results to return in the response.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpQuery": "principalId"
          }
        },
        "states": {
          "target": "com.amazonaws.nimble#LaunchProfileStateList",
          "traits": {
            "smithy.api#documentation": "<p>Filter this request to launch profiles in any of the given states.</p>",
            "smithy.api#httpQuery": "states"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListLaunchProfilesResponse": {
      "type": "structure",
      "members": {
        "launchProfiles": {
          "target": "com.amazonaws.nimble#LaunchProfileList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of launch profiles.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingImages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStreamingImagesRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStreamingImagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list streaming images",
        "smithy.api#documentation": "<p>List the streaming image resources available to this studio.</p>\n        <p>This list will contain both images provided by Amazon Web Services, as well as\n            streaming images that you have created in your studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-images",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "streamingImages"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingImagesRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "owner": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>Filter this request to streaming images with the given owner</p>",
            "smithy.api#httpQuery": "owner"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingImagesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        },
        "streamingImages": {
          "target": "com.amazonaws.nimble#StreamingImageList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of streaming images.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessionBackups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStreamingSessionBackupsRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStreamingSessionBackupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list streaming session backups",
        "aws.iam#conditionKeys": ["nimble:ownedBy", "nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Lists the backups of a streaming session in a studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-session-backups",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "streamingSessionBackups"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessionBackupsRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that owns the streaming session.</p>",
            "smithy.api#httpQuery": "ownedBy"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessionBackupsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        },
        "streamingSessionBackups": {
          "target": "com.amazonaws.nimble#StreamingSessionBackupList",
          "traits": {
            "smithy.api#documentation": "<p>Information about the streaming session backups.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStreamingSessionsRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStreamingSessionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list streaming sessions",
        "aws.iam#conditionKeys": ["nimble:createdBy", "nimble:ownedBy", "nimble:requesterPrincipalId"],
        "smithy.api#documentation": "<p>Lists the streaming sessions in a studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "sessions"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessionsRequest": {
      "type": "structure",
      "members": {
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request to streaming sessions created by the given user.</p>",
            "smithy.api#httpQuery": "createdBy"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request to streaming session owned by the given user</p>",
            "smithy.api#httpQuery": "ownedBy"
          }
        },
        "sessionIds": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request to only the provided session IDs.</p>",
            "smithy.api#httpQuery": "sessionIds"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStreamingSessionsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        },
        "sessions": {
          "target": "com.amazonaws.nimble#StreamingSessionList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of streaming sessions.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStudioComponents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStudioComponentsRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStudioComponentsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list studio components",
        "smithy.api#documentation": "<p>Lists the <code>StudioComponents</code> in a studio.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/studio-components",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "studioComponents"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStudioComponentsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.nimble#MaxResults",
          "traits": {
            "smithy.api#default": 100,
            "smithy.api#documentation": "<p>The max number of results to return in the response.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "states": {
          "target": "com.amazonaws.nimble#StudioComponentStateList",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request to studio components that are in one of the given states. </p>",
            "smithy.api#httpQuery": "states"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "types": {
          "target": "com.amazonaws.nimble#StudioComponentTypeList",
          "traits": {
            "smithy.api#documentation": "<p>Filters the request to studio components that are of one of the given types.</p>",
            "smithy.api#httpQuery": "types"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStudioComponentsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        },
        "studioComponents": {
          "target": "com.amazonaws.nimble#StudioComponentList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of studio components.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStudioMembers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStudioMembersRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStudioMembersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list studio members",
        "smithy.api#documentation": "<p>Get all users in a given studio membership.</p>\n        <note>\n            <p>\n               <code>ListStudioMembers</code> only returns admin members.</p>\n        </note>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios/{studioId}/membership",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults",
          "items": "members"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStudioMembersRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.nimble#MaxResults",
          "traits": {
            "smithy.api#default": 100,
            "smithy.api#documentation": "<p>The max number of results to return in the response.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStudioMembersResponse": {
      "type": "structure",
      "members": {
        "members": {
          "target": "com.amazonaws.nimble#StudioMembershipList",
          "traits": {
            "smithy.api#documentation": "<p>A list of admin members.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListStudios": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListStudiosRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListStudiosResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list studios",
        "smithy.api#documentation": "<p>List studios in your Amazon Web Services accounts in the requested Amazon Web Services Region.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/studios",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "studios"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListStudiosRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#ListStudiosResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The token for the next set of results, or null if there are no more results.</p>"
          }
        },
        "studios": {
          "target": "com.amazonaws.nimble#StudioList",
          "traits": {
            "smithy.api#documentation": "<p>A collection of studios.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to list all tags on a Nimble Studio resource",
        "smithy.api#documentation": "<p>Gets the tags for a resource, given its Amazon Resource Names (ARN).</p>\n        <p>This operation supports ARNs for all resource types in Nimble Studio that support\n            tags, including studio, studio component, launch profile, streaming image, and streaming\n            session. All resources that can be tagged will contain an ARN property, so you do not\n            have to create this ARN yourself.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/2020-08-01/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.nimble#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource for which you want to list tags.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource",
            "ids": {
              "studioId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StudioComponentResource",
            "ids": {
              "studioComponentId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#LaunchProfileResource",
            "ids": {
              "launchProfileId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingSessionResource",
            "ids": {
              "sessionId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingImageResource",
            "ids": {
              "streamingImageId": "resourceArn"
            }
          }
        ]
      }
    },
    "com.amazonaws.nimble#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 100,
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.nimble#NewLaunchProfileMember": {
      "type": "structure",
      "members": {
        "persona": {
          "target": "com.amazonaws.nimble#LaunchProfilePersona",
          "traits": {
            "smithy.api#documentation": "<p>The persona.</p>",
            "smithy.api#required": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A new member that is added to a launch profile.</p>"
      }
    },
    "com.amazonaws.nimble#NewLaunchProfileMemberList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#NewLaunchProfileMember"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.nimble#NewStudioMember": {
      "type": "structure",
      "members": {
        "persona": {
          "target": "com.amazonaws.nimble#StudioPersona",
          "traits": {
            "smithy.api#documentation": "<p>The persona.</p>",
            "smithy.api#required": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A new studio user's membership.</p>"
      }
    },
    "com.amazonaws.nimble#NewStudioMemberList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#NewStudioMember"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.nimble#PutLaunchProfileMembers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#PutLaunchProfileMembersRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#PutLaunchProfileMembersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to add/update launch profile members",
        "aws.iam#requiredActions": ["sso-directory:DescribeUsers"],
        "smithy.api#documentation": "<p>Add/update users with given persona to launch profile membership.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#PutLaunchProfileMembersRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "identityStoreId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "members": {
          "target": "com.amazonaws.nimble#NewLaunchProfileMemberList",
          "traits": {
            "smithy.api#documentation": "<p>A list of members.</p>",
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#PutLaunchProfileMembersResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#PutStudioMembers": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#PutStudioMembersRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#PutStudioMembersResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to add/update studio members",
        "aws.iam#requiredActions": ["sso-directory:DescribeUsers"],
        "smithy.api#documentation": "<p>Add/update users with given persona to studio membership.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/membership",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#PutStudioMembersRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "identityStoreId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the identity store.</p>",
            "smithy.api#required": {}
          }
        },
        "members": {
          "target": "com.amazonaws.nimble#NewStudioMemberList",
          "traits": {
            "smithy.api#documentation": "<p>A list of members.</p>",
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#PutStudioMembersResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#Region": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        },
        "smithy.api#pattern": "[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
      }
    },
    "com.amazonaws.nimble#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified resource could not be found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.nimble#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2048
        }
      }
    },
    "com.amazonaws.nimble#ScriptParameterKey": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A script parameter key.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.nimble#ScriptParameterKeyValue": {
      "type": "structure",
      "members": {
        "key": {
          "target": "com.amazonaws.nimble#ScriptParameterKey",
          "traits": {
            "smithy.api#documentation": "<p>A script parameter key.</p>"
          }
        },
        "value": {
          "target": "com.amazonaws.nimble#ScriptParameterValue",
          "traits": {
            "smithy.api#documentation": "<p>A script parameter value.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A parameter for a studio component script, in the form of a key-value pair.</p>"
      }
    },
    "com.amazonaws.nimble#ScriptParameterValue": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A script parameter value.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.nimble#SecurityGroupId": {
      "type": "string"
    },
    "com.amazonaws.nimble#SensitiveString": {
      "type": "string",
      "traits": {
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#ServiceQuotaExceededException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Your current quota does not allow you to perform the request action. You can request\n            increases for some quotas, and other quotas cannot be increased.</p>\n        <p>Please use Amazon Web Services Service Quotas to request an increase. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 402
      }
    },
    "com.amazonaws.nimble#SessionBackupMode": {
      "type": "enum",
      "members": {
        "AUTOMATIC": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AUTOMATIC"
          }
        },
        "DEACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEACTIVATED"
          }
        }
      }
    },
    "com.amazonaws.nimble#SessionPersistenceMode": {
      "type": "enum",
      "members": {
        "DEACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DEACTIVATED"
          }
        },
        "ACTIVATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVATED"
          }
        }
      }
    },
    "com.amazonaws.nimble#SharedFileSystemConfiguration": {
      "type": "structure",
      "members": {
        "endpoint": {
          "target": "com.amazonaws.nimble#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The endpoint of the shared file system that is accessed by the studio component\n            resource.</p>"
          }
        },
        "fileSystemId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a file system.</p>"
          }
        },
        "linuxMountPoint": {
          "target": "com.amazonaws.nimble#LinuxMountPoint",
          "traits": {
            "smithy.api#documentation": "<p>The mount location for a shared file system on a Linux virtual workstation.</p>"
          }
        },
        "shareName": {
          "target": "com.amazonaws.nimble#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The name of the file share.</p>"
          }
        },
        "windowsMountDrive": {
          "target": "com.amazonaws.nimble#WindowsMountDrive",
          "traits": {
            "smithy.api#documentation": "<p>The mount location for a shared file system on a Windows virtual workstation.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for a shared file storage system that is associated with a studio\n            resource.</p>"
      }
    },
    "com.amazonaws.nimble#StartStreamingSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#StartStreamingSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#StartStreamingSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to start a streaming session",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "aws.iam#requiredActions": ["nimble:GetLaunchProfile", "nimble:GetLaunchProfileMember"],
        "smithy.api#documentation": "<p>Transitions sessions from the <code>STOPPED</code> state into the <code>READY</code>\n            state. The <code>START_IN_PROGRESS</code> state is the intermediate state between the\n                <code>STOPPED</code> and <code>READY</code> states.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/start",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#StartStreamingSessionRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID for the <code>StartStreamingSessionRequest</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID for the StartStreamingSessionRequest.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "backupId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the backup.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#StartStreamingSessionResponse": {
      "type": "structure",
      "members": {
        "session": {
          "target": "com.amazonaws.nimble#StreamingSession"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#StartStudioSSOConfigurationRepair": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#StartStudioSSOConfigurationRepairRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#StartStudioSSOConfigurationRepairResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to repair the studio's AWS SSO configuration",
        "aws.iam#requiredActions": ["sso:CreateManagedApplicationInstance", "sso:GetManagedApplicationInstance"],
        "smithy.api#documentation": "<p>Repairs the IAM Identity Center configuration for a given studio.</p>\n        <p>If the studio has a valid IAM Identity Center configuration currently associated with\n            it, this operation will fail with a validation error.</p>\n        <p>If the studio does not have a valid IAM Identity Center configuration currently\n            associated with it, then a new IAM Identity Center application is created for the studio\n            and the studio is changed to the <code>READY</code> state.</p>\n        <p>After the IAM Identity Center application is repaired, you must use the Amazon Nimble Studio console to add administrators and users to your studio.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/2020-08-01/studios/{studioId}/sso-configuration",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#StartStudioSSOConfigurationRepairRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#StartStudioSSOConfigurationRepairResponse": {
      "type": "structure",
      "members": {
        "studio": {
          "target": "com.amazonaws.nimble#Studio",
          "traits": {
            "smithy.api#documentation": "<p>Information about a studio.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#StopStreamingSession": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#StopStreamingSessionRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#StopStreamingSessionResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to stop a streaming session",
        "aws.iam#conditionKeys": ["nimble:requesterPrincipalId"],
        "aws.iam#requiredActions": ["nimble:GetLaunchProfile"],
        "smithy.api#documentation": "<p>Transitions sessions from the <code>READY</code> state into the <code>STOPPED</code>\n            state. The <code>STOP_IN_PROGRESS</code> state is the intermediate state between the\n                <code>READY</code> and <code>STOPPED</code> states.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/stop",
          "code": 200
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#StopStreamingSessionRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID for the <code>StopStreamingSessionRequest</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studioId for the StopStreamingSessionRequest.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "volumeRetentionMode": {
          "target": "com.amazonaws.nimble#VolumeRetentionMode",
          "traits": {
            "smithy.api#documentation": "<p>Adds additional instructions to a streaming session stop action to either retain the\n            EBS volumes or delete the EBS volumes.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#StopStreamingSessionResponse": {
      "type": "structure",
      "members": {
        "session": {
          "target": "com.amazonaws.nimble#StreamingSession"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#StreamConfiguration": {
      "type": "structure",
      "members": {
        "clipboardMode": {
          "target": "com.amazonaws.nimble#StreamingClipboardMode",
          "traits": {
            "smithy.api#documentation": "<p>Allows or deactivates the use of the system clipboard to copy and paste between the\n            streaming session and streaming client.</p>",
            "smithy.api#required": {}
          }
        },
        "ec2InstanceTypes": {
          "target": "com.amazonaws.nimble#StreamingInstanceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "maxSessionLengthInMinutes": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxSessionLengthInMinutes",
          "traits": {
            "smithy.api#default": 690,
            "smithy.api#documentation": "<p>The length of time, in minutes, that a streaming session can be active before it is\n            stopped or terminated. After this point, Nimble Studio automatically terminates or\n            stops the session. The default length of time is 690 minutes, and the maximum length of\n            time is 30 days.</p>"
          }
        },
        "streamingImageIds": {
          "target": "com.amazonaws.nimble#StreamingImageIdList",
          "traits": {
            "smithy.api#documentation": "<p>The streaming images that users can select from when launching a streaming session\n            with this launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "maxStoppedSessionLengthInMinutes": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxStoppedSessionLengthInMinutes",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Integer that determines if you can start and stop your sessions and how long a session\n            can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is\n            5760.</p>\n        <p>This field is allowed only when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\n                <code>ACTIVATED</code>.</p>\n        <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then\n            call <code>StopStreamingSession</code>, the session fails. If the time that a session\n            stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\n            value, the session will automatically be terminated (instead of\n            <code>STOPPED</code>).</p>\n        <p>If the value is set to a positive number, the session can be stopped. You can call\n                <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state.\n            If the time that a session stays in the <code>READY</code> state exceeds the\n                <code>maxSessionLengthInMinutes</code> value, the session will automatically be\n            stopped (instead of terminated).</p>"
          }
        },
        "sessionStorage": {
          "target": "com.amazonaws.nimble#StreamConfigurationSessionStorage",
          "traits": {
            "smithy.api#documentation": "<p>The upload storage for a streaming session.</p>"
          }
        },
        "sessionBackup": {
          "target": "com.amazonaws.nimble#StreamConfigurationSessionBackup",
          "traits": {
            "smithy.api#documentation": "<p>Information about the streaming session backup.</p>"
          }
        },
        "sessionPersistenceMode": {
          "target": "com.amazonaws.nimble#SessionPersistenceMode",
          "traits": {
            "smithy.api#documentation": "<p>Determine if a streaming session created from this launch profile can configure\n            persistent storage. This means that <code>volumeConfiguration</code> and\n                <code>automaticTerminationMode</code> are configured.</p>"
          }
        },
        "volumeConfiguration": {
          "target": "com.amazonaws.nimble#VolumeConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Custom volume configuration for the root volumes that are attached to streaming\n            sessions.</p>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>.</p>"
          }
        },
        "automaticTerminationMode": {
          "target": "com.amazonaws.nimble#AutomaticTerminationMode",
          "traits": {
            "smithy.api#documentation": "<p>Indicates if a streaming session created from this launch profile should be terminated\n            automatically or retained without termination after being in a <code>STOPPED</code>\n            state.</p>\n        <ul>\n            <li>\n                <p>When <code>ACTIVATED</code>, the streaming session is scheduled for\n                    termination after being in the <code>STOPPED</code> state for the time specified\n                    in <code>maxStoppedSessionLengthInMinutes</code>.</p>\n            </li>\n            <li>\n                <p>When <code>DEACTIVATED</code>, the streaming session can remain in the\n                        <code>STOPPED</code> state indefinitely.</p>\n            </li>\n         </ul>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>. When allowed, the default value for this parameter is\n                <code>DEACTIVATED</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A configuration for a streaming session.</p>"
      }
    },
    "com.amazonaws.nimble#StreamConfigurationCreate": {
      "type": "structure",
      "members": {
        "clipboardMode": {
          "target": "com.amazonaws.nimble#StreamingClipboardMode",
          "traits": {
            "smithy.api#documentation": "<p>Allows or deactivates the use of the system clipboard to copy and paste between the\n            streaming session and streaming client.</p>",
            "smithy.api#required": {}
          }
        },
        "ec2InstanceTypes": {
          "target": "com.amazonaws.nimble#StreamingInstanceTypeList",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "maxSessionLengthInMinutes": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxSessionLengthInMinutes",
          "traits": {
            "smithy.api#default": 690,
            "smithy.api#documentation": "<p>The length of time, in minutes, that a streaming session can be active before it is\n            stopped or terminated. After this point, Nimble Studio automatically terminates or\n            stops the session. The default length of time is 690 minutes, and the maximum length of\n            time is 30 days.</p>"
          }
        },
        "streamingImageIds": {
          "target": "com.amazonaws.nimble#StreamingImageIdList",
          "traits": {
            "smithy.api#documentation": "<p>The streaming images that users can select from when launching a streaming session\n            with this launch profile.</p>",
            "smithy.api#required": {}
          }
        },
        "maxStoppedSessionLengthInMinutes": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxStoppedSessionLengthInMinutes",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>Integer that determines if you can start and stop your sessions and how long a session\n            can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is\n            5760.</p>\n        <p>This field is allowed only when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is\n                <code>ACTIVATED</code>.</p>\n        <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then\n            call <code>StopStreamingSession</code>, the session fails. If the time that a session\n            stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code>\n            value, the session will automatically be terminated (instead of\n            <code>STOPPED</code>).</p>\n        <p>If the value is set to a positive number, the session can be stopped. You can call\n                <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state.\n            If the time that a session stays in the <code>READY</code> state exceeds the\n                <code>maxSessionLengthInMinutes</code> value, the session will automatically be\n            stopped (instead of terminated).</p>"
          }
        },
        "sessionStorage": {
          "target": "com.amazonaws.nimble#StreamConfigurationSessionStorage",
          "traits": {
            "smithy.api#documentation": "<p>The upload storage for a streaming workstation that is created using this launch\n            profile.</p>"
          }
        },
        "sessionBackup": {
          "target": "com.amazonaws.nimble#StreamConfigurationSessionBackup",
          "traits": {
            "smithy.api#documentation": "<p>Configures how streaming sessions are backed up when launched from this launch\n            profile.</p>"
          }
        },
        "sessionPersistenceMode": {
          "target": "com.amazonaws.nimble#SessionPersistenceMode",
          "traits": {
            "smithy.api#documentation": "<p>Determine if a streaming session created from this launch profile can configure\n            persistent storage. This means that <code>volumeConfiguration</code> and\n                <code>automaticTerminationMode</code> are configured.</p>"
          }
        },
        "volumeConfiguration": {
          "target": "com.amazonaws.nimble#VolumeConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Custom volume configuration for the root volumes that are attached to streaming\n            sessions.</p>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>.</p>"
          }
        },
        "automaticTerminationMode": {
          "target": "com.amazonaws.nimble#AutomaticTerminationMode",
          "traits": {
            "smithy.api#documentation": "<p>Indicates if a streaming session created from this launch profile should be terminated\n            automatically or retained without termination after being in a <code>STOPPED</code>\n            state.</p>\n        <ul>\n            <li>\n                <p>When <code>ACTIVATED</code>, the streaming session is scheduled for\n                    termination after being in the <code>STOPPED</code> state for the time specified\n                    in <code>maxStoppedSessionLengthInMinutes</code>.</p>\n            </li>\n            <li>\n                <p>When <code>DEACTIVATED</code>, the streaming session can remain in the\n                        <code>STOPPED</code> state indefinitely.</p>\n            </li>\n         </ul>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>. When allowed, the default value for this parameter is\n                <code>DEACTIVATED</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration for streaming workstations created using this launch profile.</p>"
      }
    },
    "com.amazonaws.nimble#StreamConfigurationMaxBackupsToRetain": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 10
        }
      }
    },
    "com.amazonaws.nimble#StreamConfigurationMaxSessionLengthInMinutes": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 690,
        "smithy.api#range": {
          "min": 1,
          "max": 43200
        }
      }
    },
    "com.amazonaws.nimble#StreamConfigurationMaxStoppedSessionLengthInMinutes": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 5760
        }
      }
    },
    "com.amazonaws.nimble#StreamConfigurationSessionBackup": {
      "type": "structure",
      "members": {
        "mode": {
          "target": "com.amazonaws.nimble#SessionBackupMode",
          "traits": {
            "smithy.api#documentation": "<p>Specifies how artists sessions are backed up.</p>\n        <p>Configures backups for streaming sessions launched with this launch profile. The\n            default value is <code>DEACTIVATED</code>, which means that backups are deactivated. To\n            allow backups, set this value to <code>AUTOMATIC</code>.</p>"
          }
        },
        "maxBackupsToRetain": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxBackupsToRetain",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of backups that each streaming session created from this launch\n            profile can have.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configures how streaming sessions are backed up when launched from this launch\n            profile.</p>"
      }
    },
    "com.amazonaws.nimble#StreamConfigurationSessionStorage": {
      "type": "structure",
      "members": {
        "root": {
          "target": "com.amazonaws.nimble#StreamingSessionStorageRoot",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for the upload storage root of the streaming session.</p>"
          }
        },
        "mode": {
          "target": "com.amazonaws.nimble#StreamingSessionStorageModeList",
          "traits": {
            "smithy.api#documentation": "<p>Allows artists to upload files to their workstations. The only valid option is\n                <code>UPLOAD</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration for a streaming sessionâ€™s upload storage.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingClipboardMode": {
      "type": "enum",
      "members": {
        "ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENABLED"
          }
        },
        "DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DISABLED"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingImage": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StreamingImageDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A human-readable description of the streaming image.</p>"
          }
        },
        "ec2ImageId": {
          "target": "com.amazonaws.nimble#EC2ImageId",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>The ID of an EC2 machine image with which to create the streaming image.</p>"
          }
        },
        "encryptionConfiguration": {
          "target": "com.amazonaws.nimble#StreamingImageEncryptionConfiguration",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The encryption configuration.</p>"
          }
        },
        "eulaIds": {
          "target": "com.amazonaws.nimble#EulaIdList",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The list of EULAs that must be accepted before a Streaming Session can be started\n            using this streaming image.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StreamingImageName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A friendly name for a streaming image resource.</p>"
          }
        },
        "owner": {
          "target": "com.amazonaws.nimble#StreamingImageOwner",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The owner of the streaming image, either the <code>studioId</code> that contains the\n            streaming image, or <code>amazon</code> for images that are provided by Amazon Nimble Studio.</p>"
          }
        },
        "platform": {
          "target": "com.amazonaws.nimble#StreamingImagePlatform",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The platform of the streaming image, either Windows or Linux.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StreamingImageState",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The current state.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StreamingImageStatusCode",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status code.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status message for the streaming image.</p>"
          }
        },
        "streamingImageId": {
          "target": "com.amazonaws.nimble#StreamingImageId",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The ID of the streaming image.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a streaming image resource.</p>\n        <p>Streaming images are used by studio users to select which operating system and\n            software they want to use in a Nimble Studio streaming session.</p>\n        <p>Amazon provides a number of streaming images that include popular 3rd-party\n            software.</p>\n        <p>You can create your own streaming images using an Amazon EC2 machine image\n            that you create for this purpose. You can also include software that your users\n            require.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingImageDescription": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The description.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StreamingImageEncryptionConfiguration": {
      "type": "structure",
      "members": {
        "keyArn": {
          "target": "com.amazonaws.nimble#StreamingImageEncryptionConfigurationKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN for a KMS key that is used to encrypt studio data.</p>"
          }
        },
        "keyType": {
          "target": "com.amazonaws.nimble#StreamingImageEncryptionConfigurationKeyType",
          "traits": {
            "smithy.api#documentation": "<p>The type of KMS key that is used to encrypt studio data.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Specifies how a streaming image is encrypted.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingImageEncryptionConfigurationKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4
        },
        "smithy.api#pattern": "^arn:.*"
      }
    },
    "com.amazonaws.nimble#StreamingImageEncryptionConfigurationKeyType": {
      "type": "enum",
      "members": {
        "CUSTOMER_MANAGED_KEY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOMER_MANAGED_KEY"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingImageId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 22
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.nimble#StreamingImageIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingImageId"
      },
      "traits": {
        "smithy.api#documentation": "<p>A list of streaming image IDs that users can select from when launching a streaming\n            session with this launch profile.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.nimble#StreamingImageList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingImage"
      }
    },
    "com.amazonaws.nimble#StreamingImageName": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>A friendly name for a streaming image resource.</p>",
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StreamingImageOwner": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>StreamingImageOwner is the owner of a particular streaming image.</p>\n        <p>This string is either the studioId that contains the streaming image, or the word\n                <code>AMAZON</code> for images provided by Nimble Studio.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingImagePlatform": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The platform of this streaming image, either Windows or Linux.</p>",
        "smithy.api#pattern": "^[a-zA-Z]*$"
      }
    },
    "com.amazonaws.nimble#StreamingImageResource": {
      "type": "resource",
      "identifiers": {
        "streamingImageId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#CreateStreamingImage"
      },
      "read": {
        "target": "com.amazonaws.nimble#GetStreamingImage"
      },
      "update": {
        "target": "com.amazonaws.nimble#UpdateStreamingImage"
      },
      "delete": {
        "target": "com.amazonaws.nimble#DeleteStreamingImage"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListStreamingImages"
      },
      "traits": {
        "aws.api#arn": {
          "template": "streaming-image/{streamingImageId}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "StreamingImage",
          "additionalSchemas": ["com.amazonaws.nimble#StreamingImage"]
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "nimble:studioId"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "streaming-image"
        },
        "smithy.api#documentation": "Represents a streaming session machine image that can be used to launch a streaming session",
        "smithy.api#externalDocumentation": {
          "CFNSourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio"
        }
      }
    },
    "com.amazonaws.nimble#StreamingImageState": {
      "type": "enum",
      "members": {
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_IN_PROGRESS"
          }
        },
        "UPDATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_FAILED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingImageStatusCode": {
      "type": "enum",
      "members": {
        "STREAMING_IMAGE_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_CREATE_IN_PROGRESS"
          }
        },
        "STREAMING_IMAGE_READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_READY"
          }
        },
        "STREAMING_IMAGE_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_DELETE_IN_PROGRESS"
          }
        },
        "STREAMING_IMAGE_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_DELETED"
          }
        },
        "STREAMING_IMAGE_UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_IMAGE_UPDATE_IN_PROGRESS"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "ACCESS_DENIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACCESS_DENIED"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The status code.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingInstanceType": {
      "type": "enum",
      "members": {
        "g4dn_xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.xlarge"
          }
        },
        "g4dn_2xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.2xlarge"
          }
        },
        "g4dn_4xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.4xlarge"
          }
        },
        "g4dn_8xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.8xlarge"
          }
        },
        "g4dn_12xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.12xlarge"
          }
        },
        "g4dn_16xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g4dn.16xlarge"
          }
        },
        "g3_4xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g3.4xlarge"
          }
        },
        "g3s_xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g3s.xlarge"
          }
        },
        "g5_xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g5.xlarge"
          }
        },
        "g5_2xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g5.2xlarge"
          }
        },
        "g5_4xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g5.4xlarge"
          }
        },
        "g5_8xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g5.8xlarge"
          }
        },
        "g5_16xlarge": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "g5.16xlarge"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingInstanceTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingInstanceType"
      },
      "traits": {
        "smithy.api#documentation": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>",
        "smithy.api#length": {
          "min": 1,
          "max": 30
        }
      }
    },
    "com.amazonaws.nimble#StreamingSession": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that created the streaming session.</p>"
          }
        },
        "ec2InstanceType": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 Instance type used for the streaming session.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>"
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that owns the streaming session. The user that owns the\n            session will be logging into the session and interacting with the virtual\n            workstation.</p>"
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#StreamingSessionId",
          "traits": {
            "smithy.api#documentation": "<p>The session ID.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StreamingSessionState",
          "traits": {
            "smithy.api#documentation": "<p>The current state.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StreamingSessionStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The status message for the streaming session.</p>"
          }
        },
        "streamingImageId": {
          "target": "com.amazonaws.nimble#StreamingImageId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the streaming image.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "terminateAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the streaming session will automatically terminate if not terminated by the\n            user.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        },
        "updatedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that most recently updated the resource.</p>"
          }
        },
        "stoppedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the session entered <code>STOP_IN_PROGRESS</code> state.</p>"
          }
        },
        "stoppedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that stopped the streaming session.</p>"
          }
        },
        "startedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the session entered <code>START_IN_PROGRESS</code> state.</p>"
          }
        },
        "startedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that started the streaming session.</p>"
          }
        },
        "stopAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the streaming session will automatically be stopped if the user doesnâ€™t stop\n            the session themselves. </p>"
          }
        },
        "startedFromBackupId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The backup ID used to restore a streaming session.</p>"
          }
        },
        "backupMode": {
          "target": "com.amazonaws.nimble#SessionBackupMode",
          "traits": {
            "smithy.api#documentation": "<p>Shows the current backup setting of the session.</p>"
          }
        },
        "maxBackupsToRetain": {
          "target": "com.amazonaws.nimble#StreamConfigurationMaxBackupsToRetain",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>The maximum number of backups of a streaming session that you can have. When the\n            maximum number of backups is reached, the oldest backup is deleted.</p>"
          }
        },
        "volumeRetentionMode": {
          "target": "com.amazonaws.nimble#VolumeRetentionMode",
          "traits": {
            "smithy.api#documentation": "<p>Determine if an EBS volume created from this streaming session will be backed\n            up.</p>"
          }
        },
        "sessionPersistenceMode": {
          "target": "com.amazonaws.nimble#SessionPersistenceMode",
          "traits": {
            "smithy.api#documentation": "<p>Determine if a streaming session created from this launch profile can configure\n            persistent storage. This means that <code>volumeConfiguration</code> and\n                <code>automaticTerminationMode</code> are configured.</p>"
          }
        },
        "volumeConfiguration": {
          "target": "com.amazonaws.nimble#VolumeConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>Custom volume configuration for the root volumes that are attached to streaming\n            sessions.</p>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>.</p>"
          }
        },
        "automaticTerminationMode": {
          "target": "com.amazonaws.nimble#AutomaticTerminationMode",
          "traits": {
            "smithy.api#documentation": "<p>Indicates if a streaming session created from this launch profile should be terminated\n            automatically or retained without termination after being in a <code>STOPPED</code>\n            state.</p>\n        <ul>\n            <li>\n                <p>When <code>ACTIVATED</code>, the streaming session is scheduled for\n                    termination after being in the <code>STOPPED</code> state for the time specified\n                    in <code>maxStoppedSessionLengthInMinutes</code>.</p>\n            </li>\n            <li>\n                <p>When <code>DEACTIVATED</code>, the streaming session can remain in the\n                        <code>STOPPED</code> state indefinitely.</p>\n            </li>\n         </ul>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>. When allowed, the default value for this parameter is\n                <code>DEACTIVATED</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A streaming session is a virtual workstation created using a particular launch\n            profile.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingSessionBackup": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in for when the resource was created.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile which allowed the backups for the streaming\n            session.</p>"
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that owns the streaming session.</p>"
          }
        },
        "sessionId": {
          "target": "com.amazonaws.nimble#StreamingSessionId",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session ID for the <code>StreamingSessionBackup</code>.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StreamingSessionState"
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StreamingSessionStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The status message for the streaming session backup.</p>"
          }
        },
        "backupId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the backup.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the streaming session backup.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingSessionBackupList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingSessionBackup"
      }
    },
    "com.amazonaws.nimble#StreamingSessionBackupResource": {
      "type": "resource",
      "identifiers": {
        "backupId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "read": {
        "target": "com.amazonaws.nimble#GetStreamingSessionBackup"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListStreamingSessionBackups"
      },
      "traits": {
        "aws.api#arn": {
          "template": "streaming-session-backup/{backupId}"
        },
        "aws.iam#conditionKeys": ["aws:ResourceTag/${TagKey}", "nimble:ownedBy"],
        "aws.iam#disableConditionKeyInference": {},
        "smithy.api#documentation": "Represents a streaming session backup originated from a studio user launched streaming session"
      }
    },
    "com.amazonaws.nimble#StreamingSessionId": {
      "type": "string"
    },
    "com.amazonaws.nimble#StreamingSessionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingSession"
      }
    },
    "com.amazonaws.nimble#StreamingSessionResource": {
      "type": "resource",
      "identifiers": {
        "sessionId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#CreateStreamingSession"
      },
      "read": {
        "target": "com.amazonaws.nimble#GetStreamingSession"
      },
      "delete": {
        "target": "com.amazonaws.nimble#DeleteStreamingSession"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListStreamingSessions"
      },
      "operations": [
        {
          "target": "com.amazonaws.nimble#CreateStreamingSessionStream"
        },
        {
          "target": "com.amazonaws.nimble#GetStreamingSessionStream"
        },
        {
          "target": "com.amazonaws.nimble#StartStreamingSession"
        },
        {
          "target": "com.amazonaws.nimble#StopStreamingSession"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "streaming-session/{sessionId}"
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "nimble:createdBy",
          "nimble:ownedBy"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "streaming-session"
        },
        "smithy.api#documentation": "Represents a streaming session that a studio user launches applications and connects to studio components within a studio"
      }
    },
    "com.amazonaws.nimble#StreamingSessionState": {
      "type": "enum",
      "members": {
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        },
        "STOP_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOP_IN_PROGRESS"
          }
        },
        "START_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "START_IN_PROGRESS"
          }
        },
        "STOPPED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOPPED"
          }
        },
        "STOP_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STOP_FAILED"
          }
        },
        "START_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "START_FAILED"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The streaming session state.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingSessionStatusCode": {
      "type": "enum",
      "members": {
        "STREAMING_SESSION_READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_READY"
          }
        },
        "STREAMING_SESSION_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_DELETED"
          }
        },
        "STREAMING_SESSION_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_CREATE_IN_PROGRESS"
          }
        },
        "STREAMING_SESSION_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_DELETE_IN_PROGRESS"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "INSUFFICIENT_CAPACITY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INSUFFICIENT_CAPACITY"
          }
        },
        "ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR"
          }
        },
        "NETWORK_CONNECTION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NETWORK_CONNECTION_ERROR"
          }
        },
        "INITIALIZATION_SCRIPT_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INITIALIZATION_SCRIPT_ERROR"
          }
        },
        "DECRYPT_STREAMING_IMAGE_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DECRYPT_STREAMING_IMAGE_ERROR"
          }
        },
        "NETWORK_INTERFACE_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NETWORK_INTERFACE_ERROR"
          }
        },
        "STREAMING_SESSION_STOPPED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_STOPPED"
          }
        },
        "STREAMING_SESSION_STARTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_STARTED"
          }
        },
        "STREAMING_SESSION_STOP_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_STOP_IN_PROGRESS"
          }
        },
        "STREAMING_SESSION_START_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAMING_SESSION_START_IN_PROGRESS"
          }
        },
        "AMI_VALIDATION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AMI_VALIDATION_ERROR"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingSessionStorageMode": {
      "type": "enum",
      "members": {
        "UPLOAD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPLOAD"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingSessionStorageModeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StreamingSessionStorageMode"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1
        }
      }
    },
    "com.amazonaws.nimble#StreamingSessionStorageRoot": {
      "type": "structure",
      "members": {
        "linux": {
          "target": "com.amazonaws.nimble#StreamingSessionStorageRootPathLinux",
          "traits": {
            "smithy.api#documentation": "<p>The folder path in Linux workstations where files are uploaded.</p>"
          }
        },
        "windows": {
          "target": "com.amazonaws.nimble#StreamingSessionStorageRootPathWindows",
          "traits": {
            "smithy.api#documentation": "<p>The folder path in Windows workstations where files are uploaded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The upload storage root location (folder) on streaming workstations where files are\n            uploaded.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingSessionStorageRootPathLinux": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^(\\$HOME|/)[/]?([A-Za-z0-9-_]+/)*([A-Za-z0-9_-]+)$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StreamingSessionStorageRootPathWindows": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^((\\%HOMEPATH\\%)|[a-zA-Z]:)[\\\\/](?:[a-zA-Z0-9_-]+[\\\\/])*[a-zA-Z0-9_-]+$",
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StreamingSessionStream": {
      "type": "structure",
      "members": {
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that created the streaming session stream.</p>"
          }
        },
        "expiresAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource expires.</p>"
          }
        },
        "ownedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that owns the streaming session. The user that owns the\n            session will be logging into the session and interacting with the virtual\n            workstation.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StreamingSessionStreamState",
          "traits": {
            "smithy.api#documentation": "<p>The current state.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StreamingSessionStreamStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The streaming session stream status code.</p>"
          }
        },
        "streamId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The stream ID.</p>"
          }
        },
        "url": {
          "target": "com.amazonaws.nimble#SensitiveString",
          "traits": {
            "smithy.api#documentation": "<p>The URL to connect to this stream using the DCV client.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A stream is an active connection to a streaming session, enabling a studio user to\n            control the streaming session using a compatible client. Streaming session streams are\n            compatible with the NICE DCV web client, included in the Nimble Studio portal, or\n            the NICE DCV desktop client.</p>"
      }
    },
    "com.amazonaws.nimble#StreamingSessionStreamExpirationInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 120,
        "smithy.api#range": {
          "min": 60,
          "max": 3600
        }
      }
    },
    "com.amazonaws.nimble#StreamingSessionStreamState": {
      "type": "enum",
      "members": {
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        }
      }
    },
    "com.amazonaws.nimble#StreamingSessionStreamStatusCode": {
      "type": "enum",
      "members": {
        "STREAM_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAM_CREATE_IN_PROGRESS"
          }
        },
        "STREAM_READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAM_READY"
          }
        },
        "STREAM_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAM_DELETE_IN_PROGRESS"
          }
        },
        "STREAM_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STREAM_DELETED"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "NETWORK_CONNECTION_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "NETWORK_CONNECTION_ERROR"
          }
        }
      }
    },
    "com.amazonaws.nimble#String": {
      "type": "string"
    },
    "com.amazonaws.nimble#StringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#String"
      }
    },
    "com.amazonaws.nimble#Studio": {
      "type": "structure",
      "members": {
        "adminRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The IAM role that studio admins assume when logging in to the Nimble Studio portal.</p>"
          }
        },
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "displayName": {
          "target": "com.amazonaws.nimble#StudioDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>A friendly name for the studio.</p>"
          }
        },
        "homeRegion": {
          "target": "com.amazonaws.nimble#Region",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The Amazon Web Services Region where the studio resource is located.</p>"
          }
        },
        "ssoClientId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The IAM Identity Center application client ID used to integrate with IAM Identity Center. This ID allows IAM Identity Center users to log in to Nimble Studio\n            portal.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StudioState",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The current state of the studio resource.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StudioStatusCode",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Status codes that provide additional detail on the studio state.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Additional detail on the studio state.</p>"
          }
        },
        "studioEncryptionConfiguration": {
          "target": "com.amazonaws.nimble#StudioEncryptionConfiguration",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Configuration of the encryption method that is used for the studio.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a studio resource. In Nimble Studio, all other\n            resources are contained in a studio resource.</p>"
          }
        },
        "studioName": {
          "target": "com.amazonaws.nimble#StudioName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the studio, as included in the URL when accessing it in the Nimble Studio portal.</p>"
          }
        },
        "studioUrl": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnMutability": "read",
            "smithy.api#documentation": "<p>The address of the web page for the studio.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "aws.cloudformation#cfnMutability": "create-and-read",
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        },
        "userRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The IAM role that studio users assume when logging in to the Nimble Studio portal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Represents a studio resource.</p>\n        <p>A studio is the core resource used with Nimble Studio. You must create a studio\n            first, before any other resource type can be created. All other resources you create and\n            manage in Nimble Studio are contained within a studio.</p>\n        <p>When creating a studio, you must provides two IAM roles for use with\n            the Nimble Studio portal. These roles are assumed by your users when they log in to\n            the Nimble Studio portal via IAM Identity Center and your identity source.</p>\n        <p>The user role must have the <code>AmazonNimbleStudio-StudioUser</code> managed policy\n            attached for the portal to function properly.</p>\n        <p>The admin role must have the <code>AmazonNimbleStudio-StudioAdmin</code> managed\n            policy attached for the portal to function properly.</p>\n        <p>Your studio roles must trust the <code>identity.nimble.amazonaws.com</code> service\n            principal to function properly.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponent": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely\n            identifies it. ARNs are unique across all Regions.</p>"
          }
        },
        "configuration": {
          "target": "com.amazonaws.nimble#StudioComponentConfiguration",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The configuration of the studio component, based on component type.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The user ID of the user that created the studio component.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StudioComponentDescription",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A human-readable description for the studio component resource.</p>"
          }
        },
        "ec2SecurityGroupIds": {
          "target": "com.amazonaws.nimble#StudioComponentSecurityGroupIdList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The EC2 security groups that control access to the studio component.</p>"
          }
        },
        "initializationScripts": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Initialization scripts for studio components.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>A friendly name for the studio component resource.</p>"
          }
        },
        "scriptParameters": {
          "target": "com.amazonaws.nimble#StudioComponentScriptParameterKeyValueList",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>Parameters for the studio component scripts.</p>"
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#StudioComponentState",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The current state.</p>"
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#StudioComponentStatusCode",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status code.</p>"
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The status message for the studio component.</p>"
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#StudioComponentId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a studio component resource.</p>"
          }
        },
        "subtype": {
          "target": "com.amazonaws.nimble#StudioComponentSubtype",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The specific subtype of a studio component.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.nimble#StudioComponentType",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>The type of the studio component.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        },
        "updatedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>The user ID of the user that most recently updated the resource.</p>"
          }
        },
        "secureInitializationRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to Studio Component when the system initialization\n            script runs which give the studio component access to Amazon Web Services resources when\n            the system initialization script runs.</p>"
          }
        },
        "runtimeRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to a Studio Component that gives the studio\n            component access to Amazon Web Services resources at anytime while the instance is\n            running. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A studio component represents a network resource to be used by a studio's users and\n            workflows. A typical studio contains studio components for each of the following: render\n            farm, Active Directory, licensing, and file system.</p>\n        <p>Access to a studio component is managed by specifying security groups for the\n            resource, as well as its endpoint.</p>\n        <p>A studio component also has a set of initialization scripts that are returned by\n                <code>GetLaunchProfileInitialization</code>. These initialization scripts run on\n            streaming sessions when they start. They provide users with flexibility in controlling\n            how the studio resources are configured on a streaming session.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentConfiguration": {
      "type": "union",
      "members": {
        "activeDirectoryConfiguration": {
          "target": "com.amazonaws.nimble#ActiveDirectoryConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for a Directory Service for Microsoft Active Directory studio resource.</p>"
          }
        },
        "computeFarmConfiguration": {
          "target": "com.amazonaws.nimble#ComputeFarmConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for a render farm that is associated with a studio resource.</p>"
          }
        },
        "licenseServiceConfiguration": {
          "target": "com.amazonaws.nimble#LicenseServiceConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for a license service that is associated with a studio\n            resource.</p>"
          }
        },
        "sharedFileSystemConfiguration": {
          "target": "com.amazonaws.nimble#SharedFileSystemConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration for a shared file storage system that is associated with a studio\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The configuration of the studio component, based on component type.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StudioComponentId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 22
        },
        "smithy.api#pattern": "^[a-zA-Z0-9-_]*$"
      }
    },
    "com.amazonaws.nimble#StudioComponentInitializationScript": {
      "type": "structure",
      "members": {
        "launchProfileProtocolVersion": {
          "target": "com.amazonaws.nimble#LaunchProfileProtocolVersion",
          "traits": {
            "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
          }
        },
        "platform": {
          "target": "com.amazonaws.nimble#LaunchProfilePlatform",
          "traits": {
            "smithy.api#documentation": "<p>The platform of the initialization script, either Windows or Linux.</p>"
          }
        },
        "runContext": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptRunContext",
          "traits": {
            "smithy.api#documentation": "<p>The method to use when running the initialization script.</p>"
          }
        },
        "script": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptContent",
          "traits": {
            "smithy.api#documentation": "<p>The initialization script.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Initialization scripts for studio components.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentInitializationScriptContent": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 5120
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StudioComponentInitializationScriptList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioComponentInitializationScript"
      }
    },
    "com.amazonaws.nimble#StudioComponentInitializationScriptRunContext": {
      "type": "enum",
      "members": {
        "SYSTEM_INITIALIZATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SYSTEM_INITIALIZATION"
          }
        },
        "USER_INITIALIZATION": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "USER_INITIALIZATION"
          }
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioComponent"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StudioComponentResource": {
      "type": "resource",
      "identifiers": {
        "studioComponentId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#CreateStudioComponent"
      },
      "read": {
        "target": "com.amazonaws.nimble#GetStudioComponent"
      },
      "update": {
        "target": "com.amazonaws.nimble#UpdateStudioComponent"
      },
      "delete": {
        "target": "com.amazonaws.nimble#DeleteStudioComponent"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListStudioComponents"
      },
      "traits": {
        "aws.api#arn": {
          "template": "studio-component/{studioComponentId}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "StudioComponent",
          "additionalSchemas": ["com.amazonaws.nimble#StudioComponent"]
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "nimble:studioId"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "studio-component"
        },
        "smithy.api#documentation": "Represents a studio component that connects a non-Nimble Studio resource in your account to your studio",
        "smithy.api#externalDocumentation": {
          "CFNSourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio"
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentScriptParameterKeyValueList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#ScriptParameterKeyValue"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 30
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StudioComponentSecurityGroupIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#SecurityGroupId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 30
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentState": {
      "type": "enum",
      "members": {
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_IN_PROGRESS"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "UPDATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_FAILED"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The current state of the studio component resource.</p>\n        <p>While a studio component is being created, modified, or deleted, its state will be\n                <code>CREATE_IN_PROGRESS</code>, <code>UPDATE_IN_PROGRESS</code>, or\n                <code>DELETE_IN_PROGRESS</code>.</p>\n        <p>These are called <i>transition states</i>.</p>\n        <p>No modifications may be made to the studio component while it is in a transition\n            state.</p>\n        <p>If creation of the resource fails, the state will change to\n            <code>CREATE_FAILED</code>. The resource <code>StatusCode</code> and\n                <code>StatusMessage</code> will provide more information of why creation failed. The\n            resource in this state will automatically be deleted from your account after a period of\n            time.</p>\n        <p>If updating the resource fails, the state will change to <code>UPDATE_FAILED</code>.\n            The resource <code>StatusCode</code> and <code>StatusMessage</code> will provide more\n            information of why the update failed. The resource will be returned to the state it was\n            in when the update request was invoked.</p>\n        <p>If deleting the resource fails, the state will change to <code>DELETE_FAILED</code>.\n            The resource <code>StatusCode</code> and <code>StatusMessage</code> will provide more\n            information of why the update failed. The resource will be returned to the state it was\n            in when the update request was invoked. After the resource is deleted successfully, it\n            will change to the <code>DELETED</code> state. The resource will no longer count against\n            service quotas and cannot be used or acted upon any futher. It will be removed from your\n            account after a period of time.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentStateList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioComponentState"
      }
    },
    "com.amazonaws.nimble#StudioComponentStatusCode": {
      "type": "enum",
      "members": {
        "ACTIVE_DIRECTORY_ALREADY_EXISTS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE_DIRECTORY_ALREADY_EXISTS"
          }
        },
        "STUDIO_COMPONENT_CREATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_CREATED"
          }
        },
        "STUDIO_COMPONENT_UPDATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_UPDATED"
          }
        },
        "STUDIO_COMPONENT_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_DELETED"
          }
        },
        "ENCRYPTION_KEY_ACCESS_DENIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_ACCESS_DENIED"
          }
        },
        "ENCRYPTION_KEY_NOT_FOUND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_NOT_FOUND"
          }
        },
        "STUDIO_COMPONENT_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_CREATE_IN_PROGRESS"
          }
        },
        "STUDIO_COMPONENT_UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_UPDATE_IN_PROGRESS"
          }
        },
        "STUDIO_COMPONENT_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_COMPONENT_DELETE_IN_PROGRESS"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The current status of the studio component resource.</p>\n        <p>When the resource is in the <code>READY</code> state, the status code signals what the\n            last mutation made to the resource was.</p>\n        <p>When the resource is in a <code>CREATE_FAILED</code>, <code>UPDATE_FAILED</code>, or\n                <code>DELETE_FAILED</code> state, the status code signals what went wrong and why\n            the mutation failed.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentSubtype": {
      "type": "enum",
      "members": {
        "AWS_MANAGED_MICROSOFT_AD": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_MANAGED_MICROSOFT_AD"
          }
        },
        "AMAZON_FSX_FOR_WINDOWS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AMAZON_FSX_FOR_WINDOWS"
          }
        },
        "AMAZON_FSX_FOR_LUSTRE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AMAZON_FSX_FOR_LUSTRE"
          }
        },
        "CUSTOM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOM"
          }
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentSummary": {
      "type": "structure",
      "members": {
        "createdAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was created.</p>"
          }
        },
        "createdBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that created the studio component.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StudioComponentDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the studio component.</p>"
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#StudioComponentId",
          "traits": {
            "smithy.api#documentation": "<p>The unique identifier for a studio component resource.</p>"
          }
        },
        "subtype": {
          "target": "com.amazonaws.nimble#StudioComponentSubtype",
          "traits": {
            "smithy.api#documentation": "<p>The specific subtype of a studio component.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.nimble#StudioComponentType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the studio component.</p>"
          }
        },
        "updatedAt": {
          "target": "com.amazonaws.nimble#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The ISO timestamp in seconds for when the resource was updated.</p>"
          }
        },
        "updatedBy": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The user ID of the user that most recently updated the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The studio component's summary.</p>"
      }
    },
    "com.amazonaws.nimble#StudioComponentSummaryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioComponentSummary"
      }
    },
    "com.amazonaws.nimble#StudioComponentType": {
      "type": "enum",
      "members": {
        "ACTIVE_DIRECTORY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE_DIRECTORY"
          }
        },
        "SHARED_FILE_SYSTEM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "SHARED_FILE_SYSTEM"
          }
        },
        "COMPUTE_FARM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "COMPUTE_FARM"
          }
        },
        "LICENSE_SERVICE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "LICENSE_SERVICE"
          }
        },
        "CUSTOM": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOM"
          }
        }
      }
    },
    "com.amazonaws.nimble#StudioComponentTypeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioComponentType"
      }
    },
    "com.amazonaws.nimble#StudioDisplayName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 64
        },
        "smithy.api#sensitive": {}
      }
    },
    "com.amazonaws.nimble#StudioEncryptionConfiguration": {
      "type": "structure",
      "members": {
        "keyArn": {
          "target": "com.amazonaws.nimble#StudioEncryptionConfigurationKeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN for a KMS key that is used to encrypt studio data.</p>"
          }
        },
        "keyType": {
          "target": "com.amazonaws.nimble#StudioEncryptionConfigurationKeyType",
          "traits": {
            "smithy.api#documentation": "<p>The type of KMS key that is used to encrypt studio data.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Configuration of the encryption method that is used for the studio.</p>"
      }
    },
    "com.amazonaws.nimble#StudioEncryptionConfigurationKeyArn": {
      "type": "string",
      "traits": {
        "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) for a KMS key that is used to encrypt studio\n            data.</p>",
        "smithy.api#length": {
          "min": 4
        },
        "smithy.api#pattern": "^arn:.*"
      }
    },
    "com.amazonaws.nimble#StudioEncryptionConfigurationKeyType": {
      "type": "enum",
      "members": {
        "AWS_OWNED_KEY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_OWNED_KEY"
          }
        },
        "CUSTOMER_MANAGED_KEY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CUSTOMER_MANAGED_KEY"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The type of KMS key that is used to encrypt studio data.</p>"
      }
    },
    "com.amazonaws.nimble#StudioList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#Studio"
      }
    },
    "com.amazonaws.nimble#StudioMembership": {
      "type": "structure",
      "members": {
        "identityStoreId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the identity store.</p>"
          }
        },
        "persona": {
          "target": "com.amazonaws.nimble#StudioPersona",
          "traits": {
            "smithy.api#documentation": "<p>The persona.</p>"
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID.</p>"
          }
        },
        "sid": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Active Directory Security Identifier for this user, if available.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A studio member is an association of a user from your studio identity source to\n            elevated permissions that they are granted in the studio.</p>\n        <p>When you add a user to your studio using the Nimble Studio console, they are\n            given access to the studio's IAM Identity Center application and are given access to log\n            in to the Nimble Studio portal. These users have the permissions provided by the\n            studio's user IAM role and do not appear in the studio membership\n            collection. Only studio admins appear in studio membership.</p>\n        <p>When you add a user to studio membership with the ADMIN persona, upon logging in to\n            the Nimble Studio portal, they are granted permissions specified by the Studio's\n            Admin IAM role.</p>"
      }
    },
    "com.amazonaws.nimble#StudioMembershipList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#StudioMembership"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.nimble#StudioName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 64
        },
        "smithy.api#pattern": "^[a-z0-9]*$"
      }
    },
    "com.amazonaws.nimble#StudioPersona": {
      "type": "enum",
      "members": {
        "ADMINISTRATOR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ADMINISTRATOR"
          }
        }
      }
    },
    "com.amazonaws.nimble#StudioResource": {
      "type": "resource",
      "identifiers": {
        "studioId": {
          "target": "com.amazonaws.nimble#String"
        }
      },
      "create": {
        "target": "com.amazonaws.nimble#CreateStudio"
      },
      "read": {
        "target": "com.amazonaws.nimble#GetStudio"
      },
      "update": {
        "target": "com.amazonaws.nimble#UpdateStudio"
      },
      "delete": {
        "target": "com.amazonaws.nimble#DeleteStudio"
      },
      "list": {
        "target": "com.amazonaws.nimble#ListStudios"
      },
      "operations": [
        {
          "target": "com.amazonaws.nimble#DeleteStudioMember"
        },
        {
          "target": "com.amazonaws.nimble#GetStudioMember"
        },
        {
          "target": "com.amazonaws.nimble#ListStudioMembers"
        },
        {
          "target": "com.amazonaws.nimble#PutStudioMembers"
        },
        {
          "target": "com.amazonaws.nimble#StartStudioSSOConfigurationRepair"
        }
      ],
      "traits": {
        "aws.api#arn": {
          "template": "studio/{studioId}"
        },
        "aws.cloudformation#cfnResource": {
          "name": "Studio",
          "additionalSchemas": ["com.amazonaws.nimble#Studio"]
        },
        "aws.iam#conditionKeys": [
          "aws:ResourceTag/${TagKey}",
          "aws:RequestTag/${TagKey}",
          "aws:TagKeys",
          "nimble:studioId"
        ],
        "aws.iam#disableConditionKeyInference": {},
        "aws.iam#iamResource": {
          "name": "studio"
        },
        "smithy.api#documentation": "Represents a studio that contains other Nimble Studio resources",
        "smithy.api#externalDocumentation": {
          "CFNSourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio"
        }
      }
    },
    "com.amazonaws.nimble#StudioState": {
      "type": "enum",
      "members": {
        "CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_IN_PROGRESS"
          }
        },
        "READY": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "READY"
          }
        },
        "UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_IN_PROGRESS"
          }
        },
        "DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_IN_PROGRESS"
          }
        },
        "DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETED"
          }
        },
        "DELETE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE_FAILED"
          }
        },
        "CREATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "CREATE_FAILED"
          }
        },
        "UPDATE_FAILED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UPDATE_FAILED"
          }
        }
      }
    },
    "com.amazonaws.nimble#StudioStatusCode": {
      "type": "enum",
      "members": {
        "STUDIO_CREATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_CREATED"
          }
        },
        "STUDIO_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_DELETED"
          }
        },
        "STUDIO_UPDATED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_UPDATED"
          }
        },
        "STUDIO_CREATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_CREATE_IN_PROGRESS"
          }
        },
        "STUDIO_UPDATE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_UPDATE_IN_PROGRESS"
          }
        },
        "STUDIO_DELETE_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_DELETE_IN_PROGRESS"
          }
        },
        "STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED"
          }
        },
        "STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED"
          }
        },
        "STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED"
          }
        },
        "AWS_SSO_NOT_ENABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_SSO_NOT_ENABLED"
          }
        },
        "AWS_SSO_ACCESS_DENIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_SSO_ACCESS_DENIED"
          }
        },
        "ROLE_NOT_OWNED_BY_STUDIO_OWNER": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROLE_NOT_OWNED_BY_STUDIO_OWNER"
          }
        },
        "ROLE_COULD_NOT_BE_ASSUMED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ROLE_COULD_NOT_BE_ASSUMED"
          }
        },
        "INTERNAL_ERROR": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "INTERNAL_ERROR"
          }
        },
        "ENCRYPTION_KEY_NOT_FOUND": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_NOT_FOUND"
          }
        },
        "ENCRYPTION_KEY_ACCESS_DENIED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ENCRYPTION_KEY_ACCESS_DENIED"
          }
        },
        "AWS_SSO_CONFIGURATION_REPAIRED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_SSO_CONFIGURATION_REPAIRED"
          }
        },
        "AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS"
          }
        },
        "AWS_STS_REGION_DISABLED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AWS_STS_REGION_DISABLED"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The status code.</p>"
      }
    },
    "com.amazonaws.nimble#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to add or overwrite one or more tags for the specified Nimble Studio resource",
        "smithy.api#documentation": "<p>Creates tags for a resource, given its ARN.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/2020-08-01/tags/{resourceArn}",
          "code": 204
        }
      }
    },
    "com.amazonaws.nimble#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource you want to add tags to. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.nimble#Tags",
          "traits": {
            "smithy.api#documentation": "<p>A collection of labels, in the form of key-value pairs, that apply to this\n            resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource",
            "ids": {
              "studioId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StudioComponentResource",
            "ids": {
              "studioComponentId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#LaunchProfileResource",
            "ids": {
              "launchProfileId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingSessionResource",
            "ids": {
              "sessionId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingImageResource",
            "ids": {
              "streamingImageId": "resourceArn"
            }
          }
        ]
      }
    },
    "com.amazonaws.nimble#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#Tags": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.nimble#String"
      },
      "value": {
        "target": "com.amazonaws.nimble#String"
      }
    },
    "com.amazonaws.nimble#ThrottlingException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request throughput limit was exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429,
        "smithy.api#retryable": {}
      }
    },
    "com.amazonaws.nimble#Timestamp": {
      "type": "timestamp",
      "traits": {
        "smithy.api#timestampFormat": "date-time"
      }
    },
    "com.amazonaws.nimble#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to disassociate one or more tags from the specified Nimble Studio resource",
        "smithy.api#documentation": "<p>Deletes the tags for a resource.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/2020-08-01/tags/{resourceArn}",
          "code": 204
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.nimble#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the Amazon Resource Name(ARN) key from which you are removing tags. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.nimble#StringList",
          "traits": {
            "smithy.api#documentation": "<p>One or more tag keys. Specify only the tag keys, not the tag values.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {},
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.nimble#StudioResource",
            "ids": {
              "studioId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StudioComponentResource",
            "ids": {
              "studioComponentId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#LaunchProfileResource",
            "ids": {
              "launchProfileId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingSessionResource",
            "ids": {
              "sessionId": "resourceArn"
            }
          },
          {
            "resource": "com.amazonaws.nimble#StreamingImageResource",
            "ids": {
              "streamingImageId": "resourceArn"
            }
          }
        ]
      }
    },
    "com.amazonaws.nimble#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UpdateLaunchProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UpdateLaunchProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a launch profile",
        "aws.iam#requiredActions": [
          "ec2:DescribeSubnets",
          "ec2:DescribeRouteTables",
          "ec2:DescribeNetworkAcls",
          "ec2:DescribeVpcEndpoints",
          "ec2:DescribeNatGateways"
        ],
        "smithy.api#documentation": "<p>Update a launch profile.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfileMember": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UpdateLaunchProfileMemberRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UpdateLaunchProfileMemberResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a launch profile member",
        "smithy.api#documentation": "<p>Update a user persona in launch profile membership.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfileMemberRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "persona": {
          "target": "com.amazonaws.nimble#LaunchProfilePersona",
          "traits": {
            "smithy.api#documentation": "<p>The persona.</p>",
            "smithy.api#required": {}
          }
        },
        "principalId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The principal ID. This currently supports a IAM Identity Center UserId. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfileMemberResponse": {
      "type": "structure",
      "members": {
        "member": {
          "target": "com.amazonaws.nimble#LaunchProfileMembership",
          "traits": {
            "smithy.api#documentation": "<p>The updated member. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfileRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#LaunchProfileDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "launchProfileId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the launch profile used to control access from the streaming session.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "launchProfileProtocolVersions": {
          "target": "com.amazonaws.nimble#LaunchProfileProtocolVersionList",
          "traits": {
            "smithy.api#documentation": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#LaunchProfileName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the launch profile.</p>"
          }
        },
        "streamConfiguration": {
          "target": "com.amazonaws.nimble#StreamConfigurationCreate",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>A configuration for a streaming session.</p>"
          }
        },
        "studioComponentIds": {
          "target": "com.amazonaws.nimble#LaunchProfileStudioComponentIdList",
          "traits": {
            "smithy.api#documentation": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#UpdateLaunchProfileResponse": {
      "type": "structure",
      "members": {
        "launchProfile": {
          "target": "com.amazonaws.nimble#LaunchProfile",
          "traits": {
            "smithy.api#documentation": "<p>The launch profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#UpdateStreamingImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UpdateStreamingImageRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UpdateStreamingImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a streaming image",
        "smithy.api#documentation": "<p>Update streaming image.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#UpdateStreamingImageRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StreamingImageDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StreamingImageName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the streaming image.</p>"
          }
        },
        "streamingImageId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The streaming image ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#UpdateStreamingImageResponse": {
      "type": "structure",
      "members": {
        "streamingImage": {
          "target": "com.amazonaws.nimble#StreamingImage"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#UpdateStudio": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UpdateStudioRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UpdateStudioResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a studio",
        "aws.iam#requiredActions": ["iam:PassRole"],
        "smithy.api#documentation": "<p>Update a Studio resource.</p>\n        <p>Currently, this operation only supports updating the displayName of your\n            studio.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/2020-08-01/studios/{studioId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#UpdateStudioComponent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.nimble#UpdateStudioComponentRequest"
      },
      "output": {
        "target": "com.amazonaws.nimble#UpdateStudioComponentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.nimble#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.nimble#ConflictException"
        },
        {
          "target": "com.amazonaws.nimble#InternalServerErrorException"
        },
        {
          "target": "com.amazonaws.nimble#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.nimble#ServiceQuotaExceededException"
        },
        {
          "target": "com.amazonaws.nimble#ThrottlingException"
        },
        {
          "target": "com.amazonaws.nimble#ValidationException"
        }
      ],
      "traits": {
        "aws.iam#actionPermissionDescription": "Grants permission to update a studio component",
        "aws.iam#requiredActions": [
          "ec2:DescribeSecurityGroups",
          "fsx:DescribeFileSystems",
          "ds:DescribeDirectories",
          "iam:PassRole"
        ],
        "smithy.api#documentation": "<p>Updates a studio component resource.</p>",
        "smithy.api#http": {
          "method": "PATCH",
          "uri": "/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.nimble#UpdateStudioComponentRequest": {
      "type": "structure",
      "members": {
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "configuration": {
          "target": "com.amazonaws.nimble#StudioComponentConfiguration",
          "traits": {
            "smithy.api#documentation": "<p>The configuration of the studio component, based on component type.</p>"
          }
        },
        "description": {
          "target": "com.amazonaws.nimble#StudioComponentDescription",
          "traits": {
            "smithy.api#documentation": "<p>The description.</p>"
          }
        },
        "ec2SecurityGroupIds": {
          "target": "com.amazonaws.nimble#StudioComponentSecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>The EC2 security groups that control access to the studio component.</p>"
          }
        },
        "initializationScripts": {
          "target": "com.amazonaws.nimble#StudioComponentInitializationScriptList",
          "traits": {
            "smithy.api#documentation": "<p>Initialization scripts for studio components.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.nimble#StudioComponentName",
          "traits": {
            "smithy.api#documentation": "<p>The name for the studio component.</p>"
          }
        },
        "scriptParameters": {
          "target": "com.amazonaws.nimble#StudioComponentScriptParameterKeyValueList",
          "traits": {
            "smithy.api#documentation": "<p>Parameters for the studio component scripts.</p>"
          }
        },
        "studioComponentId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio component ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "subtype": {
          "target": "com.amazonaws.nimble#StudioComponentSubtype",
          "traits": {
            "smithy.api#documentation": "<p>The specific subtype of a studio component.</p>"
          }
        },
        "type": {
          "target": "com.amazonaws.nimble#StudioComponentType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the studio component.</p>"
          }
        },
        "secureInitializationRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to Studio Component when the system initialization\n            script runs which give the studio component access to Amazon Web Services resources when\n            the system initialization script runs.</p>"
          }
        },
        "runtimeRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "aws.cloudformation#cfnMutability": "full",
            "smithy.api#documentation": "<p>An IAM role attached to a Studio Component that gives the studio\n            component access to Amazon Web Services resources at anytime while the instance is\n            running. </p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#UpdateStudioComponentResponse": {
      "type": "structure",
      "members": {
        "studioComponent": {
          "target": "com.amazonaws.nimble#StudioComponent",
          "traits": {
            "smithy.api#documentation": "<p>Information about the studio component.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#UpdateStudioRequest": {
      "type": "structure",
      "members": {
        "adminRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM role that Studio Admins will assume when logging in to the\n                Nimble Studio portal.</p>"
          }
        },
        "clientToken": {
          "target": "com.amazonaws.nimble#ClientToken",
          "traits": {
            "aws.cloudformation#cfnExcludeProperty": {},
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the\n            request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically\n            generates a client token and uses it for the request to ensure idempotency.</p>",
            "smithy.api#httpHeader": "X-Amz-Client-Token",
            "smithy.api#idempotencyToken": {}
          }
        },
        "displayName": {
          "target": "com.amazonaws.nimble#StudioDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>A friendly name for the studio.</p>"
          }
        },
        "studioId": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>The studio ID. </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "userRoleArn": {
          "target": "com.amazonaws.nimble#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>The IAM role that Studio Users will assume when logging in to the\n                Nimble Studio portal.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.nimble#UpdateStudioResponse": {
      "type": "structure",
      "members": {
        "studio": {
          "target": "com.amazonaws.nimble#Studio",
          "traits": {
            "smithy.api#documentation": "<p>Information about a studio.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.nimble#ValidationException": {
      "type": "structure",
      "members": {
        "code": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A more specific error code.</p>"
          }
        },
        "context": {
          "target": "com.amazonaws.nimble#ExceptionContext",
          "traits": {
            "smithy.api#documentation": "<p>The exception context.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.nimble#String",
          "traits": {
            "smithy.api#documentation": "<p>A human-readable description of the error.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>One of the parameters in the request is invalid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.nimble#ValidationResult": {
      "type": "structure",
      "members": {
        "type": {
          "target": "com.amazonaws.nimble#LaunchProfileValidationType",
          "traits": {
            "smithy.api#documentation": "<p>The type of the validation result.</p>",
            "smithy.api#required": {}
          }
        },
        "state": {
          "target": "com.amazonaws.nimble#LaunchProfileValidationState",
          "traits": {
            "smithy.api#documentation": "<p>The current state.</p>",
            "smithy.api#required": {}
          }
        },
        "statusCode": {
          "target": "com.amazonaws.nimble#LaunchProfileValidationStatusCode",
          "traits": {
            "smithy.api#documentation": "<p>The status code. This will contain the failure reason if the state is\n                <code>VALIDATION_FAILED</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "statusMessage": {
          "target": "com.amazonaws.nimble#LaunchProfileValidationStatusMessage",
          "traits": {
            "smithy.api#documentation": "<p>The status message for the validation result.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The launch profile validation result.</p>"
      }
    },
    "com.amazonaws.nimble#ValidationResults": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.nimble#ValidationResult"
      }
    },
    "com.amazonaws.nimble#VolumeConfiguration": {
      "type": "structure",
      "members": {
        "size": {
          "target": "com.amazonaws.nimble#VolumeSizeInGiB",
          "traits": {
            "smithy.api#default": 500,
            "smithy.api#documentation": "<p>The size of the root volume that is attached to the streaming session. The root volume\n            size is measured in GiBs.</p>"
          }
        },
        "throughput": {
          "target": "com.amazonaws.nimble#VolumeThroughputInMiBs",
          "traits": {
            "smithy.api#default": 125,
            "smithy.api#documentation": "<p>The throughput to provision for the root volume that is attached to the streaming\n            session. The throughput is measured in MiB/s.</p>"
          }
        },
        "iops": {
          "target": "com.amazonaws.nimble#VolumeIops",
          "traits": {
            "smithy.api#default": 3000,
            "smithy.api#documentation": "<p>The number of I/O operations per second for the root volume that is attached to\n            streaming session.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Custom volume configuration for the root volumes that are attached to streaming\n            sessions.</p>\n        <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is\n                <code>ACTIVATED</code>.</p>"
      }
    },
    "com.amazonaws.nimble#VolumeIops": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 3000,
        "smithy.api#range": {
          "min": 3000,
          "max": 16000
        }
      }
    },
    "com.amazonaws.nimble#VolumeRetentionMode": {
      "type": "enum",
      "members": {
        "RETAIN": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "RETAIN"
          }
        },
        "DELETE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "DELETE"
          }
        }
      }
    },
    "com.amazonaws.nimble#VolumeSizeInGiB": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 500,
        "smithy.api#range": {
          "min": 100,
          "max": 16000
        }
      }
    },
    "com.amazonaws.nimble#VolumeThroughputInMiBs": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 125,
        "smithy.api#range": {
          "min": 125,
          "max": 1000
        }
      }
    },
    "com.amazonaws.nimble#WindowsMountDrive": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[A-Z]$"
      }
    },
    "com.amazonaws.nimble#nimble": {
      "type": "service",
      "version": "2020-08-01",
      "operations": [
        {
          "target": "com.amazonaws.nimble#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.nimble#TagResource"
        },
        {
          "target": "com.amazonaws.nimble#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.nimble#EulaAcceptanceResource"
        },
        {
          "target": "com.amazonaws.nimble#EulaResource"
        },
        {
          "target": "com.amazonaws.nimble#LaunchProfileResource"
        },
        {
          "target": "com.amazonaws.nimble#StreamingImageResource"
        },
        {
          "target": "com.amazonaws.nimble#StreamingSessionBackupResource"
        },
        {
          "target": "com.amazonaws.nimble#StreamingSessionResource"
        },
        {
          "target": "com.amazonaws.nimble#StudioComponentResource"
        },
        {
          "target": "com.amazonaws.nimble#StudioResource"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "nimble",
          "cloudFormationName": "NimbleStudio",
          "arnNamespace": "nimble",
          "cloudTrailEventSource": "nimble.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "nimble"
        },
        "aws.iam#defineConditionKeys": {
          "aws:ResourceTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by a tag key and value pair of a resource",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-resourcetag"
          },
          "aws:RequestTag/${TagKey}": {
            "type": "String",
            "documentation": "Filters access by a tag key and value pair that is allowed in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-requesttag"
          },
          "aws:TagKeys": {
            "type": "ArrayOfString",
            "documentation": "Filters access by a list of tag keys that are allowed in the request",
            "externalDocumentation": "${DocHomeURL}IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-tagkeys"
          },
          "nimble:studioId": {
            "type": "String",
            "documentation": "Filters access by a specific studio",
            "externalDocumentation": "${ContextKeysDocRoot}"
          },
          "nimble:requesterPrincipalId": {
            "type": "String",
            "documentation": "Filters access by the ID of the logged in user",
            "externalDocumentation": "${ContextKeysDocRoot}"
          },
          "nimble:principalId": {
            "type": "String",
            "documentation": "Filters access by the principalId request parameter",
            "externalDocumentation": "${ContextKeysDocRoot}"
          },
          "nimble:createdBy": {
            "type": "String",
            "documentation": "Filters access by the createdBy request parameter or the ID of the creator of the resource",
            "externalDocumentation": "${ContextKeysDocRoot}"
          },
          "nimble:ownedBy": {
            "type": "String",
            "documentation": "Filters access by the ownedBy request parameter or the ID of the owner of the resource",
            "externalDocumentation": "${ContextKeysDocRoot}"
          }
        },
        "aws.protocols#restJson1": {},
        "smithy.api#cors": {
          "additionalAllowedHeaders": [
            "*",
            "content-type",
            "authorization",
            "x-amz-date",
            "x-amz-content-sha256",
            "x-amz-user-agent",
            "x-amzn-trace-id",
            "x-amz-dryrun",
            "x-amz-client-token",
            "x-api-key"
          ],
          "additionalExposedHeaders": ["x-amzn-errortype", "x-amzn-requestid", "x-amzn-trace-id", "x-amz-apigw-id"],
          "maxAge": 600
        },
        "smithy.api#documentation": "<p>Welcome to the Amazon Nimble Studio API reference. This API reference provides\n            methods, schema, resources, parameters, and more to help you get the most out of Nimble\n            Studio.</p>\n        <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and\n            interactive content teams to create content securely within a scalable, private cloud\n            service.</p>",
        "smithy.api#title": "AmazonNimbleStudio",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": true,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "aws.partition",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ],
                  "assign": "PartitionResult"
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Endpoint"
                        }
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                          "type": "error"
                        },
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": {
                              "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    },
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://nimble-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsFIPS"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://nimble-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "FIPS is enabled but this partition does not support FIPS",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            true,
                            {
                              "fn": "getAttr",
                              "argv": [
                                {
                                  "ref": "PartitionResult"
                                },
                                "supportsDualStack"
                              ]
                            }
                          ]
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [],
                          "endpoint": {
                            "url": "https://nimble.{Region}.{PartitionResult#dualStackDnsSuffix}",
                            "properties": {},
                            "headers": {}
                          },
                          "type": "endpoint"
                        }
                      ]
                    },
                    {
                      "conditions": [],
                      "error": "DualStack is enabled but this partition does not support DualStack",
                      "type": "error"
                    }
                  ]
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": "https://nimble.{Region}.{PartitionResult#dnsSuffix}",
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ca-central-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ca-central-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ca-central-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ca-central-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ca-central-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ca-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ca-central-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ca-central-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.us-west-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "us-west-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-west-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.us-west-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "us-west-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-west-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.eu-west-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "eu-west-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "eu-west-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.eu-west-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "eu-west-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region eu-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.eu-west-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "eu-west-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ap-northeast-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ap-northeast-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ap-northeast-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ap-northeast-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-northeast-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ap-northeast-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ap-northeast-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ap-southeast-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ap-southeast-2",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ap-southeast-2.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "ap-southeast-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "ap-southeast-2",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "us-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-east-1",
                "UseFIPS": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.us-east-1.api.aws"
                }
              },
              "params": {
                "UseDualStack": true,
                "Region": "us-east-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://nimble.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-east-1",
                "UseFIPS": false
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-east-1",
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": false,
                "Region": "us-east-1",
                "UseFIPS": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "UseDualStack": true,
                "Region": "us-east-1",
                "UseFIPS": false,
                "Endpoint": "https://example.com"
              }
            }
          ],
          "version": "1.0"
        }
      }
    }
  }
}
