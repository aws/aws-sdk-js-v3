{
  "smithy": "0.4.0",
  "com.amazon.awsgsaascontrolplanelambda.customer.r20190311": {
    "shapes": {
      "AntennaDownlinkConfig": {
        "type": "structure",
        "members": {
          "spectrumConfig": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SpectrumConfig",
            "smithy.api#documentation": "<p>Object that describes a spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about how AWS Ground Station should configure an\n         antenna for downlink during a contact.</p>"
      },
      "AntennaDownlinkDemodDecodeConfig": {
        "type": "structure",
        "members": {
          "decodeConfig": {
            "target": "DecodeConfig",
            "smithy.api#documentation": "<p>Information about the decode <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "demodulationConfig": {
            "target": "DemodulationConfig",
            "smithy.api#documentation": "<p>Information about the demodulation <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "spectrumConfig": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SpectrumConfig",
            "smithy.api#documentation": "<p>Information about the spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.</p>"
      },
      "AntennaUplinkConfig": {
        "type": "structure",
        "members": {
          "spectrumConfig": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#UplinkSpectrumConfig",
            "smithy.api#documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "targetEirp": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#Eirp",
            "smithy.api#documentation": "<p>EIRP of the target.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about the uplink <code>Config</code> of an antenna.</p>"
      },
      "CancelContact": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CancelContactRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ContactIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Cancels a contact with a specified contact ID.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/contact/{contactId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "CancelContactRequest": {
        "type": "structure",
        "members": {
          "contactId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a contact.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "Config": {
        "type": "resource",
        "identifiers": {
          "configType": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
          "configId": "smithy.api#String"
        },
        "create": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateConfig",
        "read": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetConfig",
        "update": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#UpdateConfig",
        "delete": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteConfig",
        "list": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListConfigs",
        "aws.api#arn": {
          "template": "config/{configType}/{configId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "ConfigArn": {
        "type": "string",
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::Config",
          "service": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GroundStation",
          "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Config"
        }
      },
      "ConfigIdResponse": {
        "type": "structure",
        "members": {
          "configArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>.</p>"
          },
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ConfigList": {
        "type": "list",
        "member": {
          "target": "ConfigListItem"
        }
      },
      "ConfigListItem": {
        "type": "structure",
        "members": {
          "configArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>.</p>"
          },
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          },
          "name": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p>An item in a list of <code>Config</code> objects.</p>"
      },
      "ConfigTypeData": {
        "type": "union",
        "members": {
          "antennaDownlinkConfig": {
            "target": "AntennaDownlinkConfig",
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should configure an antenna for downlink during a contact.</p>"
          },
          "antennaDownlinkDemodDecodeConfig": {
            "target": "AntennaDownlinkDemodDecodeConfig",
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should conﬁgure an antenna for downlink demod decode during a contact.</p>"
          },
          "antennaUplinkConfig": {
            "target": "AntennaUplinkConfig",
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should conﬁgure an antenna for uplink during a contact.</p>"
          },
          "dataflowEndpointConfig": {
            "target": "DataflowEndpointConfig",
            "smithy.api#documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>"
          },
          "trackingConfig": {
            "target": "TrackingConfig",
            "smithy.api#documentation": "<p>Object that determines whether tracking should be used during a contact executed with this <code>Config</code> in the mission profile. </p>"
          },
          "uplinkEchoConfig": {
            "target": "UplinkEchoConfig",
            "smithy.api#documentation": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> is used in a contact.</p>"
          }
        },
        "smithy.api#documentation": "<p>Object containing the parameters for a <code>Config</code>.</p>\n         <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>"
      },
      "Contact": {
        "type": "resource",
        "identifiers": {
          "contactId": "smithy.api#String"
        },
        "create": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ReserveContact",
        "read": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DescribeContact",
        "delete": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CancelContact",
        "list": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListContacts",
        "aws.api#arn": {
          "template": "contact/{contactId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "ContactData": {
        "type": "structure",
        "members": {
          "contactId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          },
          "contactStatus": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ContactStatus",
            "smithy.api#documentation": "<p>Status of a contact.</p>"
          },
          "endTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>End time of a contact.</p>"
          },
          "errorMessage": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Error message of a contact.</p>"
          },
          "groundStation": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          },
          "maximumElevation": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#Elevation",
            "smithy.api#documentation": "<p>Maximum elevation angle of a contact.</p>"
          },
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          },
          "postPassEndTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "prePassStartTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>"
          },
          "satelliteArn": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          },
          "startTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Start time of a contact.</p>"
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        },
        "smithy.api#documentation": "<p>Data describing a contact.</p>",
        "smithy.api#references": [
          {
            "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Contact"
          }
        ]
      },
      "ContactIdResponse": {
        "type": "structure",
        "members": {
          "contactId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ContactList": {
        "type": "list",
        "member": {
          "target": "ContactData"
        }
      },
      "CreateConfig": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateConfigRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ConfigIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Creates a <code>Config</code> with the specified <code>configData</code> parameters.</p>\n         <p>Only one type of <code>configData</code> can be specified.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/config",
          "code": 200
        },
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "CreateConfigRequest": {
        "type": "structure",
        "members": {
          "configData": {
            "target": "ConfigTypeData",
            "smithy.api#documentation": "<p>Parameters of a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "name": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SafeName",
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "CreateDataflowEndpointGroup": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateDataflowEndpointGroupRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DataflowEndpointGroupIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code> objects.</p>\n         <p>The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code> \n         to specify which endpoints to use during a contact.</p> \n         <p>When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code> \n         must match a <code>DataflowEndpoint</code> in the same group.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/dataflowEndpointGroup",
          "code": 200
        },
        "smithy.api#tags": [
          "customer"
        ]
      },
      "CreateDataflowEndpointGroupRequest": {
        "type": "structure",
        "members": {
          "endpointDetails": {
            "target": "EndpointDetailsList",
            "smithy.api#documentation": "<p>Endpoint details of each endpoint in the dataflow endpoint group.</p>",
            "smithy.api#required": true
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags of a dataflow endpoint group.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "CreateMissionProfile": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateMissionProfileRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfileIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Creates a mission profile.</p>\n         <p>\n            <code>dataflowEdges</code> is a list of lists of strings. Each lower level list of strings\n         has two elements: a <i>from ARN</i> and a <i>to ARN</i>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/missionprofile",
          "code": 200
        },
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "CreateMissionProfileRequest": {
        "type": "structure",
        "members": {
          "contactPostPassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "contactPrePassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>"
          },
          "dataflowEdges": {
            "target": "DataflowEdgeList",
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "minimumViableContactDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
            "smithy.api#required": true
          },
          "name": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SafeName",
            "smithy.api#documentation": "<p>Name of a mission profile.</p>",
            "smithy.api#required": true
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a mission profile.</p>"
          },
          "trackingConfigArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DataflowEdge": {
        "type": "list",
        "member": {
          "target": "ConfigArn"
        },
        "smithy.api#length": {
          "min": 2,
          "max": 2
        }
      },
      "DataflowEdgeList": {
        "type": "list",
        "member": {
          "target": "DataflowEdge"
        }
      },
      "DataflowEndpoint": {
        "type": "structure",
        "members": {
          "address": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SocketAddress",
            "smithy.api#documentation": "<p>Socket address of a dataflow endpoint.</p>"
          },
          "name": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SafeName",
            "smithy.api#documentation": "<p>Name of a dataflow endpoint.</p>"
          },
          "status": {
            "target": "EndpointStatus",
            "smithy.api#documentation": "<p>Status of a dataflow endpoint.</p>"
          }
        },
        "smithy.api#documentation": "<p>Information about a dataflow endpoint.</p>"
      },
      "DataflowEndpointConfig": {
        "type": "structure",
        "members": {
          "dataflowEndpointName": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a dataflow endpoint.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>"
      },
      "DataflowEndpointGroup": {
        "type": "resource",
        "identifiers": {
          "dataflowEndpointGroupId": "smithy.api#String"
        },
        "create": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateDataflowEndpointGroup",
        "read": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetDataflowEndpointGroup",
        "delete": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteDataflowEndpointGroup",
        "list": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListDataflowEndpointGroups",
        "aws.api#arn": {
          "template": "dataflow-endpoint-group/{dataflowEndpointGroupId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "DataflowEndpointGroupArn": {
        "type": "string",
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::DataflowEndpointGroup",
          "service": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GroundStation",
          "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DataflowEndpointGroup"
        }
      },
      "DataflowEndpointGroupIdResponse": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a dataflow endpoint group.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DataflowEndpointGroupList": {
        "type": "list",
        "member": {
          "target": "DataflowEndpointListItem"
        }
      },
      "DataflowEndpointListItem": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupArn": {
            "target": "DataflowEndpointGroupArn",
            "smithy.api#documentation": "<p>ARN of a dataflow endpoint group.</p>"
          },
          "dataflowEndpointGroupId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>"
          }
        },
        "smithy.api#documentation": "<p>Item in a list of <code>DataflowEndpoint</code> groups.</p>"
      },
      "DecodeConfig": {
        "type": "structure",
        "members": {
          "unvalidatedJSON": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#JsonString",
            "smithy.api#documentation": "<p>Unvalidated JSON of a decode <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about the decode <code>Config</code>.</p>"
      },
      "DeleteConfig": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteConfigRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ConfigIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Deletes a <code>Config</code>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/config/{configType}/{configId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "DeleteConfigRequest": {
        "type": "structure",
        "members": {
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DeleteDataflowEndpointGroup": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteDataflowEndpointGroupRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DataflowEndpointGroupIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Deletes a dataflow endpoint group.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "DeleteDataflowEndpointGroupRequest": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a dataflow endpoint group.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DeleteMissionProfile": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteMissionProfileRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfileIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Deletes a mission profile.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/missionprofile/{missionProfileId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "DeleteMissionProfileRequest": {
        "type": "structure",
        "members": {
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DemodulationConfig": {
        "type": "structure",
        "members": {
          "unvalidatedJSON": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#JsonString",
            "smithy.api#documentation": "<p>Unvalidated JSON of a demodulation <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about the demodulation <code>Config</code>.</p>"
      },
      "DescribeContact": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DescribeContactRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DescribeContactResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Describes an existing contact.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/contact/{contactId}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "DescribeContactRequest": {
        "type": "structure",
        "members": {
          "contactId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a contact.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "DescribeContactResponse": {
        "type": "structure",
        "members": {
          "contactId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          },
          "contactStatus": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ContactStatus",
            "smithy.api#documentation": "<p>Status of a contact.</p>"
          },
          "endTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>End time of a contact.</p>"
          },
          "errorMessage": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Error message for a contact.</p>"
          },
          "groundStation": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Ground station for a contact.</p>"
          },
          "maximumElevation": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#Elevation",
            "smithy.api#documentation": "<p>Maximum elevation angle of a contact.</p>"
          },
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          },
          "postPassEndTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "prePassStartTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>"
          },
          "satelliteArn": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          },
          "startTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Start time of a contact.</p>"
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        },
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Contact"
          }
        ]
      },
      "EndpointDetails": {
        "type": "structure",
        "members": {
          "endpoint": {
            "target": "DataflowEndpoint",
            "smithy.api#documentation": "<p>A dataflow endpoint.</p>"
          },
          "securityDetails": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SecurityDetails",
            "smithy.api#documentation": "<p>Endpoint security details.</p>"
          }
        },
        "smithy.api#documentation": "<p>Information about the endpoint details.</p>"
      },
      "EndpointDetailsList": {
        "type": "list",
        "member": {
          "target": "EndpointDetails"
        }
      },
      "EndpointStatus": {
        "type": "string",
        "smithy.api#enum": {
          "created": {
            "name": "created"
          },
          "creating": {
            "name": "creating"
          },
          "deleted": {
            "name": "deleted"
          },
          "deleting": {
            "name": "deleting"
          },
          "failed": {
            "name": "failed"
          }
        }
      },
      "GetConfig": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetConfigRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetConfigResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns <code>Config</code> information.</p>\n         <p>Only one <code>Config</code> response can be returned.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/config/{configType}/{configId}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "GetConfigRequest": {
        "type": "structure",
        "members": {
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetConfigResponse": {
        "type": "structure",
        "members": {
          "configArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>\n         </p>",
            "smithy.api#required": true
          },
          "configData": {
            "target": "ConfigTypeData",
            "smithy.api#documentation": "<p>Data elements in a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          },
          "name": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetDataflowEndpointGroup": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetDataflowEndpointGroupRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetDataflowEndpointGroupResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns the dataflow endpoint group.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "GetDataflowEndpointGroupRequest": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetDataflowEndpointGroupResponse": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupArn": {
            "target": "DataflowEndpointGroupArn",
            "smithy.api#documentation": "<p>ARN of a dataflow endpoint group.</p>"
          },
          "dataflowEndpointGroupId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>"
          },
          "endpointsDetails": {
            "target": "EndpointDetailsList",
            "smithy.api#documentation": "<p>Details of a dataflow endpoint.</p>"
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a dataflow endpoint group.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetMissionProfile": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetMissionProfileRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetMissionProfileResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a mission profile.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/missionprofile/{missionProfileId}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "GetMissionProfileRequest": {
        "type": "structure",
        "members": {
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetMissionProfileResponse": {
        "type": "structure",
        "members": {
          "contactPostPassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "contactPrePassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time prior to contact start you’d like to receive a CloudWatch event indicating an upcoming pass.</p>"
          },
          "dataflowEdges": {
            "target": "DataflowEdgeList",
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>"
          },
          "minimumViableContactDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>"
          },
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          },
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a mission profile.</p>"
          },
          "name": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          },
          "region": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Region of a mission profile.</p>"
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a mission profile.</p>"
          },
          "trackingConfigArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfile"
          }
        ]
      },
      "GroundStation": {
        "type": "service",
        "version": "2019-05-23",
        "operations": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#GetMinuteUsage",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ListTagsForResource",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#TagResource",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#UntagResource"
        ],
        "resources": [
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Config",
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Contact",
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DataflowEndpointGroup",
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GroundStationResource",
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfile",
          "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#Satellite"
        ],
        "aws.api#service": {
          "sdkId": "GroundStation",
          "arnNamespace": "groundstation",
          "cloudFormationName": "AWSGroundStation",
          "cloudTrailEventSource": "groundstation.amazonaws.com"
        },
        "smithy.api#auth": [
          "aws.v4"
        ],
        "smithy.api#documentation": "<p>Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that\n      enables you to control satellite communications, downlink and process satellite data, and\n      scale your satellite operations efficiently and cost-effectively without having\n      to build or manage your own ground station infrastructure.</p>",
        "smithy.api#protocols": [
          {
            "name": "aws.rest-json-1.1",
            "auth": [
              "aws.v4"
            ]
          }
        ],
        "smithy.api#title": "AWS Ground Station"
      },
      "GroundStationResource": {
        "type": "resource",
        "identifiers": {
          "groundStationId": "smithy.api#String"
        },
        "list": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListGroundStations",
        "aws.api#arn": {
          "template": "groundstation:{groundStationId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "ListConfigs": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListConfigsRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListConfigsResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of <code>Config</code> objects.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/config",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "configList",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ListConfigsRequest": {
        "type": "structure",
        "members": {
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of <code>Configs</code> returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListConfigsResponse": {
        "type": "structure",
        "members": {
          "configList": {
            "target": "ConfigList",
            "smithy.api#documentation": "<p>List of <code>Config</code> items.</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListContacts": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListContactsRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListContactsResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of contacts.</p>\n         <p>If <code>statusList</code> contains AVAILABLE, the request must include\n      <code>groundStation</code>, <code>missionprofileArn</code>, and <code>satelliteArn</code>.\n      </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/contacts",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "contactList",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ListContactsRequest": {
        "type": "structure",
        "members": {
          "endTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>End time of a contact.</p>",
            "smithy.api#required": true
          },
          "groundStation": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          },
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of contacts returned.</p>"
          },
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>"
          },
          "satelliteArn": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          },
          "startTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Start time of a contact.</p>",
            "smithy.api#required": true
          },
          "statusList": {
            "target": "StatusList",
            "smithy.api#documentation": "<p>Status of a contact reservation.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListContactsResponse": {
        "type": "structure",
        "members": {
          "contactList": {
            "target": "ContactList",
            "smithy.api#documentation": "<p>List of contacts.</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListDataflowEndpointGroups": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListDataflowEndpointGroupsRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListDataflowEndpointGroupsResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of <code>DataflowEndpoint</code> groups.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/dataflowEndpointGroup",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "dataflowEndpointGroupList",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ListDataflowEndpointGroupsRequest": {
        "type": "structure",
        "members": {
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of dataflow endpoint groups returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListDataflowEndpointGroupsResponse": {
        "type": "structure",
        "members": {
          "dataflowEndpointGroupList": {
            "target": "DataflowEndpointGroupList",
            "smithy.api#documentation": "<p>A list of dataflow endpoint groups.</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListMissionProfiles": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListMissionProfilesRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListMissionProfilesResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of mission profiles.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/missionprofile",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "missionProfileList",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ListMissionProfilesRequest": {
        "type": "structure",
        "members": {
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of mission profiles returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListMissionProfilesResponse": {
        "type": "structure",
        "members": {
          "missionProfileList": {
            "target": "MissionProfileList",
            "smithy.api#documentation": "<p>List of mission profiles</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "MissionProfile": {
        "type": "resource",
        "identifiers": {
          "missionProfileId": "smithy.api#String"
        },
        "create": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#CreateMissionProfile",
        "read": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GetMissionProfile",
        "update": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#UpdateMissionProfile",
        "delete": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#DeleteMissionProfile",
        "list": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ListMissionProfiles",
        "aws.api#arn": {
          "template": "mission-profile/{missionProfileId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "MissionProfileArn": {
        "type": "string",
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::MissionProfile",
          "service": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#GroundStation",
          "resource": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfile"
        }
      },
      "MissionProfileIdResponse": {
        "type": "structure",
        "members": {
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a mission profile.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "MissionProfileList": {
        "type": "list",
        "member": {
          "target": "MissionProfileListItem"
        }
      },
      "MissionProfileListItem": {
        "type": "structure",
        "members": {
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          },
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a mission profile.</p>"
          },
          "name": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          },
          "region": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Region of a mission profile.</p>"
          }
        },
        "smithy.api#documentation": "<p>Item in a list of mission profiles.</p>"
      },
      "ReserveContact": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ReserveContactRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ContactIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Reserves a contact using specified parameters.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/contact",
          "code": 200
        },
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ReserveContactRequest": {
        "type": "structure",
        "members": {
          "endTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>End time of a contact.</p>",
            "smithy.api#required": true
          },
          "groundStation": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a ground station.</p>",
            "smithy.api#required": true
          },
          "missionProfileArn": {
            "target": "MissionProfileArn",
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>",
            "smithy.api#required": true
          },
          "satelliteArn": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite</p>",
            "smithy.api#required": true
          },
          "startTime": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>Start time of a contact.</p>",
            "smithy.api#required": true
          },
          "tags": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "Satellite": {
        "type": "resource",
        "identifiers": {
          "satelliteId": "smithy.api#String"
        },
        "read": "com.amazon.awsgsaascontrolplanelambda.r20190311#GetSatellite",
        "list": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListSatellites",
        "aws.api#arn": {
          "template": "satellite/{satelliteId}",
          "absolute": false,
          "noAccount": false,
          "noRegion": false
        }
      },
      "StatusList": {
        "type": "list",
        "member": {
          "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ContactStatus"
        }
      },
      "TrackingConfig": {
        "type": "structure",
        "members": {
          "autotrack": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#Criticality",
            "smithy.api#documentation": "<p>Current setting for autotrack.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Object that determines whether tracking should be used during a contact\n         executed with this <code>Config</code> in the mission profile.</p>"
      },
      "UpdateConfig": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#UpdateConfigRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#ConfigIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Updates the <code>Config</code> used when scheduling contacts.</p>\n         <p>Updating a <code>Config</code> will not update the execution parameters\n         for existing future contacts scheduled with this <code>Config</code>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/config/{configType}/{configId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "UpdateConfigRequest": {
        "type": "structure",
        "members": {
          "configData": {
            "target": "ConfigTypeData",
            "smithy.api#documentation": "<p>Parameters for a <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "configId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "configType": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#ConfigCapabilityType",
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "name": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SafeName",
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "UpdateMissionProfile": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#UpdateMissionProfileRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.customer.r20190311#MissionProfileIdResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Updates a mission profile.</p>\n         <p>Updating a mission profile will not update the execution parameters\n         for existing future contacts.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/missionprofile/{missionProfileId}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "UpdateMissionProfileRequest": {
        "type": "structure",
        "members": {
          "contactPostPassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "contactPrePassDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>"
          },
          "dataflowEdges": {
            "target": "DataflowEdgeList",
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a from <code>Config</code> and a to \n         <code>Config</code>.</p>"
          },
          "minimumViableContactDurationSeconds": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#DurationInSeconds",
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>"
          },
          "missionProfileId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a mission profile.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "name": {
            "target": "com.amazon.awsgsaascontrolplanelambda.r20190311#SafeName",
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          },
          "trackingConfigArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "UplinkEchoConfig": {
        "type": "structure",
        "members": {
          "antennaUplinkConfigArn": {
            "target": "ConfigArn",
            "smithy.api#documentation": "<p>ARN of an uplink <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "enabled": {
            "target": "smithy.api#Boolean",
            "smithy.api#documentation": "<p>Whether or not an uplink <code>Config</code> is enabled.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the \n         specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> \n         is used in a contact.</p>"
      }
    }
  },
  "com.amazon.awsgsaascontrolplanelambda.r20190311": {
    "shapes": {
      "AngleUnits": {
        "type": "string",
        "smithy.api#enum": {
          "DEGREE_ANGLE": {
            "name": "DEGREE_ANGLE"
          },
          "RADIAN": {
            "name": "RADIAN"
          }
        }
      },
      "BandwidthUnits": {
        "type": "string",
        "smithy.api#enum": {
          "GHz": {
            "name": "GHZ"
          },
          "MHz": {
            "name": "MHZ"
          },
          "kHz": {
            "name": "KHZ"
          }
        }
      },
      "ConfigCapabilityType": {
        "type": "string",
        "smithy.api#enum": {
          "antenna-downlink": {
            "name": "ANTENNA_DOWNLINK"
          },
          "antenna-downlink-demod-decode": {
            "name": "ANTENNA_DOWNLINK_DEMOD_DECODE"
          },
          "tracking": {
            "name": "TRACKING"
          },
          "dataflow-endpoint": {
            "name": "DATAFLOW_ENDPOINT"
          },
          "antenna-uplink": {
            "name": "ANTENNA_UPLINK"
          },
          "uplink-echo": {
            "name": "UPLINK_ECHO"
          }
        }
      },
      "ContactStatus": {
        "type": "string",
        "smithy.api#enum": {
          "SCHEDULING": {
            "name": "SCHEDULING"
          },
          "FAILED_TO_SCHEDULE": {
            "name": "FAILED_TO_SCHEDULE"
          },
          "SCHEDULED": {
            "name": "SCHEDULED"
          },
          "CANCELLED": {
            "name": "CANCELLED"
          },
          "AWS_CANCELLED": {
            "name": "AWS_CANCELLED"
          },
          "PREPASS": {
            "name": "PREPASS"
          },
          "PASS": {
            "name": "PASS"
          },
          "POSTPASS": {
            "name": "POSTPASS"
          },
          "COMPLETED": {
            "name": "COMPLETED"
          },
          "FAILED": {
            "name": "FAILED"
          },
          "AVAILABLE": {
            "name": "AVAILABLE"
          }
        }
      },
      "Criticality": {
        "type": "string",
        "smithy.api#enum": {
          "REQUIRED": {
            "name": "REQUIRED"
          },
          "PREFERRED": {
            "name": "PREFERRED"
          },
          "REMOVED": {
            "name": "REMOVED"
          }
        }
      },
      "DependencyException": {
        "type": "structure",
        "members": {
          "message": {
            "target": "smithy.api#String"
          },
          "parameterName": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p/>"
          }
        },
        "smithy.api#documentation": "<p>Dependency encountered an error.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 531
      },
      "DurationInSeconds": {
        "type": "integer",
        "smithy.api#range": {
          "min": 1,
          "max": 21600
        }
      },
      "Eirp": {
        "type": "structure",
        "members": {
          "units": {
            "target": "EirpUnits",
            "smithy.api#documentation": "<p>Units of an EIRP.</p>",
            "smithy.api#required": true
          },
          "value": {
            "target": "smithy.api#Double",
            "smithy.api#documentation": "<p>Value of an EIRP.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Object that represents EIRP.</p>"
      },
      "EirpUnits": {
        "type": "string",
        "smithy.api#enum": {
          "dBW": {
            "name": "DBW"
          }
        }
      },
      "Elevation": {
        "type": "structure",
        "members": {
          "unit": {
            "target": "AngleUnits",
            "smithy.api#documentation": "<p>Elevation angle units.</p>",
            "smithy.api#required": true
          },
          "value": {
            "target": "smithy.api#Double",
            "smithy.api#documentation": "<p>Elevation angle value.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Elevation angle of the satellite in the sky during a contact.</p>"
      },
      "Frequency": {
        "type": "structure",
        "members": {
          "units": {
            "target": "FrequencyUnits",
            "smithy.api#documentation": "<p>Frequency units.</p>",
            "smithy.api#required": true
          },
          "value": {
            "target": "smithy.api#Double",
            "smithy.api#documentation": "<p>Frequency value.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Object that describes the frequency.</p>"
      },
      "FrequencyBandwidth": {
        "type": "structure",
        "members": {
          "units": {
            "target": "BandwidthUnits",
            "smithy.api#documentation": "<p>Frequency bandwidth units.</p>",
            "smithy.api#required": true
          },
          "value": {
            "target": "smithy.api#Double",
            "smithy.api#documentation": "<p>Frequency bandwidth value.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Object that describes the frequency bandwidth.</p>"
      },
      "FrequencyUnits": {
        "type": "string",
        "smithy.api#enum": {
          "GHz": {
            "name": "GHZ"
          },
          "MHz": {
            "name": "MHZ"
          },
          "kHz": {
            "name": "KHZ"
          }
        }
      },
      "GetMinuteUsage": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#GetMinuteUsageRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#GetMinuteUsageResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns the number of minutes used by account.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/minute-usage",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "GetMinuteUsageRequest": {
        "type": "structure",
        "members": {
          "month": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>The month being requested, with a value of 1-12.</p>",
            "smithy.api#required": true
          },
          "year": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>The year being requested, in the format of YYYY.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetMinuteUsageResponse": {
        "type": "structure",
        "members": {
          "estimatedMinutesRemaining": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Estimated number of minutes remaining for an account, specific to the month being requested.</p>"
          },
          "isReservedMinutesCustomer": {
            "target": "smithy.api#Boolean",
            "smithy.api#documentation": "<p>Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.</p>"
          },
          "totalReservedMinuteAllocation": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Total number of reserved minutes allocated, specific to the month being requested.</p>"
          },
          "totalScheduledMinutes": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Total scheduled minutes for an account, specific to the month being requested.</p>"
          },
          "upcomingMinutesScheduled": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Upcoming minutes scheduled for an account, specific to the month being requested.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetSatellite": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#GetSatelliteRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#GetSatelliteResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a satellite.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/satellite/{satelliteId}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "GetSatelliteRequest": {
        "type": "structure",
        "members": {
          "satelliteId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>UUID of a satellite.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "GetSatelliteResponse": {
        "type": "structure",
        "members": {
          "dateCreated": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>When a satellite was created.</p>"
          },
          "lastUpdated": {
            "target": "smithy.api#Timestamp",
            "smithy.api#documentation": "<p>When a satellite was last updated.</p>"
          },
          "noradSatelliteID": {
            "target": "noradSatelliteID",
            "smithy.api#documentation": "<p>NORAD satellite ID number.</p>"
          },
          "satelliteArn": {
            "target": "satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          },
          "satelliteId": {
            "target": "Uuid",
            "smithy.api#documentation": "<p>UUID of a satellite.</p>"
          },
          "tags": {
            "target": "TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a satellite.</p>"
          }
        },
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazon.awsgsaascontrolplanelambda.r20190311#Satellite"
          }
        ]
      },
      "GroundStationData": {
        "type": "structure",
        "members": {
          "groundStationId": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ID of a ground station.</p>"
          },
          "groundStationName": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          },
          "region": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Ground station Region.</p>"
          }
        },
        "smithy.api#documentation": "<p>Information about the ground station data.</p>"
      },
      "GroundStationList": {
        "type": "list",
        "member": {
          "target": "GroundStationData"
        }
      },
      "InvalidParameterException": {
        "type": "structure",
        "members": {
          "message": {
            "target": "smithy.api#String"
          },
          "parameterName": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p/>"
          }
        },
        "smithy.api#documentation": "<p>One or more parameters are not valid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 431
      },
      "JsonString": {
        "type": "string",
        "smithy.api#length": {
          "min": 2,
          "max": 8192
        }
      },
      "ListGroundStations": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListGroundStationsRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListGroundStationsResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of ground stations. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/groundstation",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "groundStationList",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "provider",
          "customer"
        ]
      },
      "ListGroundStationsRequest": {
        "type": "structure",
        "members": {
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of ground stations returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListGroundStationsResponse": {
        "type": "structure",
        "members": {
          "groundStationList": {
            "target": "GroundStationList",
            "smithy.api#documentation": "<p>List of ground stations.</p>"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListSatellites": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListSatellitesRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListSatellitesResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of satellites.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/satellite",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "satellites",
          "pageSize": "maxResults"
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer"
        ]
      },
      "ListSatellitesRequest": {
        "type": "structure",
        "members": {
          "maxResults": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Maximum number of satellites returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          },
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListSatellitesResponse": {
        "type": "structure",
        "members": {
          "nextToken": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>"
          },
          "satellites": {
            "target": "SatelliteList",
            "smithy.api#documentation": "<p>List of satellites.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListTagsForResource": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListTagsForResourceRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#ListTagsForResourceResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Returns a list of tags or a specified resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#readonly": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "ListTagsForResourceRequest": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ARN of a resource.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "ListTagsForResourceResponse": {
        "type": "structure",
        "members": {
          "tags": {
            "target": "TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a resource.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "Polarization": {
        "type": "string",
        "smithy.api#enum": {
          "RIGHT_HAND": {
            "name": "RIGHT_HAND"
          },
          "LEFT_HAND": {
            "name": "LEFT_HAND"
          },
          "NONE": {
            "name": "NONE"
          }
        }
      },
      "ResourceNotFoundException": {
        "type": "structure",
        "members": {
          "message": {
            "target": "smithy.api#String"
          }
        },
        "smithy.api#documentation": "<p>Resource was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 434
      },
      "RoleArn": {
        "type": "string"
      },
      "SafeName": {
        "type": "string",
        "smithy.api#pattern": "^[ a-zA-Z0-9_:-]+$",
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      },
      "SatelliteList": {
        "type": "list",
        "member": {
          "target": "SatelliteListItem"
        }
      },
      "SatelliteListItem": {
        "type": "structure",
        "members": {
          "noradSatelliteID": {
            "target": "noradSatelliteID",
            "smithy.api#documentation": "<p>NORAD satellite ID number.</p>"
          },
          "satelliteArn": {
            "target": "satelliteArn",
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          },
          "satelliteId": {
            "target": "Uuid",
            "smithy.api#documentation": "<p>ID of a satellite.</p>"
          }
        },
        "smithy.api#documentation": "<p>Item in a list of satellites.</p>"
      },
      "SecurityDetails": {
        "type": "structure",
        "members": {
          "roleArn": {
            "target": "RoleArn",
            "smithy.api#documentation": "<p>ARN to a role needed for connecting streams to your instances. </p>",
            "smithy.api#required": true
          },
          "securityGroupIds": {
            "target": "SecurityGroupIdList",
            "smithy.api#documentation": "<p>The security groups to attach to the elastic network interfaces.</p>",
            "smithy.api#required": true
          },
          "subnetIds": {
            "target": "SubnetList",
            "smithy.api#documentation": "<p>A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about endpoints.</p>"
      },
      "SecurityGroupIdList": {
        "type": "list",
        "member": {
          "target": "smithy.api#String"
        }
      },
      "SocketAddress": {
        "type": "structure",
        "members": {
          "name": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>Name of a socket address.</p>",
            "smithy.api#required": true
          },
          "port": {
            "target": "smithy.api#Integer",
            "smithy.api#documentation": "<p>Port of a socket address.</p>",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p>Information about the socket address.</p>"
      },
      "SpectrumConfig": {
        "type": "structure",
        "members": {
          "bandwidth": {
            "target": "FrequencyBandwidth",
            "smithy.api#documentation": "<p>Bandwidth of a spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "centerFrequency": {
            "target": "Frequency",
            "smithy.api#documentation": "<p>Center frequency of a spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "polarization": {
            "target": "Polarization",
            "smithy.api#documentation": "<p>Polarization of a spectral <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p>Object that describes a spectral <code>Config</code>.</p>"
      },
      "SubnetList": {
        "type": "list",
        "member": {
          "target": "smithy.api#String"
        }
      },
      "TagKeys": {
        "type": "list",
        "member": {
          "target": "smithy.api#String"
        }
      },
      "TagResource": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagResourceRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#TagResourceResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Assigns a tag to a resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "TagResourceRequest": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ARN of a resource tag.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "tags": {
            "target": "TagsMap",
            "smithy.api#documentation": "<p>Tags assigned to a resource.</p>"
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "TagResourceResponse": {
        "type": "structure",
        "members": { },
        "smithy.api#documentation": "<p/>"
      },
      "TagsMap": {
        "type": "map",
        "key": {
          "target": "smithy.api#String"
        },
        "value": {
          "target": "smithy.api#String"
        }
      },
      "UntagResource": {
        "type": "operation",
        "input": "com.amazon.awsgsaascontrolplanelambda.r20190311#UntagResourceRequest",
        "output": "com.amazon.awsgsaascontrolplanelambda.r20190311#UntagResourceResponse",
        "errors": [
          "com.amazon.awsgsaascontrolplanelambda.r20190311#DependencyException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#InvalidParameterException",
          "com.amazon.awsgsaascontrolplanelambda.r20190311#ResourceNotFoundException"
        ],
        "smithy.api#documentation": "<p>Deassigns a resource tag.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}",
          "code": 200
        },
        "smithy.api#idempotent": true,
        "smithy.api#tags": [
          "customer",
          "config"
        ]
      },
      "UntagResourceRequest": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "target": "smithy.api#String",
            "smithy.api#documentation": "<p>ARN of a resource.</p>",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          },
          "tagKeys": {
            "target": "TagKeys",
            "smithy.api#documentation": "<p>Keys of a resource tag.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": true
          }
        },
        "smithy.api#documentation": "<p/>"
      },
      "UntagResourceResponse": {
        "type": "structure",
        "members": { },
        "smithy.api#documentation": "<p/>"
      },
      "UplinkSpectrumConfig": {
        "type": "structure",
        "members": {
          "centerFrequency": {
            "target": "Frequency",
            "smithy.api#documentation": "<p>Center frequency of an uplink spectral <code>Config</code>.</p>",
            "smithy.api#required": true
          },
          "polarization": {
            "target": "Polarization",
            "smithy.api#documentation": "<p>Polarization of an uplink spectral <code>Config</code>.</p>"
          }
        },
        "smithy.api#documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>"
      },
      "Uuid": {
        "type": "string",
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      },
      "noradSatelliteID": {
        "type": "integer",
        "smithy.api#range": {
          "min": 1,
          "max": 99999
        }
      },
      "satelliteArn": {
        "type": "string",
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::Satellite",
          "service": "com.amazon.awsgsaascontrolplanelambda.r20190311#GroundStation",
          "resource": "com.amazon.awsgsaascontrolplanelambda.r20190311#Satellite"
        }
      }
    }
  }
}
