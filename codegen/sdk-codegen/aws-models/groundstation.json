{
  "smithy": "2.0",
  "shapes": {
    "com.amazonaws.groundstation#AWSRegion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[\\w-]+$"
      }
    },
    "com.amazonaws.groundstation#Agent": {
      "type": "resource",
      "identifiers": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#RegisterAgent"
      },
      "read": {
        "target": "com.amazonaws.groundstation#GetAgentConfiguration"
      },
      "update": {
        "target": "com.amazonaws.groundstation#UpdateAgentStatus"
      },
      "traits": {
        "aws.api#arn": {
          "template": "agent/{agentId}"
        }
      }
    },
    "com.amazonaws.groundstation#AgentCpuCoresList": {
      "type": "list",
      "member": {
        "target": "smithy.api#Integer"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.groundstation#AgentDetails": {
      "type": "structure",
      "members": {
        "agentVersion": {
          "target": "com.amazonaws.groundstation#VersionString",
          "traits": {
            "smithy.api#documentation": "<p>Current agent version.</p>",
            "smithy.api#required": {}
          }
        },
        "instanceId": {
          "target": "com.amazonaws.groundstation#InstanceId",
          "traits": {
            "smithy.api#documentation": "<p>ID of EC2 instance agent is running on.</p>",
            "smithy.api#required": {}
          }
        },
        "instanceType": {
          "target": "com.amazonaws.groundstation#InstanceType",
          "traits": {
            "smithy.api#documentation": "<p>Type of EC2 instance agent is running on.</p>",
            "smithy.api#required": {}
          }
        },
        "reservedCpuCores": {
          "target": "com.amazonaws.groundstation#AgentCpuCoresList",
          "traits": {
            "smithy.api#documentation": "<note>\n            <p>This field should not be used. Use agentCpuCores instead.</p>\n         </note>\n         <p>List of CPU cores reserved for processes other than the agent running on the EC2 instance.</p>"
          }
        },
        "agentCpuCores": {
          "target": "com.amazonaws.groundstation#AgentCpuCoresList",
          "traits": {
            "smithy.api#documentation": "<p>List of CPU cores reserved for the agent.</p>"
          }
        },
        "componentVersions": {
          "target": "com.amazonaws.groundstation#ComponentVersionList",
          "traits": {
            "smithy.api#documentation": "<p>List of versions being used by agent components.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Detailed information about the agent.</p>"
      }
    },
    "com.amazonaws.groundstation#AgentStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "SUCCESS",
            "name": "SUCCESS"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "ACTIVE",
            "name": "ACTIVE"
          },
          {
            "value": "INACTIVE",
            "name": "INACTIVE"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#AggregateStatus": {
      "type": "structure",
      "members": {
        "status": {
          "target": "com.amazonaws.groundstation#AgentStatus",
          "traits": {
            "smithy.api#documentation": "<p>Aggregate status.</p>",
            "smithy.api#required": {}
          }
        },
        "signatureMap": {
          "target": "com.amazonaws.groundstation#SignatureMap",
          "traits": {
            "smithy.api#documentation": "<p>Sparse map of failure signatures.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Aggregate status of Agent components.</p>"
      }
    },
    "com.amazonaws.groundstation#AngleUnits": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "DEGREE_ANGLE",
            "name": "DEGREE_ANGLE"
          },
          {
            "value": "RADIAN",
            "name": "RADIAN"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#AntennaDemodDecodeDetails": {
      "type": "structure",
      "members": {
        "outputNode": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of an antenna demod decode output node used in a contact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an antenna demod decode <code>Config</code> used in a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#AntennaDownlinkConfig": {
      "type": "structure",
      "members": {
        "spectrumConfig": {
          "target": "com.amazonaws.groundstation#SpectrumConfig",
          "traits": {
            "smithy.api#documentation": "<p>Object that describes a spectral <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about how AWS Ground Station should configure an\n         antenna for downlink during a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#AntennaDownlinkDemodDecodeConfig": {
      "type": "structure",
      "members": {
        "spectrumConfig": {
          "target": "com.amazonaws.groundstation#SpectrumConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the spectral <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "demodulationConfig": {
          "target": "com.amazonaws.groundstation#DemodulationConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the demodulation <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "decodeConfig": {
          "target": "com.amazonaws.groundstation#DecodeConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the decode <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about how AWS Ground Station should conÔ¨Ågure an antenna for downlink demod decode during a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#AntennaUplinkConfig": {
      "type": "structure",
      "members": {
        "transmitDisabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not uplink transmit is disabled.</p>"
          }
        },
        "spectrumConfig": {
          "target": "com.amazonaws.groundstation#UplinkSpectrumConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "targetEirp": {
          "target": "com.amazonaws.groundstation#Eirp",
          "traits": {
            "smithy.api#documentation": "<p>EIRP of the target.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the uplink <code>Config</code> of an antenna.</p>"
      }
    },
    "com.amazonaws.groundstation#AnyArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 5,
          "max": 1024
        },
        "smithy.api#pattern": "^(arn:aws:)[\\s\\S]{0,1024}$"
      }
    },
    "com.amazonaws.groundstation#AuditResults": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "HEALTHY",
            "name": "HEALTHY"
          },
          {
            "value": "UNHEALTHY",
            "name": "UNHEALTHY"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#AwsGroundStationAgentEndpoint": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name string associated with AgentEndpoint. Used as a human-readable identifier for AgentEndpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "egressAddress": {
          "target": "com.amazonaws.groundstation#ConnectionDetails",
          "traits": {
            "smithy.api#documentation": "<p>The egress address of AgentEndpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "ingressAddress": {
          "target": "com.amazonaws.groundstation#RangedConnectionDetails",
          "traits": {
            "smithy.api#documentation": "<p>The ingress address of AgentEndpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "agentStatus": {
          "target": "com.amazonaws.groundstation#AgentStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of AgentEndpoint.</p>"
          }
        },
        "auditResults": {
          "target": "com.amazonaws.groundstation#AuditResults",
          "traits": {
            "smithy.api#documentation": "<p>The results of the audit.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about AwsGroundStationAgentEndpoint.</p>"
      }
    },
    "com.amazonaws.groundstation#BandwidthUnits": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "GHz",
            "name": "GHZ"
          },
          {
            "value": "MHz",
            "name": "MHZ"
          },
          {
            "value": "kHz",
            "name": "KHZ"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#BucketArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::S3::Bucket"
        }
      }
    },
    "com.amazonaws.groundstation#CancelContact": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#CancelContactRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ContactIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Cancels a contact with a specified contact ID.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/contact/{contactId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#CancelContactRequest": {
      "type": "structure",
      "members": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a contact.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#CapabilityArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::GroundStationProvider::Capability",
          "service": "com.amazon.awsgsaascontrolplanelambda.provider.r20190311#GroundStationProvider",
          "resource": "com.amazon.awsgsaascontrolplanelambda.provider.r20190311#Capability"
        }
      }
    },
    "com.amazonaws.groundstation#CapabilityArnList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#CapabilityArn"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.groundstation#CapabilityHealth": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "UNHEALTHY",
            "name": "UNHEALTHY"
          },
          {
            "value": "HEALTHY",
            "name": "HEALTHY"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#CapabilityHealthReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "NO_REGISTERED_AGENT",
            "name": "NO_REGISTERED_AGENT"
          },
          {
            "value": "INVALID_IP_OWNERSHIP",
            "name": "INVALID_IP_OWNERSHIP"
          },
          {
            "value": "NOT_AUTHORIZED_TO_CREATE_SLR",
            "name": "NOT_AUTHORIZED_TO_CREATE_SLR"
          },
          {
            "value": "UNVERIFIED_IP_OWNERSHIP",
            "name": "UNVERIFIED_IP_OWNERSHIP"
          },
          {
            "value": "INITIALIZING_DATAPLANE",
            "name": "INITIALIZING_DATAPLANE"
          },
          {
            "value": "DATAPLANE_FAILURE",
            "name": "DATAPLANE_FAILURE"
          },
          {
            "value": "HEALTHY",
            "name": "HEALTHY"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#CapabilityHealthReasonList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#CapabilityHealthReason"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#ComponentStatusData": {
      "type": "structure",
      "members": {
        "componentType": {
          "target": "com.amazonaws.groundstation#ComponentTypeString",
          "traits": {
            "smithy.api#documentation": "<p>The Component type.</p>",
            "smithy.api#required": {}
          }
        },
        "capabilityArn": {
          "target": "com.amazonaws.groundstation#CapabilityArn",
          "traits": {
            "smithy.api#documentation": "<p>Capability ARN of the component.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.groundstation#AgentStatus",
          "traits": {
            "smithy.api#documentation": "<p>Component status.</p>",
            "smithy.api#required": {}
          }
        },
        "bytesSent": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Bytes sent by the component.</p>"
          }
        },
        "bytesReceived": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Bytes received by the component.</p>"
          }
        },
        "packetsDropped": {
          "target": "smithy.api#Long",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Packets dropped by component.</p>"
          }
        },
        "dataflowId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>Dataflow UUID associated with the component.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Data on the status of agent components.</p>"
      }
    },
    "com.amazonaws.groundstation#ComponentStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ComponentStatusData"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.groundstation#ComponentTypeString": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-zA-Z0-9_]{1,64}$"
      }
    },
    "com.amazonaws.groundstation#ComponentVersion": {
      "type": "structure",
      "members": {
        "componentType": {
          "target": "com.amazonaws.groundstation#ComponentTypeString",
          "traits": {
            "smithy.api#documentation": "<p>Component type.</p>",
            "smithy.api#required": {}
          }
        },
        "versions": {
          "target": "com.amazonaws.groundstation#VersionStringList",
          "traits": {
            "smithy.api#documentation": "<p>List of versions.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Version information for agent components.</p>"
      }
    },
    "com.amazonaws.groundstation#ComponentVersionList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ComponentVersion"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.groundstation#Config": {
      "type": "resource",
      "identifiers": {
        "configId": {
          "target": "com.amazonaws.groundstation#Uuid"
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#CreateConfig"
      },
      "read": {
        "target": "com.amazonaws.groundstation#GetConfig"
      },
      "update": {
        "target": "com.amazonaws.groundstation#UpdateConfig"
      },
      "delete": {
        "target": "com.amazonaws.groundstation#DeleteConfig"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListConfigs"
      },
      "traits": {
        "aws.api#arn": {
          "template": "config/{configType}/{configId}"
        }
      }
    },
    "com.amazonaws.groundstation#ConfigArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::Config",
          "service": "GroundStation",
          "resource": "Config"
        }
      }
    },
    "com.amazonaws.groundstation#ConfigCapabilityType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "antenna-downlink",
            "name": "ANTENNA_DOWNLINK"
          },
          {
            "value": "antenna-downlink-demod-decode",
            "name": "ANTENNA_DOWNLINK_DEMOD_DECODE"
          },
          {
            "value": "antenna-uplink",
            "name": "ANTENNA_UPLINK"
          },
          {
            "value": "dataflow-endpoint",
            "name": "DATAFLOW_ENDPOINT"
          },
          {
            "value": "tracking",
            "name": "TRACKING"
          },
          {
            "value": "uplink-echo",
            "name": "UPLINK_ECHO"
          },
          {
            "value": "s3-recording",
            "name": "S3_RECORDING"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#ConfigDetails": {
      "type": "union",
      "members": {
        "endpointDetails": {
          "target": "com.amazonaws.groundstation#EndpointDetails"
        },
        "antennaDemodDecodeDetails": {
          "target": "com.amazonaws.groundstation#AntennaDemodDecodeDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details for antenna demod decode <code>Config</code> in a contact.</p>"
          }
        },
        "s3RecordingDetails": {
          "target": "com.amazonaws.groundstation#S3RecordingDetails",
          "traits": {
            "smithy.api#documentation": "<p>Details for an S3 recording <code>Config</code> in a contact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details for certain <code>Config</code> object types in a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#ConfigIdResponse": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "configArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ConfigList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ConfigListItem"
      }
    },
    "com.amazonaws.groundstation#ConfigListItem": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "configArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>.</p>"
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An item in a list of <code>Config</code> objects.</p>"
      }
    },
    "com.amazonaws.groundstation#ConfigTypeData": {
      "type": "union",
      "members": {
        "antennaDownlinkConfig": {
          "target": "com.amazonaws.groundstation#AntennaDownlinkConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should configure an antenna for downlink during a contact.</p>"
          }
        },
        "trackingConfig": {
          "target": "com.amazonaws.groundstation#TrackingConfig",
          "traits": {
            "smithy.api#documentation": "<p>Object that determines whether tracking should be used during a contact executed with this <code>Config</code> in the mission profile. </p>"
          }
        },
        "dataflowEndpointConfig": {
          "target": "com.amazonaws.groundstation#DataflowEndpointConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>"
          }
        },
        "antennaDownlinkDemodDecodeConfig": {
          "target": "com.amazonaws.groundstation#AntennaDownlinkDemodDecodeConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should conÔ¨Ågure an antenna for downlink demod decode during a contact.</p>"
          }
        },
        "antennaUplinkConfig": {
          "target": "com.amazonaws.groundstation#AntennaUplinkConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about how AWS Ground Station should conÔ¨Ågure an antenna for uplink during a contact.</p>"
          }
        },
        "uplinkEchoConfig": {
          "target": "com.amazonaws.groundstation#UplinkEchoConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> is used in a contact.</p>"
          }
        },
        "s3RecordingConfig": {
          "target": "com.amazonaws.groundstation#S3RecordingConfig",
          "traits": {
            "smithy.api#documentation": "<p>Information about an S3 recording <code>Config</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object containing the parameters of a <code>Config</code>.</p>\n         <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>"
      }
    },
    "com.amazonaws.groundstation#ConnectionDetails": {
      "type": "structure",
      "members": {
        "socketAddress": {
          "target": "com.amazonaws.groundstation#SocketAddress",
          "traits": {
            "smithy.api#documentation": "<p>A socket address.</p>",
            "smithy.api#required": {}
          }
        },
        "mtu": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Egress address of AgentEndpoint with an optional mtu.</p>"
      }
    },
    "com.amazonaws.groundstation#Contact": {
      "type": "resource",
      "identifiers": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#ReserveContact"
      },
      "read": {
        "target": "com.amazonaws.groundstation#DescribeContact"
      },
      "delete": {
        "target": "com.amazonaws.groundstation#CancelContact"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListContacts"
      },
      "traits": {
        "aws.api#arn": {
          "template": "contact/{contactId}"
        }
      }
    },
    "com.amazonaws.groundstation#ContactData": {
      "type": "structure",
      "members": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          }
        },
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Start time of a contact in UTC.</p>"
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>End time of a contact in UTC.</p>"
          }
        },
        "prePassStartTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time prior to contact start you‚Äôd like to receive a CloudWatch event indicating an upcoming pass.</p>"
          }
        },
        "postPassEndTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "groundStation": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          }
        },
        "contactStatus": {
          "target": "com.amazonaws.groundstation#ContactStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of a contact.</p>"
          }
        },
        "errorMessage": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Error message of a contact.</p>"
          }
        },
        "maximumElevation": {
          "target": "com.amazonaws.groundstation#Elevation",
          "traits": {
            "smithy.api#documentation": "<p>Maximum elevation angle of a contact.</p>"
          }
        },
        "region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Region of a contact.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Data describing a contact.</p>",
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.groundstation#Contact"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#ContactIdResponse": {
      "type": "structure",
      "members": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ContactList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ContactData"
      }
    },
    "com.amazonaws.groundstation#ContactStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "AVAILABLE",
            "name": "AVAILABLE"
          },
          {
            "value": "AWS_CANCELLED",
            "name": "AWS_CANCELLED"
          },
          {
            "value": "AWS_FAILED",
            "name": "AWS_FAILED"
          },
          {
            "value": "CANCELLED",
            "name": "CANCELLED"
          },
          {
            "value": "CANCELLING",
            "name": "CANCELLING"
          },
          {
            "value": "COMPLETED",
            "name": "COMPLETED"
          },
          {
            "value": "FAILED",
            "name": "FAILED"
          },
          {
            "value": "FAILED_TO_SCHEDULE",
            "name": "FAILED_TO_SCHEDULE"
          },
          {
            "value": "PASS",
            "name": "PASS"
          },
          {
            "value": "POSTPASS",
            "name": "POSTPASS"
          },
          {
            "value": "PREPASS",
            "name": "PREPASS"
          },
          {
            "value": "SCHEDULED",
            "name": "SCHEDULED"
          },
          {
            "value": "SCHEDULING",
            "name": "SCHEDULING"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#CreateConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#CreateConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ConfigIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceLimitExceededException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <code>Config</code> with the specified <code>configData</code> parameters.</p>\n         <p>Only one type of <code>configData</code> can be specified.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/config"
        }
      }
    },
    "com.amazonaws.groundstation#CreateConfigRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "configData": {
          "target": "com.amazonaws.groundstation#ConfigTypeData",
          "traits": {
            "smithy.api#documentation": "<p>Parameters of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a <code>Config</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#CreateDataflowEndpointGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#CreateDataflowEndpointGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#DataflowEndpointGroupIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code> objects.</p>\n         <p>The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code> \n         to specify which endpoints to use during a contact.</p>\n         <p>When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code> \n         must match a <code>DataflowEndpoint</code> in the same group.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/dataflowEndpointGroup"
        }
      }
    },
    "com.amazonaws.groundstation#CreateDataflowEndpointGroupRequest": {
      "type": "structure",
      "members": {
        "endpointDetails": {
          "target": "com.amazonaws.groundstation#EndpointDetailsList",
          "traits": {
            "smithy.api#documentation": "<p>Endpoint details of each endpoint in the dataflow endpoint group.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags of a dataflow endpoint group.</p>"
          }
        },
        "contactPrePassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a <code>PREPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>PREPASS</code> state.</p>"
          }
        },
        "contactPostPassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a <code>POSTPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>POSTPASS</code> state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#CreateEphemeris": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#CreateEphemerisRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#EphemerisIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates an Ephemeris with the specified <code>EphemerisData</code>.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ephemeris"
        }
      }
    },
    "com.amazonaws.groundstation#CreateEphemerisRequest": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>AWS Ground Station satellite ID for this ephemeris.</p>",
            "smithy.api#required": {}
          }
        },
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Whether to set the ephemeris status to <code>ENABLED</code> after validation.</p>\n         <p>Setting this to false will set the ephemeris status to <code>DISABLED</code> after validation.</p>"
          }
        },
        "priority": {
          "target": "com.amazonaws.groundstation#CustomerEphemerisPriority",
          "traits": {
            "smithy.api#documentation": "<p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>\n         <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>\n         <p>Priority must be 1 or greater</p>"
          }
        },
        "expirationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>An overall expiration time for the ephemeris in UTC, after which it will become <code>EXPIRED</code>.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>",
            "smithy.api#required": {}
          }
        },
        "kmsKeyArn": {
          "target": "com.amazonaws.groundstation#KeyArn",
          "traits": {
            "smithy.api#documentation": "<p>The ARN of a KMS key used to encrypt the ephemeris in Ground Station.</p>"
          }
        },
        "ephemeris": {
          "target": "com.amazonaws.groundstation#EphemerisData",
          "traits": {
            "smithy.api#documentation": "<p>Ephemeris data.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to an ephemeris.</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#CreateMissionProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#CreateMissionProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#MissionProfileIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a mission profile.</p>\n         <p>\n            <code>dataflowEdges</code> is a list of lists of strings. Each lower level list of strings\n         has two elements: a <i>from</i> ARN and a <i>to</i> ARN.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/missionprofile"
        }
      }
    },
    "com.amazonaws.groundstation#CreateMissionProfileRequest": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a mission profile.</p>",
            "smithy.api#required": {}
          }
        },
        "contactPrePassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time prior to contact start you‚Äôd like to receive a CloudWatch event indicating an upcoming pass.</p>"
          }
        },
        "contactPostPassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "minimumViableContactDurationSeconds": {
          "target": "com.amazonaws.groundstation#PositiveDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you‚Äôd like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
            "smithy.api#required": {}
          }
        },
        "dataflowEdges": {
          "target": "com.amazonaws.groundstation#DataflowEdgeList",
          "traits": {
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i>\n            <code>Config</code> and a <i>to</i>\n            <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "trackingConfigArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a mission profile.</p>"
          }
        },
        "streamsKmsKey": {
          "target": "com.amazonaws.groundstation#KmsKey",
          "traits": {
            "smithy.api#documentation": "<p>KMS key to use for encrypting streams.</p>"
          }
        },
        "streamsKmsRole": {
          "target": "com.amazonaws.groundstation#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Role to use for encrypting streams with KMS key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#Criticality": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "PREFERRED",
            "name": "PREFERRED"
          },
          {
            "value": "REMOVED",
            "name": "REMOVED"
          },
          {
            "value": "REQUIRED",
            "name": "REQUIRED"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#CustomerEphemerisPriority": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 99999
        }
      }
    },
    "com.amazonaws.groundstation#DataflowDetail": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.groundstation#Source"
        },
        "destination": {
          "target": "com.amazonaws.groundstation#Destination"
        },
        "errorMessage": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Error message for a dataflow.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a dataflow edge used in a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#DataflowEdge": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ConfigArn"
      },
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 2
        }
      }
    },
    "com.amazonaws.groundstation#DataflowEdgeList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#DataflowEdge"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#DataflowEndpoint": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a dataflow endpoint.</p>"
          }
        },
        "address": {
          "target": "com.amazonaws.groundstation#SocketAddress",
          "traits": {
            "smithy.api#documentation": "<p>Socket address of a dataflow endpoint.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.groundstation#EndpointStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of a dataflow endpoint.</p>"
          }
        },
        "mtu": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>",
            "smithy.api#range": {
              "min": 1400,
              "max": 1500
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a dataflow endpoint.</p>"
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointConfig": {
      "type": "structure",
      "members": {
        "dataflowEndpointName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of a dataflow endpoint.</p>",
            "smithy.api#required": {}
          }
        },
        "dataflowEndpointRegion": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Region of a dataflow endpoint.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointGroup": {
      "type": "resource",
      "identifiers": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#CreateDataflowEndpointGroup"
      },
      "read": {
        "target": "com.amazonaws.groundstation#GetDataflowEndpointGroup"
      },
      "delete": {
        "target": "com.amazonaws.groundstation#DeleteDataflowEndpointGroup"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListDataflowEndpointGroups"
      },
      "traits": {
        "aws.api#arn": {
          "template": "dataflow-endpoint-group/{dataflowEndpointGroupId}"
        }
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointGroupArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::DataflowEndpointGroup",
          "service": "GroundStation",
          "resource": "DataflowEndpointGroup"
        }
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointGroupDurationInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 120,
          "max": 480
        }
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointGroupIdResponse": {
      "type": "structure",
      "members": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointGroupList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#DataflowEndpointListItem"
      }
    },
    "com.amazonaws.groundstation#DataflowEndpointListItem": {
      "type": "structure",
      "members": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>"
          }
        },
        "dataflowEndpointGroupArn": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a dataflow endpoint group.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Item in a list of <code>DataflowEndpoint</code> groups.</p>"
      }
    },
    "com.amazonaws.groundstation#DataflowList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#DataflowDetail"
      }
    },
    "com.amazonaws.groundstation#DecodeConfig": {
      "type": "structure",
      "members": {
        "unvalidatedJSON": {
          "target": "com.amazonaws.groundstation#JsonString",
          "traits": {
            "smithy.api#documentation": "<p>Unvalidated JSON of a decode <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the decode <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#DeleteConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DeleteConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ConfigIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a <code>Config</code>.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/config/{configType}/{configId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#DeleteConfigRequest": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#DeleteDataflowEndpointGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DeleteDataflowEndpointGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#DataflowEndpointGroupIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a dataflow endpoint group.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#DeleteDataflowEndpointGroupRequest": {
      "type": "structure",
      "members": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#DeleteEphemeris": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DeleteEphemerisRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#EphemerisIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes an ephemeris</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/ephemeris/{ephemerisId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#DeleteEphemerisRequest": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#DeleteMissionProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DeleteMissionProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#MissionProfileIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a mission profile.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/missionprofile/{missionProfileId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#DeleteMissionProfileRequest": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#DemodulationConfig": {
      "type": "structure",
      "members": {
        "unvalidatedJSON": {
          "target": "com.amazonaws.groundstation#JsonString",
          "traits": {
            "smithy.api#documentation": "<p>Unvalidated JSON of a demodulation <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the demodulation <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#DependencyException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "parameterName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p/>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Dependency encountered an error.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 531
      }
    },
    "com.amazonaws.groundstation#DescribeContact": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DescribeContactRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#DescribeContactResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes an existing contact.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/contact/{contactId}"
        },
        "smithy.api#readonly": {},
        "smithy.waiters#waitable": {
          "ContactScheduled": {
            "documentation": "Waits until a contact has been scheduled",
            "minDelay": 5,
            "maxDelay": 900,
            "acceptors": [
              {
                "state": "failure",
                "matcher": {
                  "output": {
                    "path": "contactStatus",
                    "comparator": "stringEquals",
                    "expected": "FAILED_TO_SCHEDULE"
                  }
                }
              },
              {
                "state": "success",
                "matcher": {
                  "output": {
                    "path": "contactStatus",
                    "comparator": "stringEquals",
                    "expected": "SCHEDULED"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "com.amazonaws.groundstation#DescribeContactRequest": {
      "type": "structure",
      "members": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a contact.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#DescribeContactResponse": {
      "type": "structure",
      "members": {
        "contactId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a contact.</p>"
          }
        },
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Start time of a contact in UTC.</p>"
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>End time of a contact in UTC.</p>"
          }
        },
        "prePassStartTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time prior to contact start you‚Äôd like to receive a CloudWatch event indicating an upcoming pass.</p>"
          }
        },
        "postPassEndTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "groundStation": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Ground station for a contact.</p>"
          }
        },
        "contactStatus": {
          "target": "com.amazonaws.groundstation#ContactStatus",
          "traits": {
            "smithy.api#documentation": "<p>Status of a contact.</p>"
          }
        },
        "errorMessage": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Error message for a contact.</p>"
          }
        },
        "maximumElevation": {
          "target": "com.amazonaws.groundstation#Elevation",
          "traits": {
            "smithy.api#documentation": "<p>Maximum elevation angle of a contact.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        },
        "region": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Region of a contact.</p>"
          }
        },
        "dataflowList": {
          "target": "com.amazonaws.groundstation#DataflowList",
          "traits": {
            "smithy.api#documentation": "<p>List describing source and destination details for each dataflow edge.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.groundstation#Contact"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#DescribeEphemeris": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#DescribeEphemerisRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#DescribeEphemerisResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes an existing ephemeris.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/ephemeris/{ephemerisId}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#DescribeEphemerisRequest": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#DescribeEphemerisResponse": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>"
          }
        },
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station satellite ID associated with ephemeris.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.groundstation#EphemerisStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the ephemeris.</p>"
          }
        },
        "priority": {
          "target": "com.amazonaws.groundstation#EphemerisPriority",
          "traits": {
            "smithy.api#documentation": "<p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>\n         <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>\n         <p>Priority must be 1 or greater</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the ephemeris was uploaded in UTC.</p>"
          }
        },
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Whether or not the ephemeris is enabled.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to an ephemeris.</p>"
          }
        },
        "suppliedData": {
          "target": "com.amazonaws.groundstation#EphemerisTypeDescription",
          "traits": {
            "smithy.api#documentation": "<p>Supplied ephemeris data.</p>"
          }
        },
        "invalidReason": {
          "target": "com.amazonaws.groundstation#EphemerisInvalidReason",
          "traits": {
            "smithy.api#documentation": "<p>Reason that an ephemeris failed validation. Only provided for ephemerides with <code>INVALID</code> status.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.groundstation#Ephemeris"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#Destination": {
      "type": "structure",
      "members": {
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "configId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          }
        },
        "configDetails": {
          "target": "com.amazonaws.groundstation#ConfigDetails",
          "traits": {
            "smithy.api#documentation": "<p>Additional details for a <code>Config</code>, if type is dataflow endpoint or antenna demod decode.</p>"
          }
        },
        "dataflowDestinationRegion": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Region of a dataflow destination.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Dataflow details for the destination side.</p>"
      }
    },
    "com.amazonaws.groundstation#DiscoveryData": {
      "type": "structure",
      "members": {
        "publicIpAddresses": {
          "target": "com.amazonaws.groundstation#IpAddressList",
          "traits": {
            "smithy.api#documentation": "<p>List of public IP addresses to associate with agent.</p>",
            "smithy.api#required": {}
          }
        },
        "privateIpAddresses": {
          "target": "com.amazonaws.groundstation#IpAddressList",
          "traits": {
            "smithy.api#documentation": "<p>List of private IP addresses to associate with agent.</p>",
            "smithy.api#required": {}
          }
        },
        "capabilityArns": {
          "target": "com.amazonaws.groundstation#CapabilityArnList",
          "traits": {
            "smithy.api#documentation": "<p>List of capabilities to associate with agent.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Data for agent discovery.</p>"
      }
    },
    "com.amazonaws.groundstation#DurationInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 21600
        }
      }
    },
    "com.amazonaws.groundstation#Eirp": {
      "type": "structure",
      "members": {
        "value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Value of an EIRP. Valid values are between 20.0 to 50.0 dBW.</p>",
            "smithy.api#required": {}
          }
        },
        "units": {
          "target": "com.amazonaws.groundstation#EirpUnits",
          "traits": {
            "smithy.api#documentation": "<p>Units of an EIRP.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object that represents EIRP.</p>"
      }
    },
    "com.amazonaws.groundstation#EirpUnits": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "dBW",
            "name": "DBW"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#Elevation": {
      "type": "structure",
      "members": {
        "value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Elevation angle value.</p>",
            "smithy.api#required": {}
          }
        },
        "unit": {
          "target": "com.amazonaws.groundstation#AngleUnits",
          "traits": {
            "smithy.api#documentation": "<p>Elevation angle units.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Elevation angle of the satellite in the sky during a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#EndpointDetails": {
      "type": "structure",
      "members": {
        "securityDetails": {
          "target": "com.amazonaws.groundstation#SecurityDetails",
          "traits": {
            "smithy.api#documentation": "<p>Endpoint security details including a list of subnets, a list of security groups and a role to connect streams to instances.</p>"
          }
        },
        "endpoint": {
          "target": "com.amazonaws.groundstation#DataflowEndpoint",
          "traits": {
            "smithy.api#documentation": "<p>A dataflow endpoint.</p>"
          }
        },
        "awsGroundStationAgentEndpoint": {
          "target": "com.amazonaws.groundstation#AwsGroundStationAgentEndpoint",
          "traits": {
            "smithy.api#documentation": "<p>An agent endpoint.</p>"
          }
        },
        "healthStatus": {
          "target": "com.amazonaws.groundstation#CapabilityHealth",
          "traits": {
            "smithy.api#documentation": "<p>A dataflow endpoint health status. This field is ignored when calling <code>CreateDataflowEndpointGroup</code>.</p>"
          }
        },
        "healthReasons": {
          "target": "com.amazonaws.groundstation#CapabilityHealthReasonList",
          "traits": {
            "smithy.api#documentation": "<p>Health reasons for a dataflow endpoint. This field is ignored when calling <code>CreateDataflowEndpointGroup</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the endpoint details.</p>"
      }
    },
    "com.amazonaws.groundstation#EndpointDetailsList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#EndpointDetails"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#EndpointStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "created",
            "name": "created"
          },
          {
            "value": "creating",
            "name": "creating"
          },
          {
            "value": "deleted",
            "name": "deleted"
          },
          {
            "value": "deleting",
            "name": "deleting"
          },
          {
            "value": "failed",
            "name": "failed"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#EphemeridesList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#EphemerisItem"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#Ephemeris": {
      "type": "resource",
      "identifiers": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#CreateEphemeris"
      },
      "read": {
        "target": "com.amazonaws.groundstation#DescribeEphemeris"
      },
      "update": {
        "target": "com.amazonaws.groundstation#UpdateEphemeris"
      },
      "delete": {
        "target": "com.amazonaws.groundstation#DeleteEphemeris"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListEphemerides"
      },
      "traits": {
        "aws.api#arn": {
          "template": "ephemeris/{ephemerisId}"
        }
      }
    },
    "com.amazonaws.groundstation#EphemerisData": {
      "type": "union",
      "members": {
        "tle": {
          "target": "com.amazonaws.groundstation#TLEEphemeris"
        },
        "oem": {
          "target": "com.amazonaws.groundstation#OEMEphemeris"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Ephemeris data.</p>"
      }
    },
    "com.amazonaws.groundstation#EphemerisDescription": {
      "type": "structure",
      "members": {
        "sourceS3Object": {
          "target": "com.amazonaws.groundstation#S3Object",
          "traits": {
            "smithy.api#documentation": "<p>Source S3 object used for the ephemeris.</p>"
          }
        },
        "ephemerisData": {
          "target": "com.amazonaws.groundstation#UnboundedString",
          "traits": {
            "smithy.api#documentation": "<p>Supplied ephemeris data.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Description of ephemeris.</p>"
      }
    },
    "com.amazonaws.groundstation#EphemerisIdResponse": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#EphemerisInvalidReason": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "METADATA_INVALID",
            "name": "METADATA_INVALID",
            "documentation": "Provided spacecraft identifiers such as spacecraft NORAD Id are invalid"
          },
          {
            "value": "TIME_RANGE_INVALID",
            "name": "TIME_RANGE_INVALID",
            "documentation": "Start, end, or expiration time(s) are invalid for the provided ephemeris"
          },
          {
            "value": "TRAJECTORY_INVALID",
            "name": "TRAJECTORY_INVALID",
            "documentation": "Provided ephemeris defines invalid spacecraft trajectory"
          },
          {
            "value": "KMS_KEY_INVALID",
            "name": "KMS_KEY_INVALID",
            "documentation": "Provided KMS key is invalid"
          },
          {
            "value": "VALIDATION_ERROR",
            "name": "VALIDATION_ERROR",
            "documentation": "Internal Service Error occurred while processing ephemeris"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#EphemerisItem": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>"
          }
        },
        "status": {
          "target": "com.amazonaws.groundstation#EphemerisStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the ephemeris.</p>"
          }
        },
        "priority": {
          "target": "com.amazonaws.groundstation#EphemerisPriority",
          "traits": {
            "smithy.api#documentation": "<p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>\n         <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>\n         <p>Priority must be 1 or greater</p>"
          }
        },
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#default": null,
            "smithy.api#documentation": "<p>Whether or not the ephemeris is enabled.</p>"
          }
        },
        "creationTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time the ephemeris was uploaded in UTC.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>"
          }
        },
        "sourceS3Object": {
          "target": "com.amazonaws.groundstation#S3Object",
          "traits": {
            "smithy.api#documentation": "<p>Source S3 object used for the ephemeris.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Ephemeris item.</p>"
      }
    },
    "com.amazonaws.groundstation#EphemerisMetaData": {
      "type": "structure",
      "members": {
        "source": {
          "target": "com.amazonaws.groundstation#EphemerisSource",
          "traits": {
            "smithy.api#documentation": "<p>The <code>EphemerisSource</code> that generated a given ephemeris.</p>",
            "smithy.api#required": {}
          }
        },
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a customer-provided ephemeris.</p>\n         <p>This field is not populated for default ephemerides from Space Track.</p>"
          }
        },
        "epoch": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The epoch of a default, ephemeris from Space Track in UTC.</p>\n         <p>This field is not populated for customer-provided ephemerides.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>\n         <p>A name is only returned for customer-provider ephemerides that have a name associated.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Metadata describing a particular ephemeris.</p>"
      }
    },
    "com.amazonaws.groundstation#EphemerisPriority": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 99999
        }
      }
    },
    "com.amazonaws.groundstation#EphemerisSource": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CUSTOMER_PROVIDED",
            "name": "CUSTOMER_PROVIDED"
          },
          {
            "value": "SPACE_TRACK",
            "name": "SPACE_TRACK"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#EphemerisStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "VALIDATING",
            "name": "VALIDATING"
          },
          {
            "value": "INVALID",
            "name": "INVALID"
          },
          {
            "value": "ERROR",
            "name": "ERROR"
          },
          {
            "value": "ENABLED",
            "name": "ENABLED"
          },
          {
            "value": "DISABLED",
            "name": "DISABLED"
          },
          {
            "value": "EXPIRED",
            "name": "EXPIRED"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#EphemerisStatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#EphemerisStatus"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#EphemerisTypeDescription": {
      "type": "union",
      "members": {
        "tle": {
          "target": "com.amazonaws.groundstation#EphemerisDescription"
        },
        "oem": {
          "target": "com.amazonaws.groundstation#EphemerisDescription"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#Frequency": {
      "type": "structure",
      "members": {
        "value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Frequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.</p>",
            "smithy.api#required": {}
          }
        },
        "units": {
          "target": "com.amazonaws.groundstation#FrequencyUnits",
          "traits": {
            "smithy.api#documentation": "<p>Frequency units.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object that describes the frequency.</p>"
      }
    },
    "com.amazonaws.groundstation#FrequencyBandwidth": {
      "type": "structure",
      "members": {
        "value": {
          "target": "smithy.api#Double",
          "traits": {
            "smithy.api#documentation": "<p>Frequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:</p>\n         <ul>\n            <li>\n               <p>For <code>AntennaDownlinkDemodDecodeconfig</code>, valid values are between 125 kHz to 650 MHz.</p>\n            </li>\n            <li>\n               <p>For <code>AntennaDownlinkconfig</code>, valid values are between 10 kHz to 54 MHz.</p>\n            </li>\n            <li>\n               <p>For <code>AntennaUplinkConfig</code>, valid values are between 10 kHz to 54 MHz.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "units": {
          "target": "com.amazonaws.groundstation#BandwidthUnits",
          "traits": {
            "smithy.api#documentation": "<p>Frequency bandwidth units.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object that describes the frequency bandwidth. </p>"
      }
    },
    "com.amazonaws.groundstation#FrequencyUnits": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "GHz",
            "name": "GHZ"
          },
          {
            "value": "MHz",
            "name": "MHZ"
          },
          {
            "value": "kHz",
            "name": "KHZ"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#GetAgentConfiguration": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetAgentConfigurationRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetAgentConfigurationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<note>\n            <p> For use by AWS Ground Station Agent and shouldn't be called directly.</p>\n         </note>\n         <p>Gets the latest configuration information for a registered agent.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/agent/{agentId}/configuration"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetAgentConfigurationRequest": {
      "type": "structure",
      "members": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of agent to get configuration information for.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#GetAgentConfigurationResponse": {
      "type": "structure",
      "members": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of agent.</p>"
          }
        },
        "taskingDocument": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Tasking document for agent.</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#GetConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetConfigResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns <code>Config</code> information.</p>\n         <p>Only one <code>Config</code> response can be returned.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/config/{configType}/{configId}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetConfigRequest": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetConfigResponse": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "configArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a <code>Config</code>\n         </p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "configData": {
          "target": "com.amazonaws.groundstation#ConfigTypeData",
          "traits": {
            "smithy.api#documentation": "<p>Data elements in a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a <code>Config</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetDataflowEndpointGroup": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetDataflowEndpointGroupRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetDataflowEndpointGroupResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the dataflow endpoint group.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetDataflowEndpointGroupRequest": {
      "type": "structure",
      "members": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetDataflowEndpointGroupResponse": {
      "type": "structure",
      "members": {
        "dataflowEndpointGroupId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a dataflow endpoint group.</p>"
          }
        },
        "dataflowEndpointGroupArn": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a dataflow endpoint group.</p>"
          }
        },
        "endpointsDetails": {
          "target": "com.amazonaws.groundstation#EndpointDetailsList",
          "traits": {
            "smithy.api#documentation": "<p>Details of a dataflow endpoint.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a dataflow endpoint group.</p>"
          }
        },
        "contactPrePassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a <code>PREPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>PREPASS</code> state.</p>"
          }
        },
        "contactPostPassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a <code>POSTPASS</code> state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group enters and exits the <code>POSTPASS</code> state.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetMinuteUsage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetMinuteUsageRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetMinuteUsageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the number of reserved minutes used by account.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/minute-usage"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetMinuteUsageRequest": {
      "type": "structure",
      "members": {
        "month": {
          "target": "com.amazonaws.groundstation#Month",
          "traits": {
            "smithy.api#documentation": "<p>The month being requested, with a value of 1-12.</p>",
            "smithy.api#required": {}
          }
        },
        "year": {
          "target": "com.amazonaws.groundstation#Year",
          "traits": {
            "smithy.api#documentation": "<p>The year being requested, in the format of YYYY.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetMinuteUsageResponse": {
      "type": "structure",
      "members": {
        "isReservedMinutesCustomer": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.</p>"
          }
        },
        "totalReservedMinuteAllocation": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Total number of reserved minutes allocated, specific to the month being requested.</p>"
          }
        },
        "upcomingMinutesScheduled": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Upcoming minutes scheduled for an account, specific to the month being requested.</p>"
          }
        },
        "totalScheduledMinutes": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Total scheduled minutes for an account, specific to the month being requested.</p>"
          }
        },
        "estimatedMinutesRemaining": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Estimated number of minutes remaining for an account, specific to the month being requested.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetMissionProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetMissionProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetMissionProfileResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a mission profile.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/missionprofile/{missionProfileId}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetMissionProfileRequest": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetMissionProfileResponse": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>"
          }
        },
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          }
        },
        "region": {
          "target": "com.amazonaws.groundstation#AWSRegion",
          "traits": {
            "smithy.api#documentation": "<p>Region of a mission profile.</p>"
          }
        },
        "contactPrePassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time prior to contact start you‚Äôd like to receive a CloudWatch event indicating an upcoming pass.</p>"
          }
        },
        "contactPostPassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "minimumViableContactDurationSeconds": {
          "target": "com.amazonaws.groundstation#PositiveDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you‚Äôd like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>"
          }
        },
        "dataflowEdges": {
          "target": "com.amazonaws.groundstation#DataflowEdgeList",
          "traits": {
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i>\n            <code>Config</code> and a <i>to</i>\n            <code>Config</code>.</p>"
          }
        },
        "trackingConfigArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a mission profile.</p>"
          }
        },
        "streamsKmsKey": {
          "target": "com.amazonaws.groundstation#KmsKey",
          "traits": {
            "smithy.api#documentation": "<p>KMS key to use for encrypting streams.</p>"
          }
        },
        "streamsKmsRole": {
          "target": "com.amazonaws.groundstation#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Role to use for encrypting streams with KMS key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazonaws.groundstation#MissionProfile"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#GetSatellite": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#GetSatelliteRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#GetSatelliteResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a satellite.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/satellite/{satelliteId}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#GetSatelliteRequest": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a satellite.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#GetSatelliteResponse": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a satellite.</p>"
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          }
        },
        "noradSatelliteID": {
          "target": "com.amazonaws.groundstation#noradSatelliteID",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>NORAD satellite ID number.</p>"
          }
        },
        "groundStations": {
          "target": "com.amazonaws.groundstation#GroundStationIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of ground stations to which the satellite is on-boarded.</p>"
          }
        },
        "currentEphemeris": {
          "target": "com.amazonaws.groundstation#EphemerisMetaData",
          "traits": {
            "smithy.api#documentation": "<p>The current ephemeris being used to compute the trajectory of the satellite.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>",
        "smithy.api#references": [
          {
            "resource": "com.amazon.awsgsaascontrolplanelambda.r20190311#Satellite"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#GroundStation": {
      "type": "service",
      "version": "2019-05-23",
      "operations": [
        {
          "target": "com.amazonaws.groundstation#GetMinuteUsage"
        },
        {
          "target": "com.amazonaws.groundstation#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.groundstation#TagResource"
        },
        {
          "target": "com.amazonaws.groundstation#UntagResource"
        }
      ],
      "resources": [
        {
          "target": "com.amazonaws.groundstation#Agent"
        },
        {
          "target": "com.amazonaws.groundstation#Config"
        },
        {
          "target": "com.amazonaws.groundstation#Contact"
        },
        {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroup"
        },
        {
          "target": "com.amazonaws.groundstation#Ephemeris"
        },
        {
          "target": "com.amazonaws.groundstation#GroundStationResource"
        },
        {
          "target": "com.amazonaws.groundstation#MissionProfile"
        },
        {
          "target": "com.amazonaws.groundstation#Satellite"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "GroundStation",
          "cloudFormationName": "AWSGroundStation",
          "arnNamespace": "groundstation",
          "cloudTrailEventSource": "groundstation.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "groundstation"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that\n      enables you to control satellite communications, downlink and process satellite data, and\n      scale your satellite operations efficiently and cost-effectively without having\n      to build or manage your own ground station infrastructure.</p>",
        "smithy.api#title": "AWS Ground Station",
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                      "type": "error"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": {
                          "ref": "Endpoint"
                        },
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ]
                }
              ]
            },
            {
              "conditions": [],
              "type": "tree",
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "isSet",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ]
                    }
                  ],
                  "type": "tree",
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "aws.partition",
                          "argv": [
                            {
                              "ref": "Region"
                            }
                          ],
                          "assign": "PartitionResult"
                        }
                      ],
                      "type": "tree",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "type": "tree",
                              "rules": [
                                {
                                  "conditions": [],
                                  "type": "tree",
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://groundstation-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "conditions": [],
                              "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                              "type": "error"
                            }
                          ]
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseFIPS"
                                },
                                true
                              ]
                            }
                          ],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsFIPS"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "type": "tree",
                              "rules": [
                                {
                                  "conditions": [],
                                  "type": "tree",
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://groundstation-fips.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "conditions": [],
                              "error": "FIPS is enabled but this partition does not support FIPS",
                              "type": "error"
                            }
                          ]
                        },
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "ref": "UseDualStack"
                                },
                                true
                              ]
                            }
                          ],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [
                                {
                                  "fn": "booleanEquals",
                                  "argv": [
                                    true,
                                    {
                                      "fn": "getAttr",
                                      "argv": [
                                        {
                                          "ref": "PartitionResult"
                                        },
                                        "supportsDualStack"
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "type": "tree",
                              "rules": [
                                {
                                  "conditions": [],
                                  "type": "tree",
                                  "rules": [
                                    {
                                      "conditions": [],
                                      "endpoint": {
                                        "url": "https://groundstation.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                      },
                                      "type": "endpoint"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "conditions": [],
                              "error": "DualStack is enabled but this partition does not support DualStack",
                              "type": "error"
                            }
                          ]
                        },
                        {
                          "conditions": [],
                          "type": "tree",
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://groundstation.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "conditions": [],
                  "error": "Invalid Configuration: Missing Region",
                  "type": "error"
                }
              ]
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region af-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.af-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "af-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-northeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.ap-northeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-northeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region ap-southeast-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.ap-southeast-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "ap-southeast-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-central-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.eu-central-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-central-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.eu-north-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region eu-west-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.eu-west-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "eu-west-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region me-south-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.me-south-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "me-south-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region sa-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.sa-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "sa-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-east-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-west-2 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-west-2.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-west-2",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://groundstation.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.groundstation#GroundStationData": {
      "type": "structure",
      "members": {
        "groundStationId": {
          "target": "com.amazonaws.groundstation#GroundStationName",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a ground station.</p>"
          }
        },
        "groundStationName": {
          "target": "com.amazonaws.groundstation#GroundStationName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          }
        },
        "region": {
          "target": "com.amazonaws.groundstation#AWSRegion",
          "traits": {
            "smithy.api#documentation": "<p>Ground station Region.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the ground station data.</p>"
      }
    },
    "com.amazonaws.groundstation#GroundStationIdList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#GroundStationName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#GroundStationList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#GroundStationData"
      }
    },
    "com.amazonaws.groundstation#GroundStationName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 4,
          "max": 500
        },
        "smithy.api#pattern": "^[ a-zA-Z0-9-._:=]{4,256}$"
      }
    },
    "com.amazonaws.groundstation#GroundStationResource": {
      "type": "resource",
      "identifiers": {
        "groundStationId": {
          "target": "smithy.api#String"
        }
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListGroundStations"
      },
      "traits": {
        "aws.api#arn": {
          "template": "groundstation:{groundStationId}"
        }
      }
    },
    "com.amazonaws.groundstation#InstanceId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 10,
          "max": 64
        },
        "smithy.api#pattern": "^[a-z0-9-]{10,64}$"
      }
    },
    "com.amazonaws.groundstation#InstanceType": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-z0-9.-]{1,64}$"
      }
    },
    "com.amazonaws.groundstation#IntegerRange": {
      "type": "structure",
      "members": {
        "minimum": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A minimum value.</p>",
            "smithy.api#required": {}
          }
        },
        "maximum": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>A maximum value.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An integer range that has a minimum and maximum value.</p>"
      }
    },
    "com.amazonaws.groundstation#InvalidParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "parameterName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p/>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>One or more parameters are not valid.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 431
      }
    },
    "com.amazonaws.groundstation#IpAddressList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#IpV4Address"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.groundstation#IpV4Address": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 7,
          "max": 16
        },
        "smithy.api#pattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
      }
    },
    "com.amazonaws.groundstation#JsonString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 8192
        },
        "smithy.api#pattern": "^[{}\\[\\]:.,\"0-9A-z\\-_\\s]{2,8192}$"
      }
    },
    "com.amazonaws.groundstation#KeyAliasArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 512
        },
        "smithy.api#pattern": "^arn:aws[a-zA-Z-]{0,16}:kms:[a-z]{2}(-[a-z]{1,16}){1,3}-\\d{1}:\\d{12}:((alias/[a-zA-Z0-9:/_-]{1,256}))$"
      }
    },
    "com.amazonaws.groundstation#KeyArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::KMS::Key"
        }
      }
    },
    "com.amazonaws.groundstation#KmsKey": {
      "type": "union",
      "members": {
        "kmsKeyArn": {
          "target": "com.amazonaws.groundstation#KeyArn",
          "traits": {
            "smithy.api#documentation": "<p>KMS Key Arn.</p>"
          }
        },
        "kmsAliasArn": {
          "target": "com.amazonaws.groundstation#KeyAliasArn",
          "traits": {
            "smithy.api#documentation": "<p>KMS Alias Arn.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>AWS Key Management Service (KMS) Key.</p>"
      }
    },
    "com.amazonaws.groundstation#ListConfigs": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListConfigsRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListConfigsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of <code>Config</code> objects.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/config"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "configList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListConfigsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of <code>Configs</code> returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListConfigsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>"
          }
        },
        "configList": {
          "target": "com.amazonaws.groundstation#ConfigList",
          "traits": {
            "smithy.api#documentation": "<p>List of <code>Config</code> items.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListContacts": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListContactsRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListContactsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of contacts.</p>\n         <p>If <code>statusList</code> contains AVAILABLE, the request must include\n      <code>groundStation</code>, <code>missionprofileArn</code>, and <code>satelliteArn</code>.\n      </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/contacts"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "contactList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListContactsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of contacts returned.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>"
          }
        },
        "statusList": {
          "target": "com.amazonaws.groundstation#StatusList",
          "traits": {
            "smithy.api#documentation": "<p>Status of a contact reservation.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Start time of a contact in UTC.</p>",
            "smithy.api#required": {}
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>End time of a contact in UTC.</p>",
            "smithy.api#required": {}
          }
        },
        "groundStation": {
          "target": "com.amazonaws.groundstation#GroundStationName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a ground station.</p>"
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          }
        },
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListContactsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>"
          }
        },
        "contactList": {
          "target": "com.amazonaws.groundstation#ContactList",
          "traits": {
            "smithy.api#documentation": "<p>List of contacts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListDataflowEndpointGroups": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListDataflowEndpointGroupsRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListDataflowEndpointGroupsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of <code>DataflowEndpoint</code> groups.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/dataflowEndpointGroup"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "dataflowEndpointGroupList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListDataflowEndpointGroupsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of dataflow endpoint groups returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListDataflowEndpointGroupsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>"
          }
        },
        "dataflowEndpointGroupList": {
          "target": "com.amazonaws.groundstation#DataflowEndpointGroupList",
          "traits": {
            "smithy.api#documentation": "<p>A list of dataflow endpoint groups.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListEphemerides": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListEphemeridesRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListEphemeridesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List existing ephemerides.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/ephemerides"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "ephemerides"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListEphemeridesRequest": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station satellite ID to list ephemeris for.</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The start time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>The end time to list in UTC. The operation will return an ephemeris if its expiration time is within the time range defined by the <code>startTime</code> and <code>endTime</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "statusList": {
          "target": "com.amazonaws.groundstation#EphemerisStatusList",
          "traits": {
            "smithy.api#documentation": "<p>The list of ephemeris status to return.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of ephemerides to return.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.groundstation#ListEphemeridesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Pagination token.</p>"
          }
        },
        "ephemerides": {
          "target": "com.amazonaws.groundstation#EphemeridesList",
          "traits": {
            "smithy.api#documentation": "<p>List of ephemerides.</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#ListGroundStations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListGroundStationsRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListGroundStationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of ground stations. </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/groundstation"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "groundStationList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListGroundStationsRequest": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>Satellite ID to retrieve on-boarded ground stations.</p>",
            "smithy.api#httpQuery": "satelliteId"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of ground stations returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListGroundStationsResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>"
          }
        },
        "groundStationList": {
          "target": "com.amazonaws.groundstation#GroundStationList",
          "traits": {
            "smithy.api#documentation": "<p>List of ground stations.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListMissionProfiles": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListMissionProfilesRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListMissionProfilesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of mission profiles.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/missionprofile"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "missionProfileList"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListMissionProfilesRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of mission profiles returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the request of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListMissionProfilesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token returned in the response of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>"
          }
        },
        "missionProfileList": {
          "target": "com.amazonaws.groundstation#MissionProfileList",
          "traits": {
            "smithy.api#documentation": "<p>List of mission profiles.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListSatellites": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListSatellitesRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListSatellitesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of satellites.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/satellite"
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "pageSize": "maxResults",
          "outputToken": "nextToken",
          "items": "satellites"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListSatellitesRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.groundstation#PaginationMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>Maximum number of satellites returned.</p>",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListSatellitesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.groundstation#PaginationToken",
          "traits": {
            "smithy.api#documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>"
          }
        },
        "satellites": {
          "target": "com.amazonaws.groundstation#SatelliteList",
          "traits": {
            "smithy.api#documentation": "<p>List of satellites.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns a list of tags for a specified resource.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#readonly": {}
      }
    },
    "com.amazonaws.groundstation#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.groundstation#AnyArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#MissionProfile": {
      "type": "resource",
      "identifiers": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "create": {
        "target": "com.amazonaws.groundstation#CreateMissionProfile"
      },
      "read": {
        "target": "com.amazonaws.groundstation#GetMissionProfile"
      },
      "update": {
        "target": "com.amazonaws.groundstation#UpdateMissionProfile"
      },
      "delete": {
        "target": "com.amazonaws.groundstation#DeleteMissionProfile"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListMissionProfiles"
      },
      "traits": {
        "aws.api#arn": {
          "template": "mission-profile/{missionProfileId}"
        }
      }
    },
    "com.amazonaws.groundstation#MissionProfileArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::MissionProfile",
          "service": "GroundStation",
          "resource": "MissionProfile"
        }
      }
    },
    "com.amazonaws.groundstation#MissionProfileIdResponse": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#MissionProfileList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#MissionProfileListItem"
      }
    },
    "com.amazonaws.groundstation#MissionProfileListItem": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>"
          }
        },
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>"
          }
        },
        "region": {
          "target": "com.amazonaws.groundstation#AWSRegion",
          "traits": {
            "smithy.api#documentation": "<p>Region of a mission profile.</p>"
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Item in a list of mission profiles.</p>"
      }
    },
    "com.amazonaws.groundstation#Month": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 12
        }
      }
    },
    "com.amazonaws.groundstation#OEMEphemeris": {
      "type": "structure",
      "members": {
        "s3Object": {
          "target": "com.amazonaws.groundstation#S3Object",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the S3 object to be used as the ephemeris.</p>"
          }
        },
        "oemData": {
          "target": "com.amazonaws.groundstation#UnboundedString",
          "traits": {
            "smithy.api#documentation": "<p>The data for an OEM ephemeris, supplied directly in the request rather than through an S3 object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Ephemeris data in Orbit Ephemeris Message (OEM) format.</p>"
      }
    },
    "com.amazonaws.groundstation#PaginationMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.groundstation#PaginationToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 1000
        },
        "smithy.api#pattern": "^[A-Za-z0-9-/+_.=]+$"
      }
    },
    "com.amazonaws.groundstation#Polarization": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "LEFT_HAND",
            "name": "LEFT_HAND"
          },
          {
            "value": "NONE",
            "name": "NONE"
          },
          {
            "value": "RIGHT_HAND",
            "name": "RIGHT_HAND"
          }
        ]
      }
    },
    "com.amazonaws.groundstation#PositiveDurationInSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 21600
        }
      }
    },
    "com.amazonaws.groundstation#RangedConnectionDetails": {
      "type": "structure",
      "members": {
        "socketAddress": {
          "target": "com.amazonaws.groundstation#RangedSocketAddress",
          "traits": {
            "smithy.api#documentation": "<p>A ranged socket address.</p>",
            "smithy.api#required": {}
          }
        },
        "mtu": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>",
            "smithy.api#range": {
              "min": 1400,
              "max": 1500
            }
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Ingress address of AgentEndpoint with a port range and an optional mtu.</p>"
      }
    },
    "com.amazonaws.groundstation#RangedSocketAddress": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.groundstation#IpV4Address",
          "traits": {
            "smithy.api#documentation": "<p>IPv4 socket address.</p>",
            "smithy.api#required": {}
          }
        },
        "portRange": {
          "target": "com.amazonaws.groundstation#IntegerRange",
          "traits": {
            "smithy.api#documentation": "<p>Port range of a socket address.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A socket address with a port range.</p>"
      }
    },
    "com.amazonaws.groundstation#RegisterAgent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#RegisterAgentRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#RegisterAgentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<note>\n            <p> For use by AWS Ground Station Agent and shouldn't be called directly.</p>\n         </note>\n         <p> Registers a new agent with AWS Ground Station. </p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/agent"
        }
      }
    },
    "com.amazonaws.groundstation#RegisterAgentRequest": {
      "type": "structure",
      "members": {
        "discoveryData": {
          "target": "com.amazonaws.groundstation#DiscoveryData",
          "traits": {
            "smithy.api#documentation": "<p>Data for associating an agent with the capabilities it is managing.</p>",
            "smithy.api#required": {}
          }
        },
        "agentDetails": {
          "target": "com.amazonaws.groundstation#AgentDetails",
          "traits": {
            "smithy.api#documentation": "<p>Detailed information about the agent being registered.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#RegisterAgentResponse": {
      "type": "structure",
      "members": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of registered agent.</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#ReserveContact": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#ReserveContactRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ContactIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Reserves a contact using specified parameters.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/contact"
        }
      }
    },
    "com.amazonaws.groundstation#ReserveContactRequest": {
      "type": "structure",
      "members": {
        "missionProfileArn": {
          "target": "com.amazonaws.groundstation#MissionProfileArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a mission profile.</p>",
            "smithy.api#required": {}
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite</p>",
            "smithy.api#required": {}
          }
        },
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Start time of a contact in UTC.</p>",
            "smithy.api#required": {}
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>End time of a contact in UTC.</p>",
            "smithy.api#required": {}
          }
        },
        "groundStation": {
          "target": "com.amazonaws.groundstation#GroundStationName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a ground station.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a contact.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#ResourceLimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        },
        "parameterName": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p/>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Account limits for this resource have been exceeded.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.groundstation#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "smithy.api#String"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Resource was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 434
      }
    },
    "com.amazonaws.groundstation#RoleArn": {
      "type": "string"
    },
    "com.amazonaws.groundstation#S3BucketName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 63
        },
        "smithy.api#pattern": "^[a-z0-9.-]{3,63}$"
      }
    },
    "com.amazonaws.groundstation#S3KeyPrefix": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 900
        },
        "smithy.api#pattern": "^([a-zA-Z0-9_\\-=/]|\\{satellite_id\\}|\\{config\\-name}|\\{s3\\-config-id}|\\{year\\}|\\{month\\}|\\{day\\}){1,900}$"
      }
    },
    "com.amazonaws.groundstation#S3Object": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.groundstation#S3BucketName",
          "traits": {
            "smithy.api#documentation": "<p>An Amazon S3 Bucket name.</p>"
          }
        },
        "key": {
          "target": "com.amazonaws.groundstation#S3ObjectKey",
          "traits": {
            "smithy.api#documentation": "<p>An Amazon S3 key for the ephemeris.</p>"
          }
        },
        "version": {
          "target": "com.amazonaws.groundstation#S3VersionId",
          "traits": {
            "smithy.api#documentation": "<p>For versioned S3 objects, the version to use for the ephemeris.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object stored in S3 containing ephemeris data.</p>"
      }
    },
    "com.amazonaws.groundstation#S3ObjectKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[a-zA-Z0-9!*'\\)\\(./_-]{1,1024}$"
      }
    },
    "com.amazonaws.groundstation#S3RecordingConfig": {
      "type": "structure",
      "members": {
        "bucketArn": {
          "target": "com.amazonaws.groundstation#BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the bucket to record to.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.groundstation#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the role Ground Station assumes to write data to the bucket.</p>",
            "smithy.api#required": {}
          }
        },
        "prefix": {
          "target": "com.amazonaws.groundstation#S3KeyPrefix",
          "traits": {
            "smithy.api#documentation": "<p>S3 Key prefix to prefice data files.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an S3 recording <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#S3RecordingDetails": {
      "type": "structure",
      "members": {
        "bucketArn": {
          "target": "com.amazonaws.groundstation#BucketArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of the bucket used.</p>"
          }
        },
        "keyTemplate": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Key template used for the S3 Recording Configuration</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Details about an S3 recording <code>Config</code> used in a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#S3VersionId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        },
        "smithy.api#pattern": "^[\\s\\S]{1,1024}$"
      }
    },
    "com.amazonaws.groundstation#SafeName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        },
        "smithy.api#pattern": "^[ a-zA-Z0-9_:-]{1,256}$"
      }
    },
    "com.amazonaws.groundstation#Satellite": {
      "type": "resource",
      "identifiers": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid"
        }
      },
      "read": {
        "target": "com.amazonaws.groundstation#GetSatellite"
      },
      "list": {
        "target": "com.amazonaws.groundstation#ListSatellites"
      },
      "traits": {
        "aws.api#arn": {
          "template": "satellite/{satelliteId}"
        }
      }
    },
    "com.amazonaws.groundstation#SatelliteList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#SatelliteListItem"
      }
    },
    "com.amazonaws.groundstation#SatelliteListItem": {
      "type": "structure",
      "members": {
        "satelliteId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a satellite.</p>"
          }
        },
        "satelliteArn": {
          "target": "com.amazonaws.groundstation#satelliteArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a satellite.</p>"
          }
        },
        "noradSatelliteID": {
          "target": "com.amazonaws.groundstation#noradSatelliteID",
          "traits": {
            "smithy.api#default": 0,
            "smithy.api#documentation": "<p>NORAD satellite ID number.</p>"
          }
        },
        "groundStations": {
          "target": "com.amazonaws.groundstation#GroundStationIdList",
          "traits": {
            "smithy.api#documentation": "<p>A list of ground stations to which the satellite is on-boarded.</p>"
          }
        },
        "currentEphemeris": {
          "target": "com.amazonaws.groundstation#EphemerisMetaData",
          "traits": {
            "smithy.api#documentation": "<p>The current ephemeris being used to compute the trajectory of the satellite.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Item in a list of satellites.</p>"
      }
    },
    "com.amazonaws.groundstation#SecurityDetails": {
      "type": "structure",
      "members": {
        "subnetIds": {
          "target": "com.amazonaws.groundstation#SubnetList",
          "traits": {
            "smithy.api#documentation": "<p>A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.</p>",
            "smithy.api#required": {}
          }
        },
        "securityGroupIds": {
          "target": "com.amazonaws.groundstation#SecurityGroupIdList",
          "traits": {
            "smithy.api#documentation": "<p>The security groups to attach to the elastic network interfaces.</p>",
            "smithy.api#required": {}
          }
        },
        "roleArn": {
          "target": "com.amazonaws.groundstation#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN to a role needed for connecting streams to your instances. </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about endpoints.</p>"
      }
    },
    "com.amazonaws.groundstation#SecurityGroupIdList": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.groundstation#SignatureMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#Boolean"
      }
    },
    "com.amazonaws.groundstation#SocketAddress": {
      "type": "structure",
      "members": {
        "name": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Name of a socket address.</p>",
            "smithy.api#required": {}
          }
        },
        "port": {
          "target": "smithy.api#Integer",
          "traits": {
            "smithy.api#documentation": "<p>Port of a socket address.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the socket address.</p>"
      }
    },
    "com.amazonaws.groundstation#Source": {
      "type": "structure",
      "members": {
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>"
          }
        },
        "configId": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>"
          }
        },
        "configDetails": {
          "target": "com.amazonaws.groundstation#ConfigDetails",
          "traits": {
            "smithy.api#documentation": "<p>Additional details for a <code>Config</code>, if type is <code>dataflow-endpoint</code> or <code>antenna-downlink-demod-decode</code>\n         </p>"
          }
        },
        "dataflowSourceRegion": {
          "target": "smithy.api#String",
          "traits": {
            "smithy.api#documentation": "<p>Region of a dataflow source.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Dataflow details for the source side.</p>"
      }
    },
    "com.amazonaws.groundstation#SpectrumConfig": {
      "type": "structure",
      "members": {
        "centerFrequency": {
          "target": "com.amazonaws.groundstation#Frequency",
          "traits": {
            "smithy.api#documentation": "<p>Center frequency of a spectral <code>Config</code>. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.</p>",
            "smithy.api#required": {}
          }
        },
        "bandwidth": {
          "target": "com.amazonaws.groundstation#FrequencyBandwidth",
          "traits": {
            "smithy.api#documentation": "<p>Bandwidth of a spectral <code>Config</code>. AWS Ground Station currently has the following bandwidth limitations:</p>\n         <ul>\n            <li>\n               <p>For <code>AntennaDownlinkDemodDecodeconfig</code>, valid values are between 125 kHz to 650 MHz.</p>\n            </li>\n            <li>\n               <p>For <code>AntennaDownlinkconfig</code> valid values are between 10 kHz to 54 MHz.</p>\n            </li>\n            <li>\n               <p>For <code>AntennaUplinkConfig</code>, valid values are between 10 kHz to 54 MHz.</p>\n            </li>\n         </ul>",
            "smithy.api#required": {}
          }
        },
        "polarization": {
          "target": "com.amazonaws.groundstation#Polarization",
          "traits": {
            "smithy.api#documentation": "<p>Polarization of a spectral <code>Config</code>. Capturing both <code>\"RIGHT_HAND\"</code> and <code>\"LEFT_HAND\"</code> polarization requires two separate configs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object that describes a spectral <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#StatusList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#ContactStatus"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#SubnetList": {
      "type": "list",
      "member": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.groundstation#TLEData": {
      "type": "structure",
      "members": {
        "tleLine1": {
          "target": "com.amazonaws.groundstation#TleLineOne",
          "traits": {
            "smithy.api#documentation": "<p>First line of two-line element set (TLE) data.</p>",
            "smithy.api#required": {}
          }
        },
        "tleLine2": {
          "target": "com.amazonaws.groundstation#TleLineTwo",
          "traits": {
            "smithy.api#documentation": "<p>Second line of two-line element set (TLE) data.</p>",
            "smithy.api#required": {}
          }
        },
        "validTimeRange": {
          "target": "com.amazonaws.groundstation#TimeRange",
          "traits": {
            "smithy.api#documentation": "<p>The valid time range for the TLE. Gaps or overlap are not permitted.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Two-line element set (TLE) data.</p>"
      }
    },
    "com.amazonaws.groundstation#TLEDataList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#TLEData"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#TLEEphemeris": {
      "type": "structure",
      "members": {
        "s3Object": {
          "target": "com.amazonaws.groundstation#S3Object",
          "traits": {
            "smithy.api#documentation": "<p>Identifies the S3 object to be used as the ephemeris.</p>"
          }
        },
        "tleData": {
          "target": "com.amazonaws.groundstation#TLEDataList",
          "traits": {
            "smithy.api#documentation": "<p>The data for a TLE ephemeris, supplied directly in the request rather than through an S3 object.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Two-line element set (TLE) ephemeris.</p>"
      }
    },
    "com.amazonaws.groundstation#TagKeys": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#UnboundedString"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 500
        }
      }
    },
    "com.amazonaws.groundstation#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Assigns a tag to a resource.</p>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags/{resourceArn}"
        }
      }
    },
    "com.amazonaws.groundstation#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.groundstation#AnyArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a resource tag.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.groundstation#TagsMap",
          "traits": {
            "smithy.api#documentation": "<p>Tags assigned to a resource.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#TagsMap": {
      "type": "map",
      "key": {
        "target": "smithy.api#String"
      },
      "value": {
        "target": "smithy.api#String"
      }
    },
    "com.amazonaws.groundstation#TimeRange": {
      "type": "structure",
      "members": {
        "startTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Time in UTC at which the time range starts.</p>",
            "smithy.api#required": {}
          }
        },
        "endTime": {
          "target": "smithy.api#Timestamp",
          "traits": {
            "smithy.api#documentation": "<p>Time in UTC at which the time range ends.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>A time range with a start and end time.</p>"
      }
    },
    "com.amazonaws.groundstation#TleLineOne": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 69,
          "max": 69
        },
        "smithy.api#pattern": "^1 [ 0-9]{5}[A-Z] [ 0-9]{5}[ A-Z]{3} [ 0-9]{5}[.][ 0-9]{8} (?:(?:[ 0+-][.][ 0-9]{8})|(?: [ +-][.][ 0-9]{7})) [ +-][ 0-9]{5}[+-][ 0-9] [ +-][ 0-9]{5}[+-][ 0-9] [ 0-9] [ 0-9]{4}[ 0-9]$"
      }
    },
    "com.amazonaws.groundstation#TleLineTwo": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 69,
          "max": 69
        },
        "smithy.api#pattern": "^2 [ 0-9]{5} [ 0-9]{3}[.][ 0-9]{4} [ 0-9]{3}[.][ 0-9]{4} [ 0-9]{7} [ 0-9]{3}[.][ 0-9]{4} [ 0-9]{3}[.][ 0-9]{4} [ 0-9]{2}[.][ 0-9]{13}[ 0-9]$"
      }
    },
    "com.amazonaws.groundstation#TrackingConfig": {
      "type": "structure",
      "members": {
        "autotrack": {
          "target": "com.amazonaws.groundstation#Criticality",
          "traits": {
            "smithy.api#documentation": "<p>Current setting for autotrack.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Object that determines whether tracking should be used during a contact\n         executed with this <code>Config</code> in the mission profile.</p>"
      }
    },
    "com.amazonaws.groundstation#UnboundedString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1
        },
        "smithy.api#pattern": "^[\\s\\S]+$"
      }
    },
    "com.amazonaws.groundstation#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deassigns a resource tag.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags/{resourceArn}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.groundstation#AnyArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a resource.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.groundstation#TagKeys",
          "traits": {
            "smithy.api#documentation": "<p>Keys of a resource tag.</p>",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#UpdateAgentStatus": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#UpdateAgentStatusRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#UpdateAgentStatusResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<note>\n            <p> For use by AWS Ground Station Agent and shouldn't be called directly.</p>\n         </note>\n         <p>Update the status of the agent.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/agent/{agentId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#UpdateAgentStatusRequest": {
      "type": "structure",
      "members": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of agent to update.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "taskId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>GUID of agent task.</p>",
            "smithy.api#required": {}
          }
        },
        "aggregateStatus": {
          "target": "com.amazonaws.groundstation#AggregateStatus",
          "traits": {
            "smithy.api#documentation": "<p>Aggregate status for agent.</p>",
            "smithy.api#required": {}
          }
        },
        "componentStatuses": {
          "target": "com.amazonaws.groundstation#ComponentStatusList",
          "traits": {
            "smithy.api#documentation": "<p>List of component statuses for agent.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#UpdateAgentStatusResponse": {
      "type": "structure",
      "members": {
        "agentId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of updated agent.</p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.groundstation#UpdateConfig": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#UpdateConfigRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#ConfigIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates the <code>Config</code> used when scheduling contacts.</p>\n         <p>Updating a <code>Config</code> will not update the execution parameters\n         for existing future contacts scheduled with this <code>Config</code>.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/config/{configType}/{configId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#UpdateConfigRequest": {
      "type": "structure",
      "members": {
        "configId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        },
        "configType": {
          "target": "com.amazonaws.groundstation#ConfigCapabilityType",
          "traits": {
            "smithy.api#documentation": "<p>Type of a <code>Config</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "configData": {
          "target": "com.amazonaws.groundstation#ConfigTypeData",
          "traits": {
            "smithy.api#documentation": "<p>Parameters of a <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#UpdateEphemeris": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#UpdateEphemerisRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#EphemerisIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates an existing ephemeris</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/ephemeris/{ephemerisId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#UpdateEphemerisRequest": {
      "type": "structure",
      "members": {
        "ephemerisId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>The AWS Ground Station ephemeris ID.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether the ephemeris is enabled or not. Changing this value will not require the ephemeris to be re-validated.</p>",
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.</p>"
          }
        },
        "priority": {
          "target": "com.amazonaws.groundstation#EphemerisPriority",
          "traits": {
            "smithy.api#documentation": "<p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p>\n         <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p>\n         <p>Priority must be 1 or greater</p>"
          }
        }
      }
    },
    "com.amazonaws.groundstation#UpdateMissionProfile": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.groundstation#UpdateMissionProfileRequest"
      },
      "output": {
        "target": "com.amazonaws.groundstation#MissionProfileIdResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.groundstation#DependencyException"
        },
        {
          "target": "com.amazonaws.groundstation#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.groundstation#ResourceNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Updates a mission profile.</p>\n         <p>Updating a mission profile will not update the execution parameters\n         for existing future contacts.</p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/missionprofile/{missionProfileId}"
        },
        "smithy.api#idempotent": {}
      }
    },
    "com.amazonaws.groundstation#UpdateMissionProfileRequest": {
      "type": "structure",
      "members": {
        "missionProfileId": {
          "target": "com.amazonaws.groundstation#Uuid",
          "traits": {
            "smithy.api#documentation": "<p>UUID of a mission profile.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "name": {
          "target": "com.amazonaws.groundstation#SafeName",
          "traits": {
            "smithy.api#documentation": "<p>Name of a mission profile.</p>"
          }
        },
        "contactPrePassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "contactPostPassDurationSeconds": {
          "target": "com.amazonaws.groundstation#DurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Amount of time after a contact ends that you‚Äôd like to receive a CloudWatch event indicating the pass has finished.</p>"
          }
        },
        "minimumViableContactDurationSeconds": {
          "target": "com.amazonaws.groundstation#PositiveDurationInSeconds",
          "traits": {
            "smithy.api#documentation": "<p>Smallest amount of time in seconds that you‚Äôd like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>"
          }
        },
        "dataflowEdges": {
          "target": "com.amazonaws.groundstation#DataflowEdgeList",
          "traits": {
            "smithy.api#documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i>\n            <code>Config</code> and a <i>to</i>\n            <code>Config</code>.</p>"
          }
        },
        "trackingConfigArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of a tracking <code>Config</code>.</p>"
          }
        },
        "streamsKmsKey": {
          "target": "com.amazonaws.groundstation#KmsKey",
          "traits": {
            "smithy.api#documentation": "<p>KMS key to use for encrypting streams.</p>"
          }
        },
        "streamsKmsRole": {
          "target": "com.amazonaws.groundstation#RoleArn",
          "traits": {
            "smithy.api#documentation": "<p>Role to use for encrypting streams with KMS key.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p/>"
      }
    },
    "com.amazonaws.groundstation#UplinkEchoConfig": {
      "type": "structure",
      "members": {
        "enabled": {
          "target": "smithy.api#Boolean",
          "traits": {
            "smithy.api#documentation": "<p>Whether or not an uplink <code>Config</code> is enabled.</p>",
            "smithy.api#required": {}
          }
        },
        "antennaUplinkConfigArn": {
          "target": "com.amazonaws.groundstation#ConfigArn",
          "traits": {
            "smithy.api#documentation": "<p>ARN of an uplink <code>Config</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an uplink echo <code>Config</code>.</p>\n         <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the \n         specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> \n         is used in a contact.</p>"
      }
    },
    "com.amazonaws.groundstation#UplinkSpectrumConfig": {
      "type": "structure",
      "members": {
        "centerFrequency": {
          "target": "com.amazonaws.groundstation#Frequency",
          "traits": {
            "smithy.api#documentation": "<p>Center frequency of an uplink spectral <code>Config</code>. Valid values are between 2025 to 2120 MHz.</p>",
            "smithy.api#required": {}
          }
        },
        "polarization": {
          "target": "com.amazonaws.groundstation#Polarization",
          "traits": {
            "smithy.api#documentation": "<p>Polarization of an uplink spectral <code>Config</code>. Capturing both <code>\"RIGHT_HAND\"</code> and <code>\"LEFT_HAND\"</code> polarization requires two separate configs.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>"
      }
    },
    "com.amazonaws.groundstation#Uuid": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
      }
    },
    "com.amazonaws.groundstation#VersionString": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))*$"
      }
    },
    "com.amazonaws.groundstation#VersionStringList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.groundstation#VersionString"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 20
        }
      }
    },
    "com.amazonaws.groundstation#Year": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 2018,
          "max": 3000
        }
      }
    },
    "com.amazonaws.groundstation#noradSatelliteID": {
      "type": "integer",
      "traits": {
        "smithy.api#default": 0,
        "smithy.api#range": {
          "min": 0,
          "max": 99999
        }
      }
    },
    "com.amazonaws.groundstation#satelliteArn": {
      "type": "string",
      "traits": {
        "aws.api#arnReference": {
          "type": "AWS::GroundStation::Satellite",
          "service": "com.amazon.awsgsaascontrolplanelambda.r20190311#GroundStation",
          "resource": "com.amazon.awsgsaascontrolplanelambda.r20190311#Satellite"
        }
      }
    }
  }
}
