{
  "smithy": "1.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.codegurureviewer#AWSGuruFrontendService": {
      "type": "service",
      "version": "2019-09-19",
      "operations": [
        {
          "target": "com.amazonaws.codegurureviewer#AssociateRepository"
        },
        {
          "target": "com.amazonaws.codegurureviewer#DescribeCodeReview"
        },
        {
          "target": "com.amazonaws.codegurureviewer#DescribeRecommendationFeedback"
        },
        {
          "target": "com.amazonaws.codegurureviewer#DescribeRepositoryAssociation"
        },
        {
          "target": "com.amazonaws.codegurureviewer#DisassociateRepository"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ListCodeReviews"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ListRecommendationFeedback"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ListRecommendations"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ListRepositoryAssociations"
        },
        {
          "target": "com.amazonaws.codegurureviewer#PutRecommendationFeedback"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "CodeGuru Reviewer",
          "arnNamespace": "codeguru-reviewer",
          "cloudFormationName": "CodeGuruReviewer",
          "cloudTrailEventSource": "guru.amazonaws.com"
        },
        "aws.auth#sigv4": {
          "name": "codeguru-reviewer"
        },
        "aws.protocols#restJson1": {},
        "smithy.api#documentation": "<p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service\n         that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommends\n         fixes in your Java code.</p>\n         \n         <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer\n            improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the \n            <i>\n               <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html\">Amazon CodeGuru Reviewer User Guide</a>.</i>\n         </p>",
        "smithy.api#title": "Amazon CodeGuru Reviewer"
      }
    },
    "com.amazonaws.codegurureviewer#AccessDeniedException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>You do not have sufficient access to perform this action.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 403
      }
    },
    "com.amazonaws.codegurureviewer#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1600
        },
        "smithy.api#pattern": "^arn:aws[^:\\s]*:codeguru-reviewer:[^:\\s]+:[\\d]{12}:[a-z-]+:[\\w-]+$"
      }
    },
    "com.amazonaws.codegurureviewer#AssociateRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#AssociateRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#AssociateRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ConflictException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Use to associate an AWS CodeCommit repository or a repostory managed by \n         AWS CodeStar Connections with Amazon CodeGuru Reviewer. When you associate a \n        repository, CodeGuru Reviewer reviews source code changes in the repository's pull requests and provides \n        automatic recommendations. You can view recommendations using the CodeGuru Reviewer console. For more information, see \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html\">Recommendations in \n            Amazon CodeGuru Reviewer</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i> \n        </p>\n      \n         <p>If you associate a CodeCommit repository, it must be in the same \n         AWS Region and AWS account where its CodeGuru Reviewer code reviews are configured.</p>\n      \n         <p> Bitbucket and GitHub Enterprise Server repositories are managed by AWS CodeStar\n         Connections to connect to CodeGuru Reviewer. For more information, see <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/reviewer-ug/step-one.html#select-repository-source-provider\">Connect to a repository source provider</a> in\n         the <i>Amazon CodeGuru Reviewer User Guide.</i>\n         </p>\n      \n         <note>\n            <p>\n            You cannot use the CodeGuru Reviewer SDK or the AWS CLI to associate a GitHub repository with Amazon CodeGuru Reviewer. To associate \n            a GitHub repository, use the console. For more information, see \n            <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html\">Getting \n            started with CodeGuru Reviewer</a> in the <i>CodeGuru Reviewer User Guide.</i>\n            </p>\n         </note>",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/associations",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#AssociateRepositoryRequest": {
      "type": "structure",
      "members": {
        "Repository": {
          "target": "com.amazonaws.codegurureviewer#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The repository to associate.</p>",
            "smithy.api#required": {}
          }
        },
        "ClientRequestToken": {
          "target": "com.amazonaws.codegurureviewer#ClientRequestToken",
          "traits": {
            "smithy.api#documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>\n         <p>To add a new repository association, this parameter specifies a unique \n        identifier for the new repository association that helps ensure idempotency.</p>\n\n         <p>If you use the AWS CLI or one of the AWS SDKs to call this operation, you \n        can leave this parameter empty. The CLI or SDK generates a random UUID for you \n        and includes that in the request. If you don't use the SDK and instead generate \n        a raw HTTP request to the Secrets Manager service endpoint, you must generate \n        a ClientRequestToken yourself for new versions and include that value in the request.</p>\n\n         <p>You typically interact with this value if you implement your own retry \n        logic and want to ensure that a given repository association is not created twice. \n        We recommend that you generate a UUID-type value to ensure uniqueness within the \n        specified repository association.</p>\n\n         <p>Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate repository\n        associations if there are failures and retries. </p>",
            "smithy.api#idempotencyToken": {}
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#AssociateRepositoryResponse": {
      "type": "structure",
      "members": {
        "RepositoryAssociation": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the repository association.</p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#AssociationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.codegurureviewer#ClientRequestToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[\\w-]+$"
      }
    },
    "com.amazonaws.codegurureviewer#CodeCommitRepository": {
      "type": "structure",
      "members": {
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>The name of the AWS CodeCommit repository. For more information, see \n         <a href=\"https://docs.aws.amazon.com/codecommit/latest/APIReference/API_GetRepository.html#CodeCommit-GetRepository-request-repositoryName\">repositoryName</a> \n         in the <i>AWS CodeCommit API Reference</i>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about an AWS CodeCommit repository. The CodeCommit repository must be in the same \n      AWS Region and AWS account where its CodeGuru Reviewer code reviews are configured. </p>"
      }
    },
    "com.amazonaws.codegurureviewer#CodeReview": {
      "type": "structure",
      "members": {
        "StateReason": {
          "target": "com.amazonaws.codegurureviewer#StateReason",
          "traits": {
            "smithy.api#documentation": "<p>\n         The reason for the state of the code review.\n      </p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.codegurureviewer#Type",
          "traits": {
            "smithy.api#documentation": "<p>\n         The type of code review.\n      </p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.codegurureviewer#Owner",
          "traits": {
            "smithy.api#documentation": "<p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the \n      account that owns the repository. For a GitHub or Bitbucket repository, this is the username for the account that owns the repository.</p>"
          }
        },
        "SourceCodeType": {
          "target": "com.amazonaws.codegurureviewer#SourceCodeType",
          "traits": {
            "smithy.api#documentation": "<p>\n         The type of the source code for the code review.\n      </p>"
          }
        },
        "LastUpdatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time, in milliseconds since the epoch, when the code review was last updated.\n      </p>"
          }
        },
        "ProviderType": {
          "target": "com.amazonaws.codegurureviewer#ProviderType",
          "traits": {
            "smithy.api#documentation": "<p>\n         The type of repository that contains the reviewed code (for example, GitHub or Bitbucket).\n      </p>"
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>"
          }
        },
        "PullRequestId": {
          "target": "com.amazonaws.codegurureviewer#PullRequestId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The pull request ID for the code review.\n      </p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>\n         The name of the code review.\n      </p>"
          }
        },
        "State": {
          "target": "com.amazonaws.codegurureviewer#JobState",
          "traits": {
            "smithy.api#documentation": "<p>The valid code review states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <code>Completed</code>: The code review is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Pending</code>: The code review started and has not completed or failed.\n            </p>\n            </li>\n            <li>\n               <p>\n                  <code>Failed</code>: The code review failed.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Deleting</code>: The code review is being deleted.\n            </p>\n            </li>\n         </ul>"
          }
        },
        "Metrics": {
          "target": "com.amazonaws.codegurureviewer#Metrics",
          "traits": {
            "smithy.api#documentation": "<p>\n         The statistics from the code review.\n      </p>"
          }
        },
        "CreatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time, in milliseconds since the epoch, when the code review was created.\n      </p>"
          }
        },
        "RepositoryName": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>\n         The name of the repository.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about a code review.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#CodeReviewSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#CodeReviewSummary"
      }
    },
    "com.amazonaws.codegurureviewer#CodeReviewSummary": {
      "type": "structure",
      "members": {
        "ProviderType": {
          "target": "com.amazonaws.codegurureviewer#ProviderType",
          "traits": {
            "smithy.api#documentation": "<p>\n         The provider type of the repository association.\n      </p>"
          }
        },
        "State": {
          "target": "com.amazonaws.codegurureviewer#JobState",
          "traits": {
            "smithy.api#documentation": "<p>\n         The state of the code review.\n      </p>\n         <p>The valid code review states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <code>Completed</code>: The code review is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Pending</code>: The code review started and has not completed or failed.\n            </p>\n            </li>\n            <li>\n               <p>\n                  <code>Failed</code>: The code review failed.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Deleting</code>: The code review is being deleted.\n            </p>\n            </li>\n         </ul>"
          }
        },
        "MetricsSummary": {
          "target": "com.amazonaws.codegurureviewer#MetricsSummary",
          "traits": {
            "smithy.api#documentation": "<p>\n         The statistics from the code review.\n      </p>"
          }
        },
        "PullRequestId": {
          "target": "com.amazonaws.codegurureviewer#PullRequestId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The pull request ID for the code review.\n      </p>"
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.codegurureviewer#Owner",
          "traits": {
            "smithy.api#documentation": "<p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the \n      account that owns the repository. For a GitHub or Bitbucket repository, this is the username for the account that owns the repository.</p>"
          }
        },
        "Type": {
          "target": "com.amazonaws.codegurureviewer#Type",
          "traits": {
            "smithy.api#documentation": "<p>\n         The type of the code review.\n      </p>"
          }
        },
        "CreatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time, in milliseconds since the epoch, when the code review was created.\n      </p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>\n         The name of the code review.\n      </p>"
          }
        },
        "LastUpdatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time, in milliseconds since the epoch, when the code review was last updated.\n      </p>"
          }
        },
        "RepositoryName": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>\n         The name of the repository.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about the summary of the code review.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#CommitDiffSourceCodeType": {
      "type": "structure",
      "members": {
        "SourceCommit": {
          "target": "com.amazonaws.codegurureviewer#CommitId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The SHA of the source commit.\n      </p>"
          }
        },
        "DestinationCommit": {
          "target": "com.amazonaws.codegurureviewer#CommitId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The SHA of the destination commit.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         The commit diff for the pull request.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#CommitId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 6,
          "max": 64
        }
      }
    },
    "com.amazonaws.codegurureviewer#ConflictException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The requested operation would cause a conflict with the current state of a service\n         resource associated with the request. Resolve the conflict before retrying this request. </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.codegurureviewer#ConnectionArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        },
        "smithy.api#pattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
      }
    },
    "com.amazonaws.codegurureviewer#DescribeCodeReview": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#DescribeCodeReviewRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#DescribeCodeReviewResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p> Returns the metadata associated with the code review along with its status.</p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/codereviews/{CodeReviewArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeCodeReviewRequest": {
      "type": "structure",
      "members": {
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeCodeReviewResponse": {
      "type": "structure",
      "members": {
        "CodeReview": {
          "target": "com.amazonaws.codegurureviewer#CodeReview",
          "traits": {
            "smithy.api#documentation": "<p>\n         Information about the code review.\n      </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRecommendationFeedback": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#DescribeRecommendationFeedbackRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#DescribeRecommendationFeedbackResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Describes the customer feedback for a CodeGuru Reviewer recommendation.\n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/feedback/{CodeReviewArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRecommendationFeedbackRequest": {
      "type": "structure",
      "members": {
        "RecommendationId": {
          "target": "com.amazonaws.codegurureviewer#RecommendationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation ID that can be used to track the provided recommendations and then to collect the feedback.\n      </p>",
            "smithy.api#httpQuery": "RecommendationId",
            "smithy.api#required": {}
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "UserId": {
          "target": "com.amazonaws.codegurureviewer#UserId",
          "traits": {
            "smithy.api#documentation": "<p>\n         Optional parameter to describe the feedback for a given user. If this is not supplied, it defaults to the user making the request.\n      </p>\n         <p>\n         The <code>UserId</code> is an IAM principal that can be specified as an AWS account ID or an Amazon Resource Name (ARN). For \n         more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\">\n            Specifying a Principal</a> in the <i>AWS Identity and Access Management User Guide</i>.\n      </p>",
            "smithy.api#httpQuery": "UserId"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRecommendationFeedbackResponse": {
      "type": "structure",
      "members": {
        "RecommendationFeedback": {
          "target": "com.amazonaws.codegurureviewer#RecommendationFeedback",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation feedback given by the user.\n      </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRepositoryAssociation": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#DescribeRepositoryAssociationRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#DescribeRepositoryAssociationResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#NotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Returns a <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\">\n               <code>RepositoryAssociation</code>\n            </a> object \n         that contains information about the requested repository association.\n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/associations/{AssociationArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRepositoryAssociationRequest": {
      "type": "structure",
      "members": {
        "AssociationArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the  \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\">\n               <code>RepositoryAssociation</code>\n            </a> object. \n         You can retrieve this ARN by calling <code>ListRepositories</code>.</p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DescribeRepositoryAssociationResponse": {
      "type": "structure",
      "members": {
        "RepositoryAssociation": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the repository association.</p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DisassociateRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#DisassociateRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#DisassociateRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ConflictException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#NotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Removes the association between Amazon CodeGuru Reviewer and a repository.</p>",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/associations/{AssociationArn}",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#DisassociateRepositoryRequest": {
      "type": "structure",
      "members": {
        "AssociationArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the  \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\">\n               <code>RepositoryAssociation</code>\n            </a> object. \n      </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#DisassociateRepositoryResponse": {
      "type": "structure",
      "members": {
        "RepositoryAssociation": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociation",
          "traits": {
            "smithy.api#documentation": "<p>Information about the disassociated repository.</p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.codegurureviewer#FilePath": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1024
        }
      }
    },
    "com.amazonaws.codegurureviewer#FindingsCount": {
      "type": "long",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.codegurureviewer#InternalServerException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The server encountered an internal error and is unable to complete the request.</p>",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.codegurureviewer#JobState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Completed",
            "name": "COMPLETED"
          },
          {
            "value": "Pending",
            "name": "PENDING"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Deleting",
            "name": "DELETING"
          }
        ]
      }
    },
    "com.amazonaws.codegurureviewer#JobStates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#JobState"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.codegurureviewer#LineNumber": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.codegurureviewer#ListCodeReviews": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#ListCodeReviewsRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#ListCodeReviewsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Lists all the code reviews that the customer has created in the past 90 days.\n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/codereviews",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListCodeReviewsMaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListCodeReviewsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.codegurureviewer#ListCodeReviewsMaxResults",
          "traits": {
            "smithy.api#documentation": "<p>\n         The maximum number of results that are returned per call. The default is 100.\n      </p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page.\n         Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.\n      </p>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "RepositoryNames": {
          "target": "com.amazonaws.codegurureviewer#RepositoryNames",
          "traits": {
            "smithy.api#documentation": "<p>\n         List of repository names for filtering that needs to be applied before displaying the result.\n      </p>",
            "smithy.api#httpQuery": "RepositoryNames"
          }
        },
        "Type": {
          "target": "com.amazonaws.codegurureviewer#Type",
          "traits": {
            "smithy.api#documentation": "<p>\n         The type of code reviews to list in the response.\n      </p>",
            "smithy.api#httpQuery": "Type",
            "smithy.api#required": {}
          }
        },
        "States": {
          "target": "com.amazonaws.codegurureviewer#JobStates",
          "traits": {
            "smithy.api#documentation": "<p>\n         List of states for filtering that needs to be applied before displaying the result. For example, <code>states=[Pending]</code> lists code reviews in the Pending state.\n      </p>\n         <p>The valid code review states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <code>Completed</code>: The code review is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Pending</code>: The code review started and has not completed or failed.\n            </p>\n            </li>\n            <li>\n               <p>\n                  <code>Failed</code>: The code review failed.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <code>Deleting</code>: The code review is being deleted.\n            </p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "States"
          }
        },
        "ProviderTypes": {
          "target": "com.amazonaws.codegurureviewer#ProviderTypes",
          "traits": {
            "smithy.api#documentation": "<p>\n         List of provider types for filtering that needs to be applied before displaying the result. For example, <code>providerTypes=[GitHub]</code>  lists code reviews from GitHub.\n      </p>",
            "smithy.api#httpQuery": "ProviderTypes"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListCodeReviewsResponse": {
      "type": "structure",
      "members": {
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         Pagination token.\n      </p>"
          }
        },
        "CodeReviewSummaries": {
          "target": "com.amazonaws.codegurureviewer#CodeReviewSummaries",
          "traits": {
            "smithy.api#documentation": "<p>\n         A list of code reviews that meet the criteria of the request.\n      </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendationFeedback": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#ListRecommendationFeedbackRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#ListRecommendationFeedbackResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Returns a list of \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html\">\n               <code>RecommendationFeedbackSummary</code>\n            </a> \n         objects that contain customer recommendation feedback for all CodeGuru Reviewer users. \n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/feedback/{CodeReviewArn}/RecommendationFeedback",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendationFeedbackRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.codegurureviewer#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>\n         The maximum number of results that are returned per call. The default is 100.\n      </p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "UserIds": {
          "target": "com.amazonaws.codegurureviewer#UserIds",
          "traits": {
            "smithy.api#documentation": "<p>\n         An AWS user's account ID or Amazon Resource Name (ARN). Use this ID to query the recommendation feedback for a code review from that user.\n      </p>\n         <p>\n         The <code>UserId</code> is an IAM principal that can be specified as an AWS account ID or an Amazon Resource Name (ARN). For \n         more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\">\n            Specifying a Principal</a> in the <i>AWS Identity and Access Management User Guide</i>.\n      </p>",
            "smithy.api#httpQuery": "UserIds"
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "RecommendationIds": {
          "target": "com.amazonaws.codegurureviewer#RecommendationIds",
          "traits": {
            "smithy.api#documentation": "<p>\n         Used to query the recommendation feedback for a given recommendation. \n      </p>",
            "smithy.api#httpQuery": "RecommendationIds"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         If <code>nextToken</code> is returned, there are more results available. The value of nextToken is a unique pagination token for each page.\n         Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.\n      </p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendationFeedbackResponse": {
      "type": "structure",
      "members": {
        "RecommendationFeedbackSummaries": {
          "target": "com.amazonaws.codegurureviewer#RecommendationFeedbackSummaries",
          "traits": {
            "smithy.api#documentation": "<p> Recommendation feedback summaries corresponding to the code review ARN. </p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page.\n         Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.\n      </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#ListRecommendationsRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#ListRecommendationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Returns the list of all recommendations for a completed code review.\n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/codereviews/{CodeReviewArn}/Recommendations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.codegurureviewer#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>\n         The maximum number of results that are returned per call. The default is 100.\n      </p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>",
            "smithy.api#httpLabel": {},
            "smithy.api#required": {}
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         Pagination token.\n      </p>",
            "smithy.api#httpQuery": "NextToken"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRecommendationsResponse": {
      "type": "structure",
      "members": {
        "RecommendationSummaries": {
          "target": "com.amazonaws.codegurureviewer#RecommendationSummaries",
          "traits": {
            "smithy.api#documentation": "<p>\n         List of recommendations for the requested code review.\n      </p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>\n         Pagination token.\n      </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRepositoryAssociations": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#ListRepositoryAssociationsRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#ListRepositoryAssociationsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Returns a list of <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html\">\n               <code>RepositoryAssociationSummary</code>\n            </a> objects that \n         contain summary information about a repository association. You can filter the returned list by \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType\">\n               <code>ProviderType</code>\n            </a>, \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name\">\n               <code>Name</code>\n            </a>, \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State\">\n               <code>State</code>\n            </a>, and \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner\">\n               <code>Owner</code>\n            </a>.\n      </p>",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/associations",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "NextToken",
          "outputToken": "NextToken",
          "pageSize": "MaxResults"
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRepositoryAssociationsRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "target": "com.amazonaws.codegurureviewer#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository association results returned by <code>ListRepositoryAssociations</code> \n         in paginated output. When this parameter is used, <code>ListRepositoryAssociations</code> only returns \n         <code>maxResults</code> results in a single page with a <code>nextToken</code> response \n         element. The remaining results of the initial request \n         can be seen by sending another <code>ListRepositoryAssociations</code> request with the returned \n         <code>nextToken</code> value. \n         This value can be between 1 and 100. If this parameter is not used, <code>ListRepositoryAssociations</code>\n         returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
            "smithy.api#httpQuery": "MaxResults"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value returned from a previous paginated \n         <code>ListRepositoryAssociations</code> request where <code>maxResults</code> was used and the results \n         exceeded the value of that parameter. Pagination continues from the end of the previous results \n         that returned the <code>nextToken</code> value. \n      </p>\n         <note>\n            <p>Treat this token as an opaque identifier that is only used to retrieve \n         the next items in a list and not for other programmatic purposes.</p>\n         </note>",
            "smithy.api#httpQuery": "NextToken"
          }
        },
        "ProviderTypes": {
          "target": "com.amazonaws.codegurureviewer#ProviderTypes",
          "traits": {
            "smithy.api#documentation": "<p>List of provider types to use as a filter.</p>",
            "smithy.api#httpQuery": "ProviderType"
          }
        },
        "States": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociationStates",
          "traits": {
            "smithy.api#documentation": "<p>List of repository association states to use as a filter.</p>\n         <p>The valid repository association states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <b>Associated</b>: The repository \n               association is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Associating</b>: CodeGuru Reviewer is:               \n            </p>\n               <ul>\n                  <li>\n                     <p>\n                     Setting up pull request notifications. This is required \n                     for pull requests to trigger a CodeGuru Reviewer review.\n                  </p>\n                     <note>\n                        <p>\n                        If your repository <code>ProviderType</code> is <code>GitHub</code> or <code>Bitbucket</code>, \n                        CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks, \n                        reviews of code in your repository cannot be triggered.\n                     </p>\n                     </note>\n                  </li>\n                  <li>\n                     <p>\n                     Setting up source code access. This is required for CodeGuru Reviewer to securely \n                     clone code in your repository.\n                  </p>\n                  </li>\n               </ul>            \n            </li>\n            <li>\n               <p>\n                  <b>Failed</b>: The repository failed to associate or disassociate.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: CodeGuru Reviewer is removing the repository's pull request notifications and \n               source code access.\n            </p>\n            </li>\n         </ul>",
            "smithy.api#httpQuery": "State"
          }
        },
        "Owners": {
          "target": "com.amazonaws.codegurureviewer#Owners",
          "traits": {
            "smithy.api#documentation": "<p>List of owners to use as a filter. \n        For AWS CodeCommit, it is the name of the CodeCommit account that was\n        used to associate the repository. For other repository source providers, such as Bitbucket, this is name of the account \n        that was used to associate the repository. </p>",
            "smithy.api#httpQuery": "Owner"
          }
        },
        "Names": {
          "target": "com.amazonaws.codegurureviewer#Names",
          "traits": {
            "smithy.api#documentation": "<p>List of repository names to use as a filter.</p>",
            "smithy.api#httpQuery": "Name"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#ListRepositoryAssociationsResponse": {
      "type": "structure",
      "members": {
        "RepositoryAssociationSummaries": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociationSummaries",
          "traits": {
            "smithy.api#documentation": "<p>A list of repository associations that meet the criteria of the request.</p>"
          }
        },
        "NextToken": {
          "target": "com.amazonaws.codegurureviewer#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListRecommendations</code> request. \n         When the results of a <code>ListRecommendations</code> request exceed <code>maxResults</code>, this \n         value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more \n         results to return. </p>"
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#box": {},
        "smithy.api#range": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codegurureviewer#MeteredLinesOfCodeCount": {
      "type": "long",
      "traits": {
        "smithy.api#box": {}
      }
    },
    "com.amazonaws.codegurureviewer#Metrics": {
      "type": "structure",
      "members": {
        "MeteredLinesOfCodeCount": {
          "target": "com.amazonaws.codegurureviewer#MeteredLinesOfCodeCount",
          "traits": {
            "smithy.api#documentation": "<p>\n        Lines of code metered in the code review. For the initial code review pull request and all subsequent revisions, \n        this includes all lines of code in the files added to the pull request. In subsequent revisions, for files that already \n        existed in the pull request, this includes only the changed lines of code. In both cases, this does not include non-code lines such as comments \n        and import statements. For example, if you submit a pull request containing 5 files, each with 500 lines of code, and in \n        a subsequent revision you added a new file with 200 lines of code, and also modified a total of 25 lines across the initial 5 files, \n        <code>MeteredLinesOfCodeCount</code> includes the first 5 files (5 * 500 = 2,500 lines), the new file (200 lines) and the 25 changed lines of\n         code for a total of 2,725 lines of code.\n      </p>"
          }
        },
        "FindingsCount": {
          "target": "com.amazonaws.codegurureviewer#FindingsCount",
          "traits": {
            "smithy.api#documentation": "<p>\n         Total number of recommendations found in the code review.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about the statistics from the code review.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#MetricsSummary": {
      "type": "structure",
      "members": {
        "MeteredLinesOfCodeCount": {
          "target": "com.amazonaws.codegurureviewer#MeteredLinesOfCodeCount",
          "traits": {
            "smithy.api#documentation": "<p>\n         Lines of code metered in the code review. For the initial code review pull request and all subsequent revisions, \n         this includes all lines of code in the files added to the pull request. In subsequent revisions, for files that already \n         existed in the pull request, this includes only the changed lines of code. In both cases, this does not include non-code lines such as comments \n         and import statements. For example, if you submit a pull request containing 5 files, each with 500 lines of code, and in \n         a subsequent revision you added a new file with 200 lines of code, and also modified a total of 25 lines across the initial 5 files, \n         <code>MeteredLinesOfCodeCount</code> includes the first 5 files (5 * 500 = 2,500 lines), the new file (200 lines) and the 25 changed lines of\n         code for a total of 2,725 lines of code.\n      </p>"
          }
        },
        "FindingsCount": {
          "target": "com.amazonaws.codegurureviewer#FindingsCount",
          "traits": {
            "smithy.api#documentation": "<p>\n         Total number of recommendations found in the code review.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about metrics summaries.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#Name": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "^\\S[\\w.-]*$"
      }
    },
    "com.amazonaws.codegurureviewer#Names": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#Name"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.codegurureviewer#NextToken": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.codegurureviewer#NotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The resource specified in the request was not found.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.codegurureviewer#Owner": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        },
        "smithy.api#pattern": "^\\S(.*\\S)?$"
      }
    },
    "com.amazonaws.codegurureviewer#Owners": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#Owner"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.codegurureviewer#ProviderType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "CodeCommit",
            "name": "CODE_COMMIT"
          },
          {
            "value": "GitHub",
            "name": "GIT_HUB"
          },
          {
            "value": "Bitbucket",
            "name": "BITBUCKET"
          },
          {
            "value": "GitHubEnterpriseServer",
            "name": "GIT_HUB_ENTERPRISE_SERVER"
          }
        ]
      }
    },
    "com.amazonaws.codegurureviewer#ProviderTypes": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#ProviderType"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.codegurureviewer#PullRequestId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.codegurureviewer#PutRecommendationFeedback": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.codegurureviewer#PutRecommendationFeedbackRequest"
      },
      "output": {
        "target": "com.amazonaws.codegurureviewer#PutRecommendationFeedbackResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.codegurureviewer#AccessDeniedException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#InternalServerException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ThrottlingException"
        },
        {
          "target": "com.amazonaws.codegurureviewer#ValidationException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>\n         Stores customer feedback for a CodeGuru Reviewer recommendation. When this API is called again with different reactions the previous feedback is overwritten.\n      </p>",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/feedback",
          "code": 200
        }
      }
    },
    "com.amazonaws.codegurureviewer#PutRecommendationFeedbackRequest": {
      "type": "structure",
      "members": {
        "Reactions": {
          "target": "com.amazonaws.codegurureviewer#Reactions",
          "traits": {
            "smithy.api#documentation": "<p>\n         List for storing reactions. Reactions are utf-8 text code for emojis. If you send an empty list it clears all your feedback.\n      </p>",
            "smithy.api#required": {}
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>",
            "smithy.api#required": {}
          }
        },
        "RecommendationId": {
          "target": "com.amazonaws.codegurureviewer#RecommendationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation ID that can be used to track the provided recommendations and then to collect the feedback.\n      </p>",
            "smithy.api#required": {}
          }
        }
      }
    },
    "com.amazonaws.codegurureviewer#PutRecommendationFeedbackResponse": {
      "type": "structure",
      "members": {}
    },
    "com.amazonaws.codegurureviewer#Reaction": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "ThumbsUp",
            "name": "THUMBS_UP"
          },
          {
            "value": "ThumbsDown",
            "name": "THUMBS_DOWN"
          }
        ]
      }
    },
    "com.amazonaws.codegurureviewer#Reactions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#Reaction"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationFeedback": {
      "type": "structure",
      "members": {
        "RecommendationId": {
          "target": "com.amazonaws.codegurureviewer#RecommendationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback.\n      </p>"
          }
        },
        "CreatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time at which the feedback was created.\n      </p>"
          }
        },
        "CodeReviewArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html\">\n               <code>CodeReview</code>\n            </a> object.\n      </p>"
          }
        },
        "Reactions": {
          "target": "com.amazonaws.codegurureviewer#Reactions",
          "traits": {
            "smithy.api#documentation": "<p>\n         List for storing reactions. Reactions are utf-8 text code for emojis. You can send an empty list to clear off all your feedback.\n      </p>"
          }
        },
        "UserId": {
          "target": "com.amazonaws.codegurureviewer#UserId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The ID of the user that made the API call.\n      </p>\n         <p>\n         The <code>UserId</code> is an IAM principal that can be specified as an AWS account ID or an Amazon Resource Name (ARN). For \n         more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\">\n            Specifying a Principal</a> in the <i>AWS Identity and Access Management User Guide</i>.\n      </p>"
          }
        },
        "LastUpdatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>\n         The time at which the feedback was last updated. \n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about the recommendation feedback.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationFeedbackSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#RecommendationFeedbackSummary"
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationFeedbackSummary": {
      "type": "structure",
      "members": {
        "Reactions": {
          "target": "com.amazonaws.codegurureviewer#Reactions",
          "traits": {
            "smithy.api#documentation": "<p>\n         List for storing reactions. Reactions are utf-8 text code for emojis.\n      </p>"
          }
        },
        "RecommendationId": {
          "target": "com.amazonaws.codegurureviewer#RecommendationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback.\n      </p>"
          }
        },
        "UserId": {
          "target": "com.amazonaws.codegurureviewer#UserId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The ID of the user that gave the feedback.\n      </p>\n         <p>\n         The <code>UserId</code> is an IAM principal that can be specified as an AWS account ID or an Amazon Resource Name (ARN). For \n         more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#Principal_specifying\">\n            Specifying a Principal</a> in the <i>AWS Identity and Access Management User Guide</i>.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about recommendation feedback summaries.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        }
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#RecommendationId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#RecommendationSummary"
      }
    },
    "com.amazonaws.codegurureviewer#RecommendationSummary": {
      "type": "structure",
      "members": {
        "FilePath": {
          "target": "com.amazonaws.codegurureviewer#FilePath",
          "traits": {
            "smithy.api#documentation": "<p>Name of the file on which a recommendation is provided.</p>"
          }
        },
        "Description": {
          "target": "com.amazonaws.codegurureviewer#Text",
          "traits": {
            "smithy.api#documentation": "<p>\n         A description of the recommendation generated by CodeGuru Reviewer for the lines of code between the start line and the end line.\n      </p>"
          }
        },
        "StartLine": {
          "target": "com.amazonaws.codegurureviewer#LineNumber",
          "traits": {
            "smithy.api#documentation": "<p>\n         Start line from where the recommendation is applicable in the source commit or source branch.\n      </p>"
          }
        },
        "RecommendationId": {
          "target": "com.amazonaws.codegurureviewer#RecommendationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback.\n      </p>"
          }
        },
        "EndLine": {
          "target": "com.amazonaws.codegurureviewer#LineNumber",
          "traits": {
            "smithy.api#documentation": "<p>\n         Last line where the recommendation is applicable in the source commit or source branch. For a single line comment the start line and end line values are the same.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about recommendations.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#Repository": {
      "type": "structure",
      "members": {
        "GitHubEnterpriseServer": {
          "target": "com.amazonaws.codegurureviewer#ThirdPartySourceRepository",
          "traits": {
            "smithy.api#documentation": "<p>\n         Information about a GitHub Enterprise Server repository.\n      </p>"
          }
        },
        "Bitbucket": {
          "target": "com.amazonaws.codegurureviewer#ThirdPartySourceRepository",
          "traits": {
            "smithy.api#documentation": "<p>\n         Information about a Bitbucket repository.\n      </p>"
          }
        },
        "CodeCommit": {
          "target": "com.amazonaws.codegurureviewer#CodeCommitRepository",
          "traits": {
            "smithy.api#documentation": "<p>Information about an AWS CodeCommit repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about an associated AWS CodeCommit repository or an associated repository that is managed \n         by AWS CodeStar Connections (for example, Bitbucket). This <code>Repository</code> object \n         is not used if your source code is in an associated GitHub repository.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryAssociation": {
      "type": "structure",
      "members": {
        "AssociationArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) identifying the repository association.</p>"
          }
        },
        "LastUpdatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>The time, in milliseconds since the epoch, when the repository association was last updated.</p>"
          }
        },
        "CreatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>The time, in milliseconds since the epoch, when the repository association was created.</p>"
          }
        },
        "ProviderType": {
          "target": "com.amazonaws.codegurureviewer#ProviderType",
          "traits": {
            "smithy.api#documentation": "<p>The provider type of the repository association.</p>"
          }
        },
        "StateReason": {
          "target": "com.amazonaws.codegurureviewer#StateReason",
          "traits": {
            "smithy.api#documentation": "<p>A description of why the repository association is in the current state.</p>"
          }
        },
        "State": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociationState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the repository association.</p>\n         <p>The valid repository association states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <b>Associated</b>: The repository \n               association is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Associating</b>: CodeGuru Reviewer is:               \n            </p>\n               <ul>\n                  <li>\n                     <p>\n                     Setting up pull request notifications. This is required \n                     for pull requests to trigger a CodeGuru Reviewer review.\n                  </p>\n                     <note>\n                        <p>\n                        If your repository <code>ProviderType</code> is <code>GitHub</code> or <code>Bitbucket</code>, \n                        CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks, \n                        reviews of code in your repository cannot be triggered.\n                     </p>\n                     </note>\n                  </li>\n                  <li>\n                     <p>\n                     Setting up source code access. This is required for CodeGuru Reviewer to securely \n                     clone code in your repository.\n                  </p>\n                  </li>\n               </ul>            \n            </li>\n            <li>\n               <p>\n                  <b>Failed</b>: The repository failed to associate or disassociate.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: CodeGuru Reviewer is removing the repository's pull request notifications and \n               source code access.\n            </p>\n            </li>\n         </ul>"
          }
        },
        "ConnectionArn": {
          "target": "com.amazonaws.codegurureviewer#ConnectionArn",
          "traits": {
            "smithy.api#documentation": "<p>\n         The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection. Its format is \n         <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see \n         <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\">Connection</a> in \n         the <i>AWS CodeStar Connections API Reference</i>.\n      </p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "AssociationId": {
          "target": "com.amazonaws.codegurureviewer#AssociationId",
          "traits": {
            "smithy.api#documentation": "<p>The ID of the repository association.</p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.codegurureviewer#Owner",
          "traits": {
            "smithy.api#documentation": "<p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the \n      account that owns the repository. For a GitHub or Bitbucket repository, this is the username for the account that owns the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Information about a repository association. The \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_DescribeRepositoryAssociation.html\">\n               <code>DescribeRepositoryAssociation</code>\n            </a>\n         operation returns a <code>RepositoryAssociation</code> object.</p>"
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryAssociationState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "Associated",
            "name": "ASSOCIATED"
          },
          {
            "value": "Associating",
            "name": "ASSOCIATING"
          },
          {
            "value": "Failed",
            "name": "FAILED"
          },
          {
            "value": "Disassociating",
            "name": "DISASSOCIATING"
          }
        ]
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryAssociationStates": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#RepositoryAssociationState"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 3
        }
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryAssociationSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#RepositoryAssociationSummary"
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryAssociationSummary": {
      "type": "structure",
      "members": {
        "State": {
          "target": "com.amazonaws.codegurureviewer#RepositoryAssociationState",
          "traits": {
            "smithy.api#documentation": "<p>The state of the repository association.</p>\n         <p>The valid repository association states are:</p>\n         <ul>\n            <li>            \n               <p>\n                  <b>Associated</b>: The repository \n               association is complete.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Associating</b>: CodeGuru Reviewer is:               \n            </p>\n               <ul>\n                  <li>\n                     <p>\n                     Setting up pull request notifications. This is required \n                     for pull requests to trigger a CodeGuru Reviewer review.\n                  </p>\n                     <note>\n                        <p>\n                        If your repository <code>ProviderType</code> is <code>GitHub</code> or <code>Bitbucket</code>, \n                        CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks, \n                        reviews of code in your repository cannot be triggered.\n                     </p>\n                     </note>\n                  </li>\n                  <li>\n                     <p>\n                     Setting up source code access. This is required for CodeGuru Reviewer to securely \n                     clone code in your repository.\n                  </p>\n                  </li>\n               </ul>            \n            </li>\n            <li>\n               <p>\n                  <b>Failed</b>: The repository failed to associate or disassociate.\n            </p>            \n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: CodeGuru Reviewer is removing the repository's pull request notifications and \n               source code access.\n            </p>\n            </li>\n         </ul>"
          }
        },
        "AssociationId": {
          "target": "com.amazonaws.codegurureviewer#AssociationId",
          "traits": {
            "smithy.api#documentation": "<p>\n         The repository association ID.\n      </p>"
          }
        },
        "ProviderType": {
          "target": "com.amazonaws.codegurureviewer#ProviderType",
          "traits": {
            "smithy.api#documentation": "<p>The provider type of the repository association.</p>"
          }
        },
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository association.</p>"
          }
        },
        "AssociationArn": {
          "target": "com.amazonaws.codegurureviewer#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the  \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html\">\n               <code>RepositoryAssociation</code>\n            </a> object. \n      </p>"
          }
        },
        "ConnectionArn": {
          "target": "com.amazonaws.codegurureviewer#ConnectionArn",
          "traits": {
            "smithy.api#documentation": "<p>\n         The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection. Its format is \n         <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see \n         <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\">Connection</a> in \n         the <i>AWS CodeStar Connections API Reference</i>.\n      </p>"
          }
        },
        "Owner": {
          "target": "com.amazonaws.codegurureviewer#Owner",
          "traits": {
            "smithy.api#documentation": "<p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the \n      account that owns the repository. For a GitHub or Bitbucket repository, this is the username for the account that owns the repository.</p>"
          }
        },
        "LastUpdatedTimeStamp": {
          "target": "com.amazonaws.codegurureviewer#TimeStamp",
          "traits": {
            "smithy.api#documentation": "<p>The time, in milliseconds since the epoch, since the repository association\n        was last updated.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Summary information about a repository association. The \n         <a href=\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html\">\n               <code>ListRepositoryAssociations</code>\n            </a>\n         operation returns a list of <code>RepositoryAssociationSummary</code> objects.</p>"
      }
    },
    "com.amazonaws.codegurureviewer#RepositoryNames": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#Name"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codegurureviewer#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         The resource specified in the request was not found.\n      </p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.codegurureviewer#SourceCodeType": {
      "type": "structure",
      "members": {
        "CommitDiff": {
          "target": "com.amazonaws.codegurureviewer#CommitDiffSourceCodeType",
          "traits": {
            "smithy.api#documentation": "<p>\n         The commit diff for the pull request.\n      </p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about the source code type.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#StateReason": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.codegurureviewer#Text": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.codegurureviewer#ThirdPartySourceRepository": {
      "type": "structure",
      "members": {
        "Owner": {
          "target": "com.amazonaws.codegurureviewer#Owner",
          "traits": {
            "smithy.api#documentation": "<p>\n         The owner of the repository. For a GitHub, GitHub Enterprise, or Bitbucket repository, \n         this is the username for the account that owns the repository. \n      </p>",
            "smithy.api#required": {}
          }
        },
        "Name": {
          "target": "com.amazonaws.codegurureviewer#Name",
          "traits": {
            "smithy.api#documentation": "<p>\n         The name of the third party source repository.\n      </p>",
            "smithy.api#required": {}
          }
        },
        "ConnectionArn": {
          "target": "com.amazonaws.codegurureviewer#ConnectionArn",
          "traits": {
            "smithy.api#documentation": "<p>\n         The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection. Its format is \n         <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see \n         <a href=\"https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html\">Connection</a> in \n         the <i>AWS CodeStar Connections API Reference</i>.\n      </p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>\n         Information about a third-party source repository connected to CodeGuru Reviewer.\n      </p>"
      }
    },
    "com.amazonaws.codegurureviewer#ThrottlingException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The request was denied due to request throttling.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.codegurureviewer#TimeStamp": {
      "type": "timestamp"
    },
    "com.amazonaws.codegurureviewer#Type": {
      "type": "string",
      "traits": {
        "smithy.api#enum": [
          {
            "value": "PullRequest",
            "name": "PULL_REQUEST"
          }
        ]
      }
    },
    "com.amazonaws.codegurureviewer#UserId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.codegurureviewer#UserIds": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.codegurureviewer#UserId"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.codegurureviewer#ValidationException": {
      "type": "structure",
      "members": {
        "Message": {
          "target": "com.amazonaws.codegurureviewer#ErrorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The input fails to satisfy the specified constraints.</p>",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    }
  }
}
