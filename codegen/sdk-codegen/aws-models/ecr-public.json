{
  "smithy": "2.0",
  "metadata": {
    "suppressions": [
      {
        "id": "HttpMethodSemantics",
        "namespace": "*"
      },
      {
        "id": "HttpResponseCodeSemantics",
        "namespace": "*"
      },
      {
        "id": "PaginatedTrait",
        "namespace": "*"
      },
      {
        "id": "HttpHeaderTrait",
        "namespace": "*"
      },
      {
        "id": "HttpUriConflict",
        "namespace": "*"
      },
      {
        "id": "Service",
        "namespace": "*"
      }
    ]
  },
  "shapes": {
    "com.amazonaws.ecrpublic#AboutText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 25600
        }
      }
    },
    "com.amazonaws.ecrpublic#Architecture": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecrpublic#ArchitectureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#Architecture"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecrpublic#Arn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 2048
        }
      }
    },
    "com.amazonaws.ecrpublic#AuthorizationData": {
      "type": "structure",
      "members": {
        "authorizationToken": {
          "target": "com.amazonaws.ecrpublic#Base64",
          "traits": {
            "smithy.api#documentation": "<p>A base64-encoded string that contains authorization data for a public Amazon ECR registry.\n         When the string is decoded, it's presented in the format <code>user:password</code> for\n         public registry authentication using <code>docker login</code>.</p>"
          }
        },
        "expiresAt": {
          "target": "com.amazonaws.ecrpublic#ExpirationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The Unix time in seconds and milliseconds when the authorization token expires.\n         Authorization tokens are valid for 12 hours.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An authorization token data object that corresponds to a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#Base64": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^\\S+$"
      }
    },
    "com.amazonaws.ecrpublic#BatchCheckLayerAvailability": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#BatchCheckLayerAvailabilityRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#BatchCheckLayerAvailabilityResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RegistryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Checks the availability of one or more image layers that are within a repository in a\n         public registry. When an image is pushed to a repository, each image layer is checked to\n         verify if it has been uploaded before. If it has been uploaded, then the image layer is\n         skipped.</p>\n         <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecrpublic#BatchCheckLayerAvailabilityRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, associated with the public registry that\n         contains the image layers to check. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that's associated with the image layers to check.</p>",
            "smithy.api#required": {}
          }
        },
        "layerDigests": {
          "target": "com.amazonaws.ecrpublic#BatchedOperationLayerDigestList",
          "traits": {
            "smithy.api#documentation": "<p>The digests of the image layers to check.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#BatchCheckLayerAvailabilityResponse": {
      "type": "structure",
      "members": {
        "layers": {
          "target": "com.amazonaws.ecrpublic#LayerList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image layer objects that correspond to the image layer references in the\n         request.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecrpublic#LayerFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#BatchDeleteImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#BatchDeleteImageRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#BatchDeleteImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a list of specified images that are within a repository in a public registry.\n         Images are specified with either an <code>imageTag</code> or\n         <code>imageDigest</code>.</p>\n         <p>You can remove a tag from an image by specifying the image's tag in your request. When\n         you remove the last tag from an image, the image is deleted from your repository.</p>\n         <p>You can completely delete an image (and all of its tags) by specifying the digest of the\n         image in your request.</p>"
      }
    },
    "com.amazonaws.ecrpublic#BatchDeleteImageRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, that's associated with the registry that\n         contains the image to delete. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository in a public registry that contains the image to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecrpublic#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>A list of image ID references that correspond to images to delete. The format of the\n            <code>imageIds</code> reference is <code>imageTag=tag</code> or\n            <code>imageDigest=digest</code>.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#BatchDeleteImageResponse": {
      "type": "structure",
      "members": {
        "imageIds": {
          "target": "com.amazonaws.ecrpublic#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The image IDs of the deleted images.</p>"
          }
        },
        "failures": {
          "target": "com.amazonaws.ecrpublic#ImageFailureList",
          "traits": {
            "smithy.api#documentation": "<p>Any failures associated with the call.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#BatchedOperationLayerDigest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1000
        }
      }
    },
    "com.amazonaws.ecrpublic#BatchedOperationLayerDigestList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#BatchedOperationLayerDigest"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecrpublic#CompleteLayerUpload": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#CompleteLayerUploadRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#CompleteLayerUploadResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#EmptyUploadException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidLayerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LayerAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LayerPartTooSmallException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RegistryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UploadNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Informs Amazon ECR that the image layer upload is complete for a specified public registry,\n         repository name, and upload ID. You can optionally provide a <code>sha256</code> digest of\n         the image layer for data validation purposes.</p>\n         <p>When an image is pushed, the CompleteLayerUpload API is called once for each new image\n         layer to verify that the upload is complete.</p>\n         <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecrpublic#CompleteLayerUploadRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, associated with the registry where layers are\n         uploaded. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository in a public registry to associate with the image\n         layer.</p>",
            "smithy.api#required": {}
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to\n         associate with the image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "layerDigests": {
          "target": "com.amazonaws.ecrpublic#LayerDigestList",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#CompleteLayerUploadResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The public registry ID that's associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name that's associated with the request.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID that's associated with the layer.</p>"
          }
        },
        "layerDigest": {
          "target": "com.amazonaws.ecrpublic#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#CreateRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#CreateRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#CreateRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#TooManyTagsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates a repository in a public registry. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html\">Amazon ECR\n            repositories</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecrpublic#CreateRepositoryRequest": {
      "type": "structure",
      "members": {
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name to use for the repository. This appears publicly in the Amazon ECR Public Gallery.\n         The repository name can be specified on its own (for example <code>nginx-web-app</code>) or\n         prepended with a namespace to group the repository into a category (for example\n            <code>project-a/nginx-web-app</code>).</p>",
            "smithy.api#required": {}
          }
        },
        "catalogData": {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogDataInput",
          "traits": {
            "smithy.api#documentation": "<p>The details about the repository that are publicly visible in the\n         Amazon ECR Public Gallery.</p>"
          }
        },
        "tags": {
          "target": "com.amazonaws.ecrpublic#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The metadata that you apply to each repository to help categorize and organize your\n         repositories. Each tag consists of a key and an optional value. You define both of them.\n         Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#CreateRepositoryResponse": {
      "type": "structure",
      "members": {
        "repository": {
          "target": "com.amazonaws.ecrpublic#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The repository that was created.</p>"
          }
        },
        "catalogData": {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogData"
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#CreationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecrpublic#DefaultRegistryAliasFlag": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepository": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DeleteRepositoryRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DeleteRepositoryResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotEmptyException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes a repository in a public registry. If the repository contains images, you must\n         either manually delete all images in the repository or use the <code>force</code> option.\n         This option deletes all images on your behalf before deleting the repository.</p>"
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DeleteRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DeleteRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes the repository policy that's associated with the specified repository.</p>"
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository policy to delete. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that's associated with the repository policy to\n         delete.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID that's associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name that's associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy that was deleted from the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepositoryRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository to delete. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to delete.</p>",
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "com.amazonaws.ecrpublic#ForceFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p> The force option can be used to delete a repository that contains images. If the force\n         option is not used, the repository must be empty prior to deletion.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DeleteRepositoryResponse": {
      "type": "structure",
      "members": {
        "repository": {
          "target": "com.amazonaws.ecrpublic#Repository",
          "traits": {
            "smithy.api#documentation": "<p>The repository that was deleted.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeImageTags": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DescribeImageTagsRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DescribeImageTagsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns the image tag details for a repository in a public registry.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "imageTagDetails",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecrpublic#DescribeImageTagsRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository where images are described. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that contains the image tag details to describe.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value that's returned from a previous paginated\n            <code>DescribeImageTags</code> request where <code>maxResults</code> was used and the\n         results exceeded the value of that parameter. Pagination continues from the end of the\n         previous results that returned the <code>nextToken</code> value. If there are no more\n         results to return, this value is <code>null</code>. If you specify images with\n            <code>imageIds</code>, you can't use this option.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecrpublic#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results that's returned by\n            <code>DescribeImageTags</code> in paginated output. When this parameter is used,\n            <code>DescribeImageTags</code> only returns <code>maxResults</code> results in a single\n         page along with a <code>nextToken</code> response element. You can see the remaining\n         results of the initial request by sending another <code>DescribeImageTags</code> request\n         with the returned <code>nextToken</code> value. This value can be between 1\n         and 1000. If this parameter isn't used, then <code>DescribeImageTags</code>\n         returns up to 100 results and a <code>nextToken</code> value, if\n         applicable. If you specify images with <code>imageIds</code>, you can't use this\n         option.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeImageTagsResponse": {
      "type": "structure",
      "members": {
        "imageTagDetails": {
          "target": "com.amazonaws.ecrpublic#ImageTagDetailList",
          "traits": {
            "smithy.api#documentation": "<p>The image tag details for the images in the requested repository.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future <code>DescribeImageTags</code>\n         request. When the results of a <code>DescribeImageTags</code> request exceed\n            <code>maxResults</code>, you can use this value to retrieve the next page of results. If\n         there are no more results to return, this value is <code>null</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeImages": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DescribeImagesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DescribeImagesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#ImageNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns metadata that's related to the images in a repository in a public\n         registry.</p>\n         <note>\n            <p>Beginning with Docker version 1.9, the Docker client compresses image layers before\n            pushing them to a V2 Docker registry. The output of the <code>docker images</code>\n            command shows the uncompressed image size. Therefore, it might return a larger image\n            size than the image sizes that are returned by <a>DescribeImages</a>.</p>\n         </note>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "imageDetails",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecrpublic#DescribeImagesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository where images are described. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository that contains the images to describe.</p>",
            "smithy.api#required": {}
          }
        },
        "imageIds": {
          "target": "com.amazonaws.ecrpublic#ImageIdentifierList",
          "traits": {
            "smithy.api#documentation": "<p>The list of image IDs for the requested repository.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value that's returned from a previous paginated\n            <code>DescribeImages</code> request where <code>maxResults</code> was used and the\n         results exceeded the value of that parameter. Pagination continues from the end of the\n         previous results that returned the <code>nextToken</code> value. If there are no more\n         results to return, this value is <code>null</code>. If you specify images with\n            <code>imageIds</code>, you can't use this option.</p>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecrpublic#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results that's returned by <code>DescribeImages</code>\n         in paginated output. When this parameter is used, <code>DescribeImages</code> only returns\n            <code>maxResults</code> results in a single page along with a <code>nextToken</code>\n         response element. You can see the remaining results of the initial request by sending\n         another <code>DescribeImages</code> request with the returned <code>nextToken</code> value.\n         This value can be between 1 and 1000. If this parameter isn't\n         used, then <code>DescribeImages</code> returns up to 100 results and a\n            <code>nextToken</code> value, if applicable. If you specify images with\n            <code>imageIds</code>, you can't use this option.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeImagesResponse": {
      "type": "structure",
      "members": {
        "imageDetails": {
          "target": "com.amazonaws.ecrpublic#ImageDetailList",
          "traits": {
            "smithy.api#documentation": "<p>A list of <a>ImageDetail</a> objects that contain data about the\n         image.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code>\n         request. When the results of a <code>DescribeImages</code> request exceed\n            <code>maxResults</code>, you can use this value to retrieve the next page of results. If\n         there are no more results to return, this value is <code>null</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeRegistries": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DescribeRegistriesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DescribeRegistriesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Returns details for a public registry.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "registries",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecrpublic#DescribeRegistriesRequest": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value that's returned from a previous paginated\n            <code>DescribeRegistries</code> request where <code>maxResults</code> was used and the\n         results exceeded the value of that parameter. Pagination continues from the end of the\n         previous results that returned the <code>nextToken</code> value. If there are no more\n         results to return, this value is <code>null</code>.</p>\n         <note>\n            <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n         </note>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecrpublic#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results that's returned by\n            <code>DescribeRegistries</code> in paginated output. When this parameter is used,\n            <code>DescribeRegistries</code> only returns <code>maxResults</code> results in a single\n         page along with a <code>nextToken</code> response element. The remaining results of the\n         initial request can be seen by sending another <code>DescribeRegistries</code> request with\n         the returned <code>nextToken</code> value. This value can be between 1 and\n         1000. If this parameter isn't used, then <code>DescribeRegistries</code>\n         returns up to 100 results and a <code>nextToken</code> value, if\n         applicable.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeRegistriesResponse": {
      "type": "structure",
      "members": {
        "registries": {
          "target": "com.amazonaws.ecrpublic#RegistryList",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the details for a public registry.</p>",
            "smithy.api#required": {}
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n            <code>DescribeRepositories</code> request. If the results of a\n            <code>DescribeRepositories</code> request exceed <code>maxResults</code>, you can use\n         this value to retrieve the next page of results. If there are no more results, this value\n         is <code>null</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeRepositories": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#DescribeRepositoriesRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#DescribeRepositoriesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Describes repositories that are in a public registry.</p>",
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "items": "repositories",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.ecrpublic#DescribeRepositoriesRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the registry that contains the repositories\n         to be described. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryNames": {
          "target": "com.amazonaws.ecrpublic#RepositoryNameList",
          "traits": {
            "smithy.api#documentation": "<p>A list of repositories to describe. If this parameter is omitted, then all repositories\n         in a registry are described.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value that's returned from a previous paginated\n            <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the\n         results exceeded the value of that parameter. Pagination continues from the end of the\n         previous results that returned the <code>nextToken</code> value. If there are no more\n         results to return, this value is <code>null</code>. If you specify repositories with\n            <code>repositoryNames</code>, you can't use this option.</p>\n         <note>\n            <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>\n         </note>"
          }
        },
        "maxResults": {
          "target": "com.amazonaws.ecrpublic#MaxResults",
          "traits": {
            "smithy.api#documentation": "<p>The maximum number of repository results that's returned by\n            <code>DescribeRepositories</code> in paginated output. When this parameter is used,\n            <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a\n         single page along with a <code>nextToken</code> response element. You can see the remaining\n         results of the initial request by sending another <code>DescribeRepositories</code> request\n         with the returned <code>nextToken</code> value. This value can be between 1\n         and 1000. If this parameter isn't used, then <code>DescribeRepositories</code>\n         returns up to 100 results and a <code>nextToken</code> value, if\n         applicable. If you specify repositories with <code>repositoryNames</code>, you can't use\n         this option.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#DescribeRepositoriesResponse": {
      "type": "structure",
      "members": {
        "repositories": {
          "target": "com.amazonaws.ecrpublic#RepositoryList",
          "traits": {
            "smithy.api#documentation": "<p>A list of repository objects corresponding to valid repositories.</p>"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.ecrpublic#NextToken",
          "traits": {
            "smithy.api#documentation": "<p>The <code>nextToken</code> value to include in a future\n            <code>DescribeRepositories</code> request. When the results of a\n            <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can\n         be used to retrieve the next page of results. If there are no more results to return, this\n         value is <code>null</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#EmptyUploadException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified layer upload doesn't contain any layer parts.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ExceptionMessage": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#ExpirationTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecrpublic#ForceFlag": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ecrpublic#GetAuthorizationToken": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#GetAuthorizationTokenRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#GetAuthorizationTokenResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves an authorization token. An authorization token represents your IAM\n         authentication credentials. You can use it to access any Amazon ECR registry that your IAM\n         principal has access to. The authorization token is valid for 12 hours. This API requires\n         the <code>ecr-public:GetAuthorizationToken</code> and\n            <code>sts:GetServiceBearerToken</code> permissions.</p>"
      }
    },
    "com.amazonaws.ecrpublic#GetAuthorizationTokenRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#GetAuthorizationTokenResponse": {
      "type": "structure",
      "members": {
        "authorizationData": {
          "target": "com.amazonaws.ecrpublic#AuthorizationData",
          "traits": {
            "smithy.api#documentation": "<p>An authorization token data object that corresponds to a public registry.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRegistryCatalogData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#GetRegistryCatalogDataRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#GetRegistryCatalogDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves catalog metadata for a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#GetRegistryCatalogDataRequest": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRegistryCatalogDataResponse": {
      "type": "structure",
      "members": {
        "registryCatalogData": {
          "target": "com.amazonaws.ecrpublic#RegistryCatalogData",
          "traits": {
            "smithy.api#documentation": "<p>The catalog metadata for the public registry.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryCatalogData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#GetRepositoryCatalogDataRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#GetRepositoryCatalogDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogDataNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieve catalog metadata for a repository in a public registry. This metadata is\n         displayed publicly in the Amazon ECR Public Gallery.</p>"
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryCatalogDataRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the registry that contains the repositories\n         to be described. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to retrieve the catalog metadata for.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryCatalogDataResponse": {
      "type": "structure",
      "members": {
        "catalogData": {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogData",
          "traits": {
            "smithy.api#documentation": "<p>The catalog metadata for the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#GetRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#GetRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Retrieves the repository policy for the specified repository.</p>"
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository with the policy to retrieve.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#GetRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID that's associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name that's associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The repository policy text that's associated with the repository. The policy text will\n         be in JSON format.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#Image": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the registry containing the image.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that's associated with the image.</p>"
          }
        },
        "imageId": {
          "target": "com.amazonaws.ecrpublic#ImageIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>An object that contains the image tag and image digest associated with an image.</p>"
          }
        },
        "imageManifest": {
          "target": "com.amazonaws.ecrpublic#ImageManifest",
          "traits": {
            "smithy.api#documentation": "<p>The image manifest that's associated with the image.</p>"
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The manifest media type of the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that represents an Amazon ECR image.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ImageAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image has already been pushed, and there were no changes to the manifest\n         or image tag after the last push.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ImageDetail": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry where this image\n         belongs.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository where this image belongs.</p>"
          }
        },
        "imageDigest": {
          "target": "com.amazonaws.ecrpublic#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imageTags": {
          "target": "com.amazonaws.ecrpublic#ImageTagList",
          "traits": {
            "smithy.api#documentation": "<p>The list of tags that's associated with this image.</p>"
          }
        },
        "imageSizeInBytes": {
          "target": "com.amazonaws.ecrpublic#ImageSizeInBytes",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, of the image in the repository.</p>\n         <p>If the image is a manifest list, this is the max size of all manifests in the\n         list.</p>\n         <note>\n            <p>Beginning with Docker version 1.9, the Docker client compresses image layers before\n            pushing them to a V2 Docker registry. The output of the <code>docker images</code>\n            command shows the uncompressed image size, so it might return a larger image size than\n            the image sizes that are returned by <a>DescribeImages</a>.</p>\n         </note>"
          }
        },
        "imagePushedAt": {
          "target": "com.amazonaws.ecrpublic#PushTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, expressed in standard JavaScript date format, that the current image\n         was pushed to the repository at. </p>"
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the image manifest.</p>"
          }
        },
        "artifactMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The artifact media type of the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that describes an image that's returned by a <a>DescribeImages</a>\n         operation.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ImageDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#ImageDetail"
      }
    },
    "com.amazonaws.ecrpublic#ImageDigest": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#ImageDigestDoesNotMatchException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image digest doesn't match the digest that Amazon ECR calculated for the\n         image.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ImageFailure": {
      "type": "structure",
      "members": {
        "imageId": {
          "target": "com.amazonaws.ecrpublic#ImageIdentifier",
          "traits": {
            "smithy.api#documentation": "<p>The image ID that's associated with the failure.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecrpublic#ImageFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The code that's associated with the failure.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.ecrpublic#ImageFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the failure.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that represents an Amazon ECR image failure.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ImageFailureCode": {
      "type": "enum",
      "members": {
        "InvalidImageDigest": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "InvalidImageDigest"
          }
        },
        "InvalidImageTag": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "InvalidImageTag"
          }
        },
        "ImageTagDoesNotMatchDigest": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ImageTagDoesNotMatchDigest"
          }
        },
        "ImageNotFound": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ImageNotFound"
          }
        },
        "MissingDigestAndTag": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MissingDigestAndTag"
          }
        },
        "ImageReferencedByManifestList": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ImageReferencedByManifestList"
          }
        },
        "KmsError": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "KmsError"
          }
        }
      }
    },
    "com.amazonaws.ecrpublic#ImageFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#ImageFailure"
      }
    },
    "com.amazonaws.ecrpublic#ImageFailureReason": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#ImageIdentifier": {
      "type": "structure",
      "members": {
        "imageDigest": {
          "target": "com.amazonaws.ecrpublic#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imageTag": {
          "target": "com.amazonaws.ecrpublic#ImageTag",
          "traits": {
            "smithy.api#documentation": "<p>The tag that's used for the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object with identifying information for an Amazon ECR image.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ImageIdentifierList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#ImageIdentifier"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecrpublic#ImageManifest": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 4194304
        }
      }
    },
    "com.amazonaws.ecrpublic#ImageNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image requested doesn't exist in the specified repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ImageSizeInBytes": {
      "type": "long"
    },
    "com.amazonaws.ecrpublic#ImageTag": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 300
        }
      }
    },
    "com.amazonaws.ecrpublic#ImageTagAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified image is tagged with a tag that already exists. The repository is\n         configured for tag immutability.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ImageTagDetail": {
      "type": "structure",
      "members": {
        "imageTag": {
          "target": "com.amazonaws.ecrpublic#ImageTag",
          "traits": {
            "smithy.api#documentation": "<p>The tag that's associated with the image.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecrpublic#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The time stamp that indicates when the image tag was created.</p>"
          }
        },
        "imageDetail": {
          "target": "com.amazonaws.ecrpublic#ReferencedImageDetail",
          "traits": {
            "smithy.api#documentation": "<p>An object that describes the details of an image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that represents the image tag details for an image.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ImageTagDetailList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#ImageTagDetail"
      }
    },
    "com.amazonaws.ecrpublic#ImageTagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#ImageTag"
      }
    },
    "com.amazonaws.ecrpublic#InitiateLayerUpload": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#InitiateLayerUploadRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#InitiateLayerUploadResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RegistryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Notifies Amazon ECR that you intend to upload an image layer.</p>\n         <p>When an image is pushed, the InitiateLayerUpload API is called once for each image layer\n         that hasn't already been uploaded. Whether an image layer uploads is determined by the\n         BatchCheckLayerAvailability API action.</p>\n         <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecrpublic#InitiateLayerUploadRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, that's associated with the registry to which\n         you intend to upload layers. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that you want to upload layers to.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#InitiateLayerUploadResponse": {
      "type": "structure",
      "members": {
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>"
          }
        },
        "partSize": {
          "target": "com.amazonaws.ecrpublic#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#InvalidLayerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The layer digest calculation performed by Amazon ECR when the image layer doesn't match the\n         digest specified.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#InvalidLayerPartException": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the layer part.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID that's associated with the layer part.</p>"
          }
        },
        "lastValidByteReceived": {
          "target": "com.amazonaws.ecrpublic#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The position of the last byte of the layer part.</p>"
          }
        },
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The layer part size isn't valid, or the first byte specified isn't consecutive to the\n         last byte of a previous layer part upload.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#InvalidParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified parameter is invalid. Review the available parameters for the API\n         request.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#InvalidTagParameterException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An invalid parameter has been specified. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#Layer": {
      "type": "structure",
      "members": {
        "layerDigest": {
          "target": "com.amazonaws.ecrpublic#LayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image layer.</p>"
          }
        },
        "layerAvailability": {
          "target": "com.amazonaws.ecrpublic#LayerAvailability",
          "traits": {
            "smithy.api#documentation": "<p>The availability status of the image layer.</p>"
          }
        },
        "layerSize": {
          "target": "com.amazonaws.ecrpublic#LayerSizeInBytes",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, of the image layer.</p>"
          }
        },
        "mediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the layer, such as\n            <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or\n            <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that represents an Amazon ECR image layer.</p>"
      }
    },
    "com.amazonaws.ecrpublic#LayerAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The image layer already exists in the associated repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#LayerAvailability": {
      "type": "enum",
      "members": {
        "AVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "AVAILABLE"
          }
        },
        "UNAVAILABLE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "UNAVAILABLE"
          }
        }
      }
    },
    "com.amazonaws.ecrpublic#LayerDigest": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+$"
      }
    },
    "com.amazonaws.ecrpublic#LayerDigestList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#LayerDigest"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecrpublic#LayerFailure": {
      "type": "structure",
      "members": {
        "layerDigest": {
          "target": "com.amazonaws.ecrpublic#BatchedOperationLayerDigest",
          "traits": {
            "smithy.api#documentation": "<p>The layer digest that's associated with the failure.</p>"
          }
        },
        "failureCode": {
          "target": "com.amazonaws.ecrpublic#LayerFailureCode",
          "traits": {
            "smithy.api#documentation": "<p>The failure code that's associated with the failure.</p>"
          }
        },
        "failureReason": {
          "target": "com.amazonaws.ecrpublic#LayerFailureReason",
          "traits": {
            "smithy.api#documentation": "<p>The reason for the failure.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that represents an Amazon ECR image layer failure.</p>"
      }
    },
    "com.amazonaws.ecrpublic#LayerFailureCode": {
      "type": "enum",
      "members": {
        "InvalidLayerDigest": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "InvalidLayerDigest"
          }
        },
        "MissingLayerDigest": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "MissingLayerDigest"
          }
        }
      }
    },
    "com.amazonaws.ecrpublic#LayerFailureList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#LayerFailure"
      }
    },
    "com.amazonaws.ecrpublic#LayerFailureReason": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#LayerList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#Layer"
      }
    },
    "com.amazonaws.ecrpublic#LayerPartBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20971520
        }
      }
    },
    "com.amazonaws.ecrpublic#LayerPartTooSmallException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>Layer parts must be at least 5 MiB in size.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#LayerSizeInBytes": {
      "type": "long"
    },
    "com.amazonaws.ecrpublic#LayersNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified layers can't be found, or the specified layer isn't valid for this\n         repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#LimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The operation didn't succeed because it would have exceeded a service limit for your\n         account. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/service-quotas.html\">Amazon ECR Service Quotas</a> in the\n         Amazon Elastic Container Registry User Guide.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>List the tags for an Amazon ECR Public resource.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecrpublic#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the resource to list the tags for. Currently, the\n         supported resource is an Amazon ECR Public repository.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.ecrpublic#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags for the resource.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#LogoImageBlob": {
      "type": "blob",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 512000
        }
      }
    },
    "com.amazonaws.ecrpublic#MarketplaceCertified": {
      "type": "boolean"
    },
    "com.amazonaws.ecrpublic#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.ecrpublic#MediaType": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#NextToken": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#OperatingSystem": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecrpublic#OperatingSystemList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#OperatingSystem"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecrpublic#PartSize": {
      "type": "long",
      "traits": {
        "smithy.api#range": {
          "min": 0
        }
      }
    },
    "com.amazonaws.ecrpublic#PrimaryRegistryAliasFlag": {
      "type": "boolean",
      "traits": {
        "smithy.api#default": false
      }
    },
    "com.amazonaws.ecrpublic#PushTimestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.ecrpublic#PutImage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#PutImageRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#PutImageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#ImageAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ImageDigestDoesNotMatchException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ImageTagAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LayersNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ReferencedImagesNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RegistryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the image manifest and tags that are associated with an image.</p>\n         <p>When an image is pushed and all new image layers have been uploaded, the PutImage API is\n         called once to create or update the image manifest and the tags that are associated with\n         the image.</p>\n         <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecrpublic#PutImageRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, that's associated with the public registry that\n         contains the repository where the image is put. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository where the image is put.</p>",
            "smithy.api#required": {}
          }
        },
        "imageManifest": {
          "target": "com.amazonaws.ecrpublic#ImageManifest",
          "traits": {
            "smithy.api#documentation": "<p>The image manifest that corresponds to the image to be uploaded.</p>",
            "smithy.api#required": {}
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the image manifest. If you push an image manifest that doesn't contain\n         the <code>mediaType</code> field, you must specify the <code>imageManifestMediaType</code>\n         in the request.</p>"
          }
        },
        "imageTag": {
          "target": "com.amazonaws.ecrpublic#ImageTag",
          "traits": {
            "smithy.api#documentation": "<p>The tag to associate with the image. This parameter is required for images that use the\n         Docker Image Manifest V2 Schema 2 or Open Container Initiative (OCI) formats.</p>"
          }
        },
        "imageDigest": {
          "target": "com.amazonaws.ecrpublic#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The image digest of the image manifest that corresponds to the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#PutImageResponse": {
      "type": "structure",
      "members": {
        "image": {
          "target": "com.amazonaws.ecrpublic#Image",
          "traits": {
            "smithy.api#documentation": "<p>Details of the image uploaded.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#PutRegistryCatalogData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#PutRegistryCatalogDataRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#PutRegistryCatalogDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Create or update the catalog data for a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#PutRegistryCatalogDataRequest": {
      "type": "structure",
      "members": {
        "displayName": {
          "target": "com.amazonaws.ecrpublic#RegistryDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The display name for a public registry. The display name is shown as the repository\n         author in the Amazon ECR Public Gallery.</p>\n         <note>\n            <p>The registry display name is only publicly visible in the Amazon ECR Public Gallery for\n            verified accounts.</p>\n         </note>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#PutRegistryCatalogDataResponse": {
      "type": "structure",
      "members": {
        "registryCatalogData": {
          "target": "com.amazonaws.ecrpublic#RegistryCatalogData",
          "traits": {
            "smithy.api#documentation": "<p>The catalog data for the public registry.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#PutRepositoryCatalogData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#PutRepositoryCatalogDataRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#PutRepositoryCatalogDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Creates or updates the catalog data for a repository in a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#PutRepositoryCatalogDataRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry the repository is in.\n         If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to create or update the catalog data for.</p>",
            "smithy.api#required": {}
          }
        },
        "catalogData": {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogDataInput",
          "traits": {
            "smithy.api#documentation": "<p>An object containing the catalog data for a repository. This data is publicly visible in\n         the Amazon ECR Public Gallery.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#PutRepositoryCatalogDataResponse": {
      "type": "structure",
      "members": {
        "catalogData": {
          "target": "com.amazonaws.ecrpublic#RepositoryCatalogData",
          "traits": {
            "smithy.api#documentation": "<p>The catalog data for the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#ReferencedImageDetail": {
      "type": "structure",
      "members": {
        "imageDigest": {
          "target": "com.amazonaws.ecrpublic#ImageDigest",
          "traits": {
            "smithy.api#documentation": "<p>The <code>sha256</code> digest of the image manifest.</p>"
          }
        },
        "imageSizeInBytes": {
          "target": "com.amazonaws.ecrpublic#ImageSizeInBytes",
          "traits": {
            "smithy.api#documentation": "<p>The size, in bytes, of the image in the repository.</p>\n         <p>If the image is a manifest list, this is the max size of all manifests in the\n         list.</p>\n         <note>\n            <p>Beginning with Docker version 1.9, the Docker client compresses image layers before\n            pushing them to a V2 Docker registry. The output of the <code>docker images</code>\n            command shows the uncompressed image size, so it might return a larger image size than\n            the image sizes that are returned by <a>DescribeImages</a>.</p>\n         </note>"
          }
        },
        "imagePushedAt": {
          "target": "com.amazonaws.ecrpublic#PushTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, expressed in standard JavaScript date format, which the current image\n         tag was pushed to the repository at.</p>"
          }
        },
        "imageManifestMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The media type of the image manifest.</p>"
          }
        },
        "artifactMediaType": {
          "target": "com.amazonaws.ecrpublic#MediaType",
          "traits": {
            "smithy.api#documentation": "<p>The artifact media type of the image.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that describes the image tag details that are returned by a <a>DescribeImageTags</a> action.</p>"
      }
    },
    "com.amazonaws.ecrpublic#ReferencedImagesNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The manifest list is referencing an image that doesn't exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#Registry": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the registry.\n         If you do not specify a registry, the default public registry is assumed.</p>",
            "smithy.api#required": {}
          }
        },
        "registryArn": {
          "target": "com.amazonaws.ecrpublic#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the public registry.</p>",
            "smithy.api#required": {}
          }
        },
        "registryUri": {
          "target": "com.amazonaws.ecrpublic#Url",
          "traits": {
            "smithy.api#documentation": "<p>The URI of a public registry. The URI contains a universal prefix and the registry\n         alias.</p>",
            "smithy.api#required": {}
          }
        },
        "verified": {
          "target": "com.amazonaws.ecrpublic#RegistryVerified",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the account is a verified Amazon Web Services Marketplace vendor. If an account is verified,\n         each public repository receives a verified account badge on the\n         Amazon ECR Public Gallery.</p>",
            "smithy.api#required": {}
          }
        },
        "aliases": {
          "target": "com.amazonaws.ecrpublic#RegistryAliasList",
          "traits": {
            "smithy.api#documentation": "<p>An array of objects that represents the aliases for a public registry.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The details of a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RegistryAlias": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.ecrpublic#RegistryAliasName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the registry alias.</p>",
            "smithy.api#required": {}
          }
        },
        "status": {
          "target": "com.amazonaws.ecrpublic#RegistryAliasStatus",
          "traits": {
            "smithy.api#documentation": "<p>The status of the registry alias.</p>",
            "smithy.api#required": {}
          }
        },
        "primaryRegistryAlias": {
          "target": "com.amazonaws.ecrpublic#PrimaryRegistryAliasFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Indicates whether the registry alias is the primary alias for the registry. If true, the\n         alias is the primary registry alias and is displayed in both the repository URL and the\n         image URI used in the <code>docker pull</code> commands on the Amazon ECR Public Gallery.</p>\n         <note>\n            <p>A registry alias that isn't the primary registry alias can be used in the repository\n            URI in a <code>docker pull</code> command.</p>\n         </note>",
            "smithy.api#required": {}
          }
        },
        "defaultRegistryAlias": {
          "target": "com.amazonaws.ecrpublic#DefaultRegistryAliasFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>Indicates whether the registry alias is the default alias for the registry. When the\n         first public repository is created, your public registry is assigned a default registry\n         alias.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing the aliases for a public registry. A public registry is given an\n         alias when it's created. However, a custom alias can be set using the Amazon ECR console. For\n         more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html\">Registries</a> in the\n            <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RegistryAliasList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#RegistryAlias"
      }
    },
    "com.amazonaws.ecrpublic#RegistryAliasName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 50
        },
        "smithy.api#pattern": "^[a-z][a-z0-9]+(?:[._-][a-z0-9]+)*$"
      }
    },
    "com.amazonaws.ecrpublic#RegistryAliasStatus": {
      "type": "enum",
      "members": {
        "ACTIVE": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "ACTIVE"
          }
        },
        "PENDING": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "PENDING"
          }
        },
        "REJECTED": {
          "target": "smithy.api#Unit",
          "traits": {
            "smithy.api#enumValue": "REJECTED"
          }
        }
      }
    },
    "com.amazonaws.ecrpublic#RegistryCatalogData": {
      "type": "structure",
      "members": {
        "displayName": {
          "target": "com.amazonaws.ecrpublic#RegistryDisplayName",
          "traits": {
            "smithy.api#documentation": "<p>The display name for a public registry. This appears on the Amazon ECR Public Gallery.</p>\n         <important>\n            <p>Only accounts that have the verified account badge can have a registry display\n            name.</p>\n         </important>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The metadata for a public registry.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RegistryDisplayName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecrpublic#RegistryId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[0-9]{12}$"
      }
    },
    "com.amazonaws.ecrpublic#RegistryIdOrAlias": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 50
        }
      }
    },
    "com.amazonaws.ecrpublic#RegistryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#Registry"
      }
    },
    "com.amazonaws.ecrpublic#RegistryNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The registry doesn't exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RegistryVerified": {
      "type": "boolean"
    },
    "com.amazonaws.ecrpublic#Repository": {
      "type": "structure",
      "members": {
        "repositoryArn": {
          "target": "com.amazonaws.ecrpublic#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, Amazon Web Services account ID of the repository owner, repository namespace, and repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>"
          }
        },
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the public registry that contains the\n         repository.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository.</p>"
          }
        },
        "repositoryUri": {
          "target": "com.amazonaws.ecrpublic#Url",
          "traits": {
            "smithy.api#documentation": "<p>The URI for the repository. You can use this URI for container image <code>push</code>\n         and <code>pull</code> operations.</p>"
          }
        },
        "createdAt": {
          "target": "com.amazonaws.ecrpublic#CreationTimestamp",
          "traits": {
            "smithy.api#documentation": "<p>The date and time, in JavaScript date format, when the repository was created.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object representing a repository.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository already exists in the specified registry.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryCatalogData": {
      "type": "structure",
      "members": {
        "description": {
          "target": "com.amazonaws.ecrpublic#RepositoryDescription",
          "traits": {
            "smithy.api#documentation": "<p>The short description of the repository.</p>"
          }
        },
        "architectures": {
          "target": "com.amazonaws.ecrpublic#ArchitectureList",
          "traits": {
            "smithy.api#documentation": "<p>The architecture tags that are associated with the repository.</p>\n         <note>\n            <p>Only supported operating system tags appear publicly in the Amazon ECR Public Gallery. For\n            more information, see <a>RepositoryCatalogDataInput</a>.</p>\n         </note>"
          }
        },
        "operatingSystems": {
          "target": "com.amazonaws.ecrpublic#OperatingSystemList",
          "traits": {
            "smithy.api#documentation": "<p>The operating system tags that are associated with the repository.</p>\n         <note>\n            <p>Only supported operating system tags appear publicly in the Amazon ECR Public Gallery. For\n            more information, see <a>RepositoryCatalogDataInput</a>.</p>\n         </note>"
          }
        },
        "logoUrl": {
          "target": "com.amazonaws.ecrpublic#ResourceUrl",
          "traits": {
            "smithy.api#documentation": "<p>The URL that contains the logo that's associated with the repository.</p>"
          }
        },
        "aboutText": {
          "target": "com.amazonaws.ecrpublic#AboutText",
          "traits": {
            "smithy.api#documentation": "<p>The longform description of the contents of the repository. This text appears in the\n         repository details on the Amazon ECR Public Gallery.</p>"
          }
        },
        "usageText": {
          "target": "com.amazonaws.ecrpublic#UsageText",
          "traits": {
            "smithy.api#documentation": "<p>The longform usage details of the contents of the repository. The usage text provides\n         context for users of the repository.</p>"
          }
        },
        "marketplaceCertified": {
          "target": "com.amazonaws.ecrpublic#MarketplaceCertified",
          "traits": {
            "smithy.api#documentation": "<p>Indicates whether the repository is certified by Amazon Web Services Marketplace.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The catalog data for a repository. This data is publicly visible in the\n         Amazon ECR Public Gallery.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryCatalogDataInput": {
      "type": "structure",
      "members": {
        "description": {
          "target": "com.amazonaws.ecrpublic#RepositoryDescription",
          "traits": {
            "smithy.api#documentation": "<p>A short description of the contents of the repository. This text appears in both the\n         image details and also when searching for repositories on the Amazon ECR Public Gallery.</p>"
          }
        },
        "architectures": {
          "target": "com.amazonaws.ecrpublic#ArchitectureList",
          "traits": {
            "smithy.api#documentation": "<p>The system architecture that the images in the repository are compatible with. On the\n         Amazon ECR Public Gallery, the following supported architectures appear as badges on the\n         repository and are used as search filters.</p>\n         <note>\n            <p>If an unsupported tag is added to your repository catalog data, it's associated with\n            the repository and can be retrieved using the API but isn't discoverable in the\n            Amazon ECR Public Gallery.</p>\n         </note>\n         <ul>\n            <li>\n               <p>\n                  <code>ARM</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>ARM 64</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>x86</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>x86-64</code>\n               </p>\n            </li>\n         </ul>"
          }
        },
        "operatingSystems": {
          "target": "com.amazonaws.ecrpublic#OperatingSystemList",
          "traits": {
            "smithy.api#documentation": "<p>The operating systems that the images in the repository are compatible with. On the\n         Amazon ECR Public Gallery, the following supported operating systems appear as badges on the\n         repository and are used as search filters.</p>\n         <note>\n            <p>If an unsupported tag is added to your repository catalog data, it's associated with\n            the repository and can be retrieved using the API but isn't discoverable in the\n            Amazon ECR Public Gallery.</p>\n         </note>\n         <ul>\n            <li>\n               <p>\n                  <code>Linux</code>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <code>Windows</code>\n               </p>\n            </li>\n         </ul>"
          }
        },
        "logoImageBlob": {
          "target": "com.amazonaws.ecrpublic#LogoImageBlob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded repository logo payload.</p>\n         <note>\n            <p>The repository logo is only publicly visible in the Amazon ECR Public Gallery for verified\n            accounts.</p>\n         </note>"
          }
        },
        "aboutText": {
          "target": "com.amazonaws.ecrpublic#AboutText",
          "traits": {
            "smithy.api#documentation": "<p>A detailed description of the contents of the repository. It's publicly visible in the\n         Amazon ECR Public Gallery. The text must be in markdown format.</p>"
          }
        },
        "usageText": {
          "target": "com.amazonaws.ecrpublic#UsageText",
          "traits": {
            "smithy.api#documentation": "<p>Detailed information about how to use the contents of the repository. It's publicly\n         visible in the Amazon ECR Public Gallery. The usage text provides context, support information,\n         and additional usage details for users of the repository. The text must be in markdown\n         format.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>An object that contains the catalog data for a repository. This data is publicly visible\n         in the Amazon ECR Public Gallery.</p>"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryCatalogDataNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The repository catalog data doesn't exist.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryDescription": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.ecrpublic#RepositoryList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#Repository"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 2,
          "max": 205
        },
        "smithy.api#pattern": "^(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*$"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryNameList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#RepositoryName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 100
        }
      }
    },
    "com.amazonaws.ecrpublic#RepositoryNotEmptyException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository contains images. To delete a repository that contains images,\n         you must force the deletion with the <code>force</code> parameter.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository can't be found. Check the spelling of the specified repository\n         and ensure that you're performing operations on the correct registry.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryPolicyNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The specified repository and registry combination doesn't have an associated repository\n         policy.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#RepositoryPolicyText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 10240
        }
      }
    },
    "com.amazonaws.ecrpublic#ResourceUrl": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 2048
        }
      }
    },
    "com.amazonaws.ecrpublic#ServerException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>These errors are usually caused by a server-side issue.</p>",
        "smithy.api#error": "server"
      }
    },
    "com.amazonaws.ecrpublic#SetRepositoryPolicy": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#SetRepositoryPolicyRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#SetRepositoryPolicyResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Applies a repository policy to the specified public repository to control access\n         permissions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html\">Amazon ECR Repository\n            Policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>"
      }
    },
    "com.amazonaws.ecrpublic#SetRepositoryPolicyRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID that's associated with the registry that contains the repository.\n         If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository to receive the policy.</p>",
            "smithy.api#required": {}
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text to apply to the repository. For more information, see\n            <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html\">Amazon ECR Repository\n            Policies</a> in the <i>Amazon Elastic Container Registry User Guide</i>.</p>",
            "smithy.api#required": {}
          }
        },
        "force": {
          "target": "com.amazonaws.ecrpublic#ForceFlag",
          "traits": {
            "smithy.api#default": false,
            "smithy.api#documentation": "<p>If the policy that you want to set on a repository policy would prevent you from setting\n         another policy in the future, you must force the <a>SetRepositoryPolicy</a>\n         operation. This prevents accidental repository lockouts.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#SetRepositoryPolicyResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID that's associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name that's associated with the request.</p>"
          }
        },
        "policyText": {
          "target": "com.amazonaws.ecrpublic#RepositoryPolicyText",
          "traits": {
            "smithy.api#documentation": "<p>The JSON repository policy text that's applied to the repository.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#SpencerFrontendService": {
      "type": "service",
      "version": "2020-10-30",
      "operations": [
        {
          "target": "com.amazonaws.ecrpublic#BatchCheckLayerAvailability"
        },
        {
          "target": "com.amazonaws.ecrpublic#BatchDeleteImage"
        },
        {
          "target": "com.amazonaws.ecrpublic#CompleteLayerUpload"
        },
        {
          "target": "com.amazonaws.ecrpublic#CreateRepository"
        },
        {
          "target": "com.amazonaws.ecrpublic#DeleteRepository"
        },
        {
          "target": "com.amazonaws.ecrpublic#DeleteRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecrpublic#DescribeImages"
        },
        {
          "target": "com.amazonaws.ecrpublic#DescribeImageTags"
        },
        {
          "target": "com.amazonaws.ecrpublic#DescribeRegistries"
        },
        {
          "target": "com.amazonaws.ecrpublic#DescribeRepositories"
        },
        {
          "target": "com.amazonaws.ecrpublic#GetAuthorizationToken"
        },
        {
          "target": "com.amazonaws.ecrpublic#GetRegistryCatalogData"
        },
        {
          "target": "com.amazonaws.ecrpublic#GetRepositoryCatalogData"
        },
        {
          "target": "com.amazonaws.ecrpublic#GetRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecrpublic#InitiateLayerUpload"
        },
        {
          "target": "com.amazonaws.ecrpublic#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.ecrpublic#PutImage"
        },
        {
          "target": "com.amazonaws.ecrpublic#PutRegistryCatalogData"
        },
        {
          "target": "com.amazonaws.ecrpublic#PutRepositoryCatalogData"
        },
        {
          "target": "com.amazonaws.ecrpublic#SetRepositoryPolicy"
        },
        {
          "target": "com.amazonaws.ecrpublic#TagResource"
        },
        {
          "target": "com.amazonaws.ecrpublic#UntagResource"
        },
        {
          "target": "com.amazonaws.ecrpublic#UploadLayerPart"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "ECR PUBLIC",
          "arnNamespace": "ecr-public",
          "cloudFormationName": "ECRPUBLIC",
          "cloudTrailEventSource": "ecrpublic.amazonaws.com",
          "endpointPrefix": "api.ecr-public"
        },
        "aws.auth#sigv4": {
          "name": "ecr-public"
        },
        "aws.protocols#awsJson1_1": {},
        "smithy.api#documentation": "<fullname>Amazon Elastic Container Registry Public</fullname>\n         <p>Amazon Elastic Container Registry Public (Amazon ECR Public) is a managed container image registry service. Amazon ECR provides both\n         public and private registries to host your container images. You can use the Docker CLI or\n         your preferred client to push, pull, and manage images. Amazon ECR provides a secure, scalable,\n         and reliable registry for your Docker or Open Container Initiative (OCI) images. Amazon ECR\n         supports public repositories with this API. For information about the Amazon ECR API for private\n         repositories, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/APIReference/Welcome.html\">Amazon Elastic Container Registry API Reference</a>.</p>",
        "smithy.api#title": "Amazon Elastic Container Registry Public",
        "smithy.api#xmlNamespace": {
          "uri": "http://ecr-public.amazonaws.com/doc/2020-12-02/"
        },
        "smithy.rules#endpointRuleSet": {
          "version": "1.0",
          "parameters": {
            "Region": {
              "builtIn": "AWS::Region",
              "required": false,
              "documentation": "The AWS region used to dispatch the request.",
              "type": "String"
            },
            "UseDualStack": {
              "builtIn": "AWS::UseDualStack",
              "required": true,
              "default": false,
              "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
              "type": "Boolean"
            },
            "UseFIPS": {
              "builtIn": "AWS::UseFIPS",
              "required": true,
              "default": false,
              "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
              "type": "Boolean"
            },
            "Endpoint": {
              "builtIn": "SDK::Endpoint",
              "required": false,
              "documentation": "Override the endpoint used to send this request",
              "type": "String"
            }
          },
          "rules": [
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Endpoint"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseFIPS"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [
                    {
                      "fn": "booleanEquals",
                      "argv": [
                        {
                          "ref": "UseDualStack"
                        },
                        true
                      ]
                    }
                  ],
                  "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                  "type": "error"
                },
                {
                  "conditions": [],
                  "endpoint": {
                    "url": {
                      "ref": "Endpoint"
                    },
                    "properties": {},
                    "headers": {}
                  },
                  "type": "endpoint"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [
                {
                  "fn": "isSet",
                  "argv": [
                    {
                      "ref": "Region"
                    }
                  ]
                }
              ],
              "rules": [
                {
                  "conditions": [
                    {
                      "fn": "aws.partition",
                      "argv": [
                        {
                          "ref": "Region"
                        }
                      ],
                      "assign": "PartitionResult"
                    }
                  ],
                  "rules": [
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        },
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                }
                              ]
                            },
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://api.ecr-public-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseFIPS"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsFIPS"
                                  ]
                                },
                                true
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://api.ecr-public-fips.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "FIPS is enabled but this partition does not support FIPS",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [
                        {
                          "fn": "booleanEquals",
                          "argv": [
                            {
                              "ref": "UseDualStack"
                            },
                            true
                          ]
                        }
                      ],
                      "rules": [
                        {
                          "conditions": [
                            {
                              "fn": "booleanEquals",
                              "argv": [
                                true,
                                {
                                  "fn": "getAttr",
                                  "argv": [
                                    {
                                      "ref": "PartitionResult"
                                    },
                                    "supportsDualStack"
                                  ]
                                }
                              ]
                            }
                          ],
                          "rules": [
                            {
                              "conditions": [],
                              "endpoint": {
                                "url": "https://api.ecr-public.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                "properties": {},
                                "headers": {}
                              },
                              "type": "endpoint"
                            }
                          ],
                          "type": "tree"
                        },
                        {
                          "conditions": [],
                          "error": "DualStack is enabled but this partition does not support DualStack",
                          "type": "error"
                        }
                      ],
                      "type": "tree"
                    },
                    {
                      "conditions": [],
                      "endpoint": {
                        "url": "https://api.ecr-public.{Region}.{PartitionResult#dnsSuffix}",
                        "properties": {},
                        "headers": {}
                      },
                      "type": "endpoint"
                    }
                  ],
                  "type": "tree"
                }
              ],
              "type": "tree"
            },
            {
              "conditions": [],
              "error": "Invalid Configuration: Missing Region",
              "type": "error"
            }
          ]
        },
        "smithy.rules#endpointTests": {
          "testCases": [
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.cn-north-1.api.amazonwebservices.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region cn-north-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.cn-north-1.amazonaws.com.cn"
                }
              },
              "params": {
                "Region": "cn-north-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-gov-east-1.api.aws"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-gov-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-gov-east-1.amazonaws.com"
                }
              },
              "params": {
                "Region": "us-gov-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-iso-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-iso-east-1.c2s.ic.gov"
                }
              },
              "params": {
                "Region": "us-iso-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack enabled",
              "expect": {
                "error": "FIPS and DualStack are enabled, but this partition does not support one or both"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS enabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public-fips.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": true,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack enabled",
              "expect": {
                "error": "DualStack is enabled but this partition does not support DualStack"
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": true
              }
            },
            {
              "documentation": "For region us-isob-east-1 with FIPS disabled and DualStack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://api.ecr-public.us-isob-east-1.sc2s.sgov.gov"
                }
              },
              "params": {
                "Region": "us-isob-east-1",
                "UseFIPS": false,
                "UseDualStack": false
              }
            },
            {
              "documentation": "For custom endpoint with region set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with region not set and fips disabled and dualstack disabled",
              "expect": {
                "endpoint": {
                  "url": "https://example.com"
                }
              },
              "params": {
                "UseFIPS": false,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips enabled and dualstack disabled",
              "expect": {
                "error": "Invalid Configuration: FIPS and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": true,
                "UseDualStack": false,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "For custom endpoint with fips disabled and dualstack enabled",
              "expect": {
                "error": "Invalid Configuration: Dualstack and custom endpoint are not supported"
              },
              "params": {
                "Region": "us-east-1",
                "UseFIPS": false,
                "UseDualStack": true,
                "Endpoint": "https://example.com"
              }
            },
            {
              "documentation": "Missing region",
              "expect": {
                "error": "Invalid Configuration: Missing Region"
              }
            }
          ],
          "version": "1.0"
        }
      }
    },
    "com.amazonaws.ecrpublic#Tag": {
      "type": "structure",
      "members": {
        "Key": {
          "target": "com.amazonaws.ecrpublic#TagKey",
          "traits": {
            "smithy.api#documentation": "<p>One part of a key-value pair that make up a tag. A <code>key</code> is a general label\n         that acts like a category for more specific tag values.</p>"
          }
        },
        "Value": {
          "target": "com.amazonaws.ecrpublic#TagValue",
          "traits": {
            "smithy.api#documentation": "<p>The optional part of a key-value pair that make up a tag. A <code>value</code> acts as a\n         descriptor within a tag category (key).</p>"
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The metadata that you apply to a resource to help you categorize and organize them. Each\n         tag consists of a key and an optional value. You define both. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>"
      }
    },
    "com.amazonaws.ecrpublic#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.ecrpublic#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.ecrpublic#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.ecrpublic#Tag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 200
        }
      }
    },
    "com.amazonaws.ecrpublic#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#TooManyTagsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Associates the specified tags to a resource with the specified <code>resourceArn</code>.\n         If existing tags on a resource aren't specified in the request parameters, they aren't\n         changed. When a resource is deleted, the tags associated with that resource are also\n         deleted.</p>"
      }
    },
    "com.amazonaws.ecrpublic#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecrpublic#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource to add tags to. Currently, the supported\n         resource is an Amazon ECR Public repository.</p>",
            "smithy.api#required": {}
          }
        },
        "tags": {
          "target": "com.amazonaws.ecrpublic#TagList",
          "traits": {
            "smithy.api#documentation": "<p>The tags to add to the resource. A tag is an array of key-value pairs.\n         Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#TagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 256
        }
      }
    },
    "com.amazonaws.ecrpublic#TooManyTagsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The list of tags on the repository is over the limit. The maximum number of tags that\n         can be applied to a repository is 50.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#UnsupportedCommandException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The action isn't supported in this Region.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidTagParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#TooManyTagsException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Deletes specified tags from a resource.</p>"
      }
    },
    "com.amazonaws.ecrpublic#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.ecrpublic#Arn",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Resource Name (ARN) of the resource to delete tags from. Currently, the supported resource is\n         an Amazon ECR Public repository.</p>",
            "smithy.api#required": {}
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.ecrpublic#TagKeyList",
          "traits": {
            "smithy.api#documentation": "<p>The keys of the tags to be removed.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#UntagResourceResponse": {
      "type": "structure",
      "members": {},
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#UploadId": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      }
    },
    "com.amazonaws.ecrpublic#UploadLayerPart": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.ecrpublic#UploadLayerPartRequest"
      },
      "output": {
        "target": "com.amazonaws.ecrpublic#UploadLayerPartResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.ecrpublic#InvalidLayerPartException"
        },
        {
          "target": "com.amazonaws.ecrpublic#InvalidParameterException"
        },
        {
          "target": "com.amazonaws.ecrpublic#LimitExceededException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RegistryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#RepositoryNotFoundException"
        },
        {
          "target": "com.amazonaws.ecrpublic#ServerException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UnsupportedCommandException"
        },
        {
          "target": "com.amazonaws.ecrpublic#UploadNotFoundException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "<p>Uploads an image layer part to Amazon ECR.</p>\n         <p>When an image is pushed, each new image layer is uploaded in parts. The maximum size of\n         each image layer part can be 20971520 bytes (about 20MB). The UploadLayerPart API is called\n         once for each new image layer part.</p>\n         <note>\n            <p>This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p>\n         </note>"
      }
    },
    "com.amazonaws.ecrpublic#UploadLayerPartRequest": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryIdOrAlias",
          "traits": {
            "smithy.api#documentation": "<p>The Amazon Web Services account ID, or registry alias, that's associated with the registry that you're\n         uploading layer parts to. If you do not specify a registry, the default public registry is assumed.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The name of the repository that you're uploading layer parts to.</p>",
            "smithy.api#required": {}
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to\n         associate with the layer part upload.</p>",
            "smithy.api#required": {}
          }
        },
        "partFirstByte": {
          "target": "com.amazonaws.ecrpublic#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The position of the first byte of the layer part witin the overall image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "partLastByte": {
          "target": "com.amazonaws.ecrpublic#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The position of the last byte of the layer part within the overall image layer.</p>",
            "smithy.api#required": {}
          }
        },
        "layerPartBlob": {
          "target": "com.amazonaws.ecrpublic#LayerPartBlob",
          "traits": {
            "smithy.api#documentation": "<p>The base64-encoded layer part payload.</p>",
            "smithy.api#required": {}
          }
        }
      },
      "traits": {
        "smithy.api#input": {}
      }
    },
    "com.amazonaws.ecrpublic#UploadLayerPartResponse": {
      "type": "structure",
      "members": {
        "registryId": {
          "target": "com.amazonaws.ecrpublic#RegistryId",
          "traits": {
            "smithy.api#documentation": "<p>The registry ID that's associated with the request.</p>"
          }
        },
        "repositoryName": {
          "target": "com.amazonaws.ecrpublic#RepositoryName",
          "traits": {
            "smithy.api#documentation": "<p>The repository name that's associated with the request.</p>"
          }
        },
        "uploadId": {
          "target": "com.amazonaws.ecrpublic#UploadId",
          "traits": {
            "smithy.api#documentation": "<p>The upload ID that's associated with the request.</p>"
          }
        },
        "lastByteReceived": {
          "target": "com.amazonaws.ecrpublic#PartSize",
          "traits": {
            "smithy.api#documentation": "<p>The integer value of the last byte that's received in the request.</p>"
          }
        }
      },
      "traits": {
        "smithy.api#output": {}
      }
    },
    "com.amazonaws.ecrpublic#UploadNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.ecrpublic#ExceptionMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "<p>The upload can't be found, or the specified upload ID isn't valid for this\n         repository.</p>",
        "smithy.api#error": "client"
      }
    },
    "com.amazonaws.ecrpublic#Url": {
      "type": "string"
    },
    "com.amazonaws.ecrpublic#UsageText": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 25600
        }
      }
    }
  }
}
