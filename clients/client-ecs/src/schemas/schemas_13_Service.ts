// smithy-typescript generated code
import { list, op, struct } from "@smithy/core/schema";

import {
  _AC,
  _aCd,
  _aPAA,
  _aTGA,
  _aZR,
  _cA,
  _cAli,
  _cAr,
  _cB,
  _cDC,
  _cl,
  _cNo,
  _cPon,
  _cPS,
  _CSR,
  _CSr,
  _CSRr,
  _cT,
  _D,
  _dA,
  _dC,
  _DCe,
  _dCe,
  _dCep,
  _Dep,
  _dep,
  _DES,
  _dNi,
  _dNn,
  _DSe,
  _DSRes,
  _DSResc,
  _eEC,
  _eECSMT,
  _eI,
  _ena,
  _enc,
  _ev,
  _exa,
  _fa,
  _fES,
  _fT,
  _fTi,
  _hCGPS,
  _he,
  _i,
  _iCA,
  _inc,
  _io,
  _iPO,
  _iTS,
  _kK,
  _kKI,
  _LB,
  _lB,
  _lBN,
  _LBo,
  _lC,
  _lT,
  _m,
  _mEBSV,
  _n,
  _na,
  _nC,
  _pC,
  _pCe,
  _pF,
  _pLR,
  _pN,
  _po,
  _pRTS,
  _pS,
  _pTr,
  _pV,
  _rA,
  _rAeg,
  _rCu,
  _ro,
  _rS,
  _rSR,
  _S,
  _s,
  _sAe,
  _sB,
  _sc,
  _SCC,
  _sCC,
  _SCCA,
  _SCCAL,
  _sCR,
  _SCS,
  _SCSL,
  _SCSR,
  _SCSRL,
  _SCTC,
  _SCTCA,
  _SCTTHMR,
  _SCTTHR,
  _SCTTR,
  _SEe,
  _SEer,
  _Ser,
  _ser,
  _Serv,
  _serv,
  _sI,
  _sIGB,
  _SMEBSVC,
  _sN,
  _SR,
  _sRe,
  _SRer,
  _sS,
  _sSA,
  _sSt,
  _SVC,
  _SVCe,
  _t,
  _ta,
  _TC,
  _tD,
  _tGA,
  _thr,
  _ti,
  _tl,
  _tLR,
  _TS,
  _TSa,
  _tSA,
  _tSa,
  _tSag,
  _tTR,
  _uA,
  _un,
  _v,
  _vCo,
  _vIR,
  _VLC,
  _vLC,
  _VLCp,
  _vT,
  CapacityProviderStrategy,
  Failures,
  n0,
  Tags,
} from "./schemas_0";
import { LogConfiguration } from "./schemas_5_Service";
import {
  DeploymentConfiguration,
  EBSTagSpecifications,
  PlacementConstraints,
  PlacementStrategies,
} from "./schemas_7_Service";
import { NetworkConfiguration } from "./schemas_16_Task";

/* eslint no-var: 0 */

export var AdvancedConfiguration = struct(n0, _AC, 0, [_aTGA, _pLR, _tLR, _rA], [0, 0, 0, 0]);
export var CreateServiceRequest = struct(
  n0,
  _CSR,
  0,
  [
    _cl,
    _sN,
    _tD,
    _aZR,
    _lB,
    _sRe,
    _dC,
    _cT,
    _lT,
    _cPS,
    _pV,
    _ro,
    _dCe,
    _pC,
    _pS,
    _nC,
    _hCGPS,
    _sS,
    _dCep,
    _ta,
    _eECSMT,
    _pTr,
    _eEC,
    _sCC,
    _vCo,
    _vLC,
  ],
  [
    0,
    0,
    0,
    0,
    () => LoadBalancers,
    () => ServiceRegistries,
    1,
    0,
    0,
    () => CapacityProviderStrategy,
    0,
    0,
    () => DeploymentConfiguration,
    () => PlacementConstraints,
    () => PlacementStrategies,
    () => NetworkConfiguration,
    1,
    0,
    () => DeploymentController,
    () => Tags,
    2,
    0,
    2,
    () => ServiceConnectConfiguration,
    () => ServiceVolumeConfigurations,
    () => VpcLatticeConfigurations,
  ]
);
export var CreateServiceResponse = struct(n0, _CSRr, 0, [_ser], [() => Service]);
export var Deployment = struct(
  n0,
  _D,
  0,
  [_i, _s, _tD, _dC, _pCe, _rCu, _fT, _cAr, _uA, _cPS, _lT, _pV, _pF, _nC, _rS, _rSR, _sCC, _sCR, _vCo, _fES, _vLC],
  [
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    4,
    4,
    () => CapacityProviderStrategy,
    0,
    0,
    0,
    () => NetworkConfiguration,
    0,
    0,
    () => ServiceConnectConfiguration,
    () => ServiceConnectServiceResourceList,
    () => ServiceVolumeConfigurations,
    () => DeploymentEphemeralStorage,
    () => VpcLatticeConfigurations,
  ]
);
export var DeploymentController = struct(n0, _DCe, 0, [_t], [0]);
export var DeploymentEphemeralStorage = struct(n0, _DES, 0, [_kKI], [0]);
export var DescribeServicesRequest = struct(n0, _DSRes, 0, [_cl, _serv, _inc], [0, 64 | 0, 64 | 0]);
export var DescribeServicesResponse = struct(n0, _DSResc, 0, [_serv, _fa], [() => Services, () => Failures]);
export var LoadBalancer = struct(
  n0,
  _LB,
  0,
  [_tGA, _lBN, _cNo, _cPon, _aCd],
  [0, 0, 0, 1, () => AdvancedConfiguration]
);
export var Scale = struct(n0, _S, 0, [_v, _un], [1, 0]);
export var Service = struct(
  n0,
  _Ser,
  0,
  [
    _sAe,
    _sN,
    _cA,
    _lB,
    _sRe,
    _s,
    _dC,
    _rCu,
    _pCe,
    _lT,
    _cPS,
    _pV,
    _pF,
    _tD,
    _dCe,
    _tSa,
    _dep,
    _rA,
    _ev,
    _cAr,
    _pC,
    _pS,
    _nC,
    _hCGPS,
    _sS,
    _dCep,
    _ta,
    _cB,
    _eECSMT,
    _pTr,
    _eEC,
    _aZR,
  ],
  [
    0,
    0,
    0,
    () => LoadBalancers,
    () => ServiceRegistries,
    0,
    1,
    1,
    1,
    0,
    () => CapacityProviderStrategy,
    0,
    0,
    0,
    () => DeploymentConfiguration,
    () => TaskSets,
    () => Deployments,
    0,
    () => ServiceEvents,
    4,
    () => PlacementConstraints,
    () => PlacementStrategies,
    () => NetworkConfiguration,
    1,
    0,
    () => DeploymentController,
    () => Tags,
    0,
    2,
    0,
    2,
    0,
  ]
);
export var ServiceConnectClientAlias = struct(
  n0,
  _SCCA,
  0,
  [_po, _dNn, _tTR],
  [1, 0, () => ServiceConnectTestTrafficRules]
);
export var ServiceConnectConfiguration = struct(
  n0,
  _SCC,
  0,
  [_ena, _na, _serv, _lC],
  [2, 0, () => ServiceConnectServiceList, () => LogConfiguration]
);
export var ServiceConnectService = struct(
  n0,
  _SCS,
  0,
  [_pN, _dNi, _cAli, _iPO, _ti, _tl],
  [0, 0, () => ServiceConnectClientAliasList, 1, () => TimeoutConfiguration, () => ServiceConnectTlsConfiguration]
);
export var ServiceConnectServiceResource = struct(n0, _SCSR, 0, [_dNi, _dA], [0, 0]);
export var ServiceConnectTestTrafficHeaderMatchRules = struct(n0, _SCTTHMR, 0, [_exa], [0]);
export var ServiceConnectTestTrafficHeaderRules = struct(
  n0,
  _SCTTHR,
  0,
  [_n, _v],
  [0, () => ServiceConnectTestTrafficHeaderMatchRules]
);
export var ServiceConnectTestTrafficRules = struct(n0, _SCTTR, 0, [_he], [() => ServiceConnectTestTrafficHeaderRules]);
export var ServiceConnectTlsCertificateAuthority = struct(n0, _SCTCA, 0, [_aPAA], [0]);
export var ServiceConnectTlsConfiguration = struct(
  n0,
  _SCTC,
  0,
  [_iCA, _kK, _rA],
  [() => ServiceConnectTlsCertificateAuthority, 0, 0]
);
export var ServiceEvent = struct(n0, _SEe, 0, [_i, _cAr, _m], [0, 4, 0]);
export var ServiceManagedEBSVolumeConfiguration = struct(
  n0,
  _SMEBSVC,
  0,
  [_enc, _kKI, _vT, _sIGB, _sI, _vIR, _io, _thr, _tSag, _rA, _fTi],
  [2, 0, 0, 1, 0, 1, 1, 1, () => EBSTagSpecifications, 0, 0]
);
export var ServiceRegistry = struct(n0, _SR, 0, [_rAeg, _po, _cNo, _cPon], [0, 1, 0, 1]);
export var ServiceVolumeConfiguration = struct(
  n0,
  _SVC,
  0,
  [_n, _mEBSV],
  [0, () => ServiceManagedEBSVolumeConfiguration]
);
export var TaskSet = struct(
  n0,
  _TS,
  0,
  [
    _i,
    _tSA,
    _sAe,
    _cA,
    _sB,
    _eI,
    _s,
    _tD,
    _cDC,
    _pCe,
    _rCu,
    _cAr,
    _uA,
    _lT,
    _cPS,
    _pV,
    _pF,
    _nC,
    _lB,
    _sRe,
    _sc,
    _sSt,
    _sSA,
    _ta,
    _fES,
  ],
  [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    4,
    4,
    0,
    () => CapacityProviderStrategy,
    0,
    0,
    () => NetworkConfiguration,
    () => LoadBalancers,
    () => ServiceRegistries,
    () => Scale,
    0,
    4,
    () => Tags,
    () => DeploymentEphemeralStorage,
  ]
);
export var TimeoutConfiguration = struct(n0, _TC, 0, [_iTS, _pRTS], [1, 1]);
export var VpcLatticeConfiguration = struct(n0, _VLC, 0, [_rA, _tGA, _pN], [0, 0, 0]);
export var Deployments = list(n0, _Dep, 0, () => Deployment);
export var LoadBalancers = list(n0, _LBo, 0, () => LoadBalancer);
export var ServiceConnectClientAliasList = list(n0, _SCCAL, 0, () => ServiceConnectClientAlias);
export var ServiceConnectServiceList = list(n0, _SCSL, 0, () => ServiceConnectService);
export var ServiceConnectServiceResourceList = list(n0, _SCSRL, 0, () => ServiceConnectServiceResource);
export var ServiceEvents = list(n0, _SEer, 0, () => ServiceEvent);
export var ServiceFieldList = 64 | 0;

export var ServiceRegistries = list(n0, _SRer, 0, () => ServiceRegistry);
export var Services = list(n0, _Serv, 0, () => Service);
export var ServiceVolumeConfigurations = list(n0, _SVCe, 0, () => ServiceVolumeConfiguration);
export var TaskSets = list(n0, _TSa, 0, () => TaskSet);
export var VpcLatticeConfigurations = list(n0, _VLCp, 0, () => VpcLatticeConfiguration);
export var CreateService = op(
  n0,
  _CSr,
  0,
  () => CreateServiceRequest,
  () => CreateServiceResponse
);
export var DescribeServices = op(
  n0,
  _DSe,
  0,
  () => DescribeServicesRequest,
  () => DescribeServicesResponse
);
