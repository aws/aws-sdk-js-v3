// smithy-typescript generated code
import { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from "@aws-sdk/protocol-http";
import {
  decorateServiceException as __decorateServiceException,
  expectBoolean as __expectBoolean,
  expectInt32 as __expectInt32,
  expectLong as __expectLong,
  expectNonNull as __expectNonNull,
  expectObject as __expectObject,
  expectString as __expectString,
  extendedEncodeURIComponent as __extendedEncodeURIComponent,
  limitedParseDouble as __limitedParseDouble,
  map as __map,
  parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset,
  resolvedPath as __resolvedPath,
  serializeFloat as __serializeFloat,
  throwDefaultError,
} from "@aws-sdk/smithy-client";
import {
  Endpoint as __Endpoint,
  ResponseMetadata as __ResponseMetadata,
  SerdeContext as __SerdeContext,
} from "@aws-sdk/types";

import {
  AcceptAdministratorInvitationCommandInput,
  AcceptAdministratorInvitationCommandOutput,
} from "../commands/AcceptAdministratorInvitationCommand";
import { AcceptInvitationCommandInput, AcceptInvitationCommandOutput } from "../commands/AcceptInvitationCommand";
import {
  BatchDisableStandardsCommandInput,
  BatchDisableStandardsCommandOutput,
} from "../commands/BatchDisableStandardsCommand";
import {
  BatchEnableStandardsCommandInput,
  BatchEnableStandardsCommandOutput,
} from "../commands/BatchEnableStandardsCommand";
import {
  BatchGetSecurityControlsCommandInput,
  BatchGetSecurityControlsCommandOutput,
} from "../commands/BatchGetSecurityControlsCommand";
import {
  BatchGetStandardsControlAssociationsCommandInput,
  BatchGetStandardsControlAssociationsCommandOutput,
} from "../commands/BatchGetStandardsControlAssociationsCommand";
import {
  BatchImportFindingsCommandInput,
  BatchImportFindingsCommandOutput,
} from "../commands/BatchImportFindingsCommand";
import {
  BatchUpdateFindingsCommandInput,
  BatchUpdateFindingsCommandOutput,
} from "../commands/BatchUpdateFindingsCommand";
import {
  BatchUpdateStandardsControlAssociationsCommandInput,
  BatchUpdateStandardsControlAssociationsCommandOutput,
} from "../commands/BatchUpdateStandardsControlAssociationsCommand";
import { CreateActionTargetCommandInput, CreateActionTargetCommandOutput } from "../commands/CreateActionTargetCommand";
import {
  CreateFindingAggregatorCommandInput,
  CreateFindingAggregatorCommandOutput,
} from "../commands/CreateFindingAggregatorCommand";
import { CreateInsightCommandInput, CreateInsightCommandOutput } from "../commands/CreateInsightCommand";
import { CreateMembersCommandInput, CreateMembersCommandOutput } from "../commands/CreateMembersCommand";
import { DeclineInvitationsCommandInput, DeclineInvitationsCommandOutput } from "../commands/DeclineInvitationsCommand";
import { DeleteActionTargetCommandInput, DeleteActionTargetCommandOutput } from "../commands/DeleteActionTargetCommand";
import {
  DeleteFindingAggregatorCommandInput,
  DeleteFindingAggregatorCommandOutput,
} from "../commands/DeleteFindingAggregatorCommand";
import { DeleteInsightCommandInput, DeleteInsightCommandOutput } from "../commands/DeleteInsightCommand";
import { DeleteInvitationsCommandInput, DeleteInvitationsCommandOutput } from "../commands/DeleteInvitationsCommand";
import { DeleteMembersCommandInput, DeleteMembersCommandOutput } from "../commands/DeleteMembersCommand";
import {
  DescribeActionTargetsCommandInput,
  DescribeActionTargetsCommandOutput,
} from "../commands/DescribeActionTargetsCommand";
import { DescribeHubCommandInput, DescribeHubCommandOutput } from "../commands/DescribeHubCommand";
import {
  DescribeOrganizationConfigurationCommandInput,
  DescribeOrganizationConfigurationCommandOutput,
} from "../commands/DescribeOrganizationConfigurationCommand";
import { DescribeProductsCommandInput, DescribeProductsCommandOutput } from "../commands/DescribeProductsCommand";
import { DescribeStandardsCommandInput, DescribeStandardsCommandOutput } from "../commands/DescribeStandardsCommand";
import {
  DescribeStandardsControlsCommandInput,
  DescribeStandardsControlsCommandOutput,
} from "../commands/DescribeStandardsControlsCommand";
import {
  DisableImportFindingsForProductCommandInput,
  DisableImportFindingsForProductCommandOutput,
} from "../commands/DisableImportFindingsForProductCommand";
import {
  DisableOrganizationAdminAccountCommandInput,
  DisableOrganizationAdminAccountCommandOutput,
} from "../commands/DisableOrganizationAdminAccountCommand";
import { DisableSecurityHubCommandInput, DisableSecurityHubCommandOutput } from "../commands/DisableSecurityHubCommand";
import {
  DisassociateFromAdministratorAccountCommandInput,
  DisassociateFromAdministratorAccountCommandOutput,
} from "../commands/DisassociateFromAdministratorAccountCommand";
import {
  DisassociateFromMasterAccountCommandInput,
  DisassociateFromMasterAccountCommandOutput,
} from "../commands/DisassociateFromMasterAccountCommand";
import {
  DisassociateMembersCommandInput,
  DisassociateMembersCommandOutput,
} from "../commands/DisassociateMembersCommand";
import {
  EnableImportFindingsForProductCommandInput,
  EnableImportFindingsForProductCommandOutput,
} from "../commands/EnableImportFindingsForProductCommand";
import {
  EnableOrganizationAdminAccountCommandInput,
  EnableOrganizationAdminAccountCommandOutput,
} from "../commands/EnableOrganizationAdminAccountCommand";
import { EnableSecurityHubCommandInput, EnableSecurityHubCommandOutput } from "../commands/EnableSecurityHubCommand";
import {
  GetAdministratorAccountCommandInput,
  GetAdministratorAccountCommandOutput,
} from "../commands/GetAdministratorAccountCommand";
import {
  GetEnabledStandardsCommandInput,
  GetEnabledStandardsCommandOutput,
} from "../commands/GetEnabledStandardsCommand";
import {
  GetFindingAggregatorCommandInput,
  GetFindingAggregatorCommandOutput,
} from "../commands/GetFindingAggregatorCommand";
import { GetFindingsCommandInput, GetFindingsCommandOutput } from "../commands/GetFindingsCommand";
import { GetInsightResultsCommandInput, GetInsightResultsCommandOutput } from "../commands/GetInsightResultsCommand";
import { GetInsightsCommandInput, GetInsightsCommandOutput } from "../commands/GetInsightsCommand";
import {
  GetInvitationsCountCommandInput,
  GetInvitationsCountCommandOutput,
} from "../commands/GetInvitationsCountCommand";
import { GetMasterAccountCommandInput, GetMasterAccountCommandOutput } from "../commands/GetMasterAccountCommand";
import { GetMembersCommandInput, GetMembersCommandOutput } from "../commands/GetMembersCommand";
import { InviteMembersCommandInput, InviteMembersCommandOutput } from "../commands/InviteMembersCommand";
import {
  ListEnabledProductsForImportCommandInput,
  ListEnabledProductsForImportCommandOutput,
} from "../commands/ListEnabledProductsForImportCommand";
import {
  ListFindingAggregatorsCommandInput,
  ListFindingAggregatorsCommandOutput,
} from "../commands/ListFindingAggregatorsCommand";
import { ListInvitationsCommandInput, ListInvitationsCommandOutput } from "../commands/ListInvitationsCommand";
import { ListMembersCommandInput, ListMembersCommandOutput } from "../commands/ListMembersCommand";
import {
  ListOrganizationAdminAccountsCommandInput,
  ListOrganizationAdminAccountsCommandOutput,
} from "../commands/ListOrganizationAdminAccountsCommand";
import {
  ListSecurityControlDefinitionsCommandInput,
  ListSecurityControlDefinitionsCommandOutput,
} from "../commands/ListSecurityControlDefinitionsCommand";
import {
  ListStandardsControlAssociationsCommandInput,
  ListStandardsControlAssociationsCommandOutput,
} from "../commands/ListStandardsControlAssociationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "../commands/ListTagsForResourceCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "../commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "../commands/UntagResourceCommand";
import { UpdateActionTargetCommandInput, UpdateActionTargetCommandOutput } from "../commands/UpdateActionTargetCommand";
import {
  UpdateFindingAggregatorCommandInput,
  UpdateFindingAggregatorCommandOutput,
} from "../commands/UpdateFindingAggregatorCommand";
import { UpdateFindingsCommandInput, UpdateFindingsCommandOutput } from "../commands/UpdateFindingsCommand";
import { UpdateInsightCommandInput, UpdateInsightCommandOutput } from "../commands/UpdateInsightCommand";
import {
  UpdateOrganizationConfigurationCommandInput,
  UpdateOrganizationConfigurationCommandOutput,
} from "../commands/UpdateOrganizationConfigurationCommand";
import {
  UpdateSecurityHubConfigurationCommandInput,
  UpdateSecurityHubConfigurationCommandOutput,
} from "../commands/UpdateSecurityHubConfigurationCommand";
import {
  UpdateStandardsControlCommandInput,
  UpdateStandardsControlCommandOutput,
} from "../commands/UpdateStandardsControlCommand";
import {
  AccessDeniedException,
  AccountDetails,
  Action,
  ActionLocalIpDetails,
  ActionLocalPortDetails,
  ActionRemoteIpDetails,
  ActionRemotePortDetails,
  ActionTarget,
  Adjustment,
  AdminAccount,
  AssociatedStandard,
  AssociationSetDetails,
  AssociationStateDetails,
  AvailabilityZone,
  AwsApiCallAction,
  AwsApiCallActionDomainDetails,
  AwsApiGatewayAccessLogSettings,
  AwsApiGatewayCanarySettings,
  AwsApiGatewayEndpointConfiguration,
  AwsApiGatewayMethodSettings,
  AwsApiGatewayRestApiDetails,
  AwsApiGatewayStageDetails,
  AwsApiGatewayV2ApiDetails,
  AwsApiGatewayV2RouteSettings,
  AwsApiGatewayV2StageDetails,
  AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails,
  AwsAutoScalingAutoScalingGroupDetails,
  AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification,
  AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails,
  AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails,
  AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails,
  AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification,
  AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails,
  AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails,
  AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails,
  AwsAutoScalingLaunchConfigurationDetails,
  AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails,
  AwsAutoScalingLaunchConfigurationMetadataOptions,
  AwsBackupBackupPlanAdvancedBackupSettingsDetails,
  AwsBackupBackupPlanBackupPlanDetails,
  AwsBackupBackupPlanDetails,
  AwsBackupBackupPlanLifecycleDetails,
  AwsBackupBackupPlanRuleCopyActionsDetails,
  AwsBackupBackupPlanRuleDetails,
  AwsBackupBackupVaultDetails,
  AwsBackupBackupVaultNotificationsDetails,
  AwsBackupRecoveryPointCalculatedLifecycleDetails,
  AwsBackupRecoveryPointCreatedByDetails,
  AwsBackupRecoveryPointDetails,
  AwsBackupRecoveryPointLifecycleDetails,
  AwsCertificateManagerCertificateDetails,
  AwsCertificateManagerCertificateDomainValidationOption,
  AwsCertificateManagerCertificateExtendedKeyUsage,
  AwsCertificateManagerCertificateKeyUsage,
  AwsCertificateManagerCertificateOptions,
  AwsCertificateManagerCertificateRenewalSummary,
  AwsCertificateManagerCertificateResourceRecord,
  AwsCloudFormationStackDetails,
  AwsCloudFormationStackDriftInformationDetails,
  AwsCloudFormationStackOutputsDetails,
  AwsCloudFrontDistributionCacheBehavior,
  AwsCloudFrontDistributionCacheBehaviors,
  AwsCloudFrontDistributionDefaultCacheBehavior,
  AwsCloudFrontDistributionDetails,
  AwsCloudFrontDistributionLogging,
  AwsCloudFrontDistributionOriginCustomOriginConfig,
  AwsCloudFrontDistributionOriginGroup,
  AwsCloudFrontDistributionOriginGroupFailover,
  AwsCloudFrontDistributionOriginGroupFailoverStatusCodes,
  AwsCloudFrontDistributionOriginGroups,
  AwsCloudFrontDistributionOriginItem,
  AwsCloudFrontDistributionOrigins,
  AwsCloudFrontDistributionOriginS3OriginConfig,
  AwsCloudFrontDistributionOriginSslProtocols,
  AwsCloudFrontDistributionViewerCertificate,
  AwsCloudTrailTrailDetails,
  AwsCloudWatchAlarmDetails,
  AwsCloudWatchAlarmDimensionsDetails,
  AwsCodeBuildProjectArtifactsDetails,
  AwsCodeBuildProjectDetails,
  AwsCodeBuildProjectEnvironment,
  AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails,
  AwsCodeBuildProjectEnvironmentRegistryCredential,
  AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails,
  AwsCodeBuildProjectLogsConfigDetails,
  AwsCodeBuildProjectLogsConfigS3LogsDetails,
  AwsCodeBuildProjectSource,
  AwsCodeBuildProjectVpcConfig,
  AwsCorsConfiguration,
  AwsDynamoDbTableAttributeDefinition,
  AwsDynamoDbTableBillingModeSummary,
  AwsDynamoDbTableDetails,
  AwsDynamoDbTableGlobalSecondaryIndex,
  AwsDynamoDbTableKeySchema,
  AwsDynamoDbTableLocalSecondaryIndex,
  AwsDynamoDbTableProjection,
  AwsDynamoDbTableProvisionedThroughput,
  AwsDynamoDbTableProvisionedThroughputOverride,
  AwsDynamoDbTableReplica,
  AwsDynamoDbTableReplicaGlobalSecondaryIndex,
  AwsDynamoDbTableRestoreSummary,
  AwsDynamoDbTableSseDescription,
  AwsDynamoDbTableStreamSpecification,
  AwsEc2EipDetails,
  AwsEc2InstanceDetails,
  AwsEc2InstanceMetadataOptions,
  AwsEc2InstanceMonitoringDetails,
  AwsEc2InstanceNetworkInterfacesDetails,
  AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails,
  AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails,
  AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails,
  AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails,
  AwsEc2LaunchTemplateDataCpuOptionsDetails,
  AwsEc2LaunchTemplateDataCreditSpecificationDetails,
  AwsEc2LaunchTemplateDataDetails,
  AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails,
  AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails,
  AwsEc2LaunchTemplateDataEnclaveOptionsDetails,
  AwsEc2LaunchTemplateDataHibernationOptionsDetails,
  AwsEc2LaunchTemplateDataIamInstanceProfileDetails,
  AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails,
  AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails,
  AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails,
  AwsEc2LaunchTemplateDataLicenseSetDetails,
  AwsEc2LaunchTemplateDataMaintenanceOptionsDetails,
  AwsEc2LaunchTemplateDataMetadataOptionsDetails,
  AwsEc2LaunchTemplateDataMonitoringDetails,
  AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails,
  AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails,
  AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails,
  AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails,
  AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails,
  AwsEc2LaunchTemplateDataPlacementDetails,
  AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails,
  AwsEc2LaunchTemplateDetails,
  AwsEc2NetworkAclAssociation,
  AwsEc2NetworkAclDetails,
  AwsEc2NetworkAclEntry,
  AwsEc2NetworkInterfaceAttachment,
  AwsEc2NetworkInterfaceDetails,
  AwsEc2NetworkInterfaceIpV6AddressDetail,
  AwsEc2NetworkInterfacePrivateIpAddressDetail,
  AwsEc2NetworkInterfaceSecurityGroup,
  AwsEc2RouteTableDetails,
  AwsEc2SecurityGroupDetails,
  AwsEc2SecurityGroupIpPermission,
  AwsEc2SecurityGroupIpRange,
  AwsEc2SecurityGroupIpv6Range,
  AwsEc2SecurityGroupPrefixListId,
  AwsEc2SecurityGroupUserIdGroupPair,
  AwsEc2SubnetDetails,
  AwsEc2TransitGatewayDetails,
  AwsEc2VolumeAttachment,
  AwsEc2VolumeDetails,
  AwsEc2VpcDetails,
  AwsEc2VpcEndpointServiceDetails,
  AwsEc2VpcEndpointServiceServiceTypeDetails,
  AwsEc2VpcPeeringConnectionDetails,
  AwsEc2VpcPeeringConnectionStatusDetails,
  AwsEc2VpcPeeringConnectionVpcInfoDetails,
  AwsEc2VpnConnectionDetails,
  AwsEc2VpnConnectionOptionsDetails,
  AwsEc2VpnConnectionOptionsTunnelOptionsDetails,
  AwsEc2VpnConnectionRoutesDetails,
  AwsEc2VpnConnectionVgwTelemetryDetails,
  AwsEcrContainerImageDetails,
  AwsEcrRepositoryDetails,
  AwsEcrRepositoryImageScanningConfigurationDetails,
  AwsEcrRepositoryLifecyclePolicyDetails,
  AwsEcsClusterClusterSettingsDetails,
  AwsEcsClusterConfigurationDetails,
  AwsEcsClusterConfigurationExecuteCommandConfigurationDetails,
  AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails,
  AwsEcsClusterDefaultCapacityProviderStrategyDetails,
  AwsEcsClusterDetails,
  AwsEcsContainerDetails,
  AwsEcsServiceCapacityProviderStrategyDetails,
  AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails,
  AwsEcsServiceDeploymentConfigurationDetails,
  AwsEcsServiceDeploymentControllerDetails,
  AwsEcsServiceDetails,
  AwsEcsServiceLoadBalancersDetails,
  AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails,
  AwsEcsServiceNetworkConfigurationDetails,
  AwsEcsServicePlacementConstraintsDetails,
  AwsEcsServicePlacementStrategiesDetails,
  AwsEcsServiceServiceRegistriesDetails,
  AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails,
  AwsEcsTaskDefinitionContainerDefinitionsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails,
  AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails,
  AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails,
  AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails,
  AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails,
  AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails,
  AwsEcsTaskDefinitionDetails,
  AwsEcsTaskDefinitionInferenceAcceleratorsDetails,
  AwsEcsTaskDefinitionPlacementConstraintsDetails,
  AwsEcsTaskDefinitionProxyConfigurationDetails,
  AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails,
  AwsEcsTaskDefinitionVolumesDetails,
  AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails,
  AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails,
  AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails,
  AwsEcsTaskDefinitionVolumesHostDetails,
  AwsEcsTaskDetails,
  AwsEcsTaskVolumeDetails,
  AwsEcsTaskVolumeHostDetails,
  AwsEfsAccessPointDetails,
  AwsEfsAccessPointPosixUserDetails,
  AwsEfsAccessPointRootDirectoryCreationInfoDetails,
  AwsEfsAccessPointRootDirectoryDetails,
  AwsEksClusterDetails,
  AwsEksClusterLoggingClusterLoggingDetails,
  AwsEksClusterLoggingDetails,
  AwsEksClusterResourcesVpcConfigDetails,
  AwsElasticBeanstalkEnvironmentDetails,
  AwsElasticBeanstalkEnvironmentEnvironmentLink,
  AwsElasticBeanstalkEnvironmentOptionSetting,
  AwsElasticBeanstalkEnvironmentTier,
  AwsElasticsearchDomainDetails,
  AwsElasticsearchDomainDomainEndpointOptions,
  AwsElasticsearchDomainElasticsearchClusterConfigDetails,
  AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails,
  AwsElasticsearchDomainEncryptionAtRestOptions,
  AwsElasticsearchDomainLogPublishingOptions,
  AwsElasticsearchDomainLogPublishingOptionsLogConfig,
  AwsElasticsearchDomainNodeToNodeEncryptionOptions,
  AwsElasticsearchDomainServiceSoftwareOptions,
  AwsElasticsearchDomainVPCOptions,
  AwsElbAppCookieStickinessPolicy,
  AwsElbLbCookieStickinessPolicy,
  AwsElbLoadBalancerAccessLog,
  AwsElbLoadBalancerAdditionalAttribute,
  AwsElbLoadBalancerAttributes,
  AwsElbLoadBalancerBackendServerDescription,
  AwsElbLoadBalancerConnectionDraining,
  AwsElbLoadBalancerConnectionSettings,
  AwsElbLoadBalancerCrossZoneLoadBalancing,
  AwsElbLoadBalancerDetails,
  AwsElbLoadBalancerHealthCheck,
  AwsElbLoadBalancerInstance,
  AwsElbLoadBalancerListener,
  AwsElbLoadBalancerListenerDescription,
  AwsElbLoadBalancerPolicies,
  AwsElbLoadBalancerSourceSecurityGroup,
  AwsElbv2LoadBalancerAttribute,
  AwsElbv2LoadBalancerDetails,
  AwsMountPoint,
  CidrBlockAssociation,
  City,
  Country,
  DnsRequestAction,
  GeoLocation,
  IcmpTypeCode,
  InternalException,
  InvalidAccessException,
  InvalidInputException,
  IpOrganizationDetails,
  Ipv6CidrBlockAssociation,
  LimitExceededException,
  LoadBalancerState,
  NetworkConnectionAction,
  PortProbeAction,
  PortProbeDetail,
  PortRangeFromTo,
  PropagatingVgwSetDetails,
  ResourceNotFoundException,
  RouteSetDetails,
  VpcInfoCidrBlockSetDetails,
  VpcInfoIpv6CidrBlockSetDetails,
  VpcInfoPeeringOptionsDetails,
} from "../models/models_0";
import {
  _Record,
  AwsIamAccessKeyDetails,
  AwsIamAccessKeySessionContext,
  AwsIamAccessKeySessionContextAttributes,
  AwsIamAccessKeySessionContextSessionIssuer,
  AwsIamAttachedManagedPolicy,
  AwsIamGroupDetails,
  AwsIamGroupPolicy,
  AwsIamInstanceProfile,
  AwsIamInstanceProfileRole,
  AwsIamPermissionsBoundary,
  AwsIamPolicyDetails,
  AwsIamPolicyVersion,
  AwsIamRoleDetails,
  AwsIamRolePolicy,
  AwsIamUserDetails,
  AwsIamUserPolicy,
  AwsKinesisStreamDetails,
  AwsKinesisStreamStreamEncryptionDetails,
  AwsKmsKeyDetails,
  AwsLambdaFunctionCode,
  AwsLambdaFunctionDeadLetterConfig,
  AwsLambdaFunctionDetails,
  AwsLambdaFunctionEnvironment,
  AwsLambdaFunctionEnvironmentError,
  AwsLambdaFunctionLayer,
  AwsLambdaFunctionTracingConfig,
  AwsLambdaFunctionVpcConfig,
  AwsLambdaLayerVersionDetails,
  AwsNetworkFirewallFirewallDetails,
  AwsNetworkFirewallFirewallPolicyDetails,
  AwsNetworkFirewallFirewallSubnetMappingsDetails,
  AwsNetworkFirewallRuleGroupDetails,
  AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails,
  AwsOpenSearchServiceDomainClusterConfigDetails,
  AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails,
  AwsOpenSearchServiceDomainDetails,
  AwsOpenSearchServiceDomainDomainEndpointOptionsDetails,
  AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails,
  AwsOpenSearchServiceDomainLogPublishingOption,
  AwsOpenSearchServiceDomainLogPublishingOptionsDetails,
  AwsOpenSearchServiceDomainMasterUserOptionsDetails,
  AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails,
  AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails,
  AwsOpenSearchServiceDomainVpcOptionsDetails,
  AwsRdsDbClusterAssociatedRole,
  AwsRdsDbClusterDetails,
  AwsRdsDbClusterMember,
  AwsRdsDbClusterOptionGroupMembership,
  AwsRdsDbClusterSnapshotDetails,
  AwsRdsDbDomainMembership,
  AwsRdsDbInstanceAssociatedRole,
  AwsRdsDbInstanceDetails,
  AwsRdsDbInstanceEndpoint,
  AwsRdsDbInstanceVpcSecurityGroup,
  AwsRdsDbOptionGroupMembership,
  AwsRdsDbParameterGroup,
  AwsRdsDbPendingModifiedValues,
  AwsRdsDbProcessorFeature,
  AwsRdsDbSecurityGroupDetails,
  AwsRdsDbSecurityGroupEc2SecurityGroup,
  AwsRdsDbSecurityGroupIpRange,
  AwsRdsDbSnapshotDetails,
  AwsRdsDbStatusInfo,
  AwsRdsDbSubnetGroup,
  AwsRdsDbSubnetGroupSubnet,
  AwsRdsDbSubnetGroupSubnetAvailabilityZone,
  AwsRdsEventSubscriptionDetails,
  AwsRdsPendingCloudWatchLogsExports,
  AwsRedshiftClusterClusterNode,
  AwsRedshiftClusterClusterParameterGroup,
  AwsRedshiftClusterClusterParameterStatus,
  AwsRedshiftClusterClusterSecurityGroup,
  AwsRedshiftClusterClusterSnapshotCopyStatus,
  AwsRedshiftClusterDeferredMaintenanceWindow,
  AwsRedshiftClusterDetails,
  AwsRedshiftClusterElasticIpStatus,
  AwsRedshiftClusterEndpoint,
  AwsRedshiftClusterHsmStatus,
  AwsRedshiftClusterIamRole,
  AwsRedshiftClusterLoggingStatus,
  AwsRedshiftClusterPendingModifiedValues,
  AwsRedshiftClusterResizeInfo,
  AwsRedshiftClusterRestoreStatus,
  AwsRedshiftClusterVpcSecurityGroup,
  AwsS3AccountPublicAccessBlockDetails,
  AwsS3BucketBucketLifecycleConfigurationDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails,
  AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails,
  AwsS3BucketBucketVersioningConfiguration,
  AwsS3BucketDetails,
  AwsS3BucketLoggingConfiguration,
  AwsS3BucketNotificationConfiguration,
  AwsS3BucketNotificationConfigurationDetail,
  AwsS3BucketNotificationConfigurationFilter,
  AwsS3BucketNotificationConfigurationS3KeyFilter,
  AwsS3BucketNotificationConfigurationS3KeyFilterRule,
  AwsS3BucketObjectLockConfiguration,
  AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails,
  AwsS3BucketObjectLockConfigurationRuleDetails,
  AwsS3BucketServerSideEncryptionByDefault,
  AwsS3BucketServerSideEncryptionConfiguration,
  AwsS3BucketServerSideEncryptionRule,
  AwsS3BucketWebsiteConfiguration,
  AwsS3BucketWebsiteConfigurationRedirectTo,
  AwsS3BucketWebsiteConfigurationRoutingRule,
  AwsS3BucketWebsiteConfigurationRoutingRuleCondition,
  AwsS3BucketWebsiteConfigurationRoutingRuleRedirect,
  AwsS3ObjectDetails,
  AwsSageMakerNotebookInstanceDetails,
  AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails,
  AwsSecretsManagerSecretDetails,
  AwsSecretsManagerSecretRotationRules,
  AwsSecurityFinding,
  AwsSecurityFindingFilters,
  AwsSecurityFindingIdentifier,
  AwsSnsTopicDetails,
  AwsSnsTopicSubscription,
  AwsSqsQueueDetails,
  AwsSsmComplianceSummary,
  AwsSsmPatch,
  AwsSsmPatchComplianceDetails,
  AwsWafRateBasedRuleDetails,
  AwsWafRateBasedRuleMatchPredicate,
  AwsWafRegionalRateBasedRuleDetails,
  AwsWafRegionalRateBasedRuleMatchPredicate,
  AwsWafRegionalRuleDetails,
  AwsWafRegionalRuleGroupDetails,
  AwsWafRegionalRuleGroupRulesActionDetails,
  AwsWafRegionalRuleGroupRulesDetails,
  AwsWafRegionalRulePredicateListDetails,
  AwsWafRegionalWebAclDetails,
  AwsWafRegionalWebAclRulesListActionDetails,
  AwsWafRegionalWebAclRulesListDetails,
  AwsWafRegionalWebAclRulesListOverrideActionDetails,
  AwsWafRuleDetails,
  AwsWafRuleGroupDetails,
  AwsWafRuleGroupRulesActionDetails,
  AwsWafRuleGroupRulesDetails,
  AwsWafRulePredicateListDetails,
  AwsWafv2ActionAllowDetails,
  AwsWafv2ActionBlockDetails,
  AwsWafv2CustomHttpHeader,
  AwsWafv2CustomRequestHandlingDetails,
  AwsWafv2CustomResponseDetails,
  AwsWafv2RuleGroupDetails,
  AwsWafv2RulesActionCaptchaDetails,
  AwsWafv2RulesActionCountDetails,
  AwsWafv2RulesActionDetails,
  AwsWafv2RulesDetails,
  AwsWafv2VisibilityConfigDetails,
  AwsWafv2WebAclActionDetails,
  AwsWafv2WebAclCaptchaConfigDetails,
  AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails,
  AwsWafv2WebAclDetails,
  AwsWafWebAclDetails,
  AwsWafWebAclRule,
  AwsXrayEncryptionConfigDetails,
  BatchUpdateFindingsUnprocessedFinding,
  BooleanFilter,
  Cell,
  ClassificationResult,
  ClassificationStatus,
  Compliance,
  ContainerDetails,
  CustomDataIdentifiersDetections,
  CustomDataIdentifiersResult,
  Cvss,
  DataClassificationDetails,
  DateFilter,
  DateRange,
  FilePaths,
  FindingProviderFields,
  FindingProviderSeverity,
  FirewallPolicyDetails,
  FirewallPolicyStatefulRuleGroupReferencesDetails,
  FirewallPolicyStatelessCustomActionsDetails,
  FirewallPolicyStatelessRuleGroupReferencesDetails,
  ImportFindingsError,
  IpFilter,
  KeywordFilter,
  Malware,
  MapFilter,
  Network,
  NetworkHeader,
  NetworkPathComponent,
  NetworkPathComponentDetails,
  Note,
  NoteUpdate,
  NumberFilter,
  Occurrences,
  Page,
  PatchSummary,
  PortRange,
  ProcessDetails,
  Range,
  Recommendation,
  RelatedFinding,
  Remediation,
  Resource,
  ResourceConflictException,
  ResourceDetails,
  RuleGroupDetails,
  RuleGroupSource,
  RuleGroupSourceCustomActionsDetails,
  RuleGroupSourceListDetails,
  RuleGroupSourceStatefulRulesDetails,
  RuleGroupSourceStatefulRulesHeaderDetails,
  RuleGroupSourceStatefulRulesOptionsDetails,
  RuleGroupSourceStatelessRuleDefinition,
  RuleGroupSourceStatelessRuleMatchAttributes,
  RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts,
  RuleGroupSourceStatelessRuleMatchAttributesDestinations,
  RuleGroupSourceStatelessRuleMatchAttributesSourcePorts,
  RuleGroupSourceStatelessRuleMatchAttributesSources,
  RuleGroupSourceStatelessRuleMatchAttributesTcpFlags,
  RuleGroupSourceStatelessRulesAndCustomActionsDetails,
  RuleGroupSourceStatelessRulesDetails,
  RuleGroupVariables,
  RuleGroupVariablesIpSetsDetails,
  RuleGroupVariablesPortSetsDetails,
  SecurityControl,
  SensitiveDataDetections,
  SensitiveDataResult,
  Severity,
  SeverityUpdate,
  SoftwarePackage,
  StandardsControlAssociationDetail,
  StandardsControlAssociationId,
  StandardsControlAssociationUpdate,
  StandardsStatusReason,
  StandardsSubscription,
  StandardsSubscriptionRequest,
  StatelessCustomActionDefinition,
  StatelessCustomPublishMetricAction,
  StatelessCustomPublishMetricActionDimension,
  StatusReason,
  StringFilter,
  Threat,
  ThreatIntelIndicator,
  UnprocessedSecurityControl,
  UnprocessedStandardsControlAssociation,
  UnprocessedStandardsControlAssociationUpdate,
  VolumeMount,
  Vulnerability,
  VulnerabilityVendor,
  WafAction,
  WafExcludedRule,
  WafOverrideAction,
  Workflow,
  WorkflowUpdate,
} from "../models/models_1";
import {
  FindingAggregator,
  Insight,
  InsightResults,
  InsightResultValue,
  IntegrationType,
  Invitation,
  Member,
  Product,
  Result,
  SecurityControlDefinition,
  SortCriterion,
  Standard,
  StandardsControl,
  StandardsControlAssociationSummary,
  StandardsManagedBy,
} from "../models/models_2";
import { SecurityHubServiceException as __BaseException } from "../models/SecurityHubServiceException";

/**
 * serializeAws_restJson1AcceptAdministratorInvitationCommand
 */
export const se_AcceptAdministratorInvitationCommand = async (
  input: AcceptAdministratorInvitationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/administrator";
  let body: any;
  body = JSON.stringify({
    ...(input.AdministratorId != null && { AdministratorId: input.AdministratorId }),
    ...(input.InvitationId != null && { InvitationId: input.InvitationId }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1AcceptInvitationCommand
 */
export const se_AcceptInvitationCommand = async (
  input: AcceptInvitationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/master";
  let body: any;
  body = JSON.stringify({
    ...(input.InvitationId != null && { InvitationId: input.InvitationId }),
    ...(input.MasterId != null && { MasterId: input.MasterId }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchDisableStandardsCommand
 */
export const se_BatchDisableStandardsCommand = async (
  input: BatchDisableStandardsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/standards/deregister";
  let body: any;
  body = JSON.stringify({
    ...(input.StandardsSubscriptionArns != null && {
      StandardsSubscriptionArns: se_StandardsSubscriptionArns(input.StandardsSubscriptionArns, context),
    }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchEnableStandardsCommand
 */
export const se_BatchEnableStandardsCommand = async (
  input: BatchEnableStandardsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/standards/register";
  let body: any;
  body = JSON.stringify({
    ...(input.StandardsSubscriptionRequests != null && {
      StandardsSubscriptionRequests: se_StandardsSubscriptionRequests(input.StandardsSubscriptionRequests, context),
    }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchGetSecurityControlsCommand
 */
export const se_BatchGetSecurityControlsCommand = async (
  input: BatchGetSecurityControlsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/securityControls/batchGet";
  let body: any;
  body = JSON.stringify({
    ...(input.SecurityControlIds != null && { SecurityControlIds: se_StringList(input.SecurityControlIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchGetStandardsControlAssociationsCommand
 */
export const se_BatchGetStandardsControlAssociationsCommand = async (
  input: BatchGetStandardsControlAssociationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/associations/batchGet";
  let body: any;
  body = JSON.stringify({
    ...(input.StandardsControlAssociationIds != null && {
      StandardsControlAssociationIds: se_StandardsControlAssociationIds(input.StandardsControlAssociationIds, context),
    }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchImportFindingsCommand
 */
export const se_BatchImportFindingsCommand = async (
  input: BatchImportFindingsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findings/import";
  let body: any;
  body = JSON.stringify({
    ...(input.Findings != null && { Findings: se_BatchImportFindingsRequestFindingList(input.Findings, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchUpdateFindingsCommand
 */
export const se_BatchUpdateFindingsCommand = async (
  input: BatchUpdateFindingsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findings/batchupdate";
  let body: any;
  body = JSON.stringify({
    ...(input.Confidence != null && { Confidence: input.Confidence }),
    ...(input.Criticality != null && { Criticality: input.Criticality }),
    ...(input.FindingIdentifiers != null && {
      FindingIdentifiers: se_AwsSecurityFindingIdentifierList(input.FindingIdentifiers, context),
    }),
    ...(input.Note != null && { Note: se_NoteUpdate(input.Note, context) }),
    ...(input.RelatedFindings != null && { RelatedFindings: se_RelatedFindingList(input.RelatedFindings, context) }),
    ...(input.Severity != null && { Severity: se_SeverityUpdate(input.Severity, context) }),
    ...(input.Types != null && { Types: se_TypeList(input.Types, context) }),
    ...(input.UserDefinedFields != null && { UserDefinedFields: se_FieldMap(input.UserDefinedFields, context) }),
    ...(input.VerificationState != null && { VerificationState: input.VerificationState }),
    ...(input.Workflow != null && { Workflow: se_WorkflowUpdate(input.Workflow, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1BatchUpdateStandardsControlAssociationsCommand
 */
export const se_BatchUpdateStandardsControlAssociationsCommand = async (
  input: BatchUpdateStandardsControlAssociationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/associations";
  let body: any;
  body = JSON.stringify({
    ...(input.StandardsControlAssociationUpdates != null && {
      StandardsControlAssociationUpdates: se_StandardsControlAssociationUpdates(
        input.StandardsControlAssociationUpdates,
        context
      ),
    }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1CreateActionTargetCommand
 */
export const se_CreateActionTargetCommand = async (
  input: CreateActionTargetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/actionTargets";
  let body: any;
  body = JSON.stringify({
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.Name != null && { Name: input.Name }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1CreateFindingAggregatorCommand
 */
export const se_CreateFindingAggregatorCommand = async (
  input: CreateFindingAggregatorCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findingAggregator/create";
  let body: any;
  body = JSON.stringify({
    ...(input.RegionLinkingMode != null && { RegionLinkingMode: input.RegionLinkingMode }),
    ...(input.Regions != null && { Regions: se_StringList(input.Regions, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1CreateInsightCommand
 */
export const se_CreateInsightCommand = async (
  input: CreateInsightCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/insights";
  let body: any;
  body = JSON.stringify({
    ...(input.Filters != null && { Filters: se_AwsSecurityFindingFilters(input.Filters, context) }),
    ...(input.GroupByAttribute != null && { GroupByAttribute: input.GroupByAttribute }),
    ...(input.Name != null && { Name: input.Name }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1CreateMembersCommand
 */
export const se_CreateMembersCommand = async (
  input: CreateMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountDetails != null && { AccountDetails: se_AccountDetailsList(input.AccountDetails, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeclineInvitationsCommand
 */
export const se_DeclineInvitationsCommand = async (
  input: DeclineInvitationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/invitations/decline";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeleteActionTargetCommand
 */
export const se_DeleteActionTargetCommand = async (
  input: DeleteActionTargetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/actionTargets/{ActionTargetArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "ActionTargetArn",
    () => input.ActionTargetArn!,
    "{ActionTargetArn+}",
    true
  );
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeleteFindingAggregatorCommand
 */
export const se_DeleteFindingAggregatorCommand = async (
  input: DeleteFindingAggregatorCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` +
    "/findingAggregator/delete/{FindingAggregatorArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "FindingAggregatorArn",
    () => input.FindingAggregatorArn!,
    "{FindingAggregatorArn+}",
    true
  );
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeleteInsightCommand
 */
export const se_DeleteInsightCommand = async (
  input: DeleteInsightCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/insights/{InsightArn+}";
  resolvedPath = __resolvedPath(resolvedPath, input, "InsightArn", () => input.InsightArn!, "{InsightArn+}", true);
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeleteInvitationsCommand
 */
export const se_DeleteInvitationsCommand = async (
  input: DeleteInvitationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/invitations/delete";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DeleteMembersCommand
 */
export const se_DeleteMembersCommand = async (
  input: DeleteMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members/delete";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeActionTargetsCommand
 */
export const se_DescribeActionTargetsCommand = async (
  input: DescribeActionTargetsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/actionTargets/get";
  let body: any;
  body = JSON.stringify({
    ...(input.ActionTargetArns != null && { ActionTargetArns: se_ArnList(input.ActionTargetArns, context) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeHubCommand
 */
export const se_DescribeHubCommand = async (
  input: DescribeHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/accounts";
  const query: any = map({
    HubArn: [, input.HubArn!],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeOrganizationConfigurationCommand
 */
export const se_DescribeOrganizationConfigurationCommand = async (
  input: DescribeOrganizationConfigurationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/organization/configuration";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeProductsCommand
 */
export const se_DescribeProductsCommand = async (
  input: DescribeProductsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/products";
  const query: any = map({
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
    ProductArn: [, input.ProductArn!],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeStandardsCommand
 */
export const se_DescribeStandardsCommand = async (
  input: DescribeStandardsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/standards";
  const query: any = map({
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1DescribeStandardsControlsCommand
 */
export const se_DescribeStandardsControlsCommand = async (
  input: DescribeStandardsControlsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` +
    "/standards/controls/{StandardsSubscriptionArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "StandardsSubscriptionArn",
    () => input.StandardsSubscriptionArn!,
    "{StandardsSubscriptionArn+}",
    true
  );
  const query: any = map({
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1DisableImportFindingsForProductCommand
 */
export const se_DisableImportFindingsForProductCommand = async (
  input: DisableImportFindingsForProductCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` +
    "/productSubscriptions/{ProductSubscriptionArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "ProductSubscriptionArn",
    () => input.ProductSubscriptionArn!,
    "{ProductSubscriptionArn+}",
    true
  );
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DisableOrganizationAdminAccountCommand
 */
export const se_DisableOrganizationAdminAccountCommand = async (
  input: DisableOrganizationAdminAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/organization/admin/disable";
  let body: any;
  body = JSON.stringify({
    ...(input.AdminAccountId != null && { AdminAccountId: input.AdminAccountId }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DisableSecurityHubCommand
 */
export const se_DisableSecurityHubCommand = async (
  input: DisableSecurityHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/accounts";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DisassociateFromAdministratorAccountCommand
 */
export const se_DisassociateFromAdministratorAccountCommand = async (
  input: DisassociateFromAdministratorAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/administrator/disassociate";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DisassociateFromMasterAccountCommand
 */
export const se_DisassociateFromMasterAccountCommand = async (
  input: DisassociateFromMasterAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/master/disassociate";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1DisassociateMembersCommand
 */
export const se_DisassociateMembersCommand = async (
  input: DisassociateMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members/disassociate";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1EnableImportFindingsForProductCommand
 */
export const se_EnableImportFindingsForProductCommand = async (
  input: EnableImportFindingsForProductCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/productSubscriptions";
  let body: any;
  body = JSON.stringify({
    ...(input.ProductArn != null && { ProductArn: input.ProductArn }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1EnableOrganizationAdminAccountCommand
 */
export const se_EnableOrganizationAdminAccountCommand = async (
  input: EnableOrganizationAdminAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/organization/admin/enable";
  let body: any;
  body = JSON.stringify({
    ...(input.AdminAccountId != null && { AdminAccountId: input.AdminAccountId }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1EnableSecurityHubCommand
 */
export const se_EnableSecurityHubCommand = async (
  input: EnableSecurityHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/accounts";
  let body: any;
  body = JSON.stringify({
    ...(input.ControlFindingGenerator != null && { ControlFindingGenerator: input.ControlFindingGenerator }),
    ...(input.EnableDefaultStandards != null && { EnableDefaultStandards: input.EnableDefaultStandards }),
    ...(input.Tags != null && { Tags: se_TagMap(input.Tags, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetAdministratorAccountCommand
 */
export const se_GetAdministratorAccountCommand = async (
  input: GetAdministratorAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/administrator";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetEnabledStandardsCommand
 */
export const se_GetEnabledStandardsCommand = async (
  input: GetEnabledStandardsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/standards/get";
  let body: any;
  body = JSON.stringify({
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.StandardsSubscriptionArns != null && {
      StandardsSubscriptionArns: se_StandardsSubscriptionArns(input.StandardsSubscriptionArns, context),
    }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetFindingAggregatorCommand
 */
export const se_GetFindingAggregatorCommand = async (
  input: GetFindingAggregatorCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` +
    "/findingAggregator/get/{FindingAggregatorArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "FindingAggregatorArn",
    () => input.FindingAggregatorArn!,
    "{FindingAggregatorArn+}",
    true
  );
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetFindingsCommand
 */
export const se_GetFindingsCommand = async (
  input: GetFindingsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findings";
  let body: any;
  body = JSON.stringify({
    ...(input.Filters != null && { Filters: se_AwsSecurityFindingFilters(input.Filters, context) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortCriteria != null && { SortCriteria: se_SortCriteria(input.SortCriteria, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetInsightResultsCommand
 */
export const se_GetInsightResultsCommand = async (
  input: GetInsightResultsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/insights/results/{InsightArn+}";
  resolvedPath = __resolvedPath(resolvedPath, input, "InsightArn", () => input.InsightArn!, "{InsightArn+}", true);
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetInsightsCommand
 */
export const se_GetInsightsCommand = async (
  input: GetInsightsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/insights/get";
  let body: any;
  body = JSON.stringify({
    ...(input.InsightArns != null && { InsightArns: se_ArnList(input.InsightArns, context) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetInvitationsCountCommand
 */
export const se_GetInvitationsCountCommand = async (
  input: GetInvitationsCountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/invitations/count";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetMasterAccountCommand
 */
export const se_GetMasterAccountCommand = async (
  input: GetMasterAccountCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/master";
  let body: any;
  body = "";
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1GetMembersCommand
 */
export const se_GetMembersCommand = async (
  input: GetMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members/get";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1InviteMembersCommand
 */
export const se_InviteMembersCommand = async (
  input: InviteMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members/invite";
  let body: any;
  body = JSON.stringify({
    ...(input.AccountIds != null && { AccountIds: se_AccountIdList(input.AccountIds, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1ListEnabledProductsForImportCommand
 */
export const se_ListEnabledProductsForImportCommand = async (
  input: ListEnabledProductsForImportCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/productSubscriptions";
  const query: any = map({
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListFindingAggregatorsCommand
 */
export const se_ListFindingAggregatorsCommand = async (
  input: ListFindingAggregatorsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findingAggregator/list";
  const query: any = map({
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListInvitationsCommand
 */
export const se_ListInvitationsCommand = async (
  input: ListInvitationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/invitations";
  const query: any = map({
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
    NextToken: [, input.NextToken!],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListMembersCommand
 */
export const se_ListMembersCommand = async (
  input: ListMembersCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/members";
  const query: any = map({
    OnlyAssociated: [() => input.OnlyAssociated !== void 0, () => input.OnlyAssociated!.toString()],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
    NextToken: [, input.NextToken!],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListOrganizationAdminAccountsCommand
 */
export const se_ListOrganizationAdminAccountsCommand = async (
  input: ListOrganizationAdminAccountsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/organization/admin";
  const query: any = map({
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
    NextToken: [, input.NextToken!],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListSecurityControlDefinitionsCommand
 */
export const se_ListSecurityControlDefinitionsCommand = async (
  input: ListSecurityControlDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/securityControls/definitions";
  const query: any = map({
    StandardsArn: [, input.StandardsArn!],
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListStandardsControlAssociationsCommand
 */
export const se_ListStandardsControlAssociationsCommand = async (
  input: ListStandardsControlAssociationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/associations";
  const query: any = map({
    SecurityControlId: [, __expectNonNull(input.SecurityControlId!, `SecurityControlId`)],
    NextToken: [, input.NextToken!],
    MaxResults: [() => input.MaxResults !== void 0, () => input.MaxResults!.toString()],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1ListTagsForResourceCommand
 */
export const se_ListTagsForResourceCommand = async (
  input: ListTagsForResourceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/tags/{ResourceArn}";
  resolvedPath = __resolvedPath(resolvedPath, input, "ResourceArn", () => input.ResourceArn!, "{ResourceArn}", false);
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "GET",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1TagResourceCommand
 */
export const se_TagResourceCommand = async (
  input: TagResourceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  let resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/tags/{ResourceArn}";
  resolvedPath = __resolvedPath(resolvedPath, input, "ResourceArn", () => input.ResourceArn!, "{ResourceArn}", false);
  let body: any;
  body = JSON.stringify({
    ...(input.Tags != null && { Tags: se_TagMap(input.Tags, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UntagResourceCommand
 */
export const se_UntagResourceCommand = async (
  input: UntagResourceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {};
  let resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/tags/{ResourceArn}";
  resolvedPath = __resolvedPath(resolvedPath, input, "ResourceArn", () => input.ResourceArn!, "{ResourceArn}", false);
  const query: any = map({
    tagKeys: [
      __expectNonNull(input.TagKeys, `TagKeys`) != null,
      () => (input.TagKeys! || []).map((_entry) => _entry as any),
    ],
  });
  let body: any;
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "DELETE",
    headers,
    path: resolvedPath,
    query,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateActionTargetCommand
 */
export const se_UpdateActionTargetCommand = async (
  input: UpdateActionTargetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/actionTargets/{ActionTargetArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "ActionTargetArn",
    () => input.ActionTargetArn!,
    "{ActionTargetArn+}",
    true
  );
  let body: any;
  body = JSON.stringify({
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Name != null && { Name: input.Name }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateFindingAggregatorCommand
 */
export const se_UpdateFindingAggregatorCommand = async (
  input: UpdateFindingAggregatorCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findingAggregator/update";
  let body: any;
  body = JSON.stringify({
    ...(input.FindingAggregatorArn != null && { FindingAggregatorArn: input.FindingAggregatorArn }),
    ...(input.RegionLinkingMode != null && { RegionLinkingMode: input.RegionLinkingMode }),
    ...(input.Regions != null && { Regions: se_StringList(input.Regions, context) }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateFindingsCommand
 */
export const se_UpdateFindingsCommand = async (
  input: UpdateFindingsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/findings";
  let body: any;
  body = JSON.stringify({
    ...(input.Filters != null && { Filters: se_AwsSecurityFindingFilters(input.Filters, context) }),
    ...(input.Note != null && { Note: se_NoteUpdate(input.Note, context) }),
    ...(input.RecordState != null && { RecordState: input.RecordState }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateInsightCommand
 */
export const se_UpdateInsightCommand = async (
  input: UpdateInsightCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  let resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/insights/{InsightArn+}";
  resolvedPath = __resolvedPath(resolvedPath, input, "InsightArn", () => input.InsightArn!, "{InsightArn+}", true);
  let body: any;
  body = JSON.stringify({
    ...(input.Filters != null && { Filters: se_AwsSecurityFindingFilters(input.Filters, context) }),
    ...(input.GroupByAttribute != null && { GroupByAttribute: input.GroupByAttribute }),
    ...(input.Name != null && { Name: input.Name }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateOrganizationConfigurationCommand
 */
export const se_UpdateOrganizationConfigurationCommand = async (
  input: UpdateOrganizationConfigurationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/organization/configuration";
  let body: any;
  body = JSON.stringify({
    ...(input.AutoEnable != null && { AutoEnable: input.AutoEnable }),
    ...(input.AutoEnableStandards != null && { AutoEnableStandards: input.AutoEnableStandards }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "POST",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateSecurityHubConfigurationCommand
 */
export const se_UpdateSecurityHubConfigurationCommand = async (
  input: UpdateSecurityHubConfigurationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  const resolvedPath = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/accounts";
  let body: any;
  body = JSON.stringify({
    ...(input.AutoEnableControls != null && { AutoEnableControls: input.AutoEnableControls }),
    ...(input.ControlFindingGenerator != null && { ControlFindingGenerator: input.ControlFindingGenerator }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * serializeAws_restJson1UpdateStandardsControlCommand
 */
export const se_UpdateStandardsControlCommand = async (
  input: UpdateStandardsControlCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const headers: any = {
    "content-type": "application/json",
  };
  let resolvedPath =
    `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/standards/control/{StandardsControlArn+}";
  resolvedPath = __resolvedPath(
    resolvedPath,
    input,
    "StandardsControlArn",
    () => input.StandardsControlArn!,
    "{StandardsControlArn+}",
    true
  );
  let body: any;
  body = JSON.stringify({
    ...(input.ControlStatus != null && { ControlStatus: input.ControlStatus }),
    ...(input.DisabledReason != null && { DisabledReason: input.DisabledReason }),
  });
  return new __HttpRequest({
    protocol,
    hostname,
    port,
    method: "PATCH",
    headers,
    path: resolvedPath,
    body,
  });
};

/**
 * deserializeAws_restJson1AcceptAdministratorInvitationCommand
 */
export const de_AcceptAdministratorInvitationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AcceptAdministratorInvitationCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_AcceptAdministratorInvitationCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1AcceptAdministratorInvitationCommandError
 */
const de_AcceptAdministratorInvitationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AcceptAdministratorInvitationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1AcceptInvitationCommand
 */
export const de_AcceptInvitationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AcceptInvitationCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_AcceptInvitationCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1AcceptInvitationCommandError
 */
const de_AcceptInvitationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AcceptInvitationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchDisableStandardsCommand
 */
export const de_BatchDisableStandardsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchDisableStandardsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchDisableStandardsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.StandardsSubscriptions != null) {
    contents.StandardsSubscriptions = de_StandardsSubscriptions(data.StandardsSubscriptions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchDisableStandardsCommandError
 */
const de_BatchDisableStandardsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchDisableStandardsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchEnableStandardsCommand
 */
export const de_BatchEnableStandardsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchEnableStandardsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchEnableStandardsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.StandardsSubscriptions != null) {
    contents.StandardsSubscriptions = de_StandardsSubscriptions(data.StandardsSubscriptions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchEnableStandardsCommandError
 */
const de_BatchEnableStandardsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchEnableStandardsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchGetSecurityControlsCommand
 */
export const de_BatchGetSecurityControlsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchGetSecurityControlsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchGetSecurityControlsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.SecurityControls != null) {
    contents.SecurityControls = de_SecurityControls(data.SecurityControls, context);
  }
  if (data.UnprocessedIds != null) {
    contents.UnprocessedIds = de_UnprocessedSecurityControls(data.UnprocessedIds, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchGetSecurityControlsCommandError
 */
const de_BatchGetSecurityControlsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchGetSecurityControlsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchGetStandardsControlAssociationsCommand
 */
export const de_BatchGetStandardsControlAssociationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchGetStandardsControlAssociationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchGetStandardsControlAssociationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.StandardsControlAssociationDetails != null) {
    contents.StandardsControlAssociationDetails = de_StandardsControlAssociationDetails(
      data.StandardsControlAssociationDetails,
      context
    );
  }
  if (data.UnprocessedAssociations != null) {
    contents.UnprocessedAssociations = de_UnprocessedStandardsControlAssociations(
      data.UnprocessedAssociations,
      context
    );
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchGetStandardsControlAssociationsCommandError
 */
const de_BatchGetStandardsControlAssociationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchGetStandardsControlAssociationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchImportFindingsCommand
 */
export const de_BatchImportFindingsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchImportFindingsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchImportFindingsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.FailedCount != null) {
    contents.FailedCount = __expectInt32(data.FailedCount);
  }
  if (data.FailedFindings != null) {
    contents.FailedFindings = de_ImportFindingsErrorList(data.FailedFindings, context);
  }
  if (data.SuccessCount != null) {
    contents.SuccessCount = __expectInt32(data.SuccessCount);
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchImportFindingsCommandError
 */
const de_BatchImportFindingsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchImportFindingsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchUpdateFindingsCommand
 */
export const de_BatchUpdateFindingsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchUpdateFindingsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchUpdateFindingsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.ProcessedFindings != null) {
    contents.ProcessedFindings = de_AwsSecurityFindingIdentifierList(data.ProcessedFindings, context);
  }
  if (data.UnprocessedFindings != null) {
    contents.UnprocessedFindings = de_BatchUpdateFindingsUnprocessedFindingsList(data.UnprocessedFindings, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchUpdateFindingsCommandError
 */
const de_BatchUpdateFindingsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchUpdateFindingsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1BatchUpdateStandardsControlAssociationsCommand
 */
export const de_BatchUpdateStandardsControlAssociationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchUpdateStandardsControlAssociationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_BatchUpdateStandardsControlAssociationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAssociationUpdates != null) {
    contents.UnprocessedAssociationUpdates = de_UnprocessedStandardsControlAssociationUpdates(
      data.UnprocessedAssociationUpdates,
      context
    );
  }
  return contents;
};

/**
 * deserializeAws_restJson1BatchUpdateStandardsControlAssociationsCommandError
 */
const de_BatchUpdateStandardsControlAssociationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchUpdateStandardsControlAssociationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1CreateActionTargetCommand
 */
export const de_CreateActionTargetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateActionTargetCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CreateActionTargetCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.ActionTargetArn != null) {
    contents.ActionTargetArn = __expectString(data.ActionTargetArn);
  }
  return contents;
};

/**
 * deserializeAws_restJson1CreateActionTargetCommandError
 */
const de_CreateActionTargetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateActionTargetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.securityhub#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1CreateFindingAggregatorCommand
 */
export const de_CreateFindingAggregatorCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFindingAggregatorCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CreateFindingAggregatorCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.FindingAggregationRegion != null) {
    contents.FindingAggregationRegion = __expectString(data.FindingAggregationRegion);
  }
  if (data.FindingAggregatorArn != null) {
    contents.FindingAggregatorArn = __expectString(data.FindingAggregatorArn);
  }
  if (data.RegionLinkingMode != null) {
    contents.RegionLinkingMode = __expectString(data.RegionLinkingMode);
  }
  if (data.Regions != null) {
    contents.Regions = de_StringList(data.Regions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1CreateFindingAggregatorCommandError
 */
const de_CreateFindingAggregatorCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFindingAggregatorCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1CreateInsightCommand
 */
export const de_CreateInsightCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInsightCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CreateInsightCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.InsightArn != null) {
    contents.InsightArn = __expectString(data.InsightArn);
  }
  return contents;
};

/**
 * deserializeAws_restJson1CreateInsightCommandError
 */
const de_CreateInsightCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInsightCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.securityhub#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1CreateMembersCommand
 */
export const de_CreateMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CreateMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1CreateMembersCommandError
 */
const de_CreateMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.securityhub#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeclineInvitationsCommand
 */
export const de_DeclineInvitationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeclineInvitationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeclineInvitationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DeclineInvitationsCommandError
 */
const de_DeclineInvitationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeclineInvitationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeleteActionTargetCommand
 */
export const de_DeleteActionTargetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteActionTargetCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeleteActionTargetCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.ActionTargetArn != null) {
    contents.ActionTargetArn = __expectString(data.ActionTargetArn);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DeleteActionTargetCommandError
 */
const de_DeleteActionTargetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteActionTargetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeleteFindingAggregatorCommand
 */
export const de_DeleteFindingAggregatorCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFindingAggregatorCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeleteFindingAggregatorCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DeleteFindingAggregatorCommandError
 */
const de_DeleteFindingAggregatorCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFindingAggregatorCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeleteInsightCommand
 */
export const de_DeleteInsightCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInsightCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeleteInsightCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.InsightArn != null) {
    contents.InsightArn = __expectString(data.InsightArn);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DeleteInsightCommandError
 */
const de_DeleteInsightCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInsightCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeleteInvitationsCommand
 */
export const de_DeleteInvitationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInvitationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeleteInvitationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DeleteInvitationsCommandError
 */
const de_DeleteInvitationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInvitationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DeleteMembersCommand
 */
export const de_DeleteMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DeleteMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DeleteMembersCommandError
 */
const de_DeleteMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeActionTargetsCommand
 */
export const de_DescribeActionTargetsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeActionTargetsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeActionTargetsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.ActionTargets != null) {
    contents.ActionTargets = de_ActionTargetList(data.ActionTargets, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeActionTargetsCommandError
 */
const de_DescribeActionTargetsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeActionTargetsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeHubCommand
 */
export const de_DescribeHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeHubCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.AutoEnableControls != null) {
    contents.AutoEnableControls = __expectBoolean(data.AutoEnableControls);
  }
  if (data.ControlFindingGenerator != null) {
    contents.ControlFindingGenerator = __expectString(data.ControlFindingGenerator);
  }
  if (data.HubArn != null) {
    contents.HubArn = __expectString(data.HubArn);
  }
  if (data.SubscribedAt != null) {
    contents.SubscribedAt = __expectString(data.SubscribedAt);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeHubCommandError
 */
const de_DescribeHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeOrganizationConfigurationCommand
 */
export const de_DescribeOrganizationConfigurationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeOrganizationConfigurationCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeOrganizationConfigurationCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.AutoEnable != null) {
    contents.AutoEnable = __expectBoolean(data.AutoEnable);
  }
  if (data.AutoEnableStandards != null) {
    contents.AutoEnableStandards = __expectString(data.AutoEnableStandards);
  }
  if (data.MemberAccountLimitReached != null) {
    contents.MemberAccountLimitReached = __expectBoolean(data.MemberAccountLimitReached);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeOrganizationConfigurationCommandError
 */
const de_DescribeOrganizationConfigurationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeOrganizationConfigurationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeProductsCommand
 */
export const de_DescribeProductsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProductsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeProductsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.Products != null) {
    contents.Products = de_ProductsList(data.Products, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeProductsCommandError
 */
const de_DescribeProductsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProductsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeStandardsCommand
 */
export const de_DescribeStandardsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStandardsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeStandardsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.Standards != null) {
    contents.Standards = de_Standards(data.Standards, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeStandardsCommandError
 */
const de_DescribeStandardsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStandardsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DescribeStandardsControlsCommand
 */
export const de_DescribeStandardsControlsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStandardsControlsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DescribeStandardsControlsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Controls != null) {
    contents.Controls = de_StandardsControls(data.Controls, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1DescribeStandardsControlsCommandError
 */
const de_DescribeStandardsControlsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStandardsControlsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisableImportFindingsForProductCommand
 */
export const de_DisableImportFindingsForProductCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableImportFindingsForProductCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisableImportFindingsForProductCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisableImportFindingsForProductCommandError
 */
const de_DisableImportFindingsForProductCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableImportFindingsForProductCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisableOrganizationAdminAccountCommand
 */
export const de_DisableOrganizationAdminAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableOrganizationAdminAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisableOrganizationAdminAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisableOrganizationAdminAccountCommandError
 */
const de_DisableOrganizationAdminAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableOrganizationAdminAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisableSecurityHubCommand
 */
export const de_DisableSecurityHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableSecurityHubCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisableSecurityHubCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisableSecurityHubCommandError
 */
const de_DisableSecurityHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableSecurityHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisassociateFromAdministratorAccountCommand
 */
export const de_DisassociateFromAdministratorAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateFromAdministratorAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisassociateFromAdministratorAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisassociateFromAdministratorAccountCommandError
 */
const de_DisassociateFromAdministratorAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateFromAdministratorAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisassociateFromMasterAccountCommand
 */
export const de_DisassociateFromMasterAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateFromMasterAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisassociateFromMasterAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisassociateFromMasterAccountCommandError
 */
const de_DisassociateFromMasterAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateFromMasterAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1DisassociateMembersCommand
 */
export const de_DisassociateMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_DisassociateMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1DisassociateMembersCommandError
 */
const de_DisassociateMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1EnableImportFindingsForProductCommand
 */
export const de_EnableImportFindingsForProductCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableImportFindingsForProductCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_EnableImportFindingsForProductCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.ProductSubscriptionArn != null) {
    contents.ProductSubscriptionArn = __expectString(data.ProductSubscriptionArn);
  }
  return contents;
};

/**
 * deserializeAws_restJson1EnableImportFindingsForProductCommandError
 */
const de_EnableImportFindingsForProductCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableImportFindingsForProductCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.securityhub#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1EnableOrganizationAdminAccountCommand
 */
export const de_EnableOrganizationAdminAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableOrganizationAdminAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_EnableOrganizationAdminAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1EnableOrganizationAdminAccountCommandError
 */
const de_EnableOrganizationAdminAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableOrganizationAdminAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1EnableSecurityHubCommand
 */
export const de_EnableSecurityHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableSecurityHubCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_EnableSecurityHubCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1EnableSecurityHubCommandError
 */
const de_EnableSecurityHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableSecurityHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceConflictException":
    case "com.amazonaws.securityhub#ResourceConflictException":
      throw await de_ResourceConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetAdministratorAccountCommand
 */
export const de_GetAdministratorAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetAdministratorAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetAdministratorAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Administrator != null) {
    contents.Administrator = de_Invitation(data.Administrator, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetAdministratorAccountCommandError
 */
const de_GetAdministratorAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetAdministratorAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetEnabledStandardsCommand
 */
export const de_GetEnabledStandardsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetEnabledStandardsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetEnabledStandardsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.StandardsSubscriptions != null) {
    contents.StandardsSubscriptions = de_StandardsSubscriptions(data.StandardsSubscriptions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetEnabledStandardsCommandError
 */
const de_GetEnabledStandardsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetEnabledStandardsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetFindingAggregatorCommand
 */
export const de_GetFindingAggregatorCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetFindingAggregatorCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetFindingAggregatorCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.FindingAggregationRegion != null) {
    contents.FindingAggregationRegion = __expectString(data.FindingAggregationRegion);
  }
  if (data.FindingAggregatorArn != null) {
    contents.FindingAggregatorArn = __expectString(data.FindingAggregatorArn);
  }
  if (data.RegionLinkingMode != null) {
    contents.RegionLinkingMode = __expectString(data.RegionLinkingMode);
  }
  if (data.Regions != null) {
    contents.Regions = de_StringList(data.Regions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetFindingAggregatorCommandError
 */
const de_GetFindingAggregatorCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetFindingAggregatorCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetFindingsCommand
 */
export const de_GetFindingsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetFindingsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetFindingsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Findings != null) {
    contents.Findings = de_AwsSecurityFindingList(data.Findings, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetFindingsCommandError
 */
const de_GetFindingsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetFindingsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetInsightResultsCommand
 */
export const de_GetInsightResultsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInsightResultsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetInsightResultsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.InsightResults != null) {
    contents.InsightResults = de_InsightResults(data.InsightResults, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetInsightResultsCommandError
 */
const de_GetInsightResultsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInsightResultsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetInsightsCommand
 */
export const de_GetInsightsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInsightsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetInsightsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Insights != null) {
    contents.Insights = de_InsightList(data.Insights, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetInsightsCommandError
 */
const de_GetInsightsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInsightsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetInvitationsCountCommand
 */
export const de_GetInvitationsCountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInvitationsCountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetInvitationsCountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.InvitationsCount != null) {
    contents.InvitationsCount = __expectInt32(data.InvitationsCount);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetInvitationsCountCommandError
 */
const de_GetInvitationsCountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetInvitationsCountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetMasterAccountCommand
 */
export const de_GetMasterAccountCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetMasterAccountCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetMasterAccountCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Master != null) {
    contents.Master = de_Invitation(data.Master, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetMasterAccountCommandError
 */
const de_GetMasterAccountCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetMasterAccountCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1GetMembersCommand
 */
export const de_GetMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_GetMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Members != null) {
    contents.Members = de_MemberList(data.Members, context);
  }
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1GetMembersCommandError
 */
const de_GetMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1InviteMembersCommand
 */
export const de_InviteMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<InviteMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_InviteMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.UnprocessedAccounts != null) {
    contents.UnprocessedAccounts = de_ResultList(data.UnprocessedAccounts, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1InviteMembersCommandError
 */
const de_InviteMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<InviteMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListEnabledProductsForImportCommand
 */
export const de_ListEnabledProductsForImportCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEnabledProductsForImportCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListEnabledProductsForImportCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.ProductSubscriptions != null) {
    contents.ProductSubscriptions = de_ProductSubscriptionArnList(data.ProductSubscriptions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListEnabledProductsForImportCommandError
 */
const de_ListEnabledProductsForImportCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEnabledProductsForImportCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListFindingAggregatorsCommand
 */
export const de_ListFindingAggregatorsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFindingAggregatorsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListFindingAggregatorsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.FindingAggregators != null) {
    contents.FindingAggregators = de_FindingAggregatorList(data.FindingAggregators, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListFindingAggregatorsCommandError
 */
const de_ListFindingAggregatorsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFindingAggregatorsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListInvitationsCommand
 */
export const de_ListInvitationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInvitationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListInvitationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Invitations != null) {
    contents.Invitations = de_InvitationList(data.Invitations, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListInvitationsCommandError
 */
const de_ListInvitationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInvitationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListMembersCommand
 */
export const de_ListMembersCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMembersCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListMembersCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Members != null) {
    contents.Members = de_MemberList(data.Members, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListMembersCommandError
 */
const de_ListMembersCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMembersCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListOrganizationAdminAccountsCommand
 */
export const de_ListOrganizationAdminAccountsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListOrganizationAdminAccountsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListOrganizationAdminAccountsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.AdminAccounts != null) {
    contents.AdminAccounts = de_AdminAccounts(data.AdminAccounts, context);
  }
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListOrganizationAdminAccountsCommandError
 */
const de_ListOrganizationAdminAccountsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListOrganizationAdminAccountsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListSecurityControlDefinitionsCommand
 */
export const de_ListSecurityControlDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSecurityControlDefinitionsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListSecurityControlDefinitionsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.SecurityControlDefinitions != null) {
    contents.SecurityControlDefinitions = de_SecurityControlDefinitions(data.SecurityControlDefinitions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListSecurityControlDefinitionsCommandError
 */
const de_ListSecurityControlDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSecurityControlDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListStandardsControlAssociationsCommand
 */
export const de_ListStandardsControlAssociationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStandardsControlAssociationsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListStandardsControlAssociationsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.NextToken != null) {
    contents.NextToken = __expectString(data.NextToken);
  }
  if (data.StandardsControlAssociationSummaries != null) {
    contents.StandardsControlAssociationSummaries = de_StandardsControlAssociationSummaries(
      data.StandardsControlAssociationSummaries,
      context
    );
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListStandardsControlAssociationsCommandError
 */
const de_ListStandardsControlAssociationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStandardsControlAssociationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1ListTagsForResourceCommand
 */
export const de_ListTagsForResourceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTagsForResourceCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_ListTagsForResourceCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.Tags != null) {
    contents.Tags = de_TagMap(data.Tags, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1ListTagsForResourceCommandError
 */
const de_ListTagsForResourceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTagsForResourceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1TagResourceCommand
 */
export const de_TagResourceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<TagResourceCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_TagResourceCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1TagResourceCommandError
 */
const de_TagResourceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<TagResourceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UntagResourceCommand
 */
export const de_UntagResourceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UntagResourceCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UntagResourceCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UntagResourceCommandError
 */
const de_UntagResourceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UntagResourceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateActionTargetCommand
 */
export const de_UpdateActionTargetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateActionTargetCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateActionTargetCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateActionTargetCommandError
 */
const de_UpdateActionTargetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateActionTargetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateFindingAggregatorCommand
 */
export const de_UpdateFindingAggregatorCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFindingAggregatorCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateFindingAggregatorCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  const data: Record<string, any> = __expectNonNull(__expectObject(await parseBody(output.body, context)), "body");
  if (data.FindingAggregationRegion != null) {
    contents.FindingAggregationRegion = __expectString(data.FindingAggregationRegion);
  }
  if (data.FindingAggregatorArn != null) {
    contents.FindingAggregatorArn = __expectString(data.FindingAggregatorArn);
  }
  if (data.RegionLinkingMode != null) {
    contents.RegionLinkingMode = __expectString(data.RegionLinkingMode);
  }
  if (data.Regions != null) {
    contents.Regions = de_StringList(data.Regions, context);
  }
  return contents;
};

/**
 * deserializeAws_restJson1UpdateFindingAggregatorCommandError
 */
const de_UpdateFindingAggregatorCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFindingAggregatorCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.securityhub#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateFindingsCommand
 */
export const de_UpdateFindingsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFindingsCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateFindingsCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateFindingsCommandError
 */
const de_UpdateFindingsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFindingsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateInsightCommand
 */
export const de_UpdateInsightCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateInsightCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateInsightCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateInsightCommandError
 */
const de_UpdateInsightCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateInsightCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateOrganizationConfigurationCommand
 */
export const de_UpdateOrganizationConfigurationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateOrganizationConfigurationCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateOrganizationConfigurationCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateOrganizationConfigurationCommandError
 */
const de_UpdateOrganizationConfigurationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateOrganizationConfigurationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateSecurityHubConfigurationCommand
 */
export const de_UpdateSecurityHubConfigurationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateSecurityHubConfigurationCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateSecurityHubConfigurationCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateSecurityHubConfigurationCommandError
 */
const de_UpdateSecurityHubConfigurationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateSecurityHubConfigurationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "LimitExceededException":
    case "com.amazonaws.securityhub#LimitExceededException":
      throw await de_LimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_restJson1UpdateStandardsControlCommand
 */
export const de_UpdateStandardsControlCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateStandardsControlCommandOutput> => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_UpdateStandardsControlCommandError(output, context);
  }
  const contents: any = map({
    $metadata: deserializeMetadata(output),
  });
  await collectBody(output.body, context);
  return contents;
};

/**
 * deserializeAws_restJson1UpdateStandardsControlCommandError
 */
const de_UpdateStandardsControlCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateStandardsControlCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalException":
    case "com.amazonaws.securityhub#InternalException":
      throw await de_InternalExceptionRes(parsedOutput, context);
    case "InvalidAccessException":
    case "com.amazonaws.securityhub#InvalidAccessException":
      throw await de_InvalidAccessExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.securityhub#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.securityhub#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

const map = __map;
/**
 * deserializeAws_restJson1AccessDeniedExceptionRes
 */
const de_AccessDeniedExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<AccessDeniedException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1InternalExceptionRes
 */
const de_InternalExceptionRes = async (parsedOutput: any, context: __SerdeContext): Promise<InternalException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new InternalException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1InvalidAccessExceptionRes
 */
const de_InvalidAccessExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<InvalidAccessException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new InvalidAccessException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1InvalidInputExceptionRes
 */
const de_InvalidInputExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<InvalidInputException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new InvalidInputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1LimitExceededExceptionRes
 */
const de_LimitExceededExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<LimitExceededException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new LimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1ResourceConflictExceptionRes
 */
const de_ResourceConflictExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<ResourceConflictException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new ResourceConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * deserializeAws_restJson1ResourceNotFoundExceptionRes
 */
const de_ResourceNotFoundExceptionRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<ResourceNotFoundException> => {
  const contents: any = map({});
  const data: any = parsedOutput.body;
  if (data.Code != null) {
    contents.Code = __expectString(data.Code);
  }
  if (data.Message != null) {
    contents.Message = __expectString(data.Message);
  }
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents,
  });
  return __decorateServiceException(exception, parsedOutput.body);
};

/**
 * serializeAws_restJson1AccountDetails
 */
const se_AccountDetails = (input: AccountDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccountId != null && { AccountId: input.AccountId }),
    ...(input.Email != null && { Email: input.Email }),
  };
};

/**
 * serializeAws_restJson1AccountDetailsList
 */
const se_AccountDetailsList = (input: AccountDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AccountDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AccountIdList
 */
const se_AccountIdList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1Action
 */
const se_Action = (input: Action, context: __SerdeContext): any => {
  return {
    ...(input.ActionType != null && { ActionType: input.ActionType }),
    ...(input.AwsApiCallAction != null && { AwsApiCallAction: se_AwsApiCallAction(input.AwsApiCallAction, context) }),
    ...(input.DnsRequestAction != null && { DnsRequestAction: se_DnsRequestAction(input.DnsRequestAction, context) }),
    ...(input.NetworkConnectionAction != null && {
      NetworkConnectionAction: se_NetworkConnectionAction(input.NetworkConnectionAction, context),
    }),
    ...(input.PortProbeAction != null && { PortProbeAction: se_PortProbeAction(input.PortProbeAction, context) }),
  };
};

/**
 * serializeAws_restJson1ActionLocalIpDetails
 */
const se_ActionLocalIpDetails = (input: ActionLocalIpDetails, context: __SerdeContext): any => {
  return {
    ...(input.IpAddressV4 != null && { IpAddressV4: input.IpAddressV4 }),
  };
};

/**
 * serializeAws_restJson1ActionLocalPortDetails
 */
const se_ActionLocalPortDetails = (input: ActionLocalPortDetails, context: __SerdeContext): any => {
  return {
    ...(input.Port != null && { Port: input.Port }),
    ...(input.PortName != null && { PortName: input.PortName }),
  };
};

/**
 * serializeAws_restJson1ActionRemoteIpDetails
 */
const se_ActionRemoteIpDetails = (input: ActionRemoteIpDetails, context: __SerdeContext): any => {
  return {
    ...(input.City != null && { City: se_City(input.City, context) }),
    ...(input.Country != null && { Country: se_Country(input.Country, context) }),
    ...(input.GeoLocation != null && { GeoLocation: se_GeoLocation(input.GeoLocation, context) }),
    ...(input.IpAddressV4 != null && { IpAddressV4: input.IpAddressV4 }),
    ...(input.Organization != null && { Organization: se_IpOrganizationDetails(input.Organization, context) }),
  };
};

/**
 * serializeAws_restJson1ActionRemotePortDetails
 */
const se_ActionRemotePortDetails = (input: ActionRemotePortDetails, context: __SerdeContext): any => {
  return {
    ...(input.Port != null && { Port: input.Port }),
    ...(input.PortName != null && { PortName: input.PortName }),
  };
};

/**
 * serializeAws_restJson1Adjustment
 */
const se_Adjustment = (input: Adjustment, context: __SerdeContext): any => {
  return {
    ...(input.Metric != null && { Metric: input.Metric }),
    ...(input.Reason != null && { Reason: input.Reason }),
  };
};

/**
 * serializeAws_restJson1AdjustmentList
 */
const se_AdjustmentList = (input: Adjustment[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Adjustment(entry, context);
    });
};

/**
 * serializeAws_restJson1ArnList
 */
const se_ArnList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1AssociatedStandard
 */
const se_AssociatedStandard = (input: AssociatedStandard, context: __SerdeContext): any => {
  return {
    ...(input.StandardsId != null && { StandardsId: input.StandardsId }),
  };
};

/**
 * serializeAws_restJson1AssociatedStandardsList
 */
const se_AssociatedStandardsList = (input: AssociatedStandard[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AssociatedStandard(entry, context);
    });
};

/**
 * serializeAws_restJson1AssociationSetDetails
 */
const se_AssociationSetDetails = (input: AssociationSetDetails, context: __SerdeContext): any => {
  return {
    ...(input.AssociationState != null && {
      AssociationState: se_AssociationStateDetails(input.AssociationState, context),
    }),
    ...(input.GatewayId != null && { GatewayId: input.GatewayId }),
    ...(input.Main != null && { Main: input.Main }),
    ...(input.RouteTableAssociationId != null && { RouteTableAssociationId: input.RouteTableAssociationId }),
    ...(input.RouteTableId != null && { RouteTableId: input.RouteTableId }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
  };
};

/**
 * serializeAws_restJson1AssociationSetList
 */
const se_AssociationSetList = (input: AssociationSetDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AssociationSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AssociationStateDetails
 */
const se_AssociationStateDetails = (input: AssociationStateDetails, context: __SerdeContext): any => {
  return {
    ...(input.State != null && { State: input.State }),
    ...(input.StatusMessage != null && { StatusMessage: input.StatusMessage }),
  };
};

/**
 * serializeAws_restJson1AvailabilityZone
 */
const se_AvailabilityZone = (input: AvailabilityZone, context: __SerdeContext): any => {
  return {
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
    ...(input.ZoneName != null && { ZoneName: input.ZoneName }),
  };
};

/**
 * serializeAws_restJson1AvailabilityZones
 */
const se_AvailabilityZones = (input: AvailabilityZone[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AvailabilityZone(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsApiCallAction
 */
const se_AwsApiCallAction = (input: AwsApiCallAction, context: __SerdeContext): any => {
  return {
    ...(input.AffectedResources != null && { AffectedResources: se_FieldMap(input.AffectedResources, context) }),
    ...(input.Api != null && { Api: input.Api }),
    ...(input.CallerType != null && { CallerType: input.CallerType }),
    ...(input.DomainDetails != null && {
      DomainDetails: se_AwsApiCallActionDomainDetails(input.DomainDetails, context),
    }),
    ...(input.FirstSeen != null && { FirstSeen: input.FirstSeen }),
    ...(input.LastSeen != null && { LastSeen: input.LastSeen }),
    ...(input.RemoteIpDetails != null && { RemoteIpDetails: se_ActionRemoteIpDetails(input.RemoteIpDetails, context) }),
    ...(input.ServiceName != null && { ServiceName: input.ServiceName }),
  };
};

/**
 * serializeAws_restJson1AwsApiCallActionDomainDetails
 */
const se_AwsApiCallActionDomainDetails = (input: AwsApiCallActionDomainDetails, context: __SerdeContext): any => {
  return {
    ...(input.Domain != null && { Domain: input.Domain }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayAccessLogSettings
 */
const se_AwsApiGatewayAccessLogSettings = (input: AwsApiGatewayAccessLogSettings, context: __SerdeContext): any => {
  return {
    ...(input.DestinationArn != null && { DestinationArn: input.DestinationArn }),
    ...(input.Format != null && { Format: input.Format }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayCanarySettings
 */
const se_AwsApiGatewayCanarySettings = (input: AwsApiGatewayCanarySettings, context: __SerdeContext): any => {
  return {
    ...(input.DeploymentId != null && { DeploymentId: input.DeploymentId }),
    ...(input.PercentTraffic != null && { PercentTraffic: __serializeFloat(input.PercentTraffic) }),
    ...(input.StageVariableOverrides != null && {
      StageVariableOverrides: se_FieldMap(input.StageVariableOverrides, context),
    }),
    ...(input.UseStageCache != null && { UseStageCache: input.UseStageCache }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayEndpointConfiguration
 */
const se_AwsApiGatewayEndpointConfiguration = (
  input: AwsApiGatewayEndpointConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.Types != null && { Types: se_NonEmptyStringList(input.Types, context) }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayMethodSettings
 */
const se_AwsApiGatewayMethodSettings = (input: AwsApiGatewayMethodSettings, context: __SerdeContext): any => {
  return {
    ...(input.CacheDataEncrypted != null && { CacheDataEncrypted: input.CacheDataEncrypted }),
    ...(input.CacheTtlInSeconds != null && { CacheTtlInSeconds: input.CacheTtlInSeconds }),
    ...(input.CachingEnabled != null && { CachingEnabled: input.CachingEnabled }),
    ...(input.DataTraceEnabled != null && { DataTraceEnabled: input.DataTraceEnabled }),
    ...(input.HttpMethod != null && { HttpMethod: input.HttpMethod }),
    ...(input.LoggingLevel != null && { LoggingLevel: input.LoggingLevel }),
    ...(input.MetricsEnabled != null && { MetricsEnabled: input.MetricsEnabled }),
    ...(input.RequireAuthorizationForCacheControl != null && {
      RequireAuthorizationForCacheControl: input.RequireAuthorizationForCacheControl,
    }),
    ...(input.ResourcePath != null && { ResourcePath: input.ResourcePath }),
    ...(input.ThrottlingBurstLimit != null && { ThrottlingBurstLimit: input.ThrottlingBurstLimit }),
    ...(input.ThrottlingRateLimit != null && { ThrottlingRateLimit: __serializeFloat(input.ThrottlingRateLimit) }),
    ...(input.UnauthorizedCacheControlHeaderStrategy != null && {
      UnauthorizedCacheControlHeaderStrategy: input.UnauthorizedCacheControlHeaderStrategy,
    }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayMethodSettingsList
 */
const se_AwsApiGatewayMethodSettingsList = (input: AwsApiGatewayMethodSettings[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsApiGatewayMethodSettings(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsApiGatewayRestApiDetails
 */
const se_AwsApiGatewayRestApiDetails = (input: AwsApiGatewayRestApiDetails, context: __SerdeContext): any => {
  return {
    ...(input.ApiKeySource != null && { ApiKeySource: input.ApiKeySource }),
    ...(input.BinaryMediaTypes != null && { BinaryMediaTypes: se_NonEmptyStringList(input.BinaryMediaTypes, context) }),
    ...(input.CreatedDate != null && { CreatedDate: input.CreatedDate }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.EndpointConfiguration != null && {
      EndpointConfiguration: se_AwsApiGatewayEndpointConfiguration(input.EndpointConfiguration, context),
    }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.MinimumCompressionSize != null && { MinimumCompressionSize: input.MinimumCompressionSize }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayStageDetails
 */
const se_AwsApiGatewayStageDetails = (input: AwsApiGatewayStageDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessLogSettings != null && {
      AccessLogSettings: se_AwsApiGatewayAccessLogSettings(input.AccessLogSettings, context),
    }),
    ...(input.CacheClusterEnabled != null && { CacheClusterEnabled: input.CacheClusterEnabled }),
    ...(input.CacheClusterSize != null && { CacheClusterSize: input.CacheClusterSize }),
    ...(input.CacheClusterStatus != null && { CacheClusterStatus: input.CacheClusterStatus }),
    ...(input.CanarySettings != null && {
      CanarySettings: se_AwsApiGatewayCanarySettings(input.CanarySettings, context),
    }),
    ...(input.ClientCertificateId != null && { ClientCertificateId: input.ClientCertificateId }),
    ...(input.CreatedDate != null && { CreatedDate: input.CreatedDate }),
    ...(input.DeploymentId != null && { DeploymentId: input.DeploymentId }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DocumentationVersion != null && { DocumentationVersion: input.DocumentationVersion }),
    ...(input.LastUpdatedDate != null && { LastUpdatedDate: input.LastUpdatedDate }),
    ...(input.MethodSettings != null && {
      MethodSettings: se_AwsApiGatewayMethodSettingsList(input.MethodSettings, context),
    }),
    ...(input.StageName != null && { StageName: input.StageName }),
    ...(input.TracingEnabled != null && { TracingEnabled: input.TracingEnabled }),
    ...(input.Variables != null && { Variables: se_FieldMap(input.Variables, context) }),
    ...(input.WebAclArn != null && { WebAclArn: input.WebAclArn }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayV2ApiDetails
 */
const se_AwsApiGatewayV2ApiDetails = (input: AwsApiGatewayV2ApiDetails, context: __SerdeContext): any => {
  return {
    ...(input.ApiEndpoint != null && { ApiEndpoint: input.ApiEndpoint }),
    ...(input.ApiId != null && { ApiId: input.ApiId }),
    ...(input.ApiKeySelectionExpression != null && { ApiKeySelectionExpression: input.ApiKeySelectionExpression }),
    ...(input.CorsConfiguration != null && {
      CorsConfiguration: se_AwsCorsConfiguration(input.CorsConfiguration, context),
    }),
    ...(input.CreatedDate != null && { CreatedDate: input.CreatedDate }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ProtocolType != null && { ProtocolType: input.ProtocolType }),
    ...(input.RouteSelectionExpression != null && { RouteSelectionExpression: input.RouteSelectionExpression }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayV2RouteSettings
 */
const se_AwsApiGatewayV2RouteSettings = (input: AwsApiGatewayV2RouteSettings, context: __SerdeContext): any => {
  return {
    ...(input.DataTraceEnabled != null && { DataTraceEnabled: input.DataTraceEnabled }),
    ...(input.DetailedMetricsEnabled != null && { DetailedMetricsEnabled: input.DetailedMetricsEnabled }),
    ...(input.LoggingLevel != null && { LoggingLevel: input.LoggingLevel }),
    ...(input.ThrottlingBurstLimit != null && { ThrottlingBurstLimit: input.ThrottlingBurstLimit }),
    ...(input.ThrottlingRateLimit != null && { ThrottlingRateLimit: __serializeFloat(input.ThrottlingRateLimit) }),
  };
};

/**
 * serializeAws_restJson1AwsApiGatewayV2StageDetails
 */
const se_AwsApiGatewayV2StageDetails = (input: AwsApiGatewayV2StageDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessLogSettings != null && {
      AccessLogSettings: se_AwsApiGatewayAccessLogSettings(input.AccessLogSettings, context),
    }),
    ...(input.ApiGatewayManaged != null && { ApiGatewayManaged: input.ApiGatewayManaged }),
    ...(input.AutoDeploy != null && { AutoDeploy: input.AutoDeploy }),
    ...(input.ClientCertificateId != null && { ClientCertificateId: input.ClientCertificateId }),
    ...(input.CreatedDate != null && { CreatedDate: input.CreatedDate }),
    ...(input.DefaultRouteSettings != null && {
      DefaultRouteSettings: se_AwsApiGatewayV2RouteSettings(input.DefaultRouteSettings, context),
    }),
    ...(input.DeploymentId != null && { DeploymentId: input.DeploymentId }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.LastDeploymentStatusMessage != null && {
      LastDeploymentStatusMessage: input.LastDeploymentStatusMessage,
    }),
    ...(input.LastUpdatedDate != null && { LastUpdatedDate: input.LastUpdatedDate }),
    ...(input.RouteSettings != null && {
      RouteSettings: se_AwsApiGatewayV2RouteSettings(input.RouteSettings, context),
    }),
    ...(input.StageName != null && { StageName: input.StageName }),
    ...(input.StageVariables != null && { StageVariables: se_FieldMap(input.StageVariables, context) }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupAvailabilityZonesList
 */
const se_AwsAutoScalingAutoScalingGroupAvailabilityZonesList = (
  input: AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails
 */
const se_AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails = (
  input: AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupDetails
 */
const se_AwsAutoScalingAutoScalingGroupDetails = (
  input: AwsAutoScalingAutoScalingGroupDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AvailabilityZones != null && {
      AvailabilityZones: se_AwsAutoScalingAutoScalingGroupAvailabilityZonesList(input.AvailabilityZones, context),
    }),
    ...(input.CapacityRebalance != null && { CapacityRebalance: input.CapacityRebalance }),
    ...(input.CreatedTime != null && { CreatedTime: input.CreatedTime }),
    ...(input.HealthCheckGracePeriod != null && { HealthCheckGracePeriod: input.HealthCheckGracePeriod }),
    ...(input.HealthCheckType != null && { HealthCheckType: input.HealthCheckType }),
    ...(input.LaunchConfigurationName != null && { LaunchConfigurationName: input.LaunchConfigurationName }),
    ...(input.LaunchTemplate != null && {
      LaunchTemplate: se_AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification(
        input.LaunchTemplate,
        context
      ),
    }),
    ...(input.LoadBalancerNames != null && { LoadBalancerNames: se_StringList(input.LoadBalancerNames, context) }),
    ...(input.MixedInstancesPolicy != null && {
      MixedInstancesPolicy: se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails(
        input.MixedInstancesPolicy,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification
 */
const se_AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification = (
  input: AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.LaunchTemplateId != null && { LaunchTemplateId: input.LaunchTemplateId }),
    ...(input.LaunchTemplateName != null && { LaunchTemplateName: input.LaunchTemplateName }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.InstancesDistribution != null && {
      InstancesDistribution: se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails(
        input.InstancesDistribution,
        context
      ),
    }),
    ...(input.LaunchTemplate != null && {
      LaunchTemplate: se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails(
        input.LaunchTemplate,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.OnDemandAllocationStrategy != null && { OnDemandAllocationStrategy: input.OnDemandAllocationStrategy }),
    ...(input.OnDemandBaseCapacity != null && { OnDemandBaseCapacity: input.OnDemandBaseCapacity }),
    ...(input.OnDemandPercentageAboveBaseCapacity != null && {
      OnDemandPercentageAboveBaseCapacity: input.OnDemandPercentageAboveBaseCapacity,
    }),
    ...(input.SpotAllocationStrategy != null && { SpotAllocationStrategy: input.SpotAllocationStrategy }),
    ...(input.SpotInstancePools != null && { SpotInstancePools: input.SpotInstancePools }),
    ...(input.SpotMaxPrice != null && { SpotMaxPrice: input.SpotMaxPrice }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.LaunchTemplateSpecification != null && {
      LaunchTemplateSpecification:
        se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification(
          input.LaunchTemplateSpecification,
          context
        ),
    }),
    ...(input.Overrides != null && {
      Overrides: se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList(
        input.Overrides,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.LaunchTemplateId != null && { LaunchTemplateId: input.LaunchTemplateId }),
    ...(input.LaunchTemplateName != null && { LaunchTemplateName: input.LaunchTemplateName }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails
 */
const se_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails = (
  input: AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.WeightedCapacity != null && { WeightedCapacity: input.WeightedCapacity }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails
 */
const se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails = (
  input: AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.Ebs != null && {
      Ebs: se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails(input.Ebs, context),
    }),
    ...(input.NoDevice != null && { NoDevice: input.NoDevice }),
    ...(input.VirtualName != null && { VirtualName: input.VirtualName }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails
 */
const se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails = (
  input: AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteOnTermination != null && { DeleteOnTermination: input.DeleteOnTermination }),
    ...(input.Encrypted != null && { Encrypted: input.Encrypted }),
    ...(input.Iops != null && { Iops: input.Iops }),
    ...(input.SnapshotId != null && { SnapshotId: input.SnapshotId }),
    ...(input.VolumeSize != null && { VolumeSize: input.VolumeSize }),
    ...(input.VolumeType != null && { VolumeType: input.VolumeType }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList
 */
const se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList = (
  input: AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationDetails
 */
const se_AwsAutoScalingLaunchConfigurationDetails = (
  input: AwsAutoScalingLaunchConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AssociatePublicIpAddress != null && { AssociatePublicIpAddress: input.AssociatePublicIpAddress }),
    ...(input.BlockDeviceMappings != null && {
      BlockDeviceMappings: se_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList(
        input.BlockDeviceMappings,
        context
      ),
    }),
    ...(input.ClassicLinkVpcId != null && { ClassicLinkVpcId: input.ClassicLinkVpcId }),
    ...(input.ClassicLinkVpcSecurityGroups != null && {
      ClassicLinkVpcSecurityGroups: se_NonEmptyStringList(input.ClassicLinkVpcSecurityGroups, context),
    }),
    ...(input.CreatedTime != null && { CreatedTime: input.CreatedTime }),
    ...(input.EbsOptimized != null && { EbsOptimized: input.EbsOptimized }),
    ...(input.IamInstanceProfile != null && { IamInstanceProfile: input.IamInstanceProfile }),
    ...(input.ImageId != null && { ImageId: input.ImageId }),
    ...(input.InstanceMonitoring != null && {
      InstanceMonitoring: se_AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails(
        input.InstanceMonitoring,
        context
      ),
    }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.KernelId != null && { KernelId: input.KernelId }),
    ...(input.KeyName != null && { KeyName: input.KeyName }),
    ...(input.LaunchConfigurationName != null && { LaunchConfigurationName: input.LaunchConfigurationName }),
    ...(input.MetadataOptions != null && {
      MetadataOptions: se_AwsAutoScalingLaunchConfigurationMetadataOptions(input.MetadataOptions, context),
    }),
    ...(input.PlacementTenancy != null && { PlacementTenancy: input.PlacementTenancy }),
    ...(input.RamdiskId != null && { RamdiskId: input.RamdiskId }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_NonEmptyStringList(input.SecurityGroups, context) }),
    ...(input.SpotPrice != null && { SpotPrice: input.SpotPrice }),
    ...(input.UserData != null && { UserData: input.UserData }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails
 */
const se_AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails = (
  input: AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsAutoScalingLaunchConfigurationMetadataOptions
 */
const se_AwsAutoScalingLaunchConfigurationMetadataOptions = (
  input: AwsAutoScalingLaunchConfigurationMetadataOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.HttpEndpoint != null && { HttpEndpoint: input.HttpEndpoint }),
    ...(input.HttpPutResponseHopLimit != null && { HttpPutResponseHopLimit: input.HttpPutResponseHopLimit }),
    ...(input.HttpTokens != null && { HttpTokens: input.HttpTokens }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanAdvancedBackupSettingsDetails
 */
const se_AwsBackupBackupPlanAdvancedBackupSettingsDetails = (
  input: AwsBackupBackupPlanAdvancedBackupSettingsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.BackupOptions != null && { BackupOptions: se_FieldMap(input.BackupOptions, context) }),
    ...(input.ResourceType != null && { ResourceType: input.ResourceType }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanAdvancedBackupSettingsList
 */
const se_AwsBackupBackupPlanAdvancedBackupSettingsList = (
  input: AwsBackupBackupPlanAdvancedBackupSettingsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsBackupBackupPlanAdvancedBackupSettingsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanBackupPlanDetails
 */
const se_AwsBackupBackupPlanBackupPlanDetails = (
  input: AwsBackupBackupPlanBackupPlanDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AdvancedBackupSettings != null && {
      AdvancedBackupSettings: se_AwsBackupBackupPlanAdvancedBackupSettingsList(input.AdvancedBackupSettings, context),
    }),
    ...(input.BackupPlanName != null && { BackupPlanName: input.BackupPlanName }),
    ...(input.BackupPlanRule != null && {
      BackupPlanRule: se_AwsBackupBackupPlanRuleList(input.BackupPlanRule, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanDetails
 */
const se_AwsBackupBackupPlanDetails = (input: AwsBackupBackupPlanDetails, context: __SerdeContext): any => {
  return {
    ...(input.BackupPlan != null && { BackupPlan: se_AwsBackupBackupPlanBackupPlanDetails(input.BackupPlan, context) }),
    ...(input.BackupPlanArn != null && { BackupPlanArn: input.BackupPlanArn }),
    ...(input.BackupPlanId != null && { BackupPlanId: input.BackupPlanId }),
    ...(input.VersionId != null && { VersionId: input.VersionId }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanLifecycleDetails
 */
const se_AwsBackupBackupPlanLifecycleDetails = (
  input: AwsBackupBackupPlanLifecycleDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteAfterDays != null && { DeleteAfterDays: input.DeleteAfterDays }),
    ...(input.MoveToColdStorageAfterDays != null && { MoveToColdStorageAfterDays: input.MoveToColdStorageAfterDays }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanRuleCopyActionsDetails
 */
const se_AwsBackupBackupPlanRuleCopyActionsDetails = (
  input: AwsBackupBackupPlanRuleCopyActionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DestinationBackupVaultArn != null && { DestinationBackupVaultArn: input.DestinationBackupVaultArn }),
    ...(input.Lifecycle != null && { Lifecycle: se_AwsBackupBackupPlanLifecycleDetails(input.Lifecycle, context) }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanRuleCopyActionsList
 */
const se_AwsBackupBackupPlanRuleCopyActionsList = (
  input: AwsBackupBackupPlanRuleCopyActionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsBackupBackupPlanRuleCopyActionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanRuleDetails
 */
const se_AwsBackupBackupPlanRuleDetails = (input: AwsBackupBackupPlanRuleDetails, context: __SerdeContext): any => {
  return {
    ...(input.CompletionWindowMinutes != null && { CompletionWindowMinutes: input.CompletionWindowMinutes }),
    ...(input.CopyActions != null && {
      CopyActions: se_AwsBackupBackupPlanRuleCopyActionsList(input.CopyActions, context),
    }),
    ...(input.EnableContinuousBackup != null && { EnableContinuousBackup: input.EnableContinuousBackup }),
    ...(input.Lifecycle != null && { Lifecycle: se_AwsBackupBackupPlanLifecycleDetails(input.Lifecycle, context) }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
    ...(input.RuleName != null && { RuleName: input.RuleName }),
    ...(input.ScheduleExpression != null && { ScheduleExpression: input.ScheduleExpression }),
    ...(input.StartWindowMinutes != null && { StartWindowMinutes: input.StartWindowMinutes }),
    ...(input.TargetBackupVault != null && { TargetBackupVault: input.TargetBackupVault }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupPlanRuleList
 */
const se_AwsBackupBackupPlanRuleList = (input: AwsBackupBackupPlanRuleDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsBackupBackupPlanRuleDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsBackupBackupVaultDetails
 */
const se_AwsBackupBackupVaultDetails = (input: AwsBackupBackupVaultDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessPolicy != null && { AccessPolicy: input.AccessPolicy }),
    ...(input.BackupVaultArn != null && { BackupVaultArn: input.BackupVaultArn }),
    ...(input.BackupVaultName != null && { BackupVaultName: input.BackupVaultName }),
    ...(input.EncryptionKeyArn != null && { EncryptionKeyArn: input.EncryptionKeyArn }),
    ...(input.Notifications != null && {
      Notifications: se_AwsBackupBackupVaultNotificationsDetails(input.Notifications, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsBackupBackupVaultNotificationsDetails
 */
const se_AwsBackupBackupVaultNotificationsDetails = (
  input: AwsBackupBackupVaultNotificationsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.BackupVaultEvents != null && {
      BackupVaultEvents: se_NonEmptyStringList(input.BackupVaultEvents, context),
    }),
    ...(input.SnsTopicArn != null && { SnsTopicArn: input.SnsTopicArn }),
  };
};

/**
 * serializeAws_restJson1AwsBackupRecoveryPointCalculatedLifecycleDetails
 */
const se_AwsBackupRecoveryPointCalculatedLifecycleDetails = (
  input: AwsBackupRecoveryPointCalculatedLifecycleDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteAt != null && { DeleteAt: input.DeleteAt }),
    ...(input.MoveToColdStorageAt != null && { MoveToColdStorageAt: input.MoveToColdStorageAt }),
  };
};

/**
 * serializeAws_restJson1AwsBackupRecoveryPointCreatedByDetails
 */
const se_AwsBackupRecoveryPointCreatedByDetails = (
  input: AwsBackupRecoveryPointCreatedByDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.BackupPlanArn != null && { BackupPlanArn: input.BackupPlanArn }),
    ...(input.BackupPlanId != null && { BackupPlanId: input.BackupPlanId }),
    ...(input.BackupPlanVersion != null && { BackupPlanVersion: input.BackupPlanVersion }),
    ...(input.BackupRuleId != null && { BackupRuleId: input.BackupRuleId }),
  };
};

/**
 * serializeAws_restJson1AwsBackupRecoveryPointDetails
 */
const se_AwsBackupRecoveryPointDetails = (input: AwsBackupRecoveryPointDetails, context: __SerdeContext): any => {
  return {
    ...(input.BackupSizeInBytes != null && { BackupSizeInBytes: input.BackupSizeInBytes }),
    ...(input.BackupVaultArn != null && { BackupVaultArn: input.BackupVaultArn }),
    ...(input.BackupVaultName != null && { BackupVaultName: input.BackupVaultName }),
    ...(input.CalculatedLifecycle != null && {
      CalculatedLifecycle: se_AwsBackupRecoveryPointCalculatedLifecycleDetails(input.CalculatedLifecycle, context),
    }),
    ...(input.CompletionDate != null && { CompletionDate: input.CompletionDate }),
    ...(input.CreatedBy != null && { CreatedBy: se_AwsBackupRecoveryPointCreatedByDetails(input.CreatedBy, context) }),
    ...(input.CreationDate != null && { CreationDate: input.CreationDate }),
    ...(input.EncryptionKeyArn != null && { EncryptionKeyArn: input.EncryptionKeyArn }),
    ...(input.IamRoleArn != null && { IamRoleArn: input.IamRoleArn }),
    ...(input.IsEncrypted != null && { IsEncrypted: input.IsEncrypted }),
    ...(input.LastRestoreTime != null && { LastRestoreTime: input.LastRestoreTime }),
    ...(input.Lifecycle != null && { Lifecycle: se_AwsBackupRecoveryPointLifecycleDetails(input.Lifecycle, context) }),
    ...(input.RecoveryPointArn != null && { RecoveryPointArn: input.RecoveryPointArn }),
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
    ...(input.ResourceType != null && { ResourceType: input.ResourceType }),
    ...(input.SourceBackupVaultArn != null && { SourceBackupVaultArn: input.SourceBackupVaultArn }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StatusMessage != null && { StatusMessage: input.StatusMessage }),
    ...(input.StorageClass != null && { StorageClass: input.StorageClass }),
  };
};

/**
 * serializeAws_restJson1AwsBackupRecoveryPointLifecycleDetails
 */
const se_AwsBackupRecoveryPointLifecycleDetails = (
  input: AwsBackupRecoveryPointLifecycleDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteAfterDays != null && { DeleteAfterDays: input.DeleteAfterDays }),
    ...(input.MoveToColdStorageAfterDays != null && { MoveToColdStorageAfterDays: input.MoveToColdStorageAfterDays }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateDetails
 */
const se_AwsCertificateManagerCertificateDetails = (
  input: AwsCertificateManagerCertificateDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CertificateAuthorityArn != null && { CertificateAuthorityArn: input.CertificateAuthorityArn }),
    ...(input.CreatedAt != null && { CreatedAt: input.CreatedAt }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.DomainValidationOptions != null && {
      DomainValidationOptions: se_AwsCertificateManagerCertificateDomainValidationOptions(
        input.DomainValidationOptions,
        context
      ),
    }),
    ...(input.ExtendedKeyUsages != null && {
      ExtendedKeyUsages: se_AwsCertificateManagerCertificateExtendedKeyUsages(input.ExtendedKeyUsages, context),
    }),
    ...(input.FailureReason != null && { FailureReason: input.FailureReason }),
    ...(input.ImportedAt != null && { ImportedAt: input.ImportedAt }),
    ...(input.InUseBy != null && { InUseBy: se_StringList(input.InUseBy, context) }),
    ...(input.IssuedAt != null && { IssuedAt: input.IssuedAt }),
    ...(input.Issuer != null && { Issuer: input.Issuer }),
    ...(input.KeyAlgorithm != null && { KeyAlgorithm: input.KeyAlgorithm }),
    ...(input.KeyUsages != null && {
      KeyUsages: se_AwsCertificateManagerCertificateKeyUsages(input.KeyUsages, context),
    }),
    ...(input.NotAfter != null && { NotAfter: input.NotAfter }),
    ...(input.NotBefore != null && { NotBefore: input.NotBefore }),
    ...(input.Options != null && { Options: se_AwsCertificateManagerCertificateOptions(input.Options, context) }),
    ...(input.RenewalEligibility != null && { RenewalEligibility: input.RenewalEligibility }),
    ...(input.RenewalSummary != null && {
      RenewalSummary: se_AwsCertificateManagerCertificateRenewalSummary(input.RenewalSummary, context),
    }),
    ...(input.Serial != null && { Serial: input.Serial }),
    ...(input.SignatureAlgorithm != null && { SignatureAlgorithm: input.SignatureAlgorithm }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.Subject != null && { Subject: input.Subject }),
    ...(input.SubjectAlternativeNames != null && {
      SubjectAlternativeNames: se_StringList(input.SubjectAlternativeNames, context),
    }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateDomainValidationOption
 */
const se_AwsCertificateManagerCertificateDomainValidationOption = (
  input: AwsCertificateManagerCertificateDomainValidationOption,
  context: __SerdeContext
): any => {
  return {
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.ResourceRecord != null && {
      ResourceRecord: se_AwsCertificateManagerCertificateResourceRecord(input.ResourceRecord, context),
    }),
    ...(input.ValidationDomain != null && { ValidationDomain: input.ValidationDomain }),
    ...(input.ValidationEmails != null && { ValidationEmails: se_StringList(input.ValidationEmails, context) }),
    ...(input.ValidationMethod != null && { ValidationMethod: input.ValidationMethod }),
    ...(input.ValidationStatus != null && { ValidationStatus: input.ValidationStatus }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateDomainValidationOptions
 */
const se_AwsCertificateManagerCertificateDomainValidationOptions = (
  input: AwsCertificateManagerCertificateDomainValidationOption[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCertificateManagerCertificateDomainValidationOption(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateExtendedKeyUsage
 */
const se_AwsCertificateManagerCertificateExtendedKeyUsage = (
  input: AwsCertificateManagerCertificateExtendedKeyUsage,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.OId != null && { OId: input.OId }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateExtendedKeyUsages
 */
const se_AwsCertificateManagerCertificateExtendedKeyUsages = (
  input: AwsCertificateManagerCertificateExtendedKeyUsage[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCertificateManagerCertificateExtendedKeyUsage(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateKeyUsage
 */
const se_AwsCertificateManagerCertificateKeyUsage = (
  input: AwsCertificateManagerCertificateKeyUsage,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateKeyUsages
 */
const se_AwsCertificateManagerCertificateKeyUsages = (
  input: AwsCertificateManagerCertificateKeyUsage[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCertificateManagerCertificateKeyUsage(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateOptions
 */
const se_AwsCertificateManagerCertificateOptions = (
  input: AwsCertificateManagerCertificateOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.CertificateTransparencyLoggingPreference != null && {
      CertificateTransparencyLoggingPreference: input.CertificateTransparencyLoggingPreference,
    }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateRenewalSummary
 */
const se_AwsCertificateManagerCertificateRenewalSummary = (
  input: AwsCertificateManagerCertificateRenewalSummary,
  context: __SerdeContext
): any => {
  return {
    ...(input.DomainValidationOptions != null && {
      DomainValidationOptions: se_AwsCertificateManagerCertificateDomainValidationOptions(
        input.DomainValidationOptions,
        context
      ),
    }),
    ...(input.RenewalStatus != null && { RenewalStatus: input.RenewalStatus }),
    ...(input.RenewalStatusReason != null && { RenewalStatusReason: input.RenewalStatusReason }),
    ...(input.UpdatedAt != null && { UpdatedAt: input.UpdatedAt }),
  };
};

/**
 * serializeAws_restJson1AwsCertificateManagerCertificateResourceRecord
 */
const se_AwsCertificateManagerCertificateResourceRecord = (
  input: AwsCertificateManagerCertificateResourceRecord,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFormationStackDetails
 */
const se_AwsCloudFormationStackDetails = (input: AwsCloudFormationStackDetails, context: __SerdeContext): any => {
  return {
    ...(input.Capabilities != null && { Capabilities: se_NonEmptyStringList(input.Capabilities, context) }),
    ...(input.CreationTime != null && { CreationTime: input.CreationTime }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DisableRollback != null && { DisableRollback: input.DisableRollback }),
    ...(input.DriftInformation != null && {
      DriftInformation: se_AwsCloudFormationStackDriftInformationDetails(input.DriftInformation, context),
    }),
    ...(input.EnableTerminationProtection != null && {
      EnableTerminationProtection: input.EnableTerminationProtection,
    }),
    ...(input.LastUpdatedTime != null && { LastUpdatedTime: input.LastUpdatedTime }),
    ...(input.NotificationArns != null && { NotificationArns: se_NonEmptyStringList(input.NotificationArns, context) }),
    ...(input.Outputs != null && { Outputs: se_AwsCloudFormationStackOutputsList(input.Outputs, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StackId != null && { StackId: input.StackId }),
    ...(input.StackName != null && { StackName: input.StackName }),
    ...(input.StackStatus != null && { StackStatus: input.StackStatus }),
    ...(input.StackStatusReason != null && { StackStatusReason: input.StackStatusReason }),
    ...(input.TimeoutInMinutes != null && { TimeoutInMinutes: input.TimeoutInMinutes }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFormationStackDriftInformationDetails
 */
const se_AwsCloudFormationStackDriftInformationDetails = (
  input: AwsCloudFormationStackDriftInformationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.StackDriftStatus != null && { StackDriftStatus: input.StackDriftStatus }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFormationStackOutputsDetails
 */
const se_AwsCloudFormationStackOutputsDetails = (
  input: AwsCloudFormationStackOutputsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.OutputKey != null && { OutputKey: input.OutputKey }),
    ...(input.OutputValue != null && { OutputValue: input.OutputValue }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFormationStackOutputsList
 */
const se_AwsCloudFormationStackOutputsList = (
  input: AwsCloudFormationStackOutputsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCloudFormationStackOutputsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionCacheBehavior
 */
const se_AwsCloudFrontDistributionCacheBehavior = (
  input: AwsCloudFrontDistributionCacheBehavior,
  context: __SerdeContext
): any => {
  return {
    ...(input.ViewerProtocolPolicy != null && { ViewerProtocolPolicy: input.ViewerProtocolPolicy }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionCacheBehaviors
 */
const se_AwsCloudFrontDistributionCacheBehaviors = (
  input: AwsCloudFrontDistributionCacheBehaviors,
  context: __SerdeContext
): any => {
  return {
    ...(input.Items != null && { Items: se_AwsCloudFrontDistributionCacheBehaviorsItemList(input.Items, context) }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionCacheBehaviorsItemList
 */
const se_AwsCloudFrontDistributionCacheBehaviorsItemList = (
  input: AwsCloudFrontDistributionCacheBehavior[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCloudFrontDistributionCacheBehavior(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionDefaultCacheBehavior
 */
const se_AwsCloudFrontDistributionDefaultCacheBehavior = (
  input: AwsCloudFrontDistributionDefaultCacheBehavior,
  context: __SerdeContext
): any => {
  return {
    ...(input.ViewerProtocolPolicy != null && { ViewerProtocolPolicy: input.ViewerProtocolPolicy }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionDetails
 */
const se_AwsCloudFrontDistributionDetails = (input: AwsCloudFrontDistributionDetails, context: __SerdeContext): any => {
  return {
    ...(input.CacheBehaviors != null && {
      CacheBehaviors: se_AwsCloudFrontDistributionCacheBehaviors(input.CacheBehaviors, context),
    }),
    ...(input.DefaultCacheBehavior != null && {
      DefaultCacheBehavior: se_AwsCloudFrontDistributionDefaultCacheBehavior(input.DefaultCacheBehavior, context),
    }),
    ...(input.DefaultRootObject != null && { DefaultRootObject: input.DefaultRootObject }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.ETag != null && { ETag: input.ETag }),
    ...(input.LastModifiedTime != null && { LastModifiedTime: input.LastModifiedTime }),
    ...(input.Logging != null && { Logging: se_AwsCloudFrontDistributionLogging(input.Logging, context) }),
    ...(input.OriginGroups != null && {
      OriginGroups: se_AwsCloudFrontDistributionOriginGroups(input.OriginGroups, context),
    }),
    ...(input.Origins != null && { Origins: se_AwsCloudFrontDistributionOrigins(input.Origins, context) }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.ViewerCertificate != null && {
      ViewerCertificate: se_AwsCloudFrontDistributionViewerCertificate(input.ViewerCertificate, context),
    }),
    ...(input.WebAclId != null && { WebAclId: input.WebAclId }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionLogging
 */
const se_AwsCloudFrontDistributionLogging = (input: AwsCloudFrontDistributionLogging, context: __SerdeContext): any => {
  return {
    ...(input.Bucket != null && { Bucket: input.Bucket }),
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.IncludeCookies != null && { IncludeCookies: input.IncludeCookies }),
    ...(input.Prefix != null && { Prefix: input.Prefix }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginCustomOriginConfig
 */
const se_AwsCloudFrontDistributionOriginCustomOriginConfig = (
  input: AwsCloudFrontDistributionOriginCustomOriginConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.HttpPort != null && { HttpPort: input.HttpPort }),
    ...(input.HttpsPort != null && { HttpsPort: input.HttpsPort }),
    ...(input.OriginKeepaliveTimeout != null && { OriginKeepaliveTimeout: input.OriginKeepaliveTimeout }),
    ...(input.OriginProtocolPolicy != null && { OriginProtocolPolicy: input.OriginProtocolPolicy }),
    ...(input.OriginReadTimeout != null && { OriginReadTimeout: input.OriginReadTimeout }),
    ...(input.OriginSslProtocols != null && {
      OriginSslProtocols: se_AwsCloudFrontDistributionOriginSslProtocols(input.OriginSslProtocols, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroup
 */
const se_AwsCloudFrontDistributionOriginGroup = (
  input: AwsCloudFrontDistributionOriginGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.FailoverCriteria != null && {
      FailoverCriteria: se_AwsCloudFrontDistributionOriginGroupFailover(input.FailoverCriteria, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailover
 */
const se_AwsCloudFrontDistributionOriginGroupFailover = (
  input: AwsCloudFrontDistributionOriginGroupFailover,
  context: __SerdeContext
): any => {
  return {
    ...(input.StatusCodes != null && {
      StatusCodes: se_AwsCloudFrontDistributionOriginGroupFailoverStatusCodes(input.StatusCodes, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailoverStatusCodes
 */
const se_AwsCloudFrontDistributionOriginGroupFailoverStatusCodes = (
  input: AwsCloudFrontDistributionOriginGroupFailoverStatusCodes,
  context: __SerdeContext
): any => {
  return {
    ...(input.Items != null && {
      Items: se_AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList(input.Items, context),
    }),
    ...(input.Quantity != null && { Quantity: input.Quantity }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList
 */
const se_AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList = (
  input: number[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroups
 */
const se_AwsCloudFrontDistributionOriginGroups = (
  input: AwsCloudFrontDistributionOriginGroups,
  context: __SerdeContext
): any => {
  return {
    ...(input.Items != null && { Items: se_AwsCloudFrontDistributionOriginGroupsItemList(input.Items, context) }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginGroupsItemList
 */
const se_AwsCloudFrontDistributionOriginGroupsItemList = (
  input: AwsCloudFrontDistributionOriginGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCloudFrontDistributionOriginGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginItem
 */
const se_AwsCloudFrontDistributionOriginItem = (
  input: AwsCloudFrontDistributionOriginItem,
  context: __SerdeContext
): any => {
  return {
    ...(input.CustomOriginConfig != null && {
      CustomOriginConfig: se_AwsCloudFrontDistributionOriginCustomOriginConfig(input.CustomOriginConfig, context),
    }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.OriginPath != null && { OriginPath: input.OriginPath }),
    ...(input.S3OriginConfig != null && {
      S3OriginConfig: se_AwsCloudFrontDistributionOriginS3OriginConfig(input.S3OriginConfig, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginItemList
 */
const se_AwsCloudFrontDistributionOriginItemList = (
  input: AwsCloudFrontDistributionOriginItem[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCloudFrontDistributionOriginItem(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOrigins
 */
const se_AwsCloudFrontDistributionOrigins = (input: AwsCloudFrontDistributionOrigins, context: __SerdeContext): any => {
  return {
    ...(input.Items != null && { Items: se_AwsCloudFrontDistributionOriginItemList(input.Items, context) }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginS3OriginConfig
 */
const se_AwsCloudFrontDistributionOriginS3OriginConfig = (
  input: AwsCloudFrontDistributionOriginS3OriginConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.OriginAccessIdentity != null && { OriginAccessIdentity: input.OriginAccessIdentity }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionOriginSslProtocols
 */
const se_AwsCloudFrontDistributionOriginSslProtocols = (
  input: AwsCloudFrontDistributionOriginSslProtocols,
  context: __SerdeContext
): any => {
  return {
    ...(input.Items != null && { Items: se_NonEmptyStringList(input.Items, context) }),
    ...(input.Quantity != null && { Quantity: input.Quantity }),
  };
};

/**
 * serializeAws_restJson1AwsCloudFrontDistributionViewerCertificate
 */
const se_AwsCloudFrontDistributionViewerCertificate = (
  input: AwsCloudFrontDistributionViewerCertificate,
  context: __SerdeContext
): any => {
  return {
    ...(input.AcmCertificateArn != null && { AcmCertificateArn: input.AcmCertificateArn }),
    ...(input.Certificate != null && { Certificate: input.Certificate }),
    ...(input.CertificateSource != null && { CertificateSource: input.CertificateSource }),
    ...(input.CloudFrontDefaultCertificate != null && {
      CloudFrontDefaultCertificate: input.CloudFrontDefaultCertificate,
    }),
    ...(input.IamCertificateId != null && { IamCertificateId: input.IamCertificateId }),
    ...(input.MinimumProtocolVersion != null && { MinimumProtocolVersion: input.MinimumProtocolVersion }),
    ...(input.SslSupportMethod != null && { SslSupportMethod: input.SslSupportMethod }),
  };
};

/**
 * serializeAws_restJson1AwsCloudTrailTrailDetails
 */
const se_AwsCloudTrailTrailDetails = (input: AwsCloudTrailTrailDetails, context: __SerdeContext): any => {
  return {
    ...(input.CloudWatchLogsLogGroupArn != null && { CloudWatchLogsLogGroupArn: input.CloudWatchLogsLogGroupArn }),
    ...(input.CloudWatchLogsRoleArn != null && { CloudWatchLogsRoleArn: input.CloudWatchLogsRoleArn }),
    ...(input.HasCustomEventSelectors != null && { HasCustomEventSelectors: input.HasCustomEventSelectors }),
    ...(input.HomeRegion != null && { HomeRegion: input.HomeRegion }),
    ...(input.IncludeGlobalServiceEvents != null && { IncludeGlobalServiceEvents: input.IncludeGlobalServiceEvents }),
    ...(input.IsMultiRegionTrail != null && { IsMultiRegionTrail: input.IsMultiRegionTrail }),
    ...(input.IsOrganizationTrail != null && { IsOrganizationTrail: input.IsOrganizationTrail }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LogFileValidationEnabled != null && { LogFileValidationEnabled: input.LogFileValidationEnabled }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.S3BucketName != null && { S3BucketName: input.S3BucketName }),
    ...(input.S3KeyPrefix != null && { S3KeyPrefix: input.S3KeyPrefix }),
    ...(input.SnsTopicArn != null && { SnsTopicArn: input.SnsTopicArn }),
    ...(input.SnsTopicName != null && { SnsTopicName: input.SnsTopicName }),
    ...(input.TrailArn != null && { TrailArn: input.TrailArn }),
  };
};

/**
 * serializeAws_restJson1AwsCloudWatchAlarmDetails
 */
const se_AwsCloudWatchAlarmDetails = (input: AwsCloudWatchAlarmDetails, context: __SerdeContext): any => {
  return {
    ...(input.ActionsEnabled != null && { ActionsEnabled: input.ActionsEnabled }),
    ...(input.AlarmActions != null && { AlarmActions: se_NonEmptyStringList(input.AlarmActions, context) }),
    ...(input.AlarmArn != null && { AlarmArn: input.AlarmArn }),
    ...(input.AlarmConfigurationUpdatedTimestamp != null && {
      AlarmConfigurationUpdatedTimestamp: input.AlarmConfigurationUpdatedTimestamp,
    }),
    ...(input.AlarmDescription != null && { AlarmDescription: input.AlarmDescription }),
    ...(input.AlarmName != null && { AlarmName: input.AlarmName }),
    ...(input.ComparisonOperator != null && { ComparisonOperator: input.ComparisonOperator }),
    ...(input.DatapointsToAlarm != null && { DatapointsToAlarm: input.DatapointsToAlarm }),
    ...(input.Dimensions != null && { Dimensions: se_AwsCloudWatchAlarmDimensionsList(input.Dimensions, context) }),
    ...(input.EvaluateLowSampleCountPercentile != null && {
      EvaluateLowSampleCountPercentile: input.EvaluateLowSampleCountPercentile,
    }),
    ...(input.EvaluationPeriods != null && { EvaluationPeriods: input.EvaluationPeriods }),
    ...(input.ExtendedStatistic != null && { ExtendedStatistic: input.ExtendedStatistic }),
    ...(input.InsufficientDataActions != null && {
      InsufficientDataActions: se_NonEmptyStringList(input.InsufficientDataActions, context),
    }),
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Namespace != null && { Namespace: input.Namespace }),
    ...(input.OkActions != null && { OkActions: se_NonEmptyStringList(input.OkActions, context) }),
    ...(input.Period != null && { Period: input.Period }),
    ...(input.Statistic != null && { Statistic: input.Statistic }),
    ...(input.Threshold != null && { Threshold: __serializeFloat(input.Threshold) }),
    ...(input.ThresholdMetricId != null && { ThresholdMetricId: input.ThresholdMetricId }),
    ...(input.TreatMissingData != null && { TreatMissingData: input.TreatMissingData }),
    ...(input.Unit != null && { Unit: input.Unit }),
  };
};

/**
 * serializeAws_restJson1AwsCloudWatchAlarmDimensionsDetails
 */
const se_AwsCloudWatchAlarmDimensionsDetails = (
  input: AwsCloudWatchAlarmDimensionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsCloudWatchAlarmDimensionsList
 */
const se_AwsCloudWatchAlarmDimensionsList = (
  input: AwsCloudWatchAlarmDimensionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCloudWatchAlarmDimensionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectArtifactsDetails
 */
const se_AwsCodeBuildProjectArtifactsDetails = (
  input: AwsCodeBuildProjectArtifactsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ArtifactIdentifier != null && { ArtifactIdentifier: input.ArtifactIdentifier }),
    ...(input.EncryptionDisabled != null && { EncryptionDisabled: input.EncryptionDisabled }),
    ...(input.Location != null && { Location: input.Location }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.NamespaceType != null && { NamespaceType: input.NamespaceType }),
    ...(input.OverrideArtifactName != null && { OverrideArtifactName: input.OverrideArtifactName }),
    ...(input.Packaging != null && { Packaging: input.Packaging }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectArtifactsList
 */
const se_AwsCodeBuildProjectArtifactsList = (
  input: AwsCodeBuildProjectArtifactsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCodeBuildProjectArtifactsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectDetails
 */
const se_AwsCodeBuildProjectDetails = (input: AwsCodeBuildProjectDetails, context: __SerdeContext): any => {
  return {
    ...(input.Artifacts != null && { Artifacts: se_AwsCodeBuildProjectArtifactsList(input.Artifacts, context) }),
    ...(input.EncryptionKey != null && { EncryptionKey: input.EncryptionKey }),
    ...(input.Environment != null && { Environment: se_AwsCodeBuildProjectEnvironment(input.Environment, context) }),
    ...(input.LogsConfig != null && { LogsConfig: se_AwsCodeBuildProjectLogsConfigDetails(input.LogsConfig, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.SecondaryArtifacts != null && {
      SecondaryArtifacts: se_AwsCodeBuildProjectArtifactsList(input.SecondaryArtifacts, context),
    }),
    ...(input.ServiceRole != null && { ServiceRole: input.ServiceRole }),
    ...(input.Source != null && { Source: se_AwsCodeBuildProjectSource(input.Source, context) }),
    ...(input.VpcConfig != null && { VpcConfig: se_AwsCodeBuildProjectVpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectEnvironment
 */
const se_AwsCodeBuildProjectEnvironment = (input: AwsCodeBuildProjectEnvironment, context: __SerdeContext): any => {
  return {
    ...(input.Certificate != null && { Certificate: input.Certificate }),
    ...(input.EnvironmentVariables != null && {
      EnvironmentVariables: se_AwsCodeBuildProjectEnvironmentEnvironmentVariablesList(
        input.EnvironmentVariables,
        context
      ),
    }),
    ...(input.ImagePullCredentialsType != null && { ImagePullCredentialsType: input.ImagePullCredentialsType }),
    ...(input.PrivilegedMode != null && { PrivilegedMode: input.PrivilegedMode }),
    ...(input.RegistryCredential != null && {
      RegistryCredential: se_AwsCodeBuildProjectEnvironmentRegistryCredential(input.RegistryCredential, context),
    }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails
 */
const se_AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails = (
  input: AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectEnvironmentEnvironmentVariablesList
 */
const se_AwsCodeBuildProjectEnvironmentEnvironmentVariablesList = (
  input: AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectEnvironmentRegistryCredential
 */
const se_AwsCodeBuildProjectEnvironmentRegistryCredential = (
  input: AwsCodeBuildProjectEnvironmentRegistryCredential,
  context: __SerdeContext
): any => {
  return {
    ...(input.Credential != null && { Credential: input.Credential }),
    ...(input.CredentialProvider != null && { CredentialProvider: input.CredentialProvider }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails
 */
const se_AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails = (
  input: AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StreamName != null && { StreamName: input.StreamName }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectLogsConfigDetails
 */
const se_AwsCodeBuildProjectLogsConfigDetails = (
  input: AwsCodeBuildProjectLogsConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CloudWatchLogs != null && {
      CloudWatchLogs: se_AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails(input.CloudWatchLogs, context),
    }),
    ...(input.S3Logs != null && { S3Logs: se_AwsCodeBuildProjectLogsConfigS3LogsDetails(input.S3Logs, context) }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectLogsConfigS3LogsDetails
 */
const se_AwsCodeBuildProjectLogsConfigS3LogsDetails = (
  input: AwsCodeBuildProjectLogsConfigS3LogsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.EncryptionDisabled != null && { EncryptionDisabled: input.EncryptionDisabled }),
    ...(input.Location != null && { Location: input.Location }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectSource
 */
const se_AwsCodeBuildProjectSource = (input: AwsCodeBuildProjectSource, context: __SerdeContext): any => {
  return {
    ...(input.GitCloneDepth != null && { GitCloneDepth: input.GitCloneDepth }),
    ...(input.InsecureSsl != null && { InsecureSsl: input.InsecureSsl }),
    ...(input.Location != null && { Location: input.Location }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsCodeBuildProjectVpcConfig
 */
const se_AwsCodeBuildProjectVpcConfig = (input: AwsCodeBuildProjectVpcConfig, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_NonEmptyStringList(input.SecurityGroupIds, context) }),
    ...(input.Subnets != null && { Subnets: se_NonEmptyStringList(input.Subnets, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsCorsConfiguration
 */
const se_AwsCorsConfiguration = (input: AwsCorsConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.AllowCredentials != null && { AllowCredentials: input.AllowCredentials }),
    ...(input.AllowHeaders != null && { AllowHeaders: se_NonEmptyStringList(input.AllowHeaders, context) }),
    ...(input.AllowMethods != null && { AllowMethods: se_NonEmptyStringList(input.AllowMethods, context) }),
    ...(input.AllowOrigins != null && { AllowOrigins: se_NonEmptyStringList(input.AllowOrigins, context) }),
    ...(input.ExposeHeaders != null && { ExposeHeaders: se_NonEmptyStringList(input.ExposeHeaders, context) }),
    ...(input.MaxAge != null && { MaxAge: input.MaxAge }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableAttributeDefinition
 */
const se_AwsDynamoDbTableAttributeDefinition = (
  input: AwsDynamoDbTableAttributeDefinition,
  context: __SerdeContext
): any => {
  return {
    ...(input.AttributeName != null && { AttributeName: input.AttributeName }),
    ...(input.AttributeType != null && { AttributeType: input.AttributeType }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableAttributeDefinitionList
 */
const se_AwsDynamoDbTableAttributeDefinitionList = (
  input: AwsDynamoDbTableAttributeDefinition[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableAttributeDefinition(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableBillingModeSummary
 */
const se_AwsDynamoDbTableBillingModeSummary = (
  input: AwsDynamoDbTableBillingModeSummary,
  context: __SerdeContext
): any => {
  return {
    ...(input.BillingMode != null && { BillingMode: input.BillingMode }),
    ...(input.LastUpdateToPayPerRequestDateTime != null && {
      LastUpdateToPayPerRequestDateTime: input.LastUpdateToPayPerRequestDateTime,
    }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableDetails
 */
const se_AwsDynamoDbTableDetails = (input: AwsDynamoDbTableDetails, context: __SerdeContext): any => {
  return {
    ...(input.AttributeDefinitions != null && {
      AttributeDefinitions: se_AwsDynamoDbTableAttributeDefinitionList(input.AttributeDefinitions, context),
    }),
    ...(input.BillingModeSummary != null && {
      BillingModeSummary: se_AwsDynamoDbTableBillingModeSummary(input.BillingModeSummary, context),
    }),
    ...(input.CreationDateTime != null && { CreationDateTime: input.CreationDateTime }),
    ...(input.GlobalSecondaryIndexes != null && {
      GlobalSecondaryIndexes: se_AwsDynamoDbTableGlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),
    }),
    ...(input.GlobalTableVersion != null && { GlobalTableVersion: input.GlobalTableVersion }),
    ...(input.ItemCount != null && { ItemCount: input.ItemCount }),
    ...(input.KeySchema != null && { KeySchema: se_AwsDynamoDbTableKeySchemaList(input.KeySchema, context) }),
    ...(input.LatestStreamArn != null && { LatestStreamArn: input.LatestStreamArn }),
    ...(input.LatestStreamLabel != null && { LatestStreamLabel: input.LatestStreamLabel }),
    ...(input.LocalSecondaryIndexes != null && {
      LocalSecondaryIndexes: se_AwsDynamoDbTableLocalSecondaryIndexList(input.LocalSecondaryIndexes, context),
    }),
    ...(input.ProvisionedThroughput != null && {
      ProvisionedThroughput: se_AwsDynamoDbTableProvisionedThroughput(input.ProvisionedThroughput, context),
    }),
    ...(input.Replicas != null && { Replicas: se_AwsDynamoDbTableReplicaList(input.Replicas, context) }),
    ...(input.RestoreSummary != null && {
      RestoreSummary: se_AwsDynamoDbTableRestoreSummary(input.RestoreSummary, context),
    }),
    ...(input.SseDescription != null && {
      SseDescription: se_AwsDynamoDbTableSseDescription(input.SseDescription, context),
    }),
    ...(input.StreamSpecification != null && {
      StreamSpecification: se_AwsDynamoDbTableStreamSpecification(input.StreamSpecification, context),
    }),
    ...(input.TableId != null && { TableId: input.TableId }),
    ...(input.TableName != null && { TableName: input.TableName }),
    ...(input.TableSizeBytes != null && { TableSizeBytes: input.TableSizeBytes }),
    ...(input.TableStatus != null && { TableStatus: input.TableStatus }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableGlobalSecondaryIndex
 */
const se_AwsDynamoDbTableGlobalSecondaryIndex = (
  input: AwsDynamoDbTableGlobalSecondaryIndex,
  context: __SerdeContext
): any => {
  return {
    ...(input.Backfilling != null && { Backfilling: input.Backfilling }),
    ...(input.IndexArn != null && { IndexArn: input.IndexArn }),
    ...(input.IndexName != null && { IndexName: input.IndexName }),
    ...(input.IndexSizeBytes != null && { IndexSizeBytes: input.IndexSizeBytes }),
    ...(input.IndexStatus != null && { IndexStatus: input.IndexStatus }),
    ...(input.ItemCount != null && { ItemCount: input.ItemCount }),
    ...(input.KeySchema != null && { KeySchema: se_AwsDynamoDbTableKeySchemaList(input.KeySchema, context) }),
    ...(input.Projection != null && { Projection: se_AwsDynamoDbTableProjection(input.Projection, context) }),
    ...(input.ProvisionedThroughput != null && {
      ProvisionedThroughput: se_AwsDynamoDbTableProvisionedThroughput(input.ProvisionedThroughput, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableGlobalSecondaryIndexList
 */
const se_AwsDynamoDbTableGlobalSecondaryIndexList = (
  input: AwsDynamoDbTableGlobalSecondaryIndex[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableGlobalSecondaryIndex(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableKeySchema
 */
const se_AwsDynamoDbTableKeySchema = (input: AwsDynamoDbTableKeySchema, context: __SerdeContext): any => {
  return {
    ...(input.AttributeName != null && { AttributeName: input.AttributeName }),
    ...(input.KeyType != null && { KeyType: input.KeyType }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableKeySchemaList
 */
const se_AwsDynamoDbTableKeySchemaList = (input: AwsDynamoDbTableKeySchema[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableKeySchema(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableLocalSecondaryIndex
 */
const se_AwsDynamoDbTableLocalSecondaryIndex = (
  input: AwsDynamoDbTableLocalSecondaryIndex,
  context: __SerdeContext
): any => {
  return {
    ...(input.IndexArn != null && { IndexArn: input.IndexArn }),
    ...(input.IndexName != null && { IndexName: input.IndexName }),
    ...(input.KeySchema != null && { KeySchema: se_AwsDynamoDbTableKeySchemaList(input.KeySchema, context) }),
    ...(input.Projection != null && { Projection: se_AwsDynamoDbTableProjection(input.Projection, context) }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableLocalSecondaryIndexList
 */
const se_AwsDynamoDbTableLocalSecondaryIndexList = (
  input: AwsDynamoDbTableLocalSecondaryIndex[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableLocalSecondaryIndex(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableProjection
 */
const se_AwsDynamoDbTableProjection = (input: AwsDynamoDbTableProjection, context: __SerdeContext): any => {
  return {
    ...(input.NonKeyAttributes != null && { NonKeyAttributes: se_StringList(input.NonKeyAttributes, context) }),
    ...(input.ProjectionType != null && { ProjectionType: input.ProjectionType }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableProvisionedThroughput
 */
const se_AwsDynamoDbTableProvisionedThroughput = (
  input: AwsDynamoDbTableProvisionedThroughput,
  context: __SerdeContext
): any => {
  return {
    ...(input.LastDecreaseDateTime != null && { LastDecreaseDateTime: input.LastDecreaseDateTime }),
    ...(input.LastIncreaseDateTime != null && { LastIncreaseDateTime: input.LastIncreaseDateTime }),
    ...(input.NumberOfDecreasesToday != null && { NumberOfDecreasesToday: input.NumberOfDecreasesToday }),
    ...(input.ReadCapacityUnits != null && { ReadCapacityUnits: input.ReadCapacityUnits }),
    ...(input.WriteCapacityUnits != null && { WriteCapacityUnits: input.WriteCapacityUnits }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableProvisionedThroughputOverride
 */
const se_AwsDynamoDbTableProvisionedThroughputOverride = (
  input: AwsDynamoDbTableProvisionedThroughputOverride,
  context: __SerdeContext
): any => {
  return {
    ...(input.ReadCapacityUnits != null && { ReadCapacityUnits: input.ReadCapacityUnits }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableReplica
 */
const se_AwsDynamoDbTableReplica = (input: AwsDynamoDbTableReplica, context: __SerdeContext): any => {
  return {
    ...(input.GlobalSecondaryIndexes != null && {
      GlobalSecondaryIndexes: se_AwsDynamoDbTableReplicaGlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),
    }),
    ...(input.KmsMasterKeyId != null && { KmsMasterKeyId: input.KmsMasterKeyId }),
    ...(input.ProvisionedThroughputOverride != null && {
      ProvisionedThroughputOverride: se_AwsDynamoDbTableProvisionedThroughputOverride(
        input.ProvisionedThroughputOverride,
        context
      ),
    }),
    ...(input.RegionName != null && { RegionName: input.RegionName }),
    ...(input.ReplicaStatus != null && { ReplicaStatus: input.ReplicaStatus }),
    ...(input.ReplicaStatusDescription != null && { ReplicaStatusDescription: input.ReplicaStatusDescription }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableReplicaGlobalSecondaryIndex
 */
const se_AwsDynamoDbTableReplicaGlobalSecondaryIndex = (
  input: AwsDynamoDbTableReplicaGlobalSecondaryIndex,
  context: __SerdeContext
): any => {
  return {
    ...(input.IndexName != null && { IndexName: input.IndexName }),
    ...(input.ProvisionedThroughputOverride != null && {
      ProvisionedThroughputOverride: se_AwsDynamoDbTableProvisionedThroughputOverride(
        input.ProvisionedThroughputOverride,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableReplicaGlobalSecondaryIndexList
 */
const se_AwsDynamoDbTableReplicaGlobalSecondaryIndexList = (
  input: AwsDynamoDbTableReplicaGlobalSecondaryIndex[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableReplicaGlobalSecondaryIndex(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableReplicaList
 */
const se_AwsDynamoDbTableReplicaList = (input: AwsDynamoDbTableReplica[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsDynamoDbTableReplica(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsDynamoDbTableRestoreSummary
 */
const se_AwsDynamoDbTableRestoreSummary = (input: AwsDynamoDbTableRestoreSummary, context: __SerdeContext): any => {
  return {
    ...(input.RestoreDateTime != null && { RestoreDateTime: input.RestoreDateTime }),
    ...(input.RestoreInProgress != null && { RestoreInProgress: input.RestoreInProgress }),
    ...(input.SourceBackupArn != null && { SourceBackupArn: input.SourceBackupArn }),
    ...(input.SourceTableArn != null && { SourceTableArn: input.SourceTableArn }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableSseDescription
 */
const se_AwsDynamoDbTableSseDescription = (input: AwsDynamoDbTableSseDescription, context: __SerdeContext): any => {
  return {
    ...(input.InaccessibleEncryptionDateTime != null && {
      InaccessibleEncryptionDateTime: input.InaccessibleEncryptionDateTime,
    }),
    ...(input.KmsMasterKeyArn != null && { KmsMasterKeyArn: input.KmsMasterKeyArn }),
    ...(input.SseType != null && { SseType: input.SseType }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsDynamoDbTableStreamSpecification
 */
const se_AwsDynamoDbTableStreamSpecification = (
  input: AwsDynamoDbTableStreamSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.StreamEnabled != null && { StreamEnabled: input.StreamEnabled }),
    ...(input.StreamViewType != null && { StreamViewType: input.StreamViewType }),
  };
};

/**
 * serializeAws_restJson1AwsEc2EipDetails
 */
const se_AwsEc2EipDetails = (input: AwsEc2EipDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllocationId != null && { AllocationId: input.AllocationId }),
    ...(input.AssociationId != null && { AssociationId: input.AssociationId }),
    ...(input.Domain != null && { Domain: input.Domain }),
    ...(input.InstanceId != null && { InstanceId: input.InstanceId }),
    ...(input.NetworkBorderGroup != null && { NetworkBorderGroup: input.NetworkBorderGroup }),
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
    ...(input.NetworkInterfaceOwnerId != null && { NetworkInterfaceOwnerId: input.NetworkInterfaceOwnerId }),
    ...(input.PrivateIpAddress != null && { PrivateIpAddress: input.PrivateIpAddress }),
    ...(input.PublicIp != null && { PublicIp: input.PublicIp }),
    ...(input.PublicIpv4Pool != null && { PublicIpv4Pool: input.PublicIpv4Pool }),
  };
};

/**
 * serializeAws_restJson1AwsEc2InstanceDetails
 */
const se_AwsEc2InstanceDetails = (input: AwsEc2InstanceDetails, context: __SerdeContext): any => {
  return {
    ...(input.IamInstanceProfileArn != null && { IamInstanceProfileArn: input.IamInstanceProfileArn }),
    ...(input.ImageId != null && { ImageId: input.ImageId }),
    ...(input.IpV4Addresses != null && { IpV4Addresses: se_StringList(input.IpV4Addresses, context) }),
    ...(input.IpV6Addresses != null && { IpV6Addresses: se_StringList(input.IpV6Addresses, context) }),
    ...(input.KeyName != null && { KeyName: input.KeyName }),
    ...(input.LaunchedAt != null && { LaunchedAt: input.LaunchedAt }),
    ...(input.MetadataOptions != null && {
      MetadataOptions: se_AwsEc2InstanceMetadataOptions(input.MetadataOptions, context),
    }),
    ...(input.Monitoring != null && { Monitoring: se_AwsEc2InstanceMonitoringDetails(input.Monitoring, context) }),
    ...(input.NetworkInterfaces != null && {
      NetworkInterfaces: se_AwsEc2InstanceNetworkInterfacesList(input.NetworkInterfaces, context),
    }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.VirtualizationType != null && { VirtualizationType: input.VirtualizationType }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2InstanceMetadataOptions
 */
const se_AwsEc2InstanceMetadataOptions = (input: AwsEc2InstanceMetadataOptions, context: __SerdeContext): any => {
  return {
    ...(input.HttpEndpoint != null && { HttpEndpoint: input.HttpEndpoint }),
    ...(input.HttpProtocolIpv6 != null && { HttpProtocolIpv6: input.HttpProtocolIpv6 }),
    ...(input.HttpPutResponseHopLimit != null && { HttpPutResponseHopLimit: input.HttpPutResponseHopLimit }),
    ...(input.HttpTokens != null && { HttpTokens: input.HttpTokens }),
    ...(input.InstanceMetadataTags != null && { InstanceMetadataTags: input.InstanceMetadataTags }),
  };
};

/**
 * serializeAws_restJson1AwsEc2InstanceMonitoringDetails
 */
const se_AwsEc2InstanceMonitoringDetails = (input: AwsEc2InstanceMonitoringDetails, context: __SerdeContext): any => {
  return {
    ...(input.State != null && { State: input.State }),
  };
};

/**
 * serializeAws_restJson1AwsEc2InstanceNetworkInterfacesDetails
 */
const se_AwsEc2InstanceNetworkInterfacesDetails = (
  input: AwsEc2InstanceNetworkInterfacesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2InstanceNetworkInterfacesList
 */
const se_AwsEc2InstanceNetworkInterfacesList = (
  input: AwsEc2InstanceNetworkInterfacesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2InstanceNetworkInterfacesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails
 */
const se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails = (
  input: AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.Ebs != null && { Ebs: se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails(input.Ebs, context) }),
    ...(input.NoDevice != null && { NoDevice: input.NoDevice }),
    ...(input.VirtualName != null && { VirtualName: input.VirtualName }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails
 */
const se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails = (
  input: AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteOnTermination != null && { DeleteOnTermination: input.DeleteOnTermination }),
    ...(input.Encrypted != null && { Encrypted: input.Encrypted }),
    ...(input.Iops != null && { Iops: input.Iops }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.SnapshotId != null && { SnapshotId: input.SnapshotId }),
    ...(input.Throughput != null && { Throughput: input.Throughput }),
    ...(input.VolumeSize != null && { VolumeSize: input.VolumeSize }),
    ...(input.VolumeType != null && { VolumeType: input.VolumeType }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetList
 */
const se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetList = (
  input: AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails
 */
const se_AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails = (
  input: AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CapacityReservationId != null && { CapacityReservationId: input.CapacityReservationId }),
    ...(input.CapacityReservationResourceGroupArn != null && {
      CapacityReservationResourceGroupArn: input.CapacityReservationResourceGroupArn,
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails
 */
const se_AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails = (
  input: AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CapacityReservationPreference != null && {
      CapacityReservationPreference: input.CapacityReservationPreference,
    }),
    ...(input.CapacityReservationTarget != null && {
      CapacityReservationTarget:
        se_AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails(
          input.CapacityReservationTarget,
          context
        ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataCpuOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataCpuOptionsDetails = (
  input: AwsEc2LaunchTemplateDataCpuOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CoreCount != null && { CoreCount: input.CoreCount }),
    ...(input.ThreadsPerCore != null && { ThreadsPerCore: input.ThreadsPerCore }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataCreditSpecificationDetails
 */
const se_AwsEc2LaunchTemplateDataCreditSpecificationDetails = (
  input: AwsEc2LaunchTemplateDataCreditSpecificationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CpuCredits != null && { CpuCredits: input.CpuCredits }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataDetails
 */
const se_AwsEc2LaunchTemplateDataDetails = (input: AwsEc2LaunchTemplateDataDetails, context: __SerdeContext): any => {
  return {
    ...(input.BlockDeviceMappingSet != null && {
      BlockDeviceMappingSet: se_AwsEc2LaunchTemplateDataBlockDeviceMappingSetList(input.BlockDeviceMappingSet, context),
    }),
    ...(input.CapacityReservationSpecification != null && {
      CapacityReservationSpecification: se_AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails(
        input.CapacityReservationSpecification,
        context
      ),
    }),
    ...(input.CpuOptions != null && {
      CpuOptions: se_AwsEc2LaunchTemplateDataCpuOptionsDetails(input.CpuOptions, context),
    }),
    ...(input.CreditSpecification != null && {
      CreditSpecification: se_AwsEc2LaunchTemplateDataCreditSpecificationDetails(input.CreditSpecification, context),
    }),
    ...(input.DisableApiStop != null && { DisableApiStop: input.DisableApiStop }),
    ...(input.DisableApiTermination != null && { DisableApiTermination: input.DisableApiTermination }),
    ...(input.EbsOptimized != null && { EbsOptimized: input.EbsOptimized }),
    ...(input.ElasticGpuSpecificationSet != null && {
      ElasticGpuSpecificationSet: se_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList(
        input.ElasticGpuSpecificationSet,
        context
      ),
    }),
    ...(input.ElasticInferenceAcceleratorSet != null && {
      ElasticInferenceAcceleratorSet: se_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList(
        input.ElasticInferenceAcceleratorSet,
        context
      ),
    }),
    ...(input.EnclaveOptions != null && {
      EnclaveOptions: se_AwsEc2LaunchTemplateDataEnclaveOptionsDetails(input.EnclaveOptions, context),
    }),
    ...(input.HibernationOptions != null && {
      HibernationOptions: se_AwsEc2LaunchTemplateDataHibernationOptionsDetails(input.HibernationOptions, context),
    }),
    ...(input.IamInstanceProfile != null && {
      IamInstanceProfile: se_AwsEc2LaunchTemplateDataIamInstanceProfileDetails(input.IamInstanceProfile, context),
    }),
    ...(input.ImageId != null && { ImageId: input.ImageId }),
    ...(input.InstanceInitiatedShutdownBehavior != null && {
      InstanceInitiatedShutdownBehavior: input.InstanceInitiatedShutdownBehavior,
    }),
    ...(input.InstanceMarketOptions != null && {
      InstanceMarketOptions: se_AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails(
        input.InstanceMarketOptions,
        context
      ),
    }),
    ...(input.InstanceRequirements != null && {
      InstanceRequirements: se_AwsEc2LaunchTemplateDataInstanceRequirementsDetails(input.InstanceRequirements, context),
    }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.KernelId != null && { KernelId: input.KernelId }),
    ...(input.KeyName != null && { KeyName: input.KeyName }),
    ...(input.LicenseSet != null && {
      LicenseSet: se_AwsEc2LaunchTemplateDataLicenseSetList(input.LicenseSet, context),
    }),
    ...(input.MaintenanceOptions != null && {
      MaintenanceOptions: se_AwsEc2LaunchTemplateDataMaintenanceOptionsDetails(input.MaintenanceOptions, context),
    }),
    ...(input.MetadataOptions != null && {
      MetadataOptions: se_AwsEc2LaunchTemplateDataMetadataOptionsDetails(input.MetadataOptions, context),
    }),
    ...(input.Monitoring != null && {
      Monitoring: se_AwsEc2LaunchTemplateDataMonitoringDetails(input.Monitoring, context),
    }),
    ...(input.NetworkInterfaceSet != null && {
      NetworkInterfaceSet: se_AwsEc2LaunchTemplateDataNetworkInterfaceSetList(input.NetworkInterfaceSet, context),
    }),
    ...(input.Placement != null && {
      Placement: se_AwsEc2LaunchTemplateDataPlacementDetails(input.Placement, context),
    }),
    ...(input.PrivateDnsNameOptions != null && {
      PrivateDnsNameOptions: se_AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails(
        input.PrivateDnsNameOptions,
        context
      ),
    }),
    ...(input.RamDiskId != null && { RamDiskId: input.RamDiskId }),
    ...(input.SecurityGroupIdSet != null && {
      SecurityGroupIdSet: se_NonEmptyStringList(input.SecurityGroupIdSet, context),
    }),
    ...(input.SecurityGroupSet != null && { SecurityGroupSet: se_NonEmptyStringList(input.SecurityGroupSet, context) }),
    ...(input.UserData != null && { UserData: input.UserData }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails
 */
const se_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails = (
  input: AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList
 */
const se_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList = (
  input: AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails
 */
const se_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails = (
  input: AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Count != null && { Count: input.Count }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList
 */
const se_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList = (
  input: AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataEnclaveOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataEnclaveOptionsDetails = (
  input: AwsEc2LaunchTemplateDataEnclaveOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataHibernationOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataHibernationOptionsDetails = (
  input: AwsEc2LaunchTemplateDataHibernationOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Configured != null && { Configured: input.Configured }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataIamInstanceProfileDetails
 */
const se_AwsEc2LaunchTemplateDataIamInstanceProfileDetails = (
  input: AwsEc2LaunchTemplateDataIamInstanceProfileDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails = (
  input: AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.MarketType != null && { MarketType: input.MarketType }),
    ...(input.SpotOptions != null && {
      SpotOptions: se_AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails(input.SpotOptions, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails = (
  input: AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.BlockDurationMinutes != null && { BlockDurationMinutes: input.BlockDurationMinutes }),
    ...(input.InstanceInterruptionBehavior != null && {
      InstanceInterruptionBehavior: input.InstanceInterruptionBehavior,
    }),
    ...(input.MaxPrice != null && { MaxPrice: input.MaxPrice }),
    ...(input.SpotInstanceType != null && { SpotInstanceType: input.SpotInstanceType }),
    ...(input.ValidUntil != null && { ValidUntil: input.ValidUntil }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AcceleratorCount != null && {
      AcceleratorCount: se_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails(
        input.AcceleratorCount,
        context
      ),
    }),
    ...(input.AcceleratorManufacturers != null && {
      AcceleratorManufacturers: se_NonEmptyStringList(input.AcceleratorManufacturers, context),
    }),
    ...(input.AcceleratorNames != null && { AcceleratorNames: se_NonEmptyStringList(input.AcceleratorNames, context) }),
    ...(input.AcceleratorTotalMemoryMiB != null && {
      AcceleratorTotalMemoryMiB: se_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails(
        input.AcceleratorTotalMemoryMiB,
        context
      ),
    }),
    ...(input.AcceleratorTypes != null && { AcceleratorTypes: se_NonEmptyStringList(input.AcceleratorTypes, context) }),
    ...(input.BareMetal != null && { BareMetal: input.BareMetal }),
    ...(input.BaselineEbsBandwidthMbps != null && {
      BaselineEbsBandwidthMbps: se_AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails(
        input.BaselineEbsBandwidthMbps,
        context
      ),
    }),
    ...(input.BurstablePerformance != null && { BurstablePerformance: input.BurstablePerformance }),
    ...(input.CpuManufacturers != null && { CpuManufacturers: se_NonEmptyStringList(input.CpuManufacturers, context) }),
    ...(input.ExcludedInstanceTypes != null && {
      ExcludedInstanceTypes: se_NonEmptyStringList(input.ExcludedInstanceTypes, context),
    }),
    ...(input.InstanceGenerations != null && {
      InstanceGenerations: se_NonEmptyStringList(input.InstanceGenerations, context),
    }),
    ...(input.LocalStorage != null && { LocalStorage: input.LocalStorage }),
    ...(input.LocalStorageTypes != null && {
      LocalStorageTypes: se_NonEmptyStringList(input.LocalStorageTypes, context),
    }),
    ...(input.MemoryGiBPerVCpu != null && {
      MemoryGiBPerVCpu: se_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails(
        input.MemoryGiBPerVCpu,
        context
      ),
    }),
    ...(input.MemoryMiB != null && {
      MemoryMiB: se_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails(input.MemoryMiB, context),
    }),
    ...(input.NetworkInterfaceCount != null && {
      NetworkInterfaceCount: se_AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails(
        input.NetworkInterfaceCount,
        context
      ),
    }),
    ...(input.OnDemandMaxPricePercentageOverLowestPrice != null && {
      OnDemandMaxPricePercentageOverLowestPrice: input.OnDemandMaxPricePercentageOverLowestPrice,
    }),
    ...(input.RequireHibernateSupport != null && { RequireHibernateSupport: input.RequireHibernateSupport }),
    ...(input.SpotMaxPricePercentageOverLowestPrice != null && {
      SpotMaxPricePercentageOverLowestPrice: input.SpotMaxPricePercentageOverLowestPrice,
    }),
    ...(input.TotalLocalStorageGB != null && {
      TotalLocalStorageGB: se_AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails(
        input.TotalLocalStorageGB,
        context
      ),
    }),
    ...(input.VCpuCount != null && {
      VCpuCount: se_AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails(input.VCpuCount, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: __serializeFloat(input.Max) }),
    ...(input.Min != null && { Min: __serializeFloat(input.Min) }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: __serializeFloat(input.Max) }),
    ...(input.Min != null && { Min: __serializeFloat(input.Min) }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails
 */
const se_AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails = (
  input: AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Max != null && { Max: input.Max }),
    ...(input.Min != null && { Min: input.Min }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataLicenseSetDetails
 */
const se_AwsEc2LaunchTemplateDataLicenseSetDetails = (
  input: AwsEc2LaunchTemplateDataLicenseSetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.LicenseConfigurationArn != null && { LicenseConfigurationArn: input.LicenseConfigurationArn }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataLicenseSetList
 */
const se_AwsEc2LaunchTemplateDataLicenseSetList = (
  input: AwsEc2LaunchTemplateDataLicenseSetDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataLicenseSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataMaintenanceOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataMaintenanceOptionsDetails = (
  input: AwsEc2LaunchTemplateDataMaintenanceOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutoRecovery != null && { AutoRecovery: input.AutoRecovery }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataMetadataOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataMetadataOptionsDetails = (
  input: AwsEc2LaunchTemplateDataMetadataOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.HttpEndpoint != null && { HttpEndpoint: input.HttpEndpoint }),
    ...(input.HttpProtocolIpv6 != null && { HttpProtocolIpv6: input.HttpProtocolIpv6 }),
    ...(input.HttpPutResponseHopLimit != null && { HttpPutResponseHopLimit: input.HttpPutResponseHopLimit }),
    ...(input.HttpTokens != null && { HttpTokens: input.HttpTokens }),
    ...(input.InstanceMetadataTags != null && { InstanceMetadataTags: input.InstanceMetadataTags }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataMonitoringDetails
 */
const se_AwsEc2LaunchTemplateDataMonitoringDetails = (
  input: AwsEc2LaunchTemplateDataMonitoringDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AssociateCarrierIpAddress != null && { AssociateCarrierIpAddress: input.AssociateCarrierIpAddress }),
    ...(input.AssociatePublicIpAddress != null && { AssociatePublicIpAddress: input.AssociatePublicIpAddress }),
    ...(input.DeleteOnTermination != null && { DeleteOnTermination: input.DeleteOnTermination }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DeviceIndex != null && { DeviceIndex: input.DeviceIndex }),
    ...(input.Groups != null && { Groups: se_NonEmptyStringList(input.Groups, context) }),
    ...(input.InterfaceType != null && { InterfaceType: input.InterfaceType }),
    ...(input.Ipv4PrefixCount != null && { Ipv4PrefixCount: input.Ipv4PrefixCount }),
    ...(input.Ipv4Prefixes != null && {
      Ipv4Prefixes: se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList(input.Ipv4Prefixes, context),
    }),
    ...(input.Ipv6AddressCount != null && { Ipv6AddressCount: input.Ipv6AddressCount }),
    ...(input.Ipv6Addresses != null && {
      Ipv6Addresses: se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList(input.Ipv6Addresses, context),
    }),
    ...(input.Ipv6PrefixCount != null && { Ipv6PrefixCount: input.Ipv6PrefixCount }),
    ...(input.Ipv6Prefixes != null && {
      Ipv6Prefixes: se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList(input.Ipv6Prefixes, context),
    }),
    ...(input.NetworkCardIndex != null && { NetworkCardIndex: input.NetworkCardIndex }),
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
    ...(input.PrivateIpAddress != null && { PrivateIpAddress: input.PrivateIpAddress }),
    ...(input.PrivateIpAddresses != null && {
      PrivateIpAddresses: se_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList(
        input.PrivateIpAddresses,
        context
      ),
    }),
    ...(input.SecondaryPrivateIpAddressCount != null && {
      SecondaryPrivateIpAddressCount: input.SecondaryPrivateIpAddressCount,
    }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Ipv4Prefix != null && { Ipv4Prefix: input.Ipv4Prefix }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Ipv6Address != null && { Ipv6Address: input.Ipv6Address }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Ipv6Prefix != null && { Ipv6Prefix: input.Ipv6Prefix }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetList
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetList = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Primary != null && { Primary: input.Primary }),
    ...(input.PrivateIpAddress != null && { PrivateIpAddress: input.PrivateIpAddress }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList
 */
const se_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList = (
  input: AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataPlacementDetails
 */
const se_AwsEc2LaunchTemplateDataPlacementDetails = (
  input: AwsEc2LaunchTemplateDataPlacementDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Affinity != null && { Affinity: input.Affinity }),
    ...(input.AvailabilityZone != null && { AvailabilityZone: input.AvailabilityZone }),
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.HostId != null && { HostId: input.HostId }),
    ...(input.HostResourceGroupArn != null && { HostResourceGroupArn: input.HostResourceGroupArn }),
    ...(input.PartitionNumber != null && { PartitionNumber: input.PartitionNumber }),
    ...(input.SpreadDomain != null && { SpreadDomain: input.SpreadDomain }),
    ...(input.Tenancy != null && { Tenancy: input.Tenancy }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails
 */
const se_AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails = (
  input: AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.EnableResourceNameDnsAAAARecord != null && {
      EnableResourceNameDnsAAAARecord: input.EnableResourceNameDnsAAAARecord,
    }),
    ...(input.EnableResourceNameDnsARecord != null && {
      EnableResourceNameDnsARecord: input.EnableResourceNameDnsARecord,
    }),
    ...(input.HostnameType != null && { HostnameType: input.HostnameType }),
  };
};

/**
 * serializeAws_restJson1AwsEc2LaunchTemplateDetails
 */
const se_AwsEc2LaunchTemplateDetails = (input: AwsEc2LaunchTemplateDetails, context: __SerdeContext): any => {
  return {
    ...(input.DefaultVersionNumber != null && { DefaultVersionNumber: input.DefaultVersionNumber }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.LatestVersionNumber != null && { LatestVersionNumber: input.LatestVersionNumber }),
    ...(input.LaunchTemplateData != null && {
      LaunchTemplateData: se_AwsEc2LaunchTemplateDataDetails(input.LaunchTemplateData, context),
    }),
    ...(input.LaunchTemplateName != null && { LaunchTemplateName: input.LaunchTemplateName }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkAclAssociation
 */
const se_AwsEc2NetworkAclAssociation = (input: AwsEc2NetworkAclAssociation, context: __SerdeContext): any => {
  return {
    ...(input.NetworkAclAssociationId != null && { NetworkAclAssociationId: input.NetworkAclAssociationId }),
    ...(input.NetworkAclId != null && { NetworkAclId: input.NetworkAclId }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkAclAssociationList
 */
const se_AwsEc2NetworkAclAssociationList = (input: AwsEc2NetworkAclAssociation[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2NetworkAclAssociation(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2NetworkAclDetails
 */
const se_AwsEc2NetworkAclDetails = (input: AwsEc2NetworkAclDetails, context: __SerdeContext): any => {
  return {
    ...(input.Associations != null && {
      Associations: se_AwsEc2NetworkAclAssociationList(input.Associations, context),
    }),
    ...(input.Entries != null && { Entries: se_AwsEc2NetworkAclEntryList(input.Entries, context) }),
    ...(input.IsDefault != null && { IsDefault: input.IsDefault }),
    ...(input.NetworkAclId != null && { NetworkAclId: input.NetworkAclId }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkAclEntry
 */
const se_AwsEc2NetworkAclEntry = (input: AwsEc2NetworkAclEntry, context: __SerdeContext): any => {
  return {
    ...(input.CidrBlock != null && { CidrBlock: input.CidrBlock }),
    ...(input.Egress != null && { Egress: input.Egress }),
    ...(input.IcmpTypeCode != null && { IcmpTypeCode: se_IcmpTypeCode(input.IcmpTypeCode, context) }),
    ...(input.Ipv6CidrBlock != null && { Ipv6CidrBlock: input.Ipv6CidrBlock }),
    ...(input.PortRange != null && { PortRange: se_PortRangeFromTo(input.PortRange, context) }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.RuleAction != null && { RuleAction: input.RuleAction }),
    ...(input.RuleNumber != null && { RuleNumber: input.RuleNumber }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkAclEntryList
 */
const se_AwsEc2NetworkAclEntryList = (input: AwsEc2NetworkAclEntry[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2NetworkAclEntry(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceAttachment
 */
const se_AwsEc2NetworkInterfaceAttachment = (input: AwsEc2NetworkInterfaceAttachment, context: __SerdeContext): any => {
  return {
    ...(input.AttachTime != null && { AttachTime: input.AttachTime }),
    ...(input.AttachmentId != null && { AttachmentId: input.AttachmentId }),
    ...(input.DeleteOnTermination != null && { DeleteOnTermination: input.DeleteOnTermination }),
    ...(input.DeviceIndex != null && { DeviceIndex: input.DeviceIndex }),
    ...(input.InstanceId != null && { InstanceId: input.InstanceId }),
    ...(input.InstanceOwnerId != null && { InstanceOwnerId: input.InstanceOwnerId }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceDetails
 */
const se_AwsEc2NetworkInterfaceDetails = (input: AwsEc2NetworkInterfaceDetails, context: __SerdeContext): any => {
  return {
    ...(input.Attachment != null && { Attachment: se_AwsEc2NetworkInterfaceAttachment(input.Attachment, context) }),
    ...(input.IpV6Addresses != null && {
      IpV6Addresses: se_AwsEc2NetworkInterfaceIpV6AddressList(input.IpV6Addresses, context),
    }),
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
    ...(input.PrivateIpAddresses != null && {
      PrivateIpAddresses: se_AwsEc2NetworkInterfacePrivateIpAddressList(input.PrivateIpAddresses, context),
    }),
    ...(input.PublicDnsName != null && { PublicDnsName: input.PublicDnsName }),
    ...(input.PublicIp != null && { PublicIp: input.PublicIp }),
    ...(input.SecurityGroups != null && {
      SecurityGroups: se_AwsEc2NetworkInterfaceSecurityGroupList(input.SecurityGroups, context),
    }),
    ...(input.SourceDestCheck != null && { SourceDestCheck: input.SourceDestCheck }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceIpV6AddressDetail
 */
const se_AwsEc2NetworkInterfaceIpV6AddressDetail = (
  input: AwsEc2NetworkInterfaceIpV6AddressDetail,
  context: __SerdeContext
): any => {
  return {
    ...(input.IpV6Address != null && { IpV6Address: input.IpV6Address }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceIpV6AddressList
 */
const se_AwsEc2NetworkInterfaceIpV6AddressList = (
  input: AwsEc2NetworkInterfaceIpV6AddressDetail[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2NetworkInterfaceIpV6AddressDetail(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfacePrivateIpAddressDetail
 */
const se_AwsEc2NetworkInterfacePrivateIpAddressDetail = (
  input: AwsEc2NetworkInterfacePrivateIpAddressDetail,
  context: __SerdeContext
): any => {
  return {
    ...(input.PrivateDnsName != null && { PrivateDnsName: input.PrivateDnsName }),
    ...(input.PrivateIpAddress != null && { PrivateIpAddress: input.PrivateIpAddress }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfacePrivateIpAddressList
 */
const se_AwsEc2NetworkInterfacePrivateIpAddressList = (
  input: AwsEc2NetworkInterfacePrivateIpAddressDetail[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2NetworkInterfacePrivateIpAddressDetail(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceSecurityGroup
 */
const se_AwsEc2NetworkInterfaceSecurityGroup = (
  input: AwsEc2NetworkInterfaceSecurityGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.GroupId != null && { GroupId: input.GroupId }),
    ...(input.GroupName != null && { GroupName: input.GroupName }),
  };
};

/**
 * serializeAws_restJson1AwsEc2NetworkInterfaceSecurityGroupList
 */
const se_AwsEc2NetworkInterfaceSecurityGroupList = (
  input: AwsEc2NetworkInterfaceSecurityGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2NetworkInterfaceSecurityGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2RouteTableDetails
 */
const se_AwsEc2RouteTableDetails = (input: AwsEc2RouteTableDetails, context: __SerdeContext): any => {
  return {
    ...(input.AssociationSet != null && { AssociationSet: se_AssociationSetList(input.AssociationSet, context) }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.PropagatingVgwSet != null && {
      PropagatingVgwSet: se_PropagatingVgwSetList(input.PropagatingVgwSet, context),
    }),
    ...(input.RouteSet != null && { RouteSet: se_RouteSetList(input.RouteSet, context) }),
    ...(input.RouteTableId != null && { RouteTableId: input.RouteTableId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupDetails
 */
const se_AwsEc2SecurityGroupDetails = (input: AwsEc2SecurityGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.GroupId != null && { GroupId: input.GroupId }),
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.IpPermissions != null && {
      IpPermissions: se_AwsEc2SecurityGroupIpPermissionList(input.IpPermissions, context),
    }),
    ...(input.IpPermissionsEgress != null && {
      IpPermissionsEgress: se_AwsEc2SecurityGroupIpPermissionList(input.IpPermissionsEgress, context),
    }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpPermission
 */
const se_AwsEc2SecurityGroupIpPermission = (input: AwsEc2SecurityGroupIpPermission, context: __SerdeContext): any => {
  return {
    ...(input.FromPort != null && { FromPort: input.FromPort }),
    ...(input.IpProtocol != null && { IpProtocol: input.IpProtocol }),
    ...(input.IpRanges != null && { IpRanges: se_AwsEc2SecurityGroupIpRangeList(input.IpRanges, context) }),
    ...(input.Ipv6Ranges != null && { Ipv6Ranges: se_AwsEc2SecurityGroupIpv6RangeList(input.Ipv6Ranges, context) }),
    ...(input.PrefixListIds != null && {
      PrefixListIds: se_AwsEc2SecurityGroupPrefixListIdList(input.PrefixListIds, context),
    }),
    ...(input.ToPort != null && { ToPort: input.ToPort }),
    ...(input.UserIdGroupPairs != null && {
      UserIdGroupPairs: se_AwsEc2SecurityGroupUserIdGroupPairList(input.UserIdGroupPairs, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpPermissionList
 */
const se_AwsEc2SecurityGroupIpPermissionList = (
  input: AwsEc2SecurityGroupIpPermission[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2SecurityGroupIpPermission(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpRange
 */
const se_AwsEc2SecurityGroupIpRange = (input: AwsEc2SecurityGroupIpRange, context: __SerdeContext): any => {
  return {
    ...(input.CidrIp != null && { CidrIp: input.CidrIp }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpRangeList
 */
const se_AwsEc2SecurityGroupIpRangeList = (input: AwsEc2SecurityGroupIpRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2SecurityGroupIpRange(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpv6Range
 */
const se_AwsEc2SecurityGroupIpv6Range = (input: AwsEc2SecurityGroupIpv6Range, context: __SerdeContext): any => {
  return {
    ...(input.CidrIpv6 != null && { CidrIpv6: input.CidrIpv6 }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupIpv6RangeList
 */
const se_AwsEc2SecurityGroupIpv6RangeList = (input: AwsEc2SecurityGroupIpv6Range[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2SecurityGroupIpv6Range(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupPrefixListId
 */
const se_AwsEc2SecurityGroupPrefixListId = (input: AwsEc2SecurityGroupPrefixListId, context: __SerdeContext): any => {
  return {
    ...(input.PrefixListId != null && { PrefixListId: input.PrefixListId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupPrefixListIdList
 */
const se_AwsEc2SecurityGroupPrefixListIdList = (
  input: AwsEc2SecurityGroupPrefixListId[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2SecurityGroupPrefixListId(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupUserIdGroupPair
 */
const se_AwsEc2SecurityGroupUserIdGroupPair = (
  input: AwsEc2SecurityGroupUserIdGroupPair,
  context: __SerdeContext
): any => {
  return {
    ...(input.GroupId != null && { GroupId: input.GroupId }),
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.PeeringStatus != null && { PeeringStatus: input.PeeringStatus }),
    ...(input.UserId != null && { UserId: input.UserId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
    ...(input.VpcPeeringConnectionId != null && { VpcPeeringConnectionId: input.VpcPeeringConnectionId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2SecurityGroupUserIdGroupPairList
 */
const se_AwsEc2SecurityGroupUserIdGroupPairList = (
  input: AwsEc2SecurityGroupUserIdGroupPair[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2SecurityGroupUserIdGroupPair(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2SubnetDetails
 */
const se_AwsEc2SubnetDetails = (input: AwsEc2SubnetDetails, context: __SerdeContext): any => {
  return {
    ...(input.AssignIpv6AddressOnCreation != null && {
      AssignIpv6AddressOnCreation: input.AssignIpv6AddressOnCreation,
    }),
    ...(input.AvailabilityZone != null && { AvailabilityZone: input.AvailabilityZone }),
    ...(input.AvailabilityZoneId != null && { AvailabilityZoneId: input.AvailabilityZoneId }),
    ...(input.AvailableIpAddressCount != null && { AvailableIpAddressCount: input.AvailableIpAddressCount }),
    ...(input.CidrBlock != null && { CidrBlock: input.CidrBlock }),
    ...(input.DefaultForAz != null && { DefaultForAz: input.DefaultForAz }),
    ...(input.Ipv6CidrBlockAssociationSet != null && {
      Ipv6CidrBlockAssociationSet: se_Ipv6CidrBlockAssociationList(input.Ipv6CidrBlockAssociationSet, context),
    }),
    ...(input.MapPublicIpOnLaunch != null && { MapPublicIpOnLaunch: input.MapPublicIpOnLaunch }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.State != null && { State: input.State }),
    ...(input.SubnetArn != null && { SubnetArn: input.SubnetArn }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2TransitGatewayDetails
 */
const se_AwsEc2TransitGatewayDetails = (input: AwsEc2TransitGatewayDetails, context: __SerdeContext): any => {
  return {
    ...(input.AmazonSideAsn != null && { AmazonSideAsn: input.AmazonSideAsn }),
    ...(input.AssociationDefaultRouteTableId != null && {
      AssociationDefaultRouteTableId: input.AssociationDefaultRouteTableId,
    }),
    ...(input.AutoAcceptSharedAttachments != null && {
      AutoAcceptSharedAttachments: input.AutoAcceptSharedAttachments,
    }),
    ...(input.DefaultRouteTableAssociation != null && {
      DefaultRouteTableAssociation: input.DefaultRouteTableAssociation,
    }),
    ...(input.DefaultRouteTablePropagation != null && {
      DefaultRouteTablePropagation: input.DefaultRouteTablePropagation,
    }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DnsSupport != null && { DnsSupport: input.DnsSupport }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.MulticastSupport != null && { MulticastSupport: input.MulticastSupport }),
    ...(input.PropagationDefaultRouteTableId != null && {
      PropagationDefaultRouteTableId: input.PropagationDefaultRouteTableId,
    }),
    ...(input.TransitGatewayCidrBlocks != null && {
      TransitGatewayCidrBlocks: se_NonEmptyStringList(input.TransitGatewayCidrBlocks, context),
    }),
    ...(input.VpnEcmpSupport != null && { VpnEcmpSupport: input.VpnEcmpSupport }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VolumeAttachment
 */
const se_AwsEc2VolumeAttachment = (input: AwsEc2VolumeAttachment, context: __SerdeContext): any => {
  return {
    ...(input.AttachTime != null && { AttachTime: input.AttachTime }),
    ...(input.DeleteOnTermination != null && { DeleteOnTermination: input.DeleteOnTermination }),
    ...(input.InstanceId != null && { InstanceId: input.InstanceId }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VolumeAttachmentList
 */
const se_AwsEc2VolumeAttachmentList = (input: AwsEc2VolumeAttachment[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2VolumeAttachment(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2VolumeDetails
 */
const se_AwsEc2VolumeDetails = (input: AwsEc2VolumeDetails, context: __SerdeContext): any => {
  return {
    ...(input.Attachments != null && { Attachments: se_AwsEc2VolumeAttachmentList(input.Attachments, context) }),
    ...(input.CreateTime != null && { CreateTime: input.CreateTime }),
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.Encrypted != null && { Encrypted: input.Encrypted }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.Size != null && { Size: input.Size }),
    ...(input.SnapshotId != null && { SnapshotId: input.SnapshotId }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.VolumeId != null && { VolumeId: input.VolumeId }),
    ...(input.VolumeScanStatus != null && { VolumeScanStatus: input.VolumeScanStatus }),
    ...(input.VolumeType != null && { VolumeType: input.VolumeType }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcDetails
 */
const se_AwsEc2VpcDetails = (input: AwsEc2VpcDetails, context: __SerdeContext): any => {
  return {
    ...(input.CidrBlockAssociationSet != null && {
      CidrBlockAssociationSet: se_CidrBlockAssociationList(input.CidrBlockAssociationSet, context),
    }),
    ...(input.DhcpOptionsId != null && { DhcpOptionsId: input.DhcpOptionsId }),
    ...(input.Ipv6CidrBlockAssociationSet != null && {
      Ipv6CidrBlockAssociationSet: se_Ipv6CidrBlockAssociationList(input.Ipv6CidrBlockAssociationSet, context),
    }),
    ...(input.State != null && { State: input.State }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcEndpointServiceDetails
 */
const se_AwsEc2VpcEndpointServiceDetails = (input: AwsEc2VpcEndpointServiceDetails, context: __SerdeContext): any => {
  return {
    ...(input.AcceptanceRequired != null && { AcceptanceRequired: input.AcceptanceRequired }),
    ...(input.AvailabilityZones != null && {
      AvailabilityZones: se_NonEmptyStringList(input.AvailabilityZones, context),
    }),
    ...(input.BaseEndpointDnsNames != null && {
      BaseEndpointDnsNames: se_NonEmptyStringList(input.BaseEndpointDnsNames, context),
    }),
    ...(input.GatewayLoadBalancerArns != null && {
      GatewayLoadBalancerArns: se_NonEmptyStringList(input.GatewayLoadBalancerArns, context),
    }),
    ...(input.ManagesVpcEndpoints != null && { ManagesVpcEndpoints: input.ManagesVpcEndpoints }),
    ...(input.NetworkLoadBalancerArns != null && {
      NetworkLoadBalancerArns: se_NonEmptyStringList(input.NetworkLoadBalancerArns, context),
    }),
    ...(input.PrivateDnsName != null && { PrivateDnsName: input.PrivateDnsName }),
    ...(input.ServiceId != null && { ServiceId: input.ServiceId }),
    ...(input.ServiceName != null && { ServiceName: input.ServiceName }),
    ...(input.ServiceState != null && { ServiceState: input.ServiceState }),
    ...(input.ServiceType != null && {
      ServiceType: se_AwsEc2VpcEndpointServiceServiceTypeList(input.ServiceType, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcEndpointServiceServiceTypeDetails
 */
const se_AwsEc2VpcEndpointServiceServiceTypeDetails = (
  input: AwsEc2VpcEndpointServiceServiceTypeDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ServiceType != null && { ServiceType: input.ServiceType }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcEndpointServiceServiceTypeList
 */
const se_AwsEc2VpcEndpointServiceServiceTypeList = (
  input: AwsEc2VpcEndpointServiceServiceTypeDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2VpcEndpointServiceServiceTypeDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2VpcPeeringConnectionDetails
 */
const se_AwsEc2VpcPeeringConnectionDetails = (
  input: AwsEc2VpcPeeringConnectionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AccepterVpcInfo != null && {
      AccepterVpcInfo: se_AwsEc2VpcPeeringConnectionVpcInfoDetails(input.AccepterVpcInfo, context),
    }),
    ...(input.ExpirationTime != null && { ExpirationTime: input.ExpirationTime }),
    ...(input.RequesterVpcInfo != null && {
      RequesterVpcInfo: se_AwsEc2VpcPeeringConnectionVpcInfoDetails(input.RequesterVpcInfo, context),
    }),
    ...(input.Status != null && { Status: se_AwsEc2VpcPeeringConnectionStatusDetails(input.Status, context) }),
    ...(input.VpcPeeringConnectionId != null && { VpcPeeringConnectionId: input.VpcPeeringConnectionId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcPeeringConnectionStatusDetails
 */
const se_AwsEc2VpcPeeringConnectionStatusDetails = (
  input: AwsEc2VpcPeeringConnectionStatusDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Code != null && { Code: input.Code }),
    ...(input.Message != null && { Message: input.Message }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpcPeeringConnectionVpcInfoDetails
 */
const se_AwsEc2VpcPeeringConnectionVpcInfoDetails = (
  input: AwsEc2VpcPeeringConnectionVpcInfoDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CidrBlock != null && { CidrBlock: input.CidrBlock }),
    ...(input.CidrBlockSet != null && { CidrBlockSet: se_VpcInfoCidrBlockSetList(input.CidrBlockSet, context) }),
    ...(input.Ipv6CidrBlockSet != null && {
      Ipv6CidrBlockSet: se_VpcInfoIpv6CidrBlockSetList(input.Ipv6CidrBlockSet, context),
    }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.PeeringOptions != null && {
      PeeringOptions: se_VpcInfoPeeringOptionsDetails(input.PeeringOptions, context),
    }),
    ...(input.Region != null && { Region: input.Region }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionDetails
 */
const se_AwsEc2VpnConnectionDetails = (input: AwsEc2VpnConnectionDetails, context: __SerdeContext): any => {
  return {
    ...(input.Category != null && { Category: input.Category }),
    ...(input.CustomerGatewayConfiguration != null && {
      CustomerGatewayConfiguration: input.CustomerGatewayConfiguration,
    }),
    ...(input.CustomerGatewayId != null && { CustomerGatewayId: input.CustomerGatewayId }),
    ...(input.Options != null && { Options: se_AwsEc2VpnConnectionOptionsDetails(input.Options, context) }),
    ...(input.Routes != null && { Routes: se_AwsEc2VpnConnectionRoutesList(input.Routes, context) }),
    ...(input.State != null && { State: input.State }),
    ...(input.TransitGatewayId != null && { TransitGatewayId: input.TransitGatewayId }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.VgwTelemetry != null && {
      VgwTelemetry: se_AwsEc2VpnConnectionVgwTelemetryList(input.VgwTelemetry, context),
    }),
    ...(input.VpnConnectionId != null && { VpnConnectionId: input.VpnConnectionId }),
    ...(input.VpnGatewayId != null && { VpnGatewayId: input.VpnGatewayId }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionOptionsDetails
 */
const se_AwsEc2VpnConnectionOptionsDetails = (
  input: AwsEc2VpnConnectionOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.StaticRoutesOnly != null && { StaticRoutesOnly: input.StaticRoutesOnly }),
    ...(input.TunnelOptions != null && {
      TunnelOptions: se_AwsEc2VpnConnectionOptionsTunnelOptionsList(input.TunnelOptions, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionOptionsTunnelOptionsDetails
 */
const se_AwsEc2VpnConnectionOptionsTunnelOptionsDetails = (
  input: AwsEc2VpnConnectionOptionsTunnelOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DpdTimeoutSeconds != null && { DpdTimeoutSeconds: input.DpdTimeoutSeconds }),
    ...(input.IkeVersions != null && { IkeVersions: se_NonEmptyStringList(input.IkeVersions, context) }),
    ...(input.OutsideIpAddress != null && { OutsideIpAddress: input.OutsideIpAddress }),
    ...(input.Phase1DhGroupNumbers != null && {
      Phase1DhGroupNumbers: se_IntegerList(input.Phase1DhGroupNumbers, context),
    }),
    ...(input.Phase1EncryptionAlgorithms != null && {
      Phase1EncryptionAlgorithms: se_NonEmptyStringList(input.Phase1EncryptionAlgorithms, context),
    }),
    ...(input.Phase1IntegrityAlgorithms != null && {
      Phase1IntegrityAlgorithms: se_NonEmptyStringList(input.Phase1IntegrityAlgorithms, context),
    }),
    ...(input.Phase1LifetimeSeconds != null && { Phase1LifetimeSeconds: input.Phase1LifetimeSeconds }),
    ...(input.Phase2DhGroupNumbers != null && {
      Phase2DhGroupNumbers: se_IntegerList(input.Phase2DhGroupNumbers, context),
    }),
    ...(input.Phase2EncryptionAlgorithms != null && {
      Phase2EncryptionAlgorithms: se_NonEmptyStringList(input.Phase2EncryptionAlgorithms, context),
    }),
    ...(input.Phase2IntegrityAlgorithms != null && {
      Phase2IntegrityAlgorithms: se_NonEmptyStringList(input.Phase2IntegrityAlgorithms, context),
    }),
    ...(input.Phase2LifetimeSeconds != null && { Phase2LifetimeSeconds: input.Phase2LifetimeSeconds }),
    ...(input.PreSharedKey != null && { PreSharedKey: input.PreSharedKey }),
    ...(input.RekeyFuzzPercentage != null && { RekeyFuzzPercentage: input.RekeyFuzzPercentage }),
    ...(input.RekeyMarginTimeSeconds != null && { RekeyMarginTimeSeconds: input.RekeyMarginTimeSeconds }),
    ...(input.ReplayWindowSize != null && { ReplayWindowSize: input.ReplayWindowSize }),
    ...(input.TunnelInsideCidr != null && { TunnelInsideCidr: input.TunnelInsideCidr }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionOptionsTunnelOptionsList
 */
const se_AwsEc2VpnConnectionOptionsTunnelOptionsList = (
  input: AwsEc2VpnConnectionOptionsTunnelOptionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2VpnConnectionOptionsTunnelOptionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionRoutesDetails
 */
const se_AwsEc2VpnConnectionRoutesDetails = (input: AwsEc2VpnConnectionRoutesDetails, context: __SerdeContext): any => {
  return {
    ...(input.DestinationCidrBlock != null && { DestinationCidrBlock: input.DestinationCidrBlock }),
    ...(input.State != null && { State: input.State }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionRoutesList
 */
const se_AwsEc2VpnConnectionRoutesList = (input: AwsEc2VpnConnectionRoutesDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2VpnConnectionRoutesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionVgwTelemetryDetails
 */
const se_AwsEc2VpnConnectionVgwTelemetryDetails = (
  input: AwsEc2VpnConnectionVgwTelemetryDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AcceptedRouteCount != null && { AcceptedRouteCount: input.AcceptedRouteCount }),
    ...(input.CertificateArn != null && { CertificateArn: input.CertificateArn }),
    ...(input.LastStatusChange != null && { LastStatusChange: input.LastStatusChange }),
    ...(input.OutsideIpAddress != null && { OutsideIpAddress: input.OutsideIpAddress }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StatusMessage != null && { StatusMessage: input.StatusMessage }),
  };
};

/**
 * serializeAws_restJson1AwsEc2VpnConnectionVgwTelemetryList
 */
const se_AwsEc2VpnConnectionVgwTelemetryList = (
  input: AwsEc2VpnConnectionVgwTelemetryDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEc2VpnConnectionVgwTelemetryDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcrContainerImageDetails
 */
const se_AwsEcrContainerImageDetails = (input: AwsEcrContainerImageDetails, context: __SerdeContext): any => {
  return {
    ...(input.Architecture != null && { Architecture: input.Architecture }),
    ...(input.ImageDigest != null && { ImageDigest: input.ImageDigest }),
    ...(input.ImagePublishedAt != null && { ImagePublishedAt: input.ImagePublishedAt }),
    ...(input.ImageTags != null && { ImageTags: se_NonEmptyStringList(input.ImageTags, context) }),
    ...(input.RegistryId != null && { RegistryId: input.RegistryId }),
    ...(input.RepositoryName != null && { RepositoryName: input.RepositoryName }),
  };
};

/**
 * serializeAws_restJson1AwsEcrRepositoryDetails
 */
const se_AwsEcrRepositoryDetails = (input: AwsEcrRepositoryDetails, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.ImageScanningConfiguration != null && {
      ImageScanningConfiguration: se_AwsEcrRepositoryImageScanningConfigurationDetails(
        input.ImageScanningConfiguration,
        context
      ),
    }),
    ...(input.ImageTagMutability != null && { ImageTagMutability: input.ImageTagMutability }),
    ...(input.LifecyclePolicy != null && {
      LifecyclePolicy: se_AwsEcrRepositoryLifecyclePolicyDetails(input.LifecyclePolicy, context),
    }),
    ...(input.RepositoryName != null && { RepositoryName: input.RepositoryName }),
    ...(input.RepositoryPolicyText != null && { RepositoryPolicyText: input.RepositoryPolicyText }),
  };
};

/**
 * serializeAws_restJson1AwsEcrRepositoryImageScanningConfigurationDetails
 */
const se_AwsEcrRepositoryImageScanningConfigurationDetails = (
  input: AwsEcrRepositoryImageScanningConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ScanOnPush != null && { ScanOnPush: input.ScanOnPush }),
  };
};

/**
 * serializeAws_restJson1AwsEcrRepositoryLifecyclePolicyDetails
 */
const se_AwsEcrRepositoryLifecyclePolicyDetails = (
  input: AwsEcrRepositoryLifecyclePolicyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.LifecyclePolicyText != null && { LifecyclePolicyText: input.LifecyclePolicyText }),
    ...(input.RegistryId != null && { RegistryId: input.RegistryId }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterClusterSettingsDetails
 */
const se_AwsEcsClusterClusterSettingsDetails = (
  input: AwsEcsClusterClusterSettingsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterClusterSettingsList
 */
const se_AwsEcsClusterClusterSettingsList = (
  input: AwsEcsClusterClusterSettingsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsClusterClusterSettingsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsClusterConfigurationDetails
 */
const se_AwsEcsClusterConfigurationDetails = (
  input: AwsEcsClusterConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ExecuteCommandConfiguration != null && {
      ExecuteCommandConfiguration: se_AwsEcsClusterConfigurationExecuteCommandConfigurationDetails(
        input.ExecuteCommandConfiguration,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterConfigurationExecuteCommandConfigurationDetails
 */
const se_AwsEcsClusterConfigurationExecuteCommandConfigurationDetails = (
  input: AwsEcsClusterConfigurationExecuteCommandConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LogConfiguration != null && {
      LogConfiguration: se_AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails(
        input.LogConfiguration,
        context
      ),
    }),
    ...(input.Logging != null && { Logging: input.Logging }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails
 */
const se_AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails = (
  input: AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CloudWatchEncryptionEnabled != null && {
      CloudWatchEncryptionEnabled: input.CloudWatchEncryptionEnabled,
    }),
    ...(input.CloudWatchLogGroupName != null && { CloudWatchLogGroupName: input.CloudWatchLogGroupName }),
    ...(input.S3BucketName != null && { S3BucketName: input.S3BucketName }),
    ...(input.S3EncryptionEnabled != null && { S3EncryptionEnabled: input.S3EncryptionEnabled }),
    ...(input.S3KeyPrefix != null && { S3KeyPrefix: input.S3KeyPrefix }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterDefaultCapacityProviderStrategyDetails
 */
const se_AwsEcsClusterDefaultCapacityProviderStrategyDetails = (
  input: AwsEcsClusterDefaultCapacityProviderStrategyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Base != null && { Base: input.Base }),
    ...(input.CapacityProvider != null && { CapacityProvider: input.CapacityProvider }),
    ...(input.Weight != null && { Weight: input.Weight }),
  };
};

/**
 * serializeAws_restJson1AwsEcsClusterDefaultCapacityProviderStrategyList
 */
const se_AwsEcsClusterDefaultCapacityProviderStrategyList = (
  input: AwsEcsClusterDefaultCapacityProviderStrategyDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsClusterDefaultCapacityProviderStrategyDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsClusterDetails
 */
const se_AwsEcsClusterDetails = (input: AwsEcsClusterDetails, context: __SerdeContext): any => {
  return {
    ...(input.ActiveServicesCount != null && { ActiveServicesCount: input.ActiveServicesCount }),
    ...(input.CapacityProviders != null && {
      CapacityProviders: se_NonEmptyStringList(input.CapacityProviders, context),
    }),
    ...(input.ClusterArn != null && { ClusterArn: input.ClusterArn }),
    ...(input.ClusterName != null && { ClusterName: input.ClusterName }),
    ...(input.ClusterSettings != null && {
      ClusterSettings: se_AwsEcsClusterClusterSettingsList(input.ClusterSettings, context),
    }),
    ...(input.Configuration != null && {
      Configuration: se_AwsEcsClusterConfigurationDetails(input.Configuration, context),
    }),
    ...(input.DefaultCapacityProviderStrategy != null && {
      DefaultCapacityProviderStrategy: se_AwsEcsClusterDefaultCapacityProviderStrategyList(
        input.DefaultCapacityProviderStrategy,
        context
      ),
    }),
    ...(input.RegisteredContainerInstancesCount != null && {
      RegisteredContainerInstancesCount: input.RegisteredContainerInstancesCount,
    }),
    ...(input.RunningTasksCount != null && { RunningTasksCount: input.RunningTasksCount }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsEcsContainerDetails
 */
const se_AwsEcsContainerDetails = (input: AwsEcsContainerDetails, context: __SerdeContext): any => {
  return {
    ...(input.Image != null && { Image: input.Image }),
    ...(input.MountPoints != null && { MountPoints: se_AwsMountPointList(input.MountPoints, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Privileged != null && { Privileged: input.Privileged }),
  };
};

/**
 * serializeAws_restJson1AwsEcsContainerDetailsList
 */
const se_AwsEcsContainerDetailsList = (input: AwsEcsContainerDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsContainerDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsServiceCapacityProviderStrategyDetails
 */
const se_AwsEcsServiceCapacityProviderStrategyDetails = (
  input: AwsEcsServiceCapacityProviderStrategyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Base != null && { Base: input.Base }),
    ...(input.CapacityProvider != null && { CapacityProvider: input.CapacityProvider }),
    ...(input.Weight != null && { Weight: input.Weight }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceCapacityProviderStrategyList
 */
const se_AwsEcsServiceCapacityProviderStrategyList = (
  input: AwsEcsServiceCapacityProviderStrategyDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsServiceCapacityProviderStrategyDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails
 */
const se_AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails = (
  input: AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enable != null && { Enable: input.Enable }),
    ...(input.Rollback != null && { Rollback: input.Rollback }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceDeploymentConfigurationDetails
 */
const se_AwsEcsServiceDeploymentConfigurationDetails = (
  input: AwsEcsServiceDeploymentConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeploymentCircuitBreaker != null && {
      DeploymentCircuitBreaker: se_AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails(
        input.DeploymentCircuitBreaker,
        context
      ),
    }),
    ...(input.MaximumPercent != null && { MaximumPercent: input.MaximumPercent }),
    ...(input.MinimumHealthyPercent != null && { MinimumHealthyPercent: input.MinimumHealthyPercent }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceDeploymentControllerDetails
 */
const se_AwsEcsServiceDeploymentControllerDetails = (
  input: AwsEcsServiceDeploymentControllerDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceDetails
 */
const se_AwsEcsServiceDetails = (input: AwsEcsServiceDetails, context: __SerdeContext): any => {
  return {
    ...(input.CapacityProviderStrategy != null && {
      CapacityProviderStrategy: se_AwsEcsServiceCapacityProviderStrategyList(input.CapacityProviderStrategy, context),
    }),
    ...(input.Cluster != null && { Cluster: input.Cluster }),
    ...(input.DeploymentConfiguration != null && {
      DeploymentConfiguration: se_AwsEcsServiceDeploymentConfigurationDetails(input.DeploymentConfiguration, context),
    }),
    ...(input.DeploymentController != null && {
      DeploymentController: se_AwsEcsServiceDeploymentControllerDetails(input.DeploymentController, context),
    }),
    ...(input.DesiredCount != null && { DesiredCount: input.DesiredCount }),
    ...(input.EnableEcsManagedTags != null && { EnableEcsManagedTags: input.EnableEcsManagedTags }),
    ...(input.EnableExecuteCommand != null && { EnableExecuteCommand: input.EnableExecuteCommand }),
    ...(input.HealthCheckGracePeriodSeconds != null && {
      HealthCheckGracePeriodSeconds: input.HealthCheckGracePeriodSeconds,
    }),
    ...(input.LaunchType != null && { LaunchType: input.LaunchType }),
    ...(input.LoadBalancers != null && {
      LoadBalancers: se_AwsEcsServiceLoadBalancersList(input.LoadBalancers, context),
    }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.NetworkConfiguration != null && {
      NetworkConfiguration: se_AwsEcsServiceNetworkConfigurationDetails(input.NetworkConfiguration, context),
    }),
    ...(input.PlacementConstraints != null && {
      PlacementConstraints: se_AwsEcsServicePlacementConstraintsList(input.PlacementConstraints, context),
    }),
    ...(input.PlacementStrategies != null && {
      PlacementStrategies: se_AwsEcsServicePlacementStrategiesList(input.PlacementStrategies, context),
    }),
    ...(input.PlatformVersion != null && { PlatformVersion: input.PlatformVersion }),
    ...(input.PropagateTags != null && { PropagateTags: input.PropagateTags }),
    ...(input.Role != null && { Role: input.Role }),
    ...(input.SchedulingStrategy != null && { SchedulingStrategy: input.SchedulingStrategy }),
    ...(input.ServiceArn != null && { ServiceArn: input.ServiceArn }),
    ...(input.ServiceName != null && { ServiceName: input.ServiceName }),
    ...(input.ServiceRegistries != null && {
      ServiceRegistries: se_AwsEcsServiceServiceRegistriesList(input.ServiceRegistries, context),
    }),
    ...(input.TaskDefinition != null && { TaskDefinition: input.TaskDefinition }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceLoadBalancersDetails
 */
const se_AwsEcsServiceLoadBalancersDetails = (
  input: AwsEcsServiceLoadBalancersDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerName != null && { ContainerName: input.ContainerName }),
    ...(input.ContainerPort != null && { ContainerPort: input.ContainerPort }),
    ...(input.LoadBalancerName != null && { LoadBalancerName: input.LoadBalancerName }),
    ...(input.TargetGroupArn != null && { TargetGroupArn: input.TargetGroupArn }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceLoadBalancersList
 */
const se_AwsEcsServiceLoadBalancersList = (
  input: AwsEcsServiceLoadBalancersDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsServiceLoadBalancersDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails
 */
const se_AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails = (
  input: AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AssignPublicIp != null && { AssignPublicIp: input.AssignPublicIp }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_NonEmptyStringList(input.SecurityGroups, context) }),
    ...(input.Subnets != null && { Subnets: se_NonEmptyStringList(input.Subnets, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceNetworkConfigurationDetails
 */
const se_AwsEcsServiceNetworkConfigurationDetails = (
  input: AwsEcsServiceNetworkConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AwsVpcConfiguration != null && {
      AwsVpcConfiguration: se_AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails(
        input.AwsVpcConfiguration,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServicePlacementConstraintsDetails
 */
const se_AwsEcsServicePlacementConstraintsDetails = (
  input: AwsEcsServicePlacementConstraintsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Expression != null && { Expression: input.Expression }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServicePlacementConstraintsList
 */
const se_AwsEcsServicePlacementConstraintsList = (
  input: AwsEcsServicePlacementConstraintsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsServicePlacementConstraintsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsServicePlacementStrategiesDetails
 */
const se_AwsEcsServicePlacementStrategiesDetails = (
  input: AwsEcsServicePlacementStrategiesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Field != null && { Field: input.Field }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServicePlacementStrategiesList
 */
const se_AwsEcsServicePlacementStrategiesList = (
  input: AwsEcsServicePlacementStrategiesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsServicePlacementStrategiesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsServiceServiceRegistriesDetails
 */
const se_AwsEcsServiceServiceRegistriesDetails = (
  input: AwsEcsServiceServiceRegistriesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerName != null && { ContainerName: input.ContainerName }),
    ...(input.ContainerPort != null && { ContainerPort: input.ContainerPort }),
    ...(input.Port != null && { Port: input.Port }),
    ...(input.RegistryArn != null && { RegistryArn: input.RegistryArn }),
  };
};

/**
 * serializeAws_restJson1AwsEcsServiceServiceRegistriesList
 */
const se_AwsEcsServiceServiceRegistriesList = (
  input: AwsEcsServiceServiceRegistriesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsServiceServiceRegistriesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Condition != null && { Condition: input.Condition }),
    ...(input.ContainerName != null && { ContainerName: input.ContainerName }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDependsOnList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsDependsOnList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Command != null && { Command: se_NonEmptyStringList(input.Command, context) }),
    ...(input.Cpu != null && { Cpu: input.Cpu }),
    ...(input.DependsOn != null && {
      DependsOn: se_AwsEcsTaskDefinitionContainerDefinitionsDependsOnList(input.DependsOn, context),
    }),
    ...(input.DisableNetworking != null && { DisableNetworking: input.DisableNetworking }),
    ...(input.DnsSearchDomains != null && { DnsSearchDomains: se_NonEmptyStringList(input.DnsSearchDomains, context) }),
    ...(input.DnsServers != null && { DnsServers: se_NonEmptyStringList(input.DnsServers, context) }),
    ...(input.DockerLabels != null && { DockerLabels: se_FieldMap(input.DockerLabels, context) }),
    ...(input.DockerSecurityOptions != null && {
      DockerSecurityOptions: se_NonEmptyStringList(input.DockerSecurityOptions, context),
    }),
    ...(input.EntryPoint != null && { EntryPoint: se_NonEmptyStringList(input.EntryPoint, context) }),
    ...(input.Environment != null && {
      Environment: se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList(input.Environment, context),
    }),
    ...(input.EnvironmentFiles != null && {
      EnvironmentFiles: se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList(
        input.EnvironmentFiles,
        context
      ),
    }),
    ...(input.Essential != null && { Essential: input.Essential }),
    ...(input.ExtraHosts != null && {
      ExtraHosts: se_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList(input.ExtraHosts, context),
    }),
    ...(input.FirelensConfiguration != null && {
      FirelensConfiguration: se_AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails(
        input.FirelensConfiguration,
        context
      ),
    }),
    ...(input.HealthCheck != null && {
      HealthCheck: se_AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails(input.HealthCheck, context),
    }),
    ...(input.Hostname != null && { Hostname: input.Hostname }),
    ...(input.Image != null && { Image: input.Image }),
    ...(input.Interactive != null && { Interactive: input.Interactive }),
    ...(input.Links != null && { Links: se_NonEmptyStringList(input.Links, context) }),
    ...(input.LinuxParameters != null && {
      LinuxParameters: se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails(
        input.LinuxParameters,
        context
      ),
    }),
    ...(input.LogConfiguration != null && {
      LogConfiguration: se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails(
        input.LogConfiguration,
        context
      ),
    }),
    ...(input.Memory != null && { Memory: input.Memory }),
    ...(input.MemoryReservation != null && { MemoryReservation: input.MemoryReservation }),
    ...(input.MountPoints != null && {
      MountPoints: se_AwsEcsTaskDefinitionContainerDefinitionsMountPointsList(input.MountPoints, context),
    }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.PortMappings != null && {
      PortMappings: se_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList(input.PortMappings, context),
    }),
    ...(input.Privileged != null && { Privileged: input.Privileged }),
    ...(input.PseudoTerminal != null && { PseudoTerminal: input.PseudoTerminal }),
    ...(input.ReadonlyRootFilesystem != null && { ReadonlyRootFilesystem: input.ReadonlyRootFilesystem }),
    ...(input.RepositoryCredentials != null && {
      RepositoryCredentials: se_AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails(
        input.RepositoryCredentials,
        context
      ),
    }),
    ...(input.ResourceRequirements != null && {
      ResourceRequirements: se_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList(
        input.ResourceRequirements,
        context
      ),
    }),
    ...(input.Secrets != null && {
      Secrets: se_AwsEcsTaskDefinitionContainerDefinitionsSecretsList(input.Secrets, context),
    }),
    ...(input.StartTimeout != null && { StartTimeout: input.StartTimeout }),
    ...(input.StopTimeout != null && { StopTimeout: input.StopTimeout }),
    ...(input.SystemControls != null && {
      SystemControls: se_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList(input.SystemControls, context),
    }),
    ...(input.Ulimits != null && {
      Ulimits: se_AwsEcsTaskDefinitionContainerDefinitionsUlimitsList(input.Ulimits, context),
    }),
    ...(input.User != null && { User: input.User }),
    ...(input.VolumesFrom != null && {
      VolumesFrom: se_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList(input.VolumesFrom, context),
    }),
    ...(input.WorkingDirectory != null && { WorkingDirectory: input.WorkingDirectory }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Hostname != null && { Hostname: input.Hostname }),
    ...(input.IpAddress != null && { IpAddress: input.IpAddress }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Options != null && { Options: se_FieldMap(input.Options, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Command != null && { Command: se_NonEmptyStringList(input.Command, context) }),
    ...(input.Interval != null && { Interval: input.Interval }),
    ...(input.Retries != null && { Retries: input.Retries }),
    ...(input.StartPeriod != null && { StartPeriod: input.StartPeriod }),
    ...(input.Timeout != null && { Timeout: input.Timeout }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Add != null && { Add: se_NonEmptyStringList(input.Add, context) }),
    ...(input.Drop != null && { Drop: se_NonEmptyStringList(input.Drop, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Capabilities != null && {
      Capabilities: se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails(
        input.Capabilities,
        context
      ),
    }),
    ...(input.Devices != null && {
      Devices: se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList(input.Devices, context),
    }),
    ...(input.InitProcessEnabled != null && { InitProcessEnabled: input.InitProcessEnabled }),
    ...(input.MaxSwap != null && { MaxSwap: input.MaxSwap }),
    ...(input.SharedMemorySize != null && { SharedMemorySize: input.SharedMemorySize }),
    ...(input.Swappiness != null && { Swappiness: input.Swappiness }),
    ...(input.Tmpfs != null && {
      Tmpfs: se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList(input.Tmpfs, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerPath != null && { ContainerPath: input.ContainerPath }),
    ...(input.HostPath != null && { HostPath: input.HostPath }),
    ...(input.Permissions != null && { Permissions: se_NonEmptyStringList(input.Permissions, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerPath != null && { ContainerPath: input.ContainerPath }),
    ...(input.MountOptions != null && { MountOptions: se_NonEmptyStringList(input.MountOptions, context) }),
    ...(input.Size != null && { Size: input.Size }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.LogDriver != null && { LogDriver: input.LogDriver }),
    ...(input.Options != null && { Options: se_FieldMap(input.Options, context) }),
    ...(input.SecretOptions != null && {
      SecretOptions: se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList(
        input.SecretOptions,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ValueFrom != null && { ValueFrom: input.ValueFrom }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerPath != null && { ContainerPath: input.ContainerPath }),
    ...(input.ReadOnly != null && { ReadOnly: input.ReadOnly }),
    ...(input.SourceVolume != null && { SourceVolume: input.SourceVolume }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsMountPointsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsMountPointsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerPort != null && { ContainerPort: input.ContainerPort }),
    ...(input.HostPort != null && { HostPort: input.HostPort }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CredentialsParameter != null && { CredentialsParameter: input.CredentialsParameter }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ValueFrom != null && { ValueFrom: input.ValueFrom }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSecretsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsSecretsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Namespace != null && { Namespace: input.Namespace }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.HardLimit != null && { HardLimit: input.HardLimit }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.SoftLimit != null && { SoftLimit: input.SoftLimit }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsUlimitsList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsUlimitsList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails = (
  input: AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ReadOnly != null && { ReadOnly: input.ReadOnly }),
    ...(input.SourceContainer != null && { SourceContainer: input.SourceContainer }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList
 */
const se_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList = (
  input: AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionDetails
 */
const se_AwsEcsTaskDefinitionDetails = (input: AwsEcsTaskDefinitionDetails, context: __SerdeContext): any => {
  return {
    ...(input.ContainerDefinitions != null && {
      ContainerDefinitions: se_AwsEcsTaskDefinitionContainerDefinitionsList(input.ContainerDefinitions, context),
    }),
    ...(input.Cpu != null && { Cpu: input.Cpu }),
    ...(input.ExecutionRoleArn != null && { ExecutionRoleArn: input.ExecutionRoleArn }),
    ...(input.Family != null && { Family: input.Family }),
    ...(input.InferenceAccelerators != null && {
      InferenceAccelerators: se_AwsEcsTaskDefinitionInferenceAcceleratorsList(input.InferenceAccelerators, context),
    }),
    ...(input.IpcMode != null && { IpcMode: input.IpcMode }),
    ...(input.Memory != null && { Memory: input.Memory }),
    ...(input.NetworkMode != null && { NetworkMode: input.NetworkMode }),
    ...(input.PidMode != null && { PidMode: input.PidMode }),
    ...(input.PlacementConstraints != null && {
      PlacementConstraints: se_AwsEcsTaskDefinitionPlacementConstraintsList(input.PlacementConstraints, context),
    }),
    ...(input.ProxyConfiguration != null && {
      ProxyConfiguration: se_AwsEcsTaskDefinitionProxyConfigurationDetails(input.ProxyConfiguration, context),
    }),
    ...(input.RequiresCompatibilities != null && {
      RequiresCompatibilities: se_NonEmptyStringList(input.RequiresCompatibilities, context),
    }),
    ...(input.TaskRoleArn != null && { TaskRoleArn: input.TaskRoleArn }),
    ...(input.Volumes != null && { Volumes: se_AwsEcsTaskDefinitionVolumesList(input.Volumes, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionInferenceAcceleratorsDetails
 */
const se_AwsEcsTaskDefinitionInferenceAcceleratorsDetails = (
  input: AwsEcsTaskDefinitionInferenceAcceleratorsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.DeviceType != null && { DeviceType: input.DeviceType }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionInferenceAcceleratorsList
 */
const se_AwsEcsTaskDefinitionInferenceAcceleratorsList = (
  input: AwsEcsTaskDefinitionInferenceAcceleratorsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionInferenceAcceleratorsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionPlacementConstraintsDetails
 */
const se_AwsEcsTaskDefinitionPlacementConstraintsDetails = (
  input: AwsEcsTaskDefinitionPlacementConstraintsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Expression != null && { Expression: input.Expression }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionPlacementConstraintsList
 */
const se_AwsEcsTaskDefinitionPlacementConstraintsList = (
  input: AwsEcsTaskDefinitionPlacementConstraintsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionPlacementConstraintsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationDetails
 */
const se_AwsEcsTaskDefinitionProxyConfigurationDetails = (
  input: AwsEcsTaskDefinitionProxyConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContainerName != null && { ContainerName: input.ContainerName }),
    ...(input.ProxyConfigurationProperties != null && {
      ProxyConfigurationProperties: se_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList(
        input.ProxyConfigurationProperties,
        context
      ),
    }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails
 */
const se_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails = (
  input: AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList
 */
const se_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList = (
  input: AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesDetails
 */
const se_AwsEcsTaskDefinitionVolumesDetails = (
  input: AwsEcsTaskDefinitionVolumesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DockerVolumeConfiguration != null && {
      DockerVolumeConfiguration: se_AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails(
        input.DockerVolumeConfiguration,
        context
      ),
    }),
    ...(input.EfsVolumeConfiguration != null && {
      EfsVolumeConfiguration: se_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails(
        input.EfsVolumeConfiguration,
        context
      ),
    }),
    ...(input.Host != null && { Host: se_AwsEcsTaskDefinitionVolumesHostDetails(input.Host, context) }),
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails
 */
const se_AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails = (
  input: AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Autoprovision != null && { Autoprovision: input.Autoprovision }),
    ...(input.Driver != null && { Driver: input.Driver }),
    ...(input.DriverOpts != null && { DriverOpts: se_FieldMap(input.DriverOpts, context) }),
    ...(input.Labels != null && { Labels: se_FieldMap(input.Labels, context) }),
    ...(input.Scope != null && { Scope: input.Scope }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails
 */
const se_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails = (
  input: AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AccessPointId != null && { AccessPointId: input.AccessPointId }),
    ...(input.Iam != null && { Iam: input.Iam }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails
 */
const se_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails = (
  input: AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AuthorizationConfig != null && {
      AuthorizationConfig: se_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails(
        input.AuthorizationConfig,
        context
      ),
    }),
    ...(input.FilesystemId != null && { FilesystemId: input.FilesystemId }),
    ...(input.RootDirectory != null && { RootDirectory: input.RootDirectory }),
    ...(input.TransitEncryption != null && { TransitEncryption: input.TransitEncryption }),
    ...(input.TransitEncryptionPort != null && { TransitEncryptionPort: input.TransitEncryptionPort }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesHostDetails
 */
const se_AwsEcsTaskDefinitionVolumesHostDetails = (
  input: AwsEcsTaskDefinitionVolumesHostDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.SourcePath != null && { SourcePath: input.SourcePath }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskDefinitionVolumesList
 */
const se_AwsEcsTaskDefinitionVolumesList = (
  input: AwsEcsTaskDefinitionVolumesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskDefinitionVolumesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskDetails
 */
const se_AwsEcsTaskDetails = (input: AwsEcsTaskDetails, context: __SerdeContext): any => {
  return {
    ...(input.ClusterArn != null && { ClusterArn: input.ClusterArn }),
    ...(input.Containers != null && { Containers: se_AwsEcsContainerDetailsList(input.Containers, context) }),
    ...(input.CreatedAt != null && { CreatedAt: input.CreatedAt }),
    ...(input.Group != null && { Group: input.Group }),
    ...(input.StartedAt != null && { StartedAt: input.StartedAt }),
    ...(input.StartedBy != null && { StartedBy: input.StartedBy }),
    ...(input.TaskDefinitionArn != null && { TaskDefinitionArn: input.TaskDefinitionArn }),
    ...(input.Version != null && { Version: input.Version }),
    ...(input.Volumes != null && { Volumes: se_AwsEcsTaskVolumeDetailsList(input.Volumes, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskVolumeDetails
 */
const se_AwsEcsTaskVolumeDetails = (input: AwsEcsTaskVolumeDetails, context: __SerdeContext): any => {
  return {
    ...(input.Host != null && { Host: se_AwsEcsTaskVolumeHostDetails(input.Host, context) }),
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1AwsEcsTaskVolumeDetailsList
 */
const se_AwsEcsTaskVolumeDetailsList = (input: AwsEcsTaskVolumeDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEcsTaskVolumeDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEcsTaskVolumeHostDetails
 */
const se_AwsEcsTaskVolumeHostDetails = (input: AwsEcsTaskVolumeHostDetails, context: __SerdeContext): any => {
  return {
    ...(input.SourcePath != null && { SourcePath: input.SourcePath }),
  };
};

/**
 * serializeAws_restJson1AwsEfsAccessPointDetails
 */
const se_AwsEfsAccessPointDetails = (input: AwsEfsAccessPointDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessPointId != null && { AccessPointId: input.AccessPointId }),
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.ClientToken != null && { ClientToken: input.ClientToken }),
    ...(input.FileSystemId != null && { FileSystemId: input.FileSystemId }),
    ...(input.PosixUser != null && { PosixUser: se_AwsEfsAccessPointPosixUserDetails(input.PosixUser, context) }),
    ...(input.RootDirectory != null && {
      RootDirectory: se_AwsEfsAccessPointRootDirectoryDetails(input.RootDirectory, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEfsAccessPointPosixUserDetails
 */
const se_AwsEfsAccessPointPosixUserDetails = (
  input: AwsEfsAccessPointPosixUserDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Gid != null && { Gid: input.Gid }),
    ...(input.SecondaryGids != null && { SecondaryGids: se_NonEmptyStringList(input.SecondaryGids, context) }),
    ...(input.Uid != null && { Uid: input.Uid }),
  };
};

/**
 * serializeAws_restJson1AwsEfsAccessPointRootDirectoryCreationInfoDetails
 */
const se_AwsEfsAccessPointRootDirectoryCreationInfoDetails = (
  input: AwsEfsAccessPointRootDirectoryCreationInfoDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.OwnerGid != null && { OwnerGid: input.OwnerGid }),
    ...(input.OwnerUid != null && { OwnerUid: input.OwnerUid }),
    ...(input.Permissions != null && { Permissions: input.Permissions }),
  };
};

/**
 * serializeAws_restJson1AwsEfsAccessPointRootDirectoryDetails
 */
const se_AwsEfsAccessPointRootDirectoryDetails = (
  input: AwsEfsAccessPointRootDirectoryDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationInfo != null && {
      CreationInfo: se_AwsEfsAccessPointRootDirectoryCreationInfoDetails(input.CreationInfo, context),
    }),
    ...(input.Path != null && { Path: input.Path }),
  };
};

/**
 * serializeAws_restJson1AwsEksClusterDetails
 */
const se_AwsEksClusterDetails = (input: AwsEksClusterDetails, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.CertificateAuthorityData != null && { CertificateAuthorityData: input.CertificateAuthorityData }),
    ...(input.ClusterStatus != null && { ClusterStatus: input.ClusterStatus }),
    ...(input.Endpoint != null && { Endpoint: input.Endpoint }),
    ...(input.Logging != null && { Logging: se_AwsEksClusterLoggingDetails(input.Logging, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ResourcesVpcConfig != null && {
      ResourcesVpcConfig: se_AwsEksClusterResourcesVpcConfigDetails(input.ResourcesVpcConfig, context),
    }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsEksClusterLoggingClusterLoggingDetails
 */
const se_AwsEksClusterLoggingClusterLoggingDetails = (
  input: AwsEksClusterLoggingClusterLoggingDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.Types != null && { Types: se_NonEmptyStringList(input.Types, context) }),
  };
};

/**
 * serializeAws_restJson1AwsEksClusterLoggingClusterLoggingList
 */
const se_AwsEksClusterLoggingClusterLoggingList = (
  input: AwsEksClusterLoggingClusterLoggingDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsEksClusterLoggingClusterLoggingDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsEksClusterLoggingDetails
 */
const se_AwsEksClusterLoggingDetails = (input: AwsEksClusterLoggingDetails, context: __SerdeContext): any => {
  return {
    ...(input.ClusterLogging != null && {
      ClusterLogging: se_AwsEksClusterLoggingClusterLoggingList(input.ClusterLogging, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsEksClusterResourcesVpcConfigDetails
 */
const se_AwsEksClusterResourcesVpcConfigDetails = (
  input: AwsEksClusterResourcesVpcConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.EndpointPublicAccess != null && { EndpointPublicAccess: input.EndpointPublicAccess }),
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_NonEmptyStringList(input.SecurityGroupIds, context) }),
    ...(input.SubnetIds != null && { SubnetIds: se_NonEmptyStringList(input.SubnetIds, context) }),
  };
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentDetails
 */
const se_AwsElasticBeanstalkEnvironmentDetails = (
  input: AwsElasticBeanstalkEnvironmentDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ApplicationName != null && { ApplicationName: input.ApplicationName }),
    ...(input.Cname != null && { Cname: input.Cname }),
    ...(input.DateCreated != null && { DateCreated: input.DateCreated }),
    ...(input.DateUpdated != null && { DateUpdated: input.DateUpdated }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.EndpointUrl != null && { EndpointUrl: input.EndpointUrl }),
    ...(input.EnvironmentArn != null && { EnvironmentArn: input.EnvironmentArn }),
    ...(input.EnvironmentId != null && { EnvironmentId: input.EnvironmentId }),
    ...(input.EnvironmentLinks != null && {
      EnvironmentLinks: se_AwsElasticBeanstalkEnvironmentEnvironmentLinks(input.EnvironmentLinks, context),
    }),
    ...(input.EnvironmentName != null && { EnvironmentName: input.EnvironmentName }),
    ...(input.OptionSettings != null && {
      OptionSettings: se_AwsElasticBeanstalkEnvironmentOptionSettings(input.OptionSettings, context),
    }),
    ...(input.PlatformArn != null && { PlatformArn: input.PlatformArn }),
    ...(input.SolutionStackName != null && { SolutionStackName: input.SolutionStackName }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.Tier != null && { Tier: se_AwsElasticBeanstalkEnvironmentTier(input.Tier, context) }),
    ...(input.VersionLabel != null && { VersionLabel: input.VersionLabel }),
  };
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentEnvironmentLink
 */
const se_AwsElasticBeanstalkEnvironmentEnvironmentLink = (
  input: AwsElasticBeanstalkEnvironmentEnvironmentLink,
  context: __SerdeContext
): any => {
  return {
    ...(input.EnvironmentName != null && { EnvironmentName: input.EnvironmentName }),
    ...(input.LinkName != null && { LinkName: input.LinkName }),
  };
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentEnvironmentLinks
 */
const se_AwsElasticBeanstalkEnvironmentEnvironmentLinks = (
  input: AwsElasticBeanstalkEnvironmentEnvironmentLink[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElasticBeanstalkEnvironmentEnvironmentLink(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentOptionSetting
 */
const se_AwsElasticBeanstalkEnvironmentOptionSetting = (
  input: AwsElasticBeanstalkEnvironmentOptionSetting,
  context: __SerdeContext
): any => {
  return {
    ...(input.Namespace != null && { Namespace: input.Namespace }),
    ...(input.OptionName != null && { OptionName: input.OptionName }),
    ...(input.ResourceName != null && { ResourceName: input.ResourceName }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentOptionSettings
 */
const se_AwsElasticBeanstalkEnvironmentOptionSettings = (
  input: AwsElasticBeanstalkEnvironmentOptionSetting[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElasticBeanstalkEnvironmentOptionSetting(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElasticBeanstalkEnvironmentTier
 */
const se_AwsElasticBeanstalkEnvironmentTier = (
  input: AwsElasticBeanstalkEnvironmentTier,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainDetails
 */
const se_AwsElasticsearchDomainDetails = (input: AwsElasticsearchDomainDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessPolicies != null && { AccessPolicies: input.AccessPolicies }),
    ...(input.DomainEndpointOptions != null && {
      DomainEndpointOptions: se_AwsElasticsearchDomainDomainEndpointOptions(input.DomainEndpointOptions, context),
    }),
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.ElasticsearchClusterConfig != null && {
      ElasticsearchClusterConfig: se_AwsElasticsearchDomainElasticsearchClusterConfigDetails(
        input.ElasticsearchClusterConfig,
        context
      ),
    }),
    ...(input.ElasticsearchVersion != null && { ElasticsearchVersion: input.ElasticsearchVersion }),
    ...(input.EncryptionAtRestOptions != null && {
      EncryptionAtRestOptions: se_AwsElasticsearchDomainEncryptionAtRestOptions(input.EncryptionAtRestOptions, context),
    }),
    ...(input.Endpoint != null && { Endpoint: input.Endpoint }),
    ...(input.Endpoints != null && { Endpoints: se_FieldMap(input.Endpoints, context) }),
    ...(input.LogPublishingOptions != null && {
      LogPublishingOptions: se_AwsElasticsearchDomainLogPublishingOptions(input.LogPublishingOptions, context),
    }),
    ...(input.NodeToNodeEncryptionOptions != null && {
      NodeToNodeEncryptionOptions: se_AwsElasticsearchDomainNodeToNodeEncryptionOptions(
        input.NodeToNodeEncryptionOptions,
        context
      ),
    }),
    ...(input.ServiceSoftwareOptions != null && {
      ServiceSoftwareOptions: se_AwsElasticsearchDomainServiceSoftwareOptions(input.ServiceSoftwareOptions, context),
    }),
    ...(input.VPCOptions != null && { VPCOptions: se_AwsElasticsearchDomainVPCOptions(input.VPCOptions, context) }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainDomainEndpointOptions
 */
const se_AwsElasticsearchDomainDomainEndpointOptions = (
  input: AwsElasticsearchDomainDomainEndpointOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.EnforceHTTPS != null && { EnforceHTTPS: input.EnforceHTTPS }),
    ...(input.TLSSecurityPolicy != null && { TLSSecurityPolicy: input.TLSSecurityPolicy }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainElasticsearchClusterConfigDetails
 */
const se_AwsElasticsearchDomainElasticsearchClusterConfigDetails = (
  input: AwsElasticsearchDomainElasticsearchClusterConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DedicatedMasterCount != null && { DedicatedMasterCount: input.DedicatedMasterCount }),
    ...(input.DedicatedMasterEnabled != null && { DedicatedMasterEnabled: input.DedicatedMasterEnabled }),
    ...(input.DedicatedMasterType != null && { DedicatedMasterType: input.DedicatedMasterType }),
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.ZoneAwarenessConfig != null && {
      ZoneAwarenessConfig: se_AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails(
        input.ZoneAwarenessConfig,
        context
      ),
    }),
    ...(input.ZoneAwarenessEnabled != null && { ZoneAwarenessEnabled: input.ZoneAwarenessEnabled }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails
 */
const se_AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails = (
  input: AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AvailabilityZoneCount != null && { AvailabilityZoneCount: input.AvailabilityZoneCount }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainEncryptionAtRestOptions
 */
const se_AwsElasticsearchDomainEncryptionAtRestOptions = (
  input: AwsElasticsearchDomainEncryptionAtRestOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainLogPublishingOptions
 */
const se_AwsElasticsearchDomainLogPublishingOptions = (
  input: AwsElasticsearchDomainLogPublishingOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.AuditLogs != null && {
      AuditLogs: se_AwsElasticsearchDomainLogPublishingOptionsLogConfig(input.AuditLogs, context),
    }),
    ...(input.IndexSlowLogs != null && {
      IndexSlowLogs: se_AwsElasticsearchDomainLogPublishingOptionsLogConfig(input.IndexSlowLogs, context),
    }),
    ...(input.SearchSlowLogs != null && {
      SearchSlowLogs: se_AwsElasticsearchDomainLogPublishingOptionsLogConfig(input.SearchSlowLogs, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainLogPublishingOptionsLogConfig
 */
const se_AwsElasticsearchDomainLogPublishingOptionsLogConfig = (
  input: AwsElasticsearchDomainLogPublishingOptionsLogConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.CloudWatchLogsLogGroupArn != null && { CloudWatchLogsLogGroupArn: input.CloudWatchLogsLogGroupArn }),
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainNodeToNodeEncryptionOptions
 */
const se_AwsElasticsearchDomainNodeToNodeEncryptionOptions = (
  input: AwsElasticsearchDomainNodeToNodeEncryptionOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainServiceSoftwareOptions
 */
const se_AwsElasticsearchDomainServiceSoftwareOptions = (
  input: AwsElasticsearchDomainServiceSoftwareOptions,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutomatedUpdateDate != null && { AutomatedUpdateDate: input.AutomatedUpdateDate }),
    ...(input.Cancellable != null && { Cancellable: input.Cancellable }),
    ...(input.CurrentVersion != null && { CurrentVersion: input.CurrentVersion }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.NewVersion != null && { NewVersion: input.NewVersion }),
    ...(input.UpdateAvailable != null && { UpdateAvailable: input.UpdateAvailable }),
    ...(input.UpdateStatus != null && { UpdateStatus: input.UpdateStatus }),
  };
};

/**
 * serializeAws_restJson1AwsElasticsearchDomainVPCOptions
 */
const se_AwsElasticsearchDomainVPCOptions = (input: AwsElasticsearchDomainVPCOptions, context: __SerdeContext): any => {
  return {
    ...(input.AvailabilityZones != null && {
      AvailabilityZones: se_NonEmptyStringList(input.AvailabilityZones, context),
    }),
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_NonEmptyStringList(input.SecurityGroupIds, context) }),
    ...(input.SubnetIds != null && { SubnetIds: se_NonEmptyStringList(input.SubnetIds, context) }),
    ...(input.VPCId != null && { VPCId: input.VPCId }),
  };
};

/**
 * serializeAws_restJson1AwsElbAppCookieStickinessPolicies
 */
const se_AwsElbAppCookieStickinessPolicies = (
  input: AwsElbAppCookieStickinessPolicy[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbAppCookieStickinessPolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbAppCookieStickinessPolicy
 */
const se_AwsElbAppCookieStickinessPolicy = (input: AwsElbAppCookieStickinessPolicy, context: __SerdeContext): any => {
  return {
    ...(input.CookieName != null && { CookieName: input.CookieName }),
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsElbLbCookieStickinessPolicies
 */
const se_AwsElbLbCookieStickinessPolicies = (input: AwsElbLbCookieStickinessPolicy[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbLbCookieStickinessPolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbLbCookieStickinessPolicy
 */
const se_AwsElbLbCookieStickinessPolicy = (input: AwsElbLbCookieStickinessPolicy, context: __SerdeContext): any => {
  return {
    ...(input.CookieExpirationPeriod != null && { CookieExpirationPeriod: input.CookieExpirationPeriod }),
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerAccessLog
 */
const se_AwsElbLoadBalancerAccessLog = (input: AwsElbLoadBalancerAccessLog, context: __SerdeContext): any => {
  return {
    ...(input.EmitInterval != null && { EmitInterval: input.EmitInterval }),
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.S3BucketName != null && { S3BucketName: input.S3BucketName }),
    ...(input.S3BucketPrefix != null && { S3BucketPrefix: input.S3BucketPrefix }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerAdditionalAttribute
 */
const se_AwsElbLoadBalancerAdditionalAttribute = (
  input: AwsElbLoadBalancerAdditionalAttribute,
  context: __SerdeContext
): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerAdditionalAttributeList
 */
const se_AwsElbLoadBalancerAdditionalAttributeList = (
  input: AwsElbLoadBalancerAdditionalAttribute[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbLoadBalancerAdditionalAttribute(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerAttributes
 */
const se_AwsElbLoadBalancerAttributes = (input: AwsElbLoadBalancerAttributes, context: __SerdeContext): any => {
  return {
    ...(input.AccessLog != null && { AccessLog: se_AwsElbLoadBalancerAccessLog(input.AccessLog, context) }),
    ...(input.AdditionalAttributes != null && {
      AdditionalAttributes: se_AwsElbLoadBalancerAdditionalAttributeList(input.AdditionalAttributes, context),
    }),
    ...(input.ConnectionDraining != null && {
      ConnectionDraining: se_AwsElbLoadBalancerConnectionDraining(input.ConnectionDraining, context),
    }),
    ...(input.ConnectionSettings != null && {
      ConnectionSettings: se_AwsElbLoadBalancerConnectionSettings(input.ConnectionSettings, context),
    }),
    ...(input.CrossZoneLoadBalancing != null && {
      CrossZoneLoadBalancing: se_AwsElbLoadBalancerCrossZoneLoadBalancing(input.CrossZoneLoadBalancing, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerBackendServerDescription
 */
const se_AwsElbLoadBalancerBackendServerDescription = (
  input: AwsElbLoadBalancerBackendServerDescription,
  context: __SerdeContext
): any => {
  return {
    ...(input.InstancePort != null && { InstancePort: input.InstancePort }),
    ...(input.PolicyNames != null && { PolicyNames: se_StringList(input.PolicyNames, context) }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerBackendServerDescriptions
 */
const se_AwsElbLoadBalancerBackendServerDescriptions = (
  input: AwsElbLoadBalancerBackendServerDescription[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbLoadBalancerBackendServerDescription(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerConnectionDraining
 */
const se_AwsElbLoadBalancerConnectionDraining = (
  input: AwsElbLoadBalancerConnectionDraining,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.Timeout != null && { Timeout: input.Timeout }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerConnectionSettings
 */
const se_AwsElbLoadBalancerConnectionSettings = (
  input: AwsElbLoadBalancerConnectionSettings,
  context: __SerdeContext
): any => {
  return {
    ...(input.IdleTimeout != null && { IdleTimeout: input.IdleTimeout }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerCrossZoneLoadBalancing
 */
const se_AwsElbLoadBalancerCrossZoneLoadBalancing = (
  input: AwsElbLoadBalancerCrossZoneLoadBalancing,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerDetails
 */
const se_AwsElbLoadBalancerDetails = (input: AwsElbLoadBalancerDetails, context: __SerdeContext): any => {
  return {
    ...(input.AvailabilityZones != null && { AvailabilityZones: se_StringList(input.AvailabilityZones, context) }),
    ...(input.BackendServerDescriptions != null && {
      BackendServerDescriptions: se_AwsElbLoadBalancerBackendServerDescriptions(
        input.BackendServerDescriptions,
        context
      ),
    }),
    ...(input.CanonicalHostedZoneName != null && { CanonicalHostedZoneName: input.CanonicalHostedZoneName }),
    ...(input.CanonicalHostedZoneNameID != null && { CanonicalHostedZoneNameID: input.CanonicalHostedZoneNameID }),
    ...(input.CreatedTime != null && { CreatedTime: input.CreatedTime }),
    ...(input.DnsName != null && { DnsName: input.DnsName }),
    ...(input.HealthCheck != null && { HealthCheck: se_AwsElbLoadBalancerHealthCheck(input.HealthCheck, context) }),
    ...(input.Instances != null && { Instances: se_AwsElbLoadBalancerInstances(input.Instances, context) }),
    ...(input.ListenerDescriptions != null && {
      ListenerDescriptions: se_AwsElbLoadBalancerListenerDescriptions(input.ListenerDescriptions, context),
    }),
    ...(input.LoadBalancerAttributes != null && {
      LoadBalancerAttributes: se_AwsElbLoadBalancerAttributes(input.LoadBalancerAttributes, context),
    }),
    ...(input.LoadBalancerName != null && { LoadBalancerName: input.LoadBalancerName }),
    ...(input.Policies != null && { Policies: se_AwsElbLoadBalancerPolicies(input.Policies, context) }),
    ...(input.Scheme != null && { Scheme: input.Scheme }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_StringList(input.SecurityGroups, context) }),
    ...(input.SourceSecurityGroup != null && {
      SourceSecurityGroup: se_AwsElbLoadBalancerSourceSecurityGroup(input.SourceSecurityGroup, context),
    }),
    ...(input.Subnets != null && { Subnets: se_StringList(input.Subnets, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerHealthCheck
 */
const se_AwsElbLoadBalancerHealthCheck = (input: AwsElbLoadBalancerHealthCheck, context: __SerdeContext): any => {
  return {
    ...(input.HealthyThreshold != null && { HealthyThreshold: input.HealthyThreshold }),
    ...(input.Interval != null && { Interval: input.Interval }),
    ...(input.Target != null && { Target: input.Target }),
    ...(input.Timeout != null && { Timeout: input.Timeout }),
    ...(input.UnhealthyThreshold != null && { UnhealthyThreshold: input.UnhealthyThreshold }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerInstance
 */
const se_AwsElbLoadBalancerInstance = (input: AwsElbLoadBalancerInstance, context: __SerdeContext): any => {
  return {
    ...(input.InstanceId != null && { InstanceId: input.InstanceId }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerInstances
 */
const se_AwsElbLoadBalancerInstances = (input: AwsElbLoadBalancerInstance[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbLoadBalancerInstance(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerListener
 */
const se_AwsElbLoadBalancerListener = (input: AwsElbLoadBalancerListener, context: __SerdeContext): any => {
  return {
    ...(input.InstancePort != null && { InstancePort: input.InstancePort }),
    ...(input.InstanceProtocol != null && { InstanceProtocol: input.InstanceProtocol }),
    ...(input.LoadBalancerPort != null && { LoadBalancerPort: input.LoadBalancerPort }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.SslCertificateId != null && { SslCertificateId: input.SslCertificateId }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerListenerDescription
 */
const se_AwsElbLoadBalancerListenerDescription = (
  input: AwsElbLoadBalancerListenerDescription,
  context: __SerdeContext
): any => {
  return {
    ...(input.Listener != null && { Listener: se_AwsElbLoadBalancerListener(input.Listener, context) }),
    ...(input.PolicyNames != null && { PolicyNames: se_StringList(input.PolicyNames, context) }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerListenerDescriptions
 */
const se_AwsElbLoadBalancerListenerDescriptions = (
  input: AwsElbLoadBalancerListenerDescription[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbLoadBalancerListenerDescription(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerPolicies
 */
const se_AwsElbLoadBalancerPolicies = (input: AwsElbLoadBalancerPolicies, context: __SerdeContext): any => {
  return {
    ...(input.AppCookieStickinessPolicies != null && {
      AppCookieStickinessPolicies: se_AwsElbAppCookieStickinessPolicies(input.AppCookieStickinessPolicies, context),
    }),
    ...(input.LbCookieStickinessPolicies != null && {
      LbCookieStickinessPolicies: se_AwsElbLbCookieStickinessPolicies(input.LbCookieStickinessPolicies, context),
    }),
    ...(input.OtherPolicies != null && { OtherPolicies: se_StringList(input.OtherPolicies, context) }),
  };
};

/**
 * serializeAws_restJson1AwsElbLoadBalancerSourceSecurityGroup
 */
const se_AwsElbLoadBalancerSourceSecurityGroup = (
  input: AwsElbLoadBalancerSourceSecurityGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.OwnerAlias != null && { OwnerAlias: input.OwnerAlias }),
  };
};

/**
 * serializeAws_restJson1AwsElbv2LoadBalancerAttribute
 */
const se_AwsElbv2LoadBalancerAttribute = (input: AwsElbv2LoadBalancerAttribute, context: __SerdeContext): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsElbv2LoadBalancerAttributes
 */
const se_AwsElbv2LoadBalancerAttributes = (input: AwsElbv2LoadBalancerAttribute[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsElbv2LoadBalancerAttribute(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsElbv2LoadBalancerDetails
 */
const se_AwsElbv2LoadBalancerDetails = (input: AwsElbv2LoadBalancerDetails, context: __SerdeContext): any => {
  return {
    ...(input.AvailabilityZones != null && {
      AvailabilityZones: se_AvailabilityZones(input.AvailabilityZones, context),
    }),
    ...(input.CanonicalHostedZoneId != null && { CanonicalHostedZoneId: input.CanonicalHostedZoneId }),
    ...(input.CreatedTime != null && { CreatedTime: input.CreatedTime }),
    ...(input.DNSName != null && { DNSName: input.DNSName }),
    ...(input.IpAddressType != null && { IpAddressType: input.IpAddressType }),
    ...(input.LoadBalancerAttributes != null && {
      LoadBalancerAttributes: se_AwsElbv2LoadBalancerAttributes(input.LoadBalancerAttributes, context),
    }),
    ...(input.Scheme != null && { Scheme: input.Scheme }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_SecurityGroups(input.SecurityGroups, context) }),
    ...(input.State != null && { State: se_LoadBalancerState(input.State, context) }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsIamAccessKeyDetails
 */
const se_AwsIamAccessKeyDetails = (input: AwsIamAccessKeyDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessKeyId != null && { AccessKeyId: input.AccessKeyId }),
    ...(input.AccountId != null && { AccountId: input.AccountId }),
    ...(input.CreatedAt != null && { CreatedAt: input.CreatedAt }),
    ...(input.PrincipalId != null && { PrincipalId: input.PrincipalId }),
    ...(input.PrincipalName != null && { PrincipalName: input.PrincipalName }),
    ...(input.PrincipalType != null && { PrincipalType: input.PrincipalType }),
    ...(input.SessionContext != null && {
      SessionContext: se_AwsIamAccessKeySessionContext(input.SessionContext, context),
    }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.UserName != null && { UserName: input.UserName }),
  };
};

/**
 * serializeAws_restJson1AwsIamAccessKeySessionContext
 */
const se_AwsIamAccessKeySessionContext = (input: AwsIamAccessKeySessionContext, context: __SerdeContext): any => {
  return {
    ...(input.Attributes != null && {
      Attributes: se_AwsIamAccessKeySessionContextAttributes(input.Attributes, context),
    }),
    ...(input.SessionIssuer != null && {
      SessionIssuer: se_AwsIamAccessKeySessionContextSessionIssuer(input.SessionIssuer, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsIamAccessKeySessionContextAttributes
 */
const se_AwsIamAccessKeySessionContextAttributes = (
  input: AwsIamAccessKeySessionContextAttributes,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationDate != null && { CreationDate: input.CreationDate }),
    ...(input.MfaAuthenticated != null && { MfaAuthenticated: input.MfaAuthenticated }),
  };
};

/**
 * serializeAws_restJson1AwsIamAccessKeySessionContextSessionIssuer
 */
const se_AwsIamAccessKeySessionContextSessionIssuer = (
  input: AwsIamAccessKeySessionContextSessionIssuer,
  context: __SerdeContext
): any => {
  return {
    ...(input.AccountId != null && { AccountId: input.AccountId }),
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.PrincipalId != null && { PrincipalId: input.PrincipalId }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.UserName != null && { UserName: input.UserName }),
  };
};

/**
 * serializeAws_restJson1AwsIamAttachedManagedPolicy
 */
const se_AwsIamAttachedManagedPolicy = (input: AwsIamAttachedManagedPolicy, context: __SerdeContext): any => {
  return {
    ...(input.PolicyArn != null && { PolicyArn: input.PolicyArn }),
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsIamAttachedManagedPolicyList
 */
const se_AwsIamAttachedManagedPolicyList = (input: AwsIamAttachedManagedPolicy[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamAttachedManagedPolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamGroupDetails
 */
const se_AwsIamGroupDetails = (input: AwsIamGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.AttachedManagedPolicies != null && {
      AttachedManagedPolicies: se_AwsIamAttachedManagedPolicyList(input.AttachedManagedPolicies, context),
    }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.GroupId != null && { GroupId: input.GroupId }),
    ...(input.GroupName != null && { GroupName: input.GroupName }),
    ...(input.GroupPolicyList != null && { GroupPolicyList: se_AwsIamGroupPolicyList(input.GroupPolicyList, context) }),
    ...(input.Path != null && { Path: input.Path }),
  };
};

/**
 * serializeAws_restJson1AwsIamGroupPolicy
 */
const se_AwsIamGroupPolicy = (input: AwsIamGroupPolicy, context: __SerdeContext): any => {
  return {
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsIamGroupPolicyList
 */
const se_AwsIamGroupPolicyList = (input: AwsIamGroupPolicy[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamGroupPolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamInstanceProfile
 */
const se_AwsIamInstanceProfile = (input: AwsIamInstanceProfile, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.InstanceProfileId != null && { InstanceProfileId: input.InstanceProfileId }),
    ...(input.InstanceProfileName != null && { InstanceProfileName: input.InstanceProfileName }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.Roles != null && { Roles: se_AwsIamInstanceProfileRoles(input.Roles, context) }),
  };
};

/**
 * serializeAws_restJson1AwsIamInstanceProfileList
 */
const se_AwsIamInstanceProfileList = (input: AwsIamInstanceProfile[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamInstanceProfile(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamInstanceProfileRole
 */
const se_AwsIamInstanceProfileRole = (input: AwsIamInstanceProfileRole, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.AssumeRolePolicyDocument != null && { AssumeRolePolicyDocument: input.AssumeRolePolicyDocument }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.RoleId != null && { RoleId: input.RoleId }),
    ...(input.RoleName != null && { RoleName: input.RoleName }),
  };
};

/**
 * serializeAws_restJson1AwsIamInstanceProfileRoles
 */
const se_AwsIamInstanceProfileRoles = (input: AwsIamInstanceProfileRole[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamInstanceProfileRole(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamPermissionsBoundary
 */
const se_AwsIamPermissionsBoundary = (input: AwsIamPermissionsBoundary, context: __SerdeContext): any => {
  return {
    ...(input.PermissionsBoundaryArn != null && { PermissionsBoundaryArn: input.PermissionsBoundaryArn }),
    ...(input.PermissionsBoundaryType != null && { PermissionsBoundaryType: input.PermissionsBoundaryType }),
  };
};

/**
 * serializeAws_restJson1AwsIamPolicyDetails
 */
const se_AwsIamPolicyDetails = (input: AwsIamPolicyDetails, context: __SerdeContext): any => {
  return {
    ...(input.AttachmentCount != null && { AttachmentCount: input.AttachmentCount }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.DefaultVersionId != null && { DefaultVersionId: input.DefaultVersionId }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.IsAttachable != null && { IsAttachable: input.IsAttachable }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.PermissionsBoundaryUsageCount != null && {
      PermissionsBoundaryUsageCount: input.PermissionsBoundaryUsageCount,
    }),
    ...(input.PolicyId != null && { PolicyId: input.PolicyId }),
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
    ...(input.PolicyVersionList != null && {
      PolicyVersionList: se_AwsIamPolicyVersionList(input.PolicyVersionList, context),
    }),
    ...(input.UpdateDate != null && { UpdateDate: input.UpdateDate }),
  };
};

/**
 * serializeAws_restJson1AwsIamPolicyVersion
 */
const se_AwsIamPolicyVersion = (input: AwsIamPolicyVersion, context: __SerdeContext): any => {
  return {
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.IsDefaultVersion != null && { IsDefaultVersion: input.IsDefaultVersion }),
    ...(input.VersionId != null && { VersionId: input.VersionId }),
  };
};

/**
 * serializeAws_restJson1AwsIamPolicyVersionList
 */
const se_AwsIamPolicyVersionList = (input: AwsIamPolicyVersion[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamPolicyVersion(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamRoleDetails
 */
const se_AwsIamRoleDetails = (input: AwsIamRoleDetails, context: __SerdeContext): any => {
  return {
    ...(input.AssumeRolePolicyDocument != null && { AssumeRolePolicyDocument: input.AssumeRolePolicyDocument }),
    ...(input.AttachedManagedPolicies != null && {
      AttachedManagedPolicies: se_AwsIamAttachedManagedPolicyList(input.AttachedManagedPolicies, context),
    }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.InstanceProfileList != null && {
      InstanceProfileList: se_AwsIamInstanceProfileList(input.InstanceProfileList, context),
    }),
    ...(input.MaxSessionDuration != null && { MaxSessionDuration: input.MaxSessionDuration }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.PermissionsBoundary != null && {
      PermissionsBoundary: se_AwsIamPermissionsBoundary(input.PermissionsBoundary, context),
    }),
    ...(input.RoleId != null && { RoleId: input.RoleId }),
    ...(input.RoleName != null && { RoleName: input.RoleName }),
    ...(input.RolePolicyList != null && { RolePolicyList: se_AwsIamRolePolicyList(input.RolePolicyList, context) }),
  };
};

/**
 * serializeAws_restJson1AwsIamRolePolicy
 */
const se_AwsIamRolePolicy = (input: AwsIamRolePolicy, context: __SerdeContext): any => {
  return {
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsIamRolePolicyList
 */
const se_AwsIamRolePolicyList = (input: AwsIamRolePolicy[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamRolePolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsIamUserDetails
 */
const se_AwsIamUserDetails = (input: AwsIamUserDetails, context: __SerdeContext): any => {
  return {
    ...(input.AttachedManagedPolicies != null && {
      AttachedManagedPolicies: se_AwsIamAttachedManagedPolicyList(input.AttachedManagedPolicies, context),
    }),
    ...(input.CreateDate != null && { CreateDate: input.CreateDate }),
    ...(input.GroupList != null && { GroupList: se_StringList(input.GroupList, context) }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.PermissionsBoundary != null && {
      PermissionsBoundary: se_AwsIamPermissionsBoundary(input.PermissionsBoundary, context),
    }),
    ...(input.UserId != null && { UserId: input.UserId }),
    ...(input.UserName != null && { UserName: input.UserName }),
    ...(input.UserPolicyList != null && { UserPolicyList: se_AwsIamUserPolicyList(input.UserPolicyList, context) }),
  };
};

/**
 * serializeAws_restJson1AwsIamUserPolicy
 */
const se_AwsIamUserPolicy = (input: AwsIamUserPolicy, context: __SerdeContext): any => {
  return {
    ...(input.PolicyName != null && { PolicyName: input.PolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsIamUserPolicyList
 */
const se_AwsIamUserPolicyList = (input: AwsIamUserPolicy[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsIamUserPolicy(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsKinesisStreamDetails
 */
const se_AwsKinesisStreamDetails = (input: AwsKinesisStreamDetails, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RetentionPeriodHours != null && { RetentionPeriodHours: input.RetentionPeriodHours }),
    ...(input.ShardCount != null && { ShardCount: input.ShardCount }),
    ...(input.StreamEncryption != null && {
      StreamEncryption: se_AwsKinesisStreamStreamEncryptionDetails(input.StreamEncryption, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsKinesisStreamStreamEncryptionDetails
 */
const se_AwsKinesisStreamStreamEncryptionDetails = (
  input: AwsKinesisStreamStreamEncryptionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.EncryptionType != null && { EncryptionType: input.EncryptionType }),
    ...(input.KeyId != null && { KeyId: input.KeyId }),
  };
};

/**
 * serializeAws_restJson1AwsKmsKeyDetails
 */
const se_AwsKmsKeyDetails = (input: AwsKmsKeyDetails, context: __SerdeContext): any => {
  return {
    ...(input.AWSAccountId != null && { AWSAccountId: input.AWSAccountId }),
    ...(input.CreationDate != null && { CreationDate: __serializeFloat(input.CreationDate) }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.KeyId != null && { KeyId: input.KeyId }),
    ...(input.KeyManager != null && { KeyManager: input.KeyManager }),
    ...(input.KeyRotationStatus != null && { KeyRotationStatus: input.KeyRotationStatus }),
    ...(input.KeyState != null && { KeyState: input.KeyState }),
    ...(input.Origin != null && { Origin: input.Origin }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionCode
 */
const se_AwsLambdaFunctionCode = (input: AwsLambdaFunctionCode, context: __SerdeContext): any => {
  return {
    ...(input.S3Bucket != null && { S3Bucket: input.S3Bucket }),
    ...(input.S3Key != null && { S3Key: input.S3Key }),
    ...(input.S3ObjectVersion != null && { S3ObjectVersion: input.S3ObjectVersion }),
    ...(input.ZipFile != null && { ZipFile: input.ZipFile }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionDeadLetterConfig
 */
const se_AwsLambdaFunctionDeadLetterConfig = (
  input: AwsLambdaFunctionDeadLetterConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.TargetArn != null && { TargetArn: input.TargetArn }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionDetails
 */
const se_AwsLambdaFunctionDetails = (input: AwsLambdaFunctionDetails, context: __SerdeContext): any => {
  return {
    ...(input.Architectures != null && { Architectures: se_NonEmptyStringList(input.Architectures, context) }),
    ...(input.Code != null && { Code: se_AwsLambdaFunctionCode(input.Code, context) }),
    ...(input.CodeSha256 != null && { CodeSha256: input.CodeSha256 }),
    ...(input.DeadLetterConfig != null && {
      DeadLetterConfig: se_AwsLambdaFunctionDeadLetterConfig(input.DeadLetterConfig, context),
    }),
    ...(input.Environment != null && { Environment: se_AwsLambdaFunctionEnvironment(input.Environment, context) }),
    ...(input.FunctionName != null && { FunctionName: input.FunctionName }),
    ...(input.Handler != null && { Handler: input.Handler }),
    ...(input.KmsKeyArn != null && { KmsKeyArn: input.KmsKeyArn }),
    ...(input.LastModified != null && { LastModified: input.LastModified }),
    ...(input.Layers != null && { Layers: se_AwsLambdaFunctionLayerList(input.Layers, context) }),
    ...(input.MasterArn != null && { MasterArn: input.MasterArn }),
    ...(input.MemorySize != null && { MemorySize: input.MemorySize }),
    ...(input.PackageType != null && { PackageType: input.PackageType }),
    ...(input.RevisionId != null && { RevisionId: input.RevisionId }),
    ...(input.Role != null && { Role: input.Role }),
    ...(input.Runtime != null && { Runtime: input.Runtime }),
    ...(input.Timeout != null && { Timeout: input.Timeout }),
    ...(input.TracingConfig != null && {
      TracingConfig: se_AwsLambdaFunctionTracingConfig(input.TracingConfig, context),
    }),
    ...(input.Version != null && { Version: input.Version }),
    ...(input.VpcConfig != null && { VpcConfig: se_AwsLambdaFunctionVpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionEnvironment
 */
const se_AwsLambdaFunctionEnvironment = (input: AwsLambdaFunctionEnvironment, context: __SerdeContext): any => {
  return {
    ...(input.Error != null && { Error: se_AwsLambdaFunctionEnvironmentError(input.Error, context) }),
    ...(input.Variables != null && { Variables: se_FieldMap(input.Variables, context) }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionEnvironmentError
 */
const se_AwsLambdaFunctionEnvironmentError = (
  input: AwsLambdaFunctionEnvironmentError,
  context: __SerdeContext
): any => {
  return {
    ...(input.ErrorCode != null && { ErrorCode: input.ErrorCode }),
    ...(input.Message != null && { Message: input.Message }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionLayer
 */
const se_AwsLambdaFunctionLayer = (input: AwsLambdaFunctionLayer, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.CodeSize != null && { CodeSize: input.CodeSize }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionLayerList
 */
const se_AwsLambdaFunctionLayerList = (input: AwsLambdaFunctionLayer[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsLambdaFunctionLayer(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsLambdaFunctionTracingConfig
 */
const se_AwsLambdaFunctionTracingConfig = (input: AwsLambdaFunctionTracingConfig, context: __SerdeContext): any => {
  return {
    ...(input.Mode != null && { Mode: input.Mode }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaFunctionVpcConfig
 */
const se_AwsLambdaFunctionVpcConfig = (input: AwsLambdaFunctionVpcConfig, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_NonEmptyStringList(input.SecurityGroupIds, context) }),
    ...(input.SubnetIds != null && { SubnetIds: se_NonEmptyStringList(input.SubnetIds, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsLambdaLayerVersionDetails
 */
const se_AwsLambdaLayerVersionDetails = (input: AwsLambdaLayerVersionDetails, context: __SerdeContext): any => {
  return {
    ...(input.CompatibleRuntimes != null && {
      CompatibleRuntimes: se_NonEmptyStringList(input.CompatibleRuntimes, context),
    }),
    ...(input.CreatedDate != null && { CreatedDate: input.CreatedDate }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1AwsMountPoint
 */
const se_AwsMountPoint = (input: AwsMountPoint, context: __SerdeContext): any => {
  return {
    ...(input.ContainerPath != null && { ContainerPath: input.ContainerPath }),
    ...(input.SourceVolume != null && { SourceVolume: input.SourceVolume }),
  };
};

/**
 * serializeAws_restJson1AwsMountPointList
 */
const se_AwsMountPointList = (input: AwsMountPoint[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsMountPoint(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsNetworkFirewallFirewallDetails
 */
const se_AwsNetworkFirewallFirewallDetails = (
  input: AwsNetworkFirewallFirewallDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeleteProtection != null && { DeleteProtection: input.DeleteProtection }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.FirewallArn != null && { FirewallArn: input.FirewallArn }),
    ...(input.FirewallId != null && { FirewallId: input.FirewallId }),
    ...(input.FirewallName != null && { FirewallName: input.FirewallName }),
    ...(input.FirewallPolicyArn != null && { FirewallPolicyArn: input.FirewallPolicyArn }),
    ...(input.FirewallPolicyChangeProtection != null && {
      FirewallPolicyChangeProtection: input.FirewallPolicyChangeProtection,
    }),
    ...(input.SubnetChangeProtection != null && { SubnetChangeProtection: input.SubnetChangeProtection }),
    ...(input.SubnetMappings != null && {
      SubnetMappings: se_AwsNetworkFirewallFirewallSubnetMappingsList(input.SubnetMappings, context),
    }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsNetworkFirewallFirewallPolicyDetails
 */
const se_AwsNetworkFirewallFirewallPolicyDetails = (
  input: AwsNetworkFirewallFirewallPolicyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.FirewallPolicy != null && { FirewallPolicy: se_FirewallPolicyDetails(input.FirewallPolicy, context) }),
    ...(input.FirewallPolicyArn != null && { FirewallPolicyArn: input.FirewallPolicyArn }),
    ...(input.FirewallPolicyId != null && { FirewallPolicyId: input.FirewallPolicyId }),
    ...(input.FirewallPolicyName != null && { FirewallPolicyName: input.FirewallPolicyName }),
  };
};

/**
 * serializeAws_restJson1AwsNetworkFirewallFirewallSubnetMappingsDetails
 */
const se_AwsNetworkFirewallFirewallSubnetMappingsDetails = (
  input: AwsNetworkFirewallFirewallSubnetMappingsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
  };
};

/**
 * serializeAws_restJson1AwsNetworkFirewallFirewallSubnetMappingsList
 */
const se_AwsNetworkFirewallFirewallSubnetMappingsList = (
  input: AwsNetworkFirewallFirewallSubnetMappingsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsNetworkFirewallFirewallSubnetMappingsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsNetworkFirewallRuleGroupDetails
 */
const se_AwsNetworkFirewallRuleGroupDetails = (
  input: AwsNetworkFirewallRuleGroupDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Capacity != null && { Capacity: input.Capacity }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.RuleGroup != null && { RuleGroup: se_RuleGroupDetails(input.RuleGroup, context) }),
    ...(input.RuleGroupArn != null && { RuleGroupArn: input.RuleGroupArn }),
    ...(input.RuleGroupId != null && { RuleGroupId: input.RuleGroupId }),
    ...(input.RuleGroupName != null && { RuleGroupName: input.RuleGroupName }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails
 */
const se_AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails = (
  input: AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.InternalUserDatabaseEnabled != null && {
      InternalUserDatabaseEnabled: input.InternalUserDatabaseEnabled,
    }),
    ...(input.MasterUserOptions != null && {
      MasterUserOptions: se_AwsOpenSearchServiceDomainMasterUserOptionsDetails(input.MasterUserOptions, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainClusterConfigDetails
 */
const se_AwsOpenSearchServiceDomainClusterConfigDetails = (
  input: AwsOpenSearchServiceDomainClusterConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DedicatedMasterCount != null && { DedicatedMasterCount: input.DedicatedMasterCount }),
    ...(input.DedicatedMasterEnabled != null && { DedicatedMasterEnabled: input.DedicatedMasterEnabled }),
    ...(input.DedicatedMasterType != null && { DedicatedMasterType: input.DedicatedMasterType }),
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.WarmCount != null && { WarmCount: input.WarmCount }),
    ...(input.WarmEnabled != null && { WarmEnabled: input.WarmEnabled }),
    ...(input.WarmType != null && { WarmType: input.WarmType }),
    ...(input.ZoneAwarenessConfig != null && {
      ZoneAwarenessConfig: se_AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails(
        input.ZoneAwarenessConfig,
        context
      ),
    }),
    ...(input.ZoneAwarenessEnabled != null && { ZoneAwarenessEnabled: input.ZoneAwarenessEnabled }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails
 */
const se_AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails = (
  input: AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AvailabilityZoneCount != null && { AvailabilityZoneCount: input.AvailabilityZoneCount }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainDetails
 */
const se_AwsOpenSearchServiceDomainDetails = (
  input: AwsOpenSearchServiceDomainDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AccessPolicies != null && { AccessPolicies: input.AccessPolicies }),
    ...(input.AdvancedSecurityOptions != null && {
      AdvancedSecurityOptions: se_AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails(
        input.AdvancedSecurityOptions,
        context
      ),
    }),
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.ClusterConfig != null && {
      ClusterConfig: se_AwsOpenSearchServiceDomainClusterConfigDetails(input.ClusterConfig, context),
    }),
    ...(input.DomainEndpoint != null && { DomainEndpoint: input.DomainEndpoint }),
    ...(input.DomainEndpointOptions != null && {
      DomainEndpointOptions: se_AwsOpenSearchServiceDomainDomainEndpointOptionsDetails(
        input.DomainEndpointOptions,
        context
      ),
    }),
    ...(input.DomainEndpoints != null && { DomainEndpoints: se_FieldMap(input.DomainEndpoints, context) }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.EncryptionAtRestOptions != null && {
      EncryptionAtRestOptions: se_AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails(
        input.EncryptionAtRestOptions,
        context
      ),
    }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.LogPublishingOptions != null && {
      LogPublishingOptions: se_AwsOpenSearchServiceDomainLogPublishingOptionsDetails(
        input.LogPublishingOptions,
        context
      ),
    }),
    ...(input.NodeToNodeEncryptionOptions != null && {
      NodeToNodeEncryptionOptions: se_AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails(
        input.NodeToNodeEncryptionOptions,
        context
      ),
    }),
    ...(input.ServiceSoftwareOptions != null && {
      ServiceSoftwareOptions: se_AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails(
        input.ServiceSoftwareOptions,
        context
      ),
    }),
    ...(input.VpcOptions != null && {
      VpcOptions: se_AwsOpenSearchServiceDomainVpcOptionsDetails(input.VpcOptions, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainDomainEndpointOptionsDetails
 */
const se_AwsOpenSearchServiceDomainDomainEndpointOptionsDetails = (
  input: AwsOpenSearchServiceDomainDomainEndpointOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CustomEndpoint != null && { CustomEndpoint: input.CustomEndpoint }),
    ...(input.CustomEndpointCertificateArn != null && {
      CustomEndpointCertificateArn: input.CustomEndpointCertificateArn,
    }),
    ...(input.CustomEndpointEnabled != null && { CustomEndpointEnabled: input.CustomEndpointEnabled }),
    ...(input.EnforceHTTPS != null && { EnforceHTTPS: input.EnforceHTTPS }),
    ...(input.TLSSecurityPolicy != null && { TLSSecurityPolicy: input.TLSSecurityPolicy }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails
 */
const se_AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails = (
  input: AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainLogPublishingOption
 */
const se_AwsOpenSearchServiceDomainLogPublishingOption = (
  input: AwsOpenSearchServiceDomainLogPublishingOption,
  context: __SerdeContext
): any => {
  return {
    ...(input.CloudWatchLogsLogGroupArn != null && { CloudWatchLogsLogGroupArn: input.CloudWatchLogsLogGroupArn }),
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainLogPublishingOptionsDetails
 */
const se_AwsOpenSearchServiceDomainLogPublishingOptionsDetails = (
  input: AwsOpenSearchServiceDomainLogPublishingOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AuditLogs != null && {
      AuditLogs: se_AwsOpenSearchServiceDomainLogPublishingOption(input.AuditLogs, context),
    }),
    ...(input.IndexSlowLogs != null && {
      IndexSlowLogs: se_AwsOpenSearchServiceDomainLogPublishingOption(input.IndexSlowLogs, context),
    }),
    ...(input.SearchSlowLogs != null && {
      SearchSlowLogs: se_AwsOpenSearchServiceDomainLogPublishingOption(input.SearchSlowLogs, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainMasterUserOptionsDetails
 */
const se_AwsOpenSearchServiceDomainMasterUserOptionsDetails = (
  input: AwsOpenSearchServiceDomainMasterUserOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.MasterUserArn != null && { MasterUserArn: input.MasterUserArn }),
    ...(input.MasterUserName != null && { MasterUserName: input.MasterUserName }),
    ...(input.MasterUserPassword != null && { MasterUserPassword: input.MasterUserPassword }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails
 */
const se_AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails = (
  input: AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Enabled != null && { Enabled: input.Enabled }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails
 */
const se_AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails = (
  input: AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutomatedUpdateDate != null && { AutomatedUpdateDate: input.AutomatedUpdateDate }),
    ...(input.Cancellable != null && { Cancellable: input.Cancellable }),
    ...(input.CurrentVersion != null && { CurrentVersion: input.CurrentVersion }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.NewVersion != null && { NewVersion: input.NewVersion }),
    ...(input.OptionalDeployment != null && { OptionalDeployment: input.OptionalDeployment }),
    ...(input.UpdateAvailable != null && { UpdateAvailable: input.UpdateAvailable }),
    ...(input.UpdateStatus != null && { UpdateStatus: input.UpdateStatus }),
  };
};

/**
 * serializeAws_restJson1AwsOpenSearchServiceDomainVpcOptionsDetails
 */
const se_AwsOpenSearchServiceDomainVpcOptionsDetails = (
  input: AwsOpenSearchServiceDomainVpcOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_NonEmptyStringList(input.SecurityGroupIds, context) }),
    ...(input.SubnetIds != null && { SubnetIds: se_NonEmptyStringList(input.SubnetIds, context) }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbClusterAssociatedRole
 */
const se_AwsRdsDbClusterAssociatedRole = (input: AwsRdsDbClusterAssociatedRole, context: __SerdeContext): any => {
  return {
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbClusterAssociatedRoles
 */
const se_AwsRdsDbClusterAssociatedRoles = (input: AwsRdsDbClusterAssociatedRole[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbClusterAssociatedRole(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbClusterDetails
 */
const se_AwsRdsDbClusterDetails = (input: AwsRdsDbClusterDetails, context: __SerdeContext): any => {
  return {
    ...(input.ActivityStreamStatus != null && { ActivityStreamStatus: input.ActivityStreamStatus }),
    ...(input.AllocatedStorage != null && { AllocatedStorage: input.AllocatedStorage }),
    ...(input.AssociatedRoles != null && {
      AssociatedRoles: se_AwsRdsDbClusterAssociatedRoles(input.AssociatedRoles, context),
    }),
    ...(input.AvailabilityZones != null && { AvailabilityZones: se_StringList(input.AvailabilityZones, context) }),
    ...(input.BackupRetentionPeriod != null && { BackupRetentionPeriod: input.BackupRetentionPeriod }),
    ...(input.ClusterCreateTime != null && { ClusterCreateTime: input.ClusterCreateTime }),
    ...(input.CopyTagsToSnapshot != null && { CopyTagsToSnapshot: input.CopyTagsToSnapshot }),
    ...(input.CrossAccountClone != null && { CrossAccountClone: input.CrossAccountClone }),
    ...(input.CustomEndpoints != null && { CustomEndpoints: se_StringList(input.CustomEndpoints, context) }),
    ...(input.DatabaseName != null && { DatabaseName: input.DatabaseName }),
    ...(input.DbClusterIdentifier != null && { DbClusterIdentifier: input.DbClusterIdentifier }),
    ...(input.DbClusterMembers != null && {
      DbClusterMembers: se_AwsRdsDbClusterMembers(input.DbClusterMembers, context),
    }),
    ...(input.DbClusterOptionGroupMemberships != null && {
      DbClusterOptionGroupMemberships: se_AwsRdsDbClusterOptionGroupMemberships(
        input.DbClusterOptionGroupMemberships,
        context
      ),
    }),
    ...(input.DbClusterParameterGroup != null && { DbClusterParameterGroup: input.DbClusterParameterGroup }),
    ...(input.DbClusterResourceId != null && { DbClusterResourceId: input.DbClusterResourceId }),
    ...(input.DbSubnetGroup != null && { DbSubnetGroup: input.DbSubnetGroup }),
    ...(input.DeletionProtection != null && { DeletionProtection: input.DeletionProtection }),
    ...(input.DomainMemberships != null && {
      DomainMemberships: se_AwsRdsDbDomainMemberships(input.DomainMemberships, context),
    }),
    ...(input.EnabledCloudWatchLogsExports != null && {
      EnabledCloudWatchLogsExports: se_StringList(input.EnabledCloudWatchLogsExports, context),
    }),
    ...(input.Endpoint != null && { Endpoint: input.Endpoint }),
    ...(input.Engine != null && { Engine: input.Engine }),
    ...(input.EngineMode != null && { EngineMode: input.EngineMode }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.HostedZoneId != null && { HostedZoneId: input.HostedZoneId }),
    ...(input.HttpEndpointEnabled != null && { HttpEndpointEnabled: input.HttpEndpointEnabled }),
    ...(input.IamDatabaseAuthenticationEnabled != null && {
      IamDatabaseAuthenticationEnabled: input.IamDatabaseAuthenticationEnabled,
    }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.MasterUsername != null && { MasterUsername: input.MasterUsername }),
    ...(input.MultiAz != null && { MultiAz: input.MultiAz }),
    ...(input.Port != null && { Port: input.Port }),
    ...(input.PreferredBackupWindow != null && { PreferredBackupWindow: input.PreferredBackupWindow }),
    ...(input.PreferredMaintenanceWindow != null && { PreferredMaintenanceWindow: input.PreferredMaintenanceWindow }),
    ...(input.ReadReplicaIdentifiers != null && {
      ReadReplicaIdentifiers: se_StringList(input.ReadReplicaIdentifiers, context),
    }),
    ...(input.ReaderEndpoint != null && { ReaderEndpoint: input.ReaderEndpoint }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StorageEncrypted != null && { StorageEncrypted: input.StorageEncrypted }),
    ...(input.VpcSecurityGroups != null && {
      VpcSecurityGroups: se_AwsRdsDbInstanceVpcSecurityGroups(input.VpcSecurityGroups, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbClusterMember
 */
const se_AwsRdsDbClusterMember = (input: AwsRdsDbClusterMember, context: __SerdeContext): any => {
  return {
    ...(input.DbClusterParameterGroupStatus != null && {
      DbClusterParameterGroupStatus: input.DbClusterParameterGroupStatus,
    }),
    ...(input.DbInstanceIdentifier != null && { DbInstanceIdentifier: input.DbInstanceIdentifier }),
    ...(input.IsClusterWriter != null && { IsClusterWriter: input.IsClusterWriter }),
    ...(input.PromotionTier != null && { PromotionTier: input.PromotionTier }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbClusterMembers
 */
const se_AwsRdsDbClusterMembers = (input: AwsRdsDbClusterMember[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbClusterMember(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbClusterOptionGroupMembership
 */
const se_AwsRdsDbClusterOptionGroupMembership = (
  input: AwsRdsDbClusterOptionGroupMembership,
  context: __SerdeContext
): any => {
  return {
    ...(input.DbClusterOptionGroupName != null && { DbClusterOptionGroupName: input.DbClusterOptionGroupName }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbClusterOptionGroupMemberships
 */
const se_AwsRdsDbClusterOptionGroupMemberships = (
  input: AwsRdsDbClusterOptionGroupMembership[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbClusterOptionGroupMembership(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbClusterSnapshotDetails
 */
const se_AwsRdsDbClusterSnapshotDetails = (input: AwsRdsDbClusterSnapshotDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllocatedStorage != null && { AllocatedStorage: input.AllocatedStorage }),
    ...(input.AvailabilityZones != null && { AvailabilityZones: se_StringList(input.AvailabilityZones, context) }),
    ...(input.ClusterCreateTime != null && { ClusterCreateTime: input.ClusterCreateTime }),
    ...(input.DbClusterIdentifier != null && { DbClusterIdentifier: input.DbClusterIdentifier }),
    ...(input.DbClusterSnapshotIdentifier != null && {
      DbClusterSnapshotIdentifier: input.DbClusterSnapshotIdentifier,
    }),
    ...(input.Engine != null && { Engine: input.Engine }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.IamDatabaseAuthenticationEnabled != null && {
      IamDatabaseAuthenticationEnabled: input.IamDatabaseAuthenticationEnabled,
    }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LicenseModel != null && { LicenseModel: input.LicenseModel }),
    ...(input.MasterUsername != null && { MasterUsername: input.MasterUsername }),
    ...(input.PercentProgress != null && { PercentProgress: input.PercentProgress }),
    ...(input.Port != null && { Port: input.Port }),
    ...(input.SnapshotCreateTime != null && { SnapshotCreateTime: input.SnapshotCreateTime }),
    ...(input.SnapshotType != null && { SnapshotType: input.SnapshotType }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StorageEncrypted != null && { StorageEncrypted: input.StorageEncrypted }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbDomainMembership
 */
const se_AwsRdsDbDomainMembership = (input: AwsRdsDbDomainMembership, context: __SerdeContext): any => {
  return {
    ...(input.Domain != null && { Domain: input.Domain }),
    ...(input.Fqdn != null && { Fqdn: input.Fqdn }),
    ...(input.IamRoleName != null && { IamRoleName: input.IamRoleName }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbDomainMemberships
 */
const se_AwsRdsDbDomainMemberships = (input: AwsRdsDbDomainMembership[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbDomainMembership(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceAssociatedRole
 */
const se_AwsRdsDbInstanceAssociatedRole = (input: AwsRdsDbInstanceAssociatedRole, context: __SerdeContext): any => {
  return {
    ...(input.FeatureName != null && { FeatureName: input.FeatureName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceAssociatedRoles
 */
const se_AwsRdsDbInstanceAssociatedRoles = (input: AwsRdsDbInstanceAssociatedRole[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbInstanceAssociatedRole(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceDetails
 */
const se_AwsRdsDbInstanceDetails = (input: AwsRdsDbInstanceDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllocatedStorage != null && { AllocatedStorage: input.AllocatedStorage }),
    ...(input.AssociatedRoles != null && {
      AssociatedRoles: se_AwsRdsDbInstanceAssociatedRoles(input.AssociatedRoles, context),
    }),
    ...(input.AutoMinorVersionUpgrade != null && { AutoMinorVersionUpgrade: input.AutoMinorVersionUpgrade }),
    ...(input.AvailabilityZone != null && { AvailabilityZone: input.AvailabilityZone }),
    ...(input.BackupRetentionPeriod != null && { BackupRetentionPeriod: input.BackupRetentionPeriod }),
    ...(input.CACertificateIdentifier != null && { CACertificateIdentifier: input.CACertificateIdentifier }),
    ...(input.CharacterSetName != null && { CharacterSetName: input.CharacterSetName }),
    ...(input.CopyTagsToSnapshot != null && { CopyTagsToSnapshot: input.CopyTagsToSnapshot }),
    ...(input.DBClusterIdentifier != null && { DBClusterIdentifier: input.DBClusterIdentifier }),
    ...(input.DBInstanceClass != null && { DBInstanceClass: input.DBInstanceClass }),
    ...(input.DBInstanceIdentifier != null && { DBInstanceIdentifier: input.DBInstanceIdentifier }),
    ...(input.DBName != null && { DBName: input.DBName }),
    ...(input.DbInstancePort != null && { DbInstancePort: input.DbInstancePort }),
    ...(input.DbInstanceStatus != null && { DbInstanceStatus: input.DbInstanceStatus }),
    ...(input.DbParameterGroups != null && {
      DbParameterGroups: se_AwsRdsDbParameterGroups(input.DbParameterGroups, context),
    }),
    ...(input.DbSecurityGroups != null && { DbSecurityGroups: se_StringList(input.DbSecurityGroups, context) }),
    ...(input.DbSubnetGroup != null && { DbSubnetGroup: se_AwsRdsDbSubnetGroup(input.DbSubnetGroup, context) }),
    ...(input.DbiResourceId != null && { DbiResourceId: input.DbiResourceId }),
    ...(input.DeletionProtection != null && { DeletionProtection: input.DeletionProtection }),
    ...(input.DomainMemberships != null && {
      DomainMemberships: se_AwsRdsDbDomainMemberships(input.DomainMemberships, context),
    }),
    ...(input.EnabledCloudWatchLogsExports != null && {
      EnabledCloudWatchLogsExports: se_StringList(input.EnabledCloudWatchLogsExports, context),
    }),
    ...(input.Endpoint != null && { Endpoint: se_AwsRdsDbInstanceEndpoint(input.Endpoint, context) }),
    ...(input.Engine != null && { Engine: input.Engine }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.EnhancedMonitoringResourceArn != null && {
      EnhancedMonitoringResourceArn: input.EnhancedMonitoringResourceArn,
    }),
    ...(input.IAMDatabaseAuthenticationEnabled != null && {
      IAMDatabaseAuthenticationEnabled: input.IAMDatabaseAuthenticationEnabled,
    }),
    ...(input.InstanceCreateTime != null && { InstanceCreateTime: input.InstanceCreateTime }),
    ...(input.Iops != null && { Iops: input.Iops }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LatestRestorableTime != null && { LatestRestorableTime: input.LatestRestorableTime }),
    ...(input.LicenseModel != null && { LicenseModel: input.LicenseModel }),
    ...(input.ListenerEndpoint != null && {
      ListenerEndpoint: se_AwsRdsDbInstanceEndpoint(input.ListenerEndpoint, context),
    }),
    ...(input.MasterUsername != null && { MasterUsername: input.MasterUsername }),
    ...(input.MaxAllocatedStorage != null && { MaxAllocatedStorage: input.MaxAllocatedStorage }),
    ...(input.MonitoringInterval != null && { MonitoringInterval: input.MonitoringInterval }),
    ...(input.MonitoringRoleArn != null && { MonitoringRoleArn: input.MonitoringRoleArn }),
    ...(input.MultiAz != null && { MultiAz: input.MultiAz }),
    ...(input.OptionGroupMemberships != null && {
      OptionGroupMemberships: se_AwsRdsDbOptionGroupMemberships(input.OptionGroupMemberships, context),
    }),
    ...(input.PendingModifiedValues != null && {
      PendingModifiedValues: se_AwsRdsDbPendingModifiedValues(input.PendingModifiedValues, context),
    }),
    ...(input.PerformanceInsightsEnabled != null && { PerformanceInsightsEnabled: input.PerformanceInsightsEnabled }),
    ...(input.PerformanceInsightsKmsKeyId != null && {
      PerformanceInsightsKmsKeyId: input.PerformanceInsightsKmsKeyId,
    }),
    ...(input.PerformanceInsightsRetentionPeriod != null && {
      PerformanceInsightsRetentionPeriod: input.PerformanceInsightsRetentionPeriod,
    }),
    ...(input.PreferredBackupWindow != null && { PreferredBackupWindow: input.PreferredBackupWindow }),
    ...(input.PreferredMaintenanceWindow != null && { PreferredMaintenanceWindow: input.PreferredMaintenanceWindow }),
    ...(input.ProcessorFeatures != null && {
      ProcessorFeatures: se_AwsRdsDbProcessorFeatures(input.ProcessorFeatures, context),
    }),
    ...(input.PromotionTier != null && { PromotionTier: input.PromotionTier }),
    ...(input.PubliclyAccessible != null && { PubliclyAccessible: input.PubliclyAccessible }),
    ...(input.ReadReplicaDBClusterIdentifiers != null && {
      ReadReplicaDBClusterIdentifiers: se_StringList(input.ReadReplicaDBClusterIdentifiers, context),
    }),
    ...(input.ReadReplicaDBInstanceIdentifiers != null && {
      ReadReplicaDBInstanceIdentifiers: se_StringList(input.ReadReplicaDBInstanceIdentifiers, context),
    }),
    ...(input.ReadReplicaSourceDBInstanceIdentifier != null && {
      ReadReplicaSourceDBInstanceIdentifier: input.ReadReplicaSourceDBInstanceIdentifier,
    }),
    ...(input.SecondaryAvailabilityZone != null && { SecondaryAvailabilityZone: input.SecondaryAvailabilityZone }),
    ...(input.StatusInfos != null && { StatusInfos: se_AwsRdsDbStatusInfos(input.StatusInfos, context) }),
    ...(input.StorageEncrypted != null && { StorageEncrypted: input.StorageEncrypted }),
    ...(input.StorageType != null && { StorageType: input.StorageType }),
    ...(input.TdeCredentialArn != null && { TdeCredentialArn: input.TdeCredentialArn }),
    ...(input.Timezone != null && { Timezone: input.Timezone }),
    ...(input.VpcSecurityGroups != null && {
      VpcSecurityGroups: se_AwsRdsDbInstanceVpcSecurityGroups(input.VpcSecurityGroups, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceEndpoint
 */
const se_AwsRdsDbInstanceEndpoint = (input: AwsRdsDbInstanceEndpoint, context: __SerdeContext): any => {
  return {
    ...(input.Address != null && { Address: input.Address }),
    ...(input.HostedZoneId != null && { HostedZoneId: input.HostedZoneId }),
    ...(input.Port != null && { Port: input.Port }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceVpcSecurityGroup
 */
const se_AwsRdsDbInstanceVpcSecurityGroup = (input: AwsRdsDbInstanceVpcSecurityGroup, context: __SerdeContext): any => {
  return {
    ...(input.Status != null && { Status: input.Status }),
    ...(input.VpcSecurityGroupId != null && { VpcSecurityGroupId: input.VpcSecurityGroupId }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbInstanceVpcSecurityGroups
 */
const se_AwsRdsDbInstanceVpcSecurityGroups = (
  input: AwsRdsDbInstanceVpcSecurityGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbInstanceVpcSecurityGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbOptionGroupMembership
 */
const se_AwsRdsDbOptionGroupMembership = (input: AwsRdsDbOptionGroupMembership, context: __SerdeContext): any => {
  return {
    ...(input.OptionGroupName != null && { OptionGroupName: input.OptionGroupName }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbOptionGroupMemberships
 */
const se_AwsRdsDbOptionGroupMemberships = (input: AwsRdsDbOptionGroupMembership[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbOptionGroupMembership(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbParameterGroup
 */
const se_AwsRdsDbParameterGroup = (input: AwsRdsDbParameterGroup, context: __SerdeContext): any => {
  return {
    ...(input.DbParameterGroupName != null && { DbParameterGroupName: input.DbParameterGroupName }),
    ...(input.ParameterApplyStatus != null && { ParameterApplyStatus: input.ParameterApplyStatus }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbParameterGroups
 */
const se_AwsRdsDbParameterGroups = (input: AwsRdsDbParameterGroup[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbParameterGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbPendingModifiedValues
 */
const se_AwsRdsDbPendingModifiedValues = (input: AwsRdsDbPendingModifiedValues, context: __SerdeContext): any => {
  return {
    ...(input.AllocatedStorage != null && { AllocatedStorage: input.AllocatedStorage }),
    ...(input.BackupRetentionPeriod != null && { BackupRetentionPeriod: input.BackupRetentionPeriod }),
    ...(input.CaCertificateIdentifier != null && { CaCertificateIdentifier: input.CaCertificateIdentifier }),
    ...(input.DbInstanceClass != null && { DbInstanceClass: input.DbInstanceClass }),
    ...(input.DbInstanceIdentifier != null && { DbInstanceIdentifier: input.DbInstanceIdentifier }),
    ...(input.DbSubnetGroupName != null && { DbSubnetGroupName: input.DbSubnetGroupName }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.Iops != null && { Iops: input.Iops }),
    ...(input.LicenseModel != null && { LicenseModel: input.LicenseModel }),
    ...(input.MasterUserPassword != null && { MasterUserPassword: input.MasterUserPassword }),
    ...(input.MultiAZ != null && { MultiAZ: input.MultiAZ }),
    ...(input.PendingCloudWatchLogsExports != null && {
      PendingCloudWatchLogsExports: se_AwsRdsPendingCloudWatchLogsExports(input.PendingCloudWatchLogsExports, context),
    }),
    ...(input.Port != null && { Port: input.Port }),
    ...(input.ProcessorFeatures != null && {
      ProcessorFeatures: se_AwsRdsDbProcessorFeatures(input.ProcessorFeatures, context),
    }),
    ...(input.StorageType != null && { StorageType: input.StorageType }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbProcessorFeature
 */
const se_AwsRdsDbProcessorFeature = (input: AwsRdsDbProcessorFeature, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbProcessorFeatures
 */
const se_AwsRdsDbProcessorFeatures = (input: AwsRdsDbProcessorFeature[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbProcessorFeature(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbSecurityGroupDetails
 */
const se_AwsRdsDbSecurityGroupDetails = (input: AwsRdsDbSecurityGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.DbSecurityGroupArn != null && { DbSecurityGroupArn: input.DbSecurityGroupArn }),
    ...(input.DbSecurityGroupDescription != null && { DbSecurityGroupDescription: input.DbSecurityGroupDescription }),
    ...(input.DbSecurityGroupName != null && { DbSecurityGroupName: input.DbSecurityGroupName }),
    ...(input.Ec2SecurityGroups != null && {
      Ec2SecurityGroups: se_AwsRdsDbSecurityGroupEc2SecurityGroups(input.Ec2SecurityGroups, context),
    }),
    ...(input.IpRanges != null && { IpRanges: se_AwsRdsDbSecurityGroupIpRanges(input.IpRanges, context) }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSecurityGroupEc2SecurityGroup
 */
const se_AwsRdsDbSecurityGroupEc2SecurityGroup = (
  input: AwsRdsDbSecurityGroupEc2SecurityGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.Ec2SecurityGroupId != null && { Ec2SecurityGroupId: input.Ec2SecurityGroupId }),
    ...(input.Ec2SecurityGroupName != null && { Ec2SecurityGroupName: input.Ec2SecurityGroupName }),
    ...(input.Ec2SecurityGroupOwnerId != null && { Ec2SecurityGroupOwnerId: input.Ec2SecurityGroupOwnerId }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSecurityGroupEc2SecurityGroups
 */
const se_AwsRdsDbSecurityGroupEc2SecurityGroups = (
  input: AwsRdsDbSecurityGroupEc2SecurityGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbSecurityGroupEc2SecurityGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbSecurityGroupIpRange
 */
const se_AwsRdsDbSecurityGroupIpRange = (input: AwsRdsDbSecurityGroupIpRange, context: __SerdeContext): any => {
  return {
    ...(input.CidrIp != null && { CidrIp: input.CidrIp }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSecurityGroupIpRanges
 */
const se_AwsRdsDbSecurityGroupIpRanges = (input: AwsRdsDbSecurityGroupIpRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbSecurityGroupIpRange(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbSnapshotDetails
 */
const se_AwsRdsDbSnapshotDetails = (input: AwsRdsDbSnapshotDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllocatedStorage != null && { AllocatedStorage: input.AllocatedStorage }),
    ...(input.AvailabilityZone != null && { AvailabilityZone: input.AvailabilityZone }),
    ...(input.DbInstanceIdentifier != null && { DbInstanceIdentifier: input.DbInstanceIdentifier }),
    ...(input.DbSnapshotIdentifier != null && { DbSnapshotIdentifier: input.DbSnapshotIdentifier }),
    ...(input.DbiResourceId != null && { DbiResourceId: input.DbiResourceId }),
    ...(input.Encrypted != null && { Encrypted: input.Encrypted }),
    ...(input.Engine != null && { Engine: input.Engine }),
    ...(input.EngineVersion != null && { EngineVersion: input.EngineVersion }),
    ...(input.IamDatabaseAuthenticationEnabled != null && {
      IamDatabaseAuthenticationEnabled: input.IamDatabaseAuthenticationEnabled,
    }),
    ...(input.InstanceCreateTime != null && { InstanceCreateTime: input.InstanceCreateTime }),
    ...(input.Iops != null && { Iops: input.Iops }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LicenseModel != null && { LicenseModel: input.LicenseModel }),
    ...(input.MasterUsername != null && { MasterUsername: input.MasterUsername }),
    ...(input.OptionGroupName != null && { OptionGroupName: input.OptionGroupName }),
    ...(input.PercentProgress != null && { PercentProgress: input.PercentProgress }),
    ...(input.Port != null && { Port: input.Port }),
    ...(input.ProcessorFeatures != null && {
      ProcessorFeatures: se_AwsRdsDbProcessorFeatures(input.ProcessorFeatures, context),
    }),
    ...(input.SnapshotCreateTime != null && { SnapshotCreateTime: input.SnapshotCreateTime }),
    ...(input.SnapshotType != null && { SnapshotType: input.SnapshotType }),
    ...(input.SourceDbSnapshotIdentifier != null && { SourceDbSnapshotIdentifier: input.SourceDbSnapshotIdentifier }),
    ...(input.SourceRegion != null && { SourceRegion: input.SourceRegion }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StorageType != null && { StorageType: input.StorageType }),
    ...(input.TdeCredentialArn != null && { TdeCredentialArn: input.TdeCredentialArn }),
    ...(input.Timezone != null && { Timezone: input.Timezone }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbStatusInfo
 */
const se_AwsRdsDbStatusInfo = (input: AwsRdsDbStatusInfo, context: __SerdeContext): any => {
  return {
    ...(input.Message != null && { Message: input.Message }),
    ...(input.Normal != null && { Normal: input.Normal }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StatusType != null && { StatusType: input.StatusType }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbStatusInfos
 */
const se_AwsRdsDbStatusInfos = (input: AwsRdsDbStatusInfo[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbStatusInfo(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsDbSubnetGroup
 */
const se_AwsRdsDbSubnetGroup = (input: AwsRdsDbSubnetGroup, context: __SerdeContext): any => {
  return {
    ...(input.DbSubnetGroupArn != null && { DbSubnetGroupArn: input.DbSubnetGroupArn }),
    ...(input.DbSubnetGroupDescription != null && { DbSubnetGroupDescription: input.DbSubnetGroupDescription }),
    ...(input.DbSubnetGroupName != null && { DbSubnetGroupName: input.DbSubnetGroupName }),
    ...(input.SubnetGroupStatus != null && { SubnetGroupStatus: input.SubnetGroupStatus }),
    ...(input.Subnets != null && { Subnets: se_AwsRdsDbSubnetGroupSubnets(input.Subnets, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSubnetGroupSubnet
 */
const se_AwsRdsDbSubnetGroupSubnet = (input: AwsRdsDbSubnetGroupSubnet, context: __SerdeContext): any => {
  return {
    ...(input.SubnetAvailabilityZone != null && {
      SubnetAvailabilityZone: se_AwsRdsDbSubnetGroupSubnetAvailabilityZone(input.SubnetAvailabilityZone, context),
    }),
    ...(input.SubnetIdentifier != null && { SubnetIdentifier: input.SubnetIdentifier }),
    ...(input.SubnetStatus != null && { SubnetStatus: input.SubnetStatus }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSubnetGroupSubnetAvailabilityZone
 */
const se_AwsRdsDbSubnetGroupSubnetAvailabilityZone = (
  input: AwsRdsDbSubnetGroupSubnetAvailabilityZone,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1AwsRdsDbSubnetGroupSubnets
 */
const se_AwsRdsDbSubnetGroupSubnets = (input: AwsRdsDbSubnetGroupSubnet[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRdsDbSubnetGroupSubnet(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRdsEventSubscriptionDetails
 */
const se_AwsRdsEventSubscriptionDetails = (input: AwsRdsEventSubscriptionDetails, context: __SerdeContext): any => {
  return {
    ...(input.CustSubscriptionId != null && { CustSubscriptionId: input.CustSubscriptionId }),
    ...(input.CustomerAwsId != null && { CustomerAwsId: input.CustomerAwsId }),
    ...(input.Enabled != null && { Enabled: input.Enabled }),
    ...(input.EventCategoriesList != null && {
      EventCategoriesList: se_NonEmptyStringList(input.EventCategoriesList, context),
    }),
    ...(input.EventSubscriptionArn != null && { EventSubscriptionArn: input.EventSubscriptionArn }),
    ...(input.SnsTopicArn != null && { SnsTopicArn: input.SnsTopicArn }),
    ...(input.SourceIdsList != null && { SourceIdsList: se_NonEmptyStringList(input.SourceIdsList, context) }),
    ...(input.SourceType != null && { SourceType: input.SourceType }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.SubscriptionCreationTime != null && { SubscriptionCreationTime: input.SubscriptionCreationTime }),
  };
};

/**
 * serializeAws_restJson1AwsRdsPendingCloudWatchLogsExports
 */
const se_AwsRdsPendingCloudWatchLogsExports = (
  input: AwsRdsPendingCloudWatchLogsExports,
  context: __SerdeContext
): any => {
  return {
    ...(input.LogTypesToDisable != null && { LogTypesToDisable: se_StringList(input.LogTypesToDisable, context) }),
    ...(input.LogTypesToEnable != null && { LogTypesToEnable: se_StringList(input.LogTypesToEnable, context) }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterNode
 */
const se_AwsRedshiftClusterClusterNode = (input: AwsRedshiftClusterClusterNode, context: __SerdeContext): any => {
  return {
    ...(input.NodeRole != null && { NodeRole: input.NodeRole }),
    ...(input.PrivateIpAddress != null && { PrivateIpAddress: input.PrivateIpAddress }),
    ...(input.PublicIpAddress != null && { PublicIpAddress: input.PublicIpAddress }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterNodes
 */
const se_AwsRedshiftClusterClusterNodes = (input: AwsRedshiftClusterClusterNode[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterClusterNode(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterParameterGroup
 */
const se_AwsRedshiftClusterClusterParameterGroup = (
  input: AwsRedshiftClusterClusterParameterGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.ClusterParameterStatusList != null && {
      ClusterParameterStatusList: se_AwsRedshiftClusterClusterParameterStatusList(
        input.ClusterParameterStatusList,
        context
      ),
    }),
    ...(input.ParameterApplyStatus != null && { ParameterApplyStatus: input.ParameterApplyStatus }),
    ...(input.ParameterGroupName != null && { ParameterGroupName: input.ParameterGroupName }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterParameterGroups
 */
const se_AwsRedshiftClusterClusterParameterGroups = (
  input: AwsRedshiftClusterClusterParameterGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterClusterParameterGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterParameterStatus
 */
const se_AwsRedshiftClusterClusterParameterStatus = (
  input: AwsRedshiftClusterClusterParameterStatus,
  context: __SerdeContext
): any => {
  return {
    ...(input.ParameterApplyErrorDescription != null && {
      ParameterApplyErrorDescription: input.ParameterApplyErrorDescription,
    }),
    ...(input.ParameterApplyStatus != null && { ParameterApplyStatus: input.ParameterApplyStatus }),
    ...(input.ParameterName != null && { ParameterName: input.ParameterName }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterParameterStatusList
 */
const se_AwsRedshiftClusterClusterParameterStatusList = (
  input: AwsRedshiftClusterClusterParameterStatus[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterClusterParameterStatus(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterSecurityGroup
 */
const se_AwsRedshiftClusterClusterSecurityGroup = (
  input: AwsRedshiftClusterClusterSecurityGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.ClusterSecurityGroupName != null && { ClusterSecurityGroupName: input.ClusterSecurityGroupName }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterSecurityGroups
 */
const se_AwsRedshiftClusterClusterSecurityGroups = (
  input: AwsRedshiftClusterClusterSecurityGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterClusterSecurityGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterClusterSnapshotCopyStatus
 */
const se_AwsRedshiftClusterClusterSnapshotCopyStatus = (
  input: AwsRedshiftClusterClusterSnapshotCopyStatus,
  context: __SerdeContext
): any => {
  return {
    ...(input.DestinationRegion != null && { DestinationRegion: input.DestinationRegion }),
    ...(input.ManualSnapshotRetentionPeriod != null && {
      ManualSnapshotRetentionPeriod: input.ManualSnapshotRetentionPeriod,
    }),
    ...(input.RetentionPeriod != null && { RetentionPeriod: input.RetentionPeriod }),
    ...(input.SnapshotCopyGrantName != null && { SnapshotCopyGrantName: input.SnapshotCopyGrantName }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterDeferredMaintenanceWindow
 */
const se_AwsRedshiftClusterDeferredMaintenanceWindow = (
  input: AwsRedshiftClusterDeferredMaintenanceWindow,
  context: __SerdeContext
): any => {
  return {
    ...(input.DeferMaintenanceEndTime != null && { DeferMaintenanceEndTime: input.DeferMaintenanceEndTime }),
    ...(input.DeferMaintenanceIdentifier != null && { DeferMaintenanceIdentifier: input.DeferMaintenanceIdentifier }),
    ...(input.DeferMaintenanceStartTime != null && { DeferMaintenanceStartTime: input.DeferMaintenanceStartTime }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterDeferredMaintenanceWindows
 */
const se_AwsRedshiftClusterDeferredMaintenanceWindows = (
  input: AwsRedshiftClusterDeferredMaintenanceWindow[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterDeferredMaintenanceWindow(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterDetails
 */
const se_AwsRedshiftClusterDetails = (input: AwsRedshiftClusterDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllowVersionUpgrade != null && { AllowVersionUpgrade: input.AllowVersionUpgrade }),
    ...(input.AutomatedSnapshotRetentionPeriod != null && {
      AutomatedSnapshotRetentionPeriod: input.AutomatedSnapshotRetentionPeriod,
    }),
    ...(input.AvailabilityZone != null && { AvailabilityZone: input.AvailabilityZone }),
    ...(input.ClusterAvailabilityStatus != null && { ClusterAvailabilityStatus: input.ClusterAvailabilityStatus }),
    ...(input.ClusterCreateTime != null && { ClusterCreateTime: input.ClusterCreateTime }),
    ...(input.ClusterIdentifier != null && { ClusterIdentifier: input.ClusterIdentifier }),
    ...(input.ClusterNodes != null && { ClusterNodes: se_AwsRedshiftClusterClusterNodes(input.ClusterNodes, context) }),
    ...(input.ClusterParameterGroups != null && {
      ClusterParameterGroups: se_AwsRedshiftClusterClusterParameterGroups(input.ClusterParameterGroups, context),
    }),
    ...(input.ClusterPublicKey != null && { ClusterPublicKey: input.ClusterPublicKey }),
    ...(input.ClusterRevisionNumber != null && { ClusterRevisionNumber: input.ClusterRevisionNumber }),
    ...(input.ClusterSecurityGroups != null && {
      ClusterSecurityGroups: se_AwsRedshiftClusterClusterSecurityGroups(input.ClusterSecurityGroups, context),
    }),
    ...(input.ClusterSnapshotCopyStatus != null && {
      ClusterSnapshotCopyStatus: se_AwsRedshiftClusterClusterSnapshotCopyStatus(
        input.ClusterSnapshotCopyStatus,
        context
      ),
    }),
    ...(input.ClusterStatus != null && { ClusterStatus: input.ClusterStatus }),
    ...(input.ClusterSubnetGroupName != null && { ClusterSubnetGroupName: input.ClusterSubnetGroupName }),
    ...(input.ClusterVersion != null && { ClusterVersion: input.ClusterVersion }),
    ...(input.DBName != null && { DBName: input.DBName }),
    ...(input.DeferredMaintenanceWindows != null && {
      DeferredMaintenanceWindows: se_AwsRedshiftClusterDeferredMaintenanceWindows(
        input.DeferredMaintenanceWindows,
        context
      ),
    }),
    ...(input.ElasticIpStatus != null && {
      ElasticIpStatus: se_AwsRedshiftClusterElasticIpStatus(input.ElasticIpStatus, context),
    }),
    ...(input.ElasticResizeNumberOfNodeOptions != null && {
      ElasticResizeNumberOfNodeOptions: input.ElasticResizeNumberOfNodeOptions,
    }),
    ...(input.Encrypted != null && { Encrypted: input.Encrypted }),
    ...(input.Endpoint != null && { Endpoint: se_AwsRedshiftClusterEndpoint(input.Endpoint, context) }),
    ...(input.EnhancedVpcRouting != null && { EnhancedVpcRouting: input.EnhancedVpcRouting }),
    ...(input.ExpectedNextSnapshotScheduleTime != null && {
      ExpectedNextSnapshotScheduleTime: input.ExpectedNextSnapshotScheduleTime,
    }),
    ...(input.ExpectedNextSnapshotScheduleTimeStatus != null && {
      ExpectedNextSnapshotScheduleTimeStatus: input.ExpectedNextSnapshotScheduleTimeStatus,
    }),
    ...(input.HsmStatus != null && { HsmStatus: se_AwsRedshiftClusterHsmStatus(input.HsmStatus, context) }),
    ...(input.IamRoles != null && { IamRoles: se_AwsRedshiftClusterIamRoles(input.IamRoles, context) }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LoggingStatus != null && {
      LoggingStatus: se_AwsRedshiftClusterLoggingStatus(input.LoggingStatus, context),
    }),
    ...(input.MaintenanceTrackName != null && { MaintenanceTrackName: input.MaintenanceTrackName }),
    ...(input.ManualSnapshotRetentionPeriod != null && {
      ManualSnapshotRetentionPeriod: input.ManualSnapshotRetentionPeriod,
    }),
    ...(input.MasterUsername != null && { MasterUsername: input.MasterUsername }),
    ...(input.NextMaintenanceWindowStartTime != null && {
      NextMaintenanceWindowStartTime: input.NextMaintenanceWindowStartTime,
    }),
    ...(input.NodeType != null && { NodeType: input.NodeType }),
    ...(input.NumberOfNodes != null && { NumberOfNodes: input.NumberOfNodes }),
    ...(input.PendingActions != null && { PendingActions: se_StringList(input.PendingActions, context) }),
    ...(input.PendingModifiedValues != null && {
      PendingModifiedValues: se_AwsRedshiftClusterPendingModifiedValues(input.PendingModifiedValues, context),
    }),
    ...(input.PreferredMaintenanceWindow != null && { PreferredMaintenanceWindow: input.PreferredMaintenanceWindow }),
    ...(input.PubliclyAccessible != null && { PubliclyAccessible: input.PubliclyAccessible }),
    ...(input.ResizeInfo != null && { ResizeInfo: se_AwsRedshiftClusterResizeInfo(input.ResizeInfo, context) }),
    ...(input.RestoreStatus != null && {
      RestoreStatus: se_AwsRedshiftClusterRestoreStatus(input.RestoreStatus, context),
    }),
    ...(input.SnapshotScheduleIdentifier != null && { SnapshotScheduleIdentifier: input.SnapshotScheduleIdentifier }),
    ...(input.SnapshotScheduleState != null && { SnapshotScheduleState: input.SnapshotScheduleState }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
    ...(input.VpcSecurityGroups != null && {
      VpcSecurityGroups: se_AwsRedshiftClusterVpcSecurityGroups(input.VpcSecurityGroups, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterElasticIpStatus
 */
const se_AwsRedshiftClusterElasticIpStatus = (
  input: AwsRedshiftClusterElasticIpStatus,
  context: __SerdeContext
): any => {
  return {
    ...(input.ElasticIp != null && { ElasticIp: input.ElasticIp }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterEndpoint
 */
const se_AwsRedshiftClusterEndpoint = (input: AwsRedshiftClusterEndpoint, context: __SerdeContext): any => {
  return {
    ...(input.Address != null && { Address: input.Address }),
    ...(input.Port != null && { Port: input.Port }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterHsmStatus
 */
const se_AwsRedshiftClusterHsmStatus = (input: AwsRedshiftClusterHsmStatus, context: __SerdeContext): any => {
  return {
    ...(input.HsmClientCertificateIdentifier != null && {
      HsmClientCertificateIdentifier: input.HsmClientCertificateIdentifier,
    }),
    ...(input.HsmConfigurationIdentifier != null && { HsmConfigurationIdentifier: input.HsmConfigurationIdentifier }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterIamRole
 */
const se_AwsRedshiftClusterIamRole = (input: AwsRedshiftClusterIamRole, context: __SerdeContext): any => {
  return {
    ...(input.ApplyStatus != null && { ApplyStatus: input.ApplyStatus }),
    ...(input.IamRoleArn != null && { IamRoleArn: input.IamRoleArn }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterIamRoles
 */
const se_AwsRedshiftClusterIamRoles = (input: AwsRedshiftClusterIamRole[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterIamRole(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsRedshiftClusterLoggingStatus
 */
const se_AwsRedshiftClusterLoggingStatus = (input: AwsRedshiftClusterLoggingStatus, context: __SerdeContext): any => {
  return {
    ...(input.BucketName != null && { BucketName: input.BucketName }),
    ...(input.LastFailureMessage != null && { LastFailureMessage: input.LastFailureMessage }),
    ...(input.LastFailureTime != null && { LastFailureTime: input.LastFailureTime }),
    ...(input.LastSuccessfulDeliveryTime != null && { LastSuccessfulDeliveryTime: input.LastSuccessfulDeliveryTime }),
    ...(input.LoggingEnabled != null && { LoggingEnabled: input.LoggingEnabled }),
    ...(input.S3KeyPrefix != null && { S3KeyPrefix: input.S3KeyPrefix }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterPendingModifiedValues
 */
const se_AwsRedshiftClusterPendingModifiedValues = (
  input: AwsRedshiftClusterPendingModifiedValues,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutomatedSnapshotRetentionPeriod != null && {
      AutomatedSnapshotRetentionPeriod: input.AutomatedSnapshotRetentionPeriod,
    }),
    ...(input.ClusterIdentifier != null && { ClusterIdentifier: input.ClusterIdentifier }),
    ...(input.ClusterType != null && { ClusterType: input.ClusterType }),
    ...(input.ClusterVersion != null && { ClusterVersion: input.ClusterVersion }),
    ...(input.EncryptionType != null && { EncryptionType: input.EncryptionType }),
    ...(input.EnhancedVpcRouting != null && { EnhancedVpcRouting: input.EnhancedVpcRouting }),
    ...(input.MaintenanceTrackName != null && { MaintenanceTrackName: input.MaintenanceTrackName }),
    ...(input.MasterUserPassword != null && { MasterUserPassword: input.MasterUserPassword }),
    ...(input.NodeType != null && { NodeType: input.NodeType }),
    ...(input.NumberOfNodes != null && { NumberOfNodes: input.NumberOfNodes }),
    ...(input.PubliclyAccessible != null && { PubliclyAccessible: input.PubliclyAccessible }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterResizeInfo
 */
const se_AwsRedshiftClusterResizeInfo = (input: AwsRedshiftClusterResizeInfo, context: __SerdeContext): any => {
  return {
    ...(input.AllowCancelResize != null && { AllowCancelResize: input.AllowCancelResize }),
    ...(input.ResizeType != null && { ResizeType: input.ResizeType }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterRestoreStatus
 */
const se_AwsRedshiftClusterRestoreStatus = (input: AwsRedshiftClusterRestoreStatus, context: __SerdeContext): any => {
  return {
    ...(input.CurrentRestoreRateInMegaBytesPerSecond != null && {
      CurrentRestoreRateInMegaBytesPerSecond: __serializeFloat(input.CurrentRestoreRateInMegaBytesPerSecond),
    }),
    ...(input.ElapsedTimeInSeconds != null && { ElapsedTimeInSeconds: input.ElapsedTimeInSeconds }),
    ...(input.EstimatedTimeToCompletionInSeconds != null && {
      EstimatedTimeToCompletionInSeconds: input.EstimatedTimeToCompletionInSeconds,
    }),
    ...(input.ProgressInMegaBytes != null && { ProgressInMegaBytes: input.ProgressInMegaBytes }),
    ...(input.SnapshotSizeInMegaBytes != null && { SnapshotSizeInMegaBytes: input.SnapshotSizeInMegaBytes }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterVpcSecurityGroup
 */
const se_AwsRedshiftClusterVpcSecurityGroup = (
  input: AwsRedshiftClusterVpcSecurityGroup,
  context: __SerdeContext
): any => {
  return {
    ...(input.Status != null && { Status: input.Status }),
    ...(input.VpcSecurityGroupId != null && { VpcSecurityGroupId: input.VpcSecurityGroupId }),
  };
};

/**
 * serializeAws_restJson1AwsRedshiftClusterVpcSecurityGroups
 */
const se_AwsRedshiftClusterVpcSecurityGroups = (
  input: AwsRedshiftClusterVpcSecurityGroup[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsRedshiftClusterVpcSecurityGroup(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3AccountPublicAccessBlockDetails
 */
const se_AwsS3AccountPublicAccessBlockDetails = (
  input: AwsS3AccountPublicAccessBlockDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.BlockPublicAcls != null && { BlockPublicAcls: input.BlockPublicAcls }),
    ...(input.BlockPublicPolicy != null && { BlockPublicPolicy: input.BlockPublicPolicy }),
    ...(input.IgnorePublicAcls != null && { IgnorePublicAcls: input.IgnorePublicAcls }),
    ...(input.RestrictPublicBuckets != null && { RestrictPublicBuckets: input.RestrictPublicBuckets }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Rules != null && { Rules: se_AwsS3BucketBucketLifecycleConfigurationRulesList(input.Rules, context) }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DaysAfterInitiation != null && { DaysAfterInitiation: input.DaysAfterInitiation }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AbortIncompleteMultipartUpload != null && {
      AbortIncompleteMultipartUpload:
        se_AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails(
          input.AbortIncompleteMultipartUpload,
          context
        ),
    }),
    ...(input.ExpirationDate != null && { ExpirationDate: input.ExpirationDate }),
    ...(input.ExpirationInDays != null && { ExpirationInDays: input.ExpirationInDays }),
    ...(input.ExpiredObjectDeleteMarker != null && { ExpiredObjectDeleteMarker: input.ExpiredObjectDeleteMarker }),
    ...(input.Filter != null && {
      Filter: se_AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails(input.Filter, context),
    }),
    ...(input.ID != null && { ID: input.ID }),
    ...(input.NoncurrentVersionExpirationInDays != null && {
      NoncurrentVersionExpirationInDays: input.NoncurrentVersionExpirationInDays,
    }),
    ...(input.NoncurrentVersionTransitions != null && {
      NoncurrentVersionTransitions: se_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList(
        input.NoncurrentVersionTransitions,
        context
      ),
    }),
    ...(input.Prefix != null && { Prefix: input.Prefix }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.Transitions != null && {
      Transitions: se_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList(input.Transitions, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Predicate != null && {
      Predicate: se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails(input.Predicate, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Operands != null && {
      Operands: se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList(input.Operands, context),
    }),
    ...(input.Prefix != null && { Prefix: input.Prefix }),
    ...(input.Tag != null && {
      Tag: se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails(input.Tag, context),
    }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Prefix != null && { Prefix: input.Prefix }),
    ...(input.Tag != null && {
      Tag: se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails(input.Tag, context),
    }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesList
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesList = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketBucketLifecycleConfigurationRulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Days != null && { Days: input.Days }),
    ...(input.StorageClass != null && { StorageClass: input.StorageClass }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Date != null && { Date: input.Date }),
    ...(input.Days != null && { Days: input.Days }),
    ...(input.StorageClass != null && { StorageClass: input.StorageClass }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList
 */
const se_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList = (
  input: AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketBucketVersioningConfiguration
 */
const se_AwsS3BucketBucketVersioningConfiguration = (
  input: AwsS3BucketBucketVersioningConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.IsMfaDeleteEnabled != null && { IsMfaDeleteEnabled: input.IsMfaDeleteEnabled }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketDetails
 */
const se_AwsS3BucketDetails = (input: AwsS3BucketDetails, context: __SerdeContext): any => {
  return {
    ...(input.AccessControlList != null && { AccessControlList: input.AccessControlList }),
    ...(input.BucketLifecycleConfiguration != null && {
      BucketLifecycleConfiguration: se_AwsS3BucketBucketLifecycleConfigurationDetails(
        input.BucketLifecycleConfiguration,
        context
      ),
    }),
    ...(input.BucketLoggingConfiguration != null && {
      BucketLoggingConfiguration: se_AwsS3BucketLoggingConfiguration(input.BucketLoggingConfiguration, context),
    }),
    ...(input.BucketNotificationConfiguration != null && {
      BucketNotificationConfiguration: se_AwsS3BucketNotificationConfiguration(
        input.BucketNotificationConfiguration,
        context
      ),
    }),
    ...(input.BucketVersioningConfiguration != null && {
      BucketVersioningConfiguration: se_AwsS3BucketBucketVersioningConfiguration(
        input.BucketVersioningConfiguration,
        context
      ),
    }),
    ...(input.BucketWebsiteConfiguration != null && {
      BucketWebsiteConfiguration: se_AwsS3BucketWebsiteConfiguration(input.BucketWebsiteConfiguration, context),
    }),
    ...(input.CreatedAt != null && { CreatedAt: input.CreatedAt }),
    ...(input.ObjectLockConfiguration != null && {
      ObjectLockConfiguration: se_AwsS3BucketObjectLockConfiguration(input.ObjectLockConfiguration, context),
    }),
    ...(input.OwnerAccountId != null && { OwnerAccountId: input.OwnerAccountId }),
    ...(input.OwnerId != null && { OwnerId: input.OwnerId }),
    ...(input.OwnerName != null && { OwnerName: input.OwnerName }),
    ...(input.PublicAccessBlockConfiguration != null && {
      PublicAccessBlockConfiguration: se_AwsS3AccountPublicAccessBlockDetails(
        input.PublicAccessBlockConfiguration,
        context
      ),
    }),
    ...(input.ServerSideEncryptionConfiguration != null && {
      ServerSideEncryptionConfiguration: se_AwsS3BucketServerSideEncryptionConfiguration(
        input.ServerSideEncryptionConfiguration,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketLoggingConfiguration
 */
const se_AwsS3BucketLoggingConfiguration = (input: AwsS3BucketLoggingConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.DestinationBucketName != null && { DestinationBucketName: input.DestinationBucketName }),
    ...(input.LogFilePrefix != null && { LogFilePrefix: input.LogFilePrefix }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfiguration
 */
const se_AwsS3BucketNotificationConfiguration = (
  input: AwsS3BucketNotificationConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.Configurations != null && {
      Configurations: se_AwsS3BucketNotificationConfigurationDetails(input.Configurations, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationDetail
 */
const se_AwsS3BucketNotificationConfigurationDetail = (
  input: AwsS3BucketNotificationConfigurationDetail,
  context: __SerdeContext
): any => {
  return {
    ...(input.Destination != null && { Destination: input.Destination }),
    ...(input.Events != null && { Events: se_AwsS3BucketNotificationConfigurationEvents(input.Events, context) }),
    ...(input.Filter != null && { Filter: se_AwsS3BucketNotificationConfigurationFilter(input.Filter, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationDetails
 */
const se_AwsS3BucketNotificationConfigurationDetails = (
  input: AwsS3BucketNotificationConfigurationDetail[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketNotificationConfigurationDetail(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationEvents
 */
const se_AwsS3BucketNotificationConfigurationEvents = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationFilter
 */
const se_AwsS3BucketNotificationConfigurationFilter = (
  input: AwsS3BucketNotificationConfigurationFilter,
  context: __SerdeContext
): any => {
  return {
    ...(input.S3KeyFilter != null && {
      S3KeyFilter: se_AwsS3BucketNotificationConfigurationS3KeyFilter(input.S3KeyFilter, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilter
 */
const se_AwsS3BucketNotificationConfigurationS3KeyFilter = (
  input: AwsS3BucketNotificationConfigurationS3KeyFilter,
  context: __SerdeContext
): any => {
  return {
    ...(input.FilterRules != null && {
      FilterRules: se_AwsS3BucketNotificationConfigurationS3KeyFilterRules(input.FilterRules, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilterRule
 */
const se_AwsS3BucketNotificationConfigurationS3KeyFilterRule = (
  input: AwsS3BucketNotificationConfigurationS3KeyFilterRule,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilterRules
 */
const se_AwsS3BucketNotificationConfigurationS3KeyFilterRules = (
  input: AwsS3BucketNotificationConfigurationS3KeyFilterRule[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketNotificationConfigurationS3KeyFilterRule(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketObjectLockConfiguration
 */
const se_AwsS3BucketObjectLockConfiguration = (
  input: AwsS3BucketObjectLockConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.ObjectLockEnabled != null && { ObjectLockEnabled: input.ObjectLockEnabled }),
    ...(input.Rule != null && { Rule: se_AwsS3BucketObjectLockConfigurationRuleDetails(input.Rule, context) }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails
 */
const se_AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails = (
  input: AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Days != null && { Days: input.Days }),
    ...(input.Mode != null && { Mode: input.Mode }),
    ...(input.Years != null && { Years: input.Years }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketObjectLockConfigurationRuleDetails
 */
const se_AwsS3BucketObjectLockConfigurationRuleDetails = (
  input: AwsS3BucketObjectLockConfigurationRuleDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DefaultRetention != null && {
      DefaultRetention: se_AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails(
        input.DefaultRetention,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketServerSideEncryptionByDefault
 */
const se_AwsS3BucketServerSideEncryptionByDefault = (
  input: AwsS3BucketServerSideEncryptionByDefault,
  context: __SerdeContext
): any => {
  return {
    ...(input.KMSMasterKeyID != null && { KMSMasterKeyID: input.KMSMasterKeyID }),
    ...(input.SSEAlgorithm != null && { SSEAlgorithm: input.SSEAlgorithm }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketServerSideEncryptionConfiguration
 */
const se_AwsS3BucketServerSideEncryptionConfiguration = (
  input: AwsS3BucketServerSideEncryptionConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.Rules != null && { Rules: se_AwsS3BucketServerSideEncryptionRules(input.Rules, context) }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketServerSideEncryptionRule
 */
const se_AwsS3BucketServerSideEncryptionRule = (
  input: AwsS3BucketServerSideEncryptionRule,
  context: __SerdeContext
): any => {
  return {
    ...(input.ApplyServerSideEncryptionByDefault != null && {
      ApplyServerSideEncryptionByDefault: se_AwsS3BucketServerSideEncryptionByDefault(
        input.ApplyServerSideEncryptionByDefault,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketServerSideEncryptionRules
 */
const se_AwsS3BucketServerSideEncryptionRules = (
  input: AwsS3BucketServerSideEncryptionRule[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketServerSideEncryptionRule(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfiguration
 */
const se_AwsS3BucketWebsiteConfiguration = (input: AwsS3BucketWebsiteConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.ErrorDocument != null && { ErrorDocument: input.ErrorDocument }),
    ...(input.IndexDocumentSuffix != null && { IndexDocumentSuffix: input.IndexDocumentSuffix }),
    ...(input.RedirectAllRequestsTo != null && {
      RedirectAllRequestsTo: se_AwsS3BucketWebsiteConfigurationRedirectTo(input.RedirectAllRequestsTo, context),
    }),
    ...(input.RoutingRules != null && {
      RoutingRules: se_AwsS3BucketWebsiteConfigurationRoutingRules(input.RoutingRules, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfigurationRedirectTo
 */
const se_AwsS3BucketWebsiteConfigurationRedirectTo = (
  input: AwsS3BucketWebsiteConfigurationRedirectTo,
  context: __SerdeContext
): any => {
  return {
    ...(input.Hostname != null && { Hostname: input.Hostname }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRule
 */
const se_AwsS3BucketWebsiteConfigurationRoutingRule = (
  input: AwsS3BucketWebsiteConfigurationRoutingRule,
  context: __SerdeContext
): any => {
  return {
    ...(input.Condition != null && {
      Condition: se_AwsS3BucketWebsiteConfigurationRoutingRuleCondition(input.Condition, context),
    }),
    ...(input.Redirect != null && {
      Redirect: se_AwsS3BucketWebsiteConfigurationRoutingRuleRedirect(input.Redirect, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRuleCondition
 */
const se_AwsS3BucketWebsiteConfigurationRoutingRuleCondition = (
  input: AwsS3BucketWebsiteConfigurationRoutingRuleCondition,
  context: __SerdeContext
): any => {
  return {
    ...(input.HttpErrorCodeReturnedEquals != null && {
      HttpErrorCodeReturnedEquals: input.HttpErrorCodeReturnedEquals,
    }),
    ...(input.KeyPrefixEquals != null && { KeyPrefixEquals: input.KeyPrefixEquals }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRuleRedirect
 */
const se_AwsS3BucketWebsiteConfigurationRoutingRuleRedirect = (
  input: AwsS3BucketWebsiteConfigurationRoutingRuleRedirect,
  context: __SerdeContext
): any => {
  return {
    ...(input.Hostname != null && { Hostname: input.Hostname }),
    ...(input.HttpRedirectCode != null && { HttpRedirectCode: input.HttpRedirectCode }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.ReplaceKeyPrefixWith != null && { ReplaceKeyPrefixWith: input.ReplaceKeyPrefixWith }),
    ...(input.ReplaceKeyWith != null && { ReplaceKeyWith: input.ReplaceKeyWith }),
  };
};

/**
 * serializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRules
 */
const se_AwsS3BucketWebsiteConfigurationRoutingRules = (
  input: AwsS3BucketWebsiteConfigurationRoutingRule[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsS3BucketWebsiteConfigurationRoutingRule(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsS3ObjectDetails
 */
const se_AwsS3ObjectDetails = (input: AwsS3ObjectDetails, context: __SerdeContext): any => {
  return {
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.ETag != null && { ETag: input.ETag }),
    ...(input.LastModified != null && { LastModified: input.LastModified }),
    ...(input.SSEKMSKeyId != null && { SSEKMSKeyId: input.SSEKMSKeyId }),
    ...(input.ServerSideEncryption != null && { ServerSideEncryption: input.ServerSideEncryption }),
    ...(input.VersionId != null && { VersionId: input.VersionId }),
  };
};

/**
 * serializeAws_restJson1AwsSageMakerNotebookInstanceDetails
 */
const se_AwsSageMakerNotebookInstanceDetails = (
  input: AwsSageMakerNotebookInstanceDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.AcceleratorTypes != null && { AcceleratorTypes: se_NonEmptyStringList(input.AcceleratorTypes, context) }),
    ...(input.AdditionalCodeRepositories != null && {
      AdditionalCodeRepositories: se_NonEmptyStringList(input.AdditionalCodeRepositories, context),
    }),
    ...(input.DefaultCodeRepository != null && { DefaultCodeRepository: input.DefaultCodeRepository }),
    ...(input.DirectInternetAccess != null && { DirectInternetAccess: input.DirectInternetAccess }),
    ...(input.FailureReason != null && { FailureReason: input.FailureReason }),
    ...(input.InstanceMetadataServiceConfiguration != null && {
      InstanceMetadataServiceConfiguration: se_AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails(
        input.InstanceMetadataServiceConfiguration,
        context
      ),
    }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
    ...(input.NotebookInstanceArn != null && { NotebookInstanceArn: input.NotebookInstanceArn }),
    ...(input.NotebookInstanceLifecycleConfigName != null && {
      NotebookInstanceLifecycleConfigName: input.NotebookInstanceLifecycleConfigName,
    }),
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
    ...(input.NotebookInstanceStatus != null && { NotebookInstanceStatus: input.NotebookInstanceStatus }),
    ...(input.PlatformIdentifier != null && { PlatformIdentifier: input.PlatformIdentifier }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.RootAccess != null && { RootAccess: input.RootAccess }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_NonEmptyStringList(input.SecurityGroups, context) }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
    ...(input.Url != null && { Url: input.Url }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_restJson1AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails
 */
const se_AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails = (
  input: AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.MinimumInstanceMetadataServiceVersion != null && {
      MinimumInstanceMetadataServiceVersion: input.MinimumInstanceMetadataServiceVersion,
    }),
  };
};

/**
 * serializeAws_restJson1AwsSecretsManagerSecretDetails
 */
const se_AwsSecretsManagerSecretDetails = (input: AwsSecretsManagerSecretDetails, context: __SerdeContext): any => {
  return {
    ...(input.Deleted != null && { Deleted: input.Deleted }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RotationEnabled != null && { RotationEnabled: input.RotationEnabled }),
    ...(input.RotationLambdaArn != null && { RotationLambdaArn: input.RotationLambdaArn }),
    ...(input.RotationOccurredWithinFrequency != null && {
      RotationOccurredWithinFrequency: input.RotationOccurredWithinFrequency,
    }),
    ...(input.RotationRules != null && {
      RotationRules: se_AwsSecretsManagerSecretRotationRules(input.RotationRules, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsSecretsManagerSecretRotationRules
 */
const se_AwsSecretsManagerSecretRotationRules = (
  input: AwsSecretsManagerSecretRotationRules,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutomaticallyAfterDays != null && { AutomaticallyAfterDays: input.AutomaticallyAfterDays }),
  };
};

/**
 * serializeAws_restJson1AwsSecurityFinding
 */
const se_AwsSecurityFinding = (input: AwsSecurityFinding, context: __SerdeContext): any => {
  return {
    ...(input.Action != null && { Action: se_Action(input.Action, context) }),
    ...(input.AwsAccountId != null && { AwsAccountId: input.AwsAccountId }),
    ...(input.CompanyName != null && { CompanyName: input.CompanyName }),
    ...(input.Compliance != null && { Compliance: se_Compliance(input.Compliance, context) }),
    ...(input.Confidence != null && { Confidence: input.Confidence }),
    ...(input.CreatedAt != null && { CreatedAt: input.CreatedAt }),
    ...(input.Criticality != null && { Criticality: input.Criticality }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.FindingProviderFields != null && {
      FindingProviderFields: se_FindingProviderFields(input.FindingProviderFields, context),
    }),
    ...(input.FirstObservedAt != null && { FirstObservedAt: input.FirstObservedAt }),
    ...(input.GeneratorId != null && { GeneratorId: input.GeneratorId }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.LastObservedAt != null && { LastObservedAt: input.LastObservedAt }),
    ...(input.Malware != null && { Malware: se_MalwareList(input.Malware, context) }),
    ...(input.Network != null && { Network: se_Network(input.Network, context) }),
    ...(input.NetworkPath != null && { NetworkPath: se_NetworkPathList(input.NetworkPath, context) }),
    ...(input.Note != null && { Note: se_Note(input.Note, context) }),
    ...(input.PatchSummary != null && { PatchSummary: se_PatchSummary(input.PatchSummary, context) }),
    ...(input.Process != null && { Process: se_ProcessDetails(input.Process, context) }),
    ...(input.ProductArn != null && { ProductArn: input.ProductArn }),
    ...(input.ProductFields != null && { ProductFields: se_FieldMap(input.ProductFields, context) }),
    ...(input.ProductName != null && { ProductName: input.ProductName }),
    ...(input.RecordState != null && { RecordState: input.RecordState }),
    ...(input.Region != null && { Region: input.Region }),
    ...(input.RelatedFindings != null && { RelatedFindings: se_RelatedFindingList(input.RelatedFindings, context) }),
    ...(input.Remediation != null && { Remediation: se_Remediation(input.Remediation, context) }),
    ...(input.Resources != null && { Resources: se_ResourceList(input.Resources, context) }),
    ...(input.Sample != null && { Sample: input.Sample }),
    ...(input.SchemaVersion != null && { SchemaVersion: input.SchemaVersion }),
    ...(input.Severity != null && { Severity: se_Severity(input.Severity, context) }),
    ...(input.SourceUrl != null && { SourceUrl: input.SourceUrl }),
    ...(input.ThreatIntelIndicators != null && {
      ThreatIntelIndicators: se_ThreatIntelIndicatorList(input.ThreatIntelIndicators, context),
    }),
    ...(input.Threats != null && { Threats: se_ThreatList(input.Threats, context) }),
    ...(input.Title != null && { Title: input.Title }),
    ...(input.Types != null && { Types: se_TypeList(input.Types, context) }),
    ...(input.UpdatedAt != null && { UpdatedAt: input.UpdatedAt }),
    ...(input.UserDefinedFields != null && { UserDefinedFields: se_FieldMap(input.UserDefinedFields, context) }),
    ...(input.VerificationState != null && { VerificationState: input.VerificationState }),
    ...(input.Vulnerabilities != null && { Vulnerabilities: se_VulnerabilityList(input.Vulnerabilities, context) }),
    ...(input.Workflow != null && { Workflow: se_Workflow(input.Workflow, context) }),
    ...(input.WorkflowState != null && { WorkflowState: input.WorkflowState }),
  };
};

/**
 * serializeAws_restJson1AwsSecurityFindingFilters
 */
const se_AwsSecurityFindingFilters = (input: AwsSecurityFindingFilters, context: __SerdeContext): any => {
  return {
    ...(input.AwsAccountId != null && { AwsAccountId: se_StringFilterList(input.AwsAccountId, context) }),
    ...(input.CompanyName != null && { CompanyName: se_StringFilterList(input.CompanyName, context) }),
    ...(input.ComplianceAssociatedStandardsId != null && {
      ComplianceAssociatedStandardsId: se_StringFilterList(input.ComplianceAssociatedStandardsId, context),
    }),
    ...(input.ComplianceSecurityControlId != null && {
      ComplianceSecurityControlId: se_StringFilterList(input.ComplianceSecurityControlId, context),
    }),
    ...(input.ComplianceStatus != null && { ComplianceStatus: se_StringFilterList(input.ComplianceStatus, context) }),
    ...(input.Confidence != null && { Confidence: se_NumberFilterList(input.Confidence, context) }),
    ...(input.CreatedAt != null && { CreatedAt: se_DateFilterList(input.CreatedAt, context) }),
    ...(input.Criticality != null && { Criticality: se_NumberFilterList(input.Criticality, context) }),
    ...(input.Description != null && { Description: se_StringFilterList(input.Description, context) }),
    ...(input.FindingProviderFieldsConfidence != null && {
      FindingProviderFieldsConfidence: se_NumberFilterList(input.FindingProviderFieldsConfidence, context),
    }),
    ...(input.FindingProviderFieldsCriticality != null && {
      FindingProviderFieldsCriticality: se_NumberFilterList(input.FindingProviderFieldsCriticality, context),
    }),
    ...(input.FindingProviderFieldsRelatedFindingsId != null && {
      FindingProviderFieldsRelatedFindingsId: se_StringFilterList(
        input.FindingProviderFieldsRelatedFindingsId,
        context
      ),
    }),
    ...(input.FindingProviderFieldsRelatedFindingsProductArn != null && {
      FindingProviderFieldsRelatedFindingsProductArn: se_StringFilterList(
        input.FindingProviderFieldsRelatedFindingsProductArn,
        context
      ),
    }),
    ...(input.FindingProviderFieldsSeverityLabel != null && {
      FindingProviderFieldsSeverityLabel: se_StringFilterList(input.FindingProviderFieldsSeverityLabel, context),
    }),
    ...(input.FindingProviderFieldsSeverityOriginal != null && {
      FindingProviderFieldsSeverityOriginal: se_StringFilterList(input.FindingProviderFieldsSeverityOriginal, context),
    }),
    ...(input.FindingProviderFieldsTypes != null && {
      FindingProviderFieldsTypes: se_StringFilterList(input.FindingProviderFieldsTypes, context),
    }),
    ...(input.FirstObservedAt != null && { FirstObservedAt: se_DateFilterList(input.FirstObservedAt, context) }),
    ...(input.GeneratorId != null && { GeneratorId: se_StringFilterList(input.GeneratorId, context) }),
    ...(input.Id != null && { Id: se_StringFilterList(input.Id, context) }),
    ...(input.Keyword != null && { Keyword: se_KeywordFilterList(input.Keyword, context) }),
    ...(input.LastObservedAt != null && { LastObservedAt: se_DateFilterList(input.LastObservedAt, context) }),
    ...(input.MalwareName != null && { MalwareName: se_StringFilterList(input.MalwareName, context) }),
    ...(input.MalwarePath != null && { MalwarePath: se_StringFilterList(input.MalwarePath, context) }),
    ...(input.MalwareState != null && { MalwareState: se_StringFilterList(input.MalwareState, context) }),
    ...(input.MalwareType != null && { MalwareType: se_StringFilterList(input.MalwareType, context) }),
    ...(input.NetworkDestinationDomain != null && {
      NetworkDestinationDomain: se_StringFilterList(input.NetworkDestinationDomain, context),
    }),
    ...(input.NetworkDestinationIpV4 != null && {
      NetworkDestinationIpV4: se_IpFilterList(input.NetworkDestinationIpV4, context),
    }),
    ...(input.NetworkDestinationIpV6 != null && {
      NetworkDestinationIpV6: se_IpFilterList(input.NetworkDestinationIpV6, context),
    }),
    ...(input.NetworkDestinationPort != null && {
      NetworkDestinationPort: se_NumberFilterList(input.NetworkDestinationPort, context),
    }),
    ...(input.NetworkDirection != null && { NetworkDirection: se_StringFilterList(input.NetworkDirection, context) }),
    ...(input.NetworkProtocol != null && { NetworkProtocol: se_StringFilterList(input.NetworkProtocol, context) }),
    ...(input.NetworkSourceDomain != null && {
      NetworkSourceDomain: se_StringFilterList(input.NetworkSourceDomain, context),
    }),
    ...(input.NetworkSourceIpV4 != null && { NetworkSourceIpV4: se_IpFilterList(input.NetworkSourceIpV4, context) }),
    ...(input.NetworkSourceIpV6 != null && { NetworkSourceIpV6: se_IpFilterList(input.NetworkSourceIpV6, context) }),
    ...(input.NetworkSourceMac != null && { NetworkSourceMac: se_StringFilterList(input.NetworkSourceMac, context) }),
    ...(input.NetworkSourcePort != null && {
      NetworkSourcePort: se_NumberFilterList(input.NetworkSourcePort, context),
    }),
    ...(input.NoteText != null && { NoteText: se_StringFilterList(input.NoteText, context) }),
    ...(input.NoteUpdatedAt != null && { NoteUpdatedAt: se_DateFilterList(input.NoteUpdatedAt, context) }),
    ...(input.NoteUpdatedBy != null && { NoteUpdatedBy: se_StringFilterList(input.NoteUpdatedBy, context) }),
    ...(input.ProcessLaunchedAt != null && { ProcessLaunchedAt: se_DateFilterList(input.ProcessLaunchedAt, context) }),
    ...(input.ProcessName != null && { ProcessName: se_StringFilterList(input.ProcessName, context) }),
    ...(input.ProcessParentPid != null && { ProcessParentPid: se_NumberFilterList(input.ProcessParentPid, context) }),
    ...(input.ProcessPath != null && { ProcessPath: se_StringFilterList(input.ProcessPath, context) }),
    ...(input.ProcessPid != null && { ProcessPid: se_NumberFilterList(input.ProcessPid, context) }),
    ...(input.ProcessTerminatedAt != null && {
      ProcessTerminatedAt: se_DateFilterList(input.ProcessTerminatedAt, context),
    }),
    ...(input.ProductArn != null && { ProductArn: se_StringFilterList(input.ProductArn, context) }),
    ...(input.ProductFields != null && { ProductFields: se_MapFilterList(input.ProductFields, context) }),
    ...(input.ProductName != null && { ProductName: se_StringFilterList(input.ProductName, context) }),
    ...(input.RecommendationText != null && {
      RecommendationText: se_StringFilterList(input.RecommendationText, context),
    }),
    ...(input.RecordState != null && { RecordState: se_StringFilterList(input.RecordState, context) }),
    ...(input.Region != null && { Region: se_StringFilterList(input.Region, context) }),
    ...(input.RelatedFindingsId != null && {
      RelatedFindingsId: se_StringFilterList(input.RelatedFindingsId, context),
    }),
    ...(input.RelatedFindingsProductArn != null && {
      RelatedFindingsProductArn: se_StringFilterList(input.RelatedFindingsProductArn, context),
    }),
    ...(input.ResourceAwsEc2InstanceIamInstanceProfileArn != null && {
      ResourceAwsEc2InstanceIamInstanceProfileArn: se_StringFilterList(
        input.ResourceAwsEc2InstanceIamInstanceProfileArn,
        context
      ),
    }),
    ...(input.ResourceAwsEc2InstanceImageId != null && {
      ResourceAwsEc2InstanceImageId: se_StringFilterList(input.ResourceAwsEc2InstanceImageId, context),
    }),
    ...(input.ResourceAwsEc2InstanceIpV4Addresses != null && {
      ResourceAwsEc2InstanceIpV4Addresses: se_IpFilterList(input.ResourceAwsEc2InstanceIpV4Addresses, context),
    }),
    ...(input.ResourceAwsEc2InstanceIpV6Addresses != null && {
      ResourceAwsEc2InstanceIpV6Addresses: se_IpFilterList(input.ResourceAwsEc2InstanceIpV6Addresses, context),
    }),
    ...(input.ResourceAwsEc2InstanceKeyName != null && {
      ResourceAwsEc2InstanceKeyName: se_StringFilterList(input.ResourceAwsEc2InstanceKeyName, context),
    }),
    ...(input.ResourceAwsEc2InstanceLaunchedAt != null && {
      ResourceAwsEc2InstanceLaunchedAt: se_DateFilterList(input.ResourceAwsEc2InstanceLaunchedAt, context),
    }),
    ...(input.ResourceAwsEc2InstanceSubnetId != null && {
      ResourceAwsEc2InstanceSubnetId: se_StringFilterList(input.ResourceAwsEc2InstanceSubnetId, context),
    }),
    ...(input.ResourceAwsEc2InstanceType != null && {
      ResourceAwsEc2InstanceType: se_StringFilterList(input.ResourceAwsEc2InstanceType, context),
    }),
    ...(input.ResourceAwsEc2InstanceVpcId != null && {
      ResourceAwsEc2InstanceVpcId: se_StringFilterList(input.ResourceAwsEc2InstanceVpcId, context),
    }),
    ...(input.ResourceAwsIamAccessKeyCreatedAt != null && {
      ResourceAwsIamAccessKeyCreatedAt: se_DateFilterList(input.ResourceAwsIamAccessKeyCreatedAt, context),
    }),
    ...(input.ResourceAwsIamAccessKeyPrincipalName != null && {
      ResourceAwsIamAccessKeyPrincipalName: se_StringFilterList(input.ResourceAwsIamAccessKeyPrincipalName, context),
    }),
    ...(input.ResourceAwsIamAccessKeyStatus != null && {
      ResourceAwsIamAccessKeyStatus: se_StringFilterList(input.ResourceAwsIamAccessKeyStatus, context),
    }),
    ...(input.ResourceAwsIamAccessKeyUserName != null && {
      ResourceAwsIamAccessKeyUserName: se_StringFilterList(input.ResourceAwsIamAccessKeyUserName, context),
    }),
    ...(input.ResourceAwsIamUserUserName != null && {
      ResourceAwsIamUserUserName: se_StringFilterList(input.ResourceAwsIamUserUserName, context),
    }),
    ...(input.ResourceAwsS3BucketOwnerId != null && {
      ResourceAwsS3BucketOwnerId: se_StringFilterList(input.ResourceAwsS3BucketOwnerId, context),
    }),
    ...(input.ResourceAwsS3BucketOwnerName != null && {
      ResourceAwsS3BucketOwnerName: se_StringFilterList(input.ResourceAwsS3BucketOwnerName, context),
    }),
    ...(input.ResourceContainerImageId != null && {
      ResourceContainerImageId: se_StringFilterList(input.ResourceContainerImageId, context),
    }),
    ...(input.ResourceContainerImageName != null && {
      ResourceContainerImageName: se_StringFilterList(input.ResourceContainerImageName, context),
    }),
    ...(input.ResourceContainerLaunchedAt != null && {
      ResourceContainerLaunchedAt: se_DateFilterList(input.ResourceContainerLaunchedAt, context),
    }),
    ...(input.ResourceContainerName != null && {
      ResourceContainerName: se_StringFilterList(input.ResourceContainerName, context),
    }),
    ...(input.ResourceDetailsOther != null && {
      ResourceDetailsOther: se_MapFilterList(input.ResourceDetailsOther, context),
    }),
    ...(input.ResourceId != null && { ResourceId: se_StringFilterList(input.ResourceId, context) }),
    ...(input.ResourcePartition != null && {
      ResourcePartition: se_StringFilterList(input.ResourcePartition, context),
    }),
    ...(input.ResourceRegion != null && { ResourceRegion: se_StringFilterList(input.ResourceRegion, context) }),
    ...(input.ResourceTags != null && { ResourceTags: se_MapFilterList(input.ResourceTags, context) }),
    ...(input.ResourceType != null && { ResourceType: se_StringFilterList(input.ResourceType, context) }),
    ...(input.Sample != null && { Sample: se_BooleanFilterList(input.Sample, context) }),
    ...(input.SeverityLabel != null && { SeverityLabel: se_StringFilterList(input.SeverityLabel, context) }),
    ...(input.SeverityNormalized != null && {
      SeverityNormalized: se_NumberFilterList(input.SeverityNormalized, context),
    }),
    ...(input.SeverityProduct != null && { SeverityProduct: se_NumberFilterList(input.SeverityProduct, context) }),
    ...(input.SourceUrl != null && { SourceUrl: se_StringFilterList(input.SourceUrl, context) }),
    ...(input.ThreatIntelIndicatorCategory != null && {
      ThreatIntelIndicatorCategory: se_StringFilterList(input.ThreatIntelIndicatorCategory, context),
    }),
    ...(input.ThreatIntelIndicatorLastObservedAt != null && {
      ThreatIntelIndicatorLastObservedAt: se_DateFilterList(input.ThreatIntelIndicatorLastObservedAt, context),
    }),
    ...(input.ThreatIntelIndicatorSource != null && {
      ThreatIntelIndicatorSource: se_StringFilterList(input.ThreatIntelIndicatorSource, context),
    }),
    ...(input.ThreatIntelIndicatorSourceUrl != null && {
      ThreatIntelIndicatorSourceUrl: se_StringFilterList(input.ThreatIntelIndicatorSourceUrl, context),
    }),
    ...(input.ThreatIntelIndicatorType != null && {
      ThreatIntelIndicatorType: se_StringFilterList(input.ThreatIntelIndicatorType, context),
    }),
    ...(input.ThreatIntelIndicatorValue != null && {
      ThreatIntelIndicatorValue: se_StringFilterList(input.ThreatIntelIndicatorValue, context),
    }),
    ...(input.Title != null && { Title: se_StringFilterList(input.Title, context) }),
    ...(input.Type != null && { Type: se_StringFilterList(input.Type, context) }),
    ...(input.UpdatedAt != null && { UpdatedAt: se_DateFilterList(input.UpdatedAt, context) }),
    ...(input.UserDefinedFields != null && { UserDefinedFields: se_MapFilterList(input.UserDefinedFields, context) }),
    ...(input.VerificationState != null && {
      VerificationState: se_StringFilterList(input.VerificationState, context),
    }),
    ...(input.WorkflowState != null && { WorkflowState: se_StringFilterList(input.WorkflowState, context) }),
    ...(input.WorkflowStatus != null && { WorkflowStatus: se_StringFilterList(input.WorkflowStatus, context) }),
  };
};

/**
 * serializeAws_restJson1AwsSecurityFindingIdentifier
 */
const se_AwsSecurityFindingIdentifier = (input: AwsSecurityFindingIdentifier, context: __SerdeContext): any => {
  return {
    ...(input.Id != null && { Id: input.Id }),
    ...(input.ProductArn != null && { ProductArn: input.ProductArn }),
  };
};

/**
 * serializeAws_restJson1AwsSecurityFindingIdentifierList
 */
const se_AwsSecurityFindingIdentifierList = (input: AwsSecurityFindingIdentifier[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsSecurityFindingIdentifier(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsSnsTopicDetails
 */
const se_AwsSnsTopicDetails = (input: AwsSnsTopicDetails, context: __SerdeContext): any => {
  return {
    ...(input.ApplicationSuccessFeedbackRoleArn != null && {
      ApplicationSuccessFeedbackRoleArn: input.ApplicationSuccessFeedbackRoleArn,
    }),
    ...(input.FirehoseFailureFeedbackRoleArn != null && {
      FirehoseFailureFeedbackRoleArn: input.FirehoseFailureFeedbackRoleArn,
    }),
    ...(input.FirehoseSuccessFeedbackRoleArn != null && {
      FirehoseSuccessFeedbackRoleArn: input.FirehoseSuccessFeedbackRoleArn,
    }),
    ...(input.HttpFailureFeedbackRoleArn != null && { HttpFailureFeedbackRoleArn: input.HttpFailureFeedbackRoleArn }),
    ...(input.HttpSuccessFeedbackRoleArn != null && { HttpSuccessFeedbackRoleArn: input.HttpSuccessFeedbackRoleArn }),
    ...(input.KmsMasterKeyId != null && { KmsMasterKeyId: input.KmsMasterKeyId }),
    ...(input.Owner != null && { Owner: input.Owner }),
    ...(input.SqsFailureFeedbackRoleArn != null && { SqsFailureFeedbackRoleArn: input.SqsFailureFeedbackRoleArn }),
    ...(input.SqsSuccessFeedbackRoleArn != null && { SqsSuccessFeedbackRoleArn: input.SqsSuccessFeedbackRoleArn }),
    ...(input.Subscription != null && { Subscription: se_AwsSnsTopicSubscriptionList(input.Subscription, context) }),
    ...(input.TopicName != null && { TopicName: input.TopicName }),
  };
};

/**
 * serializeAws_restJson1AwsSnsTopicSubscription
 */
const se_AwsSnsTopicSubscription = (input: AwsSnsTopicSubscription, context: __SerdeContext): any => {
  return {
    ...(input.Endpoint != null && { Endpoint: input.Endpoint }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
  };
};

/**
 * serializeAws_restJson1AwsSnsTopicSubscriptionList
 */
const se_AwsSnsTopicSubscriptionList = (input: AwsSnsTopicSubscription[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsSnsTopicSubscription(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsSqsQueueDetails
 */
const se_AwsSqsQueueDetails = (input: AwsSqsQueueDetails, context: __SerdeContext): any => {
  return {
    ...(input.DeadLetterTargetArn != null && { DeadLetterTargetArn: input.DeadLetterTargetArn }),
    ...(input.KmsDataKeyReusePeriodSeconds != null && {
      KmsDataKeyReusePeriodSeconds: input.KmsDataKeyReusePeriodSeconds,
    }),
    ...(input.KmsMasterKeyId != null && { KmsMasterKeyId: input.KmsMasterKeyId }),
    ...(input.QueueName != null && { QueueName: input.QueueName }),
  };
};

/**
 * serializeAws_restJson1AwsSsmComplianceSummary
 */
const se_AwsSsmComplianceSummary = (input: AwsSsmComplianceSummary, context: __SerdeContext): any => {
  return {
    ...(input.ComplianceType != null && { ComplianceType: input.ComplianceType }),
    ...(input.CompliantCriticalCount != null && { CompliantCriticalCount: input.CompliantCriticalCount }),
    ...(input.CompliantHighCount != null && { CompliantHighCount: input.CompliantHighCount }),
    ...(input.CompliantInformationalCount != null && {
      CompliantInformationalCount: input.CompliantInformationalCount,
    }),
    ...(input.CompliantLowCount != null && { CompliantLowCount: input.CompliantLowCount }),
    ...(input.CompliantMediumCount != null && { CompliantMediumCount: input.CompliantMediumCount }),
    ...(input.CompliantUnspecifiedCount != null && { CompliantUnspecifiedCount: input.CompliantUnspecifiedCount }),
    ...(input.ExecutionType != null && { ExecutionType: input.ExecutionType }),
    ...(input.NonCompliantCriticalCount != null && { NonCompliantCriticalCount: input.NonCompliantCriticalCount }),
    ...(input.NonCompliantHighCount != null && { NonCompliantHighCount: input.NonCompliantHighCount }),
    ...(input.NonCompliantInformationalCount != null && {
      NonCompliantInformationalCount: input.NonCompliantInformationalCount,
    }),
    ...(input.NonCompliantLowCount != null && { NonCompliantLowCount: input.NonCompliantLowCount }),
    ...(input.NonCompliantMediumCount != null && { NonCompliantMediumCount: input.NonCompliantMediumCount }),
    ...(input.NonCompliantUnspecifiedCount != null && {
      NonCompliantUnspecifiedCount: input.NonCompliantUnspecifiedCount,
    }),
    ...(input.OverallSeverity != null && { OverallSeverity: input.OverallSeverity }),
    ...(input.PatchBaselineId != null && { PatchBaselineId: input.PatchBaselineId }),
    ...(input.PatchGroup != null && { PatchGroup: input.PatchGroup }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1AwsSsmPatch
 */
const se_AwsSsmPatch = (input: AwsSsmPatch, context: __SerdeContext): any => {
  return {
    ...(input.ComplianceSummary != null && {
      ComplianceSummary: se_AwsSsmComplianceSummary(input.ComplianceSummary, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsSsmPatchComplianceDetails
 */
const se_AwsSsmPatchComplianceDetails = (input: AwsSsmPatchComplianceDetails, context: __SerdeContext): any => {
  return {
    ...(input.Patch != null && { Patch: se_AwsSsmPatch(input.Patch, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafRateBasedRuleDetails
 */
const se_AwsWafRateBasedRuleDetails = (input: AwsWafRateBasedRuleDetails, context: __SerdeContext): any => {
  return {
    ...(input.MatchPredicates != null && {
      MatchPredicates: se_AwsWafRateBasedRuleMatchPredicateList(input.MatchPredicates, context),
    }),
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RateKey != null && { RateKey: input.RateKey }),
    ...(input.RateLimit != null && { RateLimit: input.RateLimit }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
  };
};

/**
 * serializeAws_restJson1AwsWafRateBasedRuleMatchPredicate
 */
const se_AwsWafRateBasedRuleMatchPredicate = (
  input: AwsWafRateBasedRuleMatchPredicate,
  context: __SerdeContext
): any => {
  return {
    ...(input.DataId != null && { DataId: input.DataId }),
    ...(input.Negated != null && { Negated: input.Negated }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRateBasedRuleMatchPredicateList
 */
const se_AwsWafRateBasedRuleMatchPredicateList = (
  input: AwsWafRateBasedRuleMatchPredicate[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRateBasedRuleMatchPredicate(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRegionalRateBasedRuleDetails
 */
const se_AwsWafRegionalRateBasedRuleDetails = (
  input: AwsWafRegionalRateBasedRuleDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.MatchPredicates != null && {
      MatchPredicates: se_AwsWafRegionalRateBasedRuleMatchPredicateList(input.MatchPredicates, context),
    }),
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RateKey != null && { RateKey: input.RateKey }),
    ...(input.RateLimit != null && { RateLimit: input.RateLimit }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRateBasedRuleMatchPredicate
 */
const se_AwsWafRegionalRateBasedRuleMatchPredicate = (
  input: AwsWafRegionalRateBasedRuleMatchPredicate,
  context: __SerdeContext
): any => {
  return {
    ...(input.DataId != null && { DataId: input.DataId }),
    ...(input.Negated != null && { Negated: input.Negated }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRateBasedRuleMatchPredicateList
 */
const se_AwsWafRegionalRateBasedRuleMatchPredicateList = (
  input: AwsWafRegionalRateBasedRuleMatchPredicate[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRegionalRateBasedRuleMatchPredicate(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRegionalRuleDetails
 */
const se_AwsWafRegionalRuleDetails = (input: AwsWafRegionalRuleDetails, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.PredicateList != null && {
      PredicateList: se_AwsWafRegionalRulePredicateList(input.PredicateList, context),
    }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRuleGroupDetails
 */
const se_AwsWafRegionalRuleGroupDetails = (input: AwsWafRegionalRuleGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RuleGroupId != null && { RuleGroupId: input.RuleGroupId }),
    ...(input.Rules != null && { Rules: se_AwsWafRegionalRuleGroupRulesList(input.Rules, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRuleGroupRulesActionDetails
 */
const se_AwsWafRegionalRuleGroupRulesActionDetails = (
  input: AwsWafRegionalRuleGroupRulesActionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRuleGroupRulesDetails
 */
const se_AwsWafRegionalRuleGroupRulesDetails = (
  input: AwsWafRegionalRuleGroupRulesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Action != null && { Action: se_AwsWafRegionalRuleGroupRulesActionDetails(input.Action, context) }),
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalRuleGroupRulesList
 */
const se_AwsWafRegionalRuleGroupRulesList = (
  input: AwsWafRegionalRuleGroupRulesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRegionalRuleGroupRulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRegionalRulePredicateList
 */
const se_AwsWafRegionalRulePredicateList = (
  input: AwsWafRegionalRulePredicateListDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRegionalRulePredicateListDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRegionalRulePredicateListDetails
 */
const se_AwsWafRegionalRulePredicateListDetails = (
  input: AwsWafRegionalRulePredicateListDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.DataId != null && { DataId: input.DataId }),
    ...(input.Negated != null && { Negated: input.Negated }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalWebAclDetails
 */
const se_AwsWafRegionalWebAclDetails = (input: AwsWafRegionalWebAclDetails, context: __SerdeContext): any => {
  return {
    ...(input.DefaultAction != null && { DefaultAction: input.DefaultAction }),
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RulesList != null && { RulesList: se_AwsWafRegionalWebAclRulesList(input.RulesList, context) }),
    ...(input.WebAclId != null && { WebAclId: input.WebAclId }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalWebAclRulesList
 */
const se_AwsWafRegionalWebAclRulesList = (
  input: AwsWafRegionalWebAclRulesListDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRegionalWebAclRulesListDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRegionalWebAclRulesListActionDetails
 */
const se_AwsWafRegionalWebAclRulesListActionDetails = (
  input: AwsWafRegionalWebAclRulesListActionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalWebAclRulesListDetails
 */
const se_AwsWafRegionalWebAclRulesListDetails = (
  input: AwsWafRegionalWebAclRulesListDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Action != null && { Action: se_AwsWafRegionalWebAclRulesListActionDetails(input.Action, context) }),
    ...(input.OverrideAction != null && {
      OverrideAction: se_AwsWafRegionalWebAclRulesListOverrideActionDetails(input.OverrideAction, context),
    }),
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRegionalWebAclRulesListOverrideActionDetails
 */
const se_AwsWafRegionalWebAclRulesListOverrideActionDetails = (
  input: AwsWafRegionalWebAclRulesListOverrideActionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRuleDetails
 */
const se_AwsWafRuleDetails = (input: AwsWafRuleDetails, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.PredicateList != null && { PredicateList: se_AwsWafRulePredicateList(input.PredicateList, context) }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
  };
};

/**
 * serializeAws_restJson1AwsWafRuleGroupDetails
 */
const se_AwsWafRuleGroupDetails = (input: AwsWafRuleGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RuleGroupId != null && { RuleGroupId: input.RuleGroupId }),
    ...(input.Rules != null && { Rules: se_AwsWafRuleGroupRulesList(input.Rules, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafRuleGroupRulesActionDetails
 */
const se_AwsWafRuleGroupRulesActionDetails = (
  input: AwsWafRuleGroupRulesActionDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRuleGroupRulesDetails
 */
const se_AwsWafRuleGroupRulesDetails = (input: AwsWafRuleGroupRulesDetails, context: __SerdeContext): any => {
  return {
    ...(input.Action != null && { Action: se_AwsWafRuleGroupRulesActionDetails(input.Action, context) }),
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafRuleGroupRulesList
 */
const se_AwsWafRuleGroupRulesList = (input: AwsWafRuleGroupRulesDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRuleGroupRulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRulePredicateList
 */
const se_AwsWafRulePredicateList = (input: AwsWafRulePredicateListDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafRulePredicateListDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafRulePredicateListDetails
 */
const se_AwsWafRulePredicateListDetails = (input: AwsWafRulePredicateListDetails, context: __SerdeContext): any => {
  return {
    ...(input.DataId != null && { DataId: input.DataId }),
    ...(input.Negated != null && { Negated: input.Negated }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2ActionAllowDetails
 */
const se_AwsWafv2ActionAllowDetails = (input: AwsWafv2ActionAllowDetails, context: __SerdeContext): any => {
  return {
    ...(input.CustomRequestHandling != null && {
      CustomRequestHandling: se_AwsWafv2CustomRequestHandlingDetails(input.CustomRequestHandling, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2ActionBlockDetails
 */
const se_AwsWafv2ActionBlockDetails = (input: AwsWafv2ActionBlockDetails, context: __SerdeContext): any => {
  return {
    ...(input.CustomResponse != null && {
      CustomResponse: se_AwsWafv2CustomResponseDetails(input.CustomResponse, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2CustomHttpHeader
 */
const se_AwsWafv2CustomHttpHeader = (input: AwsWafv2CustomHttpHeader, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2CustomRequestHandlingDetails
 */
const se_AwsWafv2CustomRequestHandlingDetails = (
  input: AwsWafv2CustomRequestHandlingDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.InsertHeaders != null && { InsertHeaders: se_AwsWafv2InsertHeadersList(input.InsertHeaders, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2CustomResponseDetails
 */
const se_AwsWafv2CustomResponseDetails = (input: AwsWafv2CustomResponseDetails, context: __SerdeContext): any => {
  return {
    ...(input.CustomResponseBodyKey != null && { CustomResponseBodyKey: input.CustomResponseBodyKey }),
    ...(input.ResponseCode != null && { ResponseCode: input.ResponseCode }),
    ...(input.ResponseHeaders != null && {
      ResponseHeaders: se_AwsWafv2InsertHeadersList(input.ResponseHeaders, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2InsertHeadersList
 */
const se_AwsWafv2InsertHeadersList = (input: AwsWafv2CustomHttpHeader[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafv2CustomHttpHeader(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafv2RuleGroupDetails
 */
const se_AwsWafv2RuleGroupDetails = (input: AwsWafv2RuleGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.Capacity != null && { Capacity: input.Capacity }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Rules != null && { Rules: se_AwsWafv2RulesList(input.Rules, context) }),
    ...(input.Scope != null && { Scope: input.Scope }),
    ...(input.VisibilityConfig != null && {
      VisibilityConfig: se_AwsWafv2VisibilityConfigDetails(input.VisibilityConfig, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2RulesActionCaptchaDetails
 */
const se_AwsWafv2RulesActionCaptchaDetails = (
  input: AwsWafv2RulesActionCaptchaDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CustomRequestHandling != null && {
      CustomRequestHandling: se_AwsWafv2CustomRequestHandlingDetails(input.CustomRequestHandling, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2RulesActionCountDetails
 */
const se_AwsWafv2RulesActionCountDetails = (input: AwsWafv2RulesActionCountDetails, context: __SerdeContext): any => {
  return {
    ...(input.CustomRequestHandling != null && {
      CustomRequestHandling: se_AwsWafv2CustomRequestHandlingDetails(input.CustomRequestHandling, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2RulesActionDetails
 */
const se_AwsWafv2RulesActionDetails = (input: AwsWafv2RulesActionDetails, context: __SerdeContext): any => {
  return {
    ...(input.Allow != null && { Allow: se_AwsWafv2ActionAllowDetails(input.Allow, context) }),
    ...(input.Block != null && { Block: se_AwsWafv2ActionBlockDetails(input.Block, context) }),
    ...(input.Captcha != null && { Captcha: se_AwsWafv2RulesActionCaptchaDetails(input.Captcha, context) }),
    ...(input.Count != null && { Count: se_AwsWafv2RulesActionCountDetails(input.Count, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2RulesDetails
 */
const se_AwsWafv2RulesDetails = (input: AwsWafv2RulesDetails, context: __SerdeContext): any => {
  return {
    ...(input.Action != null && { Action: se_AwsWafv2RulesActionDetails(input.Action, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.OverrideAction != null && { OverrideAction: input.OverrideAction }),
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.VisibilityConfig != null && {
      VisibilityConfig: se_AwsWafv2VisibilityConfigDetails(input.VisibilityConfig, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2RulesList
 */
const se_AwsWafv2RulesList = (input: AwsWafv2RulesDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafv2RulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsWafv2VisibilityConfigDetails
 */
const se_AwsWafv2VisibilityConfigDetails = (input: AwsWafv2VisibilityConfigDetails, context: __SerdeContext): any => {
  return {
    ...(input.CloudWatchMetricsEnabled != null && { CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled }),
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.SampledRequestsEnabled != null && { SampledRequestsEnabled: input.SampledRequestsEnabled }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2WebAclActionDetails
 */
const se_AwsWafv2WebAclActionDetails = (input: AwsWafv2WebAclActionDetails, context: __SerdeContext): any => {
  return {
    ...(input.Allow != null && { Allow: se_AwsWafv2ActionAllowDetails(input.Allow, context) }),
    ...(input.Block != null && { Block: se_AwsWafv2ActionBlockDetails(input.Block, context) }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2WebAclCaptchaConfigDetails
 */
const se_AwsWafv2WebAclCaptchaConfigDetails = (
  input: AwsWafv2WebAclCaptchaConfigDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ImmunityTimeProperty != null && {
      ImmunityTimeProperty: se_AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails(
        input.ImmunityTimeProperty,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails
 */
const se_AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails = (
  input: AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ImmunityTime != null && { ImmunityTime: input.ImmunityTime }),
  };
};

/**
 * serializeAws_restJson1AwsWafv2WebAclDetails
 */
const se_AwsWafv2WebAclDetails = (input: AwsWafv2WebAclDetails, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.Capacity != null && { Capacity: input.Capacity }),
    ...(input.CaptchaConfig != null && {
      CaptchaConfig: se_AwsWafv2WebAclCaptchaConfigDetails(input.CaptchaConfig, context),
    }),
    ...(input.DefaultAction != null && { DefaultAction: se_AwsWafv2WebAclActionDetails(input.DefaultAction, context) }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.ManagedbyFirewallManager != null && { ManagedbyFirewallManager: input.ManagedbyFirewallManager }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Rules != null && { Rules: se_AwsWafv2RulesList(input.Rules, context) }),
    ...(input.VisibilityConfig != null && {
      VisibilityConfig: se_AwsWafv2VisibilityConfigDetails(input.VisibilityConfig, context),
    }),
  };
};

/**
 * serializeAws_restJson1AwsWafWebAclDetails
 */
const se_AwsWafWebAclDetails = (input: AwsWafWebAclDetails, context: __SerdeContext): any => {
  return {
    ...(input.DefaultAction != null && { DefaultAction: input.DefaultAction }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Rules != null && { Rules: se_AwsWafWebAclRuleList(input.Rules, context) }),
    ...(input.WebAclId != null && { WebAclId: input.WebAclId }),
  };
};

/**
 * serializeAws_restJson1AwsWafWebAclRule
 */
const se_AwsWafWebAclRule = (input: AwsWafWebAclRule, context: __SerdeContext): any => {
  return {
    ...(input.Action != null && { Action: se_WafAction(input.Action, context) }),
    ...(input.ExcludedRules != null && { ExcludedRules: se_WafExcludedRuleList(input.ExcludedRules, context) }),
    ...(input.OverrideAction != null && { OverrideAction: se_WafOverrideAction(input.OverrideAction, context) }),
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.RuleId != null && { RuleId: input.RuleId }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1AwsWafWebAclRuleList
 */
const se_AwsWafWebAclRuleList = (input: AwsWafWebAclRule[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsWafWebAclRule(entry, context);
    });
};

/**
 * serializeAws_restJson1AwsXrayEncryptionConfigDetails
 */
const se_AwsXrayEncryptionConfigDetails = (input: AwsXrayEncryptionConfigDetails, context: __SerdeContext): any => {
  return {
    ...(input.KeyId != null && { KeyId: input.KeyId }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1BatchImportFindingsRequestFindingList
 */
const se_BatchImportFindingsRequestFindingList = (input: AwsSecurityFinding[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AwsSecurityFinding(entry, context);
    });
};

/**
 * serializeAws_restJson1BooleanFilter
 */
const se_BooleanFilter = (input: BooleanFilter, context: __SerdeContext): any => {
  return {
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1BooleanFilterList
 */
const se_BooleanFilterList = (input: BooleanFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_BooleanFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1Cell
 */
const se_Cell = (input: Cell, context: __SerdeContext): any => {
  return {
    ...(input.CellReference != null && { CellReference: input.CellReference }),
    ...(input.Column != null && { Column: input.Column }),
    ...(input.ColumnName != null && { ColumnName: input.ColumnName }),
    ...(input.Row != null && { Row: input.Row }),
  };
};

/**
 * serializeAws_restJson1Cells
 */
const se_Cells = (input: Cell[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Cell(entry, context);
    });
};

/**
 * serializeAws_restJson1CidrBlockAssociation
 */
const se_CidrBlockAssociation = (input: CidrBlockAssociation, context: __SerdeContext): any => {
  return {
    ...(input.AssociationId != null && { AssociationId: input.AssociationId }),
    ...(input.CidrBlock != null && { CidrBlock: input.CidrBlock }),
    ...(input.CidrBlockState != null && { CidrBlockState: input.CidrBlockState }),
  };
};

/**
 * serializeAws_restJson1CidrBlockAssociationList
 */
const se_CidrBlockAssociationList = (input: CidrBlockAssociation[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CidrBlockAssociation(entry, context);
    });
};

/**
 * serializeAws_restJson1City
 */
const se_City = (input: City, context: __SerdeContext): any => {
  return {
    ...(input.CityName != null && { CityName: input.CityName }),
  };
};

/**
 * serializeAws_restJson1ClassificationResult
 */
const se_ClassificationResult = (input: ClassificationResult, context: __SerdeContext): any => {
  return {
    ...(input.AdditionalOccurrences != null && { AdditionalOccurrences: input.AdditionalOccurrences }),
    ...(input.CustomDataIdentifiers != null && {
      CustomDataIdentifiers: se_CustomDataIdentifiersResult(input.CustomDataIdentifiers, context),
    }),
    ...(input.MimeType != null && { MimeType: input.MimeType }),
    ...(input.SensitiveData != null && { SensitiveData: se_SensitiveDataResultList(input.SensitiveData, context) }),
    ...(input.SizeClassified != null && { SizeClassified: input.SizeClassified }),
    ...(input.Status != null && { Status: se_ClassificationStatus(input.Status, context) }),
  };
};

/**
 * serializeAws_restJson1ClassificationStatus
 */
const se_ClassificationStatus = (input: ClassificationStatus, context: __SerdeContext): any => {
  return {
    ...(input.Code != null && { Code: input.Code }),
    ...(input.Reason != null && { Reason: input.Reason }),
  };
};

/**
 * serializeAws_restJson1Compliance
 */
const se_Compliance = (input: Compliance, context: __SerdeContext): any => {
  return {
    ...(input.AssociatedStandards != null && {
      AssociatedStandards: se_AssociatedStandardsList(input.AssociatedStandards, context),
    }),
    ...(input.RelatedRequirements != null && {
      RelatedRequirements: se_RelatedRequirementsList(input.RelatedRequirements, context),
    }),
    ...(input.SecurityControlId != null && { SecurityControlId: input.SecurityControlId }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StatusReasons != null && { StatusReasons: se_StatusReasonsList(input.StatusReasons, context) }),
  };
};

/**
 * serializeAws_restJson1ContainerDetails
 */
const se_ContainerDetails = (input: ContainerDetails, context: __SerdeContext): any => {
  return {
    ...(input.ContainerRuntime != null && { ContainerRuntime: input.ContainerRuntime }),
    ...(input.ImageId != null && { ImageId: input.ImageId }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.LaunchedAt != null && { LaunchedAt: input.LaunchedAt }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Privileged != null && { Privileged: input.Privileged }),
    ...(input.VolumeMounts != null && { VolumeMounts: se_VolumeMountList(input.VolumeMounts, context) }),
  };
};

/**
 * serializeAws_restJson1Country
 */
const se_Country = (input: Country, context: __SerdeContext): any => {
  return {
    ...(input.CountryCode != null && { CountryCode: input.CountryCode }),
    ...(input.CountryName != null && { CountryName: input.CountryName }),
  };
};

/**
 * serializeAws_restJson1CustomDataIdentifiersDetections
 */
const se_CustomDataIdentifiersDetections = (input: CustomDataIdentifiersDetections, context: __SerdeContext): any => {
  return {
    ...(input.Arn != null && { Arn: input.Arn }),
    ...(input.Count != null && { Count: input.Count }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Occurrences != null && { Occurrences: se_Occurrences(input.Occurrences, context) }),
  };
};

/**
 * serializeAws_restJson1CustomDataIdentifiersDetectionsList
 */
const se_CustomDataIdentifiersDetectionsList = (
  input: CustomDataIdentifiersDetections[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CustomDataIdentifiersDetections(entry, context);
    });
};

/**
 * serializeAws_restJson1CustomDataIdentifiersResult
 */
const se_CustomDataIdentifiersResult = (input: CustomDataIdentifiersResult, context: __SerdeContext): any => {
  return {
    ...(input.Detections != null && { Detections: se_CustomDataIdentifiersDetectionsList(input.Detections, context) }),
    ...(input.TotalCount != null && { TotalCount: input.TotalCount }),
  };
};

/**
 * serializeAws_restJson1Cvss
 */
const se_Cvss = (input: Cvss, context: __SerdeContext): any => {
  return {
    ...(input.Adjustments != null && { Adjustments: se_AdjustmentList(input.Adjustments, context) }),
    ...(input.BaseScore != null && { BaseScore: __serializeFloat(input.BaseScore) }),
    ...(input.BaseVector != null && { BaseVector: input.BaseVector }),
    ...(input.Source != null && { Source: input.Source }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1CvssList
 */
const se_CvssList = (input: Cvss[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Cvss(entry, context);
    });
};

/**
 * serializeAws_restJson1DataClassificationDetails
 */
const se_DataClassificationDetails = (input: DataClassificationDetails, context: __SerdeContext): any => {
  return {
    ...(input.DetailedResultsLocation != null && { DetailedResultsLocation: input.DetailedResultsLocation }),
    ...(input.Result != null && { Result: se_ClassificationResult(input.Result, context) }),
  };
};

/**
 * serializeAws_restJson1DateFilter
 */
const se_DateFilter = (input: DateFilter, context: __SerdeContext): any => {
  return {
    ...(input.DateRange != null && { DateRange: se_DateRange(input.DateRange, context) }),
    ...(input.End != null && { End: input.End }),
    ...(input.Start != null && { Start: input.Start }),
  };
};

/**
 * serializeAws_restJson1DateFilterList
 */
const se_DateFilterList = (input: DateFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_DateFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1DateRange
 */
const se_DateRange = (input: DateRange, context: __SerdeContext): any => {
  return {
    ...(input.Unit != null && { Unit: input.Unit }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1DnsRequestAction
 */
const se_DnsRequestAction = (input: DnsRequestAction, context: __SerdeContext): any => {
  return {
    ...(input.Blocked != null && { Blocked: input.Blocked }),
    ...(input.Domain != null && { Domain: input.Domain }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
  };
};

/**
 * serializeAws_restJson1FieldMap
 */
const se_FieldMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_restJson1FilePathList
 */
const se_FilePathList = (input: FilePaths[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FilePaths(entry, context);
    });
};

/**
 * serializeAws_restJson1FilePaths
 */
const se_FilePaths = (input: FilePaths, context: __SerdeContext): any => {
  return {
    ...(input.FileName != null && { FileName: input.FileName }),
    ...(input.FilePath != null && { FilePath: input.FilePath }),
    ...(input.Hash != null && { Hash: input.Hash }),
    ...(input.ResourceId != null && { ResourceId: input.ResourceId }),
  };
};

/**
 * serializeAws_restJson1FindingProviderFields
 */
const se_FindingProviderFields = (input: FindingProviderFields, context: __SerdeContext): any => {
  return {
    ...(input.Confidence != null && { Confidence: input.Confidence }),
    ...(input.Criticality != null && { Criticality: input.Criticality }),
    ...(input.RelatedFindings != null && { RelatedFindings: se_RelatedFindingList(input.RelatedFindings, context) }),
    ...(input.Severity != null && { Severity: se_FindingProviderSeverity(input.Severity, context) }),
    ...(input.Types != null && { Types: se_TypeList(input.Types, context) }),
  };
};

/**
 * serializeAws_restJson1FindingProviderSeverity
 */
const se_FindingProviderSeverity = (input: FindingProviderSeverity, context: __SerdeContext): any => {
  return {
    ...(input.Label != null && { Label: input.Label }),
    ...(input.Original != null && { Original: input.Original }),
  };
};

/**
 * serializeAws_restJson1FirewallPolicyDetails
 */
const se_FirewallPolicyDetails = (input: FirewallPolicyDetails, context: __SerdeContext): any => {
  return {
    ...(input.StatefulRuleGroupReferences != null && {
      StatefulRuleGroupReferences: se_FirewallPolicyStatefulRuleGroupReferencesList(
        input.StatefulRuleGroupReferences,
        context
      ),
    }),
    ...(input.StatelessCustomActions != null && {
      StatelessCustomActions: se_FirewallPolicyStatelessCustomActionsList(input.StatelessCustomActions, context),
    }),
    ...(input.StatelessDefaultActions != null && {
      StatelessDefaultActions: se_NonEmptyStringList(input.StatelessDefaultActions, context),
    }),
    ...(input.StatelessFragmentDefaultActions != null && {
      StatelessFragmentDefaultActions: se_NonEmptyStringList(input.StatelessFragmentDefaultActions, context),
    }),
    ...(input.StatelessRuleGroupReferences != null && {
      StatelessRuleGroupReferences: se_FirewallPolicyStatelessRuleGroupReferencesList(
        input.StatelessRuleGroupReferences,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1FirewallPolicyStatefulRuleGroupReferencesDetails
 */
const se_FirewallPolicyStatefulRuleGroupReferencesDetails = (
  input: FirewallPolicyStatefulRuleGroupReferencesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
  };
};

/**
 * serializeAws_restJson1FirewallPolicyStatefulRuleGroupReferencesList
 */
const se_FirewallPolicyStatefulRuleGroupReferencesList = (
  input: FirewallPolicyStatefulRuleGroupReferencesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FirewallPolicyStatefulRuleGroupReferencesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1FirewallPolicyStatelessCustomActionsDetails
 */
const se_FirewallPolicyStatelessCustomActionsDetails = (
  input: FirewallPolicyStatelessCustomActionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ActionDefinition != null && {
      ActionDefinition: se_StatelessCustomActionDefinition(input.ActionDefinition, context),
    }),
    ...(input.ActionName != null && { ActionName: input.ActionName }),
  };
};

/**
 * serializeAws_restJson1FirewallPolicyStatelessCustomActionsList
 */
const se_FirewallPolicyStatelessCustomActionsList = (
  input: FirewallPolicyStatelessCustomActionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FirewallPolicyStatelessCustomActionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1FirewallPolicyStatelessRuleGroupReferencesDetails
 */
const se_FirewallPolicyStatelessRuleGroupReferencesDetails = (
  input: FirewallPolicyStatelessRuleGroupReferencesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
  };
};

/**
 * serializeAws_restJson1FirewallPolicyStatelessRuleGroupReferencesList
 */
const se_FirewallPolicyStatelessRuleGroupReferencesList = (
  input: FirewallPolicyStatelessRuleGroupReferencesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FirewallPolicyStatelessRuleGroupReferencesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1GeoLocation
 */
const se_GeoLocation = (input: GeoLocation, context: __SerdeContext): any => {
  return {
    ...(input.Lat != null && { Lat: __serializeFloat(input.Lat) }),
    ...(input.Lon != null && { Lon: __serializeFloat(input.Lon) }),
  };
};

/**
 * serializeAws_restJson1IcmpTypeCode
 */
const se_IcmpTypeCode = (input: IcmpTypeCode, context: __SerdeContext): any => {
  return {
    ...(input.Code != null && { Code: input.Code }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1IntegerList
 */
const se_IntegerList = (input: number[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1IpFilter
 */
const se_IpFilter = (input: IpFilter, context: __SerdeContext): any => {
  return {
    ...(input.Cidr != null && { Cidr: input.Cidr }),
  };
};

/**
 * serializeAws_restJson1IpFilterList
 */
const se_IpFilterList = (input: IpFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_IpFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1IpOrganizationDetails
 */
const se_IpOrganizationDetails = (input: IpOrganizationDetails, context: __SerdeContext): any => {
  return {
    ...(input.Asn != null && { Asn: input.Asn }),
    ...(input.AsnOrg != null && { AsnOrg: input.AsnOrg }),
    ...(input.Isp != null && { Isp: input.Isp }),
    ...(input.Org != null && { Org: input.Org }),
  };
};

/**
 * serializeAws_restJson1Ipv6CidrBlockAssociation
 */
const se_Ipv6CidrBlockAssociation = (input: Ipv6CidrBlockAssociation, context: __SerdeContext): any => {
  return {
    ...(input.AssociationId != null && { AssociationId: input.AssociationId }),
    ...(input.CidrBlockState != null && { CidrBlockState: input.CidrBlockState }),
    ...(input.Ipv6CidrBlock != null && { Ipv6CidrBlock: input.Ipv6CidrBlock }),
  };
};

/**
 * serializeAws_restJson1Ipv6CidrBlockAssociationList
 */
const se_Ipv6CidrBlockAssociationList = (input: Ipv6CidrBlockAssociation[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Ipv6CidrBlockAssociation(entry, context);
    });
};

/**
 * serializeAws_restJson1KeywordFilter
 */
const se_KeywordFilter = (input: KeywordFilter, context: __SerdeContext): any => {
  return {
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1KeywordFilterList
 */
const se_KeywordFilterList = (input: KeywordFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_KeywordFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1LoadBalancerState
 */
const se_LoadBalancerState = (input: LoadBalancerState, context: __SerdeContext): any => {
  return {
    ...(input.Code != null && { Code: input.Code }),
    ...(input.Reason != null && { Reason: input.Reason }),
  };
};

/**
 * serializeAws_restJson1Malware
 */
const se_Malware = (input: Malware, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.State != null && { State: input.State }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1MalwareList
 */
const se_MalwareList = (input: Malware[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Malware(entry, context);
    });
};

/**
 * serializeAws_restJson1MapFilter
 */
const se_MapFilter = (input: MapFilter, context: __SerdeContext): any => {
  return {
    ...(input.Comparison != null && { Comparison: input.Comparison }),
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1MapFilterList
 */
const se_MapFilterList = (input: MapFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_MapFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1Network
 */
const se_Network = (input: Network, context: __SerdeContext): any => {
  return {
    ...(input.DestinationDomain != null && { DestinationDomain: input.DestinationDomain }),
    ...(input.DestinationIpV4 != null && { DestinationIpV4: input.DestinationIpV4 }),
    ...(input.DestinationIpV6 != null && { DestinationIpV6: input.DestinationIpV6 }),
    ...(input.DestinationPort != null && { DestinationPort: input.DestinationPort }),
    ...(input.Direction != null && { Direction: input.Direction }),
    ...(input.OpenPortRange != null && { OpenPortRange: se_PortRange(input.OpenPortRange, context) }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.SourceDomain != null && { SourceDomain: input.SourceDomain }),
    ...(input.SourceIpV4 != null && { SourceIpV4: input.SourceIpV4 }),
    ...(input.SourceIpV6 != null && { SourceIpV6: input.SourceIpV6 }),
    ...(input.SourceMac != null && { SourceMac: input.SourceMac }),
    ...(input.SourcePort != null && { SourcePort: input.SourcePort }),
  };
};

/**
 * serializeAws_restJson1NetworkConnectionAction
 */
const se_NetworkConnectionAction = (input: NetworkConnectionAction, context: __SerdeContext): any => {
  return {
    ...(input.Blocked != null && { Blocked: input.Blocked }),
    ...(input.ConnectionDirection != null && { ConnectionDirection: input.ConnectionDirection }),
    ...(input.LocalPortDetails != null && {
      LocalPortDetails: se_ActionLocalPortDetails(input.LocalPortDetails, context),
    }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.RemoteIpDetails != null && { RemoteIpDetails: se_ActionRemoteIpDetails(input.RemoteIpDetails, context) }),
    ...(input.RemotePortDetails != null && {
      RemotePortDetails: se_ActionRemotePortDetails(input.RemotePortDetails, context),
    }),
  };
};

/**
 * serializeAws_restJson1NetworkHeader
 */
const se_NetworkHeader = (input: NetworkHeader, context: __SerdeContext): any => {
  return {
    ...(input.Destination != null && { Destination: se_NetworkPathComponentDetails(input.Destination, context) }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.Source != null && { Source: se_NetworkPathComponentDetails(input.Source, context) }),
  };
};

/**
 * serializeAws_restJson1NetworkPathComponent
 */
const se_NetworkPathComponent = (input: NetworkPathComponent, context: __SerdeContext): any => {
  return {
    ...(input.ComponentId != null && { ComponentId: input.ComponentId }),
    ...(input.ComponentType != null && { ComponentType: input.ComponentType }),
    ...(input.Egress != null && { Egress: se_NetworkHeader(input.Egress, context) }),
    ...(input.Ingress != null && { Ingress: se_NetworkHeader(input.Ingress, context) }),
  };
};

/**
 * serializeAws_restJson1NetworkPathComponentDetails
 */
const se_NetworkPathComponentDetails = (input: NetworkPathComponentDetails, context: __SerdeContext): any => {
  return {
    ...(input.Address != null && { Address: se_StringList(input.Address, context) }),
    ...(input.PortRanges != null && { PortRanges: se_PortRangeList(input.PortRanges, context) }),
  };
};

/**
 * serializeAws_restJson1NetworkPathList
 */
const se_NetworkPathList = (input: NetworkPathComponent[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_NetworkPathComponent(entry, context);
    });
};

/**
 * serializeAws_restJson1NonEmptyStringList
 */
const se_NonEmptyStringList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1Note
 */
const se_Note = (input: Note, context: __SerdeContext): any => {
  return {
    ...(input.Text != null && { Text: input.Text }),
    ...(input.UpdatedAt != null && { UpdatedAt: input.UpdatedAt }),
    ...(input.UpdatedBy != null && { UpdatedBy: input.UpdatedBy }),
  };
};

/**
 * serializeAws_restJson1NoteUpdate
 */
const se_NoteUpdate = (input: NoteUpdate, context: __SerdeContext): any => {
  return {
    ...(input.Text != null && { Text: input.Text }),
    ...(input.UpdatedBy != null && { UpdatedBy: input.UpdatedBy }),
  };
};

/**
 * serializeAws_restJson1NumberFilter
 */
const se_NumberFilter = (input: NumberFilter, context: __SerdeContext): any => {
  return {
    ...(input.Eq != null && { Eq: __serializeFloat(input.Eq) }),
    ...(input.Gte != null && { Gte: __serializeFloat(input.Gte) }),
    ...(input.Lte != null && { Lte: __serializeFloat(input.Lte) }),
  };
};

/**
 * serializeAws_restJson1NumberFilterList
 */
const se_NumberFilterList = (input: NumberFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_NumberFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1Occurrences
 */
const se_Occurrences = (input: Occurrences, context: __SerdeContext): any => {
  return {
    ...(input.Cells != null && { Cells: se_Cells(input.Cells, context) }),
    ...(input.LineRanges != null && { LineRanges: se_Ranges(input.LineRanges, context) }),
    ...(input.OffsetRanges != null && { OffsetRanges: se_Ranges(input.OffsetRanges, context) }),
    ...(input.Pages != null && { Pages: se_Pages(input.Pages, context) }),
    ...(input.Records != null && { Records: se_Records(input.Records, context) }),
  };
};

/**
 * serializeAws_restJson1Page
 */
const se_Page = (input: Page, context: __SerdeContext): any => {
  return {
    ...(input.LineRange != null && { LineRange: se_Range(input.LineRange, context) }),
    ...(input.OffsetRange != null && { OffsetRange: se_Range(input.OffsetRange, context) }),
    ...(input.PageNumber != null && { PageNumber: input.PageNumber }),
  };
};

/**
 * serializeAws_restJson1Pages
 */
const se_Pages = (input: Page[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Page(entry, context);
    });
};

/**
 * serializeAws_restJson1PatchSummary
 */
const se_PatchSummary = (input: PatchSummary, context: __SerdeContext): any => {
  return {
    ...(input.FailedCount != null && { FailedCount: input.FailedCount }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.InstalledCount != null && { InstalledCount: input.InstalledCount }),
    ...(input.InstalledOtherCount != null && { InstalledOtherCount: input.InstalledOtherCount }),
    ...(input.InstalledPendingReboot != null && { InstalledPendingReboot: input.InstalledPendingReboot }),
    ...(input.InstalledRejectedCount != null && { InstalledRejectedCount: input.InstalledRejectedCount }),
    ...(input.MissingCount != null && { MissingCount: input.MissingCount }),
    ...(input.Operation != null && { Operation: input.Operation }),
    ...(input.OperationEndTime != null && { OperationEndTime: input.OperationEndTime }),
    ...(input.OperationStartTime != null && { OperationStartTime: input.OperationStartTime }),
    ...(input.RebootOption != null && { RebootOption: input.RebootOption }),
  };
};

/**
 * serializeAws_restJson1PortProbeAction
 */
const se_PortProbeAction = (input: PortProbeAction, context: __SerdeContext): any => {
  return {
    ...(input.Blocked != null && { Blocked: input.Blocked }),
    ...(input.PortProbeDetails != null && {
      PortProbeDetails: se_PortProbeDetailList(input.PortProbeDetails, context),
    }),
  };
};

/**
 * serializeAws_restJson1PortProbeDetail
 */
const se_PortProbeDetail = (input: PortProbeDetail, context: __SerdeContext): any => {
  return {
    ...(input.LocalIpDetails != null && { LocalIpDetails: se_ActionLocalIpDetails(input.LocalIpDetails, context) }),
    ...(input.LocalPortDetails != null && {
      LocalPortDetails: se_ActionLocalPortDetails(input.LocalPortDetails, context),
    }),
    ...(input.RemoteIpDetails != null && { RemoteIpDetails: se_ActionRemoteIpDetails(input.RemoteIpDetails, context) }),
  };
};

/**
 * serializeAws_restJson1PortProbeDetailList
 */
const se_PortProbeDetailList = (input: PortProbeDetail[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_PortProbeDetail(entry, context);
    });
};

/**
 * serializeAws_restJson1PortRange
 */
const se_PortRange = (input: PortRange, context: __SerdeContext): any => {
  return {
    ...(input.Begin != null && { Begin: input.Begin }),
    ...(input.End != null && { End: input.End }),
  };
};

/**
 * serializeAws_restJson1PortRangeFromTo
 */
const se_PortRangeFromTo = (input: PortRangeFromTo, context: __SerdeContext): any => {
  return {
    ...(input.From != null && { From: input.From }),
    ...(input.To != null && { To: input.To }),
  };
};

/**
 * serializeAws_restJson1PortRangeList
 */
const se_PortRangeList = (input: PortRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_PortRange(entry, context);
    });
};

/**
 * serializeAws_restJson1ProcessDetails
 */
const se_ProcessDetails = (input: ProcessDetails, context: __SerdeContext): any => {
  return {
    ...(input.LaunchedAt != null && { LaunchedAt: input.LaunchedAt }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ParentPid != null && { ParentPid: input.ParentPid }),
    ...(input.Path != null && { Path: input.Path }),
    ...(input.Pid != null && { Pid: input.Pid }),
    ...(input.TerminatedAt != null && { TerminatedAt: input.TerminatedAt }),
  };
};

/**
 * serializeAws_restJson1PropagatingVgwSetDetails
 */
const se_PropagatingVgwSetDetails = (input: PropagatingVgwSetDetails, context: __SerdeContext): any => {
  return {
    ...(input.GatewayId != null && { GatewayId: input.GatewayId }),
  };
};

/**
 * serializeAws_restJson1PropagatingVgwSetList
 */
const se_PropagatingVgwSetList = (input: PropagatingVgwSetDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_PropagatingVgwSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1Range
 */
const se_Range = (input: Range, context: __SerdeContext): any => {
  return {
    ...(input.End != null && { End: input.End }),
    ...(input.Start != null && { Start: input.Start }),
    ...(input.StartColumn != null && { StartColumn: input.StartColumn }),
  };
};

/**
 * serializeAws_restJson1Ranges
 */
const se_Ranges = (input: Range[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Range(entry, context);
    });
};

/**
 * serializeAws_restJson1Recommendation
 */
const se_Recommendation = (input: Recommendation, context: __SerdeContext): any => {
  return {
    ...(input.Text != null && { Text: input.Text }),
    ...(input.Url != null && { Url: input.Url }),
  };
};

/**
 * serializeAws_restJson1_Record
 */
const se__Record = (input: _Record, context: __SerdeContext): any => {
  return {
    ...(input.JsonPath != null && { JsonPath: input.JsonPath }),
    ...(input.RecordIndex != null && { RecordIndex: input.RecordIndex }),
  };
};

/**
 * serializeAws_restJson1Records
 */
const se_Records = (input: _Record[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se__Record(entry, context);
    });
};

/**
 * serializeAws_restJson1RelatedFinding
 */
const se_RelatedFinding = (input: RelatedFinding, context: __SerdeContext): any => {
  return {
    ...(input.Id != null && { Id: input.Id }),
    ...(input.ProductArn != null && { ProductArn: input.ProductArn }),
  };
};

/**
 * serializeAws_restJson1RelatedFindingList
 */
const se_RelatedFindingList = (input: RelatedFinding[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RelatedFinding(entry, context);
    });
};

/**
 * serializeAws_restJson1RelatedRequirementsList
 */
const se_RelatedRequirementsList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1Remediation
 */
const se_Remediation = (input: Remediation, context: __SerdeContext): any => {
  return {
    ...(input.Recommendation != null && { Recommendation: se_Recommendation(input.Recommendation, context) }),
  };
};

/**
 * serializeAws_restJson1Resource
 */
const se_Resource = (input: Resource, context: __SerdeContext): any => {
  return {
    ...(input.DataClassification != null && {
      DataClassification: se_DataClassificationDetails(input.DataClassification, context),
    }),
    ...(input.Details != null && { Details: se_ResourceDetails(input.Details, context) }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.Partition != null && { Partition: input.Partition }),
    ...(input.Region != null && { Region: input.Region }),
    ...(input.ResourceRole != null && { ResourceRole: input.ResourceRole }),
    ...(input.Tags != null && { Tags: se_FieldMap(input.Tags, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1ResourceDetails
 */
const se_ResourceDetails = (input: ResourceDetails, context: __SerdeContext): any => {
  return {
    ...(input.AwsApiGatewayRestApi != null && {
      AwsApiGatewayRestApi: se_AwsApiGatewayRestApiDetails(input.AwsApiGatewayRestApi, context),
    }),
    ...(input.AwsApiGatewayStage != null && {
      AwsApiGatewayStage: se_AwsApiGatewayStageDetails(input.AwsApiGatewayStage, context),
    }),
    ...(input.AwsApiGatewayV2Api != null && {
      AwsApiGatewayV2Api: se_AwsApiGatewayV2ApiDetails(input.AwsApiGatewayV2Api, context),
    }),
    ...(input.AwsApiGatewayV2Stage != null && {
      AwsApiGatewayV2Stage: se_AwsApiGatewayV2StageDetails(input.AwsApiGatewayV2Stage, context),
    }),
    ...(input.AwsAutoScalingAutoScalingGroup != null && {
      AwsAutoScalingAutoScalingGroup: se_AwsAutoScalingAutoScalingGroupDetails(
        input.AwsAutoScalingAutoScalingGroup,
        context
      ),
    }),
    ...(input.AwsAutoScalingLaunchConfiguration != null && {
      AwsAutoScalingLaunchConfiguration: se_AwsAutoScalingLaunchConfigurationDetails(
        input.AwsAutoScalingLaunchConfiguration,
        context
      ),
    }),
    ...(input.AwsBackupBackupPlan != null && {
      AwsBackupBackupPlan: se_AwsBackupBackupPlanDetails(input.AwsBackupBackupPlan, context),
    }),
    ...(input.AwsBackupBackupVault != null && {
      AwsBackupBackupVault: se_AwsBackupBackupVaultDetails(input.AwsBackupBackupVault, context),
    }),
    ...(input.AwsBackupRecoveryPoint != null && {
      AwsBackupRecoveryPoint: se_AwsBackupRecoveryPointDetails(input.AwsBackupRecoveryPoint, context),
    }),
    ...(input.AwsCertificateManagerCertificate != null && {
      AwsCertificateManagerCertificate: se_AwsCertificateManagerCertificateDetails(
        input.AwsCertificateManagerCertificate,
        context
      ),
    }),
    ...(input.AwsCloudFormationStack != null && {
      AwsCloudFormationStack: se_AwsCloudFormationStackDetails(input.AwsCloudFormationStack, context),
    }),
    ...(input.AwsCloudFrontDistribution != null && {
      AwsCloudFrontDistribution: se_AwsCloudFrontDistributionDetails(input.AwsCloudFrontDistribution, context),
    }),
    ...(input.AwsCloudTrailTrail != null && {
      AwsCloudTrailTrail: se_AwsCloudTrailTrailDetails(input.AwsCloudTrailTrail, context),
    }),
    ...(input.AwsCloudWatchAlarm != null && {
      AwsCloudWatchAlarm: se_AwsCloudWatchAlarmDetails(input.AwsCloudWatchAlarm, context),
    }),
    ...(input.AwsCodeBuildProject != null && {
      AwsCodeBuildProject: se_AwsCodeBuildProjectDetails(input.AwsCodeBuildProject, context),
    }),
    ...(input.AwsDynamoDbTable != null && {
      AwsDynamoDbTable: se_AwsDynamoDbTableDetails(input.AwsDynamoDbTable, context),
    }),
    ...(input.AwsEc2Eip != null && { AwsEc2Eip: se_AwsEc2EipDetails(input.AwsEc2Eip, context) }),
    ...(input.AwsEc2Instance != null && { AwsEc2Instance: se_AwsEc2InstanceDetails(input.AwsEc2Instance, context) }),
    ...(input.AwsEc2LaunchTemplate != null && {
      AwsEc2LaunchTemplate: se_AwsEc2LaunchTemplateDetails(input.AwsEc2LaunchTemplate, context),
    }),
    ...(input.AwsEc2NetworkAcl != null && {
      AwsEc2NetworkAcl: se_AwsEc2NetworkAclDetails(input.AwsEc2NetworkAcl, context),
    }),
    ...(input.AwsEc2NetworkInterface != null && {
      AwsEc2NetworkInterface: se_AwsEc2NetworkInterfaceDetails(input.AwsEc2NetworkInterface, context),
    }),
    ...(input.AwsEc2RouteTable != null && {
      AwsEc2RouteTable: se_AwsEc2RouteTableDetails(input.AwsEc2RouteTable, context),
    }),
    ...(input.AwsEc2SecurityGroup != null && {
      AwsEc2SecurityGroup: se_AwsEc2SecurityGroupDetails(input.AwsEc2SecurityGroup, context),
    }),
    ...(input.AwsEc2Subnet != null && { AwsEc2Subnet: se_AwsEc2SubnetDetails(input.AwsEc2Subnet, context) }),
    ...(input.AwsEc2TransitGateway != null && {
      AwsEc2TransitGateway: se_AwsEc2TransitGatewayDetails(input.AwsEc2TransitGateway, context),
    }),
    ...(input.AwsEc2Volume != null && { AwsEc2Volume: se_AwsEc2VolumeDetails(input.AwsEc2Volume, context) }),
    ...(input.AwsEc2Vpc != null && { AwsEc2Vpc: se_AwsEc2VpcDetails(input.AwsEc2Vpc, context) }),
    ...(input.AwsEc2VpcEndpointService != null && {
      AwsEc2VpcEndpointService: se_AwsEc2VpcEndpointServiceDetails(input.AwsEc2VpcEndpointService, context),
    }),
    ...(input.AwsEc2VpcPeeringConnection != null && {
      AwsEc2VpcPeeringConnection: se_AwsEc2VpcPeeringConnectionDetails(input.AwsEc2VpcPeeringConnection, context),
    }),
    ...(input.AwsEc2VpnConnection != null && {
      AwsEc2VpnConnection: se_AwsEc2VpnConnectionDetails(input.AwsEc2VpnConnection, context),
    }),
    ...(input.AwsEcrContainerImage != null && {
      AwsEcrContainerImage: se_AwsEcrContainerImageDetails(input.AwsEcrContainerImage, context),
    }),
    ...(input.AwsEcrRepository != null && {
      AwsEcrRepository: se_AwsEcrRepositoryDetails(input.AwsEcrRepository, context),
    }),
    ...(input.AwsEcsCluster != null && { AwsEcsCluster: se_AwsEcsClusterDetails(input.AwsEcsCluster, context) }),
    ...(input.AwsEcsContainer != null && {
      AwsEcsContainer: se_AwsEcsContainerDetails(input.AwsEcsContainer, context),
    }),
    ...(input.AwsEcsService != null && { AwsEcsService: se_AwsEcsServiceDetails(input.AwsEcsService, context) }),
    ...(input.AwsEcsTask != null && { AwsEcsTask: se_AwsEcsTaskDetails(input.AwsEcsTask, context) }),
    ...(input.AwsEcsTaskDefinition != null && {
      AwsEcsTaskDefinition: se_AwsEcsTaskDefinitionDetails(input.AwsEcsTaskDefinition, context),
    }),
    ...(input.AwsEfsAccessPoint != null && {
      AwsEfsAccessPoint: se_AwsEfsAccessPointDetails(input.AwsEfsAccessPoint, context),
    }),
    ...(input.AwsEksCluster != null && { AwsEksCluster: se_AwsEksClusterDetails(input.AwsEksCluster, context) }),
    ...(input.AwsElasticBeanstalkEnvironment != null && {
      AwsElasticBeanstalkEnvironment: se_AwsElasticBeanstalkEnvironmentDetails(
        input.AwsElasticBeanstalkEnvironment,
        context
      ),
    }),
    ...(input.AwsElasticsearchDomain != null && {
      AwsElasticsearchDomain: se_AwsElasticsearchDomainDetails(input.AwsElasticsearchDomain, context),
    }),
    ...(input.AwsElbLoadBalancer != null && {
      AwsElbLoadBalancer: se_AwsElbLoadBalancerDetails(input.AwsElbLoadBalancer, context),
    }),
    ...(input.AwsElbv2LoadBalancer != null && {
      AwsElbv2LoadBalancer: se_AwsElbv2LoadBalancerDetails(input.AwsElbv2LoadBalancer, context),
    }),
    ...(input.AwsIamAccessKey != null && {
      AwsIamAccessKey: se_AwsIamAccessKeyDetails(input.AwsIamAccessKey, context),
    }),
    ...(input.AwsIamGroup != null && { AwsIamGroup: se_AwsIamGroupDetails(input.AwsIamGroup, context) }),
    ...(input.AwsIamPolicy != null && { AwsIamPolicy: se_AwsIamPolicyDetails(input.AwsIamPolicy, context) }),
    ...(input.AwsIamRole != null && { AwsIamRole: se_AwsIamRoleDetails(input.AwsIamRole, context) }),
    ...(input.AwsIamUser != null && { AwsIamUser: se_AwsIamUserDetails(input.AwsIamUser, context) }),
    ...(input.AwsKinesisStream != null && {
      AwsKinesisStream: se_AwsKinesisStreamDetails(input.AwsKinesisStream, context),
    }),
    ...(input.AwsKmsKey != null && { AwsKmsKey: se_AwsKmsKeyDetails(input.AwsKmsKey, context) }),
    ...(input.AwsLambdaFunction != null && {
      AwsLambdaFunction: se_AwsLambdaFunctionDetails(input.AwsLambdaFunction, context),
    }),
    ...(input.AwsLambdaLayerVersion != null && {
      AwsLambdaLayerVersion: se_AwsLambdaLayerVersionDetails(input.AwsLambdaLayerVersion, context),
    }),
    ...(input.AwsNetworkFirewallFirewall != null && {
      AwsNetworkFirewallFirewall: se_AwsNetworkFirewallFirewallDetails(input.AwsNetworkFirewallFirewall, context),
    }),
    ...(input.AwsNetworkFirewallFirewallPolicy != null && {
      AwsNetworkFirewallFirewallPolicy: se_AwsNetworkFirewallFirewallPolicyDetails(
        input.AwsNetworkFirewallFirewallPolicy,
        context
      ),
    }),
    ...(input.AwsNetworkFirewallRuleGroup != null && {
      AwsNetworkFirewallRuleGroup: se_AwsNetworkFirewallRuleGroupDetails(input.AwsNetworkFirewallRuleGroup, context),
    }),
    ...(input.AwsOpenSearchServiceDomain != null && {
      AwsOpenSearchServiceDomain: se_AwsOpenSearchServiceDomainDetails(input.AwsOpenSearchServiceDomain, context),
    }),
    ...(input.AwsRdsDbCluster != null && {
      AwsRdsDbCluster: se_AwsRdsDbClusterDetails(input.AwsRdsDbCluster, context),
    }),
    ...(input.AwsRdsDbClusterSnapshot != null && {
      AwsRdsDbClusterSnapshot: se_AwsRdsDbClusterSnapshotDetails(input.AwsRdsDbClusterSnapshot, context),
    }),
    ...(input.AwsRdsDbInstance != null && {
      AwsRdsDbInstance: se_AwsRdsDbInstanceDetails(input.AwsRdsDbInstance, context),
    }),
    ...(input.AwsRdsDbSecurityGroup != null && {
      AwsRdsDbSecurityGroup: se_AwsRdsDbSecurityGroupDetails(input.AwsRdsDbSecurityGroup, context),
    }),
    ...(input.AwsRdsDbSnapshot != null && {
      AwsRdsDbSnapshot: se_AwsRdsDbSnapshotDetails(input.AwsRdsDbSnapshot, context),
    }),
    ...(input.AwsRdsEventSubscription != null && {
      AwsRdsEventSubscription: se_AwsRdsEventSubscriptionDetails(input.AwsRdsEventSubscription, context),
    }),
    ...(input.AwsRedshiftCluster != null && {
      AwsRedshiftCluster: se_AwsRedshiftClusterDetails(input.AwsRedshiftCluster, context),
    }),
    ...(input.AwsS3AccountPublicAccessBlock != null && {
      AwsS3AccountPublicAccessBlock: se_AwsS3AccountPublicAccessBlockDetails(
        input.AwsS3AccountPublicAccessBlock,
        context
      ),
    }),
    ...(input.AwsS3Bucket != null && { AwsS3Bucket: se_AwsS3BucketDetails(input.AwsS3Bucket, context) }),
    ...(input.AwsS3Object != null && { AwsS3Object: se_AwsS3ObjectDetails(input.AwsS3Object, context) }),
    ...(input.AwsSageMakerNotebookInstance != null && {
      AwsSageMakerNotebookInstance: se_AwsSageMakerNotebookInstanceDetails(input.AwsSageMakerNotebookInstance, context),
    }),
    ...(input.AwsSecretsManagerSecret != null && {
      AwsSecretsManagerSecret: se_AwsSecretsManagerSecretDetails(input.AwsSecretsManagerSecret, context),
    }),
    ...(input.AwsSnsTopic != null && { AwsSnsTopic: se_AwsSnsTopicDetails(input.AwsSnsTopic, context) }),
    ...(input.AwsSqsQueue != null && { AwsSqsQueue: se_AwsSqsQueueDetails(input.AwsSqsQueue, context) }),
    ...(input.AwsSsmPatchCompliance != null && {
      AwsSsmPatchCompliance: se_AwsSsmPatchComplianceDetails(input.AwsSsmPatchCompliance, context),
    }),
    ...(input.AwsWafRateBasedRule != null && {
      AwsWafRateBasedRule: se_AwsWafRateBasedRuleDetails(input.AwsWafRateBasedRule, context),
    }),
    ...(input.AwsWafRegionalRateBasedRule != null && {
      AwsWafRegionalRateBasedRule: se_AwsWafRegionalRateBasedRuleDetails(input.AwsWafRegionalRateBasedRule, context),
    }),
    ...(input.AwsWafRegionalRule != null && {
      AwsWafRegionalRule: se_AwsWafRegionalRuleDetails(input.AwsWafRegionalRule, context),
    }),
    ...(input.AwsWafRegionalRuleGroup != null && {
      AwsWafRegionalRuleGroup: se_AwsWafRegionalRuleGroupDetails(input.AwsWafRegionalRuleGroup, context),
    }),
    ...(input.AwsWafRegionalWebAcl != null && {
      AwsWafRegionalWebAcl: se_AwsWafRegionalWebAclDetails(input.AwsWafRegionalWebAcl, context),
    }),
    ...(input.AwsWafRule != null && { AwsWafRule: se_AwsWafRuleDetails(input.AwsWafRule, context) }),
    ...(input.AwsWafRuleGroup != null && {
      AwsWafRuleGroup: se_AwsWafRuleGroupDetails(input.AwsWafRuleGroup, context),
    }),
    ...(input.AwsWafWebAcl != null && { AwsWafWebAcl: se_AwsWafWebAclDetails(input.AwsWafWebAcl, context) }),
    ...(input.AwsWafv2RuleGroup != null && {
      AwsWafv2RuleGroup: se_AwsWafv2RuleGroupDetails(input.AwsWafv2RuleGroup, context),
    }),
    ...(input.AwsWafv2WebAcl != null && { AwsWafv2WebAcl: se_AwsWafv2WebAclDetails(input.AwsWafv2WebAcl, context) }),
    ...(input.AwsXrayEncryptionConfig != null && {
      AwsXrayEncryptionConfig: se_AwsXrayEncryptionConfigDetails(input.AwsXrayEncryptionConfig, context),
    }),
    ...(input.Container != null && { Container: se_ContainerDetails(input.Container, context) }),
    ...(input.Other != null && { Other: se_FieldMap(input.Other, context) }),
  };
};

/**
 * serializeAws_restJson1ResourceList
 */
const se_ResourceList = (input: Resource[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Resource(entry, context);
    });
};

/**
 * serializeAws_restJson1RouteSetDetails
 */
const se_RouteSetDetails = (input: RouteSetDetails, context: __SerdeContext): any => {
  return {
    ...(input.CarrierGatewayId != null && { CarrierGatewayId: input.CarrierGatewayId }),
    ...(input.CoreNetworkArn != null && { CoreNetworkArn: input.CoreNetworkArn }),
    ...(input.DestinationCidrBlock != null && { DestinationCidrBlock: input.DestinationCidrBlock }),
    ...(input.DestinationIpv6CidrBlock != null && { DestinationIpv6CidrBlock: input.DestinationIpv6CidrBlock }),
    ...(input.DestinationPrefixListId != null && { DestinationPrefixListId: input.DestinationPrefixListId }),
    ...(input.EgressOnlyInternetGatewayId != null && {
      EgressOnlyInternetGatewayId: input.EgressOnlyInternetGatewayId,
    }),
    ...(input.GatewayId != null && { GatewayId: input.GatewayId }),
    ...(input.InstanceId != null && { InstanceId: input.InstanceId }),
    ...(input.InstanceOwnerId != null && { InstanceOwnerId: input.InstanceOwnerId }),
    ...(input.LocalGatewayId != null && { LocalGatewayId: input.LocalGatewayId }),
    ...(input.NatGatewayId != null && { NatGatewayId: input.NatGatewayId }),
    ...(input.NetworkInterfaceId != null && { NetworkInterfaceId: input.NetworkInterfaceId }),
    ...(input.Origin != null && { Origin: input.Origin }),
    ...(input.State != null && { State: input.State }),
    ...(input.TransitGatewayId != null && { TransitGatewayId: input.TransitGatewayId }),
    ...(input.VpcPeeringConnectionId != null && { VpcPeeringConnectionId: input.VpcPeeringConnectionId }),
  };
};

/**
 * serializeAws_restJson1RouteSetList
 */
const se_RouteSetList = (input: RouteSetDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RouteSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupDetails
 */
const se_RuleGroupDetails = (input: RuleGroupDetails, context: __SerdeContext): any => {
  return {
    ...(input.RuleVariables != null && { RuleVariables: se_RuleGroupVariables(input.RuleVariables, context) }),
    ...(input.RulesSource != null && { RulesSource: se_RuleGroupSource(input.RulesSource, context) }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSource
 */
const se_RuleGroupSource = (input: RuleGroupSource, context: __SerdeContext): any => {
  return {
    ...(input.RulesSourceList != null && {
      RulesSourceList: se_RuleGroupSourceListDetails(input.RulesSourceList, context),
    }),
    ...(input.RulesString != null && { RulesString: input.RulesString }),
    ...(input.StatefulRules != null && {
      StatefulRules: se_RuleGroupSourceStatefulRulesList(input.StatefulRules, context),
    }),
    ...(input.StatelessRulesAndCustomActions != null && {
      StatelessRulesAndCustomActions: se_RuleGroupSourceStatelessRulesAndCustomActionsDetails(
        input.StatelessRulesAndCustomActions,
        context
      ),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceCustomActionsDetails
 */
const se_RuleGroupSourceCustomActionsDetails = (
  input: RuleGroupSourceCustomActionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ActionDefinition != null && {
      ActionDefinition: se_StatelessCustomActionDefinition(input.ActionDefinition, context),
    }),
    ...(input.ActionName != null && { ActionName: input.ActionName }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceCustomActionsList
 */
const se_RuleGroupSourceCustomActionsList = (
  input: RuleGroupSourceCustomActionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceCustomActionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceListDetails
 */
const se_RuleGroupSourceListDetails = (input: RuleGroupSourceListDetails, context: __SerdeContext): any => {
  return {
    ...(input.GeneratedRulesType != null && { GeneratedRulesType: input.GeneratedRulesType }),
    ...(input.TargetTypes != null && { TargetTypes: se_NonEmptyStringList(input.TargetTypes, context) }),
    ...(input.Targets != null && { Targets: se_NonEmptyStringList(input.Targets, context) }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesDetails
 */
const se_RuleGroupSourceStatefulRulesDetails = (
  input: RuleGroupSourceStatefulRulesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Action != null && { Action: input.Action }),
    ...(input.Header != null && { Header: se_RuleGroupSourceStatefulRulesHeaderDetails(input.Header, context) }),
    ...(input.RuleOptions != null && {
      RuleOptions: se_RuleGroupSourceStatefulRulesOptionsList(input.RuleOptions, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesHeaderDetails
 */
const se_RuleGroupSourceStatefulRulesHeaderDetails = (
  input: RuleGroupSourceStatefulRulesHeaderDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Destination != null && { Destination: input.Destination }),
    ...(input.DestinationPort != null && { DestinationPort: input.DestinationPort }),
    ...(input.Direction != null && { Direction: input.Direction }),
    ...(input.Protocol != null && { Protocol: input.Protocol }),
    ...(input.Source != null && { Source: input.Source }),
    ...(input.SourcePort != null && { SourcePort: input.SourcePort }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesList
 */
const se_RuleGroupSourceStatefulRulesList = (
  input: RuleGroupSourceStatefulRulesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatefulRulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesOptionsDetails
 */
const se_RuleGroupSourceStatefulRulesOptionsDetails = (
  input: RuleGroupSourceStatefulRulesOptionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Keyword != null && { Keyword: input.Keyword }),
    ...(input.Settings != null && {
      Settings: se_RuleGroupSourceStatefulRulesRuleOptionsSettingsList(input.Settings, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesOptionsList
 */
const se_RuleGroupSourceStatefulRulesOptionsList = (
  input: RuleGroupSourceStatefulRulesOptionsDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatefulRulesOptionsDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatefulRulesRuleOptionsSettingsList
 */
const se_RuleGroupSourceStatefulRulesRuleOptionsSettingsList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleDefinition
 */
const se_RuleGroupSourceStatelessRuleDefinition = (
  input: RuleGroupSourceStatelessRuleDefinition,
  context: __SerdeContext
): any => {
  return {
    ...(input.Actions != null && { Actions: se_NonEmptyStringList(input.Actions, context) }),
    ...(input.MatchAttributes != null && {
      MatchAttributes: se_RuleGroupSourceStatelessRuleMatchAttributes(input.MatchAttributes, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributes
 */
const se_RuleGroupSourceStatelessRuleMatchAttributes = (
  input: RuleGroupSourceStatelessRuleMatchAttributes,
  context: __SerdeContext
): any => {
  return {
    ...(input.DestinationPorts != null && {
      DestinationPorts: se_RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList(
        input.DestinationPorts,
        context
      ),
    }),
    ...(input.Destinations != null && {
      Destinations: se_RuleGroupSourceStatelessRuleMatchAttributesDestinationsList(input.Destinations, context),
    }),
    ...(input.Protocols != null && {
      Protocols: se_RuleGroupSourceStatelessRuleMatchAttributesProtocolsList(input.Protocols, context),
    }),
    ...(input.SourcePorts != null && {
      SourcePorts: se_RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList(input.SourcePorts, context),
    }),
    ...(input.Sources != null && {
      Sources: se_RuleGroupSourceStatelessRuleMatchAttributesSourcesList(input.Sources, context),
    }),
    ...(input.TcpFlags != null && {
      TcpFlags: se_RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList(input.TcpFlags, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts = (
  input: RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts,
  context: __SerdeContext
): any => {
  return {
    ...(input.FromPort != null && { FromPort: input.FromPort }),
    ...(input.ToPort != null && { ToPort: input.ToPort }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList = (
  input: RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinations
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesDestinations = (
  input: RuleGroupSourceStatelessRuleMatchAttributesDestinations,
  context: __SerdeContext
): any => {
  return {
    ...(input.AddressDefinition != null && { AddressDefinition: input.AddressDefinition }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationsList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesDestinationsList = (
  input: RuleGroupSourceStatelessRuleMatchAttributesDestinations[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRuleMatchAttributesDestinations(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesProtocolsList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesProtocolsList = (input: number[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcePorts
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesSourcePorts = (
  input: RuleGroupSourceStatelessRuleMatchAttributesSourcePorts,
  context: __SerdeContext
): any => {
  return {
    ...(input.FromPort != null && { FromPort: input.FromPort }),
    ...(input.ToPort != null && { ToPort: input.ToPort }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList = (
  input: RuleGroupSourceStatelessRuleMatchAttributesSourcePorts[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRuleMatchAttributesSourcePorts(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSources
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesSources = (
  input: RuleGroupSourceStatelessRuleMatchAttributesSources,
  context: __SerdeContext
): any => {
  return {
    ...(input.AddressDefinition != null && { AddressDefinition: input.AddressDefinition }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcesList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesSourcesList = (
  input: RuleGroupSourceStatelessRuleMatchAttributesSources[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRuleMatchAttributesSources(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesTcpFlags
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesTcpFlags = (
  input: RuleGroupSourceStatelessRuleMatchAttributesTcpFlags,
  context: __SerdeContext
): any => {
  return {
    ...(input.Flags != null && { Flags: se_NonEmptyStringList(input.Flags, context) }),
    ...(input.Masks != null && { Masks: se_NonEmptyStringList(input.Masks, context) }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList
 */
const se_RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList = (
  input: RuleGroupSourceStatelessRuleMatchAttributesTcpFlags[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRuleMatchAttributesTcpFlags(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRulesAndCustomActionsDetails
 */
const se_RuleGroupSourceStatelessRulesAndCustomActionsDetails = (
  input: RuleGroupSourceStatelessRulesAndCustomActionsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.CustomActions != null && {
      CustomActions: se_RuleGroupSourceCustomActionsList(input.CustomActions, context),
    }),
    ...(input.StatelessRules != null && {
      StatelessRules: se_RuleGroupSourceStatelessRulesList(input.StatelessRules, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRulesDetails
 */
const se_RuleGroupSourceStatelessRulesDetails = (
  input: RuleGroupSourceStatelessRulesDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Priority != null && { Priority: input.Priority }),
    ...(input.RuleDefinition != null && {
      RuleDefinition: se_RuleGroupSourceStatelessRuleDefinition(input.RuleDefinition, context),
    }),
  };
};

/**
 * serializeAws_restJson1RuleGroupSourceStatelessRulesList
 */
const se_RuleGroupSourceStatelessRulesList = (
  input: RuleGroupSourceStatelessRulesDetails[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_RuleGroupSourceStatelessRulesDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1RuleGroupVariables
 */
const se_RuleGroupVariables = (input: RuleGroupVariables, context: __SerdeContext): any => {
  return {
    ...(input.IpSets != null && { IpSets: se_RuleGroupVariablesIpSetsDetails(input.IpSets, context) }),
    ...(input.PortSets != null && { PortSets: se_RuleGroupVariablesPortSetsDetails(input.PortSets, context) }),
  };
};

/**
 * serializeAws_restJson1RuleGroupVariablesIpSetsDetails
 */
const se_RuleGroupVariablesIpSetsDetails = (input: RuleGroupVariablesIpSetsDetails, context: __SerdeContext): any => {
  return {
    ...(input.Definition != null && { Definition: se_NonEmptyStringList(input.Definition, context) }),
  };
};

/**
 * serializeAws_restJson1RuleGroupVariablesPortSetsDetails
 */
const se_RuleGroupVariablesPortSetsDetails = (
  input: RuleGroupVariablesPortSetsDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.Definition != null && { Definition: se_NonEmptyStringList(input.Definition, context) }),
  };
};

/**
 * serializeAws_restJson1SecurityGroups
 */
const se_SecurityGroups = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1SensitiveDataDetections
 */
const se_SensitiveDataDetections = (input: SensitiveDataDetections, context: __SerdeContext): any => {
  return {
    ...(input.Count != null && { Count: input.Count }),
    ...(input.Occurrences != null && { Occurrences: se_Occurrences(input.Occurrences, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1SensitiveDataDetectionsList
 */
const se_SensitiveDataDetectionsList = (input: SensitiveDataDetections[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SensitiveDataDetections(entry, context);
    });
};

/**
 * serializeAws_restJson1SensitiveDataResult
 */
const se_SensitiveDataResult = (input: SensitiveDataResult, context: __SerdeContext): any => {
  return {
    ...(input.Category != null && { Category: input.Category }),
    ...(input.Detections != null && { Detections: se_SensitiveDataDetectionsList(input.Detections, context) }),
    ...(input.TotalCount != null && { TotalCount: input.TotalCount }),
  };
};

/**
 * serializeAws_restJson1SensitiveDataResultList
 */
const se_SensitiveDataResultList = (input: SensitiveDataResult[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SensitiveDataResult(entry, context);
    });
};

/**
 * serializeAws_restJson1Severity
 */
const se_Severity = (input: Severity, context: __SerdeContext): any => {
  return {
    ...(input.Label != null && { Label: input.Label }),
    ...(input.Normalized != null && { Normalized: input.Normalized }),
    ...(input.Original != null && { Original: input.Original }),
    ...(input.Product != null && { Product: __serializeFloat(input.Product) }),
  };
};

/**
 * serializeAws_restJson1SeverityUpdate
 */
const se_SeverityUpdate = (input: SeverityUpdate, context: __SerdeContext): any => {
  return {
    ...(input.Label != null && { Label: input.Label }),
    ...(input.Normalized != null && { Normalized: input.Normalized }),
    ...(input.Product != null && { Product: __serializeFloat(input.Product) }),
  };
};

/**
 * serializeAws_restJson1SoftwarePackage
 */
const se_SoftwarePackage = (input: SoftwarePackage, context: __SerdeContext): any => {
  return {
    ...(input.Architecture != null && { Architecture: input.Architecture }),
    ...(input.Epoch != null && { Epoch: input.Epoch }),
    ...(input.FilePath != null && { FilePath: input.FilePath }),
    ...(input.FixedInVersion != null && { FixedInVersion: input.FixedInVersion }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.PackageManager != null && { PackageManager: input.PackageManager }),
    ...(input.Release != null && { Release: input.Release }),
    ...(input.Remediation != null && { Remediation: input.Remediation }),
    ...(input.SourceLayerArn != null && { SourceLayerArn: input.SourceLayerArn }),
    ...(input.SourceLayerHash != null && { SourceLayerHash: input.SourceLayerHash }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_restJson1SoftwarePackageList
 */
const se_SoftwarePackageList = (input: SoftwarePackage[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SoftwarePackage(entry, context);
    });
};

/**
 * serializeAws_restJson1SortCriteria
 */
const se_SortCriteria = (input: SortCriterion[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SortCriterion(entry, context);
    });
};

/**
 * serializeAws_restJson1SortCriterion
 */
const se_SortCriterion = (input: SortCriterion, context: __SerdeContext): any => {
  return {
    ...(input.Field != null && { Field: input.Field }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_restJson1StandardsControlAssociationId
 */
const se_StandardsControlAssociationId = (input: StandardsControlAssociationId, context: __SerdeContext): any => {
  return {
    ...(input.SecurityControlId != null && { SecurityControlId: input.SecurityControlId }),
    ...(input.StandardsArn != null && { StandardsArn: input.StandardsArn }),
  };
};

/**
 * serializeAws_restJson1StandardsControlAssociationIds
 */
const se_StandardsControlAssociationIds = (input: StandardsControlAssociationId[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StandardsControlAssociationId(entry, context);
    });
};

/**
 * serializeAws_restJson1StandardsControlAssociationUpdate
 */
const se_StandardsControlAssociationUpdate = (
  input: StandardsControlAssociationUpdate,
  context: __SerdeContext
): any => {
  return {
    ...(input.AssociationStatus != null && { AssociationStatus: input.AssociationStatus }),
    ...(input.SecurityControlId != null && { SecurityControlId: input.SecurityControlId }),
    ...(input.StandardsArn != null && { StandardsArn: input.StandardsArn }),
    ...(input.UpdatedReason != null && { UpdatedReason: input.UpdatedReason }),
  };
};

/**
 * serializeAws_restJson1StandardsControlAssociationUpdates
 */
const se_StandardsControlAssociationUpdates = (
  input: StandardsControlAssociationUpdate[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StandardsControlAssociationUpdate(entry, context);
    });
};

/**
 * serializeAws_restJson1StandardsInputParameterMap
 */
const se_StandardsInputParameterMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_restJson1StandardsSubscriptionArns
 */
const se_StandardsSubscriptionArns = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1StandardsSubscriptionRequest
 */
const se_StandardsSubscriptionRequest = (input: StandardsSubscriptionRequest, context: __SerdeContext): any => {
  return {
    ...(input.StandardsArn != null && { StandardsArn: input.StandardsArn }),
    ...(input.StandardsInput != null && {
      StandardsInput: se_StandardsInputParameterMap(input.StandardsInput, context),
    }),
  };
};

/**
 * serializeAws_restJson1StandardsSubscriptionRequests
 */
const se_StandardsSubscriptionRequests = (input: StandardsSubscriptionRequest[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StandardsSubscriptionRequest(entry, context);
    });
};

/**
 * serializeAws_restJson1StatelessCustomActionDefinition
 */
const se_StatelessCustomActionDefinition = (input: StatelessCustomActionDefinition, context: __SerdeContext): any => {
  return {
    ...(input.PublishMetricAction != null && {
      PublishMetricAction: se_StatelessCustomPublishMetricAction(input.PublishMetricAction, context),
    }),
  };
};

/**
 * serializeAws_restJson1StatelessCustomPublishMetricAction
 */
const se_StatelessCustomPublishMetricAction = (
  input: StatelessCustomPublishMetricAction,
  context: __SerdeContext
): any => {
  return {
    ...(input.Dimensions != null && {
      Dimensions: se_StatelessCustomPublishMetricActionDimensionsList(input.Dimensions, context),
    }),
  };
};

/**
 * serializeAws_restJson1StatelessCustomPublishMetricActionDimension
 */
const se_StatelessCustomPublishMetricActionDimension = (
  input: StatelessCustomPublishMetricActionDimension,
  context: __SerdeContext
): any => {
  return {
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1StatelessCustomPublishMetricActionDimensionsList
 */
const se_StatelessCustomPublishMetricActionDimensionsList = (
  input: StatelessCustomPublishMetricActionDimension[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StatelessCustomPublishMetricActionDimension(entry, context);
    });
};

/**
 * serializeAws_restJson1StatusReason
 */
const se_StatusReason = (input: StatusReason, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.ReasonCode != null && { ReasonCode: input.ReasonCode }),
  };
};

/**
 * serializeAws_restJson1StatusReasonsList
 */
const se_StatusReasonsList = (input: StatusReason[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StatusReason(entry, context);
    });
};

/**
 * serializeAws_restJson1StringFilter
 */
const se_StringFilter = (input: StringFilter, context: __SerdeContext): any => {
  return {
    ...(input.Comparison != null && { Comparison: input.Comparison }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1StringFilterList
 */
const se_StringFilterList = (input: StringFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_StringFilter(entry, context);
    });
};

/**
 * serializeAws_restJson1StringList
 */
const se_StringList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1TagMap
 */
const se_TagMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_restJson1Threat
 */
const se_Threat = (input: Threat, context: __SerdeContext): any => {
  return {
    ...(input.FilePaths != null && { FilePaths: se_FilePathList(input.FilePaths, context) }),
    ...(input.ItemCount != null && { ItemCount: input.ItemCount }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Severity != null && { Severity: input.Severity }),
  };
};

/**
 * serializeAws_restJson1ThreatIntelIndicator
 */
const se_ThreatIntelIndicator = (input: ThreatIntelIndicator, context: __SerdeContext): any => {
  return {
    ...(input.Category != null && { Category: input.Category }),
    ...(input.LastObservedAt != null && { LastObservedAt: input.LastObservedAt }),
    ...(input.Source != null && { Source: input.Source }),
    ...(input.SourceUrl != null && { SourceUrl: input.SourceUrl }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_restJson1ThreatIntelIndicatorList
 */
const se_ThreatIntelIndicatorList = (input: ThreatIntelIndicator[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ThreatIntelIndicator(entry, context);
    });
};

/**
 * serializeAws_restJson1ThreatList
 */
const se_ThreatList = (input: Threat[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Threat(entry, context);
    });
};

/**
 * serializeAws_restJson1TypeList
 */
const se_TypeList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_restJson1VolumeMount
 */
const se_VolumeMount = (input: VolumeMount, context: __SerdeContext): any => {
  return {
    ...(input.MountPath != null && { MountPath: input.MountPath }),
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_restJson1VolumeMountList
 */
const se_VolumeMountList = (input: VolumeMount[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_VolumeMount(entry, context);
    });
};

/**
 * serializeAws_restJson1VpcInfoCidrBlockSetDetails
 */
const se_VpcInfoCidrBlockSetDetails = (input: VpcInfoCidrBlockSetDetails, context: __SerdeContext): any => {
  return {
    ...(input.CidrBlock != null && { CidrBlock: input.CidrBlock }),
  };
};

/**
 * serializeAws_restJson1VpcInfoCidrBlockSetList
 */
const se_VpcInfoCidrBlockSetList = (input: VpcInfoCidrBlockSetDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_VpcInfoCidrBlockSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1VpcInfoIpv6CidrBlockSetDetails
 */
const se_VpcInfoIpv6CidrBlockSetDetails = (input: VpcInfoIpv6CidrBlockSetDetails, context: __SerdeContext): any => {
  return {
    ...(input.Ipv6CidrBlock != null && { Ipv6CidrBlock: input.Ipv6CidrBlock }),
  };
};

/**
 * serializeAws_restJson1VpcInfoIpv6CidrBlockSetList
 */
const se_VpcInfoIpv6CidrBlockSetList = (input: VpcInfoIpv6CidrBlockSetDetails[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_VpcInfoIpv6CidrBlockSetDetails(entry, context);
    });
};

/**
 * serializeAws_restJson1VpcInfoPeeringOptionsDetails
 */
const se_VpcInfoPeeringOptionsDetails = (input: VpcInfoPeeringOptionsDetails, context: __SerdeContext): any => {
  return {
    ...(input.AllowDnsResolutionFromRemoteVpc != null && {
      AllowDnsResolutionFromRemoteVpc: input.AllowDnsResolutionFromRemoteVpc,
    }),
    ...(input.AllowEgressFromLocalClassicLinkToRemoteVpc != null && {
      AllowEgressFromLocalClassicLinkToRemoteVpc: input.AllowEgressFromLocalClassicLinkToRemoteVpc,
    }),
    ...(input.AllowEgressFromLocalVpcToRemoteClassicLink != null && {
      AllowEgressFromLocalVpcToRemoteClassicLink: input.AllowEgressFromLocalVpcToRemoteClassicLink,
    }),
  };
};

/**
 * serializeAws_restJson1Vulnerability
 */
const se_Vulnerability = (input: Vulnerability, context: __SerdeContext): any => {
  return {
    ...(input.Cvss != null && { Cvss: se_CvssList(input.Cvss, context) }),
    ...(input.FixAvailable != null && { FixAvailable: input.FixAvailable }),
    ...(input.Id != null && { Id: input.Id }),
    ...(input.ReferenceUrls != null && { ReferenceUrls: se_StringList(input.ReferenceUrls, context) }),
    ...(input.RelatedVulnerabilities != null && {
      RelatedVulnerabilities: se_StringList(input.RelatedVulnerabilities, context),
    }),
    ...(input.Vendor != null && { Vendor: se_VulnerabilityVendor(input.Vendor, context) }),
    ...(input.VulnerablePackages != null && {
      VulnerablePackages: se_SoftwarePackageList(input.VulnerablePackages, context),
    }),
  };
};

/**
 * serializeAws_restJson1VulnerabilityList
 */
const se_VulnerabilityList = (input: Vulnerability[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Vulnerability(entry, context);
    });
};

/**
 * serializeAws_restJson1VulnerabilityVendor
 */
const se_VulnerabilityVendor = (input: VulnerabilityVendor, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Url != null && { Url: input.Url }),
    ...(input.VendorCreatedAt != null && { VendorCreatedAt: input.VendorCreatedAt }),
    ...(input.VendorSeverity != null && { VendorSeverity: input.VendorSeverity }),
    ...(input.VendorUpdatedAt != null && { VendorUpdatedAt: input.VendorUpdatedAt }),
  };
};

/**
 * serializeAws_restJson1WafAction
 */
const se_WafAction = (input: WafAction, context: __SerdeContext): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1WafExcludedRule
 */
const se_WafExcludedRule = (input: WafExcludedRule, context: __SerdeContext): any => {
  return {
    ...(input.RuleId != null && { RuleId: input.RuleId }),
  };
};

/**
 * serializeAws_restJson1WafExcludedRuleList
 */
const se_WafExcludedRuleList = (input: WafExcludedRule[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_WafExcludedRule(entry, context);
    });
};

/**
 * serializeAws_restJson1WafOverrideAction
 */
const se_WafOverrideAction = (input: WafOverrideAction, context: __SerdeContext): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_restJson1Workflow
 */
const se_Workflow = (input: Workflow, context: __SerdeContext): any => {
  return {
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_restJson1WorkflowUpdate
 */
const se_WorkflowUpdate = (input: WorkflowUpdate, context: __SerdeContext): any => {
  return {
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * deserializeAws_restJson1Action
 */
const de_Action = (output: any, context: __SerdeContext): Action => {
  return {
    ActionType: __expectString(output.ActionType),
    AwsApiCallAction:
      output.AwsApiCallAction != null ? de_AwsApiCallAction(output.AwsApiCallAction, context) : undefined,
    DnsRequestAction:
      output.DnsRequestAction != null ? de_DnsRequestAction(output.DnsRequestAction, context) : undefined,
    NetworkConnectionAction:
      output.NetworkConnectionAction != null
        ? de_NetworkConnectionAction(output.NetworkConnectionAction, context)
        : undefined,
    PortProbeAction: output.PortProbeAction != null ? de_PortProbeAction(output.PortProbeAction, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1ActionLocalIpDetails
 */
const de_ActionLocalIpDetails = (output: any, context: __SerdeContext): ActionLocalIpDetails => {
  return {
    IpAddressV4: __expectString(output.IpAddressV4),
  } as any;
};

/**
 * deserializeAws_restJson1ActionLocalPortDetails
 */
const de_ActionLocalPortDetails = (output: any, context: __SerdeContext): ActionLocalPortDetails => {
  return {
    Port: __expectInt32(output.Port),
    PortName: __expectString(output.PortName),
  } as any;
};

/**
 * deserializeAws_restJson1ActionRemoteIpDetails
 */
const de_ActionRemoteIpDetails = (output: any, context: __SerdeContext): ActionRemoteIpDetails => {
  return {
    City: output.City != null ? de_City(output.City, context) : undefined,
    Country: output.Country != null ? de_Country(output.Country, context) : undefined,
    GeoLocation: output.GeoLocation != null ? de_GeoLocation(output.GeoLocation, context) : undefined,
    IpAddressV4: __expectString(output.IpAddressV4),
    Organization: output.Organization != null ? de_IpOrganizationDetails(output.Organization, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1ActionRemotePortDetails
 */
const de_ActionRemotePortDetails = (output: any, context: __SerdeContext): ActionRemotePortDetails => {
  return {
    Port: __expectInt32(output.Port),
    PortName: __expectString(output.PortName),
  } as any;
};

/**
 * deserializeAws_restJson1ActionTarget
 */
const de_ActionTarget = (output: any, context: __SerdeContext): ActionTarget => {
  return {
    ActionTargetArn: __expectString(output.ActionTargetArn),
    Description: __expectString(output.Description),
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1ActionTargetList
 */
const de_ActionTargetList = (output: any, context: __SerdeContext): ActionTarget[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ActionTarget(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Adjustment
 */
const de_Adjustment = (output: any, context: __SerdeContext): Adjustment => {
  return {
    Metric: __expectString(output.Metric),
    Reason: __expectString(output.Reason),
  } as any;
};

/**
 * deserializeAws_restJson1AdjustmentList
 */
const de_AdjustmentList = (output: any, context: __SerdeContext): Adjustment[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Adjustment(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AdminAccount
 */
const de_AdminAccount = (output: any, context: __SerdeContext): AdminAccount => {
  return {
    AccountId: __expectString(output.AccountId),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AdminAccounts
 */
const de_AdminAccounts = (output: any, context: __SerdeContext): AdminAccount[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AdminAccount(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AssociatedStandard
 */
const de_AssociatedStandard = (output: any, context: __SerdeContext): AssociatedStandard => {
  return {
    StandardsId: __expectString(output.StandardsId),
  } as any;
};

/**
 * deserializeAws_restJson1AssociatedStandardsList
 */
const de_AssociatedStandardsList = (output: any, context: __SerdeContext): AssociatedStandard[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AssociatedStandard(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AssociationSetDetails
 */
const de_AssociationSetDetails = (output: any, context: __SerdeContext): AssociationSetDetails => {
  return {
    AssociationState:
      output.AssociationState != null ? de_AssociationStateDetails(output.AssociationState, context) : undefined,
    GatewayId: __expectString(output.GatewayId),
    Main: __expectBoolean(output.Main),
    RouteTableAssociationId: __expectString(output.RouteTableAssociationId),
    RouteTableId: __expectString(output.RouteTableId),
    SubnetId: __expectString(output.SubnetId),
  } as any;
};

/**
 * deserializeAws_restJson1AssociationSetList
 */
const de_AssociationSetList = (output: any, context: __SerdeContext): AssociationSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AssociationSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AssociationStateDetails
 */
const de_AssociationStateDetails = (output: any, context: __SerdeContext): AssociationStateDetails => {
  return {
    State: __expectString(output.State),
    StatusMessage: __expectString(output.StatusMessage),
  } as any;
};

/**
 * deserializeAws_restJson1AvailabilityZone
 */
const de_AvailabilityZone = (output: any, context: __SerdeContext): AvailabilityZone => {
  return {
    SubnetId: __expectString(output.SubnetId),
    ZoneName: __expectString(output.ZoneName),
  } as any;
};

/**
 * deserializeAws_restJson1AvailabilityZones
 */
const de_AvailabilityZones = (output: any, context: __SerdeContext): AvailabilityZone[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AvailabilityZone(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsApiCallAction
 */
const de_AwsApiCallAction = (output: any, context: __SerdeContext): AwsApiCallAction => {
  return {
    AffectedResources: output.AffectedResources != null ? de_FieldMap(output.AffectedResources, context) : undefined,
    Api: __expectString(output.Api),
    CallerType: __expectString(output.CallerType),
    DomainDetails:
      output.DomainDetails != null ? de_AwsApiCallActionDomainDetails(output.DomainDetails, context) : undefined,
    FirstSeen: __expectString(output.FirstSeen),
    LastSeen: __expectString(output.LastSeen),
    RemoteIpDetails:
      output.RemoteIpDetails != null ? de_ActionRemoteIpDetails(output.RemoteIpDetails, context) : undefined,
    ServiceName: __expectString(output.ServiceName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiCallActionDomainDetails
 */
const de_AwsApiCallActionDomainDetails = (output: any, context: __SerdeContext): AwsApiCallActionDomainDetails => {
  return {
    Domain: __expectString(output.Domain),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayAccessLogSettings
 */
const de_AwsApiGatewayAccessLogSettings = (output: any, context: __SerdeContext): AwsApiGatewayAccessLogSettings => {
  return {
    DestinationArn: __expectString(output.DestinationArn),
    Format: __expectString(output.Format),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayCanarySettings
 */
const de_AwsApiGatewayCanarySettings = (output: any, context: __SerdeContext): AwsApiGatewayCanarySettings => {
  return {
    DeploymentId: __expectString(output.DeploymentId),
    PercentTraffic: __limitedParseDouble(output.PercentTraffic),
    StageVariableOverrides:
      output.StageVariableOverrides != null ? de_FieldMap(output.StageVariableOverrides, context) : undefined,
    UseStageCache: __expectBoolean(output.UseStageCache),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayEndpointConfiguration
 */
const de_AwsApiGatewayEndpointConfiguration = (
  output: any,
  context: __SerdeContext
): AwsApiGatewayEndpointConfiguration => {
  return {
    Types: output.Types != null ? de_NonEmptyStringList(output.Types, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayMethodSettings
 */
const de_AwsApiGatewayMethodSettings = (output: any, context: __SerdeContext): AwsApiGatewayMethodSettings => {
  return {
    CacheDataEncrypted: __expectBoolean(output.CacheDataEncrypted),
    CacheTtlInSeconds: __expectInt32(output.CacheTtlInSeconds),
    CachingEnabled: __expectBoolean(output.CachingEnabled),
    DataTraceEnabled: __expectBoolean(output.DataTraceEnabled),
    HttpMethod: __expectString(output.HttpMethod),
    LoggingLevel: __expectString(output.LoggingLevel),
    MetricsEnabled: __expectBoolean(output.MetricsEnabled),
    RequireAuthorizationForCacheControl: __expectBoolean(output.RequireAuthorizationForCacheControl),
    ResourcePath: __expectString(output.ResourcePath),
    ThrottlingBurstLimit: __expectInt32(output.ThrottlingBurstLimit),
    ThrottlingRateLimit: __limitedParseDouble(output.ThrottlingRateLimit),
    UnauthorizedCacheControlHeaderStrategy: __expectString(output.UnauthorizedCacheControlHeaderStrategy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayMethodSettingsList
 */
const de_AwsApiGatewayMethodSettingsList = (output: any, context: __SerdeContext): AwsApiGatewayMethodSettings[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsApiGatewayMethodSettings(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsApiGatewayRestApiDetails
 */
const de_AwsApiGatewayRestApiDetails = (output: any, context: __SerdeContext): AwsApiGatewayRestApiDetails => {
  return {
    ApiKeySource: __expectString(output.ApiKeySource),
    BinaryMediaTypes:
      output.BinaryMediaTypes != null ? de_NonEmptyStringList(output.BinaryMediaTypes, context) : undefined,
    CreatedDate: __expectString(output.CreatedDate),
    Description: __expectString(output.Description),
    EndpointConfiguration:
      output.EndpointConfiguration != null
        ? de_AwsApiGatewayEndpointConfiguration(output.EndpointConfiguration, context)
        : undefined,
    Id: __expectString(output.Id),
    MinimumCompressionSize: __expectInt32(output.MinimumCompressionSize),
    Name: __expectString(output.Name),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayStageDetails
 */
const de_AwsApiGatewayStageDetails = (output: any, context: __SerdeContext): AwsApiGatewayStageDetails => {
  return {
    AccessLogSettings:
      output.AccessLogSettings != null
        ? de_AwsApiGatewayAccessLogSettings(output.AccessLogSettings, context)
        : undefined,
    CacheClusterEnabled: __expectBoolean(output.CacheClusterEnabled),
    CacheClusterSize: __expectString(output.CacheClusterSize),
    CacheClusterStatus: __expectString(output.CacheClusterStatus),
    CanarySettings:
      output.CanarySettings != null ? de_AwsApiGatewayCanarySettings(output.CanarySettings, context) : undefined,
    ClientCertificateId: __expectString(output.ClientCertificateId),
    CreatedDate: __expectString(output.CreatedDate),
    DeploymentId: __expectString(output.DeploymentId),
    Description: __expectString(output.Description),
    DocumentationVersion: __expectString(output.DocumentationVersion),
    LastUpdatedDate: __expectString(output.LastUpdatedDate),
    MethodSettings:
      output.MethodSettings != null ? de_AwsApiGatewayMethodSettingsList(output.MethodSettings, context) : undefined,
    StageName: __expectString(output.StageName),
    TracingEnabled: __expectBoolean(output.TracingEnabled),
    Variables: output.Variables != null ? de_FieldMap(output.Variables, context) : undefined,
    WebAclArn: __expectString(output.WebAclArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayV2ApiDetails
 */
const de_AwsApiGatewayV2ApiDetails = (output: any, context: __SerdeContext): AwsApiGatewayV2ApiDetails => {
  return {
    ApiEndpoint: __expectString(output.ApiEndpoint),
    ApiId: __expectString(output.ApiId),
    ApiKeySelectionExpression: __expectString(output.ApiKeySelectionExpression),
    CorsConfiguration:
      output.CorsConfiguration != null ? de_AwsCorsConfiguration(output.CorsConfiguration, context) : undefined,
    CreatedDate: __expectString(output.CreatedDate),
    Description: __expectString(output.Description),
    Name: __expectString(output.Name),
    ProtocolType: __expectString(output.ProtocolType),
    RouteSelectionExpression: __expectString(output.RouteSelectionExpression),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayV2RouteSettings
 */
const de_AwsApiGatewayV2RouteSettings = (output: any, context: __SerdeContext): AwsApiGatewayV2RouteSettings => {
  return {
    DataTraceEnabled: __expectBoolean(output.DataTraceEnabled),
    DetailedMetricsEnabled: __expectBoolean(output.DetailedMetricsEnabled),
    LoggingLevel: __expectString(output.LoggingLevel),
    ThrottlingBurstLimit: __expectInt32(output.ThrottlingBurstLimit),
    ThrottlingRateLimit: __limitedParseDouble(output.ThrottlingRateLimit),
  } as any;
};

/**
 * deserializeAws_restJson1AwsApiGatewayV2StageDetails
 */
const de_AwsApiGatewayV2StageDetails = (output: any, context: __SerdeContext): AwsApiGatewayV2StageDetails => {
  return {
    AccessLogSettings:
      output.AccessLogSettings != null
        ? de_AwsApiGatewayAccessLogSettings(output.AccessLogSettings, context)
        : undefined,
    ApiGatewayManaged: __expectBoolean(output.ApiGatewayManaged),
    AutoDeploy: __expectBoolean(output.AutoDeploy),
    ClientCertificateId: __expectString(output.ClientCertificateId),
    CreatedDate: __expectString(output.CreatedDate),
    DefaultRouteSettings:
      output.DefaultRouteSettings != null
        ? de_AwsApiGatewayV2RouteSettings(output.DefaultRouteSettings, context)
        : undefined,
    DeploymentId: __expectString(output.DeploymentId),
    Description: __expectString(output.Description),
    LastDeploymentStatusMessage: __expectString(output.LastDeploymentStatusMessage),
    LastUpdatedDate: __expectString(output.LastUpdatedDate),
    RouteSettings:
      output.RouteSettings != null ? de_AwsApiGatewayV2RouteSettings(output.RouteSettings, context) : undefined,
    StageName: __expectString(output.StageName),
    StageVariables: output.StageVariables != null ? de_FieldMap(output.StageVariables, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupAvailabilityZonesList
 */
const de_AwsAutoScalingAutoScalingGroupAvailabilityZonesList = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails
 */
const de_AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails => {
  return {
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupDetails
 */
const de_AwsAutoScalingAutoScalingGroupDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupDetails => {
  return {
    AvailabilityZones:
      output.AvailabilityZones != null
        ? de_AwsAutoScalingAutoScalingGroupAvailabilityZonesList(output.AvailabilityZones, context)
        : undefined,
    CapacityRebalance: __expectBoolean(output.CapacityRebalance),
    CreatedTime: __expectString(output.CreatedTime),
    HealthCheckGracePeriod: __expectInt32(output.HealthCheckGracePeriod),
    HealthCheckType: __expectString(output.HealthCheckType),
    LaunchConfigurationName: __expectString(output.LaunchConfigurationName),
    LaunchTemplate:
      output.LaunchTemplate != null
        ? de_AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification(output.LaunchTemplate, context)
        : undefined,
    LoadBalancerNames: output.LoadBalancerNames != null ? de_StringList(output.LoadBalancerNames, context) : undefined,
    MixedInstancesPolicy:
      output.MixedInstancesPolicy != null
        ? de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails(output.MixedInstancesPolicy, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification
 */
const de_AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification => {
  return {
    LaunchTemplateId: __expectString(output.LaunchTemplateId),
    LaunchTemplateName: __expectString(output.LaunchTemplateName),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails => {
  return {
    InstancesDistribution:
      output.InstancesDistribution != null
        ? de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails(
            output.InstancesDistribution,
            context
          )
        : undefined,
    LaunchTemplate:
      output.LaunchTemplate != null
        ? de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails(output.LaunchTemplate, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails => {
  return {
    OnDemandAllocationStrategy: __expectString(output.OnDemandAllocationStrategy),
    OnDemandBaseCapacity: __expectInt32(output.OnDemandBaseCapacity),
    OnDemandPercentageAboveBaseCapacity: __expectInt32(output.OnDemandPercentageAboveBaseCapacity),
    SpotAllocationStrategy: __expectString(output.SpotAllocationStrategy),
    SpotInstancePools: __expectInt32(output.SpotInstancePools),
    SpotMaxPrice: __expectString(output.SpotMaxPrice),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails => {
  return {
    LaunchTemplateSpecification:
      output.LaunchTemplateSpecification != null
        ? de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification(
            output.LaunchTemplateSpecification,
            context
          )
        : undefined,
    Overrides:
      output.Overrides != null
        ? de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList(output.Overrides, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification => {
  return {
    LaunchTemplateId: __expectString(output.LaunchTemplateId),
    LaunchTemplateName: __expectString(output.LaunchTemplateName),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails
 */
const de_AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails => {
  return {
    InstanceType: __expectString(output.InstanceType),
    WeightedCapacity: __expectString(output.WeightedCapacity),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails
 */
const de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails => {
  return {
    DeviceName: __expectString(output.DeviceName),
    Ebs:
      output.Ebs != null
        ? de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails(output.Ebs, context)
        : undefined,
    NoDevice: __expectBoolean(output.NoDevice),
    VirtualName: __expectString(output.VirtualName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails
 */
const de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails => {
  return {
    DeleteOnTermination: __expectBoolean(output.DeleteOnTermination),
    Encrypted: __expectBoolean(output.Encrypted),
    Iops: __expectInt32(output.Iops),
    SnapshotId: __expectString(output.SnapshotId),
    VolumeSize: __expectInt32(output.VolumeSize),
    VolumeType: __expectString(output.VolumeType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList
 */
const de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationDetails
 */
const de_AwsAutoScalingLaunchConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationDetails => {
  return {
    AssociatePublicIpAddress: __expectBoolean(output.AssociatePublicIpAddress),
    BlockDeviceMappings:
      output.BlockDeviceMappings != null
        ? de_AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList(output.BlockDeviceMappings, context)
        : undefined,
    ClassicLinkVpcId: __expectString(output.ClassicLinkVpcId),
    ClassicLinkVpcSecurityGroups:
      output.ClassicLinkVpcSecurityGroups != null
        ? de_NonEmptyStringList(output.ClassicLinkVpcSecurityGroups, context)
        : undefined,
    CreatedTime: __expectString(output.CreatedTime),
    EbsOptimized: __expectBoolean(output.EbsOptimized),
    IamInstanceProfile: __expectString(output.IamInstanceProfile),
    ImageId: __expectString(output.ImageId),
    InstanceMonitoring:
      output.InstanceMonitoring != null
        ? de_AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails(output.InstanceMonitoring, context)
        : undefined,
    InstanceType: __expectString(output.InstanceType),
    KernelId: __expectString(output.KernelId),
    KeyName: __expectString(output.KeyName),
    LaunchConfigurationName: __expectString(output.LaunchConfigurationName),
    MetadataOptions:
      output.MetadataOptions != null
        ? de_AwsAutoScalingLaunchConfigurationMetadataOptions(output.MetadataOptions, context)
        : undefined,
    PlacementTenancy: __expectString(output.PlacementTenancy),
    RamdiskId: __expectString(output.RamdiskId),
    SecurityGroups: output.SecurityGroups != null ? de_NonEmptyStringList(output.SecurityGroups, context) : undefined,
    SpotPrice: __expectString(output.SpotPrice),
    UserData: __expectString(output.UserData),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails
 */
const de_AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsAutoScalingLaunchConfigurationMetadataOptions
 */
const de_AwsAutoScalingLaunchConfigurationMetadataOptions = (
  output: any,
  context: __SerdeContext
): AwsAutoScalingLaunchConfigurationMetadataOptions => {
  return {
    HttpEndpoint: __expectString(output.HttpEndpoint),
    HttpPutResponseHopLimit: __expectInt32(output.HttpPutResponseHopLimit),
    HttpTokens: __expectString(output.HttpTokens),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanAdvancedBackupSettingsDetails
 */
const de_AwsBackupBackupPlanAdvancedBackupSettingsDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanAdvancedBackupSettingsDetails => {
  return {
    BackupOptions: output.BackupOptions != null ? de_FieldMap(output.BackupOptions, context) : undefined,
    ResourceType: __expectString(output.ResourceType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanAdvancedBackupSettingsList
 */
const de_AwsBackupBackupPlanAdvancedBackupSettingsList = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanAdvancedBackupSettingsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsBackupBackupPlanAdvancedBackupSettingsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanBackupPlanDetails
 */
const de_AwsBackupBackupPlanBackupPlanDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanBackupPlanDetails => {
  return {
    AdvancedBackupSettings:
      output.AdvancedBackupSettings != null
        ? de_AwsBackupBackupPlanAdvancedBackupSettingsList(output.AdvancedBackupSettings, context)
        : undefined,
    BackupPlanName: __expectString(output.BackupPlanName),
    BackupPlanRule:
      output.BackupPlanRule != null ? de_AwsBackupBackupPlanRuleList(output.BackupPlanRule, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanDetails
 */
const de_AwsBackupBackupPlanDetails = (output: any, context: __SerdeContext): AwsBackupBackupPlanDetails => {
  return {
    BackupPlan:
      output.BackupPlan != null ? de_AwsBackupBackupPlanBackupPlanDetails(output.BackupPlan, context) : undefined,
    BackupPlanArn: __expectString(output.BackupPlanArn),
    BackupPlanId: __expectString(output.BackupPlanId),
    VersionId: __expectString(output.VersionId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanLifecycleDetails
 */
const de_AwsBackupBackupPlanLifecycleDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanLifecycleDetails => {
  return {
    DeleteAfterDays: __expectLong(output.DeleteAfterDays),
    MoveToColdStorageAfterDays: __expectLong(output.MoveToColdStorageAfterDays),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanRuleCopyActionsDetails
 */
const de_AwsBackupBackupPlanRuleCopyActionsDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanRuleCopyActionsDetails => {
  return {
    DestinationBackupVaultArn: __expectString(output.DestinationBackupVaultArn),
    Lifecycle: output.Lifecycle != null ? de_AwsBackupBackupPlanLifecycleDetails(output.Lifecycle, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanRuleCopyActionsList
 */
const de_AwsBackupBackupPlanRuleCopyActionsList = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupPlanRuleCopyActionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsBackupBackupPlanRuleCopyActionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanRuleDetails
 */
const de_AwsBackupBackupPlanRuleDetails = (output: any, context: __SerdeContext): AwsBackupBackupPlanRuleDetails => {
  return {
    CompletionWindowMinutes: __expectLong(output.CompletionWindowMinutes),
    CopyActions:
      output.CopyActions != null ? de_AwsBackupBackupPlanRuleCopyActionsList(output.CopyActions, context) : undefined,
    EnableContinuousBackup: __expectBoolean(output.EnableContinuousBackup),
    Lifecycle: output.Lifecycle != null ? de_AwsBackupBackupPlanLifecycleDetails(output.Lifecycle, context) : undefined,
    RuleId: __expectString(output.RuleId),
    RuleName: __expectString(output.RuleName),
    ScheduleExpression: __expectString(output.ScheduleExpression),
    StartWindowMinutes: __expectLong(output.StartWindowMinutes),
    TargetBackupVault: __expectString(output.TargetBackupVault),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupPlanRuleList
 */
const de_AwsBackupBackupPlanRuleList = (output: any, context: __SerdeContext): AwsBackupBackupPlanRuleDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsBackupBackupPlanRuleDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsBackupBackupVaultDetails
 */
const de_AwsBackupBackupVaultDetails = (output: any, context: __SerdeContext): AwsBackupBackupVaultDetails => {
  return {
    AccessPolicy: __expectString(output.AccessPolicy),
    BackupVaultArn: __expectString(output.BackupVaultArn),
    BackupVaultName: __expectString(output.BackupVaultName),
    EncryptionKeyArn: __expectString(output.EncryptionKeyArn),
    Notifications:
      output.Notifications != null
        ? de_AwsBackupBackupVaultNotificationsDetails(output.Notifications, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupBackupVaultNotificationsDetails
 */
const de_AwsBackupBackupVaultNotificationsDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupBackupVaultNotificationsDetails => {
  return {
    BackupVaultEvents:
      output.BackupVaultEvents != null ? de_NonEmptyStringList(output.BackupVaultEvents, context) : undefined,
    SnsTopicArn: __expectString(output.SnsTopicArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupRecoveryPointCalculatedLifecycleDetails
 */
const de_AwsBackupRecoveryPointCalculatedLifecycleDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupRecoveryPointCalculatedLifecycleDetails => {
  return {
    DeleteAt: __expectString(output.DeleteAt),
    MoveToColdStorageAt: __expectString(output.MoveToColdStorageAt),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupRecoveryPointCreatedByDetails
 */
const de_AwsBackupRecoveryPointCreatedByDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupRecoveryPointCreatedByDetails => {
  return {
    BackupPlanArn: __expectString(output.BackupPlanArn),
    BackupPlanId: __expectString(output.BackupPlanId),
    BackupPlanVersion: __expectString(output.BackupPlanVersion),
    BackupRuleId: __expectString(output.BackupRuleId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupRecoveryPointDetails
 */
const de_AwsBackupRecoveryPointDetails = (output: any, context: __SerdeContext): AwsBackupRecoveryPointDetails => {
  return {
    BackupSizeInBytes: __expectLong(output.BackupSizeInBytes),
    BackupVaultArn: __expectString(output.BackupVaultArn),
    BackupVaultName: __expectString(output.BackupVaultName),
    CalculatedLifecycle:
      output.CalculatedLifecycle != null
        ? de_AwsBackupRecoveryPointCalculatedLifecycleDetails(output.CalculatedLifecycle, context)
        : undefined,
    CompletionDate: __expectString(output.CompletionDate),
    CreatedBy:
      output.CreatedBy != null ? de_AwsBackupRecoveryPointCreatedByDetails(output.CreatedBy, context) : undefined,
    CreationDate: __expectString(output.CreationDate),
    EncryptionKeyArn: __expectString(output.EncryptionKeyArn),
    IamRoleArn: __expectString(output.IamRoleArn),
    IsEncrypted: __expectBoolean(output.IsEncrypted),
    LastRestoreTime: __expectString(output.LastRestoreTime),
    Lifecycle:
      output.Lifecycle != null ? de_AwsBackupRecoveryPointLifecycleDetails(output.Lifecycle, context) : undefined,
    RecoveryPointArn: __expectString(output.RecoveryPointArn),
    ResourceArn: __expectString(output.ResourceArn),
    ResourceType: __expectString(output.ResourceType),
    SourceBackupVaultArn: __expectString(output.SourceBackupVaultArn),
    Status: __expectString(output.Status),
    StatusMessage: __expectString(output.StatusMessage),
    StorageClass: __expectString(output.StorageClass),
  } as any;
};

/**
 * deserializeAws_restJson1AwsBackupRecoveryPointLifecycleDetails
 */
const de_AwsBackupRecoveryPointLifecycleDetails = (
  output: any,
  context: __SerdeContext
): AwsBackupRecoveryPointLifecycleDetails => {
  return {
    DeleteAfterDays: __expectLong(output.DeleteAfterDays),
    MoveToColdStorageAfterDays: __expectLong(output.MoveToColdStorageAfterDays),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateDetails
 */
const de_AwsCertificateManagerCertificateDetails = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateDetails => {
  return {
    CertificateAuthorityArn: __expectString(output.CertificateAuthorityArn),
    CreatedAt: __expectString(output.CreatedAt),
    DomainName: __expectString(output.DomainName),
    DomainValidationOptions:
      output.DomainValidationOptions != null
        ? de_AwsCertificateManagerCertificateDomainValidationOptions(output.DomainValidationOptions, context)
        : undefined,
    ExtendedKeyUsages:
      output.ExtendedKeyUsages != null
        ? de_AwsCertificateManagerCertificateExtendedKeyUsages(output.ExtendedKeyUsages, context)
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    ImportedAt: __expectString(output.ImportedAt),
    InUseBy: output.InUseBy != null ? de_StringList(output.InUseBy, context) : undefined,
    IssuedAt: __expectString(output.IssuedAt),
    Issuer: __expectString(output.Issuer),
    KeyAlgorithm: __expectString(output.KeyAlgorithm),
    KeyUsages:
      output.KeyUsages != null ? de_AwsCertificateManagerCertificateKeyUsages(output.KeyUsages, context) : undefined,
    NotAfter: __expectString(output.NotAfter),
    NotBefore: __expectString(output.NotBefore),
    Options: output.Options != null ? de_AwsCertificateManagerCertificateOptions(output.Options, context) : undefined,
    RenewalEligibility: __expectString(output.RenewalEligibility),
    RenewalSummary:
      output.RenewalSummary != null
        ? de_AwsCertificateManagerCertificateRenewalSummary(output.RenewalSummary, context)
        : undefined,
    Serial: __expectString(output.Serial),
    SignatureAlgorithm: __expectString(output.SignatureAlgorithm),
    Status: __expectString(output.Status),
    Subject: __expectString(output.Subject),
    SubjectAlternativeNames:
      output.SubjectAlternativeNames != null ? de_StringList(output.SubjectAlternativeNames, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateDomainValidationOption
 */
const de_AwsCertificateManagerCertificateDomainValidationOption = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateDomainValidationOption => {
  return {
    DomainName: __expectString(output.DomainName),
    ResourceRecord:
      output.ResourceRecord != null
        ? de_AwsCertificateManagerCertificateResourceRecord(output.ResourceRecord, context)
        : undefined,
    ValidationDomain: __expectString(output.ValidationDomain),
    ValidationEmails: output.ValidationEmails != null ? de_StringList(output.ValidationEmails, context) : undefined,
    ValidationMethod: __expectString(output.ValidationMethod),
    ValidationStatus: __expectString(output.ValidationStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateDomainValidationOptions
 */
const de_AwsCertificateManagerCertificateDomainValidationOptions = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateDomainValidationOption[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCertificateManagerCertificateDomainValidationOption(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateExtendedKeyUsage
 */
const de_AwsCertificateManagerCertificateExtendedKeyUsage = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateExtendedKeyUsage => {
  return {
    Name: __expectString(output.Name),
    OId: __expectString(output.OId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateExtendedKeyUsages
 */
const de_AwsCertificateManagerCertificateExtendedKeyUsages = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateExtendedKeyUsage[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCertificateManagerCertificateExtendedKeyUsage(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateKeyUsage
 */
const de_AwsCertificateManagerCertificateKeyUsage = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateKeyUsage => {
  return {
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateKeyUsages
 */
const de_AwsCertificateManagerCertificateKeyUsages = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateKeyUsage[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCertificateManagerCertificateKeyUsage(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateOptions
 */
const de_AwsCertificateManagerCertificateOptions = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateOptions => {
  return {
    CertificateTransparencyLoggingPreference: __expectString(output.CertificateTransparencyLoggingPreference),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateRenewalSummary
 */
const de_AwsCertificateManagerCertificateRenewalSummary = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateRenewalSummary => {
  return {
    DomainValidationOptions:
      output.DomainValidationOptions != null
        ? de_AwsCertificateManagerCertificateDomainValidationOptions(output.DomainValidationOptions, context)
        : undefined,
    RenewalStatus: __expectString(output.RenewalStatus),
    RenewalStatusReason: __expectString(output.RenewalStatusReason),
    UpdatedAt: __expectString(output.UpdatedAt),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCertificateManagerCertificateResourceRecord
 */
const de_AwsCertificateManagerCertificateResourceRecord = (
  output: any,
  context: __SerdeContext
): AwsCertificateManagerCertificateResourceRecord => {
  return {
    Name: __expectString(output.Name),
    Type: __expectString(output.Type),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFormationStackDetails
 */
const de_AwsCloudFormationStackDetails = (output: any, context: __SerdeContext): AwsCloudFormationStackDetails => {
  return {
    Capabilities: output.Capabilities != null ? de_NonEmptyStringList(output.Capabilities, context) : undefined,
    CreationTime: __expectString(output.CreationTime),
    Description: __expectString(output.Description),
    DisableRollback: __expectBoolean(output.DisableRollback),
    DriftInformation:
      output.DriftInformation != null
        ? de_AwsCloudFormationStackDriftInformationDetails(output.DriftInformation, context)
        : undefined,
    EnableTerminationProtection: __expectBoolean(output.EnableTerminationProtection),
    LastUpdatedTime: __expectString(output.LastUpdatedTime),
    NotificationArns:
      output.NotificationArns != null ? de_NonEmptyStringList(output.NotificationArns, context) : undefined,
    Outputs: output.Outputs != null ? de_AwsCloudFormationStackOutputsList(output.Outputs, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StackId: __expectString(output.StackId),
    StackName: __expectString(output.StackName),
    StackStatus: __expectString(output.StackStatus),
    StackStatusReason: __expectString(output.StackStatusReason),
    TimeoutInMinutes: __expectInt32(output.TimeoutInMinutes),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFormationStackDriftInformationDetails
 */
const de_AwsCloudFormationStackDriftInformationDetails = (
  output: any,
  context: __SerdeContext
): AwsCloudFormationStackDriftInformationDetails => {
  return {
    StackDriftStatus: __expectString(output.StackDriftStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFormationStackOutputsDetails
 */
const de_AwsCloudFormationStackOutputsDetails = (
  output: any,
  context: __SerdeContext
): AwsCloudFormationStackOutputsDetails => {
  return {
    Description: __expectString(output.Description),
    OutputKey: __expectString(output.OutputKey),
    OutputValue: __expectString(output.OutputValue),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFormationStackOutputsList
 */
const de_AwsCloudFormationStackOutputsList = (
  output: any,
  context: __SerdeContext
): AwsCloudFormationStackOutputsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCloudFormationStackOutputsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionCacheBehavior
 */
const de_AwsCloudFrontDistributionCacheBehavior = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionCacheBehavior => {
  return {
    ViewerProtocolPolicy: __expectString(output.ViewerProtocolPolicy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionCacheBehaviors
 */
const de_AwsCloudFrontDistributionCacheBehaviors = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionCacheBehaviors => {
  return {
    Items: output.Items != null ? de_AwsCloudFrontDistributionCacheBehaviorsItemList(output.Items, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionCacheBehaviorsItemList
 */
const de_AwsCloudFrontDistributionCacheBehaviorsItemList = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionCacheBehavior[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCloudFrontDistributionCacheBehavior(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionDefaultCacheBehavior
 */
const de_AwsCloudFrontDistributionDefaultCacheBehavior = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionDefaultCacheBehavior => {
  return {
    ViewerProtocolPolicy: __expectString(output.ViewerProtocolPolicy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionDetails
 */
const de_AwsCloudFrontDistributionDetails = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionDetails => {
  return {
    CacheBehaviors:
      output.CacheBehaviors != null
        ? de_AwsCloudFrontDistributionCacheBehaviors(output.CacheBehaviors, context)
        : undefined,
    DefaultCacheBehavior:
      output.DefaultCacheBehavior != null
        ? de_AwsCloudFrontDistributionDefaultCacheBehavior(output.DefaultCacheBehavior, context)
        : undefined,
    DefaultRootObject: __expectString(output.DefaultRootObject),
    DomainName: __expectString(output.DomainName),
    ETag: __expectString(output.ETag),
    LastModifiedTime: __expectString(output.LastModifiedTime),
    Logging: output.Logging != null ? de_AwsCloudFrontDistributionLogging(output.Logging, context) : undefined,
    OriginGroups:
      output.OriginGroups != null ? de_AwsCloudFrontDistributionOriginGroups(output.OriginGroups, context) : undefined,
    Origins: output.Origins != null ? de_AwsCloudFrontDistributionOrigins(output.Origins, context) : undefined,
    Status: __expectString(output.Status),
    ViewerCertificate:
      output.ViewerCertificate != null
        ? de_AwsCloudFrontDistributionViewerCertificate(output.ViewerCertificate, context)
        : undefined,
    WebAclId: __expectString(output.WebAclId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionLogging
 */
const de_AwsCloudFrontDistributionLogging = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionLogging => {
  return {
    Bucket: __expectString(output.Bucket),
    Enabled: __expectBoolean(output.Enabled),
    IncludeCookies: __expectBoolean(output.IncludeCookies),
    Prefix: __expectString(output.Prefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginCustomOriginConfig
 */
const de_AwsCloudFrontDistributionOriginCustomOriginConfig = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginCustomOriginConfig => {
  return {
    HttpPort: __expectInt32(output.HttpPort),
    HttpsPort: __expectInt32(output.HttpsPort),
    OriginKeepaliveTimeout: __expectInt32(output.OriginKeepaliveTimeout),
    OriginProtocolPolicy: __expectString(output.OriginProtocolPolicy),
    OriginReadTimeout: __expectInt32(output.OriginReadTimeout),
    OriginSslProtocols:
      output.OriginSslProtocols != null
        ? de_AwsCloudFrontDistributionOriginSslProtocols(output.OriginSslProtocols, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroup
 */
const de_AwsCloudFrontDistributionOriginGroup = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginGroup => {
  return {
    FailoverCriteria:
      output.FailoverCriteria != null
        ? de_AwsCloudFrontDistributionOriginGroupFailover(output.FailoverCriteria, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailover
 */
const de_AwsCloudFrontDistributionOriginGroupFailover = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginGroupFailover => {
  return {
    StatusCodes:
      output.StatusCodes != null
        ? de_AwsCloudFrontDistributionOriginGroupFailoverStatusCodes(output.StatusCodes, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailoverStatusCodes
 */
const de_AwsCloudFrontDistributionOriginGroupFailoverStatusCodes = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginGroupFailoverStatusCodes => {
  return {
    Items:
      output.Items != null
        ? de_AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList(output.Items, context)
        : undefined,
    Quantity: __expectInt32(output.Quantity),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList
 */
const de_AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList = (
  output: any,
  context: __SerdeContext
): number[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectInt32(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroups
 */
const de_AwsCloudFrontDistributionOriginGroups = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginGroups => {
  return {
    Items: output.Items != null ? de_AwsCloudFrontDistributionOriginGroupsItemList(output.Items, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginGroupsItemList
 */
const de_AwsCloudFrontDistributionOriginGroupsItemList = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCloudFrontDistributionOriginGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginItem
 */
const de_AwsCloudFrontDistributionOriginItem = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginItem => {
  return {
    CustomOriginConfig:
      output.CustomOriginConfig != null
        ? de_AwsCloudFrontDistributionOriginCustomOriginConfig(output.CustomOriginConfig, context)
        : undefined,
    DomainName: __expectString(output.DomainName),
    Id: __expectString(output.Id),
    OriginPath: __expectString(output.OriginPath),
    S3OriginConfig:
      output.S3OriginConfig != null
        ? de_AwsCloudFrontDistributionOriginS3OriginConfig(output.S3OriginConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginItemList
 */
const de_AwsCloudFrontDistributionOriginItemList = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginItem[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCloudFrontDistributionOriginItem(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOrigins
 */
const de_AwsCloudFrontDistributionOrigins = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOrigins => {
  return {
    Items: output.Items != null ? de_AwsCloudFrontDistributionOriginItemList(output.Items, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginS3OriginConfig
 */
const de_AwsCloudFrontDistributionOriginS3OriginConfig = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginS3OriginConfig => {
  return {
    OriginAccessIdentity: __expectString(output.OriginAccessIdentity),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionOriginSslProtocols
 */
const de_AwsCloudFrontDistributionOriginSslProtocols = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionOriginSslProtocols => {
  return {
    Items: output.Items != null ? de_NonEmptyStringList(output.Items, context) : undefined,
    Quantity: __expectInt32(output.Quantity),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudFrontDistributionViewerCertificate
 */
const de_AwsCloudFrontDistributionViewerCertificate = (
  output: any,
  context: __SerdeContext
): AwsCloudFrontDistributionViewerCertificate => {
  return {
    AcmCertificateArn: __expectString(output.AcmCertificateArn),
    Certificate: __expectString(output.Certificate),
    CertificateSource: __expectString(output.CertificateSource),
    CloudFrontDefaultCertificate: __expectBoolean(output.CloudFrontDefaultCertificate),
    IamCertificateId: __expectString(output.IamCertificateId),
    MinimumProtocolVersion: __expectString(output.MinimumProtocolVersion),
    SslSupportMethod: __expectString(output.SslSupportMethod),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudTrailTrailDetails
 */
const de_AwsCloudTrailTrailDetails = (output: any, context: __SerdeContext): AwsCloudTrailTrailDetails => {
  return {
    CloudWatchLogsLogGroupArn: __expectString(output.CloudWatchLogsLogGroupArn),
    CloudWatchLogsRoleArn: __expectString(output.CloudWatchLogsRoleArn),
    HasCustomEventSelectors: __expectBoolean(output.HasCustomEventSelectors),
    HomeRegion: __expectString(output.HomeRegion),
    IncludeGlobalServiceEvents: __expectBoolean(output.IncludeGlobalServiceEvents),
    IsMultiRegionTrail: __expectBoolean(output.IsMultiRegionTrail),
    IsOrganizationTrail: __expectBoolean(output.IsOrganizationTrail),
    KmsKeyId: __expectString(output.KmsKeyId),
    LogFileValidationEnabled: __expectBoolean(output.LogFileValidationEnabled),
    Name: __expectString(output.Name),
    S3BucketName: __expectString(output.S3BucketName),
    S3KeyPrefix: __expectString(output.S3KeyPrefix),
    SnsTopicArn: __expectString(output.SnsTopicArn),
    SnsTopicName: __expectString(output.SnsTopicName),
    TrailArn: __expectString(output.TrailArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudWatchAlarmDetails
 */
const de_AwsCloudWatchAlarmDetails = (output: any, context: __SerdeContext): AwsCloudWatchAlarmDetails => {
  return {
    ActionsEnabled: __expectBoolean(output.ActionsEnabled),
    AlarmActions: output.AlarmActions != null ? de_NonEmptyStringList(output.AlarmActions, context) : undefined,
    AlarmArn: __expectString(output.AlarmArn),
    AlarmConfigurationUpdatedTimestamp: __expectString(output.AlarmConfigurationUpdatedTimestamp),
    AlarmDescription: __expectString(output.AlarmDescription),
    AlarmName: __expectString(output.AlarmName),
    ComparisonOperator: __expectString(output.ComparisonOperator),
    DatapointsToAlarm: __expectInt32(output.DatapointsToAlarm),
    Dimensions: output.Dimensions != null ? de_AwsCloudWatchAlarmDimensionsList(output.Dimensions, context) : undefined,
    EvaluateLowSampleCountPercentile: __expectString(output.EvaluateLowSampleCountPercentile),
    EvaluationPeriods: __expectInt32(output.EvaluationPeriods),
    ExtendedStatistic: __expectString(output.ExtendedStatistic),
    InsufficientDataActions:
      output.InsufficientDataActions != null
        ? de_NonEmptyStringList(output.InsufficientDataActions, context)
        : undefined,
    MetricName: __expectString(output.MetricName),
    Namespace: __expectString(output.Namespace),
    OkActions: output.OkActions != null ? de_NonEmptyStringList(output.OkActions, context) : undefined,
    Period: __expectInt32(output.Period),
    Statistic: __expectString(output.Statistic),
    Threshold: __limitedParseDouble(output.Threshold),
    ThresholdMetricId: __expectString(output.ThresholdMetricId),
    TreatMissingData: __expectString(output.TreatMissingData),
    Unit: __expectString(output.Unit),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudWatchAlarmDimensionsDetails
 */
const de_AwsCloudWatchAlarmDimensionsDetails = (
  output: any,
  context: __SerdeContext
): AwsCloudWatchAlarmDimensionsDetails => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCloudWatchAlarmDimensionsList
 */
const de_AwsCloudWatchAlarmDimensionsList = (
  output: any,
  context: __SerdeContext
): AwsCloudWatchAlarmDimensionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCloudWatchAlarmDimensionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectArtifactsDetails
 */
const de_AwsCodeBuildProjectArtifactsDetails = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectArtifactsDetails => {
  return {
    ArtifactIdentifier: __expectString(output.ArtifactIdentifier),
    EncryptionDisabled: __expectBoolean(output.EncryptionDisabled),
    Location: __expectString(output.Location),
    Name: __expectString(output.Name),
    NamespaceType: __expectString(output.NamespaceType),
    OverrideArtifactName: __expectBoolean(output.OverrideArtifactName),
    Packaging: __expectString(output.Packaging),
    Path: __expectString(output.Path),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectArtifactsList
 */
const de_AwsCodeBuildProjectArtifactsList = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectArtifactsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCodeBuildProjectArtifactsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectDetails
 */
const de_AwsCodeBuildProjectDetails = (output: any, context: __SerdeContext): AwsCodeBuildProjectDetails => {
  return {
    Artifacts: output.Artifacts != null ? de_AwsCodeBuildProjectArtifactsList(output.Artifacts, context) : undefined,
    EncryptionKey: __expectString(output.EncryptionKey),
    Environment:
      output.Environment != null ? de_AwsCodeBuildProjectEnvironment(output.Environment, context) : undefined,
    LogsConfig:
      output.LogsConfig != null ? de_AwsCodeBuildProjectLogsConfigDetails(output.LogsConfig, context) : undefined,
    Name: __expectString(output.Name),
    SecondaryArtifacts:
      output.SecondaryArtifacts != null
        ? de_AwsCodeBuildProjectArtifactsList(output.SecondaryArtifacts, context)
        : undefined,
    ServiceRole: __expectString(output.ServiceRole),
    Source: output.Source != null ? de_AwsCodeBuildProjectSource(output.Source, context) : undefined,
    VpcConfig: output.VpcConfig != null ? de_AwsCodeBuildProjectVpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectEnvironment
 */
const de_AwsCodeBuildProjectEnvironment = (output: any, context: __SerdeContext): AwsCodeBuildProjectEnvironment => {
  return {
    Certificate: __expectString(output.Certificate),
    EnvironmentVariables:
      output.EnvironmentVariables != null
        ? de_AwsCodeBuildProjectEnvironmentEnvironmentVariablesList(output.EnvironmentVariables, context)
        : undefined,
    ImagePullCredentialsType: __expectString(output.ImagePullCredentialsType),
    PrivilegedMode: __expectBoolean(output.PrivilegedMode),
    RegistryCredential:
      output.RegistryCredential != null
        ? de_AwsCodeBuildProjectEnvironmentRegistryCredential(output.RegistryCredential, context)
        : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails
 */
const de_AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails => {
  return {
    Name: __expectString(output.Name),
    Type: __expectString(output.Type),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectEnvironmentEnvironmentVariablesList
 */
const de_AwsCodeBuildProjectEnvironmentEnvironmentVariablesList = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectEnvironmentRegistryCredential
 */
const de_AwsCodeBuildProjectEnvironmentRegistryCredential = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectEnvironmentRegistryCredential => {
  return {
    Credential: __expectString(output.Credential),
    CredentialProvider: __expectString(output.CredentialProvider),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails
 */
const de_AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails => {
  return {
    GroupName: __expectString(output.GroupName),
    Status: __expectString(output.Status),
    StreamName: __expectString(output.StreamName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectLogsConfigDetails
 */
const de_AwsCodeBuildProjectLogsConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectLogsConfigDetails => {
  return {
    CloudWatchLogs:
      output.CloudWatchLogs != null
        ? de_AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails(output.CloudWatchLogs, context)
        : undefined,
    S3Logs: output.S3Logs != null ? de_AwsCodeBuildProjectLogsConfigS3LogsDetails(output.S3Logs, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectLogsConfigS3LogsDetails
 */
const de_AwsCodeBuildProjectLogsConfigS3LogsDetails = (
  output: any,
  context: __SerdeContext
): AwsCodeBuildProjectLogsConfigS3LogsDetails => {
  return {
    EncryptionDisabled: __expectBoolean(output.EncryptionDisabled),
    Location: __expectString(output.Location),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectSource
 */
const de_AwsCodeBuildProjectSource = (output: any, context: __SerdeContext): AwsCodeBuildProjectSource => {
  return {
    GitCloneDepth: __expectInt32(output.GitCloneDepth),
    InsecureSsl: __expectBoolean(output.InsecureSsl),
    Location: __expectString(output.Location),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCodeBuildProjectVpcConfig
 */
const de_AwsCodeBuildProjectVpcConfig = (output: any, context: __SerdeContext): AwsCodeBuildProjectVpcConfig => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NonEmptyStringList(output.SecurityGroupIds, context) : undefined,
    Subnets: output.Subnets != null ? de_NonEmptyStringList(output.Subnets, context) : undefined,
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsCorsConfiguration
 */
const de_AwsCorsConfiguration = (output: any, context: __SerdeContext): AwsCorsConfiguration => {
  return {
    AllowCredentials: __expectBoolean(output.AllowCredentials),
    AllowHeaders: output.AllowHeaders != null ? de_NonEmptyStringList(output.AllowHeaders, context) : undefined,
    AllowMethods: output.AllowMethods != null ? de_NonEmptyStringList(output.AllowMethods, context) : undefined,
    AllowOrigins: output.AllowOrigins != null ? de_NonEmptyStringList(output.AllowOrigins, context) : undefined,
    ExposeHeaders: output.ExposeHeaders != null ? de_NonEmptyStringList(output.ExposeHeaders, context) : undefined,
    MaxAge: __expectInt32(output.MaxAge),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableAttributeDefinition
 */
const de_AwsDynamoDbTableAttributeDefinition = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableAttributeDefinition => {
  return {
    AttributeName: __expectString(output.AttributeName),
    AttributeType: __expectString(output.AttributeType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableAttributeDefinitionList
 */
const de_AwsDynamoDbTableAttributeDefinitionList = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableAttributeDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableAttributeDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableBillingModeSummary
 */
const de_AwsDynamoDbTableBillingModeSummary = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableBillingModeSummary => {
  return {
    BillingMode: __expectString(output.BillingMode),
    LastUpdateToPayPerRequestDateTime: __expectString(output.LastUpdateToPayPerRequestDateTime),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableDetails
 */
const de_AwsDynamoDbTableDetails = (output: any, context: __SerdeContext): AwsDynamoDbTableDetails => {
  return {
    AttributeDefinitions:
      output.AttributeDefinitions != null
        ? de_AwsDynamoDbTableAttributeDefinitionList(output.AttributeDefinitions, context)
        : undefined,
    BillingModeSummary:
      output.BillingModeSummary != null
        ? de_AwsDynamoDbTableBillingModeSummary(output.BillingModeSummary, context)
        : undefined,
    CreationDateTime: __expectString(output.CreationDateTime),
    GlobalSecondaryIndexes:
      output.GlobalSecondaryIndexes != null
        ? de_AwsDynamoDbTableGlobalSecondaryIndexList(output.GlobalSecondaryIndexes, context)
        : undefined,
    GlobalTableVersion: __expectString(output.GlobalTableVersion),
    ItemCount: __expectInt32(output.ItemCount),
    KeySchema: output.KeySchema != null ? de_AwsDynamoDbTableKeySchemaList(output.KeySchema, context) : undefined,
    LatestStreamArn: __expectString(output.LatestStreamArn),
    LatestStreamLabel: __expectString(output.LatestStreamLabel),
    LocalSecondaryIndexes:
      output.LocalSecondaryIndexes != null
        ? de_AwsDynamoDbTableLocalSecondaryIndexList(output.LocalSecondaryIndexes, context)
        : undefined,
    ProvisionedThroughput:
      output.ProvisionedThroughput != null
        ? de_AwsDynamoDbTableProvisionedThroughput(output.ProvisionedThroughput, context)
        : undefined,
    Replicas: output.Replicas != null ? de_AwsDynamoDbTableReplicaList(output.Replicas, context) : undefined,
    RestoreSummary:
      output.RestoreSummary != null ? de_AwsDynamoDbTableRestoreSummary(output.RestoreSummary, context) : undefined,
    SseDescription:
      output.SseDescription != null ? de_AwsDynamoDbTableSseDescription(output.SseDescription, context) : undefined,
    StreamSpecification:
      output.StreamSpecification != null
        ? de_AwsDynamoDbTableStreamSpecification(output.StreamSpecification, context)
        : undefined,
    TableId: __expectString(output.TableId),
    TableName: __expectString(output.TableName),
    TableSizeBytes: __expectLong(output.TableSizeBytes),
    TableStatus: __expectString(output.TableStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableGlobalSecondaryIndex
 */
const de_AwsDynamoDbTableGlobalSecondaryIndex = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableGlobalSecondaryIndex => {
  return {
    Backfilling: __expectBoolean(output.Backfilling),
    IndexArn: __expectString(output.IndexArn),
    IndexName: __expectString(output.IndexName),
    IndexSizeBytes: __expectLong(output.IndexSizeBytes),
    IndexStatus: __expectString(output.IndexStatus),
    ItemCount: __expectInt32(output.ItemCount),
    KeySchema: output.KeySchema != null ? de_AwsDynamoDbTableKeySchemaList(output.KeySchema, context) : undefined,
    Projection: output.Projection != null ? de_AwsDynamoDbTableProjection(output.Projection, context) : undefined,
    ProvisionedThroughput:
      output.ProvisionedThroughput != null
        ? de_AwsDynamoDbTableProvisionedThroughput(output.ProvisionedThroughput, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableGlobalSecondaryIndexList
 */
const de_AwsDynamoDbTableGlobalSecondaryIndexList = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableGlobalSecondaryIndex[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableGlobalSecondaryIndex(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableKeySchema
 */
const de_AwsDynamoDbTableKeySchema = (output: any, context: __SerdeContext): AwsDynamoDbTableKeySchema => {
  return {
    AttributeName: __expectString(output.AttributeName),
    KeyType: __expectString(output.KeyType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableKeySchemaList
 */
const de_AwsDynamoDbTableKeySchemaList = (output: any, context: __SerdeContext): AwsDynamoDbTableKeySchema[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableKeySchema(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableLocalSecondaryIndex
 */
const de_AwsDynamoDbTableLocalSecondaryIndex = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableLocalSecondaryIndex => {
  return {
    IndexArn: __expectString(output.IndexArn),
    IndexName: __expectString(output.IndexName),
    KeySchema: output.KeySchema != null ? de_AwsDynamoDbTableKeySchemaList(output.KeySchema, context) : undefined,
    Projection: output.Projection != null ? de_AwsDynamoDbTableProjection(output.Projection, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableLocalSecondaryIndexList
 */
const de_AwsDynamoDbTableLocalSecondaryIndexList = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableLocalSecondaryIndex[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableLocalSecondaryIndex(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableProjection
 */
const de_AwsDynamoDbTableProjection = (output: any, context: __SerdeContext): AwsDynamoDbTableProjection => {
  return {
    NonKeyAttributes: output.NonKeyAttributes != null ? de_StringList(output.NonKeyAttributes, context) : undefined,
    ProjectionType: __expectString(output.ProjectionType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableProvisionedThroughput
 */
const de_AwsDynamoDbTableProvisionedThroughput = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableProvisionedThroughput => {
  return {
    LastDecreaseDateTime: __expectString(output.LastDecreaseDateTime),
    LastIncreaseDateTime: __expectString(output.LastIncreaseDateTime),
    NumberOfDecreasesToday: __expectInt32(output.NumberOfDecreasesToday),
    ReadCapacityUnits: __expectInt32(output.ReadCapacityUnits),
    WriteCapacityUnits: __expectInt32(output.WriteCapacityUnits),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableProvisionedThroughputOverride
 */
const de_AwsDynamoDbTableProvisionedThroughputOverride = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableProvisionedThroughputOverride => {
  return {
    ReadCapacityUnits: __expectInt32(output.ReadCapacityUnits),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableReplica
 */
const de_AwsDynamoDbTableReplica = (output: any, context: __SerdeContext): AwsDynamoDbTableReplica => {
  return {
    GlobalSecondaryIndexes:
      output.GlobalSecondaryIndexes != null
        ? de_AwsDynamoDbTableReplicaGlobalSecondaryIndexList(output.GlobalSecondaryIndexes, context)
        : undefined,
    KmsMasterKeyId: __expectString(output.KmsMasterKeyId),
    ProvisionedThroughputOverride:
      output.ProvisionedThroughputOverride != null
        ? de_AwsDynamoDbTableProvisionedThroughputOverride(output.ProvisionedThroughputOverride, context)
        : undefined,
    RegionName: __expectString(output.RegionName),
    ReplicaStatus: __expectString(output.ReplicaStatus),
    ReplicaStatusDescription: __expectString(output.ReplicaStatusDescription),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableReplicaGlobalSecondaryIndex
 */
const de_AwsDynamoDbTableReplicaGlobalSecondaryIndex = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableReplicaGlobalSecondaryIndex => {
  return {
    IndexName: __expectString(output.IndexName),
    ProvisionedThroughputOverride:
      output.ProvisionedThroughputOverride != null
        ? de_AwsDynamoDbTableProvisionedThroughputOverride(output.ProvisionedThroughputOverride, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableReplicaGlobalSecondaryIndexList
 */
const de_AwsDynamoDbTableReplicaGlobalSecondaryIndexList = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableReplicaGlobalSecondaryIndex[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableReplicaGlobalSecondaryIndex(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableReplicaList
 */
const de_AwsDynamoDbTableReplicaList = (output: any, context: __SerdeContext): AwsDynamoDbTableReplica[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsDynamoDbTableReplica(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableRestoreSummary
 */
const de_AwsDynamoDbTableRestoreSummary = (output: any, context: __SerdeContext): AwsDynamoDbTableRestoreSummary => {
  return {
    RestoreDateTime: __expectString(output.RestoreDateTime),
    RestoreInProgress: __expectBoolean(output.RestoreInProgress),
    SourceBackupArn: __expectString(output.SourceBackupArn),
    SourceTableArn: __expectString(output.SourceTableArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableSseDescription
 */
const de_AwsDynamoDbTableSseDescription = (output: any, context: __SerdeContext): AwsDynamoDbTableSseDescription => {
  return {
    InaccessibleEncryptionDateTime: __expectString(output.InaccessibleEncryptionDateTime),
    KmsMasterKeyArn: __expectString(output.KmsMasterKeyArn),
    SseType: __expectString(output.SseType),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsDynamoDbTableStreamSpecification
 */
const de_AwsDynamoDbTableStreamSpecification = (
  output: any,
  context: __SerdeContext
): AwsDynamoDbTableStreamSpecification => {
  return {
    StreamEnabled: __expectBoolean(output.StreamEnabled),
    StreamViewType: __expectString(output.StreamViewType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2EipDetails
 */
const de_AwsEc2EipDetails = (output: any, context: __SerdeContext): AwsEc2EipDetails => {
  return {
    AllocationId: __expectString(output.AllocationId),
    AssociationId: __expectString(output.AssociationId),
    Domain: __expectString(output.Domain),
    InstanceId: __expectString(output.InstanceId),
    NetworkBorderGroup: __expectString(output.NetworkBorderGroup),
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    NetworkInterfaceOwnerId: __expectString(output.NetworkInterfaceOwnerId),
    PrivateIpAddress: __expectString(output.PrivateIpAddress),
    PublicIp: __expectString(output.PublicIp),
    PublicIpv4Pool: __expectString(output.PublicIpv4Pool),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2InstanceDetails
 */
const de_AwsEc2InstanceDetails = (output: any, context: __SerdeContext): AwsEc2InstanceDetails => {
  return {
    IamInstanceProfileArn: __expectString(output.IamInstanceProfileArn),
    ImageId: __expectString(output.ImageId),
    IpV4Addresses: output.IpV4Addresses != null ? de_StringList(output.IpV4Addresses, context) : undefined,
    IpV6Addresses: output.IpV6Addresses != null ? de_StringList(output.IpV6Addresses, context) : undefined,
    KeyName: __expectString(output.KeyName),
    LaunchedAt: __expectString(output.LaunchedAt),
    MetadataOptions:
      output.MetadataOptions != null ? de_AwsEc2InstanceMetadataOptions(output.MetadataOptions, context) : undefined,
    Monitoring: output.Monitoring != null ? de_AwsEc2InstanceMonitoringDetails(output.Monitoring, context) : undefined,
    NetworkInterfaces:
      output.NetworkInterfaces != null
        ? de_AwsEc2InstanceNetworkInterfacesList(output.NetworkInterfaces, context)
        : undefined,
    SubnetId: __expectString(output.SubnetId),
    Type: __expectString(output.Type),
    VirtualizationType: __expectString(output.VirtualizationType),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2InstanceMetadataOptions
 */
const de_AwsEc2InstanceMetadataOptions = (output: any, context: __SerdeContext): AwsEc2InstanceMetadataOptions => {
  return {
    HttpEndpoint: __expectString(output.HttpEndpoint),
    HttpProtocolIpv6: __expectString(output.HttpProtocolIpv6),
    HttpPutResponseHopLimit: __expectInt32(output.HttpPutResponseHopLimit),
    HttpTokens: __expectString(output.HttpTokens),
    InstanceMetadataTags: __expectString(output.InstanceMetadataTags),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2InstanceMonitoringDetails
 */
const de_AwsEc2InstanceMonitoringDetails = (output: any, context: __SerdeContext): AwsEc2InstanceMonitoringDetails => {
  return {
    State: __expectString(output.State),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2InstanceNetworkInterfacesDetails
 */
const de_AwsEc2InstanceNetworkInterfacesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2InstanceNetworkInterfacesDetails => {
  return {
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2InstanceNetworkInterfacesList
 */
const de_AwsEc2InstanceNetworkInterfacesList = (
  output: any,
  context: __SerdeContext
): AwsEc2InstanceNetworkInterfacesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2InstanceNetworkInterfacesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails
 */
const de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails => {
  return {
    DeviceName: __expectString(output.DeviceName),
    Ebs:
      output.Ebs != null ? de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails(output.Ebs, context) : undefined,
    NoDevice: __expectString(output.NoDevice),
    VirtualName: __expectString(output.VirtualName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails
 */
const de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails => {
  return {
    DeleteOnTermination: __expectBoolean(output.DeleteOnTermination),
    Encrypted: __expectBoolean(output.Encrypted),
    Iops: __expectInt32(output.Iops),
    KmsKeyId: __expectString(output.KmsKeyId),
    SnapshotId: __expectString(output.SnapshotId),
    Throughput: __expectInt32(output.Throughput),
    VolumeSize: __expectInt32(output.VolumeSize),
    VolumeType: __expectString(output.VolumeType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataBlockDeviceMappingSetList
 */
const de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails
 */
const de_AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails => {
  return {
    CapacityReservationId: __expectString(output.CapacityReservationId),
    CapacityReservationResourceGroupArn: __expectString(output.CapacityReservationResourceGroupArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails
 */
const de_AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails => {
  return {
    CapacityReservationPreference: __expectString(output.CapacityReservationPreference),
    CapacityReservationTarget:
      output.CapacityReservationTarget != null
        ? de_AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails(
            output.CapacityReservationTarget,
            context
          )
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataCpuOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataCpuOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataCpuOptionsDetails => {
  return {
    CoreCount: __expectInt32(output.CoreCount),
    ThreadsPerCore: __expectInt32(output.ThreadsPerCore),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataCreditSpecificationDetails
 */
const de_AwsEc2LaunchTemplateDataCreditSpecificationDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataCreditSpecificationDetails => {
  return {
    CpuCredits: __expectString(output.CpuCredits),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataDetails
 */
const de_AwsEc2LaunchTemplateDataDetails = (output: any, context: __SerdeContext): AwsEc2LaunchTemplateDataDetails => {
  return {
    BlockDeviceMappingSet:
      output.BlockDeviceMappingSet != null
        ? de_AwsEc2LaunchTemplateDataBlockDeviceMappingSetList(output.BlockDeviceMappingSet, context)
        : undefined,
    CapacityReservationSpecification:
      output.CapacityReservationSpecification != null
        ? de_AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails(
            output.CapacityReservationSpecification,
            context
          )
        : undefined,
    CpuOptions:
      output.CpuOptions != null ? de_AwsEc2LaunchTemplateDataCpuOptionsDetails(output.CpuOptions, context) : undefined,
    CreditSpecification:
      output.CreditSpecification != null
        ? de_AwsEc2LaunchTemplateDataCreditSpecificationDetails(output.CreditSpecification, context)
        : undefined,
    DisableApiStop: __expectBoolean(output.DisableApiStop),
    DisableApiTermination: __expectBoolean(output.DisableApiTermination),
    EbsOptimized: __expectBoolean(output.EbsOptimized),
    ElasticGpuSpecificationSet:
      output.ElasticGpuSpecificationSet != null
        ? de_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList(output.ElasticGpuSpecificationSet, context)
        : undefined,
    ElasticInferenceAcceleratorSet:
      output.ElasticInferenceAcceleratorSet != null
        ? de_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList(output.ElasticInferenceAcceleratorSet, context)
        : undefined,
    EnclaveOptions:
      output.EnclaveOptions != null
        ? de_AwsEc2LaunchTemplateDataEnclaveOptionsDetails(output.EnclaveOptions, context)
        : undefined,
    HibernationOptions:
      output.HibernationOptions != null
        ? de_AwsEc2LaunchTemplateDataHibernationOptionsDetails(output.HibernationOptions, context)
        : undefined,
    IamInstanceProfile:
      output.IamInstanceProfile != null
        ? de_AwsEc2LaunchTemplateDataIamInstanceProfileDetails(output.IamInstanceProfile, context)
        : undefined,
    ImageId: __expectString(output.ImageId),
    InstanceInitiatedShutdownBehavior: __expectString(output.InstanceInitiatedShutdownBehavior),
    InstanceMarketOptions:
      output.InstanceMarketOptions != null
        ? de_AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails(output.InstanceMarketOptions, context)
        : undefined,
    InstanceRequirements:
      output.InstanceRequirements != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsDetails(output.InstanceRequirements, context)
        : undefined,
    InstanceType: __expectString(output.InstanceType),
    KernelId: __expectString(output.KernelId),
    KeyName: __expectString(output.KeyName),
    LicenseSet:
      output.LicenseSet != null ? de_AwsEc2LaunchTemplateDataLicenseSetList(output.LicenseSet, context) : undefined,
    MaintenanceOptions:
      output.MaintenanceOptions != null
        ? de_AwsEc2LaunchTemplateDataMaintenanceOptionsDetails(output.MaintenanceOptions, context)
        : undefined,
    MetadataOptions:
      output.MetadataOptions != null
        ? de_AwsEc2LaunchTemplateDataMetadataOptionsDetails(output.MetadataOptions, context)
        : undefined,
    Monitoring:
      output.Monitoring != null ? de_AwsEc2LaunchTemplateDataMonitoringDetails(output.Monitoring, context) : undefined,
    NetworkInterfaceSet:
      output.NetworkInterfaceSet != null
        ? de_AwsEc2LaunchTemplateDataNetworkInterfaceSetList(output.NetworkInterfaceSet, context)
        : undefined,
    Placement:
      output.Placement != null ? de_AwsEc2LaunchTemplateDataPlacementDetails(output.Placement, context) : undefined,
    PrivateDnsNameOptions:
      output.PrivateDnsNameOptions != null
        ? de_AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails(output.PrivateDnsNameOptions, context)
        : undefined,
    RamDiskId: __expectString(output.RamDiskId),
    SecurityGroupIdSet:
      output.SecurityGroupIdSet != null ? de_NonEmptyStringList(output.SecurityGroupIdSet, context) : undefined,
    SecurityGroupSet:
      output.SecurityGroupSet != null ? de_NonEmptyStringList(output.SecurityGroupSet, context) : undefined,
    UserData: __expectString(output.UserData),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails
 */
const de_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList
 */
const de_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails
 */
const de_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails => {
  return {
    Count: __expectInt32(output.Count),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList
 */
const de_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataEnclaveOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataEnclaveOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataEnclaveOptionsDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataHibernationOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataHibernationOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataHibernationOptionsDetails => {
  return {
    Configured: __expectBoolean(output.Configured),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataIamInstanceProfileDetails
 */
const de_AwsEc2LaunchTemplateDataIamInstanceProfileDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataIamInstanceProfileDetails => {
  return {
    Arn: __expectString(output.Arn),
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails => {
  return {
    MarketType: __expectString(output.MarketType),
    SpotOptions:
      output.SpotOptions != null
        ? de_AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails(output.SpotOptions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails => {
  return {
    BlockDurationMinutes: __expectInt32(output.BlockDurationMinutes),
    InstanceInterruptionBehavior: __expectString(output.InstanceInterruptionBehavior),
    MaxPrice: __expectString(output.MaxPrice),
    SpotInstanceType: __expectString(output.SpotInstanceType),
    ValidUntil: __expectString(output.ValidUntil),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsDetails => {
  return {
    AcceleratorCount:
      output.AcceleratorCount != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails(output.AcceleratorCount, context)
        : undefined,
    AcceleratorManufacturers:
      output.AcceleratorManufacturers != null
        ? de_NonEmptyStringList(output.AcceleratorManufacturers, context)
        : undefined,
    AcceleratorNames:
      output.AcceleratorNames != null ? de_NonEmptyStringList(output.AcceleratorNames, context) : undefined,
    AcceleratorTotalMemoryMiB:
      output.AcceleratorTotalMemoryMiB != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails(
            output.AcceleratorTotalMemoryMiB,
            context
          )
        : undefined,
    AcceleratorTypes:
      output.AcceleratorTypes != null ? de_NonEmptyStringList(output.AcceleratorTypes, context) : undefined,
    BareMetal: __expectString(output.BareMetal),
    BaselineEbsBandwidthMbps:
      output.BaselineEbsBandwidthMbps != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails(
            output.BaselineEbsBandwidthMbps,
            context
          )
        : undefined,
    BurstablePerformance: __expectString(output.BurstablePerformance),
    CpuManufacturers:
      output.CpuManufacturers != null ? de_NonEmptyStringList(output.CpuManufacturers, context) : undefined,
    ExcludedInstanceTypes:
      output.ExcludedInstanceTypes != null ? de_NonEmptyStringList(output.ExcludedInstanceTypes, context) : undefined,
    InstanceGenerations:
      output.InstanceGenerations != null ? de_NonEmptyStringList(output.InstanceGenerations, context) : undefined,
    LocalStorage: __expectString(output.LocalStorage),
    LocalStorageTypes:
      output.LocalStorageTypes != null ? de_NonEmptyStringList(output.LocalStorageTypes, context) : undefined,
    MemoryGiBPerVCpu:
      output.MemoryGiBPerVCpu != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails(output.MemoryGiBPerVCpu, context)
        : undefined,
    MemoryMiB:
      output.MemoryMiB != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails(output.MemoryMiB, context)
        : undefined,
    NetworkInterfaceCount:
      output.NetworkInterfaceCount != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails(
            output.NetworkInterfaceCount,
            context
          )
        : undefined,
    OnDemandMaxPricePercentageOverLowestPrice: __expectInt32(output.OnDemandMaxPricePercentageOverLowestPrice),
    RequireHibernateSupport: __expectBoolean(output.RequireHibernateSupport),
    SpotMaxPricePercentageOverLowestPrice: __expectInt32(output.SpotMaxPricePercentageOverLowestPrice),
    TotalLocalStorageGB:
      output.TotalLocalStorageGB != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails(output.TotalLocalStorageGB, context)
        : undefined,
    VCpuCount:
      output.VCpuCount != null
        ? de_AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails(output.VCpuCount, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails => {
  return {
    Max: __limitedParseDouble(output.Max),
    Min: __limitedParseDouble(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails => {
  return {
    Max: __limitedParseDouble(output.Max),
    Min: __limitedParseDouble(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails
 */
const de_AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails => {
  return {
    Max: __expectInt32(output.Max),
    Min: __expectInt32(output.Min),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataLicenseSetDetails
 */
const de_AwsEc2LaunchTemplateDataLicenseSetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataLicenseSetDetails => {
  return {
    LicenseConfigurationArn: __expectString(output.LicenseConfigurationArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataLicenseSetList
 */
const de_AwsEc2LaunchTemplateDataLicenseSetList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataLicenseSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataLicenseSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataMaintenanceOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataMaintenanceOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataMaintenanceOptionsDetails => {
  return {
    AutoRecovery: __expectString(output.AutoRecovery),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataMetadataOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataMetadataOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataMetadataOptionsDetails => {
  return {
    HttpEndpoint: __expectString(output.HttpEndpoint),
    HttpProtocolIpv6: __expectString(output.HttpProtocolIpv6),
    HttpPutResponseHopLimit: __expectInt32(output.HttpPutResponseHopLimit),
    HttpTokens: __expectString(output.HttpTokens),
    InstanceMetadataTags: __expectString(output.InstanceMetadataTags),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataMonitoringDetails
 */
const de_AwsEc2LaunchTemplateDataMonitoringDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataMonitoringDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails => {
  return {
    AssociateCarrierIpAddress: __expectBoolean(output.AssociateCarrierIpAddress),
    AssociatePublicIpAddress: __expectBoolean(output.AssociatePublicIpAddress),
    DeleteOnTermination: __expectBoolean(output.DeleteOnTermination),
    Description: __expectString(output.Description),
    DeviceIndex: __expectInt32(output.DeviceIndex),
    Groups: output.Groups != null ? de_NonEmptyStringList(output.Groups, context) : undefined,
    InterfaceType: __expectString(output.InterfaceType),
    Ipv4PrefixCount: __expectInt32(output.Ipv4PrefixCount),
    Ipv4Prefixes:
      output.Ipv4Prefixes != null
        ? de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList(output.Ipv4Prefixes, context)
        : undefined,
    Ipv6AddressCount: __expectInt32(output.Ipv6AddressCount),
    Ipv6Addresses:
      output.Ipv6Addresses != null
        ? de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList(output.Ipv6Addresses, context)
        : undefined,
    Ipv6PrefixCount: __expectInt32(output.Ipv6PrefixCount),
    Ipv6Prefixes:
      output.Ipv6Prefixes != null
        ? de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList(output.Ipv6Prefixes, context)
        : undefined,
    NetworkCardIndex: __expectInt32(output.NetworkCardIndex),
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    PrivateIpAddress: __expectString(output.PrivateIpAddress),
    PrivateIpAddresses:
      output.PrivateIpAddresses != null
        ? de_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList(output.PrivateIpAddresses, context)
        : undefined,
    SecondaryPrivateIpAddressCount: __expectInt32(output.SecondaryPrivateIpAddressCount),
    SubnetId: __expectString(output.SubnetId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails => {
  return {
    Ipv4Prefix: __expectString(output.Ipv4Prefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails => {
  return {
    Ipv6Address: __expectString(output.Ipv6Address),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails => {
  return {
    Ipv6Prefix: __expectString(output.Ipv6Prefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetList
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails => {
  return {
    Primary: __expectBoolean(output.Primary),
    PrivateIpAddress: __expectString(output.PrivateIpAddress),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList
 */
const de_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataPlacementDetails
 */
const de_AwsEc2LaunchTemplateDataPlacementDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataPlacementDetails => {
  return {
    Affinity: __expectString(output.Affinity),
    AvailabilityZone: __expectString(output.AvailabilityZone),
    GroupName: __expectString(output.GroupName),
    HostId: __expectString(output.HostId),
    HostResourceGroupArn: __expectString(output.HostResourceGroupArn),
    PartitionNumber: __expectInt32(output.PartitionNumber),
    SpreadDomain: __expectString(output.SpreadDomain),
    Tenancy: __expectString(output.Tenancy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails
 */
const de_AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails => {
  return {
    EnableResourceNameDnsAAAARecord: __expectBoolean(output.EnableResourceNameDnsAAAARecord),
    EnableResourceNameDnsARecord: __expectBoolean(output.EnableResourceNameDnsARecord),
    HostnameType: __expectString(output.HostnameType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2LaunchTemplateDetails
 */
const de_AwsEc2LaunchTemplateDetails = (output: any, context: __SerdeContext): AwsEc2LaunchTemplateDetails => {
  return {
    DefaultVersionNumber: __expectLong(output.DefaultVersionNumber),
    Id: __expectString(output.Id),
    LatestVersionNumber: __expectLong(output.LatestVersionNumber),
    LaunchTemplateData:
      output.LaunchTemplateData != null
        ? de_AwsEc2LaunchTemplateDataDetails(output.LaunchTemplateData, context)
        : undefined,
    LaunchTemplateName: __expectString(output.LaunchTemplateName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkAclAssociation
 */
const de_AwsEc2NetworkAclAssociation = (output: any, context: __SerdeContext): AwsEc2NetworkAclAssociation => {
  return {
    NetworkAclAssociationId: __expectString(output.NetworkAclAssociationId),
    NetworkAclId: __expectString(output.NetworkAclId),
    SubnetId: __expectString(output.SubnetId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkAclAssociationList
 */
const de_AwsEc2NetworkAclAssociationList = (output: any, context: __SerdeContext): AwsEc2NetworkAclAssociation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2NetworkAclAssociation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkAclDetails
 */
const de_AwsEc2NetworkAclDetails = (output: any, context: __SerdeContext): AwsEc2NetworkAclDetails => {
  return {
    Associations:
      output.Associations != null ? de_AwsEc2NetworkAclAssociationList(output.Associations, context) : undefined,
    Entries: output.Entries != null ? de_AwsEc2NetworkAclEntryList(output.Entries, context) : undefined,
    IsDefault: __expectBoolean(output.IsDefault),
    NetworkAclId: __expectString(output.NetworkAclId),
    OwnerId: __expectString(output.OwnerId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkAclEntry
 */
const de_AwsEc2NetworkAclEntry = (output: any, context: __SerdeContext): AwsEc2NetworkAclEntry => {
  return {
    CidrBlock: __expectString(output.CidrBlock),
    Egress: __expectBoolean(output.Egress),
    IcmpTypeCode: output.IcmpTypeCode != null ? de_IcmpTypeCode(output.IcmpTypeCode, context) : undefined,
    Ipv6CidrBlock: __expectString(output.Ipv6CidrBlock),
    PortRange: output.PortRange != null ? de_PortRangeFromTo(output.PortRange, context) : undefined,
    Protocol: __expectString(output.Protocol),
    RuleAction: __expectString(output.RuleAction),
    RuleNumber: __expectInt32(output.RuleNumber),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkAclEntryList
 */
const de_AwsEc2NetworkAclEntryList = (output: any, context: __SerdeContext): AwsEc2NetworkAclEntry[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2NetworkAclEntry(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceAttachment
 */
const de_AwsEc2NetworkInterfaceAttachment = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfaceAttachment => {
  return {
    AttachTime: __expectString(output.AttachTime),
    AttachmentId: __expectString(output.AttachmentId),
    DeleteOnTermination: __expectBoolean(output.DeleteOnTermination),
    DeviceIndex: __expectInt32(output.DeviceIndex),
    InstanceId: __expectString(output.InstanceId),
    InstanceOwnerId: __expectString(output.InstanceOwnerId),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceDetails
 */
const de_AwsEc2NetworkInterfaceDetails = (output: any, context: __SerdeContext): AwsEc2NetworkInterfaceDetails => {
  return {
    Attachment: output.Attachment != null ? de_AwsEc2NetworkInterfaceAttachment(output.Attachment, context) : undefined,
    IpV6Addresses:
      output.IpV6Addresses != null
        ? de_AwsEc2NetworkInterfaceIpV6AddressList(output.IpV6Addresses, context)
        : undefined,
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    PrivateIpAddresses:
      output.PrivateIpAddresses != null
        ? de_AwsEc2NetworkInterfacePrivateIpAddressList(output.PrivateIpAddresses, context)
        : undefined,
    PublicDnsName: __expectString(output.PublicDnsName),
    PublicIp: __expectString(output.PublicIp),
    SecurityGroups:
      output.SecurityGroups != null
        ? de_AwsEc2NetworkInterfaceSecurityGroupList(output.SecurityGroups, context)
        : undefined,
    SourceDestCheck: __expectBoolean(output.SourceDestCheck),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceIpV6AddressDetail
 */
const de_AwsEc2NetworkInterfaceIpV6AddressDetail = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfaceIpV6AddressDetail => {
  return {
    IpV6Address: __expectString(output.IpV6Address),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceIpV6AddressList
 */
const de_AwsEc2NetworkInterfaceIpV6AddressList = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfaceIpV6AddressDetail[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2NetworkInterfaceIpV6AddressDetail(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfacePrivateIpAddressDetail
 */
const de_AwsEc2NetworkInterfacePrivateIpAddressDetail = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfacePrivateIpAddressDetail => {
  return {
    PrivateDnsName: __expectString(output.PrivateDnsName),
    PrivateIpAddress: __expectString(output.PrivateIpAddress),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfacePrivateIpAddressList
 */
const de_AwsEc2NetworkInterfacePrivateIpAddressList = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfacePrivateIpAddressDetail[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2NetworkInterfacePrivateIpAddressDetail(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceSecurityGroup
 */
const de_AwsEc2NetworkInterfaceSecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfaceSecurityGroup => {
  return {
    GroupId: __expectString(output.GroupId),
    GroupName: __expectString(output.GroupName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2NetworkInterfaceSecurityGroupList
 */
const de_AwsEc2NetworkInterfaceSecurityGroupList = (
  output: any,
  context: __SerdeContext
): AwsEc2NetworkInterfaceSecurityGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2NetworkInterfaceSecurityGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2RouteTableDetails
 */
const de_AwsEc2RouteTableDetails = (output: any, context: __SerdeContext): AwsEc2RouteTableDetails => {
  return {
    AssociationSet: output.AssociationSet != null ? de_AssociationSetList(output.AssociationSet, context) : undefined,
    OwnerId: __expectString(output.OwnerId),
    PropagatingVgwSet:
      output.PropagatingVgwSet != null ? de_PropagatingVgwSetList(output.PropagatingVgwSet, context) : undefined,
    RouteSet: output.RouteSet != null ? de_RouteSetList(output.RouteSet, context) : undefined,
    RouteTableId: __expectString(output.RouteTableId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupDetails
 */
const de_AwsEc2SecurityGroupDetails = (output: any, context: __SerdeContext): AwsEc2SecurityGroupDetails => {
  return {
    GroupId: __expectString(output.GroupId),
    GroupName: __expectString(output.GroupName),
    IpPermissions:
      output.IpPermissions != null ? de_AwsEc2SecurityGroupIpPermissionList(output.IpPermissions, context) : undefined,
    IpPermissionsEgress:
      output.IpPermissionsEgress != null
        ? de_AwsEc2SecurityGroupIpPermissionList(output.IpPermissionsEgress, context)
        : undefined,
    OwnerId: __expectString(output.OwnerId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpPermission
 */
const de_AwsEc2SecurityGroupIpPermission = (output: any, context: __SerdeContext): AwsEc2SecurityGroupIpPermission => {
  return {
    FromPort: __expectInt32(output.FromPort),
    IpProtocol: __expectString(output.IpProtocol),
    IpRanges: output.IpRanges != null ? de_AwsEc2SecurityGroupIpRangeList(output.IpRanges, context) : undefined,
    Ipv6Ranges: output.Ipv6Ranges != null ? de_AwsEc2SecurityGroupIpv6RangeList(output.Ipv6Ranges, context) : undefined,
    PrefixListIds:
      output.PrefixListIds != null ? de_AwsEc2SecurityGroupPrefixListIdList(output.PrefixListIds, context) : undefined,
    ToPort: __expectInt32(output.ToPort),
    UserIdGroupPairs:
      output.UserIdGroupPairs != null
        ? de_AwsEc2SecurityGroupUserIdGroupPairList(output.UserIdGroupPairs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpPermissionList
 */
const de_AwsEc2SecurityGroupIpPermissionList = (
  output: any,
  context: __SerdeContext
): AwsEc2SecurityGroupIpPermission[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2SecurityGroupIpPermission(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpRange
 */
const de_AwsEc2SecurityGroupIpRange = (output: any, context: __SerdeContext): AwsEc2SecurityGroupIpRange => {
  return {
    CidrIp: __expectString(output.CidrIp),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpRangeList
 */
const de_AwsEc2SecurityGroupIpRangeList = (output: any, context: __SerdeContext): AwsEc2SecurityGroupIpRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2SecurityGroupIpRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpv6Range
 */
const de_AwsEc2SecurityGroupIpv6Range = (output: any, context: __SerdeContext): AwsEc2SecurityGroupIpv6Range => {
  return {
    CidrIpv6: __expectString(output.CidrIpv6),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupIpv6RangeList
 */
const de_AwsEc2SecurityGroupIpv6RangeList = (output: any, context: __SerdeContext): AwsEc2SecurityGroupIpv6Range[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2SecurityGroupIpv6Range(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupPrefixListId
 */
const de_AwsEc2SecurityGroupPrefixListId = (output: any, context: __SerdeContext): AwsEc2SecurityGroupPrefixListId => {
  return {
    PrefixListId: __expectString(output.PrefixListId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupPrefixListIdList
 */
const de_AwsEc2SecurityGroupPrefixListIdList = (
  output: any,
  context: __SerdeContext
): AwsEc2SecurityGroupPrefixListId[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2SecurityGroupPrefixListId(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupUserIdGroupPair
 */
const de_AwsEc2SecurityGroupUserIdGroupPair = (
  output: any,
  context: __SerdeContext
): AwsEc2SecurityGroupUserIdGroupPair => {
  return {
    GroupId: __expectString(output.GroupId),
    GroupName: __expectString(output.GroupName),
    PeeringStatus: __expectString(output.PeeringStatus),
    UserId: __expectString(output.UserId),
    VpcId: __expectString(output.VpcId),
    VpcPeeringConnectionId: __expectString(output.VpcPeeringConnectionId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2SecurityGroupUserIdGroupPairList
 */
const de_AwsEc2SecurityGroupUserIdGroupPairList = (
  output: any,
  context: __SerdeContext
): AwsEc2SecurityGroupUserIdGroupPair[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2SecurityGroupUserIdGroupPair(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2SubnetDetails
 */
const de_AwsEc2SubnetDetails = (output: any, context: __SerdeContext): AwsEc2SubnetDetails => {
  return {
    AssignIpv6AddressOnCreation: __expectBoolean(output.AssignIpv6AddressOnCreation),
    AvailabilityZone: __expectString(output.AvailabilityZone),
    AvailabilityZoneId: __expectString(output.AvailabilityZoneId),
    AvailableIpAddressCount: __expectInt32(output.AvailableIpAddressCount),
    CidrBlock: __expectString(output.CidrBlock),
    DefaultForAz: __expectBoolean(output.DefaultForAz),
    Ipv6CidrBlockAssociationSet:
      output.Ipv6CidrBlockAssociationSet != null
        ? de_Ipv6CidrBlockAssociationList(output.Ipv6CidrBlockAssociationSet, context)
        : undefined,
    MapPublicIpOnLaunch: __expectBoolean(output.MapPublicIpOnLaunch),
    OwnerId: __expectString(output.OwnerId),
    State: __expectString(output.State),
    SubnetArn: __expectString(output.SubnetArn),
    SubnetId: __expectString(output.SubnetId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2TransitGatewayDetails
 */
const de_AwsEc2TransitGatewayDetails = (output: any, context: __SerdeContext): AwsEc2TransitGatewayDetails => {
  return {
    AmazonSideAsn: __expectInt32(output.AmazonSideAsn),
    AssociationDefaultRouteTableId: __expectString(output.AssociationDefaultRouteTableId),
    AutoAcceptSharedAttachments: __expectString(output.AutoAcceptSharedAttachments),
    DefaultRouteTableAssociation: __expectString(output.DefaultRouteTableAssociation),
    DefaultRouteTablePropagation: __expectString(output.DefaultRouteTablePropagation),
    Description: __expectString(output.Description),
    DnsSupport: __expectString(output.DnsSupport),
    Id: __expectString(output.Id),
    MulticastSupport: __expectString(output.MulticastSupport),
    PropagationDefaultRouteTableId: __expectString(output.PropagationDefaultRouteTableId),
    TransitGatewayCidrBlocks:
      output.TransitGatewayCidrBlocks != null
        ? de_NonEmptyStringList(output.TransitGatewayCidrBlocks, context)
        : undefined,
    VpnEcmpSupport: __expectString(output.VpnEcmpSupport),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VolumeAttachment
 */
const de_AwsEc2VolumeAttachment = (output: any, context: __SerdeContext): AwsEc2VolumeAttachment => {
  return {
    AttachTime: __expectString(output.AttachTime),
    DeleteOnTermination: __expectBoolean(output.DeleteOnTermination),
    InstanceId: __expectString(output.InstanceId),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VolumeAttachmentList
 */
const de_AwsEc2VolumeAttachmentList = (output: any, context: __SerdeContext): AwsEc2VolumeAttachment[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2VolumeAttachment(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2VolumeDetails
 */
const de_AwsEc2VolumeDetails = (output: any, context: __SerdeContext): AwsEc2VolumeDetails => {
  return {
    Attachments: output.Attachments != null ? de_AwsEc2VolumeAttachmentList(output.Attachments, context) : undefined,
    CreateTime: __expectString(output.CreateTime),
    DeviceName: __expectString(output.DeviceName),
    Encrypted: __expectBoolean(output.Encrypted),
    KmsKeyId: __expectString(output.KmsKeyId),
    Size: __expectInt32(output.Size),
    SnapshotId: __expectString(output.SnapshotId),
    Status: __expectString(output.Status),
    VolumeId: __expectString(output.VolumeId),
    VolumeScanStatus: __expectString(output.VolumeScanStatus),
    VolumeType: __expectString(output.VolumeType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcDetails
 */
const de_AwsEc2VpcDetails = (output: any, context: __SerdeContext): AwsEc2VpcDetails => {
  return {
    CidrBlockAssociationSet:
      output.CidrBlockAssociationSet != null
        ? de_CidrBlockAssociationList(output.CidrBlockAssociationSet, context)
        : undefined,
    DhcpOptionsId: __expectString(output.DhcpOptionsId),
    Ipv6CidrBlockAssociationSet:
      output.Ipv6CidrBlockAssociationSet != null
        ? de_Ipv6CidrBlockAssociationList(output.Ipv6CidrBlockAssociationSet, context)
        : undefined,
    State: __expectString(output.State),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcEndpointServiceDetails
 */
const de_AwsEc2VpcEndpointServiceDetails = (output: any, context: __SerdeContext): AwsEc2VpcEndpointServiceDetails => {
  return {
    AcceptanceRequired: __expectBoolean(output.AcceptanceRequired),
    AvailabilityZones:
      output.AvailabilityZones != null ? de_NonEmptyStringList(output.AvailabilityZones, context) : undefined,
    BaseEndpointDnsNames:
      output.BaseEndpointDnsNames != null ? de_NonEmptyStringList(output.BaseEndpointDnsNames, context) : undefined,
    GatewayLoadBalancerArns:
      output.GatewayLoadBalancerArns != null
        ? de_NonEmptyStringList(output.GatewayLoadBalancerArns, context)
        : undefined,
    ManagesVpcEndpoints: __expectBoolean(output.ManagesVpcEndpoints),
    NetworkLoadBalancerArns:
      output.NetworkLoadBalancerArns != null
        ? de_NonEmptyStringList(output.NetworkLoadBalancerArns, context)
        : undefined,
    PrivateDnsName: __expectString(output.PrivateDnsName),
    ServiceId: __expectString(output.ServiceId),
    ServiceName: __expectString(output.ServiceName),
    ServiceState: __expectString(output.ServiceState),
    ServiceType:
      output.ServiceType != null ? de_AwsEc2VpcEndpointServiceServiceTypeList(output.ServiceType, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcEndpointServiceServiceTypeDetails
 */
const de_AwsEc2VpcEndpointServiceServiceTypeDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpcEndpointServiceServiceTypeDetails => {
  return {
    ServiceType: __expectString(output.ServiceType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcEndpointServiceServiceTypeList
 */
const de_AwsEc2VpcEndpointServiceServiceTypeList = (
  output: any,
  context: __SerdeContext
): AwsEc2VpcEndpointServiceServiceTypeDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2VpcEndpointServiceServiceTypeDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2VpcPeeringConnectionDetails
 */
const de_AwsEc2VpcPeeringConnectionDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpcPeeringConnectionDetails => {
  return {
    AccepterVpcInfo:
      output.AccepterVpcInfo != null
        ? de_AwsEc2VpcPeeringConnectionVpcInfoDetails(output.AccepterVpcInfo, context)
        : undefined,
    ExpirationTime: __expectString(output.ExpirationTime),
    RequesterVpcInfo:
      output.RequesterVpcInfo != null
        ? de_AwsEc2VpcPeeringConnectionVpcInfoDetails(output.RequesterVpcInfo, context)
        : undefined,
    Status: output.Status != null ? de_AwsEc2VpcPeeringConnectionStatusDetails(output.Status, context) : undefined,
    VpcPeeringConnectionId: __expectString(output.VpcPeeringConnectionId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcPeeringConnectionStatusDetails
 */
const de_AwsEc2VpcPeeringConnectionStatusDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpcPeeringConnectionStatusDetails => {
  return {
    Code: __expectString(output.Code),
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpcPeeringConnectionVpcInfoDetails
 */
const de_AwsEc2VpcPeeringConnectionVpcInfoDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpcPeeringConnectionVpcInfoDetails => {
  return {
    CidrBlock: __expectString(output.CidrBlock),
    CidrBlockSet: output.CidrBlockSet != null ? de_VpcInfoCidrBlockSetList(output.CidrBlockSet, context) : undefined,
    Ipv6CidrBlockSet:
      output.Ipv6CidrBlockSet != null ? de_VpcInfoIpv6CidrBlockSetList(output.Ipv6CidrBlockSet, context) : undefined,
    OwnerId: __expectString(output.OwnerId),
    PeeringOptions:
      output.PeeringOptions != null ? de_VpcInfoPeeringOptionsDetails(output.PeeringOptions, context) : undefined,
    Region: __expectString(output.Region),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionDetails
 */
const de_AwsEc2VpnConnectionDetails = (output: any, context: __SerdeContext): AwsEc2VpnConnectionDetails => {
  return {
    Category: __expectString(output.Category),
    CustomerGatewayConfiguration: __expectString(output.CustomerGatewayConfiguration),
    CustomerGatewayId: __expectString(output.CustomerGatewayId),
    Options: output.Options != null ? de_AwsEc2VpnConnectionOptionsDetails(output.Options, context) : undefined,
    Routes: output.Routes != null ? de_AwsEc2VpnConnectionRoutesList(output.Routes, context) : undefined,
    State: __expectString(output.State),
    TransitGatewayId: __expectString(output.TransitGatewayId),
    Type: __expectString(output.Type),
    VgwTelemetry:
      output.VgwTelemetry != null ? de_AwsEc2VpnConnectionVgwTelemetryList(output.VgwTelemetry, context) : undefined,
    VpnConnectionId: __expectString(output.VpnConnectionId),
    VpnGatewayId: __expectString(output.VpnGatewayId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionOptionsDetails
 */
const de_AwsEc2VpnConnectionOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionOptionsDetails => {
  return {
    StaticRoutesOnly: __expectBoolean(output.StaticRoutesOnly),
    TunnelOptions:
      output.TunnelOptions != null
        ? de_AwsEc2VpnConnectionOptionsTunnelOptionsList(output.TunnelOptions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionOptionsTunnelOptionsDetails
 */
const de_AwsEc2VpnConnectionOptionsTunnelOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionOptionsTunnelOptionsDetails => {
  return {
    DpdTimeoutSeconds: __expectInt32(output.DpdTimeoutSeconds),
    IkeVersions: output.IkeVersions != null ? de_NonEmptyStringList(output.IkeVersions, context) : undefined,
    OutsideIpAddress: __expectString(output.OutsideIpAddress),
    Phase1DhGroupNumbers:
      output.Phase1DhGroupNumbers != null ? de_IntegerList(output.Phase1DhGroupNumbers, context) : undefined,
    Phase1EncryptionAlgorithms:
      output.Phase1EncryptionAlgorithms != null
        ? de_NonEmptyStringList(output.Phase1EncryptionAlgorithms, context)
        : undefined,
    Phase1IntegrityAlgorithms:
      output.Phase1IntegrityAlgorithms != null
        ? de_NonEmptyStringList(output.Phase1IntegrityAlgorithms, context)
        : undefined,
    Phase1LifetimeSeconds: __expectInt32(output.Phase1LifetimeSeconds),
    Phase2DhGroupNumbers:
      output.Phase2DhGroupNumbers != null ? de_IntegerList(output.Phase2DhGroupNumbers, context) : undefined,
    Phase2EncryptionAlgorithms:
      output.Phase2EncryptionAlgorithms != null
        ? de_NonEmptyStringList(output.Phase2EncryptionAlgorithms, context)
        : undefined,
    Phase2IntegrityAlgorithms:
      output.Phase2IntegrityAlgorithms != null
        ? de_NonEmptyStringList(output.Phase2IntegrityAlgorithms, context)
        : undefined,
    Phase2LifetimeSeconds: __expectInt32(output.Phase2LifetimeSeconds),
    PreSharedKey: __expectString(output.PreSharedKey),
    RekeyFuzzPercentage: __expectInt32(output.RekeyFuzzPercentage),
    RekeyMarginTimeSeconds: __expectInt32(output.RekeyMarginTimeSeconds),
    ReplayWindowSize: __expectInt32(output.ReplayWindowSize),
    TunnelInsideCidr: __expectString(output.TunnelInsideCidr),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionOptionsTunnelOptionsList
 */
const de_AwsEc2VpnConnectionOptionsTunnelOptionsList = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionOptionsTunnelOptionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2VpnConnectionOptionsTunnelOptionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionRoutesDetails
 */
const de_AwsEc2VpnConnectionRoutesDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionRoutesDetails => {
  return {
    DestinationCidrBlock: __expectString(output.DestinationCidrBlock),
    State: __expectString(output.State),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionRoutesList
 */
const de_AwsEc2VpnConnectionRoutesList = (output: any, context: __SerdeContext): AwsEc2VpnConnectionRoutesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2VpnConnectionRoutesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionVgwTelemetryDetails
 */
const de_AwsEc2VpnConnectionVgwTelemetryDetails = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionVgwTelemetryDetails => {
  return {
    AcceptedRouteCount: __expectInt32(output.AcceptedRouteCount),
    CertificateArn: __expectString(output.CertificateArn),
    LastStatusChange: __expectString(output.LastStatusChange),
    OutsideIpAddress: __expectString(output.OutsideIpAddress),
    Status: __expectString(output.Status),
    StatusMessage: __expectString(output.StatusMessage),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEc2VpnConnectionVgwTelemetryList
 */
const de_AwsEc2VpnConnectionVgwTelemetryList = (
  output: any,
  context: __SerdeContext
): AwsEc2VpnConnectionVgwTelemetryDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEc2VpnConnectionVgwTelemetryDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcrContainerImageDetails
 */
const de_AwsEcrContainerImageDetails = (output: any, context: __SerdeContext): AwsEcrContainerImageDetails => {
  return {
    Architecture: __expectString(output.Architecture),
    ImageDigest: __expectString(output.ImageDigest),
    ImagePublishedAt: __expectString(output.ImagePublishedAt),
    ImageTags: output.ImageTags != null ? de_NonEmptyStringList(output.ImageTags, context) : undefined,
    RegistryId: __expectString(output.RegistryId),
    RepositoryName: __expectString(output.RepositoryName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcrRepositoryDetails
 */
const de_AwsEcrRepositoryDetails = (output: any, context: __SerdeContext): AwsEcrRepositoryDetails => {
  return {
    Arn: __expectString(output.Arn),
    ImageScanningConfiguration:
      output.ImageScanningConfiguration != null
        ? de_AwsEcrRepositoryImageScanningConfigurationDetails(output.ImageScanningConfiguration, context)
        : undefined,
    ImageTagMutability: __expectString(output.ImageTagMutability),
    LifecyclePolicy:
      output.LifecyclePolicy != null
        ? de_AwsEcrRepositoryLifecyclePolicyDetails(output.LifecyclePolicy, context)
        : undefined,
    RepositoryName: __expectString(output.RepositoryName),
    RepositoryPolicyText: __expectString(output.RepositoryPolicyText),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcrRepositoryImageScanningConfigurationDetails
 */
const de_AwsEcrRepositoryImageScanningConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcrRepositoryImageScanningConfigurationDetails => {
  return {
    ScanOnPush: __expectBoolean(output.ScanOnPush),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcrRepositoryLifecyclePolicyDetails
 */
const de_AwsEcrRepositoryLifecyclePolicyDetails = (
  output: any,
  context: __SerdeContext
): AwsEcrRepositoryLifecyclePolicyDetails => {
  return {
    LifecyclePolicyText: __expectString(output.LifecyclePolicyText),
    RegistryId: __expectString(output.RegistryId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterClusterSettingsDetails
 */
const de_AwsEcsClusterClusterSettingsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterClusterSettingsDetails => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterClusterSettingsList
 */
const de_AwsEcsClusterClusterSettingsList = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterClusterSettingsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsClusterClusterSettingsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsClusterConfigurationDetails
 */
const de_AwsEcsClusterConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterConfigurationDetails => {
  return {
    ExecuteCommandConfiguration:
      output.ExecuteCommandConfiguration != null
        ? de_AwsEcsClusterConfigurationExecuteCommandConfigurationDetails(output.ExecuteCommandConfiguration, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterConfigurationExecuteCommandConfigurationDetails
 */
const de_AwsEcsClusterConfigurationExecuteCommandConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterConfigurationExecuteCommandConfigurationDetails => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    LogConfiguration:
      output.LogConfiguration != null
        ? de_AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails(
            output.LogConfiguration,
            context
          )
        : undefined,
    Logging: __expectString(output.Logging),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails
 */
const de_AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails => {
  return {
    CloudWatchEncryptionEnabled: __expectBoolean(output.CloudWatchEncryptionEnabled),
    CloudWatchLogGroupName: __expectString(output.CloudWatchLogGroupName),
    S3BucketName: __expectString(output.S3BucketName),
    S3EncryptionEnabled: __expectBoolean(output.S3EncryptionEnabled),
    S3KeyPrefix: __expectString(output.S3KeyPrefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterDefaultCapacityProviderStrategyDetails
 */
const de_AwsEcsClusterDefaultCapacityProviderStrategyDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterDefaultCapacityProviderStrategyDetails => {
  return {
    Base: __expectInt32(output.Base),
    CapacityProvider: __expectString(output.CapacityProvider),
    Weight: __expectInt32(output.Weight),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsClusterDefaultCapacityProviderStrategyList
 */
const de_AwsEcsClusterDefaultCapacityProviderStrategyList = (
  output: any,
  context: __SerdeContext
): AwsEcsClusterDefaultCapacityProviderStrategyDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsClusterDefaultCapacityProviderStrategyDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsClusterDetails
 */
const de_AwsEcsClusterDetails = (output: any, context: __SerdeContext): AwsEcsClusterDetails => {
  return {
    ActiveServicesCount: __expectInt32(output.ActiveServicesCount),
    CapacityProviders:
      output.CapacityProviders != null ? de_NonEmptyStringList(output.CapacityProviders, context) : undefined,
    ClusterArn: __expectString(output.ClusterArn),
    ClusterName: __expectString(output.ClusterName),
    ClusterSettings:
      output.ClusterSettings != null ? de_AwsEcsClusterClusterSettingsList(output.ClusterSettings, context) : undefined,
    Configuration:
      output.Configuration != null ? de_AwsEcsClusterConfigurationDetails(output.Configuration, context) : undefined,
    DefaultCapacityProviderStrategy:
      output.DefaultCapacityProviderStrategy != null
        ? de_AwsEcsClusterDefaultCapacityProviderStrategyList(output.DefaultCapacityProviderStrategy, context)
        : undefined,
    RegisteredContainerInstancesCount: __expectInt32(output.RegisteredContainerInstancesCount),
    RunningTasksCount: __expectInt32(output.RunningTasksCount),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsContainerDetails
 */
const de_AwsEcsContainerDetails = (output: any, context: __SerdeContext): AwsEcsContainerDetails => {
  return {
    Image: __expectString(output.Image),
    MountPoints: output.MountPoints != null ? de_AwsMountPointList(output.MountPoints, context) : undefined,
    Name: __expectString(output.Name),
    Privileged: __expectBoolean(output.Privileged),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsContainerDetailsList
 */
const de_AwsEcsContainerDetailsList = (output: any, context: __SerdeContext): AwsEcsContainerDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsContainerDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsServiceCapacityProviderStrategyDetails
 */
const de_AwsEcsServiceCapacityProviderStrategyDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceCapacityProviderStrategyDetails => {
  return {
    Base: __expectInt32(output.Base),
    CapacityProvider: __expectString(output.CapacityProvider),
    Weight: __expectInt32(output.Weight),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceCapacityProviderStrategyList
 */
const de_AwsEcsServiceCapacityProviderStrategyList = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceCapacityProviderStrategyDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsServiceCapacityProviderStrategyDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails
 */
const de_AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails => {
  return {
    Enable: __expectBoolean(output.Enable),
    Rollback: __expectBoolean(output.Rollback),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceDeploymentConfigurationDetails
 */
const de_AwsEcsServiceDeploymentConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceDeploymentConfigurationDetails => {
  return {
    DeploymentCircuitBreaker:
      output.DeploymentCircuitBreaker != null
        ? de_AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails(
            output.DeploymentCircuitBreaker,
            context
          )
        : undefined,
    MaximumPercent: __expectInt32(output.MaximumPercent),
    MinimumHealthyPercent: __expectInt32(output.MinimumHealthyPercent),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceDeploymentControllerDetails
 */
const de_AwsEcsServiceDeploymentControllerDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceDeploymentControllerDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceDetails
 */
const de_AwsEcsServiceDetails = (output: any, context: __SerdeContext): AwsEcsServiceDetails => {
  return {
    CapacityProviderStrategy:
      output.CapacityProviderStrategy != null
        ? de_AwsEcsServiceCapacityProviderStrategyList(output.CapacityProviderStrategy, context)
        : undefined,
    Cluster: __expectString(output.Cluster),
    DeploymentConfiguration:
      output.DeploymentConfiguration != null
        ? de_AwsEcsServiceDeploymentConfigurationDetails(output.DeploymentConfiguration, context)
        : undefined,
    DeploymentController:
      output.DeploymentController != null
        ? de_AwsEcsServiceDeploymentControllerDetails(output.DeploymentController, context)
        : undefined,
    DesiredCount: __expectInt32(output.DesiredCount),
    EnableEcsManagedTags: __expectBoolean(output.EnableEcsManagedTags),
    EnableExecuteCommand: __expectBoolean(output.EnableExecuteCommand),
    HealthCheckGracePeriodSeconds: __expectInt32(output.HealthCheckGracePeriodSeconds),
    LaunchType: __expectString(output.LaunchType),
    LoadBalancers:
      output.LoadBalancers != null ? de_AwsEcsServiceLoadBalancersList(output.LoadBalancers, context) : undefined,
    Name: __expectString(output.Name),
    NetworkConfiguration:
      output.NetworkConfiguration != null
        ? de_AwsEcsServiceNetworkConfigurationDetails(output.NetworkConfiguration, context)
        : undefined,
    PlacementConstraints:
      output.PlacementConstraints != null
        ? de_AwsEcsServicePlacementConstraintsList(output.PlacementConstraints, context)
        : undefined,
    PlacementStrategies:
      output.PlacementStrategies != null
        ? de_AwsEcsServicePlacementStrategiesList(output.PlacementStrategies, context)
        : undefined,
    PlatformVersion: __expectString(output.PlatformVersion),
    PropagateTags: __expectString(output.PropagateTags),
    Role: __expectString(output.Role),
    SchedulingStrategy: __expectString(output.SchedulingStrategy),
    ServiceArn: __expectString(output.ServiceArn),
    ServiceName: __expectString(output.ServiceName),
    ServiceRegistries:
      output.ServiceRegistries != null
        ? de_AwsEcsServiceServiceRegistriesList(output.ServiceRegistries, context)
        : undefined,
    TaskDefinition: __expectString(output.TaskDefinition),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceLoadBalancersDetails
 */
const de_AwsEcsServiceLoadBalancersDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceLoadBalancersDetails => {
  return {
    ContainerName: __expectString(output.ContainerName),
    ContainerPort: __expectInt32(output.ContainerPort),
    LoadBalancerName: __expectString(output.LoadBalancerName),
    TargetGroupArn: __expectString(output.TargetGroupArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceLoadBalancersList
 */
const de_AwsEcsServiceLoadBalancersList = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceLoadBalancersDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsServiceLoadBalancersDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails
 */
const de_AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails => {
  return {
    AssignPublicIp: __expectString(output.AssignPublicIp),
    SecurityGroups: output.SecurityGroups != null ? de_NonEmptyStringList(output.SecurityGroups, context) : undefined,
    Subnets: output.Subnets != null ? de_NonEmptyStringList(output.Subnets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceNetworkConfigurationDetails
 */
const de_AwsEcsServiceNetworkConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceNetworkConfigurationDetails => {
  return {
    AwsVpcConfiguration:
      output.AwsVpcConfiguration != null
        ? de_AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails(output.AwsVpcConfiguration, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServicePlacementConstraintsDetails
 */
const de_AwsEcsServicePlacementConstraintsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServicePlacementConstraintsDetails => {
  return {
    Expression: __expectString(output.Expression),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServicePlacementConstraintsList
 */
const de_AwsEcsServicePlacementConstraintsList = (
  output: any,
  context: __SerdeContext
): AwsEcsServicePlacementConstraintsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsServicePlacementConstraintsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsServicePlacementStrategiesDetails
 */
const de_AwsEcsServicePlacementStrategiesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServicePlacementStrategiesDetails => {
  return {
    Field: __expectString(output.Field),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServicePlacementStrategiesList
 */
const de_AwsEcsServicePlacementStrategiesList = (
  output: any,
  context: __SerdeContext
): AwsEcsServicePlacementStrategiesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsServicePlacementStrategiesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsServiceServiceRegistriesDetails
 */
const de_AwsEcsServiceServiceRegistriesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceServiceRegistriesDetails => {
  return {
    ContainerName: __expectString(output.ContainerName),
    ContainerPort: __expectInt32(output.ContainerPort),
    Port: __expectInt32(output.Port),
    RegistryArn: __expectString(output.RegistryArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsServiceServiceRegistriesList
 */
const de_AwsEcsServiceServiceRegistriesList = (
  output: any,
  context: __SerdeContext
): AwsEcsServiceServiceRegistriesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsServiceServiceRegistriesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails => {
  return {
    Condition: __expectString(output.Condition),
    ContainerName: __expectString(output.ContainerName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDependsOnList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsDependsOnList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsDetails => {
  return {
    Command: output.Command != null ? de_NonEmptyStringList(output.Command, context) : undefined,
    Cpu: __expectInt32(output.Cpu),
    DependsOn:
      output.DependsOn != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsDependsOnList(output.DependsOn, context)
        : undefined,
    DisableNetworking: __expectBoolean(output.DisableNetworking),
    DnsSearchDomains:
      output.DnsSearchDomains != null ? de_NonEmptyStringList(output.DnsSearchDomains, context) : undefined,
    DnsServers: output.DnsServers != null ? de_NonEmptyStringList(output.DnsServers, context) : undefined,
    DockerLabels: output.DockerLabels != null ? de_FieldMap(output.DockerLabels, context) : undefined,
    DockerSecurityOptions:
      output.DockerSecurityOptions != null ? de_NonEmptyStringList(output.DockerSecurityOptions, context) : undefined,
    EntryPoint: output.EntryPoint != null ? de_NonEmptyStringList(output.EntryPoint, context) : undefined,
    Environment:
      output.Environment != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList(output.Environment, context)
        : undefined,
    EnvironmentFiles:
      output.EnvironmentFiles != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList(output.EnvironmentFiles, context)
        : undefined,
    Essential: __expectBoolean(output.Essential),
    ExtraHosts:
      output.ExtraHosts != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList(output.ExtraHosts, context)
        : undefined,
    FirelensConfiguration:
      output.FirelensConfiguration != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails(output.FirelensConfiguration, context)
        : undefined,
    HealthCheck:
      output.HealthCheck != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails(output.HealthCheck, context)
        : undefined,
    Hostname: __expectString(output.Hostname),
    Image: __expectString(output.Image),
    Interactive: __expectBoolean(output.Interactive),
    Links: output.Links != null ? de_NonEmptyStringList(output.Links, context) : undefined,
    LinuxParameters:
      output.LinuxParameters != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails(output.LinuxParameters, context)
        : undefined,
    LogConfiguration:
      output.LogConfiguration != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails(output.LogConfiguration, context)
        : undefined,
    Memory: __expectInt32(output.Memory),
    MemoryReservation: __expectInt32(output.MemoryReservation),
    MountPoints:
      output.MountPoints != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsMountPointsList(output.MountPoints, context)
        : undefined,
    Name: __expectString(output.Name),
    PortMappings:
      output.PortMappings != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList(output.PortMappings, context)
        : undefined,
    Privileged: __expectBoolean(output.Privileged),
    PseudoTerminal: __expectBoolean(output.PseudoTerminal),
    ReadonlyRootFilesystem: __expectBoolean(output.ReadonlyRootFilesystem),
    RepositoryCredentials:
      output.RepositoryCredentials != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails(output.RepositoryCredentials, context)
        : undefined,
    ResourceRequirements:
      output.ResourceRequirements != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList(output.ResourceRequirements, context)
        : undefined,
    Secrets:
      output.Secrets != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsSecretsList(output.Secrets, context)
        : undefined,
    StartTimeout: __expectInt32(output.StartTimeout),
    StopTimeout: __expectInt32(output.StopTimeout),
    SystemControls:
      output.SystemControls != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList(output.SystemControls, context)
        : undefined,
    Ulimits:
      output.Ulimits != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsUlimitsList(output.Ulimits, context)
        : undefined,
    User: __expectString(output.User),
    VolumesFrom:
      output.VolumesFrom != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList(output.VolumesFrom, context)
        : undefined,
    WorkingDirectory: __expectString(output.WorkingDirectory),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails => {
  return {
    Type: __expectString(output.Type),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails => {
  return {
    Hostname: __expectString(output.Hostname),
    IpAddress: __expectString(output.IpAddress),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails => {
  return {
    Options: output.Options != null ? de_FieldMap(output.Options, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails => {
  return {
    Command: output.Command != null ? de_NonEmptyStringList(output.Command, context) : undefined,
    Interval: __expectInt32(output.Interval),
    Retries: __expectInt32(output.Retries),
    StartPeriod: __expectInt32(output.StartPeriod),
    Timeout: __expectInt32(output.Timeout),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails => {
  return {
    Add: output.Add != null ? de_NonEmptyStringList(output.Add, context) : undefined,
    Drop: output.Drop != null ? de_NonEmptyStringList(output.Drop, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails => {
  return {
    Capabilities:
      output.Capabilities != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails(output.Capabilities, context)
        : undefined,
    Devices:
      output.Devices != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList(output.Devices, context)
        : undefined,
    InitProcessEnabled: __expectBoolean(output.InitProcessEnabled),
    MaxSwap: __expectInt32(output.MaxSwap),
    SharedMemorySize: __expectInt32(output.SharedMemorySize),
    Swappiness: __expectInt32(output.Swappiness),
    Tmpfs:
      output.Tmpfs != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList(output.Tmpfs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails => {
  return {
    ContainerPath: __expectString(output.ContainerPath),
    HostPath: __expectString(output.HostPath),
    Permissions: output.Permissions != null ? de_NonEmptyStringList(output.Permissions, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails => {
  return {
    ContainerPath: __expectString(output.ContainerPath),
    MountOptions: output.MountOptions != null ? de_NonEmptyStringList(output.MountOptions, context) : undefined,
    Size: __expectInt32(output.Size),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails => {
  return {
    LogDriver: __expectString(output.LogDriver),
    Options: output.Options != null ? de_FieldMap(output.Options, context) : undefined,
    SecretOptions:
      output.SecretOptions != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList(output.SecretOptions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails => {
  return {
    Name: __expectString(output.Name),
    ValueFrom: __expectString(output.ValueFrom),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails => {
  return {
    ContainerPath: __expectString(output.ContainerPath),
    ReadOnly: __expectBoolean(output.ReadOnly),
    SourceVolume: __expectString(output.SourceVolume),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsMountPointsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsMountPointsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails => {
  return {
    ContainerPort: __expectInt32(output.ContainerPort),
    HostPort: __expectInt32(output.HostPort),
    Protocol: __expectString(output.Protocol),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails => {
  return {
    CredentialsParameter: __expectString(output.CredentialsParameter),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails => {
  return {
    Type: __expectString(output.Type),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails => {
  return {
    Name: __expectString(output.Name),
    ValueFrom: __expectString(output.ValueFrom),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSecretsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsSecretsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails => {
  return {
    Namespace: __expectString(output.Namespace),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails => {
  return {
    HardLimit: __expectInt32(output.HardLimit),
    Name: __expectString(output.Name),
    SoftLimit: __expectInt32(output.SoftLimit),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsUlimitsList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsUlimitsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails => {
  return {
    ReadOnly: __expectBoolean(output.ReadOnly),
    SourceContainer: __expectString(output.SourceContainer),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList
 */
const de_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionDetails
 */
const de_AwsEcsTaskDefinitionDetails = (output: any, context: __SerdeContext): AwsEcsTaskDefinitionDetails => {
  return {
    ContainerDefinitions:
      output.ContainerDefinitions != null
        ? de_AwsEcsTaskDefinitionContainerDefinitionsList(output.ContainerDefinitions, context)
        : undefined,
    Cpu: __expectString(output.Cpu),
    ExecutionRoleArn: __expectString(output.ExecutionRoleArn),
    Family: __expectString(output.Family),
    InferenceAccelerators:
      output.InferenceAccelerators != null
        ? de_AwsEcsTaskDefinitionInferenceAcceleratorsList(output.InferenceAccelerators, context)
        : undefined,
    IpcMode: __expectString(output.IpcMode),
    Memory: __expectString(output.Memory),
    NetworkMode: __expectString(output.NetworkMode),
    PidMode: __expectString(output.PidMode),
    PlacementConstraints:
      output.PlacementConstraints != null
        ? de_AwsEcsTaskDefinitionPlacementConstraintsList(output.PlacementConstraints, context)
        : undefined,
    ProxyConfiguration:
      output.ProxyConfiguration != null
        ? de_AwsEcsTaskDefinitionProxyConfigurationDetails(output.ProxyConfiguration, context)
        : undefined,
    RequiresCompatibilities:
      output.RequiresCompatibilities != null
        ? de_NonEmptyStringList(output.RequiresCompatibilities, context)
        : undefined,
    TaskRoleArn: __expectString(output.TaskRoleArn),
    Volumes: output.Volumes != null ? de_AwsEcsTaskDefinitionVolumesList(output.Volumes, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionInferenceAcceleratorsDetails
 */
const de_AwsEcsTaskDefinitionInferenceAcceleratorsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionInferenceAcceleratorsDetails => {
  return {
    DeviceName: __expectString(output.DeviceName),
    DeviceType: __expectString(output.DeviceType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionInferenceAcceleratorsList
 */
const de_AwsEcsTaskDefinitionInferenceAcceleratorsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionInferenceAcceleratorsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionInferenceAcceleratorsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionPlacementConstraintsDetails
 */
const de_AwsEcsTaskDefinitionPlacementConstraintsDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionPlacementConstraintsDetails => {
  return {
    Expression: __expectString(output.Expression),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionPlacementConstraintsList
 */
const de_AwsEcsTaskDefinitionPlacementConstraintsList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionPlacementConstraintsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionPlacementConstraintsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationDetails
 */
const de_AwsEcsTaskDefinitionProxyConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionProxyConfigurationDetails => {
  return {
    ContainerName: __expectString(output.ContainerName),
    ProxyConfigurationProperties:
      output.ProxyConfigurationProperties != null
        ? de_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList(
            output.ProxyConfigurationProperties,
            context
          )
        : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails
 */
const de_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList
 */
const de_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesDetails
 */
const de_AwsEcsTaskDefinitionVolumesDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesDetails => {
  return {
    DockerVolumeConfiguration:
      output.DockerVolumeConfiguration != null
        ? de_AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails(output.DockerVolumeConfiguration, context)
        : undefined,
    EfsVolumeConfiguration:
      output.EfsVolumeConfiguration != null
        ? de_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails(output.EfsVolumeConfiguration, context)
        : undefined,
    Host: output.Host != null ? de_AwsEcsTaskDefinitionVolumesHostDetails(output.Host, context) : undefined,
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails
 */
const de_AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails => {
  return {
    Autoprovision: __expectBoolean(output.Autoprovision),
    Driver: __expectString(output.Driver),
    DriverOpts: output.DriverOpts != null ? de_FieldMap(output.DriverOpts, context) : undefined,
    Labels: output.Labels != null ? de_FieldMap(output.Labels, context) : undefined,
    Scope: __expectString(output.Scope),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails
 */
const de_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails => {
  return {
    AccessPointId: __expectString(output.AccessPointId),
    Iam: __expectString(output.Iam),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails
 */
const de_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails => {
  return {
    AuthorizationConfig:
      output.AuthorizationConfig != null
        ? de_AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails(
            output.AuthorizationConfig,
            context
          )
        : undefined,
    FilesystemId: __expectString(output.FilesystemId),
    RootDirectory: __expectString(output.RootDirectory),
    TransitEncryption: __expectString(output.TransitEncryption),
    TransitEncryptionPort: __expectInt32(output.TransitEncryptionPort),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesHostDetails
 */
const de_AwsEcsTaskDefinitionVolumesHostDetails = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesHostDetails => {
  return {
    SourcePath: __expectString(output.SourcePath),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDefinitionVolumesList
 */
const de_AwsEcsTaskDefinitionVolumesList = (
  output: any,
  context: __SerdeContext
): AwsEcsTaskDefinitionVolumesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskDefinitionVolumesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskDetails
 */
const de_AwsEcsTaskDetails = (output: any, context: __SerdeContext): AwsEcsTaskDetails => {
  return {
    ClusterArn: __expectString(output.ClusterArn),
    Containers: output.Containers != null ? de_AwsEcsContainerDetailsList(output.Containers, context) : undefined,
    CreatedAt: __expectString(output.CreatedAt),
    Group: __expectString(output.Group),
    StartedAt: __expectString(output.StartedAt),
    StartedBy: __expectString(output.StartedBy),
    TaskDefinitionArn: __expectString(output.TaskDefinitionArn),
    Version: __expectString(output.Version),
    Volumes: output.Volumes != null ? de_AwsEcsTaskVolumeDetailsList(output.Volumes, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskVolumeDetails
 */
const de_AwsEcsTaskVolumeDetails = (output: any, context: __SerdeContext): AwsEcsTaskVolumeDetails => {
  return {
    Host: output.Host != null ? de_AwsEcsTaskVolumeHostDetails(output.Host, context) : undefined,
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEcsTaskVolumeDetailsList
 */
const de_AwsEcsTaskVolumeDetailsList = (output: any, context: __SerdeContext): AwsEcsTaskVolumeDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEcsTaskVolumeDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEcsTaskVolumeHostDetails
 */
const de_AwsEcsTaskVolumeHostDetails = (output: any, context: __SerdeContext): AwsEcsTaskVolumeHostDetails => {
  return {
    SourcePath: __expectString(output.SourcePath),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEfsAccessPointDetails
 */
const de_AwsEfsAccessPointDetails = (output: any, context: __SerdeContext): AwsEfsAccessPointDetails => {
  return {
    AccessPointId: __expectString(output.AccessPointId),
    Arn: __expectString(output.Arn),
    ClientToken: __expectString(output.ClientToken),
    FileSystemId: __expectString(output.FileSystemId),
    PosixUser: output.PosixUser != null ? de_AwsEfsAccessPointPosixUserDetails(output.PosixUser, context) : undefined,
    RootDirectory:
      output.RootDirectory != null
        ? de_AwsEfsAccessPointRootDirectoryDetails(output.RootDirectory, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEfsAccessPointPosixUserDetails
 */
const de_AwsEfsAccessPointPosixUserDetails = (
  output: any,
  context: __SerdeContext
): AwsEfsAccessPointPosixUserDetails => {
  return {
    Gid: __expectString(output.Gid),
    SecondaryGids: output.SecondaryGids != null ? de_NonEmptyStringList(output.SecondaryGids, context) : undefined,
    Uid: __expectString(output.Uid),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEfsAccessPointRootDirectoryCreationInfoDetails
 */
const de_AwsEfsAccessPointRootDirectoryCreationInfoDetails = (
  output: any,
  context: __SerdeContext
): AwsEfsAccessPointRootDirectoryCreationInfoDetails => {
  return {
    OwnerGid: __expectString(output.OwnerGid),
    OwnerUid: __expectString(output.OwnerUid),
    Permissions: __expectString(output.Permissions),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEfsAccessPointRootDirectoryDetails
 */
const de_AwsEfsAccessPointRootDirectoryDetails = (
  output: any,
  context: __SerdeContext
): AwsEfsAccessPointRootDirectoryDetails => {
  return {
    CreationInfo:
      output.CreationInfo != null
        ? de_AwsEfsAccessPointRootDirectoryCreationInfoDetails(output.CreationInfo, context)
        : undefined,
    Path: __expectString(output.Path),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEksClusterDetails
 */
const de_AwsEksClusterDetails = (output: any, context: __SerdeContext): AwsEksClusterDetails => {
  return {
    Arn: __expectString(output.Arn),
    CertificateAuthorityData: __expectString(output.CertificateAuthorityData),
    ClusterStatus: __expectString(output.ClusterStatus),
    Endpoint: __expectString(output.Endpoint),
    Logging: output.Logging != null ? de_AwsEksClusterLoggingDetails(output.Logging, context) : undefined,
    Name: __expectString(output.Name),
    ResourcesVpcConfig:
      output.ResourcesVpcConfig != null
        ? de_AwsEksClusterResourcesVpcConfigDetails(output.ResourcesVpcConfig, context)
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsEksClusterLoggingClusterLoggingDetails
 */
const de_AwsEksClusterLoggingClusterLoggingDetails = (
  output: any,
  context: __SerdeContext
): AwsEksClusterLoggingClusterLoggingDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
    Types: output.Types != null ? de_NonEmptyStringList(output.Types, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEksClusterLoggingClusterLoggingList
 */
const de_AwsEksClusterLoggingClusterLoggingList = (
  output: any,
  context: __SerdeContext
): AwsEksClusterLoggingClusterLoggingDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsEksClusterLoggingClusterLoggingDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsEksClusterLoggingDetails
 */
const de_AwsEksClusterLoggingDetails = (output: any, context: __SerdeContext): AwsEksClusterLoggingDetails => {
  return {
    ClusterLogging:
      output.ClusterLogging != null
        ? de_AwsEksClusterLoggingClusterLoggingList(output.ClusterLogging, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsEksClusterResourcesVpcConfigDetails
 */
const de_AwsEksClusterResourcesVpcConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsEksClusterResourcesVpcConfigDetails => {
  return {
    EndpointPublicAccess: __expectBoolean(output.EndpointPublicAccess),
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NonEmptyStringList(output.SecurityGroupIds, context) : undefined,
    SubnetIds: output.SubnetIds != null ? de_NonEmptyStringList(output.SubnetIds, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentDetails
 */
const de_AwsElasticBeanstalkEnvironmentDetails = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentDetails => {
  return {
    ApplicationName: __expectString(output.ApplicationName),
    Cname: __expectString(output.Cname),
    DateCreated: __expectString(output.DateCreated),
    DateUpdated: __expectString(output.DateUpdated),
    Description: __expectString(output.Description),
    EndpointUrl: __expectString(output.EndpointUrl),
    EnvironmentArn: __expectString(output.EnvironmentArn),
    EnvironmentId: __expectString(output.EnvironmentId),
    EnvironmentLinks:
      output.EnvironmentLinks != null
        ? de_AwsElasticBeanstalkEnvironmentEnvironmentLinks(output.EnvironmentLinks, context)
        : undefined,
    EnvironmentName: __expectString(output.EnvironmentName),
    OptionSettings:
      output.OptionSettings != null
        ? de_AwsElasticBeanstalkEnvironmentOptionSettings(output.OptionSettings, context)
        : undefined,
    PlatformArn: __expectString(output.PlatformArn),
    SolutionStackName: __expectString(output.SolutionStackName),
    Status: __expectString(output.Status),
    Tier: output.Tier != null ? de_AwsElasticBeanstalkEnvironmentTier(output.Tier, context) : undefined,
    VersionLabel: __expectString(output.VersionLabel),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentEnvironmentLink
 */
const de_AwsElasticBeanstalkEnvironmentEnvironmentLink = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentEnvironmentLink => {
  return {
    EnvironmentName: __expectString(output.EnvironmentName),
    LinkName: __expectString(output.LinkName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentEnvironmentLinks
 */
const de_AwsElasticBeanstalkEnvironmentEnvironmentLinks = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentEnvironmentLink[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElasticBeanstalkEnvironmentEnvironmentLink(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentOptionSetting
 */
const de_AwsElasticBeanstalkEnvironmentOptionSetting = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentOptionSetting => {
  return {
    Namespace: __expectString(output.Namespace),
    OptionName: __expectString(output.OptionName),
    ResourceName: __expectString(output.ResourceName),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentOptionSettings
 */
const de_AwsElasticBeanstalkEnvironmentOptionSettings = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentOptionSetting[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElasticBeanstalkEnvironmentOptionSetting(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElasticBeanstalkEnvironmentTier
 */
const de_AwsElasticBeanstalkEnvironmentTier = (
  output: any,
  context: __SerdeContext
): AwsElasticBeanstalkEnvironmentTier => {
  return {
    Name: __expectString(output.Name),
    Type: __expectString(output.Type),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainDetails
 */
const de_AwsElasticsearchDomainDetails = (output: any, context: __SerdeContext): AwsElasticsearchDomainDetails => {
  return {
    AccessPolicies: __expectString(output.AccessPolicies),
    DomainEndpointOptions:
      output.DomainEndpointOptions != null
        ? de_AwsElasticsearchDomainDomainEndpointOptions(output.DomainEndpointOptions, context)
        : undefined,
    DomainId: __expectString(output.DomainId),
    DomainName: __expectString(output.DomainName),
    ElasticsearchClusterConfig:
      output.ElasticsearchClusterConfig != null
        ? de_AwsElasticsearchDomainElasticsearchClusterConfigDetails(output.ElasticsearchClusterConfig, context)
        : undefined,
    ElasticsearchVersion: __expectString(output.ElasticsearchVersion),
    EncryptionAtRestOptions:
      output.EncryptionAtRestOptions != null
        ? de_AwsElasticsearchDomainEncryptionAtRestOptions(output.EncryptionAtRestOptions, context)
        : undefined,
    Endpoint: __expectString(output.Endpoint),
    Endpoints: output.Endpoints != null ? de_FieldMap(output.Endpoints, context) : undefined,
    LogPublishingOptions:
      output.LogPublishingOptions != null
        ? de_AwsElasticsearchDomainLogPublishingOptions(output.LogPublishingOptions, context)
        : undefined,
    NodeToNodeEncryptionOptions:
      output.NodeToNodeEncryptionOptions != null
        ? de_AwsElasticsearchDomainNodeToNodeEncryptionOptions(output.NodeToNodeEncryptionOptions, context)
        : undefined,
    ServiceSoftwareOptions:
      output.ServiceSoftwareOptions != null
        ? de_AwsElasticsearchDomainServiceSoftwareOptions(output.ServiceSoftwareOptions, context)
        : undefined,
    VPCOptions: output.VPCOptions != null ? de_AwsElasticsearchDomainVPCOptions(output.VPCOptions, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainDomainEndpointOptions
 */
const de_AwsElasticsearchDomainDomainEndpointOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainDomainEndpointOptions => {
  return {
    EnforceHTTPS: __expectBoolean(output.EnforceHTTPS),
    TLSSecurityPolicy: __expectString(output.TLSSecurityPolicy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainElasticsearchClusterConfigDetails
 */
const de_AwsElasticsearchDomainElasticsearchClusterConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainElasticsearchClusterConfigDetails => {
  return {
    DedicatedMasterCount: __expectInt32(output.DedicatedMasterCount),
    DedicatedMasterEnabled: __expectBoolean(output.DedicatedMasterEnabled),
    DedicatedMasterType: __expectString(output.DedicatedMasterType),
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    ZoneAwarenessConfig:
      output.ZoneAwarenessConfig != null
        ? de_AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails(
            output.ZoneAwarenessConfig,
            context
          )
        : undefined,
    ZoneAwarenessEnabled: __expectBoolean(output.ZoneAwarenessEnabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails
 */
const de_AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails => {
  return {
    AvailabilityZoneCount: __expectInt32(output.AvailabilityZoneCount),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainEncryptionAtRestOptions
 */
const de_AwsElasticsearchDomainEncryptionAtRestOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainEncryptionAtRestOptions => {
  return {
    Enabled: __expectBoolean(output.Enabled),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainLogPublishingOptions
 */
const de_AwsElasticsearchDomainLogPublishingOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainLogPublishingOptions => {
  return {
    AuditLogs:
      output.AuditLogs != null
        ? de_AwsElasticsearchDomainLogPublishingOptionsLogConfig(output.AuditLogs, context)
        : undefined,
    IndexSlowLogs:
      output.IndexSlowLogs != null
        ? de_AwsElasticsearchDomainLogPublishingOptionsLogConfig(output.IndexSlowLogs, context)
        : undefined,
    SearchSlowLogs:
      output.SearchSlowLogs != null
        ? de_AwsElasticsearchDomainLogPublishingOptionsLogConfig(output.SearchSlowLogs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainLogPublishingOptionsLogConfig
 */
const de_AwsElasticsearchDomainLogPublishingOptionsLogConfig = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainLogPublishingOptionsLogConfig => {
  return {
    CloudWatchLogsLogGroupArn: __expectString(output.CloudWatchLogsLogGroupArn),
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainNodeToNodeEncryptionOptions
 */
const de_AwsElasticsearchDomainNodeToNodeEncryptionOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainNodeToNodeEncryptionOptions => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainServiceSoftwareOptions
 */
const de_AwsElasticsearchDomainServiceSoftwareOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainServiceSoftwareOptions => {
  return {
    AutomatedUpdateDate: __expectString(output.AutomatedUpdateDate),
    Cancellable: __expectBoolean(output.Cancellable),
    CurrentVersion: __expectString(output.CurrentVersion),
    Description: __expectString(output.Description),
    NewVersion: __expectString(output.NewVersion),
    UpdateAvailable: __expectBoolean(output.UpdateAvailable),
    UpdateStatus: __expectString(output.UpdateStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElasticsearchDomainVPCOptions
 */
const de_AwsElasticsearchDomainVPCOptions = (
  output: any,
  context: __SerdeContext
): AwsElasticsearchDomainVPCOptions => {
  return {
    AvailabilityZones:
      output.AvailabilityZones != null ? de_NonEmptyStringList(output.AvailabilityZones, context) : undefined,
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NonEmptyStringList(output.SecurityGroupIds, context) : undefined,
    SubnetIds: output.SubnetIds != null ? de_NonEmptyStringList(output.SubnetIds, context) : undefined,
    VPCId: __expectString(output.VPCId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbAppCookieStickinessPolicies
 */
const de_AwsElbAppCookieStickinessPolicies = (
  output: any,
  context: __SerdeContext
): AwsElbAppCookieStickinessPolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbAppCookieStickinessPolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbAppCookieStickinessPolicy
 */
const de_AwsElbAppCookieStickinessPolicy = (output: any, context: __SerdeContext): AwsElbAppCookieStickinessPolicy => {
  return {
    CookieName: __expectString(output.CookieName),
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLbCookieStickinessPolicies
 */
const de_AwsElbLbCookieStickinessPolicies = (
  output: any,
  context: __SerdeContext
): AwsElbLbCookieStickinessPolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbLbCookieStickinessPolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbLbCookieStickinessPolicy
 */
const de_AwsElbLbCookieStickinessPolicy = (output: any, context: __SerdeContext): AwsElbLbCookieStickinessPolicy => {
  return {
    CookieExpirationPeriod: __expectLong(output.CookieExpirationPeriod),
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerAccessLog
 */
const de_AwsElbLoadBalancerAccessLog = (output: any, context: __SerdeContext): AwsElbLoadBalancerAccessLog => {
  return {
    EmitInterval: __expectInt32(output.EmitInterval),
    Enabled: __expectBoolean(output.Enabled),
    S3BucketName: __expectString(output.S3BucketName),
    S3BucketPrefix: __expectString(output.S3BucketPrefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerAdditionalAttribute
 */
const de_AwsElbLoadBalancerAdditionalAttribute = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerAdditionalAttribute => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerAdditionalAttributeList
 */
const de_AwsElbLoadBalancerAdditionalAttributeList = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerAdditionalAttribute[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbLoadBalancerAdditionalAttribute(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerAttributes
 */
const de_AwsElbLoadBalancerAttributes = (output: any, context: __SerdeContext): AwsElbLoadBalancerAttributes => {
  return {
    AccessLog: output.AccessLog != null ? de_AwsElbLoadBalancerAccessLog(output.AccessLog, context) : undefined,
    AdditionalAttributes:
      output.AdditionalAttributes != null
        ? de_AwsElbLoadBalancerAdditionalAttributeList(output.AdditionalAttributes, context)
        : undefined,
    ConnectionDraining:
      output.ConnectionDraining != null
        ? de_AwsElbLoadBalancerConnectionDraining(output.ConnectionDraining, context)
        : undefined,
    ConnectionSettings:
      output.ConnectionSettings != null
        ? de_AwsElbLoadBalancerConnectionSettings(output.ConnectionSettings, context)
        : undefined,
    CrossZoneLoadBalancing:
      output.CrossZoneLoadBalancing != null
        ? de_AwsElbLoadBalancerCrossZoneLoadBalancing(output.CrossZoneLoadBalancing, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerBackendServerDescription
 */
const de_AwsElbLoadBalancerBackendServerDescription = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerBackendServerDescription => {
  return {
    InstancePort: __expectInt32(output.InstancePort),
    PolicyNames: output.PolicyNames != null ? de_StringList(output.PolicyNames, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerBackendServerDescriptions
 */
const de_AwsElbLoadBalancerBackendServerDescriptions = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerBackendServerDescription[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbLoadBalancerBackendServerDescription(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerConnectionDraining
 */
const de_AwsElbLoadBalancerConnectionDraining = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerConnectionDraining => {
  return {
    Enabled: __expectBoolean(output.Enabled),
    Timeout: __expectInt32(output.Timeout),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerConnectionSettings
 */
const de_AwsElbLoadBalancerConnectionSettings = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerConnectionSettings => {
  return {
    IdleTimeout: __expectInt32(output.IdleTimeout),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerCrossZoneLoadBalancing
 */
const de_AwsElbLoadBalancerCrossZoneLoadBalancing = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerCrossZoneLoadBalancing => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerDetails
 */
const de_AwsElbLoadBalancerDetails = (output: any, context: __SerdeContext): AwsElbLoadBalancerDetails => {
  return {
    AvailabilityZones: output.AvailabilityZones != null ? de_StringList(output.AvailabilityZones, context) : undefined,
    BackendServerDescriptions:
      output.BackendServerDescriptions != null
        ? de_AwsElbLoadBalancerBackendServerDescriptions(output.BackendServerDescriptions, context)
        : undefined,
    CanonicalHostedZoneName: __expectString(output.CanonicalHostedZoneName),
    CanonicalHostedZoneNameID: __expectString(output.CanonicalHostedZoneNameID),
    CreatedTime: __expectString(output.CreatedTime),
    DnsName: __expectString(output.DnsName),
    HealthCheck: output.HealthCheck != null ? de_AwsElbLoadBalancerHealthCheck(output.HealthCheck, context) : undefined,
    Instances: output.Instances != null ? de_AwsElbLoadBalancerInstances(output.Instances, context) : undefined,
    ListenerDescriptions:
      output.ListenerDescriptions != null
        ? de_AwsElbLoadBalancerListenerDescriptions(output.ListenerDescriptions, context)
        : undefined,
    LoadBalancerAttributes:
      output.LoadBalancerAttributes != null
        ? de_AwsElbLoadBalancerAttributes(output.LoadBalancerAttributes, context)
        : undefined,
    LoadBalancerName: __expectString(output.LoadBalancerName),
    Policies: output.Policies != null ? de_AwsElbLoadBalancerPolicies(output.Policies, context) : undefined,
    Scheme: __expectString(output.Scheme),
    SecurityGroups: output.SecurityGroups != null ? de_StringList(output.SecurityGroups, context) : undefined,
    SourceSecurityGroup:
      output.SourceSecurityGroup != null
        ? de_AwsElbLoadBalancerSourceSecurityGroup(output.SourceSecurityGroup, context)
        : undefined,
    Subnets: output.Subnets != null ? de_StringList(output.Subnets, context) : undefined,
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerHealthCheck
 */
const de_AwsElbLoadBalancerHealthCheck = (output: any, context: __SerdeContext): AwsElbLoadBalancerHealthCheck => {
  return {
    HealthyThreshold: __expectInt32(output.HealthyThreshold),
    Interval: __expectInt32(output.Interval),
    Target: __expectString(output.Target),
    Timeout: __expectInt32(output.Timeout),
    UnhealthyThreshold: __expectInt32(output.UnhealthyThreshold),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerInstance
 */
const de_AwsElbLoadBalancerInstance = (output: any, context: __SerdeContext): AwsElbLoadBalancerInstance => {
  return {
    InstanceId: __expectString(output.InstanceId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerInstances
 */
const de_AwsElbLoadBalancerInstances = (output: any, context: __SerdeContext): AwsElbLoadBalancerInstance[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbLoadBalancerInstance(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerListener
 */
const de_AwsElbLoadBalancerListener = (output: any, context: __SerdeContext): AwsElbLoadBalancerListener => {
  return {
    InstancePort: __expectInt32(output.InstancePort),
    InstanceProtocol: __expectString(output.InstanceProtocol),
    LoadBalancerPort: __expectInt32(output.LoadBalancerPort),
    Protocol: __expectString(output.Protocol),
    SslCertificateId: __expectString(output.SslCertificateId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerListenerDescription
 */
const de_AwsElbLoadBalancerListenerDescription = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerListenerDescription => {
  return {
    Listener: output.Listener != null ? de_AwsElbLoadBalancerListener(output.Listener, context) : undefined,
    PolicyNames: output.PolicyNames != null ? de_StringList(output.PolicyNames, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerListenerDescriptions
 */
const de_AwsElbLoadBalancerListenerDescriptions = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerListenerDescription[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbLoadBalancerListenerDescription(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerPolicies
 */
const de_AwsElbLoadBalancerPolicies = (output: any, context: __SerdeContext): AwsElbLoadBalancerPolicies => {
  return {
    AppCookieStickinessPolicies:
      output.AppCookieStickinessPolicies != null
        ? de_AwsElbAppCookieStickinessPolicies(output.AppCookieStickinessPolicies, context)
        : undefined,
    LbCookieStickinessPolicies:
      output.LbCookieStickinessPolicies != null
        ? de_AwsElbLbCookieStickinessPolicies(output.LbCookieStickinessPolicies, context)
        : undefined,
    OtherPolicies: output.OtherPolicies != null ? de_StringList(output.OtherPolicies, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbLoadBalancerSourceSecurityGroup
 */
const de_AwsElbLoadBalancerSourceSecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsElbLoadBalancerSourceSecurityGroup => {
  return {
    GroupName: __expectString(output.GroupName),
    OwnerAlias: __expectString(output.OwnerAlias),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbv2LoadBalancerAttribute
 */
const de_AwsElbv2LoadBalancerAttribute = (output: any, context: __SerdeContext): AwsElbv2LoadBalancerAttribute => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsElbv2LoadBalancerAttributes
 */
const de_AwsElbv2LoadBalancerAttributes = (output: any, context: __SerdeContext): AwsElbv2LoadBalancerAttribute[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsElbv2LoadBalancerAttribute(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsElbv2LoadBalancerDetails
 */
const de_AwsElbv2LoadBalancerDetails = (output: any, context: __SerdeContext): AwsElbv2LoadBalancerDetails => {
  return {
    AvailabilityZones:
      output.AvailabilityZones != null ? de_AvailabilityZones(output.AvailabilityZones, context) : undefined,
    CanonicalHostedZoneId: __expectString(output.CanonicalHostedZoneId),
    CreatedTime: __expectString(output.CreatedTime),
    DNSName: __expectString(output.DNSName),
    IpAddressType: __expectString(output.IpAddressType),
    LoadBalancerAttributes:
      output.LoadBalancerAttributes != null
        ? de_AwsElbv2LoadBalancerAttributes(output.LoadBalancerAttributes, context)
        : undefined,
    Scheme: __expectString(output.Scheme),
    SecurityGroups: output.SecurityGroups != null ? de_SecurityGroups(output.SecurityGroups, context) : undefined,
    State: output.State != null ? de_LoadBalancerState(output.State, context) : undefined,
    Type: __expectString(output.Type),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAccessKeyDetails
 */
const de_AwsIamAccessKeyDetails = (output: any, context: __SerdeContext): AwsIamAccessKeyDetails => {
  return {
    AccessKeyId: __expectString(output.AccessKeyId),
    AccountId: __expectString(output.AccountId),
    CreatedAt: __expectString(output.CreatedAt),
    PrincipalId: __expectString(output.PrincipalId),
    PrincipalName: __expectString(output.PrincipalName),
    PrincipalType: __expectString(output.PrincipalType),
    SessionContext:
      output.SessionContext != null ? de_AwsIamAccessKeySessionContext(output.SessionContext, context) : undefined,
    Status: __expectString(output.Status),
    UserName: __expectString(output.UserName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAccessKeySessionContext
 */
const de_AwsIamAccessKeySessionContext = (output: any, context: __SerdeContext): AwsIamAccessKeySessionContext => {
  return {
    Attributes:
      output.Attributes != null ? de_AwsIamAccessKeySessionContextAttributes(output.Attributes, context) : undefined,
    SessionIssuer:
      output.SessionIssuer != null
        ? de_AwsIamAccessKeySessionContextSessionIssuer(output.SessionIssuer, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAccessKeySessionContextAttributes
 */
const de_AwsIamAccessKeySessionContextAttributes = (
  output: any,
  context: __SerdeContext
): AwsIamAccessKeySessionContextAttributes => {
  return {
    CreationDate: __expectString(output.CreationDate),
    MfaAuthenticated: __expectBoolean(output.MfaAuthenticated),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAccessKeySessionContextSessionIssuer
 */
const de_AwsIamAccessKeySessionContextSessionIssuer = (
  output: any,
  context: __SerdeContext
): AwsIamAccessKeySessionContextSessionIssuer => {
  return {
    AccountId: __expectString(output.AccountId),
    Arn: __expectString(output.Arn),
    PrincipalId: __expectString(output.PrincipalId),
    Type: __expectString(output.Type),
    UserName: __expectString(output.UserName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAttachedManagedPolicy
 */
const de_AwsIamAttachedManagedPolicy = (output: any, context: __SerdeContext): AwsIamAttachedManagedPolicy => {
  return {
    PolicyArn: __expectString(output.PolicyArn),
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamAttachedManagedPolicyList
 */
const de_AwsIamAttachedManagedPolicyList = (output: any, context: __SerdeContext): AwsIamAttachedManagedPolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamAttachedManagedPolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamGroupDetails
 */
const de_AwsIamGroupDetails = (output: any, context: __SerdeContext): AwsIamGroupDetails => {
  return {
    AttachedManagedPolicies:
      output.AttachedManagedPolicies != null
        ? de_AwsIamAttachedManagedPolicyList(output.AttachedManagedPolicies, context)
        : undefined,
    CreateDate: __expectString(output.CreateDate),
    GroupId: __expectString(output.GroupId),
    GroupName: __expectString(output.GroupName),
    GroupPolicyList:
      output.GroupPolicyList != null ? de_AwsIamGroupPolicyList(output.GroupPolicyList, context) : undefined,
    Path: __expectString(output.Path),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamGroupPolicy
 */
const de_AwsIamGroupPolicy = (output: any, context: __SerdeContext): AwsIamGroupPolicy => {
  return {
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamGroupPolicyList
 */
const de_AwsIamGroupPolicyList = (output: any, context: __SerdeContext): AwsIamGroupPolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamGroupPolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamInstanceProfile
 */
const de_AwsIamInstanceProfile = (output: any, context: __SerdeContext): AwsIamInstanceProfile => {
  return {
    Arn: __expectString(output.Arn),
    CreateDate: __expectString(output.CreateDate),
    InstanceProfileId: __expectString(output.InstanceProfileId),
    InstanceProfileName: __expectString(output.InstanceProfileName),
    Path: __expectString(output.Path),
    Roles: output.Roles != null ? de_AwsIamInstanceProfileRoles(output.Roles, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamInstanceProfileList
 */
const de_AwsIamInstanceProfileList = (output: any, context: __SerdeContext): AwsIamInstanceProfile[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamInstanceProfile(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamInstanceProfileRole
 */
const de_AwsIamInstanceProfileRole = (output: any, context: __SerdeContext): AwsIamInstanceProfileRole => {
  return {
    Arn: __expectString(output.Arn),
    AssumeRolePolicyDocument: __expectString(output.AssumeRolePolicyDocument),
    CreateDate: __expectString(output.CreateDate),
    Path: __expectString(output.Path),
    RoleId: __expectString(output.RoleId),
    RoleName: __expectString(output.RoleName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamInstanceProfileRoles
 */
const de_AwsIamInstanceProfileRoles = (output: any, context: __SerdeContext): AwsIamInstanceProfileRole[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamInstanceProfileRole(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamPermissionsBoundary
 */
const de_AwsIamPermissionsBoundary = (output: any, context: __SerdeContext): AwsIamPermissionsBoundary => {
  return {
    PermissionsBoundaryArn: __expectString(output.PermissionsBoundaryArn),
    PermissionsBoundaryType: __expectString(output.PermissionsBoundaryType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamPolicyDetails
 */
const de_AwsIamPolicyDetails = (output: any, context: __SerdeContext): AwsIamPolicyDetails => {
  return {
    AttachmentCount: __expectInt32(output.AttachmentCount),
    CreateDate: __expectString(output.CreateDate),
    DefaultVersionId: __expectString(output.DefaultVersionId),
    Description: __expectString(output.Description),
    IsAttachable: __expectBoolean(output.IsAttachable),
    Path: __expectString(output.Path),
    PermissionsBoundaryUsageCount: __expectInt32(output.PermissionsBoundaryUsageCount),
    PolicyId: __expectString(output.PolicyId),
    PolicyName: __expectString(output.PolicyName),
    PolicyVersionList:
      output.PolicyVersionList != null ? de_AwsIamPolicyVersionList(output.PolicyVersionList, context) : undefined,
    UpdateDate: __expectString(output.UpdateDate),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamPolicyVersion
 */
const de_AwsIamPolicyVersion = (output: any, context: __SerdeContext): AwsIamPolicyVersion => {
  return {
    CreateDate: __expectString(output.CreateDate),
    IsDefaultVersion: __expectBoolean(output.IsDefaultVersion),
    VersionId: __expectString(output.VersionId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamPolicyVersionList
 */
const de_AwsIamPolicyVersionList = (output: any, context: __SerdeContext): AwsIamPolicyVersion[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamPolicyVersion(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamRoleDetails
 */
const de_AwsIamRoleDetails = (output: any, context: __SerdeContext): AwsIamRoleDetails => {
  return {
    AssumeRolePolicyDocument: __expectString(output.AssumeRolePolicyDocument),
    AttachedManagedPolicies:
      output.AttachedManagedPolicies != null
        ? de_AwsIamAttachedManagedPolicyList(output.AttachedManagedPolicies, context)
        : undefined,
    CreateDate: __expectString(output.CreateDate),
    InstanceProfileList:
      output.InstanceProfileList != null
        ? de_AwsIamInstanceProfileList(output.InstanceProfileList, context)
        : undefined,
    MaxSessionDuration: __expectInt32(output.MaxSessionDuration),
    Path: __expectString(output.Path),
    PermissionsBoundary:
      output.PermissionsBoundary != null
        ? de_AwsIamPermissionsBoundary(output.PermissionsBoundary, context)
        : undefined,
    RoleId: __expectString(output.RoleId),
    RoleName: __expectString(output.RoleName),
    RolePolicyList: output.RolePolicyList != null ? de_AwsIamRolePolicyList(output.RolePolicyList, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamRolePolicy
 */
const de_AwsIamRolePolicy = (output: any, context: __SerdeContext): AwsIamRolePolicy => {
  return {
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamRolePolicyList
 */
const de_AwsIamRolePolicyList = (output: any, context: __SerdeContext): AwsIamRolePolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamRolePolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsIamUserDetails
 */
const de_AwsIamUserDetails = (output: any, context: __SerdeContext): AwsIamUserDetails => {
  return {
    AttachedManagedPolicies:
      output.AttachedManagedPolicies != null
        ? de_AwsIamAttachedManagedPolicyList(output.AttachedManagedPolicies, context)
        : undefined,
    CreateDate: __expectString(output.CreateDate),
    GroupList: output.GroupList != null ? de_StringList(output.GroupList, context) : undefined,
    Path: __expectString(output.Path),
    PermissionsBoundary:
      output.PermissionsBoundary != null
        ? de_AwsIamPermissionsBoundary(output.PermissionsBoundary, context)
        : undefined,
    UserId: __expectString(output.UserId),
    UserName: __expectString(output.UserName),
    UserPolicyList: output.UserPolicyList != null ? de_AwsIamUserPolicyList(output.UserPolicyList, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamUserPolicy
 */
const de_AwsIamUserPolicy = (output: any, context: __SerdeContext): AwsIamUserPolicy => {
  return {
    PolicyName: __expectString(output.PolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsIamUserPolicyList
 */
const de_AwsIamUserPolicyList = (output: any, context: __SerdeContext): AwsIamUserPolicy[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsIamUserPolicy(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsKinesisStreamDetails
 */
const de_AwsKinesisStreamDetails = (output: any, context: __SerdeContext): AwsKinesisStreamDetails => {
  return {
    Arn: __expectString(output.Arn),
    Name: __expectString(output.Name),
    RetentionPeriodHours: __expectInt32(output.RetentionPeriodHours),
    ShardCount: __expectInt32(output.ShardCount),
    StreamEncryption:
      output.StreamEncryption != null
        ? de_AwsKinesisStreamStreamEncryptionDetails(output.StreamEncryption, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsKinesisStreamStreamEncryptionDetails
 */
const de_AwsKinesisStreamStreamEncryptionDetails = (
  output: any,
  context: __SerdeContext
): AwsKinesisStreamStreamEncryptionDetails => {
  return {
    EncryptionType: __expectString(output.EncryptionType),
    KeyId: __expectString(output.KeyId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsKmsKeyDetails
 */
const de_AwsKmsKeyDetails = (output: any, context: __SerdeContext): AwsKmsKeyDetails => {
  return {
    AWSAccountId: __expectString(output.AWSAccountId),
    CreationDate: __limitedParseDouble(output.CreationDate),
    Description: __expectString(output.Description),
    KeyId: __expectString(output.KeyId),
    KeyManager: __expectString(output.KeyManager),
    KeyRotationStatus: __expectBoolean(output.KeyRotationStatus),
    KeyState: __expectString(output.KeyState),
    Origin: __expectString(output.Origin),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionCode
 */
const de_AwsLambdaFunctionCode = (output: any, context: __SerdeContext): AwsLambdaFunctionCode => {
  return {
    S3Bucket: __expectString(output.S3Bucket),
    S3Key: __expectString(output.S3Key),
    S3ObjectVersion: __expectString(output.S3ObjectVersion),
    ZipFile: __expectString(output.ZipFile),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionDeadLetterConfig
 */
const de_AwsLambdaFunctionDeadLetterConfig = (
  output: any,
  context: __SerdeContext
): AwsLambdaFunctionDeadLetterConfig => {
  return {
    TargetArn: __expectString(output.TargetArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionDetails
 */
const de_AwsLambdaFunctionDetails = (output: any, context: __SerdeContext): AwsLambdaFunctionDetails => {
  return {
    Architectures: output.Architectures != null ? de_NonEmptyStringList(output.Architectures, context) : undefined,
    Code: output.Code != null ? de_AwsLambdaFunctionCode(output.Code, context) : undefined,
    CodeSha256: __expectString(output.CodeSha256),
    DeadLetterConfig:
      output.DeadLetterConfig != null
        ? de_AwsLambdaFunctionDeadLetterConfig(output.DeadLetterConfig, context)
        : undefined,
    Environment: output.Environment != null ? de_AwsLambdaFunctionEnvironment(output.Environment, context) : undefined,
    FunctionName: __expectString(output.FunctionName),
    Handler: __expectString(output.Handler),
    KmsKeyArn: __expectString(output.KmsKeyArn),
    LastModified: __expectString(output.LastModified),
    Layers: output.Layers != null ? de_AwsLambdaFunctionLayerList(output.Layers, context) : undefined,
    MasterArn: __expectString(output.MasterArn),
    MemorySize: __expectInt32(output.MemorySize),
    PackageType: __expectString(output.PackageType),
    RevisionId: __expectString(output.RevisionId),
    Role: __expectString(output.Role),
    Runtime: __expectString(output.Runtime),
    Timeout: __expectInt32(output.Timeout),
    TracingConfig:
      output.TracingConfig != null ? de_AwsLambdaFunctionTracingConfig(output.TracingConfig, context) : undefined,
    Version: __expectString(output.Version),
    VpcConfig: output.VpcConfig != null ? de_AwsLambdaFunctionVpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionEnvironment
 */
const de_AwsLambdaFunctionEnvironment = (output: any, context: __SerdeContext): AwsLambdaFunctionEnvironment => {
  return {
    Error: output.Error != null ? de_AwsLambdaFunctionEnvironmentError(output.Error, context) : undefined,
    Variables: output.Variables != null ? de_FieldMap(output.Variables, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionEnvironmentError
 */
const de_AwsLambdaFunctionEnvironmentError = (
  output: any,
  context: __SerdeContext
): AwsLambdaFunctionEnvironmentError => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionLayer
 */
const de_AwsLambdaFunctionLayer = (output: any, context: __SerdeContext): AwsLambdaFunctionLayer => {
  return {
    Arn: __expectString(output.Arn),
    CodeSize: __expectInt32(output.CodeSize),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionLayerList
 */
const de_AwsLambdaFunctionLayerList = (output: any, context: __SerdeContext): AwsLambdaFunctionLayer[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsLambdaFunctionLayer(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionTracingConfig
 */
const de_AwsLambdaFunctionTracingConfig = (output: any, context: __SerdeContext): AwsLambdaFunctionTracingConfig => {
  return {
    Mode: __expectString(output.Mode),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaFunctionVpcConfig
 */
const de_AwsLambdaFunctionVpcConfig = (output: any, context: __SerdeContext): AwsLambdaFunctionVpcConfig => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NonEmptyStringList(output.SecurityGroupIds, context) : undefined,
    SubnetIds: output.SubnetIds != null ? de_NonEmptyStringList(output.SubnetIds, context) : undefined,
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsLambdaLayerVersionDetails
 */
const de_AwsLambdaLayerVersionDetails = (output: any, context: __SerdeContext): AwsLambdaLayerVersionDetails => {
  return {
    CompatibleRuntimes:
      output.CompatibleRuntimes != null ? de_NonEmptyStringList(output.CompatibleRuntimes, context) : undefined,
    CreatedDate: __expectString(output.CreatedDate),
    Version: __expectLong(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1AwsMountPoint
 */
const de_AwsMountPoint = (output: any, context: __SerdeContext): AwsMountPoint => {
  return {
    ContainerPath: __expectString(output.ContainerPath),
    SourceVolume: __expectString(output.SourceVolume),
  } as any;
};

/**
 * deserializeAws_restJson1AwsMountPointList
 */
const de_AwsMountPointList = (output: any, context: __SerdeContext): AwsMountPoint[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsMountPoint(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsNetworkFirewallFirewallDetails
 */
const de_AwsNetworkFirewallFirewallDetails = (
  output: any,
  context: __SerdeContext
): AwsNetworkFirewallFirewallDetails => {
  return {
    DeleteProtection: __expectBoolean(output.DeleteProtection),
    Description: __expectString(output.Description),
    FirewallArn: __expectString(output.FirewallArn),
    FirewallId: __expectString(output.FirewallId),
    FirewallName: __expectString(output.FirewallName),
    FirewallPolicyArn: __expectString(output.FirewallPolicyArn),
    FirewallPolicyChangeProtection: __expectBoolean(output.FirewallPolicyChangeProtection),
    SubnetChangeProtection: __expectBoolean(output.SubnetChangeProtection),
    SubnetMappings:
      output.SubnetMappings != null
        ? de_AwsNetworkFirewallFirewallSubnetMappingsList(output.SubnetMappings, context)
        : undefined,
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsNetworkFirewallFirewallPolicyDetails
 */
const de_AwsNetworkFirewallFirewallPolicyDetails = (
  output: any,
  context: __SerdeContext
): AwsNetworkFirewallFirewallPolicyDetails => {
  return {
    Description: __expectString(output.Description),
    FirewallPolicy:
      output.FirewallPolicy != null ? de_FirewallPolicyDetails(output.FirewallPolicy, context) : undefined,
    FirewallPolicyArn: __expectString(output.FirewallPolicyArn),
    FirewallPolicyId: __expectString(output.FirewallPolicyId),
    FirewallPolicyName: __expectString(output.FirewallPolicyName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsNetworkFirewallFirewallSubnetMappingsDetails
 */
const de_AwsNetworkFirewallFirewallSubnetMappingsDetails = (
  output: any,
  context: __SerdeContext
): AwsNetworkFirewallFirewallSubnetMappingsDetails => {
  return {
    SubnetId: __expectString(output.SubnetId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsNetworkFirewallFirewallSubnetMappingsList
 */
const de_AwsNetworkFirewallFirewallSubnetMappingsList = (
  output: any,
  context: __SerdeContext
): AwsNetworkFirewallFirewallSubnetMappingsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsNetworkFirewallFirewallSubnetMappingsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsNetworkFirewallRuleGroupDetails
 */
const de_AwsNetworkFirewallRuleGroupDetails = (
  output: any,
  context: __SerdeContext
): AwsNetworkFirewallRuleGroupDetails => {
  return {
    Capacity: __expectInt32(output.Capacity),
    Description: __expectString(output.Description),
    RuleGroup: output.RuleGroup != null ? de_RuleGroupDetails(output.RuleGroup, context) : undefined,
    RuleGroupArn: __expectString(output.RuleGroupArn),
    RuleGroupId: __expectString(output.RuleGroupId),
    RuleGroupName: __expectString(output.RuleGroupName),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails
 */
const de_AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
    InternalUserDatabaseEnabled: __expectBoolean(output.InternalUserDatabaseEnabled),
    MasterUserOptions:
      output.MasterUserOptions != null
        ? de_AwsOpenSearchServiceDomainMasterUserOptionsDetails(output.MasterUserOptions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainClusterConfigDetails
 */
const de_AwsOpenSearchServiceDomainClusterConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainClusterConfigDetails => {
  return {
    DedicatedMasterCount: __expectInt32(output.DedicatedMasterCount),
    DedicatedMasterEnabled: __expectBoolean(output.DedicatedMasterEnabled),
    DedicatedMasterType: __expectString(output.DedicatedMasterType),
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    WarmCount: __expectInt32(output.WarmCount),
    WarmEnabled: __expectBoolean(output.WarmEnabled),
    WarmType: __expectString(output.WarmType),
    ZoneAwarenessConfig:
      output.ZoneAwarenessConfig != null
        ? de_AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails(output.ZoneAwarenessConfig, context)
        : undefined,
    ZoneAwarenessEnabled: __expectBoolean(output.ZoneAwarenessEnabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails
 */
const de_AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails => {
  return {
    AvailabilityZoneCount: __expectInt32(output.AvailabilityZoneCount),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainDetails
 */
const de_AwsOpenSearchServiceDomainDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainDetails => {
  return {
    AccessPolicies: __expectString(output.AccessPolicies),
    AdvancedSecurityOptions:
      output.AdvancedSecurityOptions != null
        ? de_AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails(output.AdvancedSecurityOptions, context)
        : undefined,
    Arn: __expectString(output.Arn),
    ClusterConfig:
      output.ClusterConfig != null
        ? de_AwsOpenSearchServiceDomainClusterConfigDetails(output.ClusterConfig, context)
        : undefined,
    DomainEndpoint: __expectString(output.DomainEndpoint),
    DomainEndpointOptions:
      output.DomainEndpointOptions != null
        ? de_AwsOpenSearchServiceDomainDomainEndpointOptionsDetails(output.DomainEndpointOptions, context)
        : undefined,
    DomainEndpoints: output.DomainEndpoints != null ? de_FieldMap(output.DomainEndpoints, context) : undefined,
    DomainName: __expectString(output.DomainName),
    EncryptionAtRestOptions:
      output.EncryptionAtRestOptions != null
        ? de_AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails(output.EncryptionAtRestOptions, context)
        : undefined,
    EngineVersion: __expectString(output.EngineVersion),
    Id: __expectString(output.Id),
    LogPublishingOptions:
      output.LogPublishingOptions != null
        ? de_AwsOpenSearchServiceDomainLogPublishingOptionsDetails(output.LogPublishingOptions, context)
        : undefined,
    NodeToNodeEncryptionOptions:
      output.NodeToNodeEncryptionOptions != null
        ? de_AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails(output.NodeToNodeEncryptionOptions, context)
        : undefined,
    ServiceSoftwareOptions:
      output.ServiceSoftwareOptions != null
        ? de_AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails(output.ServiceSoftwareOptions, context)
        : undefined,
    VpcOptions:
      output.VpcOptions != null
        ? de_AwsOpenSearchServiceDomainVpcOptionsDetails(output.VpcOptions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainDomainEndpointOptionsDetails
 */
const de_AwsOpenSearchServiceDomainDomainEndpointOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainDomainEndpointOptionsDetails => {
  return {
    CustomEndpoint: __expectString(output.CustomEndpoint),
    CustomEndpointCertificateArn: __expectString(output.CustomEndpointCertificateArn),
    CustomEndpointEnabled: __expectBoolean(output.CustomEndpointEnabled),
    EnforceHTTPS: __expectBoolean(output.EnforceHTTPS),
    TLSSecurityPolicy: __expectString(output.TLSSecurityPolicy),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails
 */
const de_AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainLogPublishingOption
 */
const de_AwsOpenSearchServiceDomainLogPublishingOption = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainLogPublishingOption => {
  return {
    CloudWatchLogsLogGroupArn: __expectString(output.CloudWatchLogsLogGroupArn),
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainLogPublishingOptionsDetails
 */
const de_AwsOpenSearchServiceDomainLogPublishingOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainLogPublishingOptionsDetails => {
  return {
    AuditLogs:
      output.AuditLogs != null
        ? de_AwsOpenSearchServiceDomainLogPublishingOption(output.AuditLogs, context)
        : undefined,
    IndexSlowLogs:
      output.IndexSlowLogs != null
        ? de_AwsOpenSearchServiceDomainLogPublishingOption(output.IndexSlowLogs, context)
        : undefined,
    SearchSlowLogs:
      output.SearchSlowLogs != null
        ? de_AwsOpenSearchServiceDomainLogPublishingOption(output.SearchSlowLogs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainMasterUserOptionsDetails
 */
const de_AwsOpenSearchServiceDomainMasterUserOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainMasterUserOptionsDetails => {
  return {
    MasterUserArn: __expectString(output.MasterUserArn),
    MasterUserName: __expectString(output.MasterUserName),
    MasterUserPassword: __expectString(output.MasterUserPassword),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails
 */
const de_AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails
 */
const de_AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails => {
  return {
    AutomatedUpdateDate: __expectString(output.AutomatedUpdateDate),
    Cancellable: __expectBoolean(output.Cancellable),
    CurrentVersion: __expectString(output.CurrentVersion),
    Description: __expectString(output.Description),
    NewVersion: __expectString(output.NewVersion),
    OptionalDeployment: __expectBoolean(output.OptionalDeployment),
    UpdateAvailable: __expectBoolean(output.UpdateAvailable),
    UpdateStatus: __expectString(output.UpdateStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsOpenSearchServiceDomainVpcOptionsDetails
 */
const de_AwsOpenSearchServiceDomainVpcOptionsDetails = (
  output: any,
  context: __SerdeContext
): AwsOpenSearchServiceDomainVpcOptionsDetails => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NonEmptyStringList(output.SecurityGroupIds, context) : undefined,
    SubnetIds: output.SubnetIds != null ? de_NonEmptyStringList(output.SubnetIds, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterAssociatedRole
 */
const de_AwsRdsDbClusterAssociatedRole = (output: any, context: __SerdeContext): AwsRdsDbClusterAssociatedRole => {
  return {
    RoleArn: __expectString(output.RoleArn),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterAssociatedRoles
 */
const de_AwsRdsDbClusterAssociatedRoles = (output: any, context: __SerdeContext): AwsRdsDbClusterAssociatedRole[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbClusterAssociatedRole(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterDetails
 */
const de_AwsRdsDbClusterDetails = (output: any, context: __SerdeContext): AwsRdsDbClusterDetails => {
  return {
    ActivityStreamStatus: __expectString(output.ActivityStreamStatus),
    AllocatedStorage: __expectInt32(output.AllocatedStorage),
    AssociatedRoles:
      output.AssociatedRoles != null ? de_AwsRdsDbClusterAssociatedRoles(output.AssociatedRoles, context) : undefined,
    AvailabilityZones: output.AvailabilityZones != null ? de_StringList(output.AvailabilityZones, context) : undefined,
    BackupRetentionPeriod: __expectInt32(output.BackupRetentionPeriod),
    ClusterCreateTime: __expectString(output.ClusterCreateTime),
    CopyTagsToSnapshot: __expectBoolean(output.CopyTagsToSnapshot),
    CrossAccountClone: __expectBoolean(output.CrossAccountClone),
    CustomEndpoints: output.CustomEndpoints != null ? de_StringList(output.CustomEndpoints, context) : undefined,
    DatabaseName: __expectString(output.DatabaseName),
    DbClusterIdentifier: __expectString(output.DbClusterIdentifier),
    DbClusterMembers:
      output.DbClusterMembers != null ? de_AwsRdsDbClusterMembers(output.DbClusterMembers, context) : undefined,
    DbClusterOptionGroupMemberships:
      output.DbClusterOptionGroupMemberships != null
        ? de_AwsRdsDbClusterOptionGroupMemberships(output.DbClusterOptionGroupMemberships, context)
        : undefined,
    DbClusterParameterGroup: __expectString(output.DbClusterParameterGroup),
    DbClusterResourceId: __expectString(output.DbClusterResourceId),
    DbSubnetGroup: __expectString(output.DbSubnetGroup),
    DeletionProtection: __expectBoolean(output.DeletionProtection),
    DomainMemberships:
      output.DomainMemberships != null ? de_AwsRdsDbDomainMemberships(output.DomainMemberships, context) : undefined,
    EnabledCloudWatchLogsExports:
      output.EnabledCloudWatchLogsExports != null
        ? de_StringList(output.EnabledCloudWatchLogsExports, context)
        : undefined,
    Endpoint: __expectString(output.Endpoint),
    Engine: __expectString(output.Engine),
    EngineMode: __expectString(output.EngineMode),
    EngineVersion: __expectString(output.EngineVersion),
    HostedZoneId: __expectString(output.HostedZoneId),
    HttpEndpointEnabled: __expectBoolean(output.HttpEndpointEnabled),
    IamDatabaseAuthenticationEnabled: __expectBoolean(output.IamDatabaseAuthenticationEnabled),
    KmsKeyId: __expectString(output.KmsKeyId),
    MasterUsername: __expectString(output.MasterUsername),
    MultiAz: __expectBoolean(output.MultiAz),
    Port: __expectInt32(output.Port),
    PreferredBackupWindow: __expectString(output.PreferredBackupWindow),
    PreferredMaintenanceWindow: __expectString(output.PreferredMaintenanceWindow),
    ReadReplicaIdentifiers:
      output.ReadReplicaIdentifiers != null ? de_StringList(output.ReadReplicaIdentifiers, context) : undefined,
    ReaderEndpoint: __expectString(output.ReaderEndpoint),
    Status: __expectString(output.Status),
    StorageEncrypted: __expectBoolean(output.StorageEncrypted),
    VpcSecurityGroups:
      output.VpcSecurityGroups != null
        ? de_AwsRdsDbInstanceVpcSecurityGroups(output.VpcSecurityGroups, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterMember
 */
const de_AwsRdsDbClusterMember = (output: any, context: __SerdeContext): AwsRdsDbClusterMember => {
  return {
    DbClusterParameterGroupStatus: __expectString(output.DbClusterParameterGroupStatus),
    DbInstanceIdentifier: __expectString(output.DbInstanceIdentifier),
    IsClusterWriter: __expectBoolean(output.IsClusterWriter),
    PromotionTier: __expectInt32(output.PromotionTier),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterMembers
 */
const de_AwsRdsDbClusterMembers = (output: any, context: __SerdeContext): AwsRdsDbClusterMember[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbClusterMember(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterOptionGroupMembership
 */
const de_AwsRdsDbClusterOptionGroupMembership = (
  output: any,
  context: __SerdeContext
): AwsRdsDbClusterOptionGroupMembership => {
  return {
    DbClusterOptionGroupName: __expectString(output.DbClusterOptionGroupName),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterOptionGroupMemberships
 */
const de_AwsRdsDbClusterOptionGroupMemberships = (
  output: any,
  context: __SerdeContext
): AwsRdsDbClusterOptionGroupMembership[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbClusterOptionGroupMembership(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbClusterSnapshotDetails
 */
const de_AwsRdsDbClusterSnapshotDetails = (output: any, context: __SerdeContext): AwsRdsDbClusterSnapshotDetails => {
  return {
    AllocatedStorage: __expectInt32(output.AllocatedStorage),
    AvailabilityZones: output.AvailabilityZones != null ? de_StringList(output.AvailabilityZones, context) : undefined,
    ClusterCreateTime: __expectString(output.ClusterCreateTime),
    DbClusterIdentifier: __expectString(output.DbClusterIdentifier),
    DbClusterSnapshotIdentifier: __expectString(output.DbClusterSnapshotIdentifier),
    Engine: __expectString(output.Engine),
    EngineVersion: __expectString(output.EngineVersion),
    IamDatabaseAuthenticationEnabled: __expectBoolean(output.IamDatabaseAuthenticationEnabled),
    KmsKeyId: __expectString(output.KmsKeyId),
    LicenseModel: __expectString(output.LicenseModel),
    MasterUsername: __expectString(output.MasterUsername),
    PercentProgress: __expectInt32(output.PercentProgress),
    Port: __expectInt32(output.Port),
    SnapshotCreateTime: __expectString(output.SnapshotCreateTime),
    SnapshotType: __expectString(output.SnapshotType),
    Status: __expectString(output.Status),
    StorageEncrypted: __expectBoolean(output.StorageEncrypted),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbDomainMembership
 */
const de_AwsRdsDbDomainMembership = (output: any, context: __SerdeContext): AwsRdsDbDomainMembership => {
  return {
    Domain: __expectString(output.Domain),
    Fqdn: __expectString(output.Fqdn),
    IamRoleName: __expectString(output.IamRoleName),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbDomainMemberships
 */
const de_AwsRdsDbDomainMemberships = (output: any, context: __SerdeContext): AwsRdsDbDomainMembership[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbDomainMembership(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceAssociatedRole
 */
const de_AwsRdsDbInstanceAssociatedRole = (output: any, context: __SerdeContext): AwsRdsDbInstanceAssociatedRole => {
  return {
    FeatureName: __expectString(output.FeatureName),
    RoleArn: __expectString(output.RoleArn),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceAssociatedRoles
 */
const de_AwsRdsDbInstanceAssociatedRoles = (output: any, context: __SerdeContext): AwsRdsDbInstanceAssociatedRole[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbInstanceAssociatedRole(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceDetails
 */
const de_AwsRdsDbInstanceDetails = (output: any, context: __SerdeContext): AwsRdsDbInstanceDetails => {
  return {
    AllocatedStorage: __expectInt32(output.AllocatedStorage),
    AssociatedRoles:
      output.AssociatedRoles != null ? de_AwsRdsDbInstanceAssociatedRoles(output.AssociatedRoles, context) : undefined,
    AutoMinorVersionUpgrade: __expectBoolean(output.AutoMinorVersionUpgrade),
    AvailabilityZone: __expectString(output.AvailabilityZone),
    BackupRetentionPeriod: __expectInt32(output.BackupRetentionPeriod),
    CACertificateIdentifier: __expectString(output.CACertificateIdentifier),
    CharacterSetName: __expectString(output.CharacterSetName),
    CopyTagsToSnapshot: __expectBoolean(output.CopyTagsToSnapshot),
    DBClusterIdentifier: __expectString(output.DBClusterIdentifier),
    DBInstanceClass: __expectString(output.DBInstanceClass),
    DBInstanceIdentifier: __expectString(output.DBInstanceIdentifier),
    DBName: __expectString(output.DBName),
    DbInstancePort: __expectInt32(output.DbInstancePort),
    DbInstanceStatus: __expectString(output.DbInstanceStatus),
    DbParameterGroups:
      output.DbParameterGroups != null ? de_AwsRdsDbParameterGroups(output.DbParameterGroups, context) : undefined,
    DbSecurityGroups: output.DbSecurityGroups != null ? de_StringList(output.DbSecurityGroups, context) : undefined,
    DbSubnetGroup: output.DbSubnetGroup != null ? de_AwsRdsDbSubnetGroup(output.DbSubnetGroup, context) : undefined,
    DbiResourceId: __expectString(output.DbiResourceId),
    DeletionProtection: __expectBoolean(output.DeletionProtection),
    DomainMemberships:
      output.DomainMemberships != null ? de_AwsRdsDbDomainMemberships(output.DomainMemberships, context) : undefined,
    EnabledCloudWatchLogsExports:
      output.EnabledCloudWatchLogsExports != null
        ? de_StringList(output.EnabledCloudWatchLogsExports, context)
        : undefined,
    Endpoint: output.Endpoint != null ? de_AwsRdsDbInstanceEndpoint(output.Endpoint, context) : undefined,
    Engine: __expectString(output.Engine),
    EngineVersion: __expectString(output.EngineVersion),
    EnhancedMonitoringResourceArn: __expectString(output.EnhancedMonitoringResourceArn),
    IAMDatabaseAuthenticationEnabled: __expectBoolean(output.IAMDatabaseAuthenticationEnabled),
    InstanceCreateTime: __expectString(output.InstanceCreateTime),
    Iops: __expectInt32(output.Iops),
    KmsKeyId: __expectString(output.KmsKeyId),
    LatestRestorableTime: __expectString(output.LatestRestorableTime),
    LicenseModel: __expectString(output.LicenseModel),
    ListenerEndpoint:
      output.ListenerEndpoint != null ? de_AwsRdsDbInstanceEndpoint(output.ListenerEndpoint, context) : undefined,
    MasterUsername: __expectString(output.MasterUsername),
    MaxAllocatedStorage: __expectInt32(output.MaxAllocatedStorage),
    MonitoringInterval: __expectInt32(output.MonitoringInterval),
    MonitoringRoleArn: __expectString(output.MonitoringRoleArn),
    MultiAz: __expectBoolean(output.MultiAz),
    OptionGroupMemberships:
      output.OptionGroupMemberships != null
        ? de_AwsRdsDbOptionGroupMemberships(output.OptionGroupMemberships, context)
        : undefined,
    PendingModifiedValues:
      output.PendingModifiedValues != null
        ? de_AwsRdsDbPendingModifiedValues(output.PendingModifiedValues, context)
        : undefined,
    PerformanceInsightsEnabled: __expectBoolean(output.PerformanceInsightsEnabled),
    PerformanceInsightsKmsKeyId: __expectString(output.PerformanceInsightsKmsKeyId),
    PerformanceInsightsRetentionPeriod: __expectInt32(output.PerformanceInsightsRetentionPeriod),
    PreferredBackupWindow: __expectString(output.PreferredBackupWindow),
    PreferredMaintenanceWindow: __expectString(output.PreferredMaintenanceWindow),
    ProcessorFeatures:
      output.ProcessorFeatures != null ? de_AwsRdsDbProcessorFeatures(output.ProcessorFeatures, context) : undefined,
    PromotionTier: __expectInt32(output.PromotionTier),
    PubliclyAccessible: __expectBoolean(output.PubliclyAccessible),
    ReadReplicaDBClusterIdentifiers:
      output.ReadReplicaDBClusterIdentifiers != null
        ? de_StringList(output.ReadReplicaDBClusterIdentifiers, context)
        : undefined,
    ReadReplicaDBInstanceIdentifiers:
      output.ReadReplicaDBInstanceIdentifiers != null
        ? de_StringList(output.ReadReplicaDBInstanceIdentifiers, context)
        : undefined,
    ReadReplicaSourceDBInstanceIdentifier: __expectString(output.ReadReplicaSourceDBInstanceIdentifier),
    SecondaryAvailabilityZone: __expectString(output.SecondaryAvailabilityZone),
    StatusInfos: output.StatusInfos != null ? de_AwsRdsDbStatusInfos(output.StatusInfos, context) : undefined,
    StorageEncrypted: __expectBoolean(output.StorageEncrypted),
    StorageType: __expectString(output.StorageType),
    TdeCredentialArn: __expectString(output.TdeCredentialArn),
    Timezone: __expectString(output.Timezone),
    VpcSecurityGroups:
      output.VpcSecurityGroups != null
        ? de_AwsRdsDbInstanceVpcSecurityGroups(output.VpcSecurityGroups, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceEndpoint
 */
const de_AwsRdsDbInstanceEndpoint = (output: any, context: __SerdeContext): AwsRdsDbInstanceEndpoint => {
  return {
    Address: __expectString(output.Address),
    HostedZoneId: __expectString(output.HostedZoneId),
    Port: __expectInt32(output.Port),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceVpcSecurityGroup
 */
const de_AwsRdsDbInstanceVpcSecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsRdsDbInstanceVpcSecurityGroup => {
  return {
    Status: __expectString(output.Status),
    VpcSecurityGroupId: __expectString(output.VpcSecurityGroupId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbInstanceVpcSecurityGroups
 */
const de_AwsRdsDbInstanceVpcSecurityGroups = (
  output: any,
  context: __SerdeContext
): AwsRdsDbInstanceVpcSecurityGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbInstanceVpcSecurityGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbOptionGroupMembership
 */
const de_AwsRdsDbOptionGroupMembership = (output: any, context: __SerdeContext): AwsRdsDbOptionGroupMembership => {
  return {
    OptionGroupName: __expectString(output.OptionGroupName),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbOptionGroupMemberships
 */
const de_AwsRdsDbOptionGroupMemberships = (output: any, context: __SerdeContext): AwsRdsDbOptionGroupMembership[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbOptionGroupMembership(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbParameterGroup
 */
const de_AwsRdsDbParameterGroup = (output: any, context: __SerdeContext): AwsRdsDbParameterGroup => {
  return {
    DbParameterGroupName: __expectString(output.DbParameterGroupName),
    ParameterApplyStatus: __expectString(output.ParameterApplyStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbParameterGroups
 */
const de_AwsRdsDbParameterGroups = (output: any, context: __SerdeContext): AwsRdsDbParameterGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbParameterGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbPendingModifiedValues
 */
const de_AwsRdsDbPendingModifiedValues = (output: any, context: __SerdeContext): AwsRdsDbPendingModifiedValues => {
  return {
    AllocatedStorage: __expectInt32(output.AllocatedStorage),
    BackupRetentionPeriod: __expectInt32(output.BackupRetentionPeriod),
    CaCertificateIdentifier: __expectString(output.CaCertificateIdentifier),
    DbInstanceClass: __expectString(output.DbInstanceClass),
    DbInstanceIdentifier: __expectString(output.DbInstanceIdentifier),
    DbSubnetGroupName: __expectString(output.DbSubnetGroupName),
    EngineVersion: __expectString(output.EngineVersion),
    Iops: __expectInt32(output.Iops),
    LicenseModel: __expectString(output.LicenseModel),
    MasterUserPassword: __expectString(output.MasterUserPassword),
    MultiAZ: __expectBoolean(output.MultiAZ),
    PendingCloudWatchLogsExports:
      output.PendingCloudWatchLogsExports != null
        ? de_AwsRdsPendingCloudWatchLogsExports(output.PendingCloudWatchLogsExports, context)
        : undefined,
    Port: __expectInt32(output.Port),
    ProcessorFeatures:
      output.ProcessorFeatures != null ? de_AwsRdsDbProcessorFeatures(output.ProcessorFeatures, context) : undefined,
    StorageType: __expectString(output.StorageType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbProcessorFeature
 */
const de_AwsRdsDbProcessorFeature = (output: any, context: __SerdeContext): AwsRdsDbProcessorFeature => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbProcessorFeatures
 */
const de_AwsRdsDbProcessorFeatures = (output: any, context: __SerdeContext): AwsRdsDbProcessorFeature[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbProcessorFeature(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbSecurityGroupDetails
 */
const de_AwsRdsDbSecurityGroupDetails = (output: any, context: __SerdeContext): AwsRdsDbSecurityGroupDetails => {
  return {
    DbSecurityGroupArn: __expectString(output.DbSecurityGroupArn),
    DbSecurityGroupDescription: __expectString(output.DbSecurityGroupDescription),
    DbSecurityGroupName: __expectString(output.DbSecurityGroupName),
    Ec2SecurityGroups:
      output.Ec2SecurityGroups != null
        ? de_AwsRdsDbSecurityGroupEc2SecurityGroups(output.Ec2SecurityGroups, context)
        : undefined,
    IpRanges: output.IpRanges != null ? de_AwsRdsDbSecurityGroupIpRanges(output.IpRanges, context) : undefined,
    OwnerId: __expectString(output.OwnerId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSecurityGroupEc2SecurityGroup
 */
const de_AwsRdsDbSecurityGroupEc2SecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsRdsDbSecurityGroupEc2SecurityGroup => {
  return {
    Ec2SecurityGroupId: __expectString(output.Ec2SecurityGroupId),
    Ec2SecurityGroupName: __expectString(output.Ec2SecurityGroupName),
    Ec2SecurityGroupOwnerId: __expectString(output.Ec2SecurityGroupOwnerId),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSecurityGroupEc2SecurityGroups
 */
const de_AwsRdsDbSecurityGroupEc2SecurityGroups = (
  output: any,
  context: __SerdeContext
): AwsRdsDbSecurityGroupEc2SecurityGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbSecurityGroupEc2SecurityGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbSecurityGroupIpRange
 */
const de_AwsRdsDbSecurityGroupIpRange = (output: any, context: __SerdeContext): AwsRdsDbSecurityGroupIpRange => {
  return {
    CidrIp: __expectString(output.CidrIp),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSecurityGroupIpRanges
 */
const de_AwsRdsDbSecurityGroupIpRanges = (output: any, context: __SerdeContext): AwsRdsDbSecurityGroupIpRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbSecurityGroupIpRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbSnapshotDetails
 */
const de_AwsRdsDbSnapshotDetails = (output: any, context: __SerdeContext): AwsRdsDbSnapshotDetails => {
  return {
    AllocatedStorage: __expectInt32(output.AllocatedStorage),
    AvailabilityZone: __expectString(output.AvailabilityZone),
    DbInstanceIdentifier: __expectString(output.DbInstanceIdentifier),
    DbSnapshotIdentifier: __expectString(output.DbSnapshotIdentifier),
    DbiResourceId: __expectString(output.DbiResourceId),
    Encrypted: __expectBoolean(output.Encrypted),
    Engine: __expectString(output.Engine),
    EngineVersion: __expectString(output.EngineVersion),
    IamDatabaseAuthenticationEnabled: __expectBoolean(output.IamDatabaseAuthenticationEnabled),
    InstanceCreateTime: __expectString(output.InstanceCreateTime),
    Iops: __expectInt32(output.Iops),
    KmsKeyId: __expectString(output.KmsKeyId),
    LicenseModel: __expectString(output.LicenseModel),
    MasterUsername: __expectString(output.MasterUsername),
    OptionGroupName: __expectString(output.OptionGroupName),
    PercentProgress: __expectInt32(output.PercentProgress),
    Port: __expectInt32(output.Port),
    ProcessorFeatures:
      output.ProcessorFeatures != null ? de_AwsRdsDbProcessorFeatures(output.ProcessorFeatures, context) : undefined,
    SnapshotCreateTime: __expectString(output.SnapshotCreateTime),
    SnapshotType: __expectString(output.SnapshotType),
    SourceDbSnapshotIdentifier: __expectString(output.SourceDbSnapshotIdentifier),
    SourceRegion: __expectString(output.SourceRegion),
    Status: __expectString(output.Status),
    StorageType: __expectString(output.StorageType),
    TdeCredentialArn: __expectString(output.TdeCredentialArn),
    Timezone: __expectString(output.Timezone),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbStatusInfo
 */
const de_AwsRdsDbStatusInfo = (output: any, context: __SerdeContext): AwsRdsDbStatusInfo => {
  return {
    Message: __expectString(output.Message),
    Normal: __expectBoolean(output.Normal),
    Status: __expectString(output.Status),
    StatusType: __expectString(output.StatusType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbStatusInfos
 */
const de_AwsRdsDbStatusInfos = (output: any, context: __SerdeContext): AwsRdsDbStatusInfo[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbStatusInfo(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsDbSubnetGroup
 */
const de_AwsRdsDbSubnetGroup = (output: any, context: __SerdeContext): AwsRdsDbSubnetGroup => {
  return {
    DbSubnetGroupArn: __expectString(output.DbSubnetGroupArn),
    DbSubnetGroupDescription: __expectString(output.DbSubnetGroupDescription),
    DbSubnetGroupName: __expectString(output.DbSubnetGroupName),
    SubnetGroupStatus: __expectString(output.SubnetGroupStatus),
    Subnets: output.Subnets != null ? de_AwsRdsDbSubnetGroupSubnets(output.Subnets, context) : undefined,
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSubnetGroupSubnet
 */
const de_AwsRdsDbSubnetGroupSubnet = (output: any, context: __SerdeContext): AwsRdsDbSubnetGroupSubnet => {
  return {
    SubnetAvailabilityZone:
      output.SubnetAvailabilityZone != null
        ? de_AwsRdsDbSubnetGroupSubnetAvailabilityZone(output.SubnetAvailabilityZone, context)
        : undefined,
    SubnetIdentifier: __expectString(output.SubnetIdentifier),
    SubnetStatus: __expectString(output.SubnetStatus),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSubnetGroupSubnetAvailabilityZone
 */
const de_AwsRdsDbSubnetGroupSubnetAvailabilityZone = (
  output: any,
  context: __SerdeContext
): AwsRdsDbSubnetGroupSubnetAvailabilityZone => {
  return {
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsDbSubnetGroupSubnets
 */
const de_AwsRdsDbSubnetGroupSubnets = (output: any, context: __SerdeContext): AwsRdsDbSubnetGroupSubnet[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRdsDbSubnetGroupSubnet(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRdsEventSubscriptionDetails
 */
const de_AwsRdsEventSubscriptionDetails = (output: any, context: __SerdeContext): AwsRdsEventSubscriptionDetails => {
  return {
    CustSubscriptionId: __expectString(output.CustSubscriptionId),
    CustomerAwsId: __expectString(output.CustomerAwsId),
    Enabled: __expectBoolean(output.Enabled),
    EventCategoriesList:
      output.EventCategoriesList != null ? de_NonEmptyStringList(output.EventCategoriesList, context) : undefined,
    EventSubscriptionArn: __expectString(output.EventSubscriptionArn),
    SnsTopicArn: __expectString(output.SnsTopicArn),
    SourceIdsList: output.SourceIdsList != null ? de_NonEmptyStringList(output.SourceIdsList, context) : undefined,
    SourceType: __expectString(output.SourceType),
    Status: __expectString(output.Status),
    SubscriptionCreationTime: __expectString(output.SubscriptionCreationTime),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRdsPendingCloudWatchLogsExports
 */
const de_AwsRdsPendingCloudWatchLogsExports = (
  output: any,
  context: __SerdeContext
): AwsRdsPendingCloudWatchLogsExports => {
  return {
    LogTypesToDisable: output.LogTypesToDisable != null ? de_StringList(output.LogTypesToDisable, context) : undefined,
    LogTypesToEnable: output.LogTypesToEnable != null ? de_StringList(output.LogTypesToEnable, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterNode
 */
const de_AwsRedshiftClusterClusterNode = (output: any, context: __SerdeContext): AwsRedshiftClusterClusterNode => {
  return {
    NodeRole: __expectString(output.NodeRole),
    PrivateIpAddress: __expectString(output.PrivateIpAddress),
    PublicIpAddress: __expectString(output.PublicIpAddress),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterNodes
 */
const de_AwsRedshiftClusterClusterNodes = (output: any, context: __SerdeContext): AwsRedshiftClusterClusterNode[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterClusterNode(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterParameterGroup
 */
const de_AwsRedshiftClusterClusterParameterGroup = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterParameterGroup => {
  return {
    ClusterParameterStatusList:
      output.ClusterParameterStatusList != null
        ? de_AwsRedshiftClusterClusterParameterStatusList(output.ClusterParameterStatusList, context)
        : undefined,
    ParameterApplyStatus: __expectString(output.ParameterApplyStatus),
    ParameterGroupName: __expectString(output.ParameterGroupName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterParameterGroups
 */
const de_AwsRedshiftClusterClusterParameterGroups = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterParameterGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterClusterParameterGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterParameterStatus
 */
const de_AwsRedshiftClusterClusterParameterStatus = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterParameterStatus => {
  return {
    ParameterApplyErrorDescription: __expectString(output.ParameterApplyErrorDescription),
    ParameterApplyStatus: __expectString(output.ParameterApplyStatus),
    ParameterName: __expectString(output.ParameterName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterParameterStatusList
 */
const de_AwsRedshiftClusterClusterParameterStatusList = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterParameterStatus[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterClusterParameterStatus(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterSecurityGroup
 */
const de_AwsRedshiftClusterClusterSecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterSecurityGroup => {
  return {
    ClusterSecurityGroupName: __expectString(output.ClusterSecurityGroupName),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterSecurityGroups
 */
const de_AwsRedshiftClusterClusterSecurityGroups = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterSecurityGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterClusterSecurityGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterClusterSnapshotCopyStatus
 */
const de_AwsRedshiftClusterClusterSnapshotCopyStatus = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterClusterSnapshotCopyStatus => {
  return {
    DestinationRegion: __expectString(output.DestinationRegion),
    ManualSnapshotRetentionPeriod: __expectInt32(output.ManualSnapshotRetentionPeriod),
    RetentionPeriod: __expectInt32(output.RetentionPeriod),
    SnapshotCopyGrantName: __expectString(output.SnapshotCopyGrantName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterDeferredMaintenanceWindow
 */
const de_AwsRedshiftClusterDeferredMaintenanceWindow = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterDeferredMaintenanceWindow => {
  return {
    DeferMaintenanceEndTime: __expectString(output.DeferMaintenanceEndTime),
    DeferMaintenanceIdentifier: __expectString(output.DeferMaintenanceIdentifier),
    DeferMaintenanceStartTime: __expectString(output.DeferMaintenanceStartTime),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterDeferredMaintenanceWindows
 */
const de_AwsRedshiftClusterDeferredMaintenanceWindows = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterDeferredMaintenanceWindow[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterDeferredMaintenanceWindow(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterDetails
 */
const de_AwsRedshiftClusterDetails = (output: any, context: __SerdeContext): AwsRedshiftClusterDetails => {
  return {
    AllowVersionUpgrade: __expectBoolean(output.AllowVersionUpgrade),
    AutomatedSnapshotRetentionPeriod: __expectInt32(output.AutomatedSnapshotRetentionPeriod),
    AvailabilityZone: __expectString(output.AvailabilityZone),
    ClusterAvailabilityStatus: __expectString(output.ClusterAvailabilityStatus),
    ClusterCreateTime: __expectString(output.ClusterCreateTime),
    ClusterIdentifier: __expectString(output.ClusterIdentifier),
    ClusterNodes:
      output.ClusterNodes != null ? de_AwsRedshiftClusterClusterNodes(output.ClusterNodes, context) : undefined,
    ClusterParameterGroups:
      output.ClusterParameterGroups != null
        ? de_AwsRedshiftClusterClusterParameterGroups(output.ClusterParameterGroups, context)
        : undefined,
    ClusterPublicKey: __expectString(output.ClusterPublicKey),
    ClusterRevisionNumber: __expectString(output.ClusterRevisionNumber),
    ClusterSecurityGroups:
      output.ClusterSecurityGroups != null
        ? de_AwsRedshiftClusterClusterSecurityGroups(output.ClusterSecurityGroups, context)
        : undefined,
    ClusterSnapshotCopyStatus:
      output.ClusterSnapshotCopyStatus != null
        ? de_AwsRedshiftClusterClusterSnapshotCopyStatus(output.ClusterSnapshotCopyStatus, context)
        : undefined,
    ClusterStatus: __expectString(output.ClusterStatus),
    ClusterSubnetGroupName: __expectString(output.ClusterSubnetGroupName),
    ClusterVersion: __expectString(output.ClusterVersion),
    DBName: __expectString(output.DBName),
    DeferredMaintenanceWindows:
      output.DeferredMaintenanceWindows != null
        ? de_AwsRedshiftClusterDeferredMaintenanceWindows(output.DeferredMaintenanceWindows, context)
        : undefined,
    ElasticIpStatus:
      output.ElasticIpStatus != null
        ? de_AwsRedshiftClusterElasticIpStatus(output.ElasticIpStatus, context)
        : undefined,
    ElasticResizeNumberOfNodeOptions: __expectString(output.ElasticResizeNumberOfNodeOptions),
    Encrypted: __expectBoolean(output.Encrypted),
    Endpoint: output.Endpoint != null ? de_AwsRedshiftClusterEndpoint(output.Endpoint, context) : undefined,
    EnhancedVpcRouting: __expectBoolean(output.EnhancedVpcRouting),
    ExpectedNextSnapshotScheduleTime: __expectString(output.ExpectedNextSnapshotScheduleTime),
    ExpectedNextSnapshotScheduleTimeStatus: __expectString(output.ExpectedNextSnapshotScheduleTimeStatus),
    HsmStatus: output.HsmStatus != null ? de_AwsRedshiftClusterHsmStatus(output.HsmStatus, context) : undefined,
    IamRoles: output.IamRoles != null ? de_AwsRedshiftClusterIamRoles(output.IamRoles, context) : undefined,
    KmsKeyId: __expectString(output.KmsKeyId),
    LoggingStatus:
      output.LoggingStatus != null ? de_AwsRedshiftClusterLoggingStatus(output.LoggingStatus, context) : undefined,
    MaintenanceTrackName: __expectString(output.MaintenanceTrackName),
    ManualSnapshotRetentionPeriod: __expectInt32(output.ManualSnapshotRetentionPeriod),
    MasterUsername: __expectString(output.MasterUsername),
    NextMaintenanceWindowStartTime: __expectString(output.NextMaintenanceWindowStartTime),
    NodeType: __expectString(output.NodeType),
    NumberOfNodes: __expectInt32(output.NumberOfNodes),
    PendingActions: output.PendingActions != null ? de_StringList(output.PendingActions, context) : undefined,
    PendingModifiedValues:
      output.PendingModifiedValues != null
        ? de_AwsRedshiftClusterPendingModifiedValues(output.PendingModifiedValues, context)
        : undefined,
    PreferredMaintenanceWindow: __expectString(output.PreferredMaintenanceWindow),
    PubliclyAccessible: __expectBoolean(output.PubliclyAccessible),
    ResizeInfo: output.ResizeInfo != null ? de_AwsRedshiftClusterResizeInfo(output.ResizeInfo, context) : undefined,
    RestoreStatus:
      output.RestoreStatus != null ? de_AwsRedshiftClusterRestoreStatus(output.RestoreStatus, context) : undefined,
    SnapshotScheduleIdentifier: __expectString(output.SnapshotScheduleIdentifier),
    SnapshotScheduleState: __expectString(output.SnapshotScheduleState),
    VpcId: __expectString(output.VpcId),
    VpcSecurityGroups:
      output.VpcSecurityGroups != null
        ? de_AwsRedshiftClusterVpcSecurityGroups(output.VpcSecurityGroups, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterElasticIpStatus
 */
const de_AwsRedshiftClusterElasticIpStatus = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterElasticIpStatus => {
  return {
    ElasticIp: __expectString(output.ElasticIp),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterEndpoint
 */
const de_AwsRedshiftClusterEndpoint = (output: any, context: __SerdeContext): AwsRedshiftClusterEndpoint => {
  return {
    Address: __expectString(output.Address),
    Port: __expectInt32(output.Port),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterHsmStatus
 */
const de_AwsRedshiftClusterHsmStatus = (output: any, context: __SerdeContext): AwsRedshiftClusterHsmStatus => {
  return {
    HsmClientCertificateIdentifier: __expectString(output.HsmClientCertificateIdentifier),
    HsmConfigurationIdentifier: __expectString(output.HsmConfigurationIdentifier),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterIamRole
 */
const de_AwsRedshiftClusterIamRole = (output: any, context: __SerdeContext): AwsRedshiftClusterIamRole => {
  return {
    ApplyStatus: __expectString(output.ApplyStatus),
    IamRoleArn: __expectString(output.IamRoleArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterIamRoles
 */
const de_AwsRedshiftClusterIamRoles = (output: any, context: __SerdeContext): AwsRedshiftClusterIamRole[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterIamRole(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterLoggingStatus
 */
const de_AwsRedshiftClusterLoggingStatus = (output: any, context: __SerdeContext): AwsRedshiftClusterLoggingStatus => {
  return {
    BucketName: __expectString(output.BucketName),
    LastFailureMessage: __expectString(output.LastFailureMessage),
    LastFailureTime: __expectString(output.LastFailureTime),
    LastSuccessfulDeliveryTime: __expectString(output.LastSuccessfulDeliveryTime),
    LoggingEnabled: __expectBoolean(output.LoggingEnabled),
    S3KeyPrefix: __expectString(output.S3KeyPrefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterPendingModifiedValues
 */
const de_AwsRedshiftClusterPendingModifiedValues = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterPendingModifiedValues => {
  return {
    AutomatedSnapshotRetentionPeriod: __expectInt32(output.AutomatedSnapshotRetentionPeriod),
    ClusterIdentifier: __expectString(output.ClusterIdentifier),
    ClusterType: __expectString(output.ClusterType),
    ClusterVersion: __expectString(output.ClusterVersion),
    EncryptionType: __expectString(output.EncryptionType),
    EnhancedVpcRouting: __expectBoolean(output.EnhancedVpcRouting),
    MaintenanceTrackName: __expectString(output.MaintenanceTrackName),
    MasterUserPassword: __expectString(output.MasterUserPassword),
    NodeType: __expectString(output.NodeType),
    NumberOfNodes: __expectInt32(output.NumberOfNodes),
    PubliclyAccessible: __expectBoolean(output.PubliclyAccessible),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterResizeInfo
 */
const de_AwsRedshiftClusterResizeInfo = (output: any, context: __SerdeContext): AwsRedshiftClusterResizeInfo => {
  return {
    AllowCancelResize: __expectBoolean(output.AllowCancelResize),
    ResizeType: __expectString(output.ResizeType),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterRestoreStatus
 */
const de_AwsRedshiftClusterRestoreStatus = (output: any, context: __SerdeContext): AwsRedshiftClusterRestoreStatus => {
  return {
    CurrentRestoreRateInMegaBytesPerSecond: __limitedParseDouble(output.CurrentRestoreRateInMegaBytesPerSecond),
    ElapsedTimeInSeconds: __expectLong(output.ElapsedTimeInSeconds),
    EstimatedTimeToCompletionInSeconds: __expectLong(output.EstimatedTimeToCompletionInSeconds),
    ProgressInMegaBytes: __expectLong(output.ProgressInMegaBytes),
    SnapshotSizeInMegaBytes: __expectLong(output.SnapshotSizeInMegaBytes),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterVpcSecurityGroup
 */
const de_AwsRedshiftClusterVpcSecurityGroup = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterVpcSecurityGroup => {
  return {
    Status: __expectString(output.Status),
    VpcSecurityGroupId: __expectString(output.VpcSecurityGroupId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsRedshiftClusterVpcSecurityGroups
 */
const de_AwsRedshiftClusterVpcSecurityGroups = (
  output: any,
  context: __SerdeContext
): AwsRedshiftClusterVpcSecurityGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsRedshiftClusterVpcSecurityGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3AccountPublicAccessBlockDetails
 */
const de_AwsS3AccountPublicAccessBlockDetails = (
  output: any,
  context: __SerdeContext
): AwsS3AccountPublicAccessBlockDetails => {
  return {
    BlockPublicAcls: __expectBoolean(output.BlockPublicAcls),
    BlockPublicPolicy: __expectBoolean(output.BlockPublicPolicy),
    IgnorePublicAcls: __expectBoolean(output.IgnorePublicAcls),
    RestrictPublicBuckets: __expectBoolean(output.RestrictPublicBuckets),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationDetails => {
  return {
    Rules:
      output.Rules != null ? de_AwsS3BucketBucketLifecycleConfigurationRulesList(output.Rules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails => {
  return {
    DaysAfterInitiation: __expectInt32(output.DaysAfterInitiation),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesDetails => {
  return {
    AbortIncompleteMultipartUpload:
      output.AbortIncompleteMultipartUpload != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails(
            output.AbortIncompleteMultipartUpload,
            context
          )
        : undefined,
    ExpirationDate: __expectString(output.ExpirationDate),
    ExpirationInDays: __expectInt32(output.ExpirationInDays),
    ExpiredObjectDeleteMarker: __expectBoolean(output.ExpiredObjectDeleteMarker),
    Filter:
      output.Filter != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails(output.Filter, context)
        : undefined,
    ID: __expectString(output.ID),
    NoncurrentVersionExpirationInDays: __expectInt32(output.NoncurrentVersionExpirationInDays),
    NoncurrentVersionTransitions:
      output.NoncurrentVersionTransitions != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList(
            output.NoncurrentVersionTransitions,
            context
          )
        : undefined,
    Prefix: __expectString(output.Prefix),
    Status: __expectString(output.Status),
    Transitions:
      output.Transitions != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList(output.Transitions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails => {
  return {
    Predicate:
      output.Predicate != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails(output.Predicate, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails => {
  return {
    Operands:
      output.Operands != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList(output.Operands, context)
        : undefined,
    Prefix: __expectString(output.Prefix),
    Tag:
      output.Tag != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails(output.Tag, context)
        : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails => {
  return {
    Prefix: __expectString(output.Prefix),
    Tag:
      output.Tag != null
        ? de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails(output.Tag, context)
        : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesList
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesList = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketBucketLifecycleConfigurationRulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails => {
  return {
    Days: __expectInt32(output.Days),
    StorageClass: __expectString(output.StorageClass),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails => {
  return {
    Date: __expectString(output.Date),
    Days: __expectInt32(output.Days),
    StorageClass: __expectString(output.StorageClass),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList
 */
const de_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketBucketVersioningConfiguration
 */
const de_AwsS3BucketBucketVersioningConfiguration = (
  output: any,
  context: __SerdeContext
): AwsS3BucketBucketVersioningConfiguration => {
  return {
    IsMfaDeleteEnabled: __expectBoolean(output.IsMfaDeleteEnabled),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketDetails
 */
const de_AwsS3BucketDetails = (output: any, context: __SerdeContext): AwsS3BucketDetails => {
  return {
    AccessControlList: __expectString(output.AccessControlList),
    BucketLifecycleConfiguration:
      output.BucketLifecycleConfiguration != null
        ? de_AwsS3BucketBucketLifecycleConfigurationDetails(output.BucketLifecycleConfiguration, context)
        : undefined,
    BucketLoggingConfiguration:
      output.BucketLoggingConfiguration != null
        ? de_AwsS3BucketLoggingConfiguration(output.BucketLoggingConfiguration, context)
        : undefined,
    BucketNotificationConfiguration:
      output.BucketNotificationConfiguration != null
        ? de_AwsS3BucketNotificationConfiguration(output.BucketNotificationConfiguration, context)
        : undefined,
    BucketVersioningConfiguration:
      output.BucketVersioningConfiguration != null
        ? de_AwsS3BucketBucketVersioningConfiguration(output.BucketVersioningConfiguration, context)
        : undefined,
    BucketWebsiteConfiguration:
      output.BucketWebsiteConfiguration != null
        ? de_AwsS3BucketWebsiteConfiguration(output.BucketWebsiteConfiguration, context)
        : undefined,
    CreatedAt: __expectString(output.CreatedAt),
    ObjectLockConfiguration:
      output.ObjectLockConfiguration != null
        ? de_AwsS3BucketObjectLockConfiguration(output.ObjectLockConfiguration, context)
        : undefined,
    OwnerAccountId: __expectString(output.OwnerAccountId),
    OwnerId: __expectString(output.OwnerId),
    OwnerName: __expectString(output.OwnerName),
    PublicAccessBlockConfiguration:
      output.PublicAccessBlockConfiguration != null
        ? de_AwsS3AccountPublicAccessBlockDetails(output.PublicAccessBlockConfiguration, context)
        : undefined,
    ServerSideEncryptionConfiguration:
      output.ServerSideEncryptionConfiguration != null
        ? de_AwsS3BucketServerSideEncryptionConfiguration(output.ServerSideEncryptionConfiguration, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketLoggingConfiguration
 */
const de_AwsS3BucketLoggingConfiguration = (output: any, context: __SerdeContext): AwsS3BucketLoggingConfiguration => {
  return {
    DestinationBucketName: __expectString(output.DestinationBucketName),
    LogFilePrefix: __expectString(output.LogFilePrefix),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfiguration
 */
const de_AwsS3BucketNotificationConfiguration = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfiguration => {
  return {
    Configurations:
      output.Configurations != null
        ? de_AwsS3BucketNotificationConfigurationDetails(output.Configurations, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationDetail
 */
const de_AwsS3BucketNotificationConfigurationDetail = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationDetail => {
  return {
    Destination: __expectString(output.Destination),
    Events: output.Events != null ? de_AwsS3BucketNotificationConfigurationEvents(output.Events, context) : undefined,
    Filter: output.Filter != null ? de_AwsS3BucketNotificationConfigurationFilter(output.Filter, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationDetails
 */
const de_AwsS3BucketNotificationConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationDetail[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketNotificationConfigurationDetail(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationEvents
 */
const de_AwsS3BucketNotificationConfigurationEvents = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationFilter
 */
const de_AwsS3BucketNotificationConfigurationFilter = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationFilter => {
  return {
    S3KeyFilter:
      output.S3KeyFilter != null
        ? de_AwsS3BucketNotificationConfigurationS3KeyFilter(output.S3KeyFilter, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilter
 */
const de_AwsS3BucketNotificationConfigurationS3KeyFilter = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationS3KeyFilter => {
  return {
    FilterRules:
      output.FilterRules != null
        ? de_AwsS3BucketNotificationConfigurationS3KeyFilterRules(output.FilterRules, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilterRule
 */
const de_AwsS3BucketNotificationConfigurationS3KeyFilterRule = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationS3KeyFilterRule => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketNotificationConfigurationS3KeyFilterRules
 */
const de_AwsS3BucketNotificationConfigurationS3KeyFilterRules = (
  output: any,
  context: __SerdeContext
): AwsS3BucketNotificationConfigurationS3KeyFilterRule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketNotificationConfigurationS3KeyFilterRule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketObjectLockConfiguration
 */
const de_AwsS3BucketObjectLockConfiguration = (
  output: any,
  context: __SerdeContext
): AwsS3BucketObjectLockConfiguration => {
  return {
    ObjectLockEnabled: __expectString(output.ObjectLockEnabled),
    Rule: output.Rule != null ? de_AwsS3BucketObjectLockConfigurationRuleDetails(output.Rule, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails
 */
const de_AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails => {
  return {
    Days: __expectInt32(output.Days),
    Mode: __expectString(output.Mode),
    Years: __expectInt32(output.Years),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketObjectLockConfigurationRuleDetails
 */
const de_AwsS3BucketObjectLockConfigurationRuleDetails = (
  output: any,
  context: __SerdeContext
): AwsS3BucketObjectLockConfigurationRuleDetails => {
  return {
    DefaultRetention:
      output.DefaultRetention != null
        ? de_AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails(output.DefaultRetention, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketServerSideEncryptionByDefault
 */
const de_AwsS3BucketServerSideEncryptionByDefault = (
  output: any,
  context: __SerdeContext
): AwsS3BucketServerSideEncryptionByDefault => {
  return {
    KMSMasterKeyID: __expectString(output.KMSMasterKeyID),
    SSEAlgorithm: __expectString(output.SSEAlgorithm),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketServerSideEncryptionConfiguration
 */
const de_AwsS3BucketServerSideEncryptionConfiguration = (
  output: any,
  context: __SerdeContext
): AwsS3BucketServerSideEncryptionConfiguration => {
  return {
    Rules: output.Rules != null ? de_AwsS3BucketServerSideEncryptionRules(output.Rules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketServerSideEncryptionRule
 */
const de_AwsS3BucketServerSideEncryptionRule = (
  output: any,
  context: __SerdeContext
): AwsS3BucketServerSideEncryptionRule => {
  return {
    ApplyServerSideEncryptionByDefault:
      output.ApplyServerSideEncryptionByDefault != null
        ? de_AwsS3BucketServerSideEncryptionByDefault(output.ApplyServerSideEncryptionByDefault, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketServerSideEncryptionRules
 */
const de_AwsS3BucketServerSideEncryptionRules = (
  output: any,
  context: __SerdeContext
): AwsS3BucketServerSideEncryptionRule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketServerSideEncryptionRule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfiguration
 */
const de_AwsS3BucketWebsiteConfiguration = (output: any, context: __SerdeContext): AwsS3BucketWebsiteConfiguration => {
  return {
    ErrorDocument: __expectString(output.ErrorDocument),
    IndexDocumentSuffix: __expectString(output.IndexDocumentSuffix),
    RedirectAllRequestsTo:
      output.RedirectAllRequestsTo != null
        ? de_AwsS3BucketWebsiteConfigurationRedirectTo(output.RedirectAllRequestsTo, context)
        : undefined,
    RoutingRules:
      output.RoutingRules != null
        ? de_AwsS3BucketWebsiteConfigurationRoutingRules(output.RoutingRules, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfigurationRedirectTo
 */
const de_AwsS3BucketWebsiteConfigurationRedirectTo = (
  output: any,
  context: __SerdeContext
): AwsS3BucketWebsiteConfigurationRedirectTo => {
  return {
    Hostname: __expectString(output.Hostname),
    Protocol: __expectString(output.Protocol),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRule
 */
const de_AwsS3BucketWebsiteConfigurationRoutingRule = (
  output: any,
  context: __SerdeContext
): AwsS3BucketWebsiteConfigurationRoutingRule => {
  return {
    Condition:
      output.Condition != null
        ? de_AwsS3BucketWebsiteConfigurationRoutingRuleCondition(output.Condition, context)
        : undefined,
    Redirect:
      output.Redirect != null
        ? de_AwsS3BucketWebsiteConfigurationRoutingRuleRedirect(output.Redirect, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRuleCondition
 */
const de_AwsS3BucketWebsiteConfigurationRoutingRuleCondition = (
  output: any,
  context: __SerdeContext
): AwsS3BucketWebsiteConfigurationRoutingRuleCondition => {
  return {
    HttpErrorCodeReturnedEquals: __expectString(output.HttpErrorCodeReturnedEquals),
    KeyPrefixEquals: __expectString(output.KeyPrefixEquals),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRuleRedirect
 */
const de_AwsS3BucketWebsiteConfigurationRoutingRuleRedirect = (
  output: any,
  context: __SerdeContext
): AwsS3BucketWebsiteConfigurationRoutingRuleRedirect => {
  return {
    Hostname: __expectString(output.Hostname),
    HttpRedirectCode: __expectString(output.HttpRedirectCode),
    Protocol: __expectString(output.Protocol),
    ReplaceKeyPrefixWith: __expectString(output.ReplaceKeyPrefixWith),
    ReplaceKeyWith: __expectString(output.ReplaceKeyWith),
  } as any;
};

/**
 * deserializeAws_restJson1AwsS3BucketWebsiteConfigurationRoutingRules
 */
const de_AwsS3BucketWebsiteConfigurationRoutingRules = (
  output: any,
  context: __SerdeContext
): AwsS3BucketWebsiteConfigurationRoutingRule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsS3BucketWebsiteConfigurationRoutingRule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsS3ObjectDetails
 */
const de_AwsS3ObjectDetails = (output: any, context: __SerdeContext): AwsS3ObjectDetails => {
  return {
    ContentType: __expectString(output.ContentType),
    ETag: __expectString(output.ETag),
    LastModified: __expectString(output.LastModified),
    SSEKMSKeyId: __expectString(output.SSEKMSKeyId),
    ServerSideEncryption: __expectString(output.ServerSideEncryption),
    VersionId: __expectString(output.VersionId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSageMakerNotebookInstanceDetails
 */
const de_AwsSageMakerNotebookInstanceDetails = (
  output: any,
  context: __SerdeContext
): AwsSageMakerNotebookInstanceDetails => {
  return {
    AcceleratorTypes:
      output.AcceleratorTypes != null ? de_NonEmptyStringList(output.AcceleratorTypes, context) : undefined,
    AdditionalCodeRepositories:
      output.AdditionalCodeRepositories != null
        ? de_NonEmptyStringList(output.AdditionalCodeRepositories, context)
        : undefined,
    DefaultCodeRepository: __expectString(output.DefaultCodeRepository),
    DirectInternetAccess: __expectString(output.DirectInternetAccess),
    FailureReason: __expectString(output.FailureReason),
    InstanceMetadataServiceConfiguration:
      output.InstanceMetadataServiceConfiguration != null
        ? de_AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails(
            output.InstanceMetadataServiceConfiguration,
            context
          )
        : undefined,
    InstanceType: __expectString(output.InstanceType),
    KmsKeyId: __expectString(output.KmsKeyId),
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    NotebookInstanceArn: __expectString(output.NotebookInstanceArn),
    NotebookInstanceLifecycleConfigName: __expectString(output.NotebookInstanceLifecycleConfigName),
    NotebookInstanceName: __expectString(output.NotebookInstanceName),
    NotebookInstanceStatus: __expectString(output.NotebookInstanceStatus),
    PlatformIdentifier: __expectString(output.PlatformIdentifier),
    RoleArn: __expectString(output.RoleArn),
    RootAccess: __expectString(output.RootAccess),
    SecurityGroups: output.SecurityGroups != null ? de_NonEmptyStringList(output.SecurityGroups, context) : undefined,
    SubnetId: __expectString(output.SubnetId),
    Url: __expectString(output.Url),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails
 */
const de_AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails = (
  output: any,
  context: __SerdeContext
): AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails => {
  return {
    MinimumInstanceMetadataServiceVersion: __expectString(output.MinimumInstanceMetadataServiceVersion),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecretsManagerSecretDetails
 */
const de_AwsSecretsManagerSecretDetails = (output: any, context: __SerdeContext): AwsSecretsManagerSecretDetails => {
  return {
    Deleted: __expectBoolean(output.Deleted),
    Description: __expectString(output.Description),
    KmsKeyId: __expectString(output.KmsKeyId),
    Name: __expectString(output.Name),
    RotationEnabled: __expectBoolean(output.RotationEnabled),
    RotationLambdaArn: __expectString(output.RotationLambdaArn),
    RotationOccurredWithinFrequency: __expectBoolean(output.RotationOccurredWithinFrequency),
    RotationRules:
      output.RotationRules != null ? de_AwsSecretsManagerSecretRotationRules(output.RotationRules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecretsManagerSecretRotationRules
 */
const de_AwsSecretsManagerSecretRotationRules = (
  output: any,
  context: __SerdeContext
): AwsSecretsManagerSecretRotationRules => {
  return {
    AutomaticallyAfterDays: __expectInt32(output.AutomaticallyAfterDays),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecurityFinding
 */
const de_AwsSecurityFinding = (output: any, context: __SerdeContext): AwsSecurityFinding => {
  return {
    Action: output.Action != null ? de_Action(output.Action, context) : undefined,
    AwsAccountId: __expectString(output.AwsAccountId),
    CompanyName: __expectString(output.CompanyName),
    Compliance: output.Compliance != null ? de_Compliance(output.Compliance, context) : undefined,
    Confidence: __expectInt32(output.Confidence),
    CreatedAt: __expectString(output.CreatedAt),
    Criticality: __expectInt32(output.Criticality),
    Description: __expectString(output.Description),
    FindingProviderFields:
      output.FindingProviderFields != null
        ? de_FindingProviderFields(output.FindingProviderFields, context)
        : undefined,
    FirstObservedAt: __expectString(output.FirstObservedAt),
    GeneratorId: __expectString(output.GeneratorId),
    Id: __expectString(output.Id),
    LastObservedAt: __expectString(output.LastObservedAt),
    Malware: output.Malware != null ? de_MalwareList(output.Malware, context) : undefined,
    Network: output.Network != null ? de_Network(output.Network, context) : undefined,
    NetworkPath: output.NetworkPath != null ? de_NetworkPathList(output.NetworkPath, context) : undefined,
    Note: output.Note != null ? de_Note(output.Note, context) : undefined,
    PatchSummary: output.PatchSummary != null ? de_PatchSummary(output.PatchSummary, context) : undefined,
    Process: output.Process != null ? de_ProcessDetails(output.Process, context) : undefined,
    ProductArn: __expectString(output.ProductArn),
    ProductFields: output.ProductFields != null ? de_FieldMap(output.ProductFields, context) : undefined,
    ProductName: __expectString(output.ProductName),
    RecordState: __expectString(output.RecordState),
    Region: __expectString(output.Region),
    RelatedFindings:
      output.RelatedFindings != null ? de_RelatedFindingList(output.RelatedFindings, context) : undefined,
    Remediation: output.Remediation != null ? de_Remediation(output.Remediation, context) : undefined,
    Resources: output.Resources != null ? de_ResourceList(output.Resources, context) : undefined,
    Sample: __expectBoolean(output.Sample),
    SchemaVersion: __expectString(output.SchemaVersion),
    Severity: output.Severity != null ? de_Severity(output.Severity, context) : undefined,
    SourceUrl: __expectString(output.SourceUrl),
    ThreatIntelIndicators:
      output.ThreatIntelIndicators != null
        ? de_ThreatIntelIndicatorList(output.ThreatIntelIndicators, context)
        : undefined,
    Threats: output.Threats != null ? de_ThreatList(output.Threats, context) : undefined,
    Title: __expectString(output.Title),
    Types: output.Types != null ? de_TypeList(output.Types, context) : undefined,
    UpdatedAt: __expectString(output.UpdatedAt),
    UserDefinedFields: output.UserDefinedFields != null ? de_FieldMap(output.UserDefinedFields, context) : undefined,
    VerificationState: __expectString(output.VerificationState),
    Vulnerabilities: output.Vulnerabilities != null ? de_VulnerabilityList(output.Vulnerabilities, context) : undefined,
    Workflow: output.Workflow != null ? de_Workflow(output.Workflow, context) : undefined,
    WorkflowState: __expectString(output.WorkflowState),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecurityFindingFilters
 */
const de_AwsSecurityFindingFilters = (output: any, context: __SerdeContext): AwsSecurityFindingFilters => {
  return {
    AwsAccountId: output.AwsAccountId != null ? de_StringFilterList(output.AwsAccountId, context) : undefined,
    CompanyName: output.CompanyName != null ? de_StringFilterList(output.CompanyName, context) : undefined,
    ComplianceAssociatedStandardsId:
      output.ComplianceAssociatedStandardsId != null
        ? de_StringFilterList(output.ComplianceAssociatedStandardsId, context)
        : undefined,
    ComplianceSecurityControlId:
      output.ComplianceSecurityControlId != null
        ? de_StringFilterList(output.ComplianceSecurityControlId, context)
        : undefined,
    ComplianceStatus:
      output.ComplianceStatus != null ? de_StringFilterList(output.ComplianceStatus, context) : undefined,
    Confidence: output.Confidence != null ? de_NumberFilterList(output.Confidence, context) : undefined,
    CreatedAt: output.CreatedAt != null ? de_DateFilterList(output.CreatedAt, context) : undefined,
    Criticality: output.Criticality != null ? de_NumberFilterList(output.Criticality, context) : undefined,
    Description: output.Description != null ? de_StringFilterList(output.Description, context) : undefined,
    FindingProviderFieldsConfidence:
      output.FindingProviderFieldsConfidence != null
        ? de_NumberFilterList(output.FindingProviderFieldsConfidence, context)
        : undefined,
    FindingProviderFieldsCriticality:
      output.FindingProviderFieldsCriticality != null
        ? de_NumberFilterList(output.FindingProviderFieldsCriticality, context)
        : undefined,
    FindingProviderFieldsRelatedFindingsId:
      output.FindingProviderFieldsRelatedFindingsId != null
        ? de_StringFilterList(output.FindingProviderFieldsRelatedFindingsId, context)
        : undefined,
    FindingProviderFieldsRelatedFindingsProductArn:
      output.FindingProviderFieldsRelatedFindingsProductArn != null
        ? de_StringFilterList(output.FindingProviderFieldsRelatedFindingsProductArn, context)
        : undefined,
    FindingProviderFieldsSeverityLabel:
      output.FindingProviderFieldsSeverityLabel != null
        ? de_StringFilterList(output.FindingProviderFieldsSeverityLabel, context)
        : undefined,
    FindingProviderFieldsSeverityOriginal:
      output.FindingProviderFieldsSeverityOriginal != null
        ? de_StringFilterList(output.FindingProviderFieldsSeverityOriginal, context)
        : undefined,
    FindingProviderFieldsTypes:
      output.FindingProviderFieldsTypes != null
        ? de_StringFilterList(output.FindingProviderFieldsTypes, context)
        : undefined,
    FirstObservedAt: output.FirstObservedAt != null ? de_DateFilterList(output.FirstObservedAt, context) : undefined,
    GeneratorId: output.GeneratorId != null ? de_StringFilterList(output.GeneratorId, context) : undefined,
    Id: output.Id != null ? de_StringFilterList(output.Id, context) : undefined,
    Keyword: output.Keyword != null ? de_KeywordFilterList(output.Keyword, context) : undefined,
    LastObservedAt: output.LastObservedAt != null ? de_DateFilterList(output.LastObservedAt, context) : undefined,
    MalwareName: output.MalwareName != null ? de_StringFilterList(output.MalwareName, context) : undefined,
    MalwarePath: output.MalwarePath != null ? de_StringFilterList(output.MalwarePath, context) : undefined,
    MalwareState: output.MalwareState != null ? de_StringFilterList(output.MalwareState, context) : undefined,
    MalwareType: output.MalwareType != null ? de_StringFilterList(output.MalwareType, context) : undefined,
    NetworkDestinationDomain:
      output.NetworkDestinationDomain != null
        ? de_StringFilterList(output.NetworkDestinationDomain, context)
        : undefined,
    NetworkDestinationIpV4:
      output.NetworkDestinationIpV4 != null ? de_IpFilterList(output.NetworkDestinationIpV4, context) : undefined,
    NetworkDestinationIpV6:
      output.NetworkDestinationIpV6 != null ? de_IpFilterList(output.NetworkDestinationIpV6, context) : undefined,
    NetworkDestinationPort:
      output.NetworkDestinationPort != null ? de_NumberFilterList(output.NetworkDestinationPort, context) : undefined,
    NetworkDirection:
      output.NetworkDirection != null ? de_StringFilterList(output.NetworkDirection, context) : undefined,
    NetworkProtocol: output.NetworkProtocol != null ? de_StringFilterList(output.NetworkProtocol, context) : undefined,
    NetworkSourceDomain:
      output.NetworkSourceDomain != null ? de_StringFilterList(output.NetworkSourceDomain, context) : undefined,
    NetworkSourceIpV4:
      output.NetworkSourceIpV4 != null ? de_IpFilterList(output.NetworkSourceIpV4, context) : undefined,
    NetworkSourceIpV6:
      output.NetworkSourceIpV6 != null ? de_IpFilterList(output.NetworkSourceIpV6, context) : undefined,
    NetworkSourceMac:
      output.NetworkSourceMac != null ? de_StringFilterList(output.NetworkSourceMac, context) : undefined,
    NetworkSourcePort:
      output.NetworkSourcePort != null ? de_NumberFilterList(output.NetworkSourcePort, context) : undefined,
    NoteText: output.NoteText != null ? de_StringFilterList(output.NoteText, context) : undefined,
    NoteUpdatedAt: output.NoteUpdatedAt != null ? de_DateFilterList(output.NoteUpdatedAt, context) : undefined,
    NoteUpdatedBy: output.NoteUpdatedBy != null ? de_StringFilterList(output.NoteUpdatedBy, context) : undefined,
    ProcessLaunchedAt:
      output.ProcessLaunchedAt != null ? de_DateFilterList(output.ProcessLaunchedAt, context) : undefined,
    ProcessName: output.ProcessName != null ? de_StringFilterList(output.ProcessName, context) : undefined,
    ProcessParentPid:
      output.ProcessParentPid != null ? de_NumberFilterList(output.ProcessParentPid, context) : undefined,
    ProcessPath: output.ProcessPath != null ? de_StringFilterList(output.ProcessPath, context) : undefined,
    ProcessPid: output.ProcessPid != null ? de_NumberFilterList(output.ProcessPid, context) : undefined,
    ProcessTerminatedAt:
      output.ProcessTerminatedAt != null ? de_DateFilterList(output.ProcessTerminatedAt, context) : undefined,
    ProductArn: output.ProductArn != null ? de_StringFilterList(output.ProductArn, context) : undefined,
    ProductFields: output.ProductFields != null ? de_MapFilterList(output.ProductFields, context) : undefined,
    ProductName: output.ProductName != null ? de_StringFilterList(output.ProductName, context) : undefined,
    RecommendationText:
      output.RecommendationText != null ? de_StringFilterList(output.RecommendationText, context) : undefined,
    RecordState: output.RecordState != null ? de_StringFilterList(output.RecordState, context) : undefined,
    Region: output.Region != null ? de_StringFilterList(output.Region, context) : undefined,
    RelatedFindingsId:
      output.RelatedFindingsId != null ? de_StringFilterList(output.RelatedFindingsId, context) : undefined,
    RelatedFindingsProductArn:
      output.RelatedFindingsProductArn != null
        ? de_StringFilterList(output.RelatedFindingsProductArn, context)
        : undefined,
    ResourceAwsEc2InstanceIamInstanceProfileArn:
      output.ResourceAwsEc2InstanceIamInstanceProfileArn != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceIamInstanceProfileArn, context)
        : undefined,
    ResourceAwsEc2InstanceImageId:
      output.ResourceAwsEc2InstanceImageId != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceImageId, context)
        : undefined,
    ResourceAwsEc2InstanceIpV4Addresses:
      output.ResourceAwsEc2InstanceIpV4Addresses != null
        ? de_IpFilterList(output.ResourceAwsEc2InstanceIpV4Addresses, context)
        : undefined,
    ResourceAwsEc2InstanceIpV6Addresses:
      output.ResourceAwsEc2InstanceIpV6Addresses != null
        ? de_IpFilterList(output.ResourceAwsEc2InstanceIpV6Addresses, context)
        : undefined,
    ResourceAwsEc2InstanceKeyName:
      output.ResourceAwsEc2InstanceKeyName != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceKeyName, context)
        : undefined,
    ResourceAwsEc2InstanceLaunchedAt:
      output.ResourceAwsEc2InstanceLaunchedAt != null
        ? de_DateFilterList(output.ResourceAwsEc2InstanceLaunchedAt, context)
        : undefined,
    ResourceAwsEc2InstanceSubnetId:
      output.ResourceAwsEc2InstanceSubnetId != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceSubnetId, context)
        : undefined,
    ResourceAwsEc2InstanceType:
      output.ResourceAwsEc2InstanceType != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceType, context)
        : undefined,
    ResourceAwsEc2InstanceVpcId:
      output.ResourceAwsEc2InstanceVpcId != null
        ? de_StringFilterList(output.ResourceAwsEc2InstanceVpcId, context)
        : undefined,
    ResourceAwsIamAccessKeyCreatedAt:
      output.ResourceAwsIamAccessKeyCreatedAt != null
        ? de_DateFilterList(output.ResourceAwsIamAccessKeyCreatedAt, context)
        : undefined,
    ResourceAwsIamAccessKeyPrincipalName:
      output.ResourceAwsIamAccessKeyPrincipalName != null
        ? de_StringFilterList(output.ResourceAwsIamAccessKeyPrincipalName, context)
        : undefined,
    ResourceAwsIamAccessKeyStatus:
      output.ResourceAwsIamAccessKeyStatus != null
        ? de_StringFilterList(output.ResourceAwsIamAccessKeyStatus, context)
        : undefined,
    ResourceAwsIamAccessKeyUserName:
      output.ResourceAwsIamAccessKeyUserName != null
        ? de_StringFilterList(output.ResourceAwsIamAccessKeyUserName, context)
        : undefined,
    ResourceAwsIamUserUserName:
      output.ResourceAwsIamUserUserName != null
        ? de_StringFilterList(output.ResourceAwsIamUserUserName, context)
        : undefined,
    ResourceAwsS3BucketOwnerId:
      output.ResourceAwsS3BucketOwnerId != null
        ? de_StringFilterList(output.ResourceAwsS3BucketOwnerId, context)
        : undefined,
    ResourceAwsS3BucketOwnerName:
      output.ResourceAwsS3BucketOwnerName != null
        ? de_StringFilterList(output.ResourceAwsS3BucketOwnerName, context)
        : undefined,
    ResourceContainerImageId:
      output.ResourceContainerImageId != null
        ? de_StringFilterList(output.ResourceContainerImageId, context)
        : undefined,
    ResourceContainerImageName:
      output.ResourceContainerImageName != null
        ? de_StringFilterList(output.ResourceContainerImageName, context)
        : undefined,
    ResourceContainerLaunchedAt:
      output.ResourceContainerLaunchedAt != null
        ? de_DateFilterList(output.ResourceContainerLaunchedAt, context)
        : undefined,
    ResourceContainerName:
      output.ResourceContainerName != null ? de_StringFilterList(output.ResourceContainerName, context) : undefined,
    ResourceDetailsOther:
      output.ResourceDetailsOther != null ? de_MapFilterList(output.ResourceDetailsOther, context) : undefined,
    ResourceId: output.ResourceId != null ? de_StringFilterList(output.ResourceId, context) : undefined,
    ResourcePartition:
      output.ResourcePartition != null ? de_StringFilterList(output.ResourcePartition, context) : undefined,
    ResourceRegion: output.ResourceRegion != null ? de_StringFilterList(output.ResourceRegion, context) : undefined,
    ResourceTags: output.ResourceTags != null ? de_MapFilterList(output.ResourceTags, context) : undefined,
    ResourceType: output.ResourceType != null ? de_StringFilterList(output.ResourceType, context) : undefined,
    Sample: output.Sample != null ? de_BooleanFilterList(output.Sample, context) : undefined,
    SeverityLabel: output.SeverityLabel != null ? de_StringFilterList(output.SeverityLabel, context) : undefined,
    SeverityNormalized:
      output.SeverityNormalized != null ? de_NumberFilterList(output.SeverityNormalized, context) : undefined,
    SeverityProduct: output.SeverityProduct != null ? de_NumberFilterList(output.SeverityProduct, context) : undefined,
    SourceUrl: output.SourceUrl != null ? de_StringFilterList(output.SourceUrl, context) : undefined,
    ThreatIntelIndicatorCategory:
      output.ThreatIntelIndicatorCategory != null
        ? de_StringFilterList(output.ThreatIntelIndicatorCategory, context)
        : undefined,
    ThreatIntelIndicatorLastObservedAt:
      output.ThreatIntelIndicatorLastObservedAt != null
        ? de_DateFilterList(output.ThreatIntelIndicatorLastObservedAt, context)
        : undefined,
    ThreatIntelIndicatorSource:
      output.ThreatIntelIndicatorSource != null
        ? de_StringFilterList(output.ThreatIntelIndicatorSource, context)
        : undefined,
    ThreatIntelIndicatorSourceUrl:
      output.ThreatIntelIndicatorSourceUrl != null
        ? de_StringFilterList(output.ThreatIntelIndicatorSourceUrl, context)
        : undefined,
    ThreatIntelIndicatorType:
      output.ThreatIntelIndicatorType != null
        ? de_StringFilterList(output.ThreatIntelIndicatorType, context)
        : undefined,
    ThreatIntelIndicatorValue:
      output.ThreatIntelIndicatorValue != null
        ? de_StringFilterList(output.ThreatIntelIndicatorValue, context)
        : undefined,
    Title: output.Title != null ? de_StringFilterList(output.Title, context) : undefined,
    Type: output.Type != null ? de_StringFilterList(output.Type, context) : undefined,
    UpdatedAt: output.UpdatedAt != null ? de_DateFilterList(output.UpdatedAt, context) : undefined,
    UserDefinedFields:
      output.UserDefinedFields != null ? de_MapFilterList(output.UserDefinedFields, context) : undefined,
    VerificationState:
      output.VerificationState != null ? de_StringFilterList(output.VerificationState, context) : undefined,
    WorkflowState: output.WorkflowState != null ? de_StringFilterList(output.WorkflowState, context) : undefined,
    WorkflowStatus: output.WorkflowStatus != null ? de_StringFilterList(output.WorkflowStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecurityFindingIdentifier
 */
const de_AwsSecurityFindingIdentifier = (output: any, context: __SerdeContext): AwsSecurityFindingIdentifier => {
  return {
    Id: __expectString(output.Id),
    ProductArn: __expectString(output.ProductArn),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSecurityFindingIdentifierList
 */
const de_AwsSecurityFindingIdentifierList = (output: any, context: __SerdeContext): AwsSecurityFindingIdentifier[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsSecurityFindingIdentifier(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsSecurityFindingList
 */
const de_AwsSecurityFindingList = (output: any, context: __SerdeContext): AwsSecurityFinding[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsSecurityFinding(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsSnsTopicDetails
 */
const de_AwsSnsTopicDetails = (output: any, context: __SerdeContext): AwsSnsTopicDetails => {
  return {
    ApplicationSuccessFeedbackRoleArn: __expectString(output.ApplicationSuccessFeedbackRoleArn),
    FirehoseFailureFeedbackRoleArn: __expectString(output.FirehoseFailureFeedbackRoleArn),
    FirehoseSuccessFeedbackRoleArn: __expectString(output.FirehoseSuccessFeedbackRoleArn),
    HttpFailureFeedbackRoleArn: __expectString(output.HttpFailureFeedbackRoleArn),
    HttpSuccessFeedbackRoleArn: __expectString(output.HttpSuccessFeedbackRoleArn),
    KmsMasterKeyId: __expectString(output.KmsMasterKeyId),
    Owner: __expectString(output.Owner),
    SqsFailureFeedbackRoleArn: __expectString(output.SqsFailureFeedbackRoleArn),
    SqsSuccessFeedbackRoleArn: __expectString(output.SqsSuccessFeedbackRoleArn),
    Subscription:
      output.Subscription != null ? de_AwsSnsTopicSubscriptionList(output.Subscription, context) : undefined,
    TopicName: __expectString(output.TopicName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSnsTopicSubscription
 */
const de_AwsSnsTopicSubscription = (output: any, context: __SerdeContext): AwsSnsTopicSubscription => {
  return {
    Endpoint: __expectString(output.Endpoint),
    Protocol: __expectString(output.Protocol),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSnsTopicSubscriptionList
 */
const de_AwsSnsTopicSubscriptionList = (output: any, context: __SerdeContext): AwsSnsTopicSubscription[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsSnsTopicSubscription(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsSqsQueueDetails
 */
const de_AwsSqsQueueDetails = (output: any, context: __SerdeContext): AwsSqsQueueDetails => {
  return {
    DeadLetterTargetArn: __expectString(output.DeadLetterTargetArn),
    KmsDataKeyReusePeriodSeconds: __expectInt32(output.KmsDataKeyReusePeriodSeconds),
    KmsMasterKeyId: __expectString(output.KmsMasterKeyId),
    QueueName: __expectString(output.QueueName),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSsmComplianceSummary
 */
const de_AwsSsmComplianceSummary = (output: any, context: __SerdeContext): AwsSsmComplianceSummary => {
  return {
    ComplianceType: __expectString(output.ComplianceType),
    CompliantCriticalCount: __expectInt32(output.CompliantCriticalCount),
    CompliantHighCount: __expectInt32(output.CompliantHighCount),
    CompliantInformationalCount: __expectInt32(output.CompliantInformationalCount),
    CompliantLowCount: __expectInt32(output.CompliantLowCount),
    CompliantMediumCount: __expectInt32(output.CompliantMediumCount),
    CompliantUnspecifiedCount: __expectInt32(output.CompliantUnspecifiedCount),
    ExecutionType: __expectString(output.ExecutionType),
    NonCompliantCriticalCount: __expectInt32(output.NonCompliantCriticalCount),
    NonCompliantHighCount: __expectInt32(output.NonCompliantHighCount),
    NonCompliantInformationalCount: __expectInt32(output.NonCompliantInformationalCount),
    NonCompliantLowCount: __expectInt32(output.NonCompliantLowCount),
    NonCompliantMediumCount: __expectInt32(output.NonCompliantMediumCount),
    NonCompliantUnspecifiedCount: __expectInt32(output.NonCompliantUnspecifiedCount),
    OverallSeverity: __expectString(output.OverallSeverity),
    PatchBaselineId: __expectString(output.PatchBaselineId),
    PatchGroup: __expectString(output.PatchGroup),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_restJson1AwsSsmPatch
 */
const de_AwsSsmPatch = (output: any, context: __SerdeContext): AwsSsmPatch => {
  return {
    ComplianceSummary:
      output.ComplianceSummary != null ? de_AwsSsmComplianceSummary(output.ComplianceSummary, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsSsmPatchComplianceDetails
 */
const de_AwsSsmPatchComplianceDetails = (output: any, context: __SerdeContext): AwsSsmPatchComplianceDetails => {
  return {
    Patch: output.Patch != null ? de_AwsSsmPatch(output.Patch, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRateBasedRuleDetails
 */
const de_AwsWafRateBasedRuleDetails = (output: any, context: __SerdeContext): AwsWafRateBasedRuleDetails => {
  return {
    MatchPredicates:
      output.MatchPredicates != null
        ? de_AwsWafRateBasedRuleMatchPredicateList(output.MatchPredicates, context)
        : undefined,
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    RateKey: __expectString(output.RateKey),
    RateLimit: __expectLong(output.RateLimit),
    RuleId: __expectString(output.RuleId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRateBasedRuleMatchPredicate
 */
const de_AwsWafRateBasedRuleMatchPredicate = (
  output: any,
  context: __SerdeContext
): AwsWafRateBasedRuleMatchPredicate => {
  return {
    DataId: __expectString(output.DataId),
    Negated: __expectBoolean(output.Negated),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRateBasedRuleMatchPredicateList
 */
const de_AwsWafRateBasedRuleMatchPredicateList = (
  output: any,
  context: __SerdeContext
): AwsWafRateBasedRuleMatchPredicate[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRateBasedRuleMatchPredicate(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRateBasedRuleDetails
 */
const de_AwsWafRegionalRateBasedRuleDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRateBasedRuleDetails => {
  return {
    MatchPredicates:
      output.MatchPredicates != null
        ? de_AwsWafRegionalRateBasedRuleMatchPredicateList(output.MatchPredicates, context)
        : undefined,
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    RateKey: __expectString(output.RateKey),
    RateLimit: __expectLong(output.RateLimit),
    RuleId: __expectString(output.RuleId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRateBasedRuleMatchPredicate
 */
const de_AwsWafRegionalRateBasedRuleMatchPredicate = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRateBasedRuleMatchPredicate => {
  return {
    DataId: __expectString(output.DataId),
    Negated: __expectBoolean(output.Negated),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRateBasedRuleMatchPredicateList
 */
const de_AwsWafRegionalRateBasedRuleMatchPredicateList = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRateBasedRuleMatchPredicate[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRegionalRateBasedRuleMatchPredicate(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRuleDetails
 */
const de_AwsWafRegionalRuleDetails = (output: any, context: __SerdeContext): AwsWafRegionalRuleDetails => {
  return {
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    PredicateList:
      output.PredicateList != null ? de_AwsWafRegionalRulePredicateList(output.PredicateList, context) : undefined,
    RuleId: __expectString(output.RuleId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRuleGroupDetails
 */
const de_AwsWafRegionalRuleGroupDetails = (output: any, context: __SerdeContext): AwsWafRegionalRuleGroupDetails => {
  return {
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    RuleGroupId: __expectString(output.RuleGroupId),
    Rules: output.Rules != null ? de_AwsWafRegionalRuleGroupRulesList(output.Rules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRuleGroupRulesActionDetails
 */
const de_AwsWafRegionalRuleGroupRulesActionDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRuleGroupRulesActionDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRuleGroupRulesDetails
 */
const de_AwsWafRegionalRuleGroupRulesDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRuleGroupRulesDetails => {
  return {
    Action: output.Action != null ? de_AwsWafRegionalRuleGroupRulesActionDetails(output.Action, context) : undefined,
    Priority: __expectInt32(output.Priority),
    RuleId: __expectString(output.RuleId),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRuleGroupRulesList
 */
const de_AwsWafRegionalRuleGroupRulesList = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRuleGroupRulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRegionalRuleGroupRulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRulePredicateList
 */
const de_AwsWafRegionalRulePredicateList = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRulePredicateListDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRegionalRulePredicateListDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRegionalRulePredicateListDetails
 */
const de_AwsWafRegionalRulePredicateListDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalRulePredicateListDetails => {
  return {
    DataId: __expectString(output.DataId),
    Negated: __expectBoolean(output.Negated),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalWebAclDetails
 */
const de_AwsWafRegionalWebAclDetails = (output: any, context: __SerdeContext): AwsWafRegionalWebAclDetails => {
  return {
    DefaultAction: __expectString(output.DefaultAction),
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    RulesList: output.RulesList != null ? de_AwsWafRegionalWebAclRulesList(output.RulesList, context) : undefined,
    WebAclId: __expectString(output.WebAclId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalWebAclRulesList
 */
const de_AwsWafRegionalWebAclRulesList = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalWebAclRulesListDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRegionalWebAclRulesListDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRegionalWebAclRulesListActionDetails
 */
const de_AwsWafRegionalWebAclRulesListActionDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalWebAclRulesListActionDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalWebAclRulesListDetails
 */
const de_AwsWafRegionalWebAclRulesListDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalWebAclRulesListDetails => {
  return {
    Action: output.Action != null ? de_AwsWafRegionalWebAclRulesListActionDetails(output.Action, context) : undefined,
    OverrideAction:
      output.OverrideAction != null
        ? de_AwsWafRegionalWebAclRulesListOverrideActionDetails(output.OverrideAction, context)
        : undefined,
    Priority: __expectInt32(output.Priority),
    RuleId: __expectString(output.RuleId),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRegionalWebAclRulesListOverrideActionDetails
 */
const de_AwsWafRegionalWebAclRulesListOverrideActionDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRegionalWebAclRulesListOverrideActionDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRuleDetails
 */
const de_AwsWafRuleDetails = (output: any, context: __SerdeContext): AwsWafRuleDetails => {
  return {
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    PredicateList: output.PredicateList != null ? de_AwsWafRulePredicateList(output.PredicateList, context) : undefined,
    RuleId: __expectString(output.RuleId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRuleGroupDetails
 */
const de_AwsWafRuleGroupDetails = (output: any, context: __SerdeContext): AwsWafRuleGroupDetails => {
  return {
    MetricName: __expectString(output.MetricName),
    Name: __expectString(output.Name),
    RuleGroupId: __expectString(output.RuleGroupId),
    Rules: output.Rules != null ? de_AwsWafRuleGroupRulesList(output.Rules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRuleGroupRulesActionDetails
 */
const de_AwsWafRuleGroupRulesActionDetails = (
  output: any,
  context: __SerdeContext
): AwsWafRuleGroupRulesActionDetails => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRuleGroupRulesDetails
 */
const de_AwsWafRuleGroupRulesDetails = (output: any, context: __SerdeContext): AwsWafRuleGroupRulesDetails => {
  return {
    Action: output.Action != null ? de_AwsWafRuleGroupRulesActionDetails(output.Action, context) : undefined,
    Priority: __expectInt32(output.Priority),
    RuleId: __expectString(output.RuleId),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafRuleGroupRulesList
 */
const de_AwsWafRuleGroupRulesList = (output: any, context: __SerdeContext): AwsWafRuleGroupRulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRuleGroupRulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRulePredicateList
 */
const de_AwsWafRulePredicateList = (output: any, context: __SerdeContext): AwsWafRulePredicateListDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafRulePredicateListDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafRulePredicateListDetails
 */
const de_AwsWafRulePredicateListDetails = (output: any, context: __SerdeContext): AwsWafRulePredicateListDetails => {
  return {
    DataId: __expectString(output.DataId),
    Negated: __expectBoolean(output.Negated),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2ActionAllowDetails
 */
const de_AwsWafv2ActionAllowDetails = (output: any, context: __SerdeContext): AwsWafv2ActionAllowDetails => {
  return {
    CustomRequestHandling:
      output.CustomRequestHandling != null
        ? de_AwsWafv2CustomRequestHandlingDetails(output.CustomRequestHandling, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2ActionBlockDetails
 */
const de_AwsWafv2ActionBlockDetails = (output: any, context: __SerdeContext): AwsWafv2ActionBlockDetails => {
  return {
    CustomResponse:
      output.CustomResponse != null ? de_AwsWafv2CustomResponseDetails(output.CustomResponse, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2CustomHttpHeader
 */
const de_AwsWafv2CustomHttpHeader = (output: any, context: __SerdeContext): AwsWafv2CustomHttpHeader => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2CustomRequestHandlingDetails
 */
const de_AwsWafv2CustomRequestHandlingDetails = (
  output: any,
  context: __SerdeContext
): AwsWafv2CustomRequestHandlingDetails => {
  return {
    InsertHeaders:
      output.InsertHeaders != null ? de_AwsWafv2InsertHeadersList(output.InsertHeaders, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2CustomResponseDetails
 */
const de_AwsWafv2CustomResponseDetails = (output: any, context: __SerdeContext): AwsWafv2CustomResponseDetails => {
  return {
    CustomResponseBodyKey: __expectString(output.CustomResponseBodyKey),
    ResponseCode: __expectInt32(output.ResponseCode),
    ResponseHeaders:
      output.ResponseHeaders != null ? de_AwsWafv2InsertHeadersList(output.ResponseHeaders, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2InsertHeadersList
 */
const de_AwsWafv2InsertHeadersList = (output: any, context: __SerdeContext): AwsWafv2CustomHttpHeader[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafv2CustomHttpHeader(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafv2RuleGroupDetails
 */
const de_AwsWafv2RuleGroupDetails = (output: any, context: __SerdeContext): AwsWafv2RuleGroupDetails => {
  return {
    Arn: __expectString(output.Arn),
    Capacity: __expectLong(output.Capacity),
    Description: __expectString(output.Description),
    Id: __expectString(output.Id),
    Name: __expectString(output.Name),
    Rules: output.Rules != null ? de_AwsWafv2RulesList(output.Rules, context) : undefined,
    Scope: __expectString(output.Scope),
    VisibilityConfig:
      output.VisibilityConfig != null
        ? de_AwsWafv2VisibilityConfigDetails(output.VisibilityConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2RulesActionCaptchaDetails
 */
const de_AwsWafv2RulesActionCaptchaDetails = (
  output: any,
  context: __SerdeContext
): AwsWafv2RulesActionCaptchaDetails => {
  return {
    CustomRequestHandling:
      output.CustomRequestHandling != null
        ? de_AwsWafv2CustomRequestHandlingDetails(output.CustomRequestHandling, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2RulesActionCountDetails
 */
const de_AwsWafv2RulesActionCountDetails = (output: any, context: __SerdeContext): AwsWafv2RulesActionCountDetails => {
  return {
    CustomRequestHandling:
      output.CustomRequestHandling != null
        ? de_AwsWafv2CustomRequestHandlingDetails(output.CustomRequestHandling, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2RulesActionDetails
 */
const de_AwsWafv2RulesActionDetails = (output: any, context: __SerdeContext): AwsWafv2RulesActionDetails => {
  return {
    Allow: output.Allow != null ? de_AwsWafv2ActionAllowDetails(output.Allow, context) : undefined,
    Block: output.Block != null ? de_AwsWafv2ActionBlockDetails(output.Block, context) : undefined,
    Captcha: output.Captcha != null ? de_AwsWafv2RulesActionCaptchaDetails(output.Captcha, context) : undefined,
    Count: output.Count != null ? de_AwsWafv2RulesActionCountDetails(output.Count, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2RulesDetails
 */
const de_AwsWafv2RulesDetails = (output: any, context: __SerdeContext): AwsWafv2RulesDetails => {
  return {
    Action: output.Action != null ? de_AwsWafv2RulesActionDetails(output.Action, context) : undefined,
    Name: __expectString(output.Name),
    OverrideAction: __expectString(output.OverrideAction),
    Priority: __expectInt32(output.Priority),
    VisibilityConfig:
      output.VisibilityConfig != null
        ? de_AwsWafv2VisibilityConfigDetails(output.VisibilityConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2RulesList
 */
const de_AwsWafv2RulesList = (output: any, context: __SerdeContext): AwsWafv2RulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafv2RulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsWafv2VisibilityConfigDetails
 */
const de_AwsWafv2VisibilityConfigDetails = (output: any, context: __SerdeContext): AwsWafv2VisibilityConfigDetails => {
  return {
    CloudWatchMetricsEnabled: __expectBoolean(output.CloudWatchMetricsEnabled),
    MetricName: __expectString(output.MetricName),
    SampledRequestsEnabled: __expectBoolean(output.SampledRequestsEnabled),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2WebAclActionDetails
 */
const de_AwsWafv2WebAclActionDetails = (output: any, context: __SerdeContext): AwsWafv2WebAclActionDetails => {
  return {
    Allow: output.Allow != null ? de_AwsWafv2ActionAllowDetails(output.Allow, context) : undefined,
    Block: output.Block != null ? de_AwsWafv2ActionBlockDetails(output.Block, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2WebAclCaptchaConfigDetails
 */
const de_AwsWafv2WebAclCaptchaConfigDetails = (
  output: any,
  context: __SerdeContext
): AwsWafv2WebAclCaptchaConfigDetails => {
  return {
    ImmunityTimeProperty:
      output.ImmunityTimeProperty != null
        ? de_AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails(output.ImmunityTimeProperty, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails
 */
const de_AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails = (
  output: any,
  context: __SerdeContext
): AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails => {
  return {
    ImmunityTime: __expectLong(output.ImmunityTime),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafv2WebAclDetails
 */
const de_AwsWafv2WebAclDetails = (output: any, context: __SerdeContext): AwsWafv2WebAclDetails => {
  return {
    Arn: __expectString(output.Arn),
    Capacity: __expectLong(output.Capacity),
    CaptchaConfig:
      output.CaptchaConfig != null ? de_AwsWafv2WebAclCaptchaConfigDetails(output.CaptchaConfig, context) : undefined,
    DefaultAction:
      output.DefaultAction != null ? de_AwsWafv2WebAclActionDetails(output.DefaultAction, context) : undefined,
    Description: __expectString(output.Description),
    Id: __expectString(output.Id),
    ManagedbyFirewallManager: __expectBoolean(output.ManagedbyFirewallManager),
    Name: __expectString(output.Name),
    Rules: output.Rules != null ? de_AwsWafv2RulesList(output.Rules, context) : undefined,
    VisibilityConfig:
      output.VisibilityConfig != null
        ? de_AwsWafv2VisibilityConfigDetails(output.VisibilityConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafWebAclDetails
 */
const de_AwsWafWebAclDetails = (output: any, context: __SerdeContext): AwsWafWebAclDetails => {
  return {
    DefaultAction: __expectString(output.DefaultAction),
    Name: __expectString(output.Name),
    Rules: output.Rules != null ? de_AwsWafWebAclRuleList(output.Rules, context) : undefined,
    WebAclId: __expectString(output.WebAclId),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafWebAclRule
 */
const de_AwsWafWebAclRule = (output: any, context: __SerdeContext): AwsWafWebAclRule => {
  return {
    Action: output.Action != null ? de_WafAction(output.Action, context) : undefined,
    ExcludedRules: output.ExcludedRules != null ? de_WafExcludedRuleList(output.ExcludedRules, context) : undefined,
    OverrideAction: output.OverrideAction != null ? de_WafOverrideAction(output.OverrideAction, context) : undefined,
    Priority: __expectInt32(output.Priority),
    RuleId: __expectString(output.RuleId),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1AwsWafWebAclRuleList
 */
const de_AwsWafWebAclRuleList = (output: any, context: __SerdeContext): AwsWafWebAclRule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AwsWafWebAclRule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1AwsXrayEncryptionConfigDetails
 */
const de_AwsXrayEncryptionConfigDetails = (output: any, context: __SerdeContext): AwsXrayEncryptionConfigDetails => {
  return {
    KeyId: __expectString(output.KeyId),
    Status: __expectString(output.Status),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1BatchUpdateFindingsUnprocessedFinding
 */
const de_BatchUpdateFindingsUnprocessedFinding = (
  output: any,
  context: __SerdeContext
): BatchUpdateFindingsUnprocessedFinding => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorMessage: __expectString(output.ErrorMessage),
    FindingIdentifier:
      output.FindingIdentifier != null ? de_AwsSecurityFindingIdentifier(output.FindingIdentifier, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1BatchUpdateFindingsUnprocessedFindingsList
 */
const de_BatchUpdateFindingsUnprocessedFindingsList = (
  output: any,
  context: __SerdeContext
): BatchUpdateFindingsUnprocessedFinding[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_BatchUpdateFindingsUnprocessedFinding(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1BooleanFilter
 */
const de_BooleanFilter = (output: any, context: __SerdeContext): BooleanFilter => {
  return {
    Value: __expectBoolean(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1BooleanFilterList
 */
const de_BooleanFilterList = (output: any, context: __SerdeContext): BooleanFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_BooleanFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1CategoryList
 */
const de_CategoryList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Cell
 */
const de_Cell = (output: any, context: __SerdeContext): Cell => {
  return {
    CellReference: __expectString(output.CellReference),
    Column: __expectLong(output.Column),
    ColumnName: __expectString(output.ColumnName),
    Row: __expectLong(output.Row),
  } as any;
};

/**
 * deserializeAws_restJson1Cells
 */
const de_Cells = (output: any, context: __SerdeContext): Cell[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Cell(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1CidrBlockAssociation
 */
const de_CidrBlockAssociation = (output: any, context: __SerdeContext): CidrBlockAssociation => {
  return {
    AssociationId: __expectString(output.AssociationId),
    CidrBlock: __expectString(output.CidrBlock),
    CidrBlockState: __expectString(output.CidrBlockState),
  } as any;
};

/**
 * deserializeAws_restJson1CidrBlockAssociationList
 */
const de_CidrBlockAssociationList = (output: any, context: __SerdeContext): CidrBlockAssociation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CidrBlockAssociation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1City
 */
const de_City = (output: any, context: __SerdeContext): City => {
  return {
    CityName: __expectString(output.CityName),
  } as any;
};

/**
 * deserializeAws_restJson1ClassificationResult
 */
const de_ClassificationResult = (output: any, context: __SerdeContext): ClassificationResult => {
  return {
    AdditionalOccurrences: __expectBoolean(output.AdditionalOccurrences),
    CustomDataIdentifiers:
      output.CustomDataIdentifiers != null
        ? de_CustomDataIdentifiersResult(output.CustomDataIdentifiers, context)
        : undefined,
    MimeType: __expectString(output.MimeType),
    SensitiveData: output.SensitiveData != null ? de_SensitiveDataResultList(output.SensitiveData, context) : undefined,
    SizeClassified: __expectLong(output.SizeClassified),
    Status: output.Status != null ? de_ClassificationStatus(output.Status, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1ClassificationStatus
 */
const de_ClassificationStatus = (output: any, context: __SerdeContext): ClassificationStatus => {
  return {
    Code: __expectString(output.Code),
    Reason: __expectString(output.Reason),
  } as any;
};

/**
 * deserializeAws_restJson1Compliance
 */
const de_Compliance = (output: any, context: __SerdeContext): Compliance => {
  return {
    AssociatedStandards:
      output.AssociatedStandards != null ? de_AssociatedStandardsList(output.AssociatedStandards, context) : undefined,
    RelatedRequirements:
      output.RelatedRequirements != null ? de_RelatedRequirementsList(output.RelatedRequirements, context) : undefined,
    SecurityControlId: __expectString(output.SecurityControlId),
    Status: __expectString(output.Status),
    StatusReasons: output.StatusReasons != null ? de_StatusReasonsList(output.StatusReasons, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1ContainerDetails
 */
const de_ContainerDetails = (output: any, context: __SerdeContext): ContainerDetails => {
  return {
    ContainerRuntime: __expectString(output.ContainerRuntime),
    ImageId: __expectString(output.ImageId),
    ImageName: __expectString(output.ImageName),
    LaunchedAt: __expectString(output.LaunchedAt),
    Name: __expectString(output.Name),
    Privileged: __expectBoolean(output.Privileged),
    VolumeMounts: output.VolumeMounts != null ? de_VolumeMountList(output.VolumeMounts, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1Country
 */
const de_Country = (output: any, context: __SerdeContext): Country => {
  return {
    CountryCode: __expectString(output.CountryCode),
    CountryName: __expectString(output.CountryName),
  } as any;
};

/**
 * deserializeAws_restJson1CustomDataIdentifiersDetections
 */
const de_CustomDataIdentifiersDetections = (output: any, context: __SerdeContext): CustomDataIdentifiersDetections => {
  return {
    Arn: __expectString(output.Arn),
    Count: __expectLong(output.Count),
    Name: __expectString(output.Name),
    Occurrences: output.Occurrences != null ? de_Occurrences(output.Occurrences, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1CustomDataIdentifiersDetectionsList
 */
const de_CustomDataIdentifiersDetectionsList = (
  output: any,
  context: __SerdeContext
): CustomDataIdentifiersDetections[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CustomDataIdentifiersDetections(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1CustomDataIdentifiersResult
 */
const de_CustomDataIdentifiersResult = (output: any, context: __SerdeContext): CustomDataIdentifiersResult => {
  return {
    Detections:
      output.Detections != null ? de_CustomDataIdentifiersDetectionsList(output.Detections, context) : undefined,
    TotalCount: __expectLong(output.TotalCount),
  } as any;
};

/**
 * deserializeAws_restJson1Cvss
 */
const de_Cvss = (output: any, context: __SerdeContext): Cvss => {
  return {
    Adjustments: output.Adjustments != null ? de_AdjustmentList(output.Adjustments, context) : undefined,
    BaseScore: __limitedParseDouble(output.BaseScore),
    BaseVector: __expectString(output.BaseVector),
    Source: __expectString(output.Source),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1CvssList
 */
const de_CvssList = (output: any, context: __SerdeContext): Cvss[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Cvss(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1DataClassificationDetails
 */
const de_DataClassificationDetails = (output: any, context: __SerdeContext): DataClassificationDetails => {
  return {
    DetailedResultsLocation: __expectString(output.DetailedResultsLocation),
    Result: output.Result != null ? de_ClassificationResult(output.Result, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1DateFilter
 */
const de_DateFilter = (output: any, context: __SerdeContext): DateFilter => {
  return {
    DateRange: output.DateRange != null ? de_DateRange(output.DateRange, context) : undefined,
    End: __expectString(output.End),
    Start: __expectString(output.Start),
  } as any;
};

/**
 * deserializeAws_restJson1DateFilterList
 */
const de_DateFilterList = (output: any, context: __SerdeContext): DateFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DateFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1DateRange
 */
const de_DateRange = (output: any, context: __SerdeContext): DateRange => {
  return {
    Unit: __expectString(output.Unit),
    Value: __expectInt32(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1DnsRequestAction
 */
const de_DnsRequestAction = (output: any, context: __SerdeContext): DnsRequestAction => {
  return {
    Blocked: __expectBoolean(output.Blocked),
    Domain: __expectString(output.Domain),
    Protocol: __expectString(output.Protocol),
  } as any;
};

/**
 * deserializeAws_restJson1FieldMap
 */
const de_FieldMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_restJson1FilePathList
 */
const de_FilePathList = (output: any, context: __SerdeContext): FilePaths[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FilePaths(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1FilePaths
 */
const de_FilePaths = (output: any, context: __SerdeContext): FilePaths => {
  return {
    FileName: __expectString(output.FileName),
    FilePath: __expectString(output.FilePath),
    Hash: __expectString(output.Hash),
    ResourceId: __expectString(output.ResourceId),
  } as any;
};

/**
 * deserializeAws_restJson1FindingAggregator
 */
const de_FindingAggregator = (output: any, context: __SerdeContext): FindingAggregator => {
  return {
    FindingAggregatorArn: __expectString(output.FindingAggregatorArn),
  } as any;
};

/**
 * deserializeAws_restJson1FindingAggregatorList
 */
const de_FindingAggregatorList = (output: any, context: __SerdeContext): FindingAggregator[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FindingAggregator(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1FindingProviderFields
 */
const de_FindingProviderFields = (output: any, context: __SerdeContext): FindingProviderFields => {
  return {
    Confidence: __expectInt32(output.Confidence),
    Criticality: __expectInt32(output.Criticality),
    RelatedFindings:
      output.RelatedFindings != null ? de_RelatedFindingList(output.RelatedFindings, context) : undefined,
    Severity: output.Severity != null ? de_FindingProviderSeverity(output.Severity, context) : undefined,
    Types: output.Types != null ? de_TypeList(output.Types, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1FindingProviderSeverity
 */
const de_FindingProviderSeverity = (output: any, context: __SerdeContext): FindingProviderSeverity => {
  return {
    Label: __expectString(output.Label),
    Original: __expectString(output.Original),
  } as any;
};

/**
 * deserializeAws_restJson1FirewallPolicyDetails
 */
const de_FirewallPolicyDetails = (output: any, context: __SerdeContext): FirewallPolicyDetails => {
  return {
    StatefulRuleGroupReferences:
      output.StatefulRuleGroupReferences != null
        ? de_FirewallPolicyStatefulRuleGroupReferencesList(output.StatefulRuleGroupReferences, context)
        : undefined,
    StatelessCustomActions:
      output.StatelessCustomActions != null
        ? de_FirewallPolicyStatelessCustomActionsList(output.StatelessCustomActions, context)
        : undefined,
    StatelessDefaultActions:
      output.StatelessDefaultActions != null
        ? de_NonEmptyStringList(output.StatelessDefaultActions, context)
        : undefined,
    StatelessFragmentDefaultActions:
      output.StatelessFragmentDefaultActions != null
        ? de_NonEmptyStringList(output.StatelessFragmentDefaultActions, context)
        : undefined,
    StatelessRuleGroupReferences:
      output.StatelessRuleGroupReferences != null
        ? de_FirewallPolicyStatelessRuleGroupReferencesList(output.StatelessRuleGroupReferences, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatefulRuleGroupReferencesDetails
 */
const de_FirewallPolicyStatefulRuleGroupReferencesDetails = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatefulRuleGroupReferencesDetails => {
  return {
    ResourceArn: __expectString(output.ResourceArn),
  } as any;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatefulRuleGroupReferencesList
 */
const de_FirewallPolicyStatefulRuleGroupReferencesList = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatefulRuleGroupReferencesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FirewallPolicyStatefulRuleGroupReferencesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatelessCustomActionsDetails
 */
const de_FirewallPolicyStatelessCustomActionsDetails = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatelessCustomActionsDetails => {
  return {
    ActionDefinition:
      output.ActionDefinition != null
        ? de_StatelessCustomActionDefinition(output.ActionDefinition, context)
        : undefined,
    ActionName: __expectString(output.ActionName),
  } as any;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatelessCustomActionsList
 */
const de_FirewallPolicyStatelessCustomActionsList = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatelessCustomActionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FirewallPolicyStatelessCustomActionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatelessRuleGroupReferencesDetails
 */
const de_FirewallPolicyStatelessRuleGroupReferencesDetails = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatelessRuleGroupReferencesDetails => {
  return {
    Priority: __expectInt32(output.Priority),
    ResourceArn: __expectString(output.ResourceArn),
  } as any;
};

/**
 * deserializeAws_restJson1FirewallPolicyStatelessRuleGroupReferencesList
 */
const de_FirewallPolicyStatelessRuleGroupReferencesList = (
  output: any,
  context: __SerdeContext
): FirewallPolicyStatelessRuleGroupReferencesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FirewallPolicyStatelessRuleGroupReferencesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1GeoLocation
 */
const de_GeoLocation = (output: any, context: __SerdeContext): GeoLocation => {
  return {
    Lat: __limitedParseDouble(output.Lat),
    Lon: __limitedParseDouble(output.Lon),
  } as any;
};

/**
 * deserializeAws_restJson1IcmpTypeCode
 */
const de_IcmpTypeCode = (output: any, context: __SerdeContext): IcmpTypeCode => {
  return {
    Code: __expectInt32(output.Code),
    Type: __expectInt32(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1ImportFindingsError
 */
const de_ImportFindingsError = (output: any, context: __SerdeContext): ImportFindingsError => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorMessage: __expectString(output.ErrorMessage),
    Id: __expectString(output.Id),
  } as any;
};

/**
 * deserializeAws_restJson1ImportFindingsErrorList
 */
const de_ImportFindingsErrorList = (output: any, context: __SerdeContext): ImportFindingsError[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ImportFindingsError(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Insight
 */
const de_Insight = (output: any, context: __SerdeContext): Insight => {
  return {
    Filters: output.Filters != null ? de_AwsSecurityFindingFilters(output.Filters, context) : undefined,
    GroupByAttribute: __expectString(output.GroupByAttribute),
    InsightArn: __expectString(output.InsightArn),
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1InsightList
 */
const de_InsightList = (output: any, context: __SerdeContext): Insight[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Insight(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1InsightResults
 */
const de_InsightResults = (output: any, context: __SerdeContext): InsightResults => {
  return {
    GroupByAttribute: __expectString(output.GroupByAttribute),
    InsightArn: __expectString(output.InsightArn),
    ResultValues: output.ResultValues != null ? de_InsightResultValueList(output.ResultValues, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1InsightResultValue
 */
const de_InsightResultValue = (output: any, context: __SerdeContext): InsightResultValue => {
  return {
    Count: __expectInt32(output.Count),
    GroupByAttributeValue: __expectString(output.GroupByAttributeValue),
  } as any;
};

/**
 * deserializeAws_restJson1InsightResultValueList
 */
const de_InsightResultValueList = (output: any, context: __SerdeContext): InsightResultValue[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InsightResultValue(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1IntegerList
 */
const de_IntegerList = (output: any, context: __SerdeContext): number[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectInt32(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1IntegrationTypeList
 */
const de_IntegrationTypeList = (output: any, context: __SerdeContext): (IntegrationType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Invitation
 */
const de_Invitation = (output: any, context: __SerdeContext): Invitation => {
  return {
    AccountId: __expectString(output.AccountId),
    InvitationId: __expectString(output.InvitationId),
    InvitedAt:
      output.InvitedAt != null ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.InvitedAt)) : undefined,
    MemberStatus: __expectString(output.MemberStatus),
  } as any;
};

/**
 * deserializeAws_restJson1InvitationList
 */
const de_InvitationList = (output: any, context: __SerdeContext): Invitation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Invitation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1IpFilter
 */
const de_IpFilter = (output: any, context: __SerdeContext): IpFilter => {
  return {
    Cidr: __expectString(output.Cidr),
  } as any;
};

/**
 * deserializeAws_restJson1IpFilterList
 */
const de_IpFilterList = (output: any, context: __SerdeContext): IpFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_IpFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1IpOrganizationDetails
 */
const de_IpOrganizationDetails = (output: any, context: __SerdeContext): IpOrganizationDetails => {
  return {
    Asn: __expectInt32(output.Asn),
    AsnOrg: __expectString(output.AsnOrg),
    Isp: __expectString(output.Isp),
    Org: __expectString(output.Org),
  } as any;
};

/**
 * deserializeAws_restJson1Ipv6CidrBlockAssociation
 */
const de_Ipv6CidrBlockAssociation = (output: any, context: __SerdeContext): Ipv6CidrBlockAssociation => {
  return {
    AssociationId: __expectString(output.AssociationId),
    CidrBlockState: __expectString(output.CidrBlockState),
    Ipv6CidrBlock: __expectString(output.Ipv6CidrBlock),
  } as any;
};

/**
 * deserializeAws_restJson1Ipv6CidrBlockAssociationList
 */
const de_Ipv6CidrBlockAssociationList = (output: any, context: __SerdeContext): Ipv6CidrBlockAssociation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Ipv6CidrBlockAssociation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1KeywordFilter
 */
const de_KeywordFilter = (output: any, context: __SerdeContext): KeywordFilter => {
  return {
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1KeywordFilterList
 */
const de_KeywordFilterList = (output: any, context: __SerdeContext): KeywordFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_KeywordFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1LoadBalancerState
 */
const de_LoadBalancerState = (output: any, context: __SerdeContext): LoadBalancerState => {
  return {
    Code: __expectString(output.Code),
    Reason: __expectString(output.Reason),
  } as any;
};

/**
 * deserializeAws_restJson1Malware
 */
const de_Malware = (output: any, context: __SerdeContext): Malware => {
  return {
    Name: __expectString(output.Name),
    Path: __expectString(output.Path),
    State: __expectString(output.State),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1MalwareList
 */
const de_MalwareList = (output: any, context: __SerdeContext): Malware[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Malware(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1MapFilter
 */
const de_MapFilter = (output: any, context: __SerdeContext): MapFilter => {
  return {
    Comparison: __expectString(output.Comparison),
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1MapFilterList
 */
const de_MapFilterList = (output: any, context: __SerdeContext): MapFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MapFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Member
 */
const de_Member = (output: any, context: __SerdeContext): Member => {
  return {
    AccountId: __expectString(output.AccountId),
    AdministratorId: __expectString(output.AdministratorId),
    Email: __expectString(output.Email),
    InvitedAt:
      output.InvitedAt != null ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.InvitedAt)) : undefined,
    MasterId: __expectString(output.MasterId),
    MemberStatus: __expectString(output.MemberStatus),
    UpdatedAt:
      output.UpdatedAt != null ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.UpdatedAt)) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1MemberList
 */
const de_MemberList = (output: any, context: __SerdeContext): Member[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Member(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Network
 */
const de_Network = (output: any, context: __SerdeContext): Network => {
  return {
    DestinationDomain: __expectString(output.DestinationDomain),
    DestinationIpV4: __expectString(output.DestinationIpV4),
    DestinationIpV6: __expectString(output.DestinationIpV6),
    DestinationPort: __expectInt32(output.DestinationPort),
    Direction: __expectString(output.Direction),
    OpenPortRange: output.OpenPortRange != null ? de_PortRange(output.OpenPortRange, context) : undefined,
    Protocol: __expectString(output.Protocol),
    SourceDomain: __expectString(output.SourceDomain),
    SourceIpV4: __expectString(output.SourceIpV4),
    SourceIpV6: __expectString(output.SourceIpV6),
    SourceMac: __expectString(output.SourceMac),
    SourcePort: __expectInt32(output.SourcePort),
  } as any;
};

/**
 * deserializeAws_restJson1NetworkConnectionAction
 */
const de_NetworkConnectionAction = (output: any, context: __SerdeContext): NetworkConnectionAction => {
  return {
    Blocked: __expectBoolean(output.Blocked),
    ConnectionDirection: __expectString(output.ConnectionDirection),
    LocalPortDetails:
      output.LocalPortDetails != null ? de_ActionLocalPortDetails(output.LocalPortDetails, context) : undefined,
    Protocol: __expectString(output.Protocol),
    RemoteIpDetails:
      output.RemoteIpDetails != null ? de_ActionRemoteIpDetails(output.RemoteIpDetails, context) : undefined,
    RemotePortDetails:
      output.RemotePortDetails != null ? de_ActionRemotePortDetails(output.RemotePortDetails, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1NetworkHeader
 */
const de_NetworkHeader = (output: any, context: __SerdeContext): NetworkHeader => {
  return {
    Destination: output.Destination != null ? de_NetworkPathComponentDetails(output.Destination, context) : undefined,
    Protocol: __expectString(output.Protocol),
    Source: output.Source != null ? de_NetworkPathComponentDetails(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1NetworkPathComponent
 */
const de_NetworkPathComponent = (output: any, context: __SerdeContext): NetworkPathComponent => {
  return {
    ComponentId: __expectString(output.ComponentId),
    ComponentType: __expectString(output.ComponentType),
    Egress: output.Egress != null ? de_NetworkHeader(output.Egress, context) : undefined,
    Ingress: output.Ingress != null ? de_NetworkHeader(output.Ingress, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1NetworkPathComponentDetails
 */
const de_NetworkPathComponentDetails = (output: any, context: __SerdeContext): NetworkPathComponentDetails => {
  return {
    Address: output.Address != null ? de_StringList(output.Address, context) : undefined,
    PortRanges: output.PortRanges != null ? de_PortRangeList(output.PortRanges, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1NetworkPathList
 */
const de_NetworkPathList = (output: any, context: __SerdeContext): NetworkPathComponent[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_NetworkPathComponent(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1NonEmptyStringList
 */
const de_NonEmptyStringList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Note
 */
const de_Note = (output: any, context: __SerdeContext): Note => {
  return {
    Text: __expectString(output.Text),
    UpdatedAt: __expectString(output.UpdatedAt),
    UpdatedBy: __expectString(output.UpdatedBy),
  } as any;
};

/**
 * deserializeAws_restJson1NumberFilter
 */
const de_NumberFilter = (output: any, context: __SerdeContext): NumberFilter => {
  return {
    Eq: __limitedParseDouble(output.Eq),
    Gte: __limitedParseDouble(output.Gte),
    Lte: __limitedParseDouble(output.Lte),
  } as any;
};

/**
 * deserializeAws_restJson1NumberFilterList
 */
const de_NumberFilterList = (output: any, context: __SerdeContext): NumberFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_NumberFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Occurrences
 */
const de_Occurrences = (output: any, context: __SerdeContext): Occurrences => {
  return {
    Cells: output.Cells != null ? de_Cells(output.Cells, context) : undefined,
    LineRanges: output.LineRanges != null ? de_Ranges(output.LineRanges, context) : undefined,
    OffsetRanges: output.OffsetRanges != null ? de_Ranges(output.OffsetRanges, context) : undefined,
    Pages: output.Pages != null ? de_Pages(output.Pages, context) : undefined,
    Records: output.Records != null ? de_Records(output.Records, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1Page
 */
const de_Page = (output: any, context: __SerdeContext): Page => {
  return {
    LineRange: output.LineRange != null ? de_Range(output.LineRange, context) : undefined,
    OffsetRange: output.OffsetRange != null ? de_Range(output.OffsetRange, context) : undefined,
    PageNumber: __expectLong(output.PageNumber),
  } as any;
};

/**
 * deserializeAws_restJson1Pages
 */
const de_Pages = (output: any, context: __SerdeContext): Page[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Page(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1PatchSummary
 */
const de_PatchSummary = (output: any, context: __SerdeContext): PatchSummary => {
  return {
    FailedCount: __expectInt32(output.FailedCount),
    Id: __expectString(output.Id),
    InstalledCount: __expectInt32(output.InstalledCount),
    InstalledOtherCount: __expectInt32(output.InstalledOtherCount),
    InstalledPendingReboot: __expectInt32(output.InstalledPendingReboot),
    InstalledRejectedCount: __expectInt32(output.InstalledRejectedCount),
    MissingCount: __expectInt32(output.MissingCount),
    Operation: __expectString(output.Operation),
    OperationEndTime: __expectString(output.OperationEndTime),
    OperationStartTime: __expectString(output.OperationStartTime),
    RebootOption: __expectString(output.RebootOption),
  } as any;
};

/**
 * deserializeAws_restJson1PortProbeAction
 */
const de_PortProbeAction = (output: any, context: __SerdeContext): PortProbeAction => {
  return {
    Blocked: __expectBoolean(output.Blocked),
    PortProbeDetails:
      output.PortProbeDetails != null ? de_PortProbeDetailList(output.PortProbeDetails, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1PortProbeDetail
 */
const de_PortProbeDetail = (output: any, context: __SerdeContext): PortProbeDetail => {
  return {
    LocalIpDetails: output.LocalIpDetails != null ? de_ActionLocalIpDetails(output.LocalIpDetails, context) : undefined,
    LocalPortDetails:
      output.LocalPortDetails != null ? de_ActionLocalPortDetails(output.LocalPortDetails, context) : undefined,
    RemoteIpDetails:
      output.RemoteIpDetails != null ? de_ActionRemoteIpDetails(output.RemoteIpDetails, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1PortProbeDetailList
 */
const de_PortProbeDetailList = (output: any, context: __SerdeContext): PortProbeDetail[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PortProbeDetail(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1PortRange
 */
const de_PortRange = (output: any, context: __SerdeContext): PortRange => {
  return {
    Begin: __expectInt32(output.Begin),
    End: __expectInt32(output.End),
  } as any;
};

/**
 * deserializeAws_restJson1PortRangeFromTo
 */
const de_PortRangeFromTo = (output: any, context: __SerdeContext): PortRangeFromTo => {
  return {
    From: __expectInt32(output.From),
    To: __expectInt32(output.To),
  } as any;
};

/**
 * deserializeAws_restJson1PortRangeList
 */
const de_PortRangeList = (output: any, context: __SerdeContext): PortRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PortRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1ProcessDetails
 */
const de_ProcessDetails = (output: any, context: __SerdeContext): ProcessDetails => {
  return {
    LaunchedAt: __expectString(output.LaunchedAt),
    Name: __expectString(output.Name),
    ParentPid: __expectInt32(output.ParentPid),
    Path: __expectString(output.Path),
    Pid: __expectInt32(output.Pid),
    TerminatedAt: __expectString(output.TerminatedAt),
  } as any;
};

/**
 * deserializeAws_restJson1Product
 */
const de_Product = (output: any, context: __SerdeContext): Product => {
  return {
    ActivationUrl: __expectString(output.ActivationUrl),
    Categories: output.Categories != null ? de_CategoryList(output.Categories, context) : undefined,
    CompanyName: __expectString(output.CompanyName),
    Description: __expectString(output.Description),
    IntegrationTypes:
      output.IntegrationTypes != null ? de_IntegrationTypeList(output.IntegrationTypes, context) : undefined,
    MarketplaceUrl: __expectString(output.MarketplaceUrl),
    ProductArn: __expectString(output.ProductArn),
    ProductName: __expectString(output.ProductName),
    ProductSubscriptionResourcePolicy: __expectString(output.ProductSubscriptionResourcePolicy),
  } as any;
};

/**
 * deserializeAws_restJson1ProductsList
 */
const de_ProductsList = (output: any, context: __SerdeContext): Product[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Product(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1ProductSubscriptionArnList
 */
const de_ProductSubscriptionArnList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1PropagatingVgwSetDetails
 */
const de_PropagatingVgwSetDetails = (output: any, context: __SerdeContext): PropagatingVgwSetDetails => {
  return {
    GatewayId: __expectString(output.GatewayId),
  } as any;
};

/**
 * deserializeAws_restJson1PropagatingVgwSetList
 */
const de_PropagatingVgwSetList = (output: any, context: __SerdeContext): PropagatingVgwSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PropagatingVgwSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Range
 */
const de_Range = (output: any, context: __SerdeContext): Range => {
  return {
    End: __expectLong(output.End),
    Start: __expectLong(output.Start),
    StartColumn: __expectLong(output.StartColumn),
  } as any;
};

/**
 * deserializeAws_restJson1Ranges
 */
const de_Ranges = (output: any, context: __SerdeContext): Range[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Range(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Recommendation
 */
const de_Recommendation = (output: any, context: __SerdeContext): Recommendation => {
  return {
    Text: __expectString(output.Text),
    Url: __expectString(output.Url),
  } as any;
};

/**
 * deserializeAws_restJson1_Record
 */
const de__Record = (output: any, context: __SerdeContext): _Record => {
  return {
    JsonPath: __expectString(output.JsonPath),
    RecordIndex: __expectLong(output.RecordIndex),
  } as any;
};

/**
 * deserializeAws_restJson1Records
 */
const de_Records = (output: any, context: __SerdeContext): _Record[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de__Record(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RelatedFinding
 */
const de_RelatedFinding = (output: any, context: __SerdeContext): RelatedFinding => {
  return {
    Id: __expectString(output.Id),
    ProductArn: __expectString(output.ProductArn),
  } as any;
};

/**
 * deserializeAws_restJson1RelatedFindingList
 */
const de_RelatedFindingList = (output: any, context: __SerdeContext): RelatedFinding[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RelatedFinding(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RelatedRequirementsList
 */
const de_RelatedRequirementsList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Remediation
 */
const de_Remediation = (output: any, context: __SerdeContext): Remediation => {
  return {
    Recommendation: output.Recommendation != null ? de_Recommendation(output.Recommendation, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1Resource
 */
const de_Resource = (output: any, context: __SerdeContext): Resource => {
  return {
    DataClassification:
      output.DataClassification != null ? de_DataClassificationDetails(output.DataClassification, context) : undefined,
    Details: output.Details != null ? de_ResourceDetails(output.Details, context) : undefined,
    Id: __expectString(output.Id),
    Partition: __expectString(output.Partition),
    Region: __expectString(output.Region),
    ResourceRole: __expectString(output.ResourceRole),
    Tags: output.Tags != null ? de_FieldMap(output.Tags, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1ResourceDetails
 */
const de_ResourceDetails = (output: any, context: __SerdeContext): ResourceDetails => {
  return {
    AwsApiGatewayRestApi:
      output.AwsApiGatewayRestApi != null
        ? de_AwsApiGatewayRestApiDetails(output.AwsApiGatewayRestApi, context)
        : undefined,
    AwsApiGatewayStage:
      output.AwsApiGatewayStage != null ? de_AwsApiGatewayStageDetails(output.AwsApiGatewayStage, context) : undefined,
    AwsApiGatewayV2Api:
      output.AwsApiGatewayV2Api != null ? de_AwsApiGatewayV2ApiDetails(output.AwsApiGatewayV2Api, context) : undefined,
    AwsApiGatewayV2Stage:
      output.AwsApiGatewayV2Stage != null
        ? de_AwsApiGatewayV2StageDetails(output.AwsApiGatewayV2Stage, context)
        : undefined,
    AwsAutoScalingAutoScalingGroup:
      output.AwsAutoScalingAutoScalingGroup != null
        ? de_AwsAutoScalingAutoScalingGroupDetails(output.AwsAutoScalingAutoScalingGroup, context)
        : undefined,
    AwsAutoScalingLaunchConfiguration:
      output.AwsAutoScalingLaunchConfiguration != null
        ? de_AwsAutoScalingLaunchConfigurationDetails(output.AwsAutoScalingLaunchConfiguration, context)
        : undefined,
    AwsBackupBackupPlan:
      output.AwsBackupBackupPlan != null
        ? de_AwsBackupBackupPlanDetails(output.AwsBackupBackupPlan, context)
        : undefined,
    AwsBackupBackupVault:
      output.AwsBackupBackupVault != null
        ? de_AwsBackupBackupVaultDetails(output.AwsBackupBackupVault, context)
        : undefined,
    AwsBackupRecoveryPoint:
      output.AwsBackupRecoveryPoint != null
        ? de_AwsBackupRecoveryPointDetails(output.AwsBackupRecoveryPoint, context)
        : undefined,
    AwsCertificateManagerCertificate:
      output.AwsCertificateManagerCertificate != null
        ? de_AwsCertificateManagerCertificateDetails(output.AwsCertificateManagerCertificate, context)
        : undefined,
    AwsCloudFormationStack:
      output.AwsCloudFormationStack != null
        ? de_AwsCloudFormationStackDetails(output.AwsCloudFormationStack, context)
        : undefined,
    AwsCloudFrontDistribution:
      output.AwsCloudFrontDistribution != null
        ? de_AwsCloudFrontDistributionDetails(output.AwsCloudFrontDistribution, context)
        : undefined,
    AwsCloudTrailTrail:
      output.AwsCloudTrailTrail != null ? de_AwsCloudTrailTrailDetails(output.AwsCloudTrailTrail, context) : undefined,
    AwsCloudWatchAlarm:
      output.AwsCloudWatchAlarm != null ? de_AwsCloudWatchAlarmDetails(output.AwsCloudWatchAlarm, context) : undefined,
    AwsCodeBuildProject:
      output.AwsCodeBuildProject != null
        ? de_AwsCodeBuildProjectDetails(output.AwsCodeBuildProject, context)
        : undefined,
    AwsDynamoDbTable:
      output.AwsDynamoDbTable != null ? de_AwsDynamoDbTableDetails(output.AwsDynamoDbTable, context) : undefined,
    AwsEc2Eip: output.AwsEc2Eip != null ? de_AwsEc2EipDetails(output.AwsEc2Eip, context) : undefined,
    AwsEc2Instance:
      output.AwsEc2Instance != null ? de_AwsEc2InstanceDetails(output.AwsEc2Instance, context) : undefined,
    AwsEc2LaunchTemplate:
      output.AwsEc2LaunchTemplate != null
        ? de_AwsEc2LaunchTemplateDetails(output.AwsEc2LaunchTemplate, context)
        : undefined,
    AwsEc2NetworkAcl:
      output.AwsEc2NetworkAcl != null ? de_AwsEc2NetworkAclDetails(output.AwsEc2NetworkAcl, context) : undefined,
    AwsEc2NetworkInterface:
      output.AwsEc2NetworkInterface != null
        ? de_AwsEc2NetworkInterfaceDetails(output.AwsEc2NetworkInterface, context)
        : undefined,
    AwsEc2RouteTable:
      output.AwsEc2RouteTable != null ? de_AwsEc2RouteTableDetails(output.AwsEc2RouteTable, context) : undefined,
    AwsEc2SecurityGroup:
      output.AwsEc2SecurityGroup != null
        ? de_AwsEc2SecurityGroupDetails(output.AwsEc2SecurityGroup, context)
        : undefined,
    AwsEc2Subnet: output.AwsEc2Subnet != null ? de_AwsEc2SubnetDetails(output.AwsEc2Subnet, context) : undefined,
    AwsEc2TransitGateway:
      output.AwsEc2TransitGateway != null
        ? de_AwsEc2TransitGatewayDetails(output.AwsEc2TransitGateway, context)
        : undefined,
    AwsEc2Volume: output.AwsEc2Volume != null ? de_AwsEc2VolumeDetails(output.AwsEc2Volume, context) : undefined,
    AwsEc2Vpc: output.AwsEc2Vpc != null ? de_AwsEc2VpcDetails(output.AwsEc2Vpc, context) : undefined,
    AwsEc2VpcEndpointService:
      output.AwsEc2VpcEndpointService != null
        ? de_AwsEc2VpcEndpointServiceDetails(output.AwsEc2VpcEndpointService, context)
        : undefined,
    AwsEc2VpcPeeringConnection:
      output.AwsEc2VpcPeeringConnection != null
        ? de_AwsEc2VpcPeeringConnectionDetails(output.AwsEc2VpcPeeringConnection, context)
        : undefined,
    AwsEc2VpnConnection:
      output.AwsEc2VpnConnection != null
        ? de_AwsEc2VpnConnectionDetails(output.AwsEc2VpnConnection, context)
        : undefined,
    AwsEcrContainerImage:
      output.AwsEcrContainerImage != null
        ? de_AwsEcrContainerImageDetails(output.AwsEcrContainerImage, context)
        : undefined,
    AwsEcrRepository:
      output.AwsEcrRepository != null ? de_AwsEcrRepositoryDetails(output.AwsEcrRepository, context) : undefined,
    AwsEcsCluster: output.AwsEcsCluster != null ? de_AwsEcsClusterDetails(output.AwsEcsCluster, context) : undefined,
    AwsEcsContainer:
      output.AwsEcsContainer != null ? de_AwsEcsContainerDetails(output.AwsEcsContainer, context) : undefined,
    AwsEcsService: output.AwsEcsService != null ? de_AwsEcsServiceDetails(output.AwsEcsService, context) : undefined,
    AwsEcsTask: output.AwsEcsTask != null ? de_AwsEcsTaskDetails(output.AwsEcsTask, context) : undefined,
    AwsEcsTaskDefinition:
      output.AwsEcsTaskDefinition != null
        ? de_AwsEcsTaskDefinitionDetails(output.AwsEcsTaskDefinition, context)
        : undefined,
    AwsEfsAccessPoint:
      output.AwsEfsAccessPoint != null ? de_AwsEfsAccessPointDetails(output.AwsEfsAccessPoint, context) : undefined,
    AwsEksCluster: output.AwsEksCluster != null ? de_AwsEksClusterDetails(output.AwsEksCluster, context) : undefined,
    AwsElasticBeanstalkEnvironment:
      output.AwsElasticBeanstalkEnvironment != null
        ? de_AwsElasticBeanstalkEnvironmentDetails(output.AwsElasticBeanstalkEnvironment, context)
        : undefined,
    AwsElasticsearchDomain:
      output.AwsElasticsearchDomain != null
        ? de_AwsElasticsearchDomainDetails(output.AwsElasticsearchDomain, context)
        : undefined,
    AwsElbLoadBalancer:
      output.AwsElbLoadBalancer != null ? de_AwsElbLoadBalancerDetails(output.AwsElbLoadBalancer, context) : undefined,
    AwsElbv2LoadBalancer:
      output.AwsElbv2LoadBalancer != null
        ? de_AwsElbv2LoadBalancerDetails(output.AwsElbv2LoadBalancer, context)
        : undefined,
    AwsIamAccessKey:
      output.AwsIamAccessKey != null ? de_AwsIamAccessKeyDetails(output.AwsIamAccessKey, context) : undefined,
    AwsIamGroup: output.AwsIamGroup != null ? de_AwsIamGroupDetails(output.AwsIamGroup, context) : undefined,
    AwsIamPolicy: output.AwsIamPolicy != null ? de_AwsIamPolicyDetails(output.AwsIamPolicy, context) : undefined,
    AwsIamRole: output.AwsIamRole != null ? de_AwsIamRoleDetails(output.AwsIamRole, context) : undefined,
    AwsIamUser: output.AwsIamUser != null ? de_AwsIamUserDetails(output.AwsIamUser, context) : undefined,
    AwsKinesisStream:
      output.AwsKinesisStream != null ? de_AwsKinesisStreamDetails(output.AwsKinesisStream, context) : undefined,
    AwsKmsKey: output.AwsKmsKey != null ? de_AwsKmsKeyDetails(output.AwsKmsKey, context) : undefined,
    AwsLambdaFunction:
      output.AwsLambdaFunction != null ? de_AwsLambdaFunctionDetails(output.AwsLambdaFunction, context) : undefined,
    AwsLambdaLayerVersion:
      output.AwsLambdaLayerVersion != null
        ? de_AwsLambdaLayerVersionDetails(output.AwsLambdaLayerVersion, context)
        : undefined,
    AwsNetworkFirewallFirewall:
      output.AwsNetworkFirewallFirewall != null
        ? de_AwsNetworkFirewallFirewallDetails(output.AwsNetworkFirewallFirewall, context)
        : undefined,
    AwsNetworkFirewallFirewallPolicy:
      output.AwsNetworkFirewallFirewallPolicy != null
        ? de_AwsNetworkFirewallFirewallPolicyDetails(output.AwsNetworkFirewallFirewallPolicy, context)
        : undefined,
    AwsNetworkFirewallRuleGroup:
      output.AwsNetworkFirewallRuleGroup != null
        ? de_AwsNetworkFirewallRuleGroupDetails(output.AwsNetworkFirewallRuleGroup, context)
        : undefined,
    AwsOpenSearchServiceDomain:
      output.AwsOpenSearchServiceDomain != null
        ? de_AwsOpenSearchServiceDomainDetails(output.AwsOpenSearchServiceDomain, context)
        : undefined,
    AwsRdsDbCluster:
      output.AwsRdsDbCluster != null ? de_AwsRdsDbClusterDetails(output.AwsRdsDbCluster, context) : undefined,
    AwsRdsDbClusterSnapshot:
      output.AwsRdsDbClusterSnapshot != null
        ? de_AwsRdsDbClusterSnapshotDetails(output.AwsRdsDbClusterSnapshot, context)
        : undefined,
    AwsRdsDbInstance:
      output.AwsRdsDbInstance != null ? de_AwsRdsDbInstanceDetails(output.AwsRdsDbInstance, context) : undefined,
    AwsRdsDbSecurityGroup:
      output.AwsRdsDbSecurityGroup != null
        ? de_AwsRdsDbSecurityGroupDetails(output.AwsRdsDbSecurityGroup, context)
        : undefined,
    AwsRdsDbSnapshot:
      output.AwsRdsDbSnapshot != null ? de_AwsRdsDbSnapshotDetails(output.AwsRdsDbSnapshot, context) : undefined,
    AwsRdsEventSubscription:
      output.AwsRdsEventSubscription != null
        ? de_AwsRdsEventSubscriptionDetails(output.AwsRdsEventSubscription, context)
        : undefined,
    AwsRedshiftCluster:
      output.AwsRedshiftCluster != null ? de_AwsRedshiftClusterDetails(output.AwsRedshiftCluster, context) : undefined,
    AwsS3AccountPublicAccessBlock:
      output.AwsS3AccountPublicAccessBlock != null
        ? de_AwsS3AccountPublicAccessBlockDetails(output.AwsS3AccountPublicAccessBlock, context)
        : undefined,
    AwsS3Bucket: output.AwsS3Bucket != null ? de_AwsS3BucketDetails(output.AwsS3Bucket, context) : undefined,
    AwsS3Object: output.AwsS3Object != null ? de_AwsS3ObjectDetails(output.AwsS3Object, context) : undefined,
    AwsSageMakerNotebookInstance:
      output.AwsSageMakerNotebookInstance != null
        ? de_AwsSageMakerNotebookInstanceDetails(output.AwsSageMakerNotebookInstance, context)
        : undefined,
    AwsSecretsManagerSecret:
      output.AwsSecretsManagerSecret != null
        ? de_AwsSecretsManagerSecretDetails(output.AwsSecretsManagerSecret, context)
        : undefined,
    AwsSnsTopic: output.AwsSnsTopic != null ? de_AwsSnsTopicDetails(output.AwsSnsTopic, context) : undefined,
    AwsSqsQueue: output.AwsSqsQueue != null ? de_AwsSqsQueueDetails(output.AwsSqsQueue, context) : undefined,
    AwsSsmPatchCompliance:
      output.AwsSsmPatchCompliance != null
        ? de_AwsSsmPatchComplianceDetails(output.AwsSsmPatchCompliance, context)
        : undefined,
    AwsWafRateBasedRule:
      output.AwsWafRateBasedRule != null
        ? de_AwsWafRateBasedRuleDetails(output.AwsWafRateBasedRule, context)
        : undefined,
    AwsWafRegionalRateBasedRule:
      output.AwsWafRegionalRateBasedRule != null
        ? de_AwsWafRegionalRateBasedRuleDetails(output.AwsWafRegionalRateBasedRule, context)
        : undefined,
    AwsWafRegionalRule:
      output.AwsWafRegionalRule != null ? de_AwsWafRegionalRuleDetails(output.AwsWafRegionalRule, context) : undefined,
    AwsWafRegionalRuleGroup:
      output.AwsWafRegionalRuleGroup != null
        ? de_AwsWafRegionalRuleGroupDetails(output.AwsWafRegionalRuleGroup, context)
        : undefined,
    AwsWafRegionalWebAcl:
      output.AwsWafRegionalWebAcl != null
        ? de_AwsWafRegionalWebAclDetails(output.AwsWafRegionalWebAcl, context)
        : undefined,
    AwsWafRule: output.AwsWafRule != null ? de_AwsWafRuleDetails(output.AwsWafRule, context) : undefined,
    AwsWafRuleGroup:
      output.AwsWafRuleGroup != null ? de_AwsWafRuleGroupDetails(output.AwsWafRuleGroup, context) : undefined,
    AwsWafWebAcl: output.AwsWafWebAcl != null ? de_AwsWafWebAclDetails(output.AwsWafWebAcl, context) : undefined,
    AwsWafv2RuleGroup:
      output.AwsWafv2RuleGroup != null ? de_AwsWafv2RuleGroupDetails(output.AwsWafv2RuleGroup, context) : undefined,
    AwsWafv2WebAcl:
      output.AwsWafv2WebAcl != null ? de_AwsWafv2WebAclDetails(output.AwsWafv2WebAcl, context) : undefined,
    AwsXrayEncryptionConfig:
      output.AwsXrayEncryptionConfig != null
        ? de_AwsXrayEncryptionConfigDetails(output.AwsXrayEncryptionConfig, context)
        : undefined,
    Container: output.Container != null ? de_ContainerDetails(output.Container, context) : undefined,
    Other: output.Other != null ? de_FieldMap(output.Other, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1ResourceList
 */
const de_ResourceList = (output: any, context: __SerdeContext): Resource[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Resource(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Result
 */
const de_Result = (output: any, context: __SerdeContext): Result => {
  return {
    AccountId: __expectString(output.AccountId),
    ProcessingResult: __expectString(output.ProcessingResult),
  } as any;
};

/**
 * deserializeAws_restJson1ResultList
 */
const de_ResultList = (output: any, context: __SerdeContext): Result[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Result(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RouteSetDetails
 */
const de_RouteSetDetails = (output: any, context: __SerdeContext): RouteSetDetails => {
  return {
    CarrierGatewayId: __expectString(output.CarrierGatewayId),
    CoreNetworkArn: __expectString(output.CoreNetworkArn),
    DestinationCidrBlock: __expectString(output.DestinationCidrBlock),
    DestinationIpv6CidrBlock: __expectString(output.DestinationIpv6CidrBlock),
    DestinationPrefixListId: __expectString(output.DestinationPrefixListId),
    EgressOnlyInternetGatewayId: __expectString(output.EgressOnlyInternetGatewayId),
    GatewayId: __expectString(output.GatewayId),
    InstanceId: __expectString(output.InstanceId),
    InstanceOwnerId: __expectString(output.InstanceOwnerId),
    LocalGatewayId: __expectString(output.LocalGatewayId),
    NatGatewayId: __expectString(output.NatGatewayId),
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    Origin: __expectString(output.Origin),
    State: __expectString(output.State),
    TransitGatewayId: __expectString(output.TransitGatewayId),
    VpcPeeringConnectionId: __expectString(output.VpcPeeringConnectionId),
  } as any;
};

/**
 * deserializeAws_restJson1RouteSetList
 */
const de_RouteSetList = (output: any, context: __SerdeContext): RouteSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RouteSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupDetails
 */
const de_RuleGroupDetails = (output: any, context: __SerdeContext): RuleGroupDetails => {
  return {
    RuleVariables: output.RuleVariables != null ? de_RuleGroupVariables(output.RuleVariables, context) : undefined,
    RulesSource: output.RulesSource != null ? de_RuleGroupSource(output.RulesSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSource
 */
const de_RuleGroupSource = (output: any, context: __SerdeContext): RuleGroupSource => {
  return {
    RulesSourceList:
      output.RulesSourceList != null ? de_RuleGroupSourceListDetails(output.RulesSourceList, context) : undefined,
    RulesString: __expectString(output.RulesString),
    StatefulRules:
      output.StatefulRules != null ? de_RuleGroupSourceStatefulRulesList(output.StatefulRules, context) : undefined,
    StatelessRulesAndCustomActions:
      output.StatelessRulesAndCustomActions != null
        ? de_RuleGroupSourceStatelessRulesAndCustomActionsDetails(output.StatelessRulesAndCustomActions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceCustomActionsDetails
 */
const de_RuleGroupSourceCustomActionsDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceCustomActionsDetails => {
  return {
    ActionDefinition:
      output.ActionDefinition != null
        ? de_StatelessCustomActionDefinition(output.ActionDefinition, context)
        : undefined,
    ActionName: __expectString(output.ActionName),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceCustomActionsList
 */
const de_RuleGroupSourceCustomActionsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceCustomActionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceCustomActionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceListDetails
 */
const de_RuleGroupSourceListDetails = (output: any, context: __SerdeContext): RuleGroupSourceListDetails => {
  return {
    GeneratedRulesType: __expectString(output.GeneratedRulesType),
    TargetTypes: output.TargetTypes != null ? de_NonEmptyStringList(output.TargetTypes, context) : undefined,
    Targets: output.Targets != null ? de_NonEmptyStringList(output.Targets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesDetails
 */
const de_RuleGroupSourceStatefulRulesDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatefulRulesDetails => {
  return {
    Action: __expectString(output.Action),
    Header: output.Header != null ? de_RuleGroupSourceStatefulRulesHeaderDetails(output.Header, context) : undefined,
    RuleOptions:
      output.RuleOptions != null ? de_RuleGroupSourceStatefulRulesOptionsList(output.RuleOptions, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesHeaderDetails
 */
const de_RuleGroupSourceStatefulRulesHeaderDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatefulRulesHeaderDetails => {
  return {
    Destination: __expectString(output.Destination),
    DestinationPort: __expectString(output.DestinationPort),
    Direction: __expectString(output.Direction),
    Protocol: __expectString(output.Protocol),
    Source: __expectString(output.Source),
    SourcePort: __expectString(output.SourcePort),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesList
 */
const de_RuleGroupSourceStatefulRulesList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatefulRulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatefulRulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesOptionsDetails
 */
const de_RuleGroupSourceStatefulRulesOptionsDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatefulRulesOptionsDetails => {
  return {
    Keyword: __expectString(output.Keyword),
    Settings:
      output.Settings != null
        ? de_RuleGroupSourceStatefulRulesRuleOptionsSettingsList(output.Settings, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesOptionsList
 */
const de_RuleGroupSourceStatefulRulesOptionsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatefulRulesOptionsDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatefulRulesOptionsDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatefulRulesRuleOptionsSettingsList
 */
const de_RuleGroupSourceStatefulRulesRuleOptionsSettingsList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleDefinition
 */
const de_RuleGroupSourceStatelessRuleDefinition = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleDefinition => {
  return {
    Actions: output.Actions != null ? de_NonEmptyStringList(output.Actions, context) : undefined,
    MatchAttributes:
      output.MatchAttributes != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributes(output.MatchAttributes, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributes
 */
const de_RuleGroupSourceStatelessRuleMatchAttributes = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributes => {
  return {
    DestinationPorts:
      output.DestinationPorts != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList(output.DestinationPorts, context)
        : undefined,
    Destinations:
      output.Destinations != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesDestinationsList(output.Destinations, context)
        : undefined,
    Protocols:
      output.Protocols != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesProtocolsList(output.Protocols, context)
        : undefined,
    SourcePorts:
      output.SourcePorts != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList(output.SourcePorts, context)
        : undefined,
    Sources:
      output.Sources != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesSourcesList(output.Sources, context)
        : undefined,
    TcpFlags:
      output.TcpFlags != null
        ? de_RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList(output.TcpFlags, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts => {
  return {
    FromPort: __expectInt32(output.FromPort),
    ToPort: __expectInt32(output.ToPort),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinations
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesDestinations = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesDestinations => {
  return {
    AddressDefinition: __expectString(output.AddressDefinition),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesDestinationsList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesDestinationsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesDestinations[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRuleMatchAttributesDestinations(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesProtocolsList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesProtocolsList = (
  output: any,
  context: __SerdeContext
): number[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectInt32(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcePorts
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesSourcePorts = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesSourcePorts => {
  return {
    FromPort: __expectInt32(output.FromPort),
    ToPort: __expectInt32(output.ToPort),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesSourcePorts[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRuleMatchAttributesSourcePorts(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSources
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesSources = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesSources => {
  return {
    AddressDefinition: __expectString(output.AddressDefinition),
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesSourcesList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesSourcesList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesSources[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRuleMatchAttributesSources(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesTcpFlags
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesTcpFlags = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesTcpFlags => {
  return {
    Flags: output.Flags != null ? de_NonEmptyStringList(output.Flags, context) : undefined,
    Masks: output.Masks != null ? de_NonEmptyStringList(output.Masks, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList
 */
const de_RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRuleMatchAttributesTcpFlags[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRuleMatchAttributesTcpFlags(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRulesAndCustomActionsDetails
 */
const de_RuleGroupSourceStatelessRulesAndCustomActionsDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRulesAndCustomActionsDetails => {
  return {
    CustomActions:
      output.CustomActions != null ? de_RuleGroupSourceCustomActionsList(output.CustomActions, context) : undefined,
    StatelessRules:
      output.StatelessRules != null ? de_RuleGroupSourceStatelessRulesList(output.StatelessRules, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRulesDetails
 */
const de_RuleGroupSourceStatelessRulesDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRulesDetails => {
  return {
    Priority: __expectInt32(output.Priority),
    RuleDefinition:
      output.RuleDefinition != null
        ? de_RuleGroupSourceStatelessRuleDefinition(output.RuleDefinition, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupSourceStatelessRulesList
 */
const de_RuleGroupSourceStatelessRulesList = (
  output: any,
  context: __SerdeContext
): RuleGroupSourceStatelessRulesDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RuleGroupSourceStatelessRulesDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1RuleGroupVariables
 */
const de_RuleGroupVariables = (output: any, context: __SerdeContext): RuleGroupVariables => {
  return {
    IpSets: output.IpSets != null ? de_RuleGroupVariablesIpSetsDetails(output.IpSets, context) : undefined,
    PortSets: output.PortSets != null ? de_RuleGroupVariablesPortSetsDetails(output.PortSets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupVariablesIpSetsDetails
 */
const de_RuleGroupVariablesIpSetsDetails = (output: any, context: __SerdeContext): RuleGroupVariablesIpSetsDetails => {
  return {
    Definition: output.Definition != null ? de_NonEmptyStringList(output.Definition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1RuleGroupVariablesPortSetsDetails
 */
const de_RuleGroupVariablesPortSetsDetails = (
  output: any,
  context: __SerdeContext
): RuleGroupVariablesPortSetsDetails => {
  return {
    Definition: output.Definition != null ? de_NonEmptyStringList(output.Definition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1SecurityControl
 */
const de_SecurityControl = (output: any, context: __SerdeContext): SecurityControl => {
  return {
    Description: __expectString(output.Description),
    RemediationUrl: __expectString(output.RemediationUrl),
    SecurityControlArn: __expectString(output.SecurityControlArn),
    SecurityControlId: __expectString(output.SecurityControlId),
    SecurityControlStatus: __expectString(output.SecurityControlStatus),
    SeverityRating: __expectString(output.SeverityRating),
    Title: __expectString(output.Title),
  } as any;
};

/**
 * deserializeAws_restJson1SecurityControlDefinition
 */
const de_SecurityControlDefinition = (output: any, context: __SerdeContext): SecurityControlDefinition => {
  return {
    CurrentRegionAvailability: __expectString(output.CurrentRegionAvailability),
    Description: __expectString(output.Description),
    RemediationUrl: __expectString(output.RemediationUrl),
    SecurityControlId: __expectString(output.SecurityControlId),
    SeverityRating: __expectString(output.SeverityRating),
    Title: __expectString(output.Title),
  } as any;
};

/**
 * deserializeAws_restJson1SecurityControlDefinitions
 */
const de_SecurityControlDefinitions = (output: any, context: __SerdeContext): SecurityControlDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SecurityControlDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1SecurityControls
 */
const de_SecurityControls = (output: any, context: __SerdeContext): SecurityControl[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SecurityControl(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1SecurityGroups
 */
const de_SecurityGroups = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1SensitiveDataDetections
 */
const de_SensitiveDataDetections = (output: any, context: __SerdeContext): SensitiveDataDetections => {
  return {
    Count: __expectLong(output.Count),
    Occurrences: output.Occurrences != null ? de_Occurrences(output.Occurrences, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1SensitiveDataDetectionsList
 */
const de_SensitiveDataDetectionsList = (output: any, context: __SerdeContext): SensitiveDataDetections[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SensitiveDataDetections(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1SensitiveDataResult
 */
const de_SensitiveDataResult = (output: any, context: __SerdeContext): SensitiveDataResult => {
  return {
    Category: __expectString(output.Category),
    Detections: output.Detections != null ? de_SensitiveDataDetectionsList(output.Detections, context) : undefined,
    TotalCount: __expectLong(output.TotalCount),
  } as any;
};

/**
 * deserializeAws_restJson1SensitiveDataResultList
 */
const de_SensitiveDataResultList = (output: any, context: __SerdeContext): SensitiveDataResult[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SensitiveDataResult(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Severity
 */
const de_Severity = (output: any, context: __SerdeContext): Severity => {
  return {
    Label: __expectString(output.Label),
    Normalized: __expectInt32(output.Normalized),
    Original: __expectString(output.Original),
    Product: __limitedParseDouble(output.Product),
  } as any;
};

/**
 * deserializeAws_restJson1SoftwarePackage
 */
const de_SoftwarePackage = (output: any, context: __SerdeContext): SoftwarePackage => {
  return {
    Architecture: __expectString(output.Architecture),
    Epoch: __expectString(output.Epoch),
    FilePath: __expectString(output.FilePath),
    FixedInVersion: __expectString(output.FixedInVersion),
    Name: __expectString(output.Name),
    PackageManager: __expectString(output.PackageManager),
    Release: __expectString(output.Release),
    Remediation: __expectString(output.Remediation),
    SourceLayerArn: __expectString(output.SourceLayerArn),
    SourceLayerHash: __expectString(output.SourceLayerHash),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_restJson1SoftwarePackageList
 */
const de_SoftwarePackageList = (output: any, context: __SerdeContext): SoftwarePackage[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SoftwarePackage(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1Standard
 */
const de_Standard = (output: any, context: __SerdeContext): Standard => {
  return {
    Description: __expectString(output.Description),
    EnabledByDefault: __expectBoolean(output.EnabledByDefault),
    Name: __expectString(output.Name),
    StandardsArn: __expectString(output.StandardsArn),
    StandardsManagedBy:
      output.StandardsManagedBy != null ? de_StandardsManagedBy(output.StandardsManagedBy, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1Standards
 */
const de_Standards = (output: any, context: __SerdeContext): Standard[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Standard(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StandardsControl
 */
const de_StandardsControl = (output: any, context: __SerdeContext): StandardsControl => {
  return {
    ControlId: __expectString(output.ControlId),
    ControlStatus: __expectString(output.ControlStatus),
    ControlStatusUpdatedAt:
      output.ControlStatusUpdatedAt != null
        ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.ControlStatusUpdatedAt))
        : undefined,
    Description: __expectString(output.Description),
    DisabledReason: __expectString(output.DisabledReason),
    RelatedRequirements:
      output.RelatedRequirements != null ? de_RelatedRequirementsList(output.RelatedRequirements, context) : undefined,
    RemediationUrl: __expectString(output.RemediationUrl),
    SeverityRating: __expectString(output.SeverityRating),
    StandardsControlArn: __expectString(output.StandardsControlArn),
    Title: __expectString(output.Title),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsControlArnList
 */
const de_StandardsControlArnList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationDetail
 */
const de_StandardsControlAssociationDetail = (
  output: any,
  context: __SerdeContext
): StandardsControlAssociationDetail => {
  return {
    AssociationStatus: __expectString(output.AssociationStatus),
    RelatedRequirements:
      output.RelatedRequirements != null ? de_RelatedRequirementsList(output.RelatedRequirements, context) : undefined,
    SecurityControlArn: __expectString(output.SecurityControlArn),
    SecurityControlId: __expectString(output.SecurityControlId),
    StandardsArn: __expectString(output.StandardsArn),
    StandardsControlArns:
      output.StandardsControlArns != null
        ? de_StandardsControlArnList(output.StandardsControlArns, context)
        : undefined,
    StandardsControlDescription: __expectString(output.StandardsControlDescription),
    StandardsControlTitle: __expectString(output.StandardsControlTitle),
    UpdatedAt:
      output.UpdatedAt != null ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.UpdatedAt)) : undefined,
    UpdatedReason: __expectString(output.UpdatedReason),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationDetails
 */
const de_StandardsControlAssociationDetails = (
  output: any,
  context: __SerdeContext
): StandardsControlAssociationDetail[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StandardsControlAssociationDetail(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationId
 */
const de_StandardsControlAssociationId = (output: any, context: __SerdeContext): StandardsControlAssociationId => {
  return {
    SecurityControlId: __expectString(output.SecurityControlId),
    StandardsArn: __expectString(output.StandardsArn),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationSummaries
 */
const de_StandardsControlAssociationSummaries = (
  output: any,
  context: __SerdeContext
): StandardsControlAssociationSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StandardsControlAssociationSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationSummary
 */
const de_StandardsControlAssociationSummary = (
  output: any,
  context: __SerdeContext
): StandardsControlAssociationSummary => {
  return {
    AssociationStatus: __expectString(output.AssociationStatus),
    RelatedRequirements:
      output.RelatedRequirements != null ? de_RelatedRequirementsList(output.RelatedRequirements, context) : undefined,
    SecurityControlArn: __expectString(output.SecurityControlArn),
    SecurityControlId: __expectString(output.SecurityControlId),
    StandardsArn: __expectString(output.StandardsArn),
    StandardsControlDescription: __expectString(output.StandardsControlDescription),
    StandardsControlTitle: __expectString(output.StandardsControlTitle),
    UpdatedAt:
      output.UpdatedAt != null ? __expectNonNull(__parseRfc3339DateTimeWithOffset(output.UpdatedAt)) : undefined,
    UpdatedReason: __expectString(output.UpdatedReason),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsControlAssociationUpdate
 */
const de_StandardsControlAssociationUpdate = (
  output: any,
  context: __SerdeContext
): StandardsControlAssociationUpdate => {
  return {
    AssociationStatus: __expectString(output.AssociationStatus),
    SecurityControlId: __expectString(output.SecurityControlId),
    StandardsArn: __expectString(output.StandardsArn),
    UpdatedReason: __expectString(output.UpdatedReason),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsControls
 */
const de_StandardsControls = (output: any, context: __SerdeContext): StandardsControl[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StandardsControl(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StandardsInputParameterMap
 */
const de_StandardsInputParameterMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_restJson1StandardsManagedBy
 */
const de_StandardsManagedBy = (output: any, context: __SerdeContext): StandardsManagedBy => {
  return {
    Company: __expectString(output.Company),
    Product: __expectString(output.Product),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsStatusReason
 */
const de_StandardsStatusReason = (output: any, context: __SerdeContext): StandardsStatusReason => {
  return {
    StatusReasonCode: __expectString(output.StatusReasonCode),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsSubscription
 */
const de_StandardsSubscription = (output: any, context: __SerdeContext): StandardsSubscription => {
  return {
    StandardsArn: __expectString(output.StandardsArn),
    StandardsInput:
      output.StandardsInput != null ? de_StandardsInputParameterMap(output.StandardsInput, context) : undefined,
    StandardsStatus: __expectString(output.StandardsStatus),
    StandardsStatusReason:
      output.StandardsStatusReason != null
        ? de_StandardsStatusReason(output.StandardsStatusReason, context)
        : undefined,
    StandardsSubscriptionArn: __expectString(output.StandardsSubscriptionArn),
  } as any;
};

/**
 * deserializeAws_restJson1StandardsSubscriptions
 */
const de_StandardsSubscriptions = (output: any, context: __SerdeContext): StandardsSubscription[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StandardsSubscription(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StatelessCustomActionDefinition
 */
const de_StatelessCustomActionDefinition = (output: any, context: __SerdeContext): StatelessCustomActionDefinition => {
  return {
    PublishMetricAction:
      output.PublishMetricAction != null
        ? de_StatelessCustomPublishMetricAction(output.PublishMetricAction, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1StatelessCustomPublishMetricAction
 */
const de_StatelessCustomPublishMetricAction = (
  output: any,
  context: __SerdeContext
): StatelessCustomPublishMetricAction => {
  return {
    Dimensions:
      output.Dimensions != null
        ? de_StatelessCustomPublishMetricActionDimensionsList(output.Dimensions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1StatelessCustomPublishMetricActionDimension
 */
const de_StatelessCustomPublishMetricActionDimension = (
  output: any,
  context: __SerdeContext
): StatelessCustomPublishMetricActionDimension => {
  return {
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1StatelessCustomPublishMetricActionDimensionsList
 */
const de_StatelessCustomPublishMetricActionDimensionsList = (
  output: any,
  context: __SerdeContext
): StatelessCustomPublishMetricActionDimension[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StatelessCustomPublishMetricActionDimension(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StatusReason
 */
const de_StatusReason = (output: any, context: __SerdeContext): StatusReason => {
  return {
    Description: __expectString(output.Description),
    ReasonCode: __expectString(output.ReasonCode),
  } as any;
};

/**
 * deserializeAws_restJson1StatusReasonsList
 */
const de_StatusReasonsList = (output: any, context: __SerdeContext): StatusReason[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StatusReason(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StringFilter
 */
const de_StringFilter = (output: any, context: __SerdeContext): StringFilter => {
  return {
    Comparison: __expectString(output.Comparison),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1StringFilterList
 */
const de_StringFilterList = (output: any, context: __SerdeContext): StringFilter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StringFilter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1StringList
 */
const de_StringList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1TagMap
 */
const de_TagMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_restJson1Threat
 */
const de_Threat = (output: any, context: __SerdeContext): Threat => {
  return {
    FilePaths: output.FilePaths != null ? de_FilePathList(output.FilePaths, context) : undefined,
    ItemCount: __expectInt32(output.ItemCount),
    Name: __expectString(output.Name),
    Severity: __expectString(output.Severity),
  } as any;
};

/**
 * deserializeAws_restJson1ThreatIntelIndicator
 */
const de_ThreatIntelIndicator = (output: any, context: __SerdeContext): ThreatIntelIndicator => {
  return {
    Category: __expectString(output.Category),
    LastObservedAt: __expectString(output.LastObservedAt),
    Source: __expectString(output.Source),
    SourceUrl: __expectString(output.SourceUrl),
    Type: __expectString(output.Type),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_restJson1ThreatIntelIndicatorList
 */
const de_ThreatIntelIndicatorList = (output: any, context: __SerdeContext): ThreatIntelIndicator[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ThreatIntelIndicator(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1ThreatList
 */
const de_ThreatList = (output: any, context: __SerdeContext): Threat[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Threat(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1TypeList
 */
const de_TypeList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_restJson1UnprocessedSecurityControl
 */
const de_UnprocessedSecurityControl = (output: any, context: __SerdeContext): UnprocessedSecurityControl => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorReason: __expectString(output.ErrorReason),
    SecurityControlId: __expectString(output.SecurityControlId),
  } as any;
};

/**
 * deserializeAws_restJson1UnprocessedSecurityControls
 */
const de_UnprocessedSecurityControls = (output: any, context: __SerdeContext): UnprocessedSecurityControl[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_UnprocessedSecurityControl(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1UnprocessedStandardsControlAssociation
 */
const de_UnprocessedStandardsControlAssociation = (
  output: any,
  context: __SerdeContext
): UnprocessedStandardsControlAssociation => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorReason: __expectString(output.ErrorReason),
    StandardsControlAssociationId:
      output.StandardsControlAssociationId != null
        ? de_StandardsControlAssociationId(output.StandardsControlAssociationId, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1UnprocessedStandardsControlAssociations
 */
const de_UnprocessedStandardsControlAssociations = (
  output: any,
  context: __SerdeContext
): UnprocessedStandardsControlAssociation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_UnprocessedStandardsControlAssociation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1UnprocessedStandardsControlAssociationUpdate
 */
const de_UnprocessedStandardsControlAssociationUpdate = (
  output: any,
  context: __SerdeContext
): UnprocessedStandardsControlAssociationUpdate => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorReason: __expectString(output.ErrorReason),
    StandardsControlAssociationUpdate:
      output.StandardsControlAssociationUpdate != null
        ? de_StandardsControlAssociationUpdate(output.StandardsControlAssociationUpdate, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1UnprocessedStandardsControlAssociationUpdates
 */
const de_UnprocessedStandardsControlAssociationUpdates = (
  output: any,
  context: __SerdeContext
): UnprocessedStandardsControlAssociationUpdate[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_UnprocessedStandardsControlAssociationUpdate(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1VolumeMount
 */
const de_VolumeMount = (output: any, context: __SerdeContext): VolumeMount => {
  return {
    MountPath: __expectString(output.MountPath),
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_restJson1VolumeMountList
 */
const de_VolumeMountList = (output: any, context: __SerdeContext): VolumeMount[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_VolumeMount(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1VpcInfoCidrBlockSetDetails
 */
const de_VpcInfoCidrBlockSetDetails = (output: any, context: __SerdeContext): VpcInfoCidrBlockSetDetails => {
  return {
    CidrBlock: __expectString(output.CidrBlock),
  } as any;
};

/**
 * deserializeAws_restJson1VpcInfoCidrBlockSetList
 */
const de_VpcInfoCidrBlockSetList = (output: any, context: __SerdeContext): VpcInfoCidrBlockSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_VpcInfoCidrBlockSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1VpcInfoIpv6CidrBlockSetDetails
 */
const de_VpcInfoIpv6CidrBlockSetDetails = (output: any, context: __SerdeContext): VpcInfoIpv6CidrBlockSetDetails => {
  return {
    Ipv6CidrBlock: __expectString(output.Ipv6CidrBlock),
  } as any;
};

/**
 * deserializeAws_restJson1VpcInfoIpv6CidrBlockSetList
 */
const de_VpcInfoIpv6CidrBlockSetList = (output: any, context: __SerdeContext): VpcInfoIpv6CidrBlockSetDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_VpcInfoIpv6CidrBlockSetDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1VpcInfoPeeringOptionsDetails
 */
const de_VpcInfoPeeringOptionsDetails = (output: any, context: __SerdeContext): VpcInfoPeeringOptionsDetails => {
  return {
    AllowDnsResolutionFromRemoteVpc: __expectBoolean(output.AllowDnsResolutionFromRemoteVpc),
    AllowEgressFromLocalClassicLinkToRemoteVpc: __expectBoolean(output.AllowEgressFromLocalClassicLinkToRemoteVpc),
    AllowEgressFromLocalVpcToRemoteClassicLink: __expectBoolean(output.AllowEgressFromLocalVpcToRemoteClassicLink),
  } as any;
};

/**
 * deserializeAws_restJson1Vulnerability
 */
const de_Vulnerability = (output: any, context: __SerdeContext): Vulnerability => {
  return {
    Cvss: output.Cvss != null ? de_CvssList(output.Cvss, context) : undefined,
    FixAvailable: __expectString(output.FixAvailable),
    Id: __expectString(output.Id),
    ReferenceUrls: output.ReferenceUrls != null ? de_StringList(output.ReferenceUrls, context) : undefined,
    RelatedVulnerabilities:
      output.RelatedVulnerabilities != null ? de_StringList(output.RelatedVulnerabilities, context) : undefined,
    Vendor: output.Vendor != null ? de_VulnerabilityVendor(output.Vendor, context) : undefined,
    VulnerablePackages:
      output.VulnerablePackages != null ? de_SoftwarePackageList(output.VulnerablePackages, context) : undefined,
  } as any;
};

/**
 * deserializeAws_restJson1VulnerabilityList
 */
const de_VulnerabilityList = (output: any, context: __SerdeContext): Vulnerability[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Vulnerability(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1VulnerabilityVendor
 */
const de_VulnerabilityVendor = (output: any, context: __SerdeContext): VulnerabilityVendor => {
  return {
    Name: __expectString(output.Name),
    Url: __expectString(output.Url),
    VendorCreatedAt: __expectString(output.VendorCreatedAt),
    VendorSeverity: __expectString(output.VendorSeverity),
    VendorUpdatedAt: __expectString(output.VendorUpdatedAt),
  } as any;
};

/**
 * deserializeAws_restJson1WafAction
 */
const de_WafAction = (output: any, context: __SerdeContext): WafAction => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1WafExcludedRule
 */
const de_WafExcludedRule = (output: any, context: __SerdeContext): WafExcludedRule => {
  return {
    RuleId: __expectString(output.RuleId),
  } as any;
};

/**
 * deserializeAws_restJson1WafExcludedRuleList
 */
const de_WafExcludedRuleList = (output: any, context: __SerdeContext): WafExcludedRule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_WafExcludedRule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_restJson1WafOverrideAction
 */
const de_WafOverrideAction = (output: any, context: __SerdeContext): WafOverrideAction => {
  return {
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_restJson1Workflow
 */
const de_Workflow = (output: any, context: __SerdeContext): Workflow => {
  return {
    Status: __expectString(output.Status),
  } as any;
};

const deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({
  httpStatusCode: output.statusCode,
  requestId:
    output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"],
});

// Collect low-level response body stream to Uint8Array.
const collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {
  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }
  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};

// Encode Uint8Array data into string with utf-8.
const collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>
  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));

const isSerializableHeaderValue = (value: any): boolean =>
  value !== undefined &&
  value !== null &&
  value !== "" &&
  (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) &&
  (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);

const parseBody = (streamBody: any, context: __SerdeContext): any =>
  collectBodyString(streamBody, context).then((encoded) => {
    if (encoded.length) {
      return JSON.parse(encoded);
    }
    return {};
  });

const parseErrorBody = async (errorBody: any, context: __SerdeContext) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
};

/**
 * Load an error code for the aws.rest-json-1.1 protocol.
 */
const loadRestJsonErrorCode = (output: __HttpResponse, data: any): string | undefined => {
  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());

  const sanitizeErrorCode = (rawValue: string | number): string => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  };

  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== undefined) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }

  if (data.code !== undefined) {
    return sanitizeErrorCode(data.code);
  }

  if (data["__type"] !== undefined) {
    return sanitizeErrorCode(data["__type"]);
  }
};
