// smithy-typescript generated code
import { getEndpointPlugin } from "@smithy/middleware-endpoint";
import { getSerdePlugin } from "@smithy/middleware-serde";
import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";

import { commonParams } from "../endpoint/EndpointParameters";
import { GuardDutyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../GuardDutyClient";
import { GetMalwareScanSettingsRequest, GetMalwareScanSettingsResponse } from "../models/models_0";
import { de_GetMalwareScanSettingsCommand, se_GetMalwareScanSettingsCommand } from "../protocols/Aws_restJson1";

/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link GetMalwareScanSettingsCommand}.
 */
export interface GetMalwareScanSettingsCommandInput extends GetMalwareScanSettingsRequest {}
/**
 * @public
 *
 * The output of {@link GetMalwareScanSettingsCommand}.
 */
export interface GetMalwareScanSettingsCommandOutput extends GetMalwareScanSettingsResponse, __MetadataBearer {}

/**
 * <p>Returns the details of the malware scan settings.</p>
 *          <p>There might be regional differences because some data sources might not be
 *       available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more
 *       information, see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html">Regions and endpoints</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { GuardDutyClient, GetMalwareScanSettingsCommand } from "@aws-sdk/client-guardduty"; // ES Modules import
 * // const { GuardDutyClient, GetMalwareScanSettingsCommand } = require("@aws-sdk/client-guardduty"); // CommonJS import
 * const client = new GuardDutyClient(config);
 * const input = { // GetMalwareScanSettingsRequest
 *   DetectorId: "STRING_VALUE", // required
 * };
 * const command = new GetMalwareScanSettingsCommand(input);
 * const response = await client.send(command);
 * // { // GetMalwareScanSettingsResponse
 * //   ScanResourceCriteria: { // ScanResourceCriteria
 * //     Include: { // ScanCriterion
 * //       "<keys>": { // ScanCondition
 * //         MapEquals: [ // MapEquals // required
 * //           { // ScanConditionPair
 * //             Key: "STRING_VALUE", // required
 * //             Value: "STRING_VALUE",
 * //           },
 * //         ],
 * //       },
 * //     },
 * //     Exclude: {
 * //       "<keys>": {
 * //         MapEquals: [ // required
 * //           {
 * //             Key: "STRING_VALUE", // required
 * //             Value: "STRING_VALUE",
 * //           },
 * //         ],
 * //       },
 * //     },
 * //   },
 * //   EbsSnapshotPreservation: "NO_RETENTION" || "RETENTION_WITH_FINDING",
 * // };
 *
 * ```
 *
 * @param GetMalwareScanSettingsCommandInput - {@link GetMalwareScanSettingsCommandInput}
 * @returns {@link GetMalwareScanSettingsCommandOutput}
 * @see {@link GetMalwareScanSettingsCommandInput} for command's `input` shape.
 * @see {@link GetMalwareScanSettingsCommandOutput} for command's `response` shape.
 * @see {@link GuardDutyClientResolvedConfig | config} for GuardDutyClient's `config` shape.
 *
 * @throws {@link BadRequestException} (client fault)
 *  <p>A bad request exception object.</p>
 *
 * @throws {@link InternalServerErrorException} (server fault)
 *  <p>An internal server error exception object.</p>
 *
 * @throws {@link GuardDutyServiceException}
 * <p>Base exception class for all service exceptions from GuardDuty service.</p>
 *
 * @public
 */
export class GetMalwareScanSettingsCommand extends $Command
  .classBuilder<
    GetMalwareScanSettingsCommandInput,
    GetMalwareScanSettingsCommandOutput,
    GuardDutyClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >()
  .ep({
    ...commonParams,
  })
  .m(function (this: any, Command: any, cs: any, config: GuardDutyClientResolvedConfig, o: any) {
    return [
      getSerdePlugin(config, this.serialize, this.deserialize),
      getEndpointPlugin(config, Command.getEndpointParameterInstructions()),
    ];
  })
  .s("GuardDutyAPIService", "GetMalwareScanSettings", {})
  .n("GuardDutyClient", "GetMalwareScanSettingsCommand")
  .f(void 0, void 0)
  .ser(se_GetMalwareScanSettingsCommand)
  .de(de_GetMalwareScanSettingsCommand)
  .build() {}
