// smithy-typescript generated code
import { getEndpointPlugin } from "@smithy/middleware-endpoint";
import { getSerdePlugin } from "@smithy/middleware-serde";
import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";

import { commonParams } from "../endpoint/EndpointParameters";
import { ListRetrievedTracesRequest, ListRetrievedTracesResult } from "../models/models_0";
import { de_ListRetrievedTracesCommand, se_ListRetrievedTracesCommand } from "../protocols/Aws_restJson1";
import { ServiceInputTypes, ServiceOutputTypes, XRayClientResolvedConfig } from "../XRayClient";

/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link ListRetrievedTracesCommand}.
 */
export interface ListRetrievedTracesCommandInput extends ListRetrievedTracesRequest {}
/**
 * @public
 *
 * The output of {@link ListRetrievedTracesCommand}.
 */
export interface ListRetrievedTracesCommandOutput extends ListRetrievedTracesResult, __MetadataBearer {}

/**
 * <p>
 *   Retrieves a list of traces for a given <code>RetrievalToken</code> from the CloudWatch log group generated by Transaction Search. For information on what each trace returns, see <a href="https://docs.aws.amazon.com/xray/latest/api/API_BatchGetTraces.html">BatchGetTraces</a>.
 * </p>
 *          <p>This API does not initiate a retrieval job. To start a trace retrieval, use <code>StartTraceRetrieval</code>, which generates the required <code>RetrievalToken</code>.</p>
 *          <p>
 *     When the <code>RetrievalStatus</code> is not <i>COMPLETE</i>, the API will return an empty response. Retry the request once the retrieval has completed to access the full list of traces.</p>
 *          <p>For cross-account observability, this API can retrieve traces from linked accounts when CloudWatch log is the destination across relevant accounts. For more details, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Unified-Cross-Account.html">CloudWatch cross-account observability</a>.</p>
 *          <p>For retrieving data from X-Ray directly as opposed to the Transaction-Search Log group, see <a href="https://docs.aws.amazon.com/xray/latest/api/API_BatchGetTraces.html">BatchGetTraces</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { XRayClient, ListRetrievedTracesCommand } from "@aws-sdk/client-xray"; // ES Modules import
 * // const { XRayClient, ListRetrievedTracesCommand } = require("@aws-sdk/client-xray"); // CommonJS import
 * const client = new XRayClient(config);
 * const input = { // ListRetrievedTracesRequest
 *   RetrievalToken: "STRING_VALUE", // required
 *   TraceFormat: "XRAY" || "OTEL",
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new ListRetrievedTracesCommand(input);
 * const response = await client.send(command);
 * // { // ListRetrievedTracesResult
 * //   RetrievalStatus: "SCHEDULED" || "RUNNING" || "COMPLETE" || "FAILED" || "CANCELLED" || "TIMEOUT",
 * //   TraceFormat: "XRAY" || "OTEL",
 * //   Traces: [ // TraceSpanList
 * //     { // RetrievedTrace
 * //       Id: "STRING_VALUE",
 * //       Duration: Number("double"),
 * //       Spans: [ // SpanList
 * //         { // Span
 * //           Id: "STRING_VALUE",
 * //           Document: "STRING_VALUE",
 * //         },
 * //       ],
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListRetrievedTracesCommandInput - {@link ListRetrievedTracesCommandInput}
 * @returns {@link ListRetrievedTracesCommandOutput}
 * @see {@link ListRetrievedTracesCommandInput} for command's `input` shape.
 * @see {@link ListRetrievedTracesCommandOutput} for command's `response` shape.
 * @see {@link XRayClientResolvedConfig | config} for XRayClient's `config` shape.
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>The request is missing required parameters or has invalid parameters.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The resource was not found. Verify that the name or Amazon Resource Name (ARN) of the resource is
 *       correct.</p>
 *
 * @throws {@link ThrottledException} (client fault)
 *  <p>The request exceeds the maximum number of requests per second.</p>
 *
 * @throws {@link XRayServiceException}
 * <p>Base exception class for all service exceptions from XRay service.</p>
 *
 *
 * @public
 */
export class ListRetrievedTracesCommand extends $Command
  .classBuilder<
    ListRetrievedTracesCommandInput,
    ListRetrievedTracesCommandOutput,
    XRayClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >()
  .ep(commonParams)
  .m(function (this: any, Command: any, cs: any, config: XRayClientResolvedConfig, o: any) {
    return [
      getSerdePlugin(config, this.serialize, this.deserialize),
      getEndpointPlugin(config, Command.getEndpointParameterInstructions()),
    ];
  })
  .s("AWSXRay", "ListRetrievedTraces", {})
  .n("XRayClient", "ListRetrievedTracesCommand")
  .f(void 0, void 0)
  .ser(se_ListRetrievedTracesCommand)
  .de(de_ListRetrievedTracesCommand)
  .build() {
  /** @internal type navigation helper, not in runtime. */
  protected declare static __types: {
    api: {
      input: ListRetrievedTracesRequest;
      output: ListRetrievedTracesResult;
    };
    sdk: {
      input: ListRetrievedTracesCommandInput;
      output: ListRetrievedTracesCommandOutput;
    };
  };
}
