// smithy-typescript generated code
import { getEndpointPlugin } from "@smithy/middleware-endpoint";
import { getSerdePlugin } from "@smithy/middleware-serde";
import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";

import { commonParams } from "../endpoint/EndpointParameters";
import { GetRetrievedTracesGraphRequest, GetRetrievedTracesGraphResult } from "../models/models_0";
import { de_GetRetrievedTracesGraphCommand, se_GetRetrievedTracesGraphCommand } from "../protocols/Aws_restJson1";
import { ServiceInputTypes, ServiceOutputTypes, XRayClientResolvedConfig } from "../XRayClient";

/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link GetRetrievedTracesGraphCommand}.
 */
export interface GetRetrievedTracesGraphCommandInput extends GetRetrievedTracesGraphRequest {}
/**
 * @public
 *
 * The output of {@link GetRetrievedTracesGraphCommand}.
 */
export interface GetRetrievedTracesGraphCommandOutput extends GetRetrievedTracesGraphResult, __MetadataBearer {}

/**
 * <p>
 *   Retrieves a service graph for traces based on the specified <code>RetrievalToken</code> from the CloudWatch log group generated by Transaction Search. This API does not initiate a retrieval job. You must first execute <code>StartTraceRetrieval</code> to obtain the required <code>RetrievalToken</code>.
 * </p>
 *          <p>The trace graph describes services that process incoming requests and any downstream services they call, which may include Amazon Web Services resources, external APIs, or databases.</p>
 *          <p>The response is empty until the <code>RetrievalStatus</code> is <i>COMPLETE</i>. Retry the request after the status changes from <i>RUNNING</i> or <i>SCHEDULED</i> to <i>COMPLETE</i> to access the full service graph.</p>
 *          <p>
 *     When CloudWatch log is the destination, this API can support cross-account observability and service graph retrieval across linked accounts.</p>
 *          <p>For retrieving graphs from X-Ray directly as opposed to the Transaction-Search Log group, see <a href="https://docs.aws.amazon.com/xray/latest/api/API_GetTraceGraph.html">GetTraceGraph</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { XRayClient, GetRetrievedTracesGraphCommand } from "@aws-sdk/client-xray"; // ES Modules import
 * // const { XRayClient, GetRetrievedTracesGraphCommand } = require("@aws-sdk/client-xray"); // CommonJS import
 * const client = new XRayClient(config);
 * const input = { // GetRetrievedTracesGraphRequest
 *   RetrievalToken: "STRING_VALUE", // required
 *   NextToken: "STRING_VALUE",
 * };
 * const command = new GetRetrievedTracesGraphCommand(input);
 * const response = await client.send(command);
 * // { // GetRetrievedTracesGraphResult
 * //   RetrievalStatus: "SCHEDULED" || "RUNNING" || "COMPLETE" || "FAILED" || "CANCELLED" || "TIMEOUT",
 * //   Services: [ // RetrievedServicesList
 * //     { // RetrievedService
 * //       Service: { // Service
 * //         ReferenceId: Number("int"),
 * //         Name: "STRING_VALUE",
 * //         Names: [ // ServiceNames
 * //           "STRING_VALUE",
 * //         ],
 * //         Root: true || false,
 * //         AccountId: "STRING_VALUE",
 * //         Type: "STRING_VALUE",
 * //         State: "STRING_VALUE",
 * //         StartTime: new Date("TIMESTAMP"),
 * //         EndTime: new Date("TIMESTAMP"),
 * //         Edges: [ // EdgeList
 * //           { // Edge
 * //             ReferenceId: Number("int"),
 * //             StartTime: new Date("TIMESTAMP"),
 * //             EndTime: new Date("TIMESTAMP"),
 * //             SummaryStatistics: { // EdgeStatistics
 * //               OkCount: Number("long"),
 * //               ErrorStatistics: { // ErrorStatistics
 * //                 ThrottleCount: Number("long"),
 * //                 OtherCount: Number("long"),
 * //                 TotalCount: Number("long"),
 * //               },
 * //               FaultStatistics: { // FaultStatistics
 * //                 OtherCount: Number("long"),
 * //                 TotalCount: Number("long"),
 * //               },
 * //               TotalCount: Number("long"),
 * //               TotalResponseTime: Number("double"),
 * //             },
 * //             ResponseTimeHistogram: [ // Histogram
 * //               { // HistogramEntry
 * //                 Value: Number("double"),
 * //                 Count: Number("int"),
 * //               },
 * //             ],
 * //             Aliases: [ // AliasList
 * //               { // Alias
 * //                 Name: "STRING_VALUE",
 * //                 Names: [ // AliasNames
 * //                   "STRING_VALUE",
 * //                 ],
 * //                 Type: "STRING_VALUE",
 * //               },
 * //             ],
 * //             EdgeType: "STRING_VALUE",
 * //             ReceivedEventAgeHistogram: [
 * //               {
 * //                 Value: Number("double"),
 * //                 Count: Number("int"),
 * //               },
 * //             ],
 * //           },
 * //         ],
 * //         SummaryStatistics: { // ServiceStatistics
 * //           OkCount: Number("long"),
 * //           ErrorStatistics: {
 * //             ThrottleCount: Number("long"),
 * //             OtherCount: Number("long"),
 * //             TotalCount: Number("long"),
 * //           },
 * //           FaultStatistics: {
 * //             OtherCount: Number("long"),
 * //             TotalCount: Number("long"),
 * //           },
 * //           TotalCount: Number("long"),
 * //           TotalResponseTime: Number("double"),
 * //         },
 * //         DurationHistogram: [
 * //           {
 * //             Value: Number("double"),
 * //             Count: Number("int"),
 * //           },
 * //         ],
 * //         ResponseTimeHistogram: [
 * //           {
 * //             Value: Number("double"),
 * //             Count: Number("int"),
 * //           },
 * //         ],
 * //       },
 * //       Links: [ // LinksList
 * //         { // GraphLink
 * //           ReferenceType: "STRING_VALUE",
 * //           SourceTraceId: "STRING_VALUE",
 * //           DestinationTraceIds: [ // TraceIdList
 * //             "STRING_VALUE",
 * //           ],
 * //         },
 * //       ],
 * //     },
 * //   ],
 * //   NextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param GetRetrievedTracesGraphCommandInput - {@link GetRetrievedTracesGraphCommandInput}
 * @returns {@link GetRetrievedTracesGraphCommandOutput}
 * @see {@link GetRetrievedTracesGraphCommandInput} for command's `input` shape.
 * @see {@link GetRetrievedTracesGraphCommandOutput} for command's `response` shape.
 * @see {@link XRayClientResolvedConfig | config} for XRayClient's `config` shape.
 *
 * @throws {@link InvalidRequestException} (client fault)
 *  <p>The request is missing required parameters or has invalid parameters.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The resource was not found. Verify that the name or Amazon Resource Name (ARN) of the resource is
 *       correct.</p>
 *
 * @throws {@link ThrottledException} (client fault)
 *  <p>The request exceeds the maximum number of requests per second.</p>
 *
 * @throws {@link XRayServiceException}
 * <p>Base exception class for all service exceptions from XRay service.</p>
 *
 *
 * @public
 */
export class GetRetrievedTracesGraphCommand extends $Command
  .classBuilder<
    GetRetrievedTracesGraphCommandInput,
    GetRetrievedTracesGraphCommandOutput,
    XRayClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >()
  .ep(commonParams)
  .m(function (this: any, Command: any, cs: any, config: XRayClientResolvedConfig, o: any) {
    return [
      getSerdePlugin(config, this.serialize, this.deserialize),
      getEndpointPlugin(config, Command.getEndpointParameterInstructions()),
    ];
  })
  .s("AWSXRay", "GetRetrievedTracesGraph", {})
  .n("XRayClient", "GetRetrievedTracesGraphCommand")
  .f(void 0, void 0)
  .ser(se_GetRetrievedTracesGraphCommand)
  .de(de_GetRetrievedTracesGraphCommand)
  .build() {
  /** @internal type navigation helper, not in runtime. */
  protected declare static __types: {
    api: {
      input: GetRetrievedTracesGraphRequest;
      output: GetRetrievedTracesGraphResult;
    };
    sdk: {
      input: GetRetrievedTracesGraphCommandInput;
      output: GetRetrievedTracesGraphCommandOutput;
    };
  };
}
