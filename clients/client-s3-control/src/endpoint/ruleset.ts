// @ts-nocheck
// generated code, do not edit
import { RuleSetObject } from "@smithy/types";

/* This file is compressed. Log this object
   or see "smithy.rules#endpointRuleSet"
   in codegen/sdk-codegen/aws-models/s3-control.json */

const aC="required",
aD="type",
aE="conditions",
aF="fn",
aG="argv",
aH="ref",
aI="assign",
aJ="authSchemes",
aK="disableDoubleEncoding",
aL="name",
aM="signingName",
aN="signingRegion",
aO="x-amz-account-id",
aP="x-amz-outpost-id";
const a=false,
b=true,
c="isSet",
d="stringEquals",
e="aws.partition",
f="error",
g="{Region}",
h="endpoint",
i="tree",
j="getAttr",
k="not",
l="isValidHostLabel",
m="{url#scheme}://{url#authority}{url#path}",
n="s3-outposts",
o="aws.parseArn",
p="accessPointArn",
q="resourceId[0]",
r="arnType",
s="service",
t="resourceId[1]",
u="outpostId",
v="arnPartition",
w="{accessPointArn#accountId}",
x="resourceId[2]",
y="outpostType",
z="resourceId[3]",
A="bucketArn",
B="{bucketArn#accountId}",
C={[aC]:false,[aD]:"String"},
D={[aC]:true,"default":false,[aD]:"Boolean"},
E={[aC]:false,[aD]:"Boolean"},
F={[aH]:"Region"},
G={[aF]:c,[aG]:[{[aH]:"Endpoint"}]},
H={[aF]:"parseURL",[aG]:[{[aH]:"Endpoint"}],[aI]:"url"},
I={[aF]:"booleanEquals",[aG]:[{[aH]:"UseDualStack"},true]},
J={[aF]:"booleanEquals",[aG]:[{[aH]:"UseFIPS"},true]},
K={[aJ]:[{[aK]:true,[aL]:"sigv4",[aM]:"s3",[aN]:g}]},
L={},
M={[aH]:"OutpostId"},
N={[aE]:[J,{[aF]:d,[aG]:[{[aF]:j,[aG]:[{[aH]:"partitionResult"},"name"]},"aws-cn"]}],[f]:"Partition does not support FIPS",[aD]:f},
O={[aE]:[{[aF]:c,[aG]:[{[aH]:"RequiresAccountId"}]},{[aF]:"booleanEquals",[aG]:[{[aH]:"RequiresAccountId"},true]},{[aF]:k,[aG]:[{[aF]:c,[aG]:[{[aH]:"AccountId"}]}]}],[f]:"AccountId is required but not set",[aD]:f},
P={[aF]:c,[aG]:[{[aH]:"RequiresAccountId"}]},
Q={[aF]:"booleanEquals",[aG]:[{[aH]:"RequiresAccountId"},true]},
R={[aF]:c,[aG]:[{[aH]:"AccountId"}]},
S={[aH]:"AccountId"},
T={[aE]:[R,{[aF]:k,[aG]:[{[aF]:l,[aG]:[S,false]}]}],[f]:"AccountId must only contain a-z, A-Z, 0-9 and `-`.",[aD]:f},
U={[aJ]:[{[aK]:true,[aL]:"sigv4",[aM]:n,[aN]:g}]},
V={[f]:"Invalid region: region was not a valid DNS name.",[aD]:f},
W={[aH]:p},
X={[aF]:k,[aG]:[{[aF]:d,[aG]:[{[aH]:r},""]}]},
Y={[aF]:c,[aG]:[{[aH]:"UseArnRegion"}]},
Z={[aF]:"booleanEquals",[aG]:[{[aH]:"UseArnRegion"},false]},
aa={[aF]:j,[aG]:[W,"region"]},
ab={[aF]:j,[aG]:[W,"accountId"]},
ac={[aH]:y},
ad={[aJ]:[{[aK]:true,[aL]:"sigv4",[aM]:n,[aN]:"{accessPointArn#region}"}]},
ae={[aO]:[w],[aP]:["{outpostId}"]},
af={[f]:"Invalid ARN: Expected a 4-component resource",[aD]:f},
ag={[f]:"Invalid ARN: missing account ID",[aD]:f},
ah={[f]:"Client was configured for partition `{partitionResult#name}` but ARN has `{arnPartition#name}`",[aD]:f},
ai={[f]:"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`., found: `{outpostId}`",[aD]:f},
aj={[f]:"Invalid ARN: The Outpost Id was not set",[aD]:f},
ak={[f]:"Invalid ARN: No ARN type specified",[aD]:f},
al={[aH]:A},
am={[aF]:j,[aG]:[al,"region"]},
an={[aF]:j,[aG]:[al,"accountId"]},
ao={[aJ]:[{[aK]:true,[aL]:"sigv4",[aM]:n,[aN]:"{bucketArn#region}"}]},
ap={[aO]:[B],[aP]:["{outpostId}"]},
aq={[aF]:"booleanEquals",[aG]:[{[aH]:"UseDualStack"},false]},
ar={[aF]:"booleanEquals",[aG]:[{[aH]:"UseFIPS"},false]},
as=[F],
at=[{[aF]:e,[aG]:[F],[aI]:"partitionResult"}],
au=[I],
av=[J],
aw=[{[aF]:l,[aG]:[F,true]}],
ax=[G,H],
ay=[{[aH]:"AccessPointName"}],
az=[{[aF]:l,[aG]:[{[aH]:u},false]}],
aA=[{[aF]:d,[aG]:[{[aF]:j,[aG]:[{[aH]:v},"name"]},{[aF]:j,[aG]:[{[aH]:"partitionResult"},"name"]}]}],
aB=[{[aH]:"Bucket"}];
const _data={version:"1.0",parameters:{Region:C,UseFIPS:D,UseDualStack:D,Endpoint:C,AccountId:C,RequiresAccountId:E,OutpostId:C,Bucket:C,AccessPointName:C,UseArnRegion:E},rules:[{[aE]:[{[aF]:c,[aG]:as}],rules:[{[aE]:[{[aF]:d,[aG]:[F,"snow"]},G,H],rules:[{[aE]:at,rules:[{[aE]:au,error:"S3 Snow does not support DualStack",[aD]:f},{[aE]:av,error:"S3 Snow does not support FIPS",[aD]:f},{endpoint:{url:"{url#scheme}://{url#authority}",properties:K,headers:L},[aD]:h}],[aD]:i}],[aD]:i},{[aE]:[{[aF]:c,[aG]:[M]}],rules:[{[aE]:at,rules:[N,O,T,{[aE]:[{[aF]:k,[aG]:[{[aF]:l,[aG]:[M,a]}]}],error:"OutpostId must only contain a-z, A-Z, 0-9 and `-`.",[aD]:f},{[aE]:aw,rules:[{[aE]:au,error:"Invalid configuration: Outposts do not support dual-stack",[aD]:f},{[aE]:ax,endpoint:{url:m,properties:U,headers:L},[aD]:h},{[aE]:av,endpoint:{url:"https://s3-outposts-fips.{Region}.{partitionResult#dnsSuffix}",properties:U,headers:L},[aD]:h},{endpoint:{url:"https://s3-outposts.{Region}.{partitionResult#dnsSuffix}",properties:U,headers:L},[aD]:h}],[aD]:i},V],[aD]:i}],[aD]:i},{[aE]:[{[aF]:c,[aG]:ay},{[aF]:o,[aG]:ay,[aI]:p}],rules:[{[aE]:[{[aF]:j,[aG]:[W,q],[aI]:r},X],rules:[{[aE]:[{[aF]:d,[aG]:[{[aF]:j,[aG]:[W,s]},n]}],rules:[{[aE]:au,error:"Invalid configuration: Outpost Access Points do not support dual-stack",[aD]:f},{[aE]:[{[aF]:j,[aG]:[W,t],[aI]:u}],rules:[{[aE]:az,rules:[{[aE]:[Y,Z,{[aF]:k,[aG]:[{[aF]:d,[aG]:[aa,g]}]}],error:"Invalid configuration: region from ARN `{accessPointArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",[aD]:f},{[aE]:at,rules:[{[aE]:[{[aF]:e,[aG]:[aa],[aI]:v}],rules:[{[aE]:aA,rules:[{[aE]:[{[aF]:l,[aG]:[aa,b]}],rules:[{[aE]:[{[aF]:k,[aG]:[{[aF]:d,[aG]:[ab,""]}]}],rules:[{[aE]:[{[aF]:l,[aG]:[ab,a]}],rules:[{[aE]:[R,{[aF]:k,[aG]:[{[aF]:d,[aG]:[S,w]}]}],error:"Invalid ARN: the accountId specified in the ARN (`{accessPointArn#accountId}`) does not match the parameter (`{AccountId}`)",[aD]:f},{[aE]:[{[aF]:j,[aG]:[W,x],[aI]:y}],rules:[{[aE]:[{[aF]:j,[aG]:[W,z],[aI]:"accessPointName"}],rules:[{[aE]:[{[aF]:d,[aG]:[ac,"accesspoint"]}],rules:[{[aE]:av,endpoint:{url:"https://s3-outposts-fips.{accessPointArn#region}.{arnPartition#dnsSuffix}",properties:ad,headers:ae},[aD]:h},{[aE]:ax,endpoint:{url:m,properties:ad,headers:ae},[aD]:h},{endpoint:{url:"https://s3-outposts.{accessPointArn#region}.{arnPartition#dnsSuffix}",properties:ad,headers:ae},[aD]:h}],[aD]:i},{error:"Expected an outpost type `accesspoint`, found `{outpostType}`",[aD]:f}],[aD]:i},{error:"Invalid ARN: expected an access point name",[aD]:f}],[aD]:i},af],[aD]:i},{error:"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointArn#accountId}`",[aD]:f}],[aD]:i},ag],[aD]:i},{error:"Invalid region in ARN: `{accessPointArn#region}` (invalid DNS name)",[aD]:f}],[aD]:i},ah],[aD]:i}],[aD]:i}],[aD]:i},ai],[aD]:i},aj],[aD]:i}],[aD]:i},ak],[aD]:i},{[aE]:[{[aF]:c,[aG]:aB},{[aF]:o,[aG]:aB,[aI]:A}],rules:[{[aE]:[{[aF]:j,[aG]:[al,q],[aI]:r},X],rules:[{[aE]:[{[aF]:d,[aG]:[{[aF]:j,[aG]:[al,s]},n]}],rules:[{[aE]:au,error:"Invalid configuration: Outpost buckets do not support dual-stack",[aD]:f},{[aE]:[{[aF]:j,[aG]:[al,t],[aI]:u}],rules:[{[aE]:az,rules:[{[aE]:[Y,Z,{[aF]:k,[aG]:[{[aF]:d,[aG]:[am,g]}]}],error:"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",[aD]:f},{[aE]:[{[aF]:e,[aG]:[am],[aI]:v}],rules:[{[aE]:at,rules:[{[aE]:aA,rules:[{[aE]:[{[aF]:l,[aG]:[am,b]}],rules:[{[aE]:[{[aF]:k,[aG]:[{[aF]:d,[aG]:[an,""]}]}],rules:[{[aE]:[{[aF]:l,[aG]:[an,a]}],rules:[{[aE]:[R,{[aF]:k,[aG]:[{[aF]:d,[aG]:[S,B]}]}],error:"Invalid ARN: the accountId specified in the ARN (`{bucketArn#accountId}`) does not match the parameter (`{AccountId}`)",[aD]:f},{[aE]:[{[aF]:j,[aG]:[al,x],[aI]:y}],rules:[{[aE]:[{[aF]:j,[aG]:[al,z],[aI]:"bucketName"}],rules:[{[aE]:[{[aF]:d,[aG]:[ac,"bucket"]}],rules:[{[aE]:av,endpoint:{url:"https://s3-outposts-fips.{bucketArn#region}.{arnPartition#dnsSuffix}",properties:ao,headers:ap},[aD]:h},{[aE]:ax,endpoint:{url:m,properties:ao,headers:ap},[aD]:h},{endpoint:{url:"https://s3-outposts.{bucketArn#region}.{arnPartition#dnsSuffix}",properties:ao,headers:ap},[aD]:h}],[aD]:i},{error:"Invalid ARN: Expected an outpost type `bucket`, found `{outpostType}`",[aD]:f}],[aD]:i},{error:"Invalid ARN: expected a bucket name",[aD]:f}],[aD]:i},af],[aD]:i},{error:"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",[aD]:f}],[aD]:i},ag],[aD]:i},{error:"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",[aD]:f}],[aD]:i},ah],[aD]:i}],[aD]:i}],[aD]:i},ai],[aD]:i},aj],[aD]:i}],[aD]:i},ak],[aD]:i},{[aE]:at,rules:[{[aE]:aw,rules:[N,O,T,{[aE]:ax,rules:[{[aE]:au,error:"Invalid Configuration: DualStack and custom endpoint are not supported",[aD]:f},{[aE]:[P,Q,R],endpoint:{url:"{url#scheme}://{AccountId}.{url#authority}{url#path}",properties:K,headers:L},[aD]:h},{endpoint:{url:m,properties:K,headers:L},[aD]:h}],[aD]:i},{[aE]:[J,I,P,Q,R],endpoint:{url:"https://{AccountId}.s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[J,I],endpoint:{url:"https://s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[J,aq,P,Q,R],endpoint:{url:"https://{AccountId}.s3-control-fips.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[J,aq],endpoint:{url:"https://s3-control-fips.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[ar,I,P,Q,R],endpoint:{url:"https://{AccountId}.s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[ar,I],endpoint:{url:"https://s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[ar,aq,P,Q,R],endpoint:{url:"https://{AccountId}.s3-control.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h},{[aE]:[ar,aq],endpoint:{url:"https://s3-control.{Region}.{partitionResult#dnsSuffix}",properties:K,headers:L},[aD]:h}],[aD]:i},V],[aD]:i}],[aD]:i},{error:"Region must be set",[aD]:f}]};
export const ruleSet: RuleSetObject = _data;
