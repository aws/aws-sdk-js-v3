// @ts-nocheck
// generated code, do not edit
import { RuleSetObject } from "@aws-sdk/util-endpoints";

/* This file is compressed. Log this object
   or see "smithy.rules#endpointRuleSet"
   in codegen/sdk-codegen/aws-models/s3-control.json */

const aA="required",
aB="type",
aC="conditions",
aD="fn",
aE="argv",
aF="ref",
aG="assign",
aH="authSchemes",
aI="name",
aJ="signingRegion",
aK="disableDoubleEncoding",
aL="signingName",
aM="x-amz-account-id",
aN="x-amz-outpost-id";
const a=false,
b=true,
c="tree",
d="isSet",
e="aws.partition",
f="stringEquals",
g="getAttr",
h="error",
i="not",
j="isValidHostLabel",
k="{url#scheme}://{url#authority}{url#path}",
l="{Region}",
m="s3-outposts",
n="endpoint",
o="aws.parseArn",
p="accessPointArn",
q="resourceId[0]",
r="arnType",
s="service",
t="resourceId[1]",
u="outpostId",
v="arnPartition",
w="{accessPointArn#accountId}",
x="resourceId[2]",
y="outpostType",
z="resourceId[3]",
A="bucketArn",
B="{bucketArn#accountId}",
C={[aA]:false,[aB]:"String"},
D={[aA]:true,"default":false,[aB]:"Boolean"},
E={[aA]:false,[aB]:"Boolean"},
F={[aF]:"OutpostId"},
G={[aC]:[{[aD]:"booleanEquals",[aE]:[{[aF]:"UseFIPS"},true]},{[aD]:f,[aE]:[{[aD]:g,[aE]:[{[aF]:"partitionResult"},"name"]},"aws-cn"]}],[h]:"Partition does not support FIPS",[aB]:h},
H={[aD]:"booleanEquals",[aE]:[{[aF]:"UseFIPS"},true]},
I={[aC]:[{[aD]:d,[aE]:[{[aF]:"RequiresAccountId"}]},{[aD]:"booleanEquals",[aE]:[{[aF]:"RequiresAccountId"},true]},{[aD]:i,[aE]:[{[aD]:d,[aE]:[{[aF]:"AccountId"}]}]}],[h]:"AccountId is required but not set",[aB]:h},
J={[aD]:d,[aE]:[{[aF]:"RequiresAccountId"}]},
K={[aD]:"booleanEquals",[aE]:[{[aF]:"RequiresAccountId"},true]},
L={[aD]:d,[aE]:[{[aF]:"AccountId"}]},
M={[aF]:"AccountId"},
N={[aC]:[L,{[aD]:i,[aE]:[{[aD]:j,[aE]:[M,false]}]}],[h]:"AccountId must only contain a-z, A-Z, 0-9 and `-`.",[aB]:h},
O={[aD]:"booleanEquals",[aE]:[{[aF]:"UseDualStack"},true]},
P={[aH]:[{[aI]:"sigv4",[aJ]:l,[aK]:true,[aL]:m}]},
Q={},
R={[h]:"Invalid region: region was not a valid DNS name.",[aB]:h},
S={[h]:"A valid partition could not be determined",[aB]:h},
T={[aF]:p},
U={[aD]:i,[aE]:[{[aD]:f,[aE]:[{[aF]:r},""]}]},
V={[aD]:d,[aE]:[{[aF]:"UseArnRegion"}]},
W={[aD]:"booleanEquals",[aE]:[{[aF]:"UseArnRegion"},false]},
X={[aD]:g,[aE]:[T,"region"]},
Y={[aD]:g,[aE]:[T,"accountId"]},
Z={[aF]:y},
aa={[aH]:[{[aI]:"sigv4",[aJ]:"{accessPointArn#region}",[aK]:true,[aL]:m}]},
ab={[aM]:[w],[aN]:["{outpostId}"]},
ac={[h]:"Invalid ARN: Expected a 4-component resource",[aB]:h},
ad={[h]:"Invalid ARN: missing account ID",[aB]:h},
ae={[h]:"Client was configured for partition `{partitionResult#name}` but ARN has `{arnPartition#name}`",[aB]:h},
af={[h]:"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`., found: `{outpostId}`",[aB]:h},
ag={[h]:"Invalid ARN: The Outpost Id was not set",[aB]:h},
ah={[h]:"Invalid ARN: No ARN type specified",[aB]:h},
ai={[aF]:A},
aj={[aD]:g,[aE]:[ai,"region"]},
ak={[aD]:g,[aE]:[ai,"accountId"]},
al={[aH]:[{[aI]:"sigv4",[aJ]:"{bucketArn#region}",[aK]:true,[aL]:m}]},
am={[aM]:[B],[aN]:["{outpostId}"]},
an={[aH]:[{[aI]:"sigv4",[aJ]:l,[aK]:true,[aL]:"s3"}]},
ao={[aD]:"booleanEquals",[aE]:[{[aF]:"UseDualStack"},false]},
ap={[aD]:"booleanEquals",[aE]:[{[aF]:"UseFIPS"},false]},
aq=[{[aF]:"Region"}],
ar=[{[aD]:e,[aE]:aq,[aG]:"partitionResult"}],
as=[{[aD]:j,[aE]:[{[aF]:"Region"},true]}],
at=[O],
au=[{[aD]:d,[aE]:[{[aF]:"Endpoint"}]},{[aD]:"parseURL",[aE]:[{[aF]:"Endpoint"}],[aG]:"url"}],
av=[H],
aw=[{[aF]:"AccessPointName"}],
ax=[{[aD]:j,[aE]:[{[aF]:u},false]}],
ay=[{[aD]:f,[aE]:[{[aD]:g,[aE]:[{[aF]:v},"name"]},{[aD]:g,[aE]:[{[aF]:"partitionResult"},"name"]}]}],
az=[{[aF]:"Bucket"}];
const _data={version:"1.0",parameters:{Region:C,UseFIPS:D,UseDualStack:D,Endpoint:C,AccountId:C,RequiresAccountId:E,OutpostId:C,Bucket:C,AccessPointName:C,UseArnRegion:E},rules:[{[aB]:c,rules:[{[aC]:[{[aD]:d,[aE]:aq}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:d,[aE]:[F]}],[aB]:c,rules:[{[aC]:ar,[aB]:c,rules:[{[aB]:c,rules:[G,{[aB]:c,rules:[I,{[aB]:c,rules:[N,{[aB]:c,rules:[{[aC]:[{[aD]:i,[aE]:[{[aD]:j,[aE]:[F,a]}]}],error:"OutpostId must only contain a-z, A-Z, 0-9 and `-`.",[aB]:h},{[aB]:c,rules:[{[aC]:as,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:at,error:"Invalid configuration: Outposts do not support dual-stack",[aB]:h},{[aB]:c,rules:[{[aC]:au,endpoint:{url:k,properties:P,headers:Q},[aB]:n},{[aC]:av,endpoint:{url:"https://s3-outposts-fips.{Region}.{partitionResult#dnsSuffix}",properties:P,headers:Q},[aB]:n},{endpoint:{url:"https://s3-outposts.{Region}.{partitionResult#dnsSuffix}",properties:P,headers:Q},[aB]:n}]}]}]},R]}]}]}]}]}]},S]},{[aC]:[{[aD]:d,[aE]:aw},{[aD]:o,[aE]:aw,[aG]:p}],[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[T,q],[aG]:r},U],[aB]:c,rules:[{[aC]:[{[aD]:f,[aE]:[{[aD]:g,[aE]:[T,s]},m]}],[aB]:c,rules:[{[aC]:at,error:"Invalid configuration: Outpost Access Points do not support dual-stack",[aB]:h},{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[T,t],[aG]:u}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:ax,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[V,W,{[aD]:i,[aE]:[{[aD]:f,[aE]:[X,l]}]}],error:"Invalid configuration: region from ARN `{accessPointArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",[aB]:h},{[aB]:c,rules:[{[aC]:ar,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:e,[aE]:[X],[aG]:v}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:ay,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:j,[aE]:[X,b]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:i,[aE]:[{[aD]:f,[aE]:[Y,""]}]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:j,[aE]:[Y,a]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[L,{[aD]:i,[aE]:[{[aD]:f,[aE]:[M,w]}]}],error:"Invalid ARN: the accountId specified in the ARN (`{accessPointArn#accountId}`) does not match the parameter (`{AccountId}`)",[aB]:h},{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[T,x],[aG]:y}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[T,z],[aG]:"accessPointName"}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:f,[aE]:[Z,"accesspoint"]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:av,endpoint:{url:"https://s3-outposts-fips.{accessPointArn#region}.{arnPartition#dnsSuffix}",properties:aa,headers:ab},[aB]:n},{[aC]:au,endpoint:{url:k,properties:aa,headers:ab},[aB]:n},{endpoint:{url:"https://s3-outposts.{accessPointArn#region}.{arnPartition#dnsSuffix}",properties:aa,headers:ab},[aB]:n}]}]},{error:"Expected an outpost type `accesspoint`, found `{outpostType}`",[aB]:h}]}]},{error:"Invalid ARN: expected an access point name",[aB]:h}]}]},ac]}]}]},{error:"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointArn#accountId}`",[aB]:h}]}]},ad]}]},{error:"Invalid region in ARN: `{accessPointArn#region}` (invalid DNS name)",[aB]:h}]}]},ae]}]},{error:"Could not load partition for ARN region `{accessPointArn#region}`",[aB]:h}]}]},S]}]}]},af]}]},ag]}]}]},ah]},{[aC]:[{[aD]:d,[aE]:az},{[aD]:o,[aE]:az,[aG]:A}],[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[ai,q],[aG]:r},U],[aB]:c,rules:[{[aC]:[{[aD]:f,[aE]:[{[aD]:g,[aE]:[ai,s]},m]}],[aB]:c,rules:[{[aC]:at,error:"Invalid configuration: Outpost buckets do not support dual-stack",[aB]:h},{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[ai,t],[aG]:u}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:ax,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[V,W,{[aD]:i,[aE]:[{[aD]:f,[aE]:[aj,l]}]}],error:"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",[aB]:h},{[aB]:c,rules:[{[aC]:[{[aD]:e,[aE]:[aj],[aG]:v}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:ar,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:ay,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:j,[aE]:[aj,b]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:i,[aE]:[{[aD]:f,[aE]:[ak,""]}]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:j,[aE]:[ak,a]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[L,{[aD]:i,[aE]:[{[aD]:f,[aE]:[M,B]}]}],error:"Invalid ARN: the accountId specified in the ARN (`{bucketArn#accountId}`) does not match the parameter (`{AccountId}`)",[aB]:h},{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[ai,x],[aG]:y}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:g,[aE]:[ai,z],[aG]:"bucketName"}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:[{[aD]:f,[aE]:[Z,"bucket"]}],[aB]:c,rules:[{[aB]:c,rules:[{[aC]:av,endpoint:{url:"https://s3-outposts-fips.{bucketArn#region}.{arnPartition#dnsSuffix}",properties:al,headers:am},[aB]:n},{[aC]:au,endpoint:{url:k,properties:al,headers:am},[aB]:n},{endpoint:{url:"https://s3-outposts.{bucketArn#region}.{arnPartition#dnsSuffix}",properties:al,headers:am},[aB]:n}]}]},{error:"Invalid ARN: Expected an outpost type `bucket`, found `{outpostType}`",[aB]:h}]}]},{error:"Invalid ARN: expected a bucket name",[aB]:h}]}]},ac]}]}]},{error:"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",[aB]:h}]}]},ad]}]},{error:"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",[aB]:h}]}]},ae]}]},S]}]},{error:"Could not load partition for ARN region `{bucketArn#region}`",[aB]:h}]}]}]},af]}]},ag]}]}]},ah]},{[aB]:c,rules:[{[aC]:ar,[aB]:c,rules:[{[aB]:c,rules:[{[aC]:as,[aB]:c,rules:[{[aB]:c,rules:[G,{[aB]:c,rules:[I,{[aB]:c,rules:[N,{[aB]:c,rules:[{[aC]:au,[aB]:c,rules:[{[aC]:at,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",[aB]:h},{[aB]:c,rules:[{[aC]:[J,K,L],endpoint:{url:"{url#scheme}://{AccountId}.{url#authority}{url#path}",properties:an,headers:Q},[aB]:n},{endpoint:{url:k,properties:an,headers:Q},[aB]:n}]}]},{[aB]:c,rules:[{[aC]:[H,O,J,K,L],endpoint:{url:"https://{AccountId}.s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[H,O],endpoint:{url:"https://s3-control-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[H,ao,J,K,L],endpoint:{url:"https://{AccountId}.s3-control-fips.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[H,ao],endpoint:{url:"https://s3-control-fips.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[ap,O,J,K,L],endpoint:{url:"https://{AccountId}.s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[ap,O],endpoint:{url:"https://s3-control.dualstack.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[ap,ao,J,K,L],endpoint:{url:"https://{AccountId}.s3-control.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n},{[aC]:[ap,ao],endpoint:{url:"https://s3-control.{Region}.{partitionResult#dnsSuffix}",properties:an,headers:Q},[aB]:n}]}]}]}]}]}]},R]}]},S]}]}]},{error:"Region must be set",[aB]:h}]}]};
export const ruleSet: RuleSetObject = _data;
